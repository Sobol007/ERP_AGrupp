#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.ВыводитьСуммуВыделенныхЯчеек = Ложь;
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.Вставить("РазрешеноИзменятьВарианты", Ложь);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтчета = Неопределено;
	ТаблицаЭлементов = ЭлементыОтчетности(ПараметрыОтчета);
	
	// Подготовим и выведем отчет.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, 
		НастройкиКомпоновкиДанных,
		ДанныеРасшифровки);
		
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ВнешниеНаборыДанных = Новый Структура("ТаблицаЭлементов", ТаблицаЭлементов);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	ПроцессорВывода.ЗакончитьВывод();
	
	ФиксацияСтрокСверху = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ФиксацияСтрокСверху");
	Если ФиксацияСтрокСверху <> Неопределено Тогда
		ДокументРезультат.ФиксацияСверху = ФиксацияСтрокСверху.Значение;
	КонецЕсли;
	
	ФиксацияСтрокСлева = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ФиксацияСтрокСлева");
	Если ФиксацияСтрокСверху <> Неопределено Тогда
		ДокументРезультат.ФиксацияСлева = ФиксацияСтрокСлева.Значение;
	КонецЕсли;
	
	Для Каждого Параметр Из ПараметрыОтчета Цикл
		Если НЕ ЗначениеЗаполнено(Параметр.Значение) Тогда
			ОбластьПараметра = ДокументРезультат.НайтиТекст(Параметр.Представление);
			Если ОбластьПараметра <> Неопределено Тогда
				СтрокаМакета = ДокументРезультат.Область(ОбластьПараметра.Верх,ОбластьПараметра.Лево,ОбластьПараметра.Верх);
				ДокументРезультат.УдалитьОбласть(СтрокаМакета, ТипСмещенияТабличногоДокумента.ПоВертикали);
			КонецЕсли;;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭлементыОтчетности(ПараметрыОтчета)
	
	Перем Счет,ВидСубконто,ЗначениеСубконто;
	
	ПараметрыОтчета = Новый СписокЗначений;
	Параметр = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПланСчетов");
	ЭтоМеждународный = Истина;
	Если Параметр <> Неопределено Тогда
		ЭтоМеждународный = Параметр.Значение;
	КонецЕсли;
	
	Параметр = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "СчетПланаСчетов");
	Если Параметр <> Неопределено Тогда
		Счет = Параметр.Значение;
	КонецЕсли;
	ПараметрыОтчета.Добавить(Счет, НСтр("ru = 'Счет';
										|en = 'Account'")+": ");
	
	Параметр = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ВидСубконто");
	Если Параметр <> Неопределено Тогда
		ВидСубконто = Параметр.Значение;
	КонецЕсли;
	ПараметрыОтчета.Добавить(ВидСубконто, НСтр("ru = 'Вид субконто';
												|en = 'Extra dimension type'")+": ");
	
	Параметр = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, ?(ЭтоМеждународный,"ЗначениеСубконтоМежд","ЗначениеСубконтоРегл"));
	Если Параметр <> Неопределено Тогда
		ЗначениеСубконто = Параметр.Значение;
	КонецЕсли;
	ПараметрыОтчета.Добавить(ЗначениеСубконто, НСтр("ru = 'Субконто';
													|en = 'Extra dimension'")+": ");
	
	// Проверим, указано ли что-нибудь для поиска
	Если НЕ ЗначениеЗаполнено(Счет)
		И НЕ ЗначениеЗаполнено(ВидСубконто)
		И НЕ ЗначениеЗаполнено(ЗначениеСубконто) Тогда
		ВызватьИсключение НСтр("ru = 'Отчет не сформирован. Необходимо выбрать счет, вид субконто или значение субконто.';
								|en = 'Report is not generated. Select an account, extra dimension type or extra dimension value.'") ;
	КонецЕсли;
	
	КомпоновщикНастроек.Настройки.Структура[1].Использование = ЗначениеЗаполнено(Счет) И ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Международный");
	
	Схема = ПолучитьМакет("ПоказателиОтчетов");
	Компоновщик = ФинансоваяОтчетностьСервер.КомпоновщикСхемы(Схема);
	Если ЗначениеЗаполнено(Счет) Тогда
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Компоновщик,"СчетПланаСчетов",Счет);
	КонецЕсли;
	Если ЗначениеЗаполнено(ВидСубконто) Тогда
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Компоновщик,"ВидСубконто",ВидСубконто);
	КонецЕсли;
	Если ЗначениеЗаполнено(ЗначениеСубконто) Тогда
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Компоновщик,"ЗначениеСубконто",ЗначениеСубконто);
	КонецЕсли;
	ЭлементыОтчетов = ФинансоваяОтчетностьСервер.ВыгрузитьРезультатСКД(Схема, Компоновщик);
	
	Возврат ЭлементыОтчетов;
	
КонецФункции

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		
		НастройкиОтчета = НастройкиОтчета(Параметры.ПараметрКоманды);
		
		Параметры.ПользовательскиеНастройки = НастройкиОтчета.ПользовательскиеНастройки;
		Параметры.ФиксированныеНастройки = НастройкиОтчета.ФиксированныеНастройки;
		ЭтаФорма.ФормаПараметры.ФиксированныеНастройки = НастройкиОтчета.ФиксированныеНастройки;
		
	КонецЕсли;
	
КонецПроцедуры

Функция НастройкиОтчета(Счет)
	
	// Настройки контекстного отчета
	КомпоновщикНастроекДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
	ИмяСхемы = Метаданные.Отчеты.ИспользованиеСчетовИСубконтоМеждународныйУчет.ОсновнаяСхемаКомпоновкиДанных.Имя;
	СхемаОтчета = Отчеты.ИспользованиеСчетовИСубконтоМеждународныйУчет.ПолучитьМакет(ИмяСхемы);
	НастройкиВарианта = СхемаОтчета.ВариантыНастроек.ИспользованиеСчетаКонтекст.Настройки;
	КомпоновщикНастроекДанных.ЗагрузитьНастройки(НастройкиВарианта);
	ПользовательскиеНастройки = КомпоновщикНастроекДанных.ПользовательскиеНастройки;
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ЭтоМеждународный", Истина);
	
	// Установим параметры контекстного отчета
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(ПользовательскиеНастройки, "СчетПланаСчетов", Счет);
	
	Возврат КомпоновщикНастроекДанных;
	
КонецФункции

#КонецОбласти

#КонецЕсли
