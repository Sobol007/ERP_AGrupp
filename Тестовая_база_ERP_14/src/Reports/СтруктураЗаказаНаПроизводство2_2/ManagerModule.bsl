#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает данные, необходимые для вывода структуры заказа на производство.
//
// Параметры:
//  Параметры - Структура - параметры чтения данных.
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат.
//
Процедура ПрочитатьСтруктуруЗаказов(Параметры, АдресХранилища) Экспорт
	
	Номенклатура = Параметры.Номенклатура;
	Номенклатура.Очистить();
	Номенклатура.Колонки.Добавить("ИндексРодителя", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	
	Этапы = Параметры.Этапы;
	Этапы.Очистить();
	Этапы.Колонки.Добавить("ИндексРодителя", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	
	ИндексыСтрокПродукции = Новый Массив;
	
	Данные = ДанныеСтруктурыЗаказов(Параметры.Заказы);
	
	Для каждого Заказ Из Параметры.Заказы Цикл
		
		ДобавитьНоменклатуру(Данные, Номенклатура, Этапы, Заказ, ИндексыСтрокПродукции, -1);
		
	КонецЦикла;
	
	Номенклатура.Колонки.Удалить("ИндексРодителя");
	Этапы.Колонки.Удалить("ИндексРодителя");
	
	Результат = Новый Структура;
	Результат.Вставить("Номенклатура", Номенклатура);
	Результат.Вставить("Этапы", Этапы);
	Результат.Вставить("ИндексыСтрокПродукции", ИндексыСтрокПродукции);
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Шаг 1
Процедура ДобавитьНоменклатуру(Данные, Номенклатура, Этапы, Документ, ИндексыСтрок, ИндексРодителя)
	
	ЗаказБезСпецификации = ИндексРодителя = -1
		И Данные.ЗаказыБезСпецификаций.Найти(Документ) <> Неопределено;
	
	СтруктураПоиска = Новый Структура("Документ", Документ);
	Изделия = Данные.Потребности.НайтиСтроки(СтруктураПоиска);
	
	Для каждого Изделие Из Изделия Цикл
		
		Обеспечение = ОбеспечениеПотребности(Данные, Изделие);
		
		ЗачестьОбеспечениеВыполняемоеРодителем(Номенклатура, Этапы, Изделие, Обеспечение, ИндексРодителя);
		Если Изделие.КоличествоПлан = 0 Тогда
			Продолжить; // исключение избыточных данных в ремонтном процессе
		КонецЕсли;
		
		НоваяСтрока = Номенклатура.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Изделие);
		
		НоваяСтрока.ПредставлениеНоменклатураЭтап = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
			Изделие.НоменклатураПредставление,
			Изделие.ХарактеристикаПредставление);
		НоваяСтрока.ИндексыЭтапов = Новый Массив;
		НоваяСтрока.ИндексРодителя = ИндексРодителя;
		
		ДатаОкончанияФакт = '00010101';
		Индекс = Номенклатура.Индекс(НоваяСтрока);
		
		Для каждого Строка Из Обеспечение Цикл
			
			НоваяСтрока.КоличествоФакт = НоваяСтрока.КоличествоФакт + Строка.КоличествоФакт;
			НоваяСтрока.КоличествоСоздано = НоваяСтрока.КоличествоСоздано + Строка.КоличествоПлан;
			НоваяСтрока.ДатаОкончанияПлан = МАКС(НоваяСтрока.ДатаОкончанияПлан, Строка.ДатаОкончанияПлан);
			ДатаОкончанияФакт = МАКС(ДатаОкончанияФакт, Строка.ДатаОкончанияФакт);
			
			СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, Этап");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
			СтрокиИтого = Данные.Обеспечение.НайтиСтроки(СтруктураПоиска);
			
			Для каждого СтрокаИтого Из СтрокиИтого Цикл
				НоваяСтрока.КоличествоПланИтого = НоваяСтрока.КоличествоПланИтого + СтрокаИтого.КоличествоПлан;
				НоваяСтрока.КоличествоФактИтого = НоваяСтрока.КоличествоФактИтого + СтрокаИтого.КоличествоФакт;
			КонецЦикла;
			
			Если Изделие.Заказ <> Строка.Заказ Тогда
				НоваяСтрока.Заказ = Строка.Заказ; // обеспечение из другого заказа
			КонецЕсли;
			
			Если ЗаказБезСпецификации Тогда
				ДобавитьЭтапыПоНомеру(Данные, Номенклатура, Этапы, Документ, Строка.Этап, Строка.ТипПроцесса, НоваяСтрока.ИндексыЭтапов, Индекс);
			Иначе
				ДобавитьЭтапыПоИД(Данные, Номенклатура, Этапы, Строка.ПартияПроизводства, Строка.ТипПроцесса, НоваяСтрока.ИндексыЭтапов, Индекс);
			КонецЕсли;
			
		КонецЦикла;
		
		Если НоваяСтрока.КоличествоПлан <= НоваяСтрока.КоличествоФакт Тогда
			НоваяСтрока.ДатаОкончанияФакт = ДатаОкончанияФакт;
		КонецЕсли;
		
		Если НоваяСтрока.КоличествоПланИтого = 0 Тогда
			НоваяСтрока.КоличествоПланИтого = НоваяСтрока.КоличествоПлан;
		КонецЕсли;
		
		ИндексыСтрок.Добавить(Индекс);
		
	КонецЦикла;
	
	Если ЗаказБезСпецификации Тогда
		
		Строки = Данные.Этапы.НайтиСтроки(Новый Структура("Заказ, Обработан", Документ, Ложь));
		Если Строки.ВГраница() <> -1 Тогда
			
			НоваяСтрока = Номенклатура.Добавить();
			НоваяСтрока.Заказ = Документ;
			НоваяСтрока.ПредставлениеНоменклатураЭтап = НСтр("ru = '<Прочее>';
															|en = '<Other>'");
			НоваяСтрока.ИндексыЭтапов = Новый Массив;
			НоваяСтрока.ИндексРодителя = ИндексРодителя;
			
			ТипПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Сборка;
			Индекс = Номенклатура.Индекс(НоваяСтрока);
			
			ДобавитьЭтапы(Данные, Номенклатура, Этапы, Строки, ТипПроцесса, НоваяСтрока.ИндексыЭтапов, Индекс);
			
			ИндексыСтрок.Добавить(Индекс);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Шаг 2
Процедура ДобавитьЭтапыПоНомеру(Данные, Номенклатура, Этапы, Заказ, Этап, ТипПроцесса, ИндексыЭтапов, ИндексРодителя)
	
	Строка = Данные.Этапы.Найти(Этап, "Этап");
	Если Строка = Неопределено Тогда

		Возврат;
	КонецЕсли;
	
	Строки = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Строка);
	СтрокиПоИндексам = Новый Массив;
	
	СтруктураПоиска = Новый Структура("Заказ, НомерСледующегоЭтапа", Заказ);
	
	Для каждого Строка Из Строки Цикл
		
		Индекс = Данные.Этапы.Индекс(Строка);
		Если Индекс > СтрокиПоИндексам.ВГраница() Тогда
			СтрокиПоИндексам.Вставить(Индекс, Строка);
		Иначе
			СтрокиПоИндексам.Установить(Индекс, Строка);
		КонецЕсли;
		
		СтруктураПоиска.НомерСледующегоЭтапа = Строка.НомерЭтапа;
		
		НСтроки = Данные.Этапы.НайтиСтроки(СтруктураПоиска);
		Для каждого НСтрока Из НСтроки Цикл
			Строки.Добавить(НСтрока);
		КонецЦикла;
		
	КонецЦикла;
	
	Строки.Очистить();
	
	Для Индекс = 0 По СтрокиПоИндексам.ВГраница() Цикл
		
		Если СтрокиПоИндексам[Индекс] <> Неопределено Тогда
			
			Строки.Добавить(СтрокиПоИндексам[Индекс]);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДобавитьЭтапы(Данные, Номенклатура, Этапы, Строки, ТипПроцесса, ИндексыЭтапов, ИндексРодителя);
	
КонецПроцедуры

Процедура ДобавитьЭтапыПоИД(Данные, Номенклатура, Этапы, ПартияПроизводства, ТипПроцесса, ИндексыЭтапов, ИндексРодителя)
	
	Строки = Данные.Этапы.НайтиСтроки(Новый Структура("ПартияПроизводства", ПартияПроизводства));
	
	Если Строки.ВГраница() <> -1 Тогда
		
		ДобавитьЭтапы(Данные, Номенклатура, Этапы, Строки, ТипПроцесса, ИндексыЭтапов, ИндексРодителя);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭтапы(Данные, Номенклатура, Этапы, Строки, ТипПроцесса, ИндексыЭтапов, ИндексРодителя)
	
	Если ТипПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Разборка Тогда
		
		// Прямой обход
		Начало = 0;
		Конец = Строки.ВГраница();
		Коэф = 1;
		
	Иначе
		
		// Обратный обход
		Начало = -Строки.ВГраница();
		Конец = 0;
		Коэф = -1;
		
	КонецЕсли;
	
	Для Сч = Начало По Конец Цикл
		
		ДанныеЭтапа = Строки[Сч*Коэф];
		
		НоваяСтрока = Этапы.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЭтапа);
		
		НоваяСтрока.ПредставлениеНоменклатураЭтап = ДанныеЭтапа.НаименованиеЭтапа;
		НоваяСтрока.КоличествоПланИтого           = ДанныеЭтапа.КоличествоПлан;
		НоваяСтрока.КоличествоФактИтого           = ДанныеЭтапа.КоличествоФакт;
		НоваяСтрока.ЕдиницаИзмерения = УправлениеДаннымиОбИзделияхКлиентСервер.ПредставлениеЕдиницыИзмеренияПартииВыпуска(
			ДанныеЭтапа.ЕдиницаИзмерения);
		НоваяСтрока.ИндексыНоменклатуры = Новый Массив;
		НоваяСтрока.ИндексРодителя      = ИндексРодителя;
		
		ДанныеЭтапа.Обработан = Истина;
		
		Индекс = Этапы.Индекс(НоваяСтрока);
		
		ИндексыЭтапов.Добавить(Индекс);
		ДобавитьНоменклатуру(Данные, Номенклатура, Этапы, ДанныеЭтапа.Этап, НоваяСтрока.ИндексыНоменклатуры, Индекс);
		
	КонецЦикла;
	
КонецПроцедуры

// Поиск данных
Функция ОбеспечениеПотребности(Данные, Потребность)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",     Потребность.Номенклатура);
	СтруктураПоиска.Вставить("Характеристика",   Потребность.Характеристика);
	СтруктураПоиска.Вставить("Склад",            Потребность.Склад);
	СтруктураПоиска.Вставить("Назначение",       Потребность.Назначение);
	СтруктураПоиска.Вставить("СписатьНаРасходы", Потребность.СписатьНаРасходы);
	
	Если НЕ Потребность.Спецификация.Пустая() Тогда
		СтруктураПоиска.Вставить("Спецификация", Потребность.Спецификация);
	КонецЕсли;
	
	Если Потребность.ТипПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Сборка Тогда
		
		ПолеПоиска = "Получатель";
		ПолеЗначения = "Отправитель";
		
	Иначе
		
		ПолеПоиска = "Отправитель";
		ПолеЗначения = "Получатель";
		
	КонецЕсли;
	
	СтруктураПоиска.Вставить(ПолеПоиска, Потребность.Документ);
	
	Связи = Данные.СвязиНоменклатуры.НайтиСтроки(СтруктураПоиска);
	
	СтруктураПоиска.Удалить(ПолеПоиска);
	
	Если СтруктураПоиска.Свойство("Спецификация") Тогда
		СтруктураПоиска.Удалить("Спецификация");
	КонецЕсли;
	
	СтруктураПоиска.Вставить("Этап");
	
	Результат = Новый Массив;
	
	Для Индекс = 0 По Связи.ВГраница() Цикл
		
		Связь = Связи[Индекс];
		
		// Исключение повторной обработки идентичных строк
		ЭтоДубль = Ложь;
		
		Для ИндексПред = 1-Индекс По 0 Цикл
			
			ЭтоДубль = Связь[ПолеЗначения] = Связи[-ИндексПред][ПолеЗначения]
				И Связь.Назначение = Связи[-ИндексПред].Назначение;
				
			Если ЭтоДубль Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЭтоДубль Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска.Этап       = Связь[ПолеЗначения];
		СтруктураПоиска.Назначение = Связь.Назначение;
		
		НайденныеСтроки = Данные.Обеспечение.НайтиСтроки(СтруктураПоиска);
		
		Для каждого Строка Из НайденныеСтроки Цикл
			
			Результат.Добавить(Строка);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗачестьОбеспечениеВыполняемоеРодителем(Номенклатура, Этапы, Потребность, Обеспечение, ИндексРодителя)
	
	ПартияПроизводстваРодителя = Неопределено;
	
	Если ИндексРодителя <> -1
		И Этапы[ИндексРодителя].ИндексРодителя <> -1
		И Номенклатура[Этапы[ИндексРодителя].ИндексРодителя].ИндексРодителя <> -1 Тогда
		
		ПартияПроизводстваРодителя = Этапы[Номенклатура[Этапы[ИндексРодителя].ИндексРодителя].ИндексРодителя].ПартияПроизводства;
		
	Иначе
		Возврат;		
	КонецЕсли;
	
	Для каждого Строка Из Обеспечение Цикл
		
		Если Строка.ПартияПроизводства = ПартияПроизводстваРодителя Тогда
			
			Потребность.КоличествоПлан = Потребность.КоличествоПлан
				- МИН(Потребность.КоличествоПлан, Строка.КоличествоПлан);
				
		КонецЕсли;
		
		Если Потребность.КоличествоПлан = 0 Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Выборка данных
Функция ДанныеСтруктурыЗаказов(Заказы)
	
	Запрос = Новый Запрос(ТекстЗапросаДанныеСтруктурыЗаказов());
	
	Запрос.УстановитьПараметр("Заказы", Заказы);
	Запрос.УстановитьПараметр("ПустоеНазначение", Справочники.Назначения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСпецификация", Справочники.РесурсныеСпецификации.ПустаяСсылка());
	Запрос.УстановитьПараметр("Разборка", Перечисления.ТипыПроизводственныхПроцессов.Разборка);
	Запрос.УстановитьПараметр("Сборка", Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	Запрос.УстановитьПараметр("БезСпецификаций", Перечисления.ТипыПроизводственныхПроцессов.БезСпецификаций);
	Запрос.УстановитьПараметр("СтатусГрафика", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	Запрос.УстановитьПараметр("СтатусЭтапВыполнен", Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	Запрос.УстановитьПараметр("СтатусЗаказаМожноСоздаватьЭтапы",
		Перечисления.СтатусыЗаказовНаПроизводство2_2.КПроизводству);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВГраница = МассивРезультатов.ВГраница();
	
	Результат = Новый Структура;
	
	Результат.Вставить("СвязиНоменклатуры", МассивРезультатов[ВГраница - 4].Выгрузить());
	Результат.Вставить("Потребности", МассивРезультатов[ВГраница - 3].Выгрузить());
	Результат.Вставить("Обеспечение", МассивРезультатов[ВГраница - 2].Выгрузить());
	Результат.Вставить("Этапы", МассивРезультатов[ВГраница - 1].Выгрузить());
	Результат.Вставить("ЗаказыБезСпецификаций", МассивРезультатов[ВГраница].Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	// Индексация таблиц
	Результат.СвязиНоменклатуры.Индексы.Добавить("Номенклатура, Характеристика, Назначение, Склад, Спецификация, Отправитель");
	Результат.СвязиНоменклатуры.Индексы.Добавить("Номенклатура, Характеристика, Назначение, Склад, Спецификация, Получатель");
	Результат.СвязиНоменклатуры.Индексы.Добавить("Номенклатура, Характеристика, Склад, Спецификация, Отправитель");
	Результат.СвязиНоменклатуры.Индексы.Добавить("Номенклатура, Характеристика, Склад, Спецификация, Получатель");
	
	Результат.Потребности.Индексы.Добавить("Документ");
	
	Результат.Обеспечение.Индексы.Добавить("Номенклатура, Характеристика, Этап");
	Результат.Обеспечение.Индексы.Добавить("Номенклатура, Характеристика, Склад, Этап");
	Результат.Обеспечение.Индексы.Добавить("Номенклатура, Характеристика, Назначение, Склад, Этап");
	
	Результат.Этапы.Индексы.Добавить("ПартияПроизводства");
	Результат.Этапы.Индексы.Добавить("Этап");
	Результат.Этапы.Индексы.Добавить("Заказ, НомерСледующегоЭтапа");
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаДанныеСтруктурыЗаказов()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка                              КАК Заказ,
		|	ТабличнаяЧасть.Номенклатура                        КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика                      КАК Характеристика,
		|	ВЫБОР
		|		КОГДА Документ.ТипПроизводственногоПроцесса = &БезСпецификаций
		|				И НЕ ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА Документ.НазначениеПродукция
		|		ИНАЧЕ ТабличнаяЧасть.Назначение
		|	КОНЕЦ КАК Назначение,
		|	ВЫБОР
		|		КОГДА &ТекстОбособленноЗаказы
		|			ТОГДА  ВЫБОР
		|						КОГДА Документ.ТипПроизводственногоПроцесса В (
		|								ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка),
		|								ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Ремонт))
		|							ТОГДА ТабличнаяЧасть.Назначение
		|						ИНАЧЕ Документ.НазначениеПродукция
		|					КОНЕЦ
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ КАК НазначениеПродукция,
	    |	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|		  ИЛИ ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Склад
		|	КОНЕЦ                                              КАК Склад,
		|	ТабличнаяЧасть.Спецификация                        КАК Спецификация,
		|	ТабличнаяЧасть.СписатьНаРасходы                    КАК СписатьНаРасходы,
		|	ТабличнаяЧасть.СтатьяРасходов                      КАК СтатьяРасходов,
		|	ТабличнаяЧасть.АналитикаРасходов                   КАК АналитикаРасходов,
		|	ТабличнаяЧасть.АналитикаАктивовПассивов            КАК АналитикаАктивовПассивов,
		|	ВЫБОР
		|		КОГДА Документ.ТипПроизводственногоПроцесса = &Разборка
		|			ТОГДА &Разборка
		|		ИНАЧЕ &Сборка
		|	КОНЕЦ                                              КАК ТипПроцесса,
		|	Документ.Статус = &СтатусЗаказаМожноСоздаватьЭтапы КАК МожноСоздаватьЭтапы,
		|	ТабличнаяЧасть.НомерСтроки                         КАК НомерСтроки,
		|	ТабличнаяЧасть.Количество                          КАК Количество
		|ПОМЕСТИТЬ ВТЗаказано
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка В(&Заказы)
		|	И Документ.Проведен
		|	И НЕ ТабличнаяЧасть.Отменено
    	|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документ.Распоряжение          КАК Заказ,
		|	Документ.Ссылка                КАК Этап,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА &Разборка
		|		ИНАЧЕ &Сборка
		|	КОНЕЦ                          КАК ТипПроцесса,
		|	Документ.ПартияПроизводства КАК ПартияПроизводства,
		|	ТабличнаяЧасть.ЭтапПотребитель КАК ЭтапПотребитель,
		|	ЕСТЬNULL(ДокументПотребитель.ПартияПроизводства, ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)) КАК ПартияПроизводстваПотребитель,
		|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
		|	ТабличнаяЧасть.Назначение      КАК Назначение,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			И ТабличнаяЧасть.СписатьНаРасходы
		|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА Документ.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Получатель
		|	КОНЕЦ                          КАК Склад,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА ТабличнаяЧасть.Спецификация
		|		ИНАЧЕ Документ.Спецификация
		|	КОНЕЦ                          КАК Спецификация,
		|	ТабличнаяЧасть.СписатьНаРасходы                                 КАК СписатьНаРасходы,
		|	ТабличнаяЧасть.КодСтроки       КАК КодСтроки,
		|	ТабличнаяЧасть.НомерСтроки     КАК НомерСтроки,
		|	ТабличнаяЧасть.Количество      КАК Количество,
		|	ТабличнаяЧасть.Произведено     КАК Произведено
		|ПОМЕСТИТЬ ВТВыпуск
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДокументПотребитель
		|		ПО ТабличнаяЧасть.ЭтапПотребитель = ДокументПотребитель.Ссылка
		|ГДЕ
		|	Документ.Распоряжение В(&Заказы)
		|	И Документ.Проведен
		|	И НЕ ТабличнаяЧасть.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Распоряжение,
		|	Документ.Ссылка,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА &Разборка
		|		ИНАЧЕ &Сборка
		|	КОНЕЦ,
		|	Документ.ПартияПроизводства,
		|	ДокументПотребитель.Ссылка,
		|	ДокументПотребитель.ПартияПроизводства,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Назначение,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			И ТабличнаяЧасть.СписатьНаРасходы
		|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА Документ.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Получатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА ТабличнаяЧасть.Спецификация
		|		ИНАЧЕ Документ.Спецификация
		|	КОНЕЦ,
		|	ТабличнаяЧасть.СписатьНаРасходы,
		|	ТабличнаяЧасть.КодСтроки,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.Произведено
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ДокументПотребитель
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
		|		ПО ДокументПотребитель.Назначение = ТабличнаяЧасть.Назначение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|ГДЕ
		|	ДокументПотребитель.Распоряжение В(&Заказы)
		|	И НЕ Документ.Распоряжение В (&Заказы)
		|	И Документ.Проведен
		|	И НЕ ТабличнаяЧасть.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Распоряжение,
		|	Документ.Ссылка,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА &Разборка
		|		ИНАЧЕ &Сборка
		|	КОНЕЦ,
		|	Документ.ПартияПроизводства,
		|	ТабличнаяЧасть.ЭтапПотребитель,
		|	ЕСТЬNULL(ДокументПотребитель.ПартияПроизводства, ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)),
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Назначение,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			И ТабличнаяЧасть.СписатьНаРасходы
		|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА Документ.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Получатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА ТабличнаяЧасть.Спецификация
		|		ИНАЧЕ Документ.Спецификация
		|	КОНЕЦ,
		|	ТабличнаяЧасть.СписатьНаРасходы,
		|	ТабличнаяЧасть.КодСтроки,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.Произведено
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДокументПотребитель
		|		ПО ТабличнаяЧасть.ЭтапПотребитель = ДокументПотребитель.Ссылка
		|ГДЕ
		|	Документ.Распоряжение В(&Заказы)
		|	И Документ.Проведен
		|	И НЕ ТабличнаяЧасть.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Распоряжение,
		|	Документ.Ссылка,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА &Разборка
		|		ИНАЧЕ &Сборка
		|	КОНЕЦ,
		|	Документ.ПартияПроизводства,
		|	ДокументПотребитель.Ссылка,
		|	ДокументПотребитель.ПартияПроизводства,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Назначение,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			И ТабличнаяЧасть.СписатьНаРасходы
		|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА Документ.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Получатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА ТабличнаяЧасть.Спецификация
		|		ИНАЧЕ Документ.Спецификация
		|	КОНЕЦ,
		|	ТабличнаяЧасть.СписатьНаРасходы,
		|	ТабличнаяЧасть.КодСтроки,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.Произведено
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ДокументПотребитель
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
		|		ПО ДокументПотребитель.Назначение = ТабличнаяЧасть.Назначение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|ГДЕ
		|	ДокументПотребитель.Распоряжение В(&Заказы)
		|	И НЕ Документ.Распоряжение В (&Заказы)
		|	И Документ.Проведен
		|	И НЕ ТабличнаяЧасть.Отменено
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Этап,
		|	ЭтапПотребитель,
		|	ТипПроцесса,
		|	Спецификация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭтапПроизводства2_2.Ссылка КАК Этап
		|ПОМЕСТИТЬ ВТВсеЭтапы
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|ГДЕ
		|	ЭтапПроизводства2_2.Распоряжение В(&Заказы)
		|	И ЭтапПроизводства2_2.Проведен = ИСТИНА
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТВыпуск.Этап
		|ИЗ
		|	ВТВыпуск КАК ВТВыпуск
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТВыпуск.ЭтапПотребитель
		|ИЗ
		|	ВТВыпуск КАК ВТВыпуск
		|ГДЕ
		|	ВТВыпуск.ЭтапПотребитель <> &ПустойЭтап
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Изделия.Номенклатура     КАК Номенклатура,
		|	Изделия.Характеристика   КАК Характеристика,
		|	Изделия.Назначение       КАК Назначение,
		|	Изделия.Склад            КАК Склад,
		|	Изделия.Спецификация     КАК Спецификация,
		|	Изделия.СписатьНаРасходы КАК СписатьНаРасходы,
		|	Изделия.Этап             КАК Отправитель,
		|	Изделия.ЭтапПотребитель  КАК Получатель
		|ПОМЕСТИТЬ ВТСвязиНоменклатуры
		|ИЗ
		|	ВТВыпуск КАК Изделия
		|ГДЕ
		|	Изделия.ЭтапПотребитель <> &ПустойЭтап
		|	И Изделия.ПартияПроизводства <> Изделия.ПартияПроизводстваПотребитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад,
		|	Спецификация,
		|	СписатьНаРасходы,
		|	Получатель,
		|	Отправитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Заказ                КАК Заказ,
		|	ВложенныйЗапрос.Этап                 КАК Этап,
		|	ВложенныйЗапрос.ПартияПроизводства   КАК ПартияПроизводства,
		|	&Сборка                              КАК ТипПроцесса,
		|	ВложенныйЗапрос.Номенклатура         КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
		|	ВложенныйЗапрос.Назначение           КАК Назначение,
		|	ВложенныйЗапрос.Склад                КАК Склад,
		|	ВложенныйЗапрос.Спецификация         КАК Спецификация,
		|	ВложенныйЗапрос.СписатьНаРасходы     КАК СписатьНаРасходы,
		|	МИНИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ВложенныйЗапрос.Количество)    КАК Количество
		|ПОМЕСТИТЬ ВТОбеспечение
		|ИЗ
		|	(ВЫБРАТЬ
		|		Документ.Распоряжение КАК Заказ,
		|		Документ.Ссылка КАК Этап,
		|		Документ.ПартияПроизводства КАК ПартияПроизводства,
		|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|		ТабличнаяЧасть.Характеристика КАК Характеристика,
		|		ТабличнаяЧасть.Назначение КАК Назначение,
		|		ВЫБОР КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|			Документ.Подразделение
		|		ИНАЧЕ
		|			ТабличнаяЧасть.Склад
		|		КОНЕЦ КАК Склад,
		|		ТабличнаяЧасть.Спецификация КАК Спецификация,
		|		ЛОЖЬ КАК СписатьНаРасходы,
		|		ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
		|		ТабличнаяЧасть.Количество КАК Количество
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|			ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|	ГДЕ
		|		ТабличнаяЧасть.Ссылка В
		|				(ВЫБРАТЬ
		|					ВсеЭтапы.Этап КАК Ссылка
		|				ИЗ
		|					ВТВсеЭтапы КАК ВсеЭтапы)
		|		И Документ.Проведен
		|		И ТабличнаяЧасть.Производится
		|		И НЕ (
		|				Документ.ТипПроизводственногоПроцесса = &Разборка
		|				И ТабличнаяЧасть.Номенклатура = Документ.ПартияПроизводства.ОсновноеИзделиеНоменклатура
		|				И ТабличнаяЧасть.Характеристика = Документ.ПартияПроизводства.ОсновноеИзделиеХарактеристика
		|			)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТВыпуск.Заказ,
		|		ВТВыпуск.ЭтапПотребитель,
		|		ВТВыпуск.ПартияПроизводства,
		|		ВТВыпуск.Номенклатура,
		|		ВТВыпуск.Характеристика,
		|		ВТВыпуск.Назначение,
		|		ВТВыпуск.Склад,
		|		&ПустаяСпецификация,
		|		ВТВыпуск.СписатьНаРасходы,
		|		10000,
		|		-ВТВыпуск.Количество
		|	ИЗ
		|		ВТВыпуск КАК ВТВыпуск

		|	ГДЕ
		|		ВТВыпуск.ТипПроцесса = &Сборка
		|		И ВТВыпуск.ЭтапПотребитель <> &ПустойЭтап
		|		И ВТВыпуск.ПартияПроизводства = ВТВыпуск.ПартияПроизводстваПотребитель) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Склад,
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Назначение,
		|	ВложенныйЗапрос.Этап,
		|	ВложенныйЗапрос.ПартияПроизводства,
		|	ВложенныйЗапрос.Спецификация,
		|	ВложенныйЗапрос.СписатьНаРасходы,
		|	ВложенныйЗапрос.Заказ
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.Количество) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Распоряжение,
		|	Документ.Ссылка,
		|	Документ.ПартияПроизводства,
		|	&Сборка,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Назначение,
		|	ВЫБОР КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|		Документ.Подразделение
		|	ИНАЧЕ
		|		ТабличнаяЧасть.Склад
		|	КОНЕЦ КАК Склад,
		|	ДокументОтправитель.Спецификация,
		|	ЛОЖЬ,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Количество
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСвязиНоменклатуры КАК ВТСвязиНоменклатуры
		|		ПО ТабличнаяЧасть.Номенклатура = ВТСвязиНоменклатуры.Номенклатура
		|			И ТабличнаяЧасть.Характеристика = ВТСвязиНоменклатуры.Характеристика
		|			И ТабличнаяЧасть.Склад = ВТСвязиНоменклатуры.Склад
		|			И ТабличнаяЧасть.Ссылка = ВТСвязиНоменклатуры.Получатель
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДокументОтправитель
		|		ПО (ВТСвязиНоменклатуры.Отправитель = ДокументОтправитель.Ссылка)
		|ГДЕ
		|	Документ.Проведен
		|	И ДокументОтправитель.ТипПроизводственногоПроцесса = &Сборка
		|	И НЕ ТабличнаяЧасть.Производится
		|	И Документ.Распоряжение <> ДокументОтправитель.Распоряжение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Распоряжение,
		|	Документ.Ссылка,
		|	Документ.ПартияПроизводства,
		|	&Разборка,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Производится 
		|			ТОГДА ТабличнаяЧасть.Назначение
		|		ИНАЧЕ &ПустоеНазначение
		|	КОНЕЦ,
		|	ТабличнаяЧасть.Склад,
		|	Документ.Спецификация,
		|	ЛОЖЬ,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Количество
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка В
		|			(ВЫБРАТЬ
		|				ВсеЭтапы.Этап КАК Ссылка
		|			ИЗ
		|				ВТВсеЭтапы КАК ВсеЭтапы)
		|	И Документ.Проведен
		|	И Документ.ТипПроизводственногоПроцесса = &Разборка
		|	И ТабличнаяЧасть.Номенклатура = Документ.ПартияПроизводства.ОсновноеИзделиеНоменклатура
		|	И ТабличнаяЧасть.Характеристика = Документ.ПартияПроизводства.ОсновноеИзделиеХарактеристика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ,
		|	Этап,
		|	ТипПроцесса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Этапы.ПартияПроизводства КАК ПартияПроизводства,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА Этапы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ)                                                    КАК ЭтапыЗавершены,
		|	МАКСИМУМ(Этапы.ФактическоеОкончаниеЭтапа)                     КАК ДатаОкончанияФакт,
		|	МАКСИМУМ(ЕСТЬNULL(График.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаОкончанияПлан
		|ПОМЕСТИТЬ ВТСрокиРазборки
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК График
		|		ПО Этапы.Распоряжение = График.Распоряжение
		|			И Этапы.Ссылка = График.ЭтапПроизводства
		|			И (График.СтатусГрафика = &СтатусГрафика)
		|ГДЕ
		|	Этапы.Ссылка В
		|			(ВЫБРАТЬ
		|				ВсеЭтапы.Этап КАК Ссылка
		|			ИЗ
		|				ВТВсеЭтапы КАК ВсеЭтапы)
		|	И Этапы.Проведен
		|	И Этапы.ТипПроизводственногоПроцесса = &Разборка
		|
		|СГРУППИРОВАТЬ ПО
		|	Этапы.ПартияПроизводства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСвязиНоменклатуры.Номенклатура     КАК Номенклатура,
		|	ВТСвязиНоменклатуры.Характеристика   КАК Характеристика,
		|	ВТСвязиНоменклатуры.Назначение       КАК Назначение,
		|	ВТСвязиНоменклатуры.Склад            КАК Склад,
		|	ВТСвязиНоменклатуры.Спецификация     КАК Спецификация,
		|	ВТСвязиНоменклатуры.СписатьНаРасходы КАК СписатьНаРасходы,
		|	ВТСвязиНоменклатуры.Отправитель      КАК Отправитель,
		|	ВТСвязиНоменклатуры.Получатель       КАК Получатель
		|ИЗ
		|	ВТСвязиНоменклатуры КАК ВТСвязиНоменклатуры
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТЗаказано.Номенклатура,
		|	ВТЗаказано.Характеристика,
		|	ВТЗаказано.Назначение,
		|	ВТЗаказано.Склад,
		|	ВТЗаказано.Спецификация,
		|	ВТЗаказано.СписатьНаРасходы,
		|	ЕСТЬNULL(ВТВыпуск1.Этап, ВТВыпуск2.Этап),
		|	ВТЗаказано.Заказ
		|ИЗ
		|	ВТЗаказано КАК ВТЗаказано
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыпуск КАК ВТВыпуск1
		|		ПО ВТЗаказано.Заказ = ВТВыпуск1.Заказ
		|			И ВТЗаказано.Номенклатура = ВТВыпуск1.Номенклатура
		|			И ВТЗаказано.Характеристика = ВТВыпуск1.Характеристика
		|			И ВТЗаказано.Назначение = ВТВыпуск1.Назначение
		|			И ВТЗаказано.Склад = ВТВыпуск1.Склад
		|			И ВТЗаказано.Спецификация = ВТВыпуск1.Спецификация
		|			И ВТЗаказано.ТипПроцесса = ВТВыпуск1.ТипПроцесса
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыпуск КАК ВТВыпуск2
		|		ПО ВТЗаказано.Заказ = ВТВыпуск2.Заказ
		|			И ВТЗаказано.Номенклатура = ВТВыпуск2.Номенклатура
		|			И ВТЗаказано.Характеристика = ВТВыпуск2.Характеристика
		|			И ВТЗаказано.Назначение = ВТВыпуск2.Назначение
		|			И ВТЗаказано.Склад = ВТВыпуск2.Склад
		|			И ВТЗаказано.ТипПроцесса = ВТВыпуск2.ТипПроцесса
		|ГДЕ
		|	ВТЗаказано.ТипПроцесса = &Сборка
		|	И ЕСТЬNULL(ВТВыпуск1.Этап, ВТВыпуск2.Этап) ЕСТЬ НЕ NULL 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТЗаказано.Номенклатура,
		|	ВТЗаказано.Характеристика,
		|	ВТЗаказано.Назначение,
		|	ВТЗаказано.Склад,
		|	ВТЗаказано.Спецификация,
		|	ВТЗаказано.СписатьНаРасходы,
		|	ВТЗаказано.Заказ,
		|	ВТОбеспечение.Этап
		|ИЗ
		|	ВТЗаказано КАК ВТЗаказано
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбеспечение КАК ВТОбеспечение
		|		ПО ВТЗаказано.Заказ = ВТОбеспечение.Заказ
		|			И ВТЗаказано.Номенклатура = ВТОбеспечение.Номенклатура
		|			И ВТЗаказано.Характеристика = ВТОбеспечение.Характеристика
		|			И ВТЗаказано.Склад = ВТОбеспечение.Склад
		|			И ВТЗаказано.Спецификация = ВТОбеспечение.Спецификация
		|			И ВТЗаказано.ТипПроцесса = ВТОбеспечение.ТипПроцесса
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСвязиНоменклатуры КАК ВТСвязиНоменклатуры
		|		ПО (ВТОбеспечение.Номенклатура = ВТСвязиНоменклатуры.Номенклатура)
		|			И (ВТОбеспечение.Характеристика = ВТСвязиНоменклатуры.Характеристика)
		|			И (ВТОбеспечение.Склад = ВТСвязиНоменклатуры.Склад)
		|			И (ВТОбеспечение.Спецификация = ВТСвязиНоменклатуры.Спецификация)
		|			И (ВТОбеспечение.Этап = ВТСвязиНоменклатуры.Получатель)
		|ГДЕ
		|	ВТЗаказано.ТипПроцесса = &Разборка
		|	И ВТСвязиНоменклатуры.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Потребности.Заказ                         КАК Заказ,
		|	Потребности.Документ                      КАК Документ,
		|	Потребности.Номенклатура                  КАК Номенклатура,
		|	Потребности.Характеристика                КАК Характеристика,
		|	Потребности.Назначение                    КАК Назначение,
		|	Потребности.НазначениеПродукция           КАК НазначениеПродукция,
		|	Потребности.Склад                         КАК Склад,
		|	Потребности.Спецификация                  КАК Спецификация,
		|	Потребности.СписатьНаРасходы              КАК СписатьНаРасходы,
		|	Потребности.СтатьяРасходов                КАК СтатьяРасходов,
		|	Потребности.АналитикаРасходов             КАК АналитикаРасходов,
		|	Потребности.АналитикаАктивовПассивов      КАК АналитикаАктивовПассивов,
		|	Потребности.Номенклатура.Представление    КАК НоменклатураПредставление,
		|	Потребности.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Потребности.Характеристика.Представление  КАК ХарактеристикаПредставление,
		|	Потребности.ТипПроцесса                   КАК ТипПроцесса,
		|	Потребности.НомерСтрокиРаспоряжения       КАК НомерСтрокиРаспоряжения,
		|	МИНИМУМ(Потребности.НомерСтрокиЭтапа)     КАК НомерСтрокиЭтапа,
		|	Потребности.ПартияПроизводства            КАК ПартияПроизводства,
		|	Потребности.МожноСоздаватьЭтапы           КАК МожноСоздаватьЭтапы,
		|	СУММА(Потребности.КоличествоПлан)         КАК КоличествоПлан
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТЗаказано.Заказ                    КАК Заказ,
		|		ВТЗаказано.Заказ                    КАК Документ,
		|		ВТЗаказано.Номенклатура             КАК Номенклатура,
		|		ВТЗаказано.Характеристика           КАК Характеристика,
		|		ВТЗаказано.Назначение               КАК Назначение,
		|		ВТЗаказано.НазначениеПродукция      КАК НазначениеПродукция,
		|		ВТЗаказано.Склад                    КАК Склад,
		|		ВТЗаказано.Спецификация             КАК Спецификация,
		|		ВТЗаказано.СписатьНаРасходы         КАК СписатьНаРасходы,
		|		ВТЗаказано.СтатьяРасходов           КАК СтатьяРасходов,
		|		ВТЗаказано.АналитикаРасходов        КАК АналитикаРасходов,
		|		ВТЗаказано.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|		ВТЗаказано.ТипПроцесса              КАК ТипПроцесса,
		|		ВТЗаказано.НомерСтроки              КАК НомерСтрокиРаспоряжения,
		|		0                                   КАК НомерСтрокиЭтапа,
		|		ВТЗаказано.Количество               КАК КоличествоПлан,
		|		НЕОПРЕДЕЛЕНО                        КАК ПартияПроизводства,
		|		ВТЗаказано.МожноСоздаватьЭтапы      КАК МожноСоздаватьЭтапы
		|	ИЗ
		|		ВТЗаказано КАК ВТЗаказано
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТОбеспечение.Заказ,
		|		ВТОбеспечение.Этап,
		|		ВТОбеспечение.Номенклатура,
		|		ВТОбеспечение.Характеристика,
		|		ВТОбеспечение.Назначение,
		|		ВЫБОР
		|			КОГДА &ТекстОбособленноОбеспечение
		|				ТОГДА ЭтапПроизводства.НазначениеПродукция
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ,
		|		ВТОбеспечение.Склад,
		|		ВТОбеспечение.Спецификация,
		|		ВТОбеспечение.СписатьНаРасходы,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		ВТОбеспечение.ТипПроцесса,
		|		0,
		|		ВТОбеспечение.НомерСтроки,
		|		ВТОбеспечение.Количество,
		|		ЭтапПроизводства.ПартияПроизводства,
		|		ЗаказНаПроизводство.Статус = &СтатусЗаказаМожноСоздаватьЭтапы
		|	ИЗ
		|		ВТОбеспечение КАК ВТОбеспечение
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство
		|			ПО ВТОбеспечение.Заказ = ЗаказНаПроизводство.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства
		|			ПО ВТОбеспечение.Этап = ЭтапПроизводства.Ссылка
		|	ГДЕ
		|		ВТОбеспечение.ТипПроцесса = &Сборка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТВыпуск.Заказ,
		|		ВТВыпуск.Этап,
		|		ВТВыпуск.Номенклатура,
		|		ВТВыпуск.Характеристика,
		|		ВТВыпуск.Назначение,
		|		ВЫБОР
		|			КОГДА &ТекстОбособленноВыпуск
		|				ТОГДА ЭтапПроизводства.НазначениеПродукция
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ,
		|		ВТВыпуск.Склад,
		|		ВТВыпуск.Спецификация,
		|		ВТВыпуск.СписатьНаРасходы,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		ВТВыпуск.ТипПроцесса,
		|		0,
		|		ВТВыпуск.НомерСтроки,
		|		ВТВыпуск.Количество,
		|		ВТВыпуск.ПартияПроизводства,
		|		ЗаказНаПроизводство.Статус = &СтатусЗаказаМожноСоздаватьЭтапы
		|	ИЗ
		|		ВТВыпуск КАК ВТВыпуск
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство
		|			ПО ВТВыпуск.Заказ = ЗаказНаПроизводство.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства
		|			ПО ВТВыпуск.Этап = ЭтапПроизводства.Ссылка
		|	ГДЕ
		|		ВТВыпуск.ТипПроцесса = &Разборка) КАК Потребности
		|
		|СГРУППИРОВАТЬ ПО
		|	Потребности.ТипПроцесса,
		|	Потребности.Спецификация,
		|	Потребности.Номенклатура,
		|	Потребности.Документ,
		|	Потребности.Заказ,
		|	Потребности.Склад,
		|	Потребности.Характеристика,
		|	Потребности.Назначение,
		|	Потребности.НазначениеПродукция,
		|	Потребности.СписатьНаРасходы,
		|	Потребности.СтатьяРасходов,
		|	Потребности.АналитикаРасходов,
		|	Потребности.АналитикаАктивовПассивов,
		|	Потребности.НомерСтрокиРаспоряжения,
		|	Потребности.Номенклатура.Представление,
		|	Потребности.Номенклатура.ЕдиницаИзмерения,
		|	Потребности.Характеристика.Представление,
		|	Потребности.ПартияПроизводства,
		|	Потребности.МожноСоздаватьЭтапы
		|
		|УПОРЯДОЧИТЬ ПО
		|	Документ,
		|	НомерСтрокиРаспоряжения,
		|	НомерСтрокиЭтапа,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Обеспечение.Заказ                       КАК Заказ,
		|	Обеспечение.Этап                        КАК Этап,
		|	Обеспечение.Номенклатура                КАК Номенклатура,
		|	Обеспечение.Характеристика              КАК Характеристика,
		|	Обеспечение.Назначение                  КАК Назначение,
		|	Обеспечение.Склад                       КАК Склад,
		|	Обеспечение.Спецификация                КАК Спецификация,
		|	Обеспечение.СписатьНаРасходы            КАК СписатьНаРасходы,
		|	Обеспечение.ДатаОкончанияПлан           КАК ДатаОкончанияПлан,
		|	МАКСИМУМ(Обеспечение.ДатаОкончанияФакт) КАК ДатаОкончанияФакт,
		|	Обеспечение.ТипПроцесса                 КАК ТипПроцесса,
		|	Обеспечение.ПартияПроизводства КАК ПартияПроизводства,
		|	СУММА(Обеспечение.КоличествоПлан)       КАК КоличествоПлан,
		|	СУММА(Обеспечение.КоличествоФакт)       КАК КоличествоФакт
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТВыпуск.Заказ КАК Заказ,
		|		ВТВыпуск.Этап КАК Этап,
		|		ВТВыпуск.Номенклатура КАК Номенклатура,
		|		ВТВыпуск.Характеристика КАК Характеристика,
		|		ВТВыпуск.Назначение КАК Назначение,
		|		ВТВыпуск.Склад КАК Склад,
		|		ВТВыпуск.Спецификация КАК Спецификация,
		|		ВТВыпуск.СписатьНаРасходы КАК СписатьНаРасходы,
		|		ВТВыпуск.Количество КАК КоличествоПлан,
		|		ВЫБОР
		|			КОГДА ВТВыпуск.Произведено
		|				ТОГДА ВТВыпуск.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК КоличествоФакт,
		|		ЕСТЬNULL(ГрафикЭтаповПроизводства2_2.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияПлан,
		|		ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа КАК ДатаОкончанияФакт,
		|		ВТВыпуск.ТипПроцесса КАК ТипПроцесса,
		|		ВТВыпуск.ПартияПроизводства КАК ПартияПроизводства
		|	ИЗ
		|		ВТВыпуск КАК ВТВыпуск
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|			ПО ВТВыпуск.Этап = ЭтапПроизводства2_2.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства2_2
		|			ПО (ЭтапПроизводства2_2.Распоряжение = ГрафикЭтаповПроизводства2_2.Распоряжение)
		|				И ВТВыпуск.Этап = ГрафикЭтаповПроизводства2_2.ЭтапПроизводства
		|				И (ГрафикЭтаповПроизводства2_2.СтатусГрафика = &СтатусГрафика)
		|	ГДЕ
		|		ВТВыпуск.ТипПроцесса = &Сборка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТВыпуск.Заказ,
		|		ВТВыпуск.Этап,
		|		ВТВыпуск.Номенклатура,
		|		ВТВыпуск.Характеристика,
		|		ВТВыпуск.Назначение,
		|		ВТВыпуск.Склад,
		|		ВТВыпуск.Спецификация,
		|		ВТВыпуск.СписатьНаРасходы,
		|		0,
		|		ИзделияОтПереработчика.КоличествоПриход,
		|		ЕСТЬNULL(ГрафикЭтаповПроизводства2_2.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)),
		|		ИзделияОтПереработчика.Период,
		|		ВТВыпуск.ТипПроцесса,
		|		ВТВыпуск.ПартияПроизводства
		|	ИЗ
		|		ВТВыпуск КАК ВТВыпуск
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|			ПО ВТВыпуск.Этап = ЭтапПроизводства2_2.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства2_2
		|			ПО (ЭтапПроизводства2_2.Распоряжение = ГрафикЭтаповПроизводства2_2.Распоряжение)
		|				И ВТВыпуск.Этап = ГрафикЭтаповПроизводства2_2.ЭтапПроизводства
		|				И (ГрафикЭтаповПроизводства2_2.СтатусГрафика = &СтатусГрафика)
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыПолученныеОтПереработчика.Обороты(, , Регистратор, ) КАК ИзделияОтПереработчика
		|			ПО (ЭтапПроизводства2_2.ЗаказПереработчику = ИзделияОтПереработчика.Распоряжение)
		|				И ВТВыпуск.КодСтроки = ИзделияОтПереработчика.КодСтроки
		|	ГДЕ
		|		ВТВыпуск.ТипПроцесса = &Сборка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТВыпуск.Заказ,
		|		ВТВыпуск.Этап,
		|		ВТВыпуск.Номенклатура,
		|		ВТВыпуск.Характеристика,
		|		ВТВыпуск.Назначение,
		|		ВТВыпуск.Склад,
		|		ВТВыпуск.Спецификация,
		|		ВТВыпуск.СписатьНаРасходы,
		|		0,
		|		РаботыОтПереработчика.КОформлениюРасход,
		|		ЕСТЬNULL(ГрафикЭтаповПроизводства2_2.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)),
		|		РаботыОтПереработчика.Период,
		|		ВТВыпуск.ТипПроцесса,
		|		ВТВыпуск.ПартияПроизводства
		|	ИЗ
		|		ВТВыпуск КАК ВТВыпуск
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|			ПО ВТВыпуск.Этап = ЭтапПроизводства2_2.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства2_2
		|			ПО (ЭтапПроизводства2_2.Распоряжение = ГрафикЭтаповПроизводства2_2.Распоряжение)
		|				И ВТВыпуск.Этап = ГрафикЭтаповПроизводства2_2.ЭтапПроизводства
		|				И (ГрафикЭтаповПроизводства2_2.СтатусГрафика = &СтатусГрафика)
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, ТИПЗНАЧЕНИЯ(ЗаказПоставщику) = ТИП(Документ.ЗаказПереработчику)) КАК РаботыОтПереработчика
		|			ПО (ЭтапПроизводства2_2.ЗаказПереработчику = ВЫРАЗИТЬ(РаботыОтПереработчика.ЗаказПоставщику КАК Документ.ЗаказПереработчику))
		|				И ВТВыпуск.КодСтроки = РаботыОтПереработчика.КодСтроки
		|	ГДЕ
		|		ВТВыпуск.ТипПроцесса = &Сборка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТОбеспечение.Заказ,
		|		ВТОбеспечение.Этап,
		|		ВТОбеспечение.Номенклатура,
		|		ВТОбеспечение.Характеристика,
		|		ВТОбеспечение.Назначение,
		|		ВТОбеспечение.Склад,
		|		ВТОбеспечение.Спецификация,
		|	    ВТОбеспечение.СписатьНаРасходы,
		|		ВТОбеспечение.Количество,
		|		ВЫБОР
		|			КОГДА ВТСрокиРазборки.ЭтапыЗавершены
		|				ТОГДА ВТОбеспечение.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВТСрокиРазборки.ДатаОкончанияПлан,
		|		ВЫБОР
		|			КОГДА ВТСрокиРазборки.ЭтапыЗавершены
		|				ТОГДА ВТСрокиРазборки.ДатаОкончанияФакт
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ,
		|		ВТОбеспечение.ТипПроцесса,
		|		ЭтапПроизводства2_2.ПартияПроизводства
		|	ИЗ
		|		ВТОбеспечение КАК ВТОбеспечение
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|			ПО ВТОбеспечение.Этап = ЭтапПроизводства2_2.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСрокиРазборки КАК ВТСрокиРазборки
		|			ПО (ЭтапПроизводства2_2.ПартияПроизводства = ВТСрокиРазборки.ПартияПроизводства)
		|	ГДЕ
		|		ВТОбеспечение.ТипПроцесса = &Разборка) КАК Обеспечение
		|
		|СГРУППИРОВАТЬ ПО
		|	Обеспечение.Этап,
		|	Обеспечение.Склад,
		|	Обеспечение.Назначение,
		|	Обеспечение.Номенклатура,
		|	Обеспечение.ДатаОкончанияПлан,
		|	Обеспечение.Характеристика,
		|	Обеспечение.ТипПроцесса,
		|	Обеспечение.Заказ,
		|	Обеспечение.Спецификация,
		|	Обеспечение.СписатьНаРасходы,
		|	Обеспечение.ПартияПроизводства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Этапы.Распоряжение                 КАК Заказ,
		|	Этапы.Ссылка                       КАК Этап,
		|	Этапы.ПартияПроизводства КАК ПартияПроизводства,
		|	Этапы.НаименованиеЭтапа            КАК НаименованиеЭтапа,
		|	Этапы.Подразделение                КАК Подразделение,
		|	ВЫБОР
		|		КОГДА Этапы.Статус = &СтатусЭтапВыполнен
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                              КАК Выполнен,
		|	Этапы.Запланировано                КАК КоличествоПлан,
		|	Этапы.Выполнено                    КАК КоличествоФакт,
		|	ЕСТЬNULL(Этапы.ЕдиницаИзмеренияПартииВыпуска.Представление, """") КАК ЕдиницаИзмерения,
		|	Этапы.НомерЭтапа                   КАК НомерЭтапа,
		|	Этапы.НомерСледующегоЭтапа         КАК НомерСледующегоЭтапа,
		|	График.ОкончаниеЭтапа              КАК ДатаОкончанияПлан,
		|	Этапы.ФактическоеОкончаниеЭтапа    КАК ДатаОкончанияФакт,
		|	Этапы.ТипПроизводственногоПроцесса КАК ТипПроцесса,
		|	ЛОЖЬ КАК Обработан
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК График
		|		ПО Этапы.Распоряжение = График.Распоряжение
		|			И Этапы.Ссылка = График.ЭтапПроизводства
		|			И (График.СтатусГрафика = &СтатусГрафика)
		|ГДЕ
		|	Этапы.Распоряжение В(&Заказы)
		|	И Этапы.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерЭтапа,
		|	НомерСледующегоЭтапа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Заказы.Ссылка
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2 КАК Заказы
		|ГДЕ
		|	Заказы.Ссылка В (&Заказы)
		|	И Заказы.Проведен
		|	И Заказы.ТипПроизводственногоПроцесса = &БезСпецификаций";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстОбособленноЗаказы", 
		Документы.ЗаказНаПроизводство2_2.ТекстЗапросаПолеОбособленно("Документ"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстОбособленноОбеспечение", 
		Документы.ЗаказНаПроизводство2_2.ТекстЗапросаПолеОбособленно("ЗаказНаПроизводство"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстОбособленноВыпуск", 
		Документы.ЗаказНаПроизводство2_2.ТекстЗапросаПолеОбособленно("ЗаказНаПроизводство"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
