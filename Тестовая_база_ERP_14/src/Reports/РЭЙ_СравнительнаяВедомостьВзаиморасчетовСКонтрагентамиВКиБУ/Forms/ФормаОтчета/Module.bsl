#Область ОбработчикиСобытий_Форма

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.ДатаОтчета = ТекущаяДата();
	Отчет.Организация = РЭЙ_Универсализация.ПолучитьОсновнуюОрганизацию();
	
	Отчет.ВидСправкиВалютногоКонтроля = "СКВО+СПД";
	
	УстановитьОтображение_СправкаВалютногоКонтроля();
	УстановитьОтображение_НаправлениеДвижения();
	УстановитьОтображение_КредитЗаем();
	
	УстановитьПараметрыВыбора_КонтрактВЭД();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	СформироватьОтчетНаСервере();
	ВыводЗаголовка();
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	ЗаполнитьДатуОтчета();
	
	Результат.Очистить();
	ВывестиОтчет(Результат);
	ВыводЗаголовка();
	
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения	= ДополнительныйРежимОтображения.НеИспользовать;
	Элементы.Результат.ОтображениеСостояния.Видимость = ложь;
КонецПроцедуры	

&НаКлиенте
Процедура ВыводитьЗаголовок(Команда)
	Элементы.ВыводитьЗаголовок.Пометка = Не Элементы.ВыводитьЗаголовок.Пометка;
	ВыводЗаголовка();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтчетаПриИзменении(Элемент)
	Отчет.ДатаОтчетаВручную = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтчетаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Отчет.ДатаОтчетаВручную = Ложь;
	ЗаполнитьДатуОтчета();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОтобразитьСостояниеНесформированногоОтчета();
	УстановитьПараметрыВыбора_КонтрактВЭД();
	ЗаполнитьКонтрактВЭД();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ОтобразитьСостояниеНесформированногоОтчета();
	УстановитьПараметрыВыбора_КонтрактВЭД();
	ЗаполнитьКонтрактВЭД();
КонецПроцедуры

&НаКлиенте
Процедура ВидКонтрактаВЭДПриИзменении(Элемент)
	ВидКонтрактаВЭДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВидКонтрактаВЭДПриИзмененииНаСервере()
	ОтобразитьСостояниеНесформированногоОтчета();
	
	Если Отчет.ВидКонтрактаВЭД <> "Контракт" Тогда
		Отчет.НаправлениеДвижения = "";
	КонецЕсли;
	Если Отчет.ВидКонтрактаВЭД <> "Кредитный договор" Тогда
		Отчет.КредитЗаем = "";
	КонецЕсли;

	УстановитьПараметрыВыбора_КонтрактВЭД();
	УстановитьОтображение_НаправлениеДвижения();
	УстановитьОтображение_КредитЗаем();
	
	ЗаполнитьКонтрактВЭД();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактВЭДПриИзменении(Элемент)
	КонтрактВЭДПриИзмененииНаСервере();
	
	ОтобразитьСостояниеНесформированногоОтчета();
КонецПроцедуры

&НаСервере
Процедура КонтрактВЭДПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Отчет.КонтрактВЭД) Тогда
		Отчет.Контрагент = Отчет.КонтрактВЭД.Контрагент;
		Отчет.Организация = Отчет.КонтрактВЭД.Организация;
		
		ИзменитьВидКонтрактаВЭД();
		ИзменитьНаправлениеДвижения();
		ИзменитьКредитЗаем();
		
		УстановитьПараметрыВыбора_КонтрактВЭД();
	КонецЕсли;
	
	УстановитьОтображение_НаправлениеДвижения();
	УстановитьОтображение_КредитЗаем();
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДвиженияПриИзменении(Элемент)
	ОтобразитьСостояниеНесформированногоОтчета();
	УстановитьПараметрыВыбора_КонтрактВЭД();
	ЗаполнитьКонтрактВЭД();
КонецПроцедуры

&НаКлиенте
Процедура ВидСправкиВалютногоКонтроляПриИзменении(Элемент)
	ОтобразитьСостояниеНесформированногоОтчета();
	
	Если Отчет.ВидСправкиВалютногоКонтроля = "" Тогда
		Отчет.ВидСправкиВалютногоКонтроля = "СКВО+СПД";
	КонецЕсли;
	
	УстановитьОтображение_СправкаВалютногоКонтроля();
	
	Если Отчет.ВидСправкиВалютногоКонтроля = "СКВО+СПД" Тогда
		Отчет.СправкаВалютногоКонтроля = Неопределено;
	ИначеЕсли Отчет.ВидСправкиВалютногоКонтроля = "Только СКВО" Тогда
		Элементы.СправкаВалютногоКонтроля.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.РЭЙ_СправкаОВалютныхОперациях");
	ИначеЕсли Отчет.ВидСправкиВалютногоКонтроля = "Только СПД" Тогда
		Элементы.СправкаВалютногоКонтроля.ОграничениеТипа = Новый ОписаниеТипов("ДокументСсылка.РЭЙ_СправкаОПодтверждающихДокументах");
	КонецЕсли;
	
	Отчет.СправкаВалютногоКонтроля = Элементы.СправкаВалютногоКонтроля.ОграничениеТипа.ПривестиЗначение(Отчет.СправкаВалютногоКонтроля);
КонецПроцедуры


&НаКлиенте
Процедура СправкаВалютногоКонтроляПриИзменении(Элемент)
	ОтобразитьСостояниеНесформированногоОтчета();
КонецПроцедуры

&НаКлиенте
Процедура СправкаВалютногоКонтроляНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Отчет.ВидСправкиВалютногоКонтроля = "СКВО+СПД" Тогда
		
		Возврат;
		
	ИначеЕсли Отчет.ВидСправкиВалютногоКонтроля = "Только СКВО" Тогда
		ПараметрыОткрытия	= Новый Структура;
		
		Отбор	= Новый Структура;
		
		Если ЗначениеЗаполнено(Отчет.Контрагент) Или ЗначениеЗаполнено(Отчет.КонтрактВЭД) Тогда
			
			МассивСсылок	= ПолучитьМассивСправокОВалютныхОперациях(Отчет.Контрагент, Отчет.КонтрактВЭД); 
			Отбор.Вставить("Ссылка", МассивСсылок);
						
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Отчет.Организация) Тогда
			Отбор.Вставить("Организация", Отчет.Организация);
		КонецЕсли;
		
		ПараметрыОткрытия.Вставить("Отбор", Отбор);
        ПараметрыОткрытия.Вставить("ПараметрТекущаяСтрока", Отчет.СправкаВалютногоКонтроля);
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);

		ОткрытьФорму("Документ.РЭЙ_СправкаОВалютныхОперациях.ФормаВыбора", ПараметрыОткрытия, Элемент);
	ИначеЕсли Отчет.ВидСправкиВалютногоКонтроля = "Только СПД" Тогда
		ПараметрыОткрытия	= Новый Структура;
		Отбор	= Новый Структура;
		
		Если ЗначениеЗаполнено(Отчет.Контрагент) Тогда
			Отбор.Вставить("Контрагент", Отчет.Контрагент);
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Отчет.КонтрактВЭД) Тогда
			Отбор.Вставить("КонтрактВЭД", Отчет.КонтрактВЭД);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Отчет.Организация) Тогда
			Отбор.Вставить("Организация", Отчет.Организация);
		КонецЕсли;

		ПараметрыОткрытия.Вставить("Отбор", Отбор);
		ПараметрыОткрытия.Вставить("ПараметрТекущаяСтрока", Отчет.СправкаВалютногоКонтроля);
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
		
		ОткрытьФорму("Документ.РЭЙ_СправкаОПодтверждающихДокументах.ФормаВыбора", ПараметрыОткрытия, Элемент);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура КредитЗаемПриИзменении(Элемент)
	ОтобразитьСостояниеНесформированногоОтчета();
	УстановитьПараметрыВыбора_КонтрактВЭД();
	ЗаполнитьКонтрактВЭД();
КонецПроцедуры

#КонецОбласти

#Область Отображение

&НаСервере
Процедура УстановитьОтображение_НаправлениеДвижения()
	Если Отчет.ВидКонтрактаВЭД = "Контракт" Тогда
		Элементы.НаправлениеДвижения.Видимость = Истина;
	Иначе
		Элементы.НаправлениеДвижения.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_КредитЗаем()
	Если Отчет.ВидКонтрактаВЭД = "Кредитный договор" Тогда
		Элементы.КредитЗаем.Видимость = Истина;
	Иначе
		Элементы.КредитЗаем.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИзменитьВидКонтрактаВЭД()
	Если Отчет.КонтрактВЭД.КредитныйДоговор = Ложь Тогда
		Отчет.ВидКонтрактаВЭД = "Контракт";
	КонецЕсли; 
	
	Если Отчет.КонтрактВЭД.КредитныйДоговор Тогда
		Отчет.ВидКонтрактаВЭД = "Кредитный договор";
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ИзменитьНаправлениеДвижения()
	Если Отчет.КонтрактВЭД.КредитныйДоговор Тогда
		Отчет.НаправлениеДвижения = "";
		Возврат;
	КонецЕсли; 
	
	Если Отчет.КонтрактВЭД.Экспорт И Отчет.КонтрактВЭД.Импорт
		Или Отчет.КонтрактВЭД.Экспорт = Ложь И Отчет.КонтрактВЭД.Импорт =  Ложь Тогда
		Отчет.НаправлениеДвижения = "";
	КонецЕсли; 

	Если Отчет.КонтрактВЭД.Экспорт Тогда
		Отчет.НаправлениеДвижения = "Экспорт";
	КонецЕсли; 
	
	Если Отчет.КонтрактВЭД.Импорт Тогда
		Отчет.НаправлениеДвижения = "Импорт";
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ИзменитьКредитЗаем()
	Если Отчет.КонтрактВЭД.КредитныйДоговор = Ложь Тогда
		Отчет.КредитЗаем = "";
		Возврат;
	КонецЕсли; 
	
	Если Отчет.КонтрактВЭД.ПредоставлениеЗайма И Отчет.КонтрактВЭД.ПривлечениеКредитаЗайма Тогда
		Отчет.КредитЗаем = "";
	КонецЕсли; 

	Если Отчет.КонтрактВЭД.ПредоставлениеЗайма Тогда
		Отчет.КредитЗаем = "Выданный";
	КонецЕсли; 
	
	Если Отчет.КонтрактВЭД.ПривлечениеКредитаЗайма Тогда
		Отчет.КредитЗаем = "Полученный";
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОтобразитьСостояниеНесформированногоОтчета()
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения	= ДополнительныйРежимОтображения.Неактуальность;
	Элементы.Результат.ОтображениеСостояния.Видимость = Истина;
	Отчет.ВысотаЗаголовка = 0;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_СправкаВалютногоКонтроля()
	Если Отчет.ВидСправкиВалютногоКонтроля <> "СКВО+СПД" Тогда
		Элементы.СправкаВалютногоКонтроля.Видимость = Истина;
	Иначе
		Элементы.СправкаВалютногоКонтроля.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ВыводЗаголовка()
	Если Отчет.ВысотаЗаголовка <> 0 Тогда
		Результат.Область(1,, Отчет.ВысотаЗаголовка).Видимость = Элементы.ВыводитьЗаголовок.Пометка;		
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивСправокОВалютныхОперациях(Контрагент, КонтрактВЭД) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СВО.Ссылка
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК СВО
	|ГДЕ
	|	(СВО.ПаспортСделки.Контрагент = &Контрагент
	|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И (СВО.ПаспортСделки.КонтрактВЭД = &КонтрактВЭД
	|			ИЛИ &КонтрактВЭД = ЗНАЧЕНИЕ(Справочник.РЭЙ_КонтрактыВЭД.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СВО_Ручные.Ссылка
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперацииРучные КАК СВО_Ручные
	|ГДЕ
	|	(СВО_Ручные.ПаспортСделки.Контрагент = &Контрагент
	|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|	И (СВО_Ручные.ПаспортСделки.КонтрактВЭД = &КонтрактВЭД
	|			ИЛИ &КонтрактВЭД = ЗНАЧЕНИЕ(Справочник.РЭЙ_КонтрактыВЭД.ПустаяСсылка))";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("КонтрактВЭД", КонтрактВЭД);
	
	МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат МассивСсылок;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДатуОтчета()
	Если Не Отчет.ДатаОтчетаВручную Тогда
		Отчет.ДатаОтчета = ТекущаяДатаСеанса();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтрактВЭД()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РЭЙ_КонтрактыВЭД.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
	|ГДЕ
	|	РЭЙ_КонтрактыВЭД.Контрагент = &Контрагент
	|	И РЭЙ_КонтрактыВЭД.Организация = &Организация
	|	И НЕ РЭЙ_КонтрактыВЭД.ПометкаУдаления
	|	И (&ВидКонтрактаВЭД = """"
	|			ИЛИ &ВидКонтрактаВЭД = ""Контракт""
	|				И РЭЙ_КонтрактыВЭД.КредитныйДоговор = ЛОЖЬ
	|			ИЛИ &ВидКонтрактаВЭД = ""Кредитный договор""
	|				И РЭЙ_КонтрактыВЭД.КредитныйДоговор = ИСТИНА)
	|	И (&НаправлениеДвижения = """"
	|			ИЛИ &НаправлениеДвижения = ""Экспорт""
	|				И РЭЙ_КонтрактыВЭД.Экспорт
	|			ИЛИ &НаправлениеДвижения = ""Кредитный договор""
	|				И РЭЙ_КонтрактыВЭД.Импорт)
	|	И (&КредитЗаем = """"
	|			ИЛИ &КредитЗаем = ""Полученный""
	|				И РЭЙ_КонтрактыВЭД.ПривлечениеКредитаЗайма
	|			ИЛИ &КредитЗаем = ""Выданный""
	|				И РЭЙ_КонтрактыВЭД.ПредоставлениеЗайма)";

	Запрос.УстановитьПараметр("Контрагент", Отчет.Контрагент);
	Запрос.УстановитьПараметр("Организация", Отчет.Организация);
	Запрос.УстановитьПараметр("ВидКонтрактаВЭД", Отчет.ВидКонтрактаВЭД);
	Запрос.УстановитьПараметр("НаправлениеДвижения", Отчет.НаправлениеДвижения);
	Запрос.УстановитьПараметр("КредитЗаем", Отчет.КредитЗаем);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Отчет.КонтрактВЭД = Выборка.Ссылка;
		КонтрактВЭДПриИзмененииНаСервере();
	Иначе
		Отчет.КонтрактВЭД = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбора_КонтрактВЭД()
	МассивПараметровВыбора = Новый Массив;
	
	Если ЗначениеЗаполнено(Отчет.ВидКонтрактаВЭД) Тогда
		Если Отчет.ВидКонтрактаВЭД = "Контракт" Тогда
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.КредитныйДоговор", Ложь));
		КонецЕсли;
		Если Отчет.ВидКонтрактаВЭД = "Кредитный договор" Тогда
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.КредитныйДоговор", Истина));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.НаправлениеДвижения) Тогда
		Если Отчет.НаправлениеДвижения = "Импорт" Тогда
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Импорт", Истина));
		КонецЕсли;
		Если Отчет.НаправлениеДвижения = "Экспорт" Тогда
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Экспорт", Истина));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.КредитЗаем) Тогда
		Если Отчет.КредитЗаем = "Полученный" Тогда
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПривлечениеКредитаЗайма", Истина));
		КонецЕсли;
		Если Отчет.КредитЗаем = "Выданный" Тогда
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ПредоставлениеЗайма", Истина));
		КонецЕсли;
	КонецЕсли;
	
	Элементы.КонтрактВЭД.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	
	СвязиПараметровВыбора = Новый Массив;
	
	Если ЗначениеЗаполнено(Отчет.Организация) Тогда
		СвязиПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Организация", "Отчет.Организация"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Отчет.Контрагент) Тогда
		СвязиПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Контрагент", "Отчет.Контрагент"));
	КонецЕсли;
	
	Элементы.КонтрактВЭД.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
КонецПроцедуры

#КонецОбласти

#Область ФормированиеОтчета

&НаСервере
Процедура ВывестиОтчет(ТабДок)
	Если Ложь Тогда
		ТабДок = Новый ТабличныйДокумент;
	КонецЕсли;
	Макет = Отчеты.РЭЙ_СравнительнаяВедомостьВзаиморасчетовСКонтрагентамиВКиБУ.ПолучитьМакет("Макет");
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ДатаОтчета = Формат(?(ЗначениеЗаполнено(Отчет.ДатаОтчета), Отчет.ДатаОтчета, ТекущаяДата()), "ДФ='dd.MM.yyyy HH:mm:ss'");
	Область.Параметры.Организация = ?(ЗначениеЗаполнено(Отчет.Организация), Отчет.Организация, "Все");
	Область.Параметры.Контрагент = ?(ЗначениеЗаполнено(Отчет.Контрагент), Отчет.Контрагент, "Все");
	Область.Параметры.ВидКонтрактаВЭД = ?(ЗначениеЗаполнено(Отчет.ВидКонтрактаВЭД), Отчет.ВидКонтрактаВЭД, "Все");
	Область.Параметры.КонтрактВЭД = ?(ЗначениеЗаполнено(Отчет.КонтрактВЭД), Отчет.КонтрактВЭД, "Все");
	Область.Параметры.НаправлениеДвижения = ?(ЗначениеЗаполнено(Отчет.НаправлениеДвижения), Отчет.НаправлениеДвижения, "Все");
	Область.Параметры.ВидСправкиВалютногоКонтроля = Отчет.ВидСправкиВалютногоКонтроля;
	Область.Параметры.СправкаВалютногоКонтроля = ?(ЗначениеЗаполнено(Отчет.СправкаВалютногоКонтроля), РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(Отчет.СправкаВалютногоКонтроля), "Все");
	ТабДок.Вывести(Область);
	Отчет.ВысотаЗаголовка = ТабДок.ВысотаТаблицы;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	ПодготовитьКонтрактыВЭД(МенеджерВТ);
	ПодготовитьДанныеВК(МенеджерВТ);
	ПодготовитьДанныеБУ(МенеджерВТ);
	ПодготовитьИтоговыеДанные(МенеджерВТ);
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФормированиеПоРамочномуКонтракту", Отчет.КонтрактВЭД.РамочныйКонтракт);
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Данные.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА &ФормированиеПоРамочномуКонтракту
	|			ТОГДА Данные.ДопСоглашение
	|		ИНАЧЕ Данные.КонтрактВЭД
	|	КОНЕЦ КАК КонтрактВЭД,
	|	Данные.ПаспортСделки КАК ПаспортСделки,
	|	Данные.ПаспортСделки.НомерПаспортаСделки КАК НомерПаспортаСделки,
	|	Данные.ПаспортСделки.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК Валюта,
	|	Данные.СправкаВалютногоКонтроля КАК СправкаВалютногоКонтроля,
	|	Данные.РасчетныйДокумент КАК РасчетныйДокумент,
	|	Данные.СчетДт,
	|	Данные.СчетКт,
	|	Данные.ВалютнаяСуммаБУ КАК ВалютнаяСуммаБУ,
	|	Данные.СуммаБУ КАК СуммаБУ,
	|	Данные.ВалютнаяСуммаВК КАК ВалютнаяСуммаВК,
	|	Данные.СуммаВК КАК СуммаВК,
	|	Данные.ВалютноеОтклонение КАК ВалютноеОтклонение,
	|	Данные.Отклонение КАК Отклонение
	|ИЗ
	|	Данные КАК Данные
	|ГДЕ
	|	(&ФормированиеПоРамочномуКонтракту = ЛОЖЬ
	|			ИЛИ Данные.КонтрактВЭД.ДоговорКонтрагента <> Данные.ДопСоглашение)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Данные.Контрагент.Наименование,
	|	Данные.КонтрактВЭД.КонтрактДатаПодписания,
	|	Данные.КонтрактВЭД.КонтрактНомер,
	|	Данные.КонтрактВЭД.Наименование,
	|	Данные.СправкаВалютногоКонтроля.Дата,
	|	Данные.РасчетныйДокумент.Дата
	|ИТОГИ
	|	СУММА(ВалютнаяСуммаБУ),
	|	СУММА(СуммаБУ),
	|	СУММА(ВалютнаяСуммаВК),
	|	СУММА(СуммаВК),
	|	СУММА(ВалютноеОтклонение),
	|	СУММА(Отклонение)
	|ПО
	|	Контрагент,
	|	КонтрактВЭД,
	|	ПаспортСделки,
	|	СправкаВалютногоКонтроля,
	|	РасчетныйДокумент";

	РезультатЗапроса = Запрос.Выполнить();
	
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Область);
	ТабДок.ФиксацияСверху = ТабДок.ВысотаТаблицы;
	
	ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаКонтрагент.Следующий() Цикл
		Область = Макет.ПолучитьОбласть("Контрагент");
		Область.Параметры.Заполнить(ВыборкаКонтрагент);
		ТабДок.Вывести(Область);
		
		ВыборкаКонтрактВЭД = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаКонтрактВЭД.Следующий() Цикл
			ВывестиКонтракт(ВыборкаКонтрактВЭД, ТабДок, Макет);
		КонецЦикла;
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Дно");
	ТабДок.Вывести(Область);
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
КонецПроцедуры

&НаСервере
Процедура ПодготовитьКонтрактыВЭД(МенеджерВТ)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РЭЙ_КонтрактыВЭД.Ссылка,
	|	РЭЙ_КонтрактыВЭД.ДоговорКонтрагента
	|ПОМЕСТИТЬ ТаблицаКонтрактовВЭД
	|ИЗ
	|	Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
	|ГДЕ
	|	ИСТИНА";
	Если ЗначениеЗаполнено(Отчет.Организация) Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И РЭЙ_КонтрактыВЭД.Организация = &Организация";
	КонецЕсли;
	Если ЗначениеЗаполнено(Отчет.Контрагент) Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И РЭЙ_КонтрактыВЭД.Контрагент = &Контрагент";
	КонецЕсли;
	Если ЗначениеЗаполнено(Отчет.КонтрактВЭД) Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И РЭЙ_КонтрактыВЭД.Ссылка = &КонтрактВЭД";
	КонецЕсли;
	//Вид контракта ВЭД
	Если Отчет.ВидКонтрактаВЭД = "Контракт" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И РЭЙ_КонтрактыВЭД.КредитныйДоговор = ЛОЖЬ";
	КонецЕсли;
	Если Отчет.ВидКонтрактаВЭД = "Кредитный договор" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И РЭЙ_КонтрактыВЭД.КредитныйДоговор";
	КонецЕсли;
	//Направление движения
	Если Отчет.НаправлениеДвижения = "Импорт" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И РЭЙ_КонтрактыВЭД.Импорт";
	КонецЕсли;
	Если Отчет.НаправлениеДвижения = "Экспорт" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И РЭЙ_КонтрактыВЭД.Экспорт";
	КонецЕсли;
	// Кредит/заем
	Если Отчет.КредитЗаем = "Полученный" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И РЭЙ_КонтрактыВЭД.ПривлечениеКредитаЗайма";
	КонецЕсли;
	Если Отчет.КредитЗаем = "Выданный" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И РЭЙ_КонтрактыВЭД.ПредоставлениеЗайма";
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация", Отчет.Организация);
	Запрос.УстановитьПараметр("Контрагент", Отчет.Контрагент);
	Запрос.УстановитьПараметр("КонтрактВЭД", Отчет.КонтрактВЭД);
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДанныеВК(МенеджерВТ)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Справки.КонтрактВЭД.Контрагент КАК Контрагент,
	|	Справки.КонтрактВЭД КАК КонтрактВЭД,
	|	Справки.ПаспортСделки,
	|	Справки.Справка КАК СправкаВалютногоКонтроля,
	|	Справки.РасчетныйДокумент,
	|	Справки.Справка.Дата КАК ДатаСправки,
	|	Справки.РасчетныйДокумент.Дата КАК ДатаРасчетногоДокумента,
	|	Справки.ВалютаДокумента КАК ВалютаОперации,
	|	ВЫБОР
	|		КОГДА Справки.ЭтоДебет
	|			ТОГДА Справки.СуммаВВалютеДокумента
	|		ИНАЧЕ -Справки.СуммаВВалютеДокумента
	|	КОНЕЦ КАК СуммаВалютнойОперации,
	|	ВЫБОР
	|		КОГДА Справки.ЭтоДебет
	|			ТОГДА Справки.СуммаВВалютеКонтракта
	|		ИНАЧЕ -Справки.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК ВалютнаяСумма,
	|	Справки.ИдентификаторРучнойОперации,
	|	ВЫБОР
	|		КОГДА Справки.ДопСоглашение = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА Справки.КонтрактВЭД.ДоговорКонтрагента
	|		ИНАЧЕ Справки.ДопСоглашение
	|	КОНЕЦ КАК ДопСоглашение
	|ПОМЕСТИТЬ ДанныеВК
	|ИЗ
	|	РегистрСведений.РЭЙ_СправкиВалютногоКонтроля.СрезПоследних(&Дата, ) КАК Справки
	|ГДЕ
	|	Справки.КонтрактВЭД В
	|			(ВЫБРАТЬ
	|				ТаблицаКонтрактовВЭД.Ссылка
	|			ИЗ
	|				ТаблицаКонтрактовВЭД)";
	
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Отчет.ДатаОтчета), Отчет.ДатаОтчета, ТекущаяДата()));
	Запрос.Выполнить();
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДанныеБУ(МенеджерВТ)
	СписокСчетов = Новый Массив;
	Макет = Отчеты.РЭЙ_СравнительнаяВедомостьВзаиморасчетовСКонтрагентамиВКиБУ.ПолучитьМакет("Счета");
	Для т = 3 по Макет.ВысотаТаблицы Цикл
		КодСчета = Макет.Область(т, 1).Текст;
		текСчетУчета = ПланыСчетов.Хозрасчетный.НайтиПоКоду(КодСчета);
		Если ЗначениеЗаполнено(текСчетУчета) Тогда
			СписокСчетов.Добавить(текСчетУчета);
		КонецЕсли;
	КонецЦикла;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	ИДКонфигурации=РегламентированнаяОтчетностьПереопределяемый.ИДКонфигурации();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(РЭЙ_ПаспортСделки.Ссылка) КАК ПаспортСделки,
	|	РЭЙ_ПаспортСделки.КонтрактВЭД
	|ПОМЕСТИТЬ КонтрактыПаспорта
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки КАК РЭЙ_ПаспортСделки
	|ГДЕ
	|	РЭЙ_ПаспортСделки.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РЭЙ_ПаспортСделки.КонтрактВЭД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКонтрактовВЭД.Ссылка,
	|	ТаблицаКонтрактовВЭД.ДоговорКонтрагента КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ КонтрактыДоговорыКонтрагентов
	|ИЗ
	|	ТаблицаКонтрактовВЭД КАК ТаблицаКонтрактовВЭД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РЭЙ_ДопСоглашения.Договор,
	|	РЭЙ_ДопСоглашения.ДопСоглашение
	|ИЗ
	|	РегистрСведений.РЭЙ_ДопСоглашения КАК РЭЙ_ДопСоглашения
	|ГДЕ
	|	РЭЙ_ДопСоглашения.Договор В
	|			(ВЫБРАТЬ
	|				ТаблицаКонтрактовВЭД.Ссылка
	|			ИЗ
	|				ТаблицаКонтрактовВЭД)
	|	И РЭЙ_ДопСоглашения.Договор.РамочныйКонтракт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтрактыДоговорыКонтрагентов.Ссылка КАК КонтрактВЭД,
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК РасчетныйДокумент,
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ХозрасчетныйОборотыДтКт.ВалютаДт КАК Валюта,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт.Валютный
	|			ТОГДА ХозрасчетныйОборотыДтКт.ВалютнаяСуммаОборотДт
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетКт.Валютный
	|			ТОГДА ХозрасчетныйОборотыДтКт.ВалютнаяСуммаОборотКт
	|		ИНАЧЕ ХозрасчетныйОборотыДтКт.СуммаОборот
	|	КОНЕЦ КАК ВалютнаяСумма,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК Сумма,
	|	ХозрасчетныйОборотыДтКт.Период КАК ДатаРасчетногоДокумента,
	|	КонтрактыПаспорта.ПаспортСделки,
	|	КонтрактыДоговорыКонтрагентов.ДоговорКонтрагента КАК ДопСоглашение
	|ПОМЕСТИТЬ ДанныеБУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(, &Дата, Регистратор, СчетДт В (&СписокСчетов), , НЕ СчетКт В ИЕРАРХИИ (&Счет19), , ) КАК ХозрасчетныйОборотыДтКт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрактыДоговорыКонтрагентов КАК КонтрактыДоговорыКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ КонтрактыПаспорта КАК КонтрактыПаспорта
	|			ПО КонтрактыДоговорыКонтрагентов.Ссылка = КонтрактыПаспорта.КонтрактВЭД
	|		ПО ХозрасчетныйОборотыДтКт.СубконтоДт2 = КонтрактыДоговорыКонтрагентов.ДоговорКонтрагента
	|ГДЕ";
	Если ИДКонфигурации="УПП" Тогда 
		Запрос.Текст=Запрос.Текст+"
	|	(ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПлатежныйОрдерСписаниеДенежныхСредств
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПлатежныйОрдерПоступлениеДенежныхСредств
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.РЭЙ_ЗаявлениеНаПереводВалюты
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеДопРасходов
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ИнкассовоеПоручениеПереданное
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ИнкассовоеПоручениеПолученное
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.АккредитивПереданный) И"; 
	ИначеЕсли ИДКонфигурации="БП" Тогда 
		Запрос.Текст=Запрос.Текст+"
		|	(ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.СписаниеСРасчетногоСчета
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеДопРасходов
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя) И";
	КонецЕсли;
	Запрос.Текст=Запрос.Текст+"
	|	НЕ(ХозрасчетныйОборотыДтКт.СчетКт В ИЕРАРХИИ (&Счет9101)
	|				И ХозрасчетныйОборотыДтКт.СубконтоКт1 В (&СписокСубконтоКурсовыхРазниц))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонтрактыДоговорыКонтрагентов.Ссылка,
	|	ХозрасчетныйОборотыДтКт.Регистратор,
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ХозрасчетныйОборотыДтКт.ВалютаКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетКт.Валютный
	|			ТОГДА -ХозрасчетныйОборотыДтКт.ВалютнаяСуммаОборотКт
	|		КОГДА ХозрасчетныйОборотыДтКт.СчетДт.Валютный
	|			ТОГДА -ХозрасчетныйОборотыДтКт.ВалютнаяСуммаОборотДт
	|		ИНАЧЕ -ХозрасчетныйОборотыДтКт.СуммаОборот
	|	КОНЕЦ,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	ХозрасчетныйОборотыДтКт.Период,
	|	КонтрактыПаспорта.ПаспортСделки,
	|	КонтрактыДоговорыКонтрагентов.ДоговорКонтрагента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(, &Дата, Регистратор, НЕ СчетДт В ИЕРАРХИИ (&Счет19), , СчетКт В (&СписокСчетов), , ) КАК ХозрасчетныйОборотыДтКт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрактыДоговорыКонтрагентов КАК КонтрактыДоговорыКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ КонтрактыПаспорта КАК КонтрактыПаспорта
	|			ПО КонтрактыДоговорыКонтрагентов.Ссылка = КонтрактыПаспорта.КонтрактВЭД
	|		ПО ХозрасчетныйОборотыДтКт.СубконтоКт2 = КонтрактыДоговорыКонтрагентов.ДоговорКонтрагента
	|ГДЕ";
	Если ИДКонфигурации="УПП" Тогда 
		Запрос.Текст=Запрос.Текст+"
	|	(ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПлатежныйОрдерСписаниеДенежныхСредств
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПлатежныйОрдерПоступлениеДенежныхСредств
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.РЭЙ_ЗаявлениеНаПереводВалюты
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеДопРасходов
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ИнкассовоеПоручениеПереданное
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ИнкассовоеПоручениеПолученное
	|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.АккредитивПереданный) И"; 
	ИначеЕсли ИДКонфигурации="БП" Тогда 
		Запрос.Текст=Запрос.Текст+"
		|	(ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.СписаниеСРасчетногоСчета
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ПоступлениеДопРасходов
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
		|			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя) И";
	КонецЕсли;
	Запрос.Текст=Запрос.Текст+"
	|	НЕ(ХозрасчетныйОборотыДтКт.СчетДт В ИЕРАРХИИ (&Счет9102)
	|				И ХозрасчетныйОборотыДтКт.СубконтоДт1 В (&СписокСубконтоКурсовыхРазниц))";
	
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Отчет.ДатаОтчета), Отчет.ДатаОтчета, ТекущаяДата()));
	Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);
	Запрос.УстановитьПараметр("Счет19", ПланыСчетов.Хозрасчетный.НайтиПоКоду("19"));
	Запрос.УстановитьПараметр("Счет9101", ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.01"));
	Запрос.УстановитьПараметр("Счет9102", ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02"));
	
	СписокСубконтоКурсовыхРазниц = Новый Массив;
	СписокСубконтоКурсовыхРазниц.Добавить(ПланыВидовХарактеристик.СтатьиДоходов.КурсовыеРазницы);
	СписокСубконтоКурсовыхРазниц.Добавить(ПланыВидовХарактеристик.СтатьиРасходов.КурсовыеРазницы);
	Запрос.УстановитьПараметр("СписокСубконтоКурсовыхРазниц", СписокСубконтоКурсовыхРазниц);
	
	Запрос.Выполнить();
КонецПроцедуры

&НаСервере
Процедура ПодготовитьИтоговыеДанные(МенеджерВТ)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДанныеВК.Контрагент, ДанныеБУ.КонтрактВЭД.Контрагент) КАК Контрагент,
	|	ЕСТЬNULL(ДанныеВК.КонтрактВЭД, ДанныеБУ.КонтрактВЭД) КАК КонтрактВЭД,
	|	ЕСТЬNULL(ДанныеВК.ПаспортСделки, ДанныеБУ.ПаспортСделки) КАК ПаспортСделки,
	|	ЕСТЬNULL(ДанныеВК.ДопСоглашение, ДанныеБУ.ДопСоглашение) КАК ДопСоглашение,
	|	ДанныеВК.СправкаВалютногоКонтроля КАК СправкаВалютногоКонтроля,
	|	ЕСТЬNULL(ДанныеВК.РасчетныйДокумент, ДанныеБУ.РасчетныйДокумент) КАК РасчетныйДокумент,
	|	ЕСТЬNULL(ЕСТЬNULL(ДанныеБУ.ДатаРасчетногоДокумента, ДанныеВК.ДатаРасчетногоДокумента), ДанныеВК.СправкаВалютногоКонтроля.Дата) КАК ДатаРасчетногоДокумента,
	|	ЕСТЬNULL(ДанныеВК.СуммаВалютнойОперации, 0) КАК СуммаВалютнойОперации,
	|	ДанныеВК.ВалютаОперации,
	|	ДанныеВК.ИдентификаторРучнойОперации,
	|	ДанныеБУ.СчетДт,
	|	ДанныеБУ.СчетКт,
	|	ЕСТЬNULL(ДанныеБУ.ВалютнаяСумма, 0) КАК ВалютнаяСуммаБУ,
	|	ЕСТЬNULL(ДанныеБУ.Сумма, 0) КАК СуммаБУ,
	|	ЕСТЬNULL(ДанныеВК.ВалютнаяСумма, 0) КАК ВалютнаяСуммаВК,
	|	0 КАК СуммаВК,
	|	0 КАК ВалютноеОтклонение,
	|	0 КАК Отклонение
	|ИЗ
	|	ДанныеВК КАК ДанныеВК
	|		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеБУ КАК ДанныеБУ
	|		ПО ДанныеВК.КонтрактВЭД = ДанныеБУ.КонтрактВЭД
	|			И ДанныеВК.ДопСоглашение = ДанныеБУ.ДопСоглашение
	|			И ДанныеВК.РасчетныйДокумент = ДанныеБУ.РасчетныйДокумент
	|ГДЕ
	|	ИСТИНА";
	Если Отчет.ВидСправкиВалютногоКонтроля <> "СКВО+СПД" Тогда
		Если ЗначениеЗаполнено(Отчет.СправкаВалютногоКонтроля) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	И ДанныеВК.СправкаВалютногоКонтроля = &СправкаВалютногоКонтроля";
		ИначеЕсли Отчет.ВидСправкиВалютногоКонтроля = "Только СКВО" Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	И ДанныеВК.СправкаВалютногоКонтроля ССЫЛКА Документ.РЭЙ_СправкаОВалютныхОперациях";
		ИначеЕсли Отчет.ВидСправкиВалютногоКонтроля = "Только СПД" Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	И ДанныеВК.СправкаВалютногоКонтроля ССЫЛКА Документ.РЭЙ_СправкаОПодтверждающихДокументах";
		КонецЕсли;
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтрактВЭД, ДопСоглашение, СправкаВалютногоКонтроля, РасчетныйДокумент";
	
	Запрос.УстановитьПараметр("СправкаВалютногоКонтроля", Отчет.СправкаВалютногоКонтроля);
	Запрос.Текст = ТекстЗапроса; 
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	текРасчетныйДокумент = Неопределено;
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		//Устраняем задвоения после соединения с регистром бухгалтерии
		Если ЗначениеЗаполнено(СтрокаТаблицы.РасчетныйДокумент) И текРасчетныйДокумент = СтрокаТаблицы.РасчетныйДокумент Тогда
			СтрокаТаблицы.СуммаВалютнойОперации = 0;
			СтрокаТаблицы.ВалютнаяСуммаВК = 0;
			СтрокаТаблицы.СуммаВК = 0;
		КонецЕсли;
		текРасчетныйДокумент = СтрокаТаблицы.РасчетныйДокумент;
		
		Если СтрокаТаблицы.СуммаВалютнойОперации <> 0 И ЗначениеЗаполнено(СтрокаТаблицы.ДатаРасчетногоДокумента) Тогда
			СтруктураКурсаОперации = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(СтрокаТаблицы.ДатаРасчетногоДокумента, Новый Структура("Валюта", СтрокаТаблицы.ВалютаОперации));
			СтруктураКурсаДоговора = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(СтрокаТаблицы.ДатаРасчетногоДокумента, Новый Структура("Валюта", СтрокаТаблицы.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов));
			
			Если СтрокаТаблицы.ВалютнаяСуммаВК = 0 Тогда
				КроссКурс = (СтруктураКурсаОперации.Курс / СтруктураКурсаОперации.Кратность) / (СтруктураКурсаДоговора.Курс / СтруктураКурсаДоговора.Кратность);
				СтрокаТаблицы.ВалютнаяСуммаВК = Окр(СтрокаТаблицы.СуммаВалютнойОперации * КроссКурс, 2);
			КонецЕсли;
			СтрокаТаблицы.СуммаВК = Окр(СтрокаТаблицы.СуммаВалютнойОперации * (СтруктураКурсаОперации.Курс / СтруктураКурсаОперации.Кратность), 2);
		КонецЕсли;
		
		СтрокаТаблицы.ВалютноеОтклонение = СтрокаТаблицы.ВалютнаяСуммаВК - СтрокаТаблицы.ВалютнаяСуммаБУ;
		СтрокаТаблицы.Отклонение = СтрокаТаблицы.СуммаВК - СтрокаТаблицы.СуммаБУ;
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Данные.Контрагент,
	|	Данные.КонтрактВЭД,
	|	Данные.ПаспортСделки,
	|	Данные.ДопСоглашение,
	|	Данные.СправкаВалютногоКонтроля,
	|	Данные.РасчетныйДокумент,
	|	Данные.СуммаВалютнойОперации,
	|	Данные.ВалютаОперации,
	|	Данные.СчетДт,
	|	Данные.СчетКт,
	|	Данные.ВалютнаяСуммаБУ,
	|	Данные.СуммаБУ,
	|	Данные.ВалютнаяСуммаВК,
	|	Данные.СуммаВК,
	|	Данные.ВалютноеОтклонение,
	|	Данные.Отклонение
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	&Данные КАК Данные";
	
	Запрос.УстановитьПараметр("Данные", ТаблицаДанных);
	Запрос.Выполнить();
КонецПроцедуры

&НаСервере
Процедура ВывестиКонтракт(ВыборкаКонтрактВЭД, ТабДок, Макет)
	ВывестиВалюту = Истина;
	ВывестиПаспортСделки = Истина;
	
	ВыборкаПаспортСделки = ВыборкаКонтрактВЭД.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПаспортСделки.Следующий() Цикл
		Область = Макет.ПолучитьОбласть("КонтрактВЭД");
		Область.Параметры.Заполнить(ВыборкаПаспортСделки);
		Если Отчет.КонтрактВЭД.РамочныйКонтракт Тогда
			Область.Параметры.Договор = ВыборкаПаспортСделки.КонтрактВЭД;
		Иначе
			Область.Параметры.Договор = ВыборкаПаспортСделки.КонтрактВЭД.ДоговорКонтрагента;
		КонецЕсли;
		ТабДок.Вывести(Область);
		ВыборкаСправкаВалютногоКонтроля = ВыборкаПаспортСделки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСправкаВалютногоКонтроля.Следующий() Цикл
			Область = Макет.ПолучитьОбласть("СправкаВалютногоКонтроля");
			Область.Параметры.Заполнить(ВыборкаСправкаВалютногоКонтроля);
			Если ЗначениеЗаполнено(ВыборкаСправкаВалютногоКонтроля.СправкаВалютногоКонтроля) Тогда
				Область.Параметры.СправкаВалютногоКонтроляПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(ВыборкаСправкаВалютногоКонтроля.СправкаВалютногоКонтроля);
				Область.Параметры.СправкаВалютногоКонтроляРасшифровка = ВыборкаСправкаВалютногоКонтроля.СправкаВалютногоКонтроля;
			Иначе
				Область.Параметры.СправкаВалютногоКонтроляПредставление = "Справка валютного контроля не создавалась";
				Область.Область(1, 3, 1, 4).ЦветТекста = WebЦвета.Красный;
			КонецЕсли;
			Если ВывестиВалюту Тогда
				Область.Параметры.ВалютаПредставление = ВыборкаПаспортСделки.Валюта;
				ВывестиВалюту = Ложь;
			КонецЕсли;
			ТабДок.Вывести(Область);
			
			ВыборкаРасчетныйДокумент = ВыборкаСправкаВалютногоКонтроля.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ВывестиРасчетныйДокумент(ВыборкаРасчетныйДокумент, ТабДок, Макет, ВывестиПаспортСделки);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВывестиРасчетныйДокумент(ВыборкаРасчетныйДокумент, ТабДок, Макет, ВывестиПаспортСделки = Ложь)
	Пока ВыборкаРасчетныйДокумент.Следующий() Цикл
		
		ВыборкаСчета = ВыборкаРасчетныйДокумент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НачалоСекцииРасчетныйДокумент = ТабДок.ВысотаТаблицы + 1;
		Пока ВыборкаСчета.Следующий() Цикл
			Область = Макет.ПолучитьОбласть("РасчетныйДокумент");
			Область.Параметры.Заполнить(ВыборкаСчета);
			Если ЗначениеЗаполнено(ВыборкаРасчетныйДокумент.РасчетныйДокумент) Тогда
				Область.Параметры.РасчетныйДокументПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(ВыборкаРасчетныйДокумент.РасчетныйДокумент);
				Область.Параметры.РасчетныйДокументРасшифровка = ВыборкаРасчетныйДокумент.РасчетныйДокумент;
				Область.Параметры.ВалютнаяСуммаВК = ВыборкаРасчетныйДокумент.ВалютнаяСуммаВК; 
				Область.Параметры.СуммаВК = ВыборкаРасчетныйДокумент.СуммаВК; 
				Область.Параметры.ВалютноеОтклонение = ВыборкаРасчетныйДокумент.ВалютноеОтклонение; 
				Область.Параметры.Отклонение = ВыборкаРасчетныйДокумент.Отклонение; 
			Иначе
				Область.Параметры.РасчетныйДокументПредставление = "Расчетный документ не указан (ручное заполнение)";
			КонецЕсли;
			Если ВывестиПаспортСделки Тогда
				Область.Параметры.НомерПаспортаСделкиПредставление = ВыборкаРасчетныйДокумент.НомерПаспортаСделки;
				Область.Параметры.ПаспортСделкиРасшифровка = ВыборкаРасчетныйДокумент.ПаспортСделки;
				ВывестиПаспортСделки = Ложь;
			КонецЕсли;
			ТабДок.Вывести(Область);
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ВыборкаРасчетныйДокумент.РасчетныйДокумент) Тогда
			ТабДок.Область(НачалоСекцииРасчетныйДокумент, 5, ТабДок.ВысотаТаблицы, 5).Объединить();
			ТабДок.Область(НачалоСекцииРасчетныйДокумент, 6, ТабДок.ВысотаТаблицы, 6).Объединить();
			ТабДок.Область(НачалоСекцииРасчетныйДокумент, 7, ТабДок.ВысотаТаблицы, 7).Объединить();
			ТабДок.Область(НачалоСекцииРасчетныйДокумент, 13, ТабДок.ВысотаТаблицы, 13).Объединить();
			ТабДок.Область(НачалоСекцииРасчетныйДокумент, 14, ТабДок.ВысотаТаблицы, 14).Объединить();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
