#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		
		Если Не ЗначениеЗаполнено(Параметры.ПараметрКоманды) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Распределение прочих расходов не выполнено или не требуется.';
																	|en = 'Allocation of other expenses is not performed or not required.'"),,,,Отказ);
		КонецЕсли;
		
		ЭтаФорма.ФормаПараметры.Отбор.Вставить("Регистратор", Параметры.ПараметрКоманды);
		
	Иначе
		
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Отчет предназначен только для открытия в документе ""Распределение расходов на себестоимость продукции"".';
								|en = 'You can open the report only in the ""Expense allocation to product cost"" document.'") ;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрРегистратор = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НастройкиОтчета, "Регистратор");
	Регистратор         = ПараметрРегистратор.Значение;
	ДанныеСебестоимости = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НастройкиОтчета, "ДанныеСебестоимости").Значение;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаспределениеПрочихЗатрат.Дата КАК Дата,
		|	РаспределениеПрочихЗатрат.Организация КАК Организация,
		|	РаспределениеПрочихЗатрат.Подразделение КАК Подразделение,
		|	РаспределениеПрочихЗатрат.СтатьяРасходов КАК СтатьяРасходов,
		|	РаспределениеПрочихЗатрат.АналитикаРасходов КАК АналитикаРасходов,
		|	РаспределениеПрочихЗатрат.РаспределятьПоПартиям КАК РаспределятьПоПартиям,
		|	РаспределениеПрочихЗатрат.РаспределятьПоПодразделениям КАК РаспределятьПоПодразделениям,
		|	РаспределениеПрочихЗатрат.РаспределятьНаСтатьи КАК РаспределятьНаСтатьи,
		|	РаспределениеПрочихЗатрат.ОставитьВНЗП КАК ОставитьВНЗП,
		|	РаспределениеПрочихЗатрат.НаправлениеРаспределения КАК НаправлениеРаспределения,
		|	РаспределениеПрочихЗатрат.Показатель КАК Показатель,
		|	РаспределениеПрочихЗатрат.ПартииУказаныВручную КАК ПартииУказаныВручную,
		|	РаспределениеПрочихЗатрат.ПодразделенияУказаныВручную КАК ПодразделенияУказаныВручную,
		|	РаспределениеПрочихЗатрат.ДоляСтоимостиНаНЗП КАК ДоляСтоимостиНаНЗП,
		|	РаспределениеПрочихЗатрат.ДоляСтоимостиНаПроизводство КАК ДоляСтоимостиНаПроизводство,
		|	РаспределениеПрочихЗатрат.БазаРаспределенияПоПодразделениям КАК БазаРаспределенияПоПодразделениям,
		|	РаспределениеПрочихЗатрат.БазаРаспределенияПоПартиям КАК БазаРаспределенияПоПартиям,
		|	РаспределениеПрочихЗатрат.ВсегоДолейСтоимости КАК ВсегоДолейСтоимости,
		|	РаспределениеПрочихЗатрат.ДоляСтоимостиНаСтатьи КАК ДоляСтоимостиНаСтатьи,
		|	РаспределениеПрочихЗатрат.НаправлениеДеятельности КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.РаспределениеПрочихЗатрат КАК РаспределениеПрочихЗатрат
		|ГДЕ
		|	РаспределениеПрочихЗатрат.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Регистратор);
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	
	Если Не Реквизиты.Следующий() Тогда
		
		ВызватьИсключение НСтр("ru = 'Отчет предназначен только для открытия в документе ""Распределение расходов на себестоимость продукции"".';
								|en = 'You can open the report only in the ""Expense allocation to product cost"" document.'") ;
		Возврат;
		
	КонецЕсли;
	
	НачалоПериода     = НачалоМесяца(Реквизиты.Дата);
	ОкончаниеПериода  = КонецМесяца(Реквизиты.Дата);
	МассивОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Реквизиты.Организация);
	ВалютаПлановойСтоимости = Справочники.Валюты.ПустаяСсылка();
	
	Если Реквизиты.БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции
		Или Реквизиты.БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукцииСУчетомБудущихВыпусков Тогда
		
		ВалютаПлановойСтоимости = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ(),
																				"ВалютаЦены");
	КонецЕсли;
	
	Если ДанныеСебестоимости = 3 Тогда
		ВалютаОтчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Иначе 
		ВалютаОтчета = Константы.ВалютаУправленческогоУчета.Получить();
	КонецЕсли;
	
	// Расчет сумм поступивших расходов
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ДанныеСебестоимости = 1
		|			ТОГДА Т.СуммаПриход + Т.СуммаНачальныйОстаток
		|		КОГДА &ДанныеСебестоимости = 2
		|			ТОГДА Т.СуммаБезНДСПриход + Т.СуммаБезНДСНачальныйОстаток
		|		КОГДА &ДанныеСебестоимости = 3
		|			ТОГДА Т.СуммаРеглПриход + Т.СуммаРеглНачальныйОстаток
		|	КОНЕЦ КАК ПоступилоРасхода
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Организация = &Организация
		|				И Подразделение = &Подразделение
		|				И НаправлениеДеятельности = &НаправлениеДеятельности
		|				И СтатьяРасходов = &Статья
		|				И АналитикаРасходов = &Аналитика) КАК Т";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ДанныеСебестоимости", ДанныеСебестоимости);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Статья", Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("Аналитика", Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("НаправлениеДеятельности", Реквизиты.НаправлениеДеятельности);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ШаблонПредставления = НСтр("ru = 'Сумма расходов: %1 (%2)';
								|en = 'Expense amount: %1 (%2)'");
	ПредставлениеСумм = "";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПредставлениеСумм = СтрШаблон(ШаблонПредставления, Выборка.ПоступилоРасхода, ВалютаОтчета);
	КонецЕсли;
	
	// Стоимость
	МассивТиповРаспределенияБазыПоСтоимости = Новый Массив();
	МассивТиповРаспределенияБазыПоСтоимости.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат);
	МассивТиповРаспределенияБазыПоСтоимости.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда);
	МассивТиповРаспределенияБазыПоСтоимости.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда);
	МассивТиповРаспределенияБазыПоСтоимости.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции);
	МассивТиповРаспределенияБазыПоСтоимости.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукцииСУчетомБудущихВыпусков);
	МассивТиповРаспределенияБазыПоСтоимости.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат);
	
	// Количество
	МассивТиповРаспределенияБазыПоКоличеству = Новый Массив();
	МассивТиповРаспределенияБазыПоКоличеству.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов);
	МассивТиповРаспределенияБазыПоКоличеству.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов);
	МассивТиповРаспределенияБазыПоКоличеству.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукции);
	МассивТиповРаспределенияБазыПоКоличеству.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукцииСУчетомБудущихВыпусков);
	
	// Объем
	МассивТиповРаспределенияБазыПоОбъему = Новый Массив();
	МассивТиповРаспределенияБазыПоОбъему.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов);
	МассивТиповРаспределенияБазыПоОбъему.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ОбъемПродукции);
	МассивТиповРаспределенияБазыПоОбъему.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ОбъемПродукцииСУчетомБудущихВыпусков);
	
	// Вес
	МассивТиповРаспределенияБазыПоВесу = Новый Массив();
	МассивТиповРаспределенияБазыПоВесу.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов);
	МассивТиповРаспределенияБазыПоВесу.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ВесПродукции);
	МассивТиповРаспределенияБазыПоВесу.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ВесПродукцииСУчетомБудущихВыпусков);
	
	РасчетСебестоимостиВыполнен = Ложь;
	МВТ = ПартионныйУчет22.ДанныеДляРасшифровкиДолейПроизводственныхРасходов(НачалоПериода, МассивОрганизаций, Регистратор, РасчетСебестоимостиВыполнен);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
#Область ТекстЗапроса
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДД.ПартияПроизводства КАК ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	ДД.СтатьяРасходов КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов,
		|	ДД.Подразделение КАК Подразделение,
		|	ДД.ГруппаПродукции КАК ГруппаПродукции,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА &ДанныеСебестоимости = 1
		|				ТОГДА ДД.Стоимость
		|			КОГДА &ДанныеСебестоимости = 2
		|				ТОГДА ДД.СтоимостьБезНДС
		|			КОГДА &ДанныеСебестоимости = 3
		|				ТОГДА ДД.СтоимостьРегл
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ НаПартииФакт
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Регистратор = &Регистратор
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ВЫБОР
		|			КОГДА &ДанныеСебестоимости = 1
		|				ТОГДА ДД.Стоимость
		|			КОГДА &ДанныеСебестоимости = 2
		|				ТОГДА ДД.СтоимостьБезНДС
		|			КОГДА &ДанныеСебестоимости = 3
		|				ТОГДА ДД.СтоимостьРегл
		|		КОНЕЦ <> 0 
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.Подразделение,
		|	ДД.ДоляСтоимости,
		|	ДД.ГруппаПродукции
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ВЫБОР
		|		КОГДА Строки.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|			ТОГДА Строки.СтатьяРасходов
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|	КОНЕЦ КАК СтатьяРасходов,
		|	Строки.АналитикаРасходов КАК АналитикаРасходов,
		|	ВЫБОР
		|		КОГДА Строки.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
		|			ТОГДА Строки.СтатьяРасходов
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
		|	КОНЕЦ КАК СтатьяАктивовПассивов,
		|	Строки.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА &ДанныеСебестоимости = 1
		|				ТОГДА ДД.Сумма
		|			КОГДА &ДанныеСебестоимости = 2
		|				ТОГДА ДД.СуммаБезНДС
		|			КОГДА &ДанныеСебестоимости = 3
		|				ТОГДА ДД.СуммаРегл
		|		КОНЕЦ) КАК Сумма
		|ПОМЕСТИТЬ НаСтатьиФакт
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Списание КАК Строки
		|		ПО ДД.Регистратор = Строки.Ссылка
		|			И ДД.ИдентификаторСтроки = Строки.ИдентификаторСтроки
		|ГДЕ
		|	ДД.Регистратор = &Регистратор
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ВЫБОР
		|		КОГДА &ДанныеСебестоимости = 1
		|			ТОГДА ДД.Сумма
		|		КОГДА &ДанныеСебестоимости = 2
		|			ТОГДА ДД.СуммаБезНДС
		|		КОГДА &ДанныеСебестоимости = 3
		|			ТОГДА ДД.СуммаРегл
		|	КОНЕЦ <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.НаправлениеДеятельности,
		|	Строки.СтатьяРасходов,
		|	Строки.АналитикаРасходов,
		|	Строки.АналитикаАктивовПассивов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация КАК Организация,
		|	ДД.Подразделение КАК Подразделение,
		|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ДД.СтатьяРасходов КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов,
		|	ВЫБОР
		|		КОГДА &ДанныеСебестоимости = 1
		|			ТОГДА ДД.СуммаОстаток
		|		КОГДА &ДанныеСебестоимости = 2
		|			ТОГДА ДД.СуммаБезНДСОстаток
		|		КОГДА &ДанныеСебестоимости = 3
		|			ТОГДА ДД.СуммаРеглОстаток
		|	КОНЕЦ КАК Сумма
		|ПОМЕСТИТЬ НаНЗПФакт
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы.Остатки(
		|			ДОБАВИТЬКДАТЕ(&ОкончаниеПериода, СЕКУНДА, 1),
		|			Организация = &Организация
		|				И Подразделение = &Подразделение
		|				И НаправлениеДеятельности = &НаправлениеДеятельности
		|				И СтатьяРасходов = &СтатьяРасходов
		|				И АналитикаРасходов = &АналитикаРасходов) КАК ДД
		|ГДЕ
		|	&ОставитьВНЗП
		|	И ВЫБОР
		|		КОГДА &ДанныеСебестоимости = 1
		|			ТОГДА ДД.СуммаОстаток
		|		КОГДА &ДанныеСебестоимости = 2
		|			ТОГДА ДД.СуммаБезНДСОстаток
		|		КОГДА &ДанныеСебестоимости = 3
		|			ТОГДА ДД.СуммаРеглОстаток
		|	КОНЕЦ <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Подразделение КАК Подразделение,
		|	СУММА(ДД.Сумма) КАК Сумма
		|ПОМЕСТИТЬ НаПодразделенияФакт
		|ИЗ
		|	НаПартииФакт КАК ДД
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.КорПодразделение КАК Подразделение,
		|	ДД.ПартияПроизводства КАК ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	ВЫБОР 
		|		КОГДА ДД.ГруппаПродукции = НЕОПРЕДЕЛЕНО 
		|			ТОГДА 
		|				ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
		|			ИНАЧЕ
		|				ДД.ГруппаПродукции
		|	КОНЕЦ КАК ГруппаПродукции,
		|	ДД.Регистратор КАК Регистратор,
		|	&БазаРаспределенияПоПодразделениям КАК ПравилоРаспределенияПоПодразделениям,
		|	ДД.МатериалВидРабот КАК МатериалПродукцияУслуга,
		|	ВЫБОР
		|		КОГДА &ДанныеСебестоимости = 1
		|			ТОГДА ДД.Стоимость
		|		КОГДА &ДанныеСебестоимости = 2
		|			ТОГДА ДД.СтоимостьБезНДС
		|		КОГДА &ДанныеСебестоимости = 3
		|			ТОГДА ДД.СтоимостьРегл
		|	КОНЕЦ КАК Знаменатель,
		|	ВЫБОР
		|		КОГДА ИтогиПоЭтапам.Регистратор ЕСТЬ NULL
		|			ТОГДА 0
		|		КОГДА &ДанныеСебестоимости = 1
		|			ТОГДА ДД.Стоимость
		|		КОГДА &ДанныеСебестоимости = 2
		|			ТОГДА ДД.СтоимостьБезНДС
		|		КОГДА &ДанныеСебестоимости = 3
		|			ТОГДА ДД.СтоимостьРегл
		|	КОНЕЦ КАК ЗначениеПоказателяПроцент
		|ПОМЕСТИТЬ НаПодразделенияДетально
		|ИЗ
		|	БазаПоПодразделениямДетально КАК ДД
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиБазыПоЭтапамПодразделений КАК ИтогиПоЭтапам
		|		ПО (ИтогиПоЭтапам.Регистратор = ДД.Регистратор)
		|			И (ИтогиПоЭтапам.Подразделение = ДД.КорПодразделение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Подразделение КАК Подразделение,
		|	СУММА(ДД.ЗначениеПоказателяПроцент) КАК ЗначениеПоказателяПроцент
		|ПОМЕСТИТЬ НаПодразделенияСводно
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Подразделение КАК Подразделение,
		|		ДД.ЗначениеПоказателяПроцент КАК ЗначениеПоказателяПроцент
		|	ИЗ
		|		НаПодразделенияДетально КАК ДД
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДД.Подразделение,
		|		1
		|	ИЗ
		|		БазаПоЭтапам КАК ДД
		|	ГДЕ
		|		НЕ &РаспределятьПоПодразделениям) КАК ДД
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Подразделение КАК Подразделение,
		|	ДД.ПартияПроизводства КАК ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	&БазаРаспределенияПоПартиям КАК ТипБазыРаспределенияПоПартиям,
		|	ВЫБОР 
		|		КОГДА ДД.ГруппаПродукции = НЕОПРЕДЕЛЕНО 
		|			ТОГДА 
		|				ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
		|			ИНАЧЕ
		|				ДД.ГруппаПродукции
		|	КОНЕЦ КАК ГруппаПродукции,
		|	ВЫБОР
		|		КОГДА ДД.ВидПоказателя = ""Материал""
		|			ТОГДА ДД.Материал
		|		КОГДА ДД.ВидПоказателя = ""ВидРабот""
		|			ТОГДА ДД.ВидРабот
		|		КОГДА ДД.ВидПоказателя = ""Продукция""
		|			ТОГДА ДД.Продукция
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	КОНЕЦ КАК МатериалПродукцияУслуга,
		|	МАКСИМУМ(ВЫБОР
		|		КОГДА &ДанныеСебестоимости = 1
		|			ТОГДА ДД.Стоимость
		|		КОГДА &ДанныеСебестоимости = 2
		|			ТОГДА ДД.СтоимостьБезНДС
		|		КОГДА &ДанныеСебестоимости = 3
		|			ТОГДА ДД.СтоимостьРегл
		|	КОНЕЦ) КАК Знаменатель
		|ПОМЕСТИТЬ НаЭтапыДетально
		|ИЗ
		|	БазаПоЭтапамДетально КАК ДД
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Подразделение,
		|	ДД.ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ГруппаПродукции,
		|	ВЫБОР
		|		КОГДА ДД.ВидПоказателя = ""Материал""
		|			ТОГДА ДД.Материал
		|		КОГДА ДД.ВидПоказателя = ""ВидРабот""
		|			ТОГДА ДД.ВидРабот
		|		КОГДА ДД.ВидПоказателя = ""Продукция""
		|			ТОГДА ДД.Продукция
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.ПартияПроизводства КАК ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	ДД.ГруппаПродукции КАК ГруппаПродукции,
		|	ДД.Материал КАК Материал,
		|	2 КАК ПорядокВывода,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Объем) КАК Объем,
		|	СУММА(ДД.Вес) КАК Вес,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА &ДанныеСебестоимости = 1
		|				ТОГДА ДД.Стоимость
		|			КОГДА &ДанныеСебестоимости = 2
		|				ТОГДА ДД.СтоимостьБезНДС
		|			КОГДА &ДанныеСебестоимости = 3
		|				ТОГДА ДД.СтоимостьРегл
		|		КОНЕЦ) КАК Стоимость,
		|	0 КАК НормативнаяСтоимость,
		|	ДД.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ДанныеНеВошедшие
		|ИЗ
		|	ДанныеПоПредварительнымМатериальнымЗатратам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаПодразделенияСводно КАК НаПодразделенияСводно
		|		ПО ДД.Подразделение = НаПодразделенияСводно.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ БазаПоЭтапамДетально КАК ОтборПоПартиям
		|		ПО ДД.ПартияПроизводства = ОтборПоПартиям.ПартияПроизводства
		|			И ДД.ЗаказНаПроизводство = ОтборПоПартиям.ЗаказНаПроизводство
		|			И ДД.КодСтрокиПродукция = ОтборПоПартиям.КодСтрокиПродукция
		|			И ДД.Подразделение = ОтборПоПартиям.Подразделение
		|			И ДД.Материал = ОтборПоПартиям.Материал
		|ГДЕ
		|	ОтборПоПартиям.Материал ЕСТЬ NULL
		|	И &БазаРаспределенияПоПартиям В (ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ГруппаПродукции,
		|	ДД.Подразделение,
		|	ДД.Материал
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДД.ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ГруппаПродукции,
		|	ДД.Продукция,
		|	2,
		|	СУММА(ДД.Количество),
		|	СУММА(ДД.Объем),
		|	СУММА(ДД.Вес),
		|	СУММА(ДД.Стоимость),
		|	0,
		|	ДД.Подразделение
		|ИЗ
		|	ДанныеПоПродукции КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаПодразделенияСводно КАК НаПодразделенияСводно
		|		ПО ДД.Подразделение = НаПодразделенияСводно.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ БазаПоЭтапамДетально КАК ОтборПоПартиям
		|		ПО ДД.ПартияПроизводства = ОтборПоПартиям.ПартияПроизводства
		|			И ДД.ЗаказНаПроизводство = ОтборПоПартиям.ЗаказНаПроизводство
		|			И ДД.КодСтрокиПродукция = ОтборПоПартиям.КодСтрокиПродукция
		|			И ДД.Подразделение = ОтборПоПартиям.Подразделение
		|ГДЕ
		|	ОтборПоПартиям.Продукция ЕСТЬ NULL
		|	И &БазаРаспределенияПоПартиям В (ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукции), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукции), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукции), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукцииСУчетомБудущихВыпусков), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукцииСУчетомБудущихВыпусков), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукцииСУчетомБудущихВыпусков), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукцииСУчетомБудущихВыпусков))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ГруппаПродукции,
		|	ДД.Подразделение,
		|	ДД.Продукция
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДД.ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ГруппаПродукции,
		|	ДД.ВидРабот,
		|	2,
		|	СУММА(ДД.Количество),
		|	0,
		|	0,
		|	СУММА(
		|		ВЫБОР
		|			КОГДА &ДанныеСебестоимости = 3
		|				ТОГДА ДД.СтоимостьРегл
		|			ИНАЧЕ
		|				ДД.Стоимость
		|		КОНЕЦ) КАК Стоимость,
		|	СУММА(ДД.НормативнаяСтоимость),
		|	ДД.Подразделение
		|ИЗ
		|	ДанныеПоТрудоЗатратам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаПодразделенияСводно КАК НаПодразделенияСводно
		|		ПО ДД.Подразделение = НаПодразделенияСводно.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ БазаПоЭтапамДетально КАК ОтборПоПартиям
		|		ПО ДД.ПартияПроизводства = ОтборПоПартиям.ПартияПроизводства
		|			И ДД.ЗаказНаПроизводство = ОтборПоПартиям.ЗаказНаПроизводство
		|			И ДД.КодСтрокиПродукция = ОтборПоПартиям.КодСтрокиПродукция
		|			И ДД.Подразделение = ОтборПоПартиям.Подразделение
		|			И ДД.ВидРабот = ОтборПоПартиям.ВидРабот
		|ГДЕ
		|	ОтборПоПартиям.ВидРабот ЕСТЬ NULL
		|	И &БазаРаспределенияПоПартиям В (ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда))
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ГруппаПродукции,
		|	ДД.Подразделение,
		|	ДД.ВидРабот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Подразделение КАК Подразделение,
		|	ДД.ПартияПроизводства КАК ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	ДД.ГруппаПродукции КАК ГруппаПродукции
		|ПОМЕСТИТЬ ПартииНеВошедшие
		|ИЗ
		|	ДанныеПоПредварительнымМатериальнымЗатратам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаПодразделенияСводно КАК НаПодразделенияСводно
		|		ПО ДД.Подразделение = НаПодразделенияСводно.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ БазаПоЭтапам КАК БазаПоЭтапам
		|		ПО ДД.Подразделение = БазаПоЭтапам.Подразделение
		|			И ДД.ПартияПроизводства = БазаПоЭтапам.ПартияПроизводства
		|			И ДД.ЗаказНаПроизводство = БазаПоЭтапам.ЗаказНаПроизводство
		|ГДЕ
		|	БазаПоЭтапам.ПартияПроизводства ЕСТЬ NULL
		|	И &БазаРаспределенияПоПартиям В (ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДД.Подразделение,
		|	ДД.ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ГруппаПродукции
		|ИЗ
		|	ДанныеПоПродукции КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаПодразделенияСводно КАК НаПодразделенияСводно
		|		ПО ДД.Подразделение = НаПодразделенияСводно.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ БазаПоЭтапам КАК ОтборПоПартиям
		|		ПО ДД.ПартияПроизводства = ОтборПоПартиям.ПартияПроизводства
		|			И ДД.ЗаказНаПроизводство = ОтборПоПартиям.ЗаказНаПроизводство
		|			И ДД.Подразделение = ОтборПоПартиям.Подразделение
		|ГДЕ
		|	ОтборПоПартиям.ПартияПроизводства ЕСТЬ NULL
		|	И &БазаРаспределенияПоПартиям В (ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукции), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукции), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукции), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукцииСУчетомБудущихВыпусков), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукцииСУчетомБудущихВыпусков), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукцииСУчетомБудущихВыпусков), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукцииСУчетомБудущихВыпусков))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДД.Подразделение,
		|	ДД.ПартияПроизводства,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ГруппаПродукции
		|ИЗ
		|	ДанныеПоТрудоЗатратам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаПодразделенияСводно КАК НаПодразделенияСводно
		|		ПО ДД.Подразделение = НаПодразделенияСводно.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ БазаПоЭтапам КАК ОтборПоПартиям
		|		ПО ДД.ПартияПроизводства = ОтборПоПартиям.ПартияПроизводства
		|			И ДД.ЗаказНаПроизводство = ОтборПоПартиям.ЗаказНаПроизводство
		|			И ДД.Подразделение = ОтборПоПартиям.Подразделение
		|ГДЕ
		|	ОтборПоПартиям.ПартияПроизводства ЕСТЬ NULL
		|	И &БазаРаспределенияПоПартиям В (ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""ПоПравилуНаПодразделения"" КАК ТипЗаписи,
		|	ДД.Подразделение КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ДД.ПартияПроизводства <> ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
		|			ТОГДА ДД.ПартияПроизводства
		|		ИНАЧЕ ДД.ЗаказНаПроизводство
		|	КОНЕЦ КАК ПартияПроизводства,
		|	ДД.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	ДД.Знаменатель КАК ЗначениеПоказателя,
		|	ДД.ЗначениеПоказателяПроцент КАК ЗначениеПоказателяПроцент,
		|	ЕСТЬNULL(Факт.Сумма, 0) КАК Сумма,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	&Регистратор КАК Регистратор,
		|	ДД.МатериалПродукцияУслуга КАК МатериалПродукцияУслуга,
		|	ДД.ГруппаПродукции КАК ГруппаПродукции,
		|	1 КАК ПорядокВывода,
		|	ИСТИНА КАК СуммироватьКоличествоПоЭтапу
		|ИЗ
		|	НаПодразделенияДетально КАК ДД
		|		ЛЕВОЕ СОЕДИНЕНИЕ НаПодразделенияФакт КАК Факт
		|		ПО ДД.Подразделение = Факт.Подразделение
		|ГДЕ
		|	&БазаРаспределенияПоПодразделениям В (ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ПоПравилуНаПодразделения"",
		|	ДД.Подразделение,
		|	ВЫБОР
		|		КОГДА ДД.ПартияПроизводства <> ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
		|			ТОГДА ДД.ПартияПроизводства
		|		ИНАЧЕ ДД.ЗаказНаПроизводство
		|	КОНЕЦ,
		|	ДД.КодСтрокиПродукция,
		|	0,
		|	0,
		|	0,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	&Регистратор,
		|	НЕОПРЕДЕЛЕНО,
		|	ДД.ГруппаПродукции,
		|	3,
		|	ЛОЖЬ
		|ИЗ
		|	ПартииНеВошедшие КАК ДД
		|ГДЕ
		|	&БазаРаспределенияПоПодразделениям В (ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ПоПоказателямНаПодразделения"",
		|	ДД.Подразделение,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	ДД.Знаменатель,
		|	ДД.ЗначениеПоказателяПроцент,
		|	ЕСТЬNULL(Факт.Сумма, 0),
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	&Регистратор,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	1,
		|	ИСТИНА
		|ИЗ
		|	НаПодразделенияДетально КАК ДД
		|		ЛЕВОЕ СОЕДИНЕНИЕ НаПодразделенияФакт КАК Факт
		|		ПО ДД.Подразделение = Факт.Подразделение
		|ГДЕ
		|	&БазаРаспределенияПоПодразделениям В (ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВводитсяЕжемесячно), ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВводитсяПриИзменении))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ПоПравилуНаЭтапы"",
		|	ДД.Подразделение,
		|	ВЫБОР
		|		КОГДА ДД.ПартияПроизводства <> ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
		|			ТОГДА ДД.ПартияПроизводства
		|		ИНАЧЕ ДД.ЗаказНаПроизводство
		|	КОНЕЦ,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Знаменатель,
		|	ВЫБОР
		|		КОГДА НаПодразделенияСводно.Подразделение ЕСТЬ NULL
		|				ИЛИ НаПодразделенияСводно.ЗначениеПоказателяПроцент = 0
		|			ТОГДА 0
		|		ИНАЧЕ ДД.Знаменатель
		|	КОНЕЦ,
		|	ЕСТЬNULL(Факт.Сумма, 0),
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	&Регистратор,
		|	ДД.МатериалПродукцияУслуга,
		|	ДД.ГруппаПродукции,
		|	1,
		|	ВЫБОР
		|		КОГДА ДД.ТипБазыРаспределенияПоПартиям В (&МассивКоличества)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|ИЗ
		|	НаЭтапыДетально КАК ДД
		|		ЛЕВОЕ СОЕДИНЕНИЕ НаПартииФакт КАК Факт
		|		ПО ДД.Подразделение = Факт.Подразделение
		|			И ДД.ПартияПроизводства = Факт.ПартияПроизводства
		|			И ДД.ЗаказНаПроизводство = Факт.ЗаказНаПроизводство
		|			И ДД.КодСтрокиПродукция = Факт.КодСтрокиПродукция
		|			И ДД.ГруппаПродукции = Факт.ГруппаПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ НаПодразделенияСводно КАК НаПодразделенияСводно
		|		ПО ДД.Подразделение = НаПодразделенияСводно.Подразделение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ПоПравилуНаЭтапы"",
		|	ДД.Подразделение,
		|	ВЫБОР
		|		КОГДА ДД.ПартияПроизводства <> ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
		|			ТОГДА ДД.ПартияПроизводства
		|		ИНАЧЕ ДД.ЗаказНаПроизводство
		|	КОНЕЦ,
		|	ДД.КодСтрокиПродукция,
		|	ВЫБОР
		|		КОГДА &БазаРаспределенияПоПартиям В (&МассивОбъема)
		|			ТОГДА ДД.Объем
		|		КОГДА &БазаРаспределенияПоПартиям В (&МассивВеса)
		|			ТОГДА ДД.Вес
		|		КОГДА &БазаРаспределенияПоПартиям В (&МассивСтоимости)
		|			ТОГДА ДД.Стоимость
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	0,
		|	0,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	&Регистратор,
		|	НЕОПРЕДЕЛЕНО,
		|	ДД.ГруппаПродукции,
		|	ДД.ПорядокВывода,
		|	ВЫБОР
		|		КОГДА &БазаРаспределенияПоПартиям В (&МассивКоличества)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|ИЗ
		|	ДанныеНеВошедшие КАК ДД
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПартииНеВошедшие КАК НеВошедшие
		|		ПО ДД.Подразделение = НеВошедшие.Подразделение
		|			И ДД.ПартияПроизводства = НеВошедшие.ПартияПроизводства
		|			И ДД.ЗаказНаПроизводство = НеВошедшие.ЗаказНаПроизводство
		|ГДЕ
		|	НеВошедшие.ПартияПроизводства ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""ПоПравилуНаЭтапы"",
		|	ДД.Подразделение,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	0,
		|	0,
		|	0,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	&Регистратор,
		|	ВЫБОР
		|		КОГДА ДД.ПартияПроизводства <> ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
		|			ТОГДА ДД.ПартияПроизводства
		|		ИНАЧЕ ДД.ЗаказНаПроизводство
		|	КОНЕЦ,
		|	НЕОПРЕДЕЛЕНО,
		|	3,
		|	ЛОЖЬ
		|ИЗ
		|	ПартииНеВошедшие КАК ДД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""НаДругиеСтатьи"",
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	Реквизиты.ДоляСтоимостиНаСтатьи,
		|	Реквизиты.ДоляСтоимостиНаСтатьи,
		|	ЕСТЬNULL(Факт.Сумма, 0),
		|	ДД.КорСтатьяРасходов,
		|	ДД.КорАналитикаРасходов,
		|	ДД.КорАналитикаАктивовПассивов,
		|	&Регистратор,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	1,
		|	ИСТИНА
		|ИЗ
		|	РаспределитьНаДругиеСтатьи КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Регистраторы КАК Реквизиты
		|		ПО ДД.Регистратор = Реквизиты.Регистратор
		|		ЛЕВОЕ СОЕДИНЕНИЕ НаСтатьиФакт КАК Факт
		|		ПО ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДД.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
		|			ТОГДА 
		|				ДД.КорСтатьяРасходов = Факт.СтатьяРасходов
		|			ИНАЧЕ
		|				ДД.КорСтатьяРасходов = Факт.СтатьяАктивовПассивов
		|			КОНЕЦ
		|			И ДД.КорАналитикаРасходов = Факт.АналитикаРасходов
		|			И ДД.КорАналитикаАктивовПассивов = Факт.АналитикаАктивовПассивов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""НаНЗП"",
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0,
		|	Реквизиты.ДоляСтоимостиНаНЗП,
		|	Реквизиты.ДоляСтоимостиНаНЗП,
		|	ЕСТЬNULL(Факт.Сумма, 0),
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	&Регистратор,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	1,
		|	ИСТИНА
		|ИЗ
		|	ОставитьВНЗП КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Регистраторы КАК Реквизиты
		|		ПО ДД.Регистратор = Реквизиты.Регистратор
		|		ЛЕВОЕ СОЕДИНЕНИЕ НаНЗПФакт КАК Факт
		|		ПО ДД.Организация = Факт.Организация
		|			И ДД.Подразделение = Факт.Подразделение
		|			И ДД.НаправлениеДеятельности = Факт.НаправлениеДеятельности
		|			И ДД.СтатьяРасходов = Факт.СтатьяРасходов
		|			И ДД.АналитикаРасходов = Факт.АналитикаРасходов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""НаЭтапыВручную"",
		|	ДД.КорПодразделение,
		|	ВЫБОР
		|		КОГДА ДД.ПартияПроизводства <> ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
		|			ТОГДА ДД.ПартияПроизводства
		|		ИНАЧЕ ДД.ЗаказНаПроизводство
		|	КОНЕЦ,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ДоляСтоимости,
		|	ДД.ДоляСтоимости,
		|	ЕСТЬNULL(Факт.Сумма, 0),
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	&Регистратор,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	1,
		|	ИСТИНА
		|ИЗ
		|	ДолиПроизводственныхРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
		|	ПО ДД.Регистратор = Реквизиты.Ссылка
		|		И Реквизиты.ПартииУказаныВручную
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ НаПартииФакт КАК Факт
		|	ПО ДД.КорПодразделение = Факт.Подразделение
		|		И ДД.ПартияПроизводства = Факт.ПартияПроизводства
		|		И ДД.ЗаказНаПроизводство = Факт.ЗаказНаПроизводство
		|		И ДД.КодСтрокиПродукция = Факт.КодСтрокиПродукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДД.ПартияПроизводства КАК ПартияПроизводства
		|ИЗ
		|	НаЭтапыДетально КАК ДД";
	
#КонецОбласти	
	Если РасчетСебестоимостиВыполнен Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДанныеПоПредварительнымМатериальнымЗатратам", "ДанныеПоФактическимМатериальнымЗатратам");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Регистратор",						Регистратор);
	Запрос.УстановитьПараметр("ДанныеСебестоимости",				ДанныеСебестоимости);
	Запрос.УстановитьПараметр("МассивКоличества",					МассивТиповРаспределенияБазыПоКоличеству);
	Запрос.УстановитьПараметр("МассивСтоимости",					МассивТиповРаспределенияБазыПоСтоимости);
	Запрос.УстановитьПараметр("МассивОбъема",						МассивТиповРаспределенияБазыПоОбъему);
	Запрос.УстановитьПараметр("МассивВеса",							МассивТиповРаспределенияБазыПоВесу);
	Запрос.УстановитьПараметр("БазаРаспределенияПоПартиям",			Реквизиты.БазаРаспределенияПоПартиям);
	Запрос.УстановитьПараметр("БазаРаспределенияПоПодразделениям",	Реквизиты.БазаРаспределенияПоПодразделениям);
	Запрос.УстановитьПараметр("НачалоПериода",						НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",					ОкончаниеПериода);
	Запрос.УстановитьПараметр("Организация",						Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",						Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("РаспределятьПоПодразделениям",		Реквизиты.РаспределятьПоПодразделениям);
	Запрос.УстановитьПараметр("ОставитьВНЗП",						Реквизиты.ОставитьВНЗП);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",			Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("СтатьяРасходов",						Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",					Реквизиты.АналитикаРасходов);
	
	Результат = Запрос.ВыполнитьПакет();
	ИндексыРезультатов = Результат.ВГраница();
	
	Распределение = Результат[ИндексыРезультатов - 1].Выгрузить();
	
	ВнешниеНаборыДанных = Новый Структура("Распределение", Распределение);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;

	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ВыводитьПредставлениеСумм", Не ПустаяСтрока(ПредставлениеСумм), Истина);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ВыводитьПредставлениеРасчетаСебестоимости", Не РасчетСебестоимостиВыполнен, Истина);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	//Пост обработка отчета.
	//Устанавливаем отражение правила распределения, меняем заголовки колонок и т.д.
	
	ТабличныйДокумент = ПроцессорВывода.ЗакончитьВывод();
	
	Область = ТабличныйДокумент.НайтиТекст("%ЗаголовокОтчета%");
	Если Область <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(Реквизиты.АналитикаРасходов) Тогда
			ЗаголовокОтчета = НСтр("ru = 'По статье ""%1 (%2)"" в подразделении ""%3"" за %4';
									|en = 'By ""%1 (%2)"" item in the ""%3"" department for %4'");
			ЗаголовокОтчета = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ЗаголовокОтчета,
				Реквизиты.СтатьяРасходов,
				Реквизиты.АналитикаРасходов,
				Реквизиты.Подразделение,
				Формат(Реквизиты.Дата, "ДФ='ММММ гггг'"));
		Иначе
			ЗаголовокОтчета = НСтр("ru = 'По статье ""%1"" в подразделении ""%2"" за %3';
									|en = 'By ""%1"" item in the ""%2"" department for %3'");
			ЗаголовокОтчета = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ЗаголовокОтчета,
				Реквизиты.СтатьяРасходов,
				Реквизиты.Подразделение,
				Формат(Реквизиты.Дата, "ДФ='ММММ гггг'"));
		КонецЕсли;
		
		Область.Текст = СтрЗаменить(Область.Текст, "%ЗаголовокОтчета%", ЗаголовокОтчета);
		
	КонецЕсли;
	
	//Вывод представления сумм
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеСумм%");
	Если Область <> Неопределено Тогда
		Область.Текст = СтрЗаменить(Область.Текст, "%ПредставлениеСумм%", ПредставлениеСумм);
	КонецЕсли;
	
	//Вывод информации о состоянии расчета себестоимости
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеРасчетаСебестоимости%");
	Если Область <> Неопределено Тогда
		ПредставлениеРасчетаСебестоимости = НСтр("ru = 'Не выполнен расчет себестоимости, суммы расходов будут актуализированы после расчета.';
												|en = 'Cost is not calculated, expense amounts will be updated after calculation.'");
		Область.Текст = СтрЗаменить(Область.Текст, "%ПредставлениеРасчетаСебестоимости%", ПредставлениеРасчетаСебестоимости);
	КонецЕсли;
	
	//Инициализация переменных для оформления правила по подразделению
	Если ЗначениеЗаполнено(ВалютаПлановойСтоимости) Тогда
		ПредставлениеПоказателяСтоимость = СтрШаблон(НСтр("ru = 'Стоимость, %1';
															|en = 'Cost, %1'"), ВалютаПлановойСтоимости);
	Иначе
		ПредставлениеПоказателяСтоимость = СтрШаблон(НСтр("ru = 'Стоимость, %1';
															|en = 'Cost, %1'"), ВалютаОтчета);
	КонецЕсли;
	
	ПредставлениеПозицииПоПодразделению  = НСтр("ru = 'Материалы/Работы/Продукция';
												|en = 'Materials/Works/Products'");
	ПредставлениеПоказателяПодразделений = НСтр("ru = 'Значение показателя';
												|en = 'Indicator value'");
	ПредставлениеПравилаПоПодразделениям  = НСтр("ru = 'Пропорционально стоимости материальных затрат';
												|en = 'Proportionally to value of material costs '");
	
	//Инициализация переменных для оформления правила по этапу
	ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Материалы/Работы/Продукция';
											|en = 'Materials/Works/Products'");
	ПредставлениеПоказателяПоЭтапу = НСтр("ru = 'Значение показателя';
											|en = 'Indicator value'");
	ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 прочее правило распределения %2';
											|en = '%1 other allocation rule %2'");
	
	ОтборПоГруппамПродукции = Регистратор.ОтборПоГруппамПродукции.Количество() > 0;
	
	БазаРаспределенияПоПодразделениям = Реквизиты.БазаРаспределенияПоПодразделениям;
	БазаРаспределенияПоПартиям        = Реквизиты.БазаРаспределенияПоПартиям;
	
	Если Реквизиты.РаспределятьПоПодразделениям Тогда
		Если БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат Тогда 
			ПредставлениеПозицииПоПодразделению  = НСтр("ru = 'Материал';
														|en = 'Material'");
			ПредставлениеПоказателяПодразделений = ПредставлениеПоказателяСтоимость;
			ПредставлениеПравилаПоПодразделениям  = НСтр("ru = '%1 пропорционально стоимости материалов %2';
														|en = '%1 proportionally to material cost %2'");
		ИначеЕсли БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда Тогда
			ПредставлениеПозицииПоПодразделению  = НСтр("ru = 'Вид работ';
														|en = 'Work kind'");
			ПредставлениеПоказателяПодразделений = ПредставлениеПоказателяСтоимость;
			ПредставлениеПравилаПоПодразделениям  = НСтр("ru = '%1 пропорционально расходам на оплату труда %2';
														|en = '%1 proportionally to labor compensation expenses %2'");
		ИначеЕсли БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат Тогда
			ПредставлениеПозицииПоПодразделению  = НСтр("ru = 'Материал \ Вид работ';
														|en = 'Material / Work kind'");
			ПредставлениеПоказателяПодразделений = ПредставлениеПоказателяСтоимость;
			ПредставлениеПравилаПоПодразделениям  = НСтр("ru = '%1 пропорционально прямым затратам %2';
														|en = '%1 proportionally to direct costs %2'");
		ИначеЕсли БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.ВводитсяЕжемесячно Тогда
			ПредставлениеПравилаПоПодразделениям  = НСтр("ru = '%1 по переменным показателям %2';
														|en = '%1 by variable indicators %2'");
		ИначеЕсли БазаРаспределенияПоПодразделениям = Перечисления.ТипыБазыРаспределенияРасходов.ВводитсяПриИзменении Тогда
			ПредставлениеПравилаПоПодразделениям  = НСтр("ru = '%1 по постоянным показателям %2';
														|en = '%1 by fixed indicators %2'");
		Иначе
			ПредставлениеПоказателяПодразделений = НСтр("ru = 'Доля стоимости';
														|en = 'Cost share'");
			ПредставлениеПравилаПоПодразделениям = НСтр("ru = '%1 вручную %2';
														|en = '%1 manually %2'");
		КонецЕсли;
	КонецЕсли;
	
	Если БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат Тогда 
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Материал';
												|en = 'Material'");
		ПредставлениеПоказателяПоЭтапу = ПредставлениеПоказателяСтоимость;
		ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально стоимости материалов %2';
												|en = '%1 proportionally to material cost %2'");
			
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Материал';
												|en = 'Material'");
		ПредставлениеПоказателяПоЭтапу = НСтр("ru = 'Количество';
												|en = 'Quantity'");
		ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально количеству материалов %2';
												|en = '%1 proportionally to material quantity %2'");
			
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Материал';
												|en = 'Material'");
		ПредставлениеПоказателяПоЭтапу = НСтр("ru = 'Объем';
												|en = 'Volume'");
		ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально объему материалов %2';
												|en = '%1 proportionally to material volume %2'");
		
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Материал';
												|en = 'Material'");
		ПредставлениеПоказателяПоЭтапу = НСтр("ru = 'Вес';
												|en = 'Weight'");
		ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально весу материалов %2';
												|en = '%1 proportionally to material weight %2'");
		
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Вид работ';
												|en = 'Work kind'");;
		ПредставлениеПоказателяПоЭтапу = ПредставлениеПоказателяСтоимость;
		ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально расходам на оплату труда %2';
												|en = '%1 proportionally to labor compensation expenses %2'");
		
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Вид работ';
												|en = 'Work kind'");;
		ПредставлениеПоказателяПоЭтапу = ПредставлениеПоказателяСтоимость;
		ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально нормативным расходам на оплату труда %2';
												|en = '%1 proportionally to standard labor compensation expenses %2'");
		
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Вид работ';
												|en = 'Work kind'");
		ПредставлениеПоказателяПоЭтапу = НСтр("ru = 'Количество';
												|en = 'Quantity'");
		ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально количеству видов работ %2';
												|en = '%1 proportionally to work kind quantity %2'");
		
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции
		Или БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукцииСУчетомБудущихВыпусков Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Продукция';
												|en = 'Products'");
		ПредставлениеПоказателяПоЭтапу = ПредставлениеПоказателяСтоимость;
		
		Если БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции Тогда
			ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально плановой стоимости продукции %2';
													|en = '%1 proportionally to planned product cost %2'");
		Иначе
			ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально плановой стоимости продукции с учетом будущих выпусков %2';
													|en = '%1 proportionally to target product cost considering future releases %2'");
		КонецЕсли;
		
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукции
		Или БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукцииСУчетомБудущихВыпусков Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Продукция';
												|en = 'Products'");
		ПредставлениеПоказателяПоЭтапу = НСтр("ru = 'Количество';
												|en = 'Quantity'");
		
		Если БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукции Тогда
			ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально количеству продукции %2';
													|en = '%1 proportionally to product quantity %2'");
		Иначе
			ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально количеству продукции с учетом будущих выпусков %2';
													|en = '%1 proportionally to product quantity considering future releases %2'");
		КонецЕсли;
		
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемПродукции
		Или БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемПродукцииСУчетомБудущихВыпусков Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Продукция';
												|en = 'Products'");
		ПредставлениеПоказателяПоЭтапу = НСтр("ru = 'Объем';
												|en = 'Volume'");
		
		Если БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемПродукции Тогда
			ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально объему продукции %2';
													|en = '%1 units-of-production %2'");
		Иначе
			ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально объему продукции с учетом будущих выпусков %2';
													|en = '%1 units-of-production considering future releases %2'");
		КонецЕсли;
		
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ВесПродукции
		Или БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ВесПродукцииСУчетомБудущихВыпусков Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Продукция';
												|en = 'Products'");
		ПредставлениеПоказателяПоЭтапу = НСтр("ru = 'Вес';
												|en = 'Weight'");
		
		Если БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.ВесПродукции Тогда
			ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально весу продукции %2';
													|en = '%1 proportionally to product weight %2'");
		Иначе
			ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально весу продукции с учетом будущих выпусков %2';
													|en = '%1 proportionally to product weight considering future releases %2'");
		КонецЕсли;
		
	ИначеЕсли БазаРаспределенияПоПартиям = Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхИТрудозатрат Тогда
		
		ПредставлениеПозицииПоЭтапу    = НСтр("ru = 'Материал \ Вид работ';
												|en = 'Material / Work kind'");
		ПредставлениеПоказателяПоЭтапу = ПредставлениеПоказателяСтоимость;
		ПредставлениеПравилаПоЭтапу    = НСтр("ru = '%1 пропорционально прямым затратам %2';
												|en = '%1 proportionally to direct costs %2'");
		
	КонецЕсли;
	
	ПредставлениеНаСтатьи = "";
	ПрефиксПредставленияПравила = "";
	ПрефиксПредставленияПравилаНаЭтапыВручную = "";
	ПостфиксПредставленияПравила = "";
	ПредставлениеПравилаПоЭтапам = "";
	
	ПогрешностьРасчета = 0;
	Если Реквизиты.ВсегоДолейСтоимости = 0 Тогда
		ПроцентНаПроизводство = 100;
	Иначе
		
		ПроцентПоСтатьям = Окр(Реквизиты.ДоляСтоимостиНаСтатьи * 100/ Реквизиты.ВсегоДолейСтоимости);
		ПроцентНаНЗП = Окр(Реквизиты.ДоляСтоимостиНаНЗП * 100/ Реквизиты.ВсегоДолейСтоимости);
		ПроцентНаПроизводство = Окр(Реквизиты.ДоляСтоимостиНаПроизводство * 100/ Реквизиты.ВсегоДолейСтоимости);
		ПогрешностьРасчета = 100 - ПроцентНаПроизводство - ПроцентНаНЗП - ПроцентПоСтатьям;
		
	КонецЕсли;
	
	Если Не ПогрешностьРасчета = 0 Тогда
		
		МаксимальныйПроцент = Макс(ПроцентПоСтатьям, ПроцентНаНЗП, ПроцентНаПроизводство);
		Если ПроцентНаПроизводство = МаксимальныйПроцент Тогда
			ПроцентНаПроизводство = ПроцентНаПроизводство + ПогрешностьРасчета;
		ИначеЕсли ПроцентПоСтатьям = МаксимальныйПроцент Тогда
			ПроцентПоСтатьям = ПроцентПоСтатьям + ПогрешностьРасчета;
		ИначеЕсли ПроцентНаНЗП = МаксимальныйПроцент Тогда
			ПроцентНаНЗП = ПроцентНаНЗП + ПогрешностьРасчета;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Реквизиты.ДоляСтоимостиНаСтатьи > 0 И Реквизиты.ВсегоДолейСтоимости <> Реквизиты.ДоляСтоимостиНаСтатьи Тогда
		ПредставлениеНаСтатьи = СтрШаблон(НСтр("ru = '%1%% распределяется на другие статьи';
												|en = '%1%% allocated to other items'"), ПроцентПоСтатьям);
	Иначе
		ПредставлениеНаСтатьи = НСтр("ru = 'Расходы полностью распределяются на другие статьи';
									|en = 'Expenses are fully allocated to other items'");
	КонецЕсли;
	
	Если Реквизиты.ДоляСтоимостиНаНЗП > 0 И Не Реквизиты.ДоляСтоимостиНаНЗП = Реквизиты.ВсегоДолейСтоимости Тогда
		ПредставлениеНаНЗП = СтрШаблон(НСтр("ru = '%1%% остается в НЗП';
											|en = '%1%% left in unfinished production'"), ПроцентНаНЗП);
	Иначе
		ПредставлениеНаНЗП = НСтр("ru = 'Расходы полностью остаются в НЗП';
									|en = 'Expenses are entirely left in unfinished production'");
	КонецЕсли;
	
	ПрефиксПредставленияПравила = СтрШаблон(НСтр("ru = '%1%% распределяется';
												|en = '%1%% is allocated'"), ПроцентНаПроизводство);
	
	Если ОтборПоГруппамПродукции Тогда
		ПостфиксПредставленияПравила = НСтр("ru = 'на выбранные группы продукции';
											|en = 'on the selected product groups'");
	КонецЕсли;
	
	Если Реквизиты.РаспределятьПоПодразделениям Тогда
		ПредставлениеПравилаПоПодразделениям = СтрШаблон(ПредставлениеПравилаПоПодразделениям, 
														ПрефиксПредставленияПравила, 
														ПостфиксПредставленияПравила);
	КонецЕсли;
	
	Если Реквизиты.РаспределятьПоПартиям Тогда
		
		Если ЗначениеЗаполнено(ПрефиксПредставленияПравила) Тогда
			ПрефиксПредставленияПравила = СтрШаблон(НСтр("ru = '%1 по партиям';
														|en = '%1 by batches'"), ПрефиксПредставленияПравила);
		Иначе
			ПрефиксПредставленияПравила = НСтр("ru = 'Расходы распределяются по партиям';
												|en = 'Expenses are allocated by batches'");
		КонецЕсли;
		
		ШаблонПредставления = НСтр("ru = '%1 %2 %3';
									|en = '%1 %2 %3'");
		НаправлениеРаспределения = "";
		Если Реквизиты.ПартииУказаныВручную Тогда
			НаправлениеРаспределения = НСтр("ru = 'вручную';
											|en = 'manually'");
		ИначеЕсли Реквизиты.ПодразделенияУказаныВручную Тогда
			НаправлениеРаспределения = НСтр("ru = 'подразделений';
											|en = 'departments'");
		ИначеЕсли Не ЗначениеЗаполнено(Реквизиты.НаправлениеРаспределения) Тогда
			НаправлениеРаспределения = НСтр("ru = 'всех подразделений';
											|en = 'all departments'");
		ИначеЕсли Реквизиты.НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.Вышестоящее Тогда
			НаправлениеРаспределения = НСтр("ru = 'вышестоящего подразделения';
											|en = 'superior department'");
		ИначеЕсли Реквизиты.НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.Нижестоящие Тогда
			НаправлениеРаспределения = НСтр("ru = 'нижестоящих подразделений';
											|en = 'subordinate departments'");
		ИначеЕсли Реквизиты.НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.Текущее Тогда
			НаправлениеРаспределения = НСтр("ru = 'подразделения';
											|en = 'departments'");
		ИначеЕсли Реквизиты.НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.Указанные Тогда
			НаправлениеРаспределения = НСтр("ru = 'указанных подразделений';
											|en = 'specified departments'");
		КонецЕсли;
		
		ПредставлениеПравилаПоЭтапам = СокрЛП(СтрШаблон(ШаблонПредставления,
													ПрефиксПредставленияПравила,
													НаправлениеРаспределения,
													ПостфиксПредставленияПравила));
															
	КонецЕсли;
	
	//Заменим для подразделений
	
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеПравилаПоПодразделениям%");
	Если Область <> Неопределено Тогда
		Область.Текст = СтрЗаменить(Область.Текст, "%ПредставлениеПравилаПоПодразделениям%", ПредставлениеПравилаПоПодразделениям);
	КонецЕсли;
	
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеНаЭтапыВручную%");
	Если Область <> Неопределено Тогда
		Область.Текст = СтрЗаменить(Область.Текст, "%ПредставлениеНаЭтапыВручную%", ПредставлениеПравилаПоЭтапам);
	КонецЕсли;
	
	Область = ТабличныйДокумент.НайтиТекст("%ЗначПП%");
	Пока Область <> Неопределено Цикл
		Область.Текст = ПредставлениеПоказателяПодразделений;
		Область = ТабличныйДокумент.НайтиТекст("%ЗначПП%");
	КонецЦикла;
	
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеПозицииПоПодразделениям%");
	Пока Область <> Неопределено Цикл
		Область.Текст = ПредставлениеПозицииПоПодразделению;
		Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеПозицииПоПодразделениям%");
	КонецЦикла;
	
	//Заменим для этапов
	
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеПравилаПоЭтапам%");
	Если Область <> Неопределено Тогда
		Область.Текст = СтрЗаменить(Область.Текст, "%ПредставлениеПравилаПоЭтапам%", ПредставлениеПравилаПоЭтапам);
	КонецЕсли;
	
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеПозицииПоЭтапам%");
	Пока Область <> Неопределено Цикл
		Область.Текст = ПредставлениеПозицииПоЭтапу;
		Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеПозицииПоЭтапам%");
	КонецЦикла;
	
	Область = ТабличныйДокумент.НайтиТекст("%ЗначПЭ%");
	Пока ТипЗнч(Область) <> Тип("Неопределено") Цикл
		Область.Текст = ПредставлениеПоказателяПоЭтапу;
		Область = ТабличныйДокумент.НайтиТекст("%ЗначПЭ%");
	КонецЦикла;
	
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеПозицииВСтроке%");
	Пока Область <> Неопределено Цикл
		
		Если ПредставлениеПозицииПоЭтапу = НСтр("ru = 'Продукция';
												|en = 'Products'") Тогда
			ПредставлениеПозицииВСтроке = НСтр("ru = '<другая продукция>';
												|en = '<other products>'");
		Иначе
			ПредставлениеПозицииВСтроке = СтрШаблон(НСтр("ru = '<другие %1>';
														|en = '<other %1>'"), НРег(ПредставлениеПозицииПоЭтапу));
		КонецЕсли;
		
		Область.Текст = СтрЗаменить(Область.Текст, "%ПредставлениеПозицииВСтроке%", ПредставлениеПозицииВСтроке);
		Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеПозицииВСтроке%");
		
	КонецЦикла;
	
	//Заменим для распределения на статьи
	
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеНаСтатьи%");
	Если Область <> Неопределено Тогда
		Область.Текст = СтрЗаменить(Область.Текст, "%ПредставлениеНаСтатьи%", ПредставлениеНаСтатьи);
	КонецЕсли;
	
	// Замена заголовка НЗП.
	Область = ТабличныйДокумент.НайтиТекст("%ПредставлениеНаНЗП%");
	Если Область <> Неопределено Тогда
		Область.Текст = СтрЗаменить(Область.Текст, "%ПредставлениеНаНЗП%", ПредставлениеНаНЗП);
	КонецЕсли;
	
	//Установка заголовков валют.
	
	Область = ТабличныйДокумент.НайтиТекст("%ВалютаОтчета%");
	Пока Область <> Неопределено Цикл
		Область.Текст = СтрЗаменить(Область.Текст, "%ВалютаОтчета%", ВалютаОтчета);
		Область = ТабличныйДокумент.НайтиТекст("%ВалютаОтчета%");
	КонецЦикла;
	
	ТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(2);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецЕсли
