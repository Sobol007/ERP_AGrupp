Перем СсылкиНаСправкиСВО;
Перем СсылкиНаСправкиСПД;
Перем ВалютаКонтракта;

#Область АктуальныеПроцедурыПечати

Функция СформироватьВБК_2018() Экспорт
	СсылкиНаСправкиСПД = РЭЙ_СлужебныйСервер.ПолучитьСсылкиНаАктуальныеСПД(КонтрактВЭД, ДатаОтчета);
	СсылкиНаСправкиСВО = РЭЙ_СлужебныйСервер.ПолучитьСсылкиНаАктуальныеСВО(КонтрактВЭД, ДатаОтчета);
	ВалютаКонтракта = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Если КонтрактВЭД.КредитныйДоговор Тогда
		Макет = ПолучитьМакет("ВедомостьБанковскогоКонтроля_2018_КредитныйДоговор");
		Печать2018_КредитныйДоговор_Раздел1(ТабДокумент, Макет);
		Печать2018_Раздел2(ТабДокумент, МенеджерВТ, Макет);
		Печать2018_Раздел3(ТабДокумент, МенеджерВТ, Макет);
		Печать2018_КредитныйДоговор_Раздел4(ТабДокумент, МенеджерВТ, Макет);
	Иначе
		Макет = ПолучитьМакет("ВедомостьБанковскогоКонтроля_2018_Контракт");
		Печать2018_Контракт_Раздел1(ТабДокумент, Макет);
		Печать2018_Раздел2(ТабДокумент, МенеджерВТ, Макет);
		Печать2018_Раздел3(ТабДокумент, МенеджерВТ, Макет);
		Печать2018_Контракт_Раздел4(ТабДокумент, МенеджерВТ, Макет);
		Печать2018_Контракт_Раздел5(ТабДокумент, МенеджерВТ, Макет);
	КонецЕсли;

	Возврат ТабДокумент;
КонецФункции

Функция ПолучитьДанныеДляПечати_2018()
	ДанныеДляПечати = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", КонтрактВЭД.ПаспортСделки);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПаспортСделки.Номер,
	|	ПаспортСделки.Дата,
	|	ПаспортСделки.Организация,
	|	ПаспортСделки.Контрагент,
	|	ПаспортСделки.КонтрактВЭД,
	|	ПаспортСделки.ДатаПаспортаСделки,
	|	ПаспортСделки.НомерПаспортаСделки,
	|	ПаспортСделки.БанковскийСчет.Банк КАК Банк,
	|	ПаспортСделки.ДатаОформленияЛиста2,
	|	ПаспортСделки.Руководитель,
	|	ПаспортСделки.ГлавныйБухгалтер,
	|	ПаспортСделки.КонтрактУсловия,
	|	ПаспортСделки.КонтрактВЭД.ВидКонтрактаВЭД КАК ВидКонтрактаВЭД,
	|	ПаспортСделки.КонтрактВЭД.ВалютнаяОговорка КАК ВалютнаяОговорка,
	|	ПаспортСделки.КонтрактВЭД.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте КАК СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте,
	|	ПаспортСделки.КонтрактВЭД.ОтсрочкаПлатежаПредоплаты КАК ОтсрочкаПлатежаПредоплаты,
	|	ПаспортСделки.КонтрактВЭД.КредитныйДоговор КАК КредитныйДоговор,
	|	ПаспортСделки.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ПаспортСделки.КонтрактВЭД.КонтрактНомер КАК КонтрактНомер,
	|	ПаспортСделки.КонтрактВЭД.КонтрактДатаОкончания КАК КонтрактДатаОкончания,
	|	ПаспортСделки.КонтрактВЭД.ДатаЗавершенияОбязательствПоКонтракту КАК ДатаЗавершенияОбязательствПоКонтракту,
	|	ПаспортСделки.КонтрактВЭД.КонтрактСумма КАК КонтрактСумма,
	|	ПаспортСделки.КонтрактВЭД.КонтрактБезСуммы КАК КонтрактБезСуммы,
	|	ПаспортСделки.БанковскийСчет,
	|	ПаспортСделки.НомерПСДо18062004,
	|	ПаспортСделки.НомерПСДругойБанк,
	|	ПаспортСделки.КонтрактВЭД.КоличествоДней КАК КоличествоДней,
	|	ПаспортСделки.КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД КАК ПроцентныеПлатежиПоКредитамВЭД,
	|	ПаспортСделки.КонтрактВЭД.ДругиеМетодыОпределенияПроцентнойСтавки КАК ДругиеМетодыОпределенияПроцентнойСтавки,
	|	ПаспортСделки.КонтрактВЭД.ФиксированнаяСтавкаГодовыхПроцентов КАК ФиксированнаяСтавкаГодовыхПроцентов,
	|	ПаспортСделки.КонтрактВЭД.СтавкаЛИБОР КАК СтавкаЛИБОР,
	|	ПаспортСделки.КонтрактВЭД.РазмерПроцентнойНадбавки КАК РазмерПроцентнойНадбавки,
	|	ПаспортСделки.СуммаОсновногоДолга,
	|	ПаспортСделки.КонтрактВЭД.МеждународныеФинОрганизации КАК МеждународныеФинОрганизации,
	|	ПаспортСделки.КонтрактВЭД.СуммаОбеспечения КАК СуммаОбеспечения,
	|	ПаспортСделки.КонтрактВЭД.ПрямоеИнвестирование КАК ПрямоеИнвестирование,
	|	ПаспортСделки.ВидПредоставленияДокументовПоСделке,
	|	ПаспортСделки.ДатаПредоставленияДокументовПоСделке,
	|	ПаспортСделки.Контрагент.РЭЙ_Страна,
	|	ПаспортСделки.ДокументЗакрытияПС,
	|	ПаспортСделки.ОснованиеЗакрытияПС,
	|	ПаспортСделки.ДатаЗакрытияПС
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки КАК ПаспортСделки
	|ГДЕ
	|	ПаспортСделки.Ссылка = &ТекущийДокумент";
				  
				  
	ТЗДанныеДляПечати = Запрос.Выполнить().Выгрузить();
	
	
	Для Каждого ТекКолонка Из ТЗДанныеДляПечати.Колонки Цикл
		ДанныеДляПечати.Вставить(ТекКолонка.Имя, ТЗДанныеДляПечати[0][ТекКолонка.Имя]);	
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.НомерСтроки КАК НомерСтроки,
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.Дата
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки.ПереоформлениеПС КАК РЭЙ_ПаспортСделкиПереоформлениеПС
	|ГДЕ
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки УБЫВ";
	
	Запрос.УстановитьПараметр("ТекущийДокумент", КонтрактВЭД.ПаспортСделки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ДанныеДляПечати.Вставить("ПереоформлениеНомер", Формат(Выборка.НомерСтроки, "ЧЦ=2; ЧВН="));
	Если НЕ КонтрактВЭД.ПаспортСделки.НеПечататьДатуПереоформленияПС Тогда
		ДанныеДляПечати.Вставить("ПереоформлениеДата", Выборка.Дата);
	Иначе
		ДанныеДляПечати.Вставить("ПереоформлениеДата", "");
	КонецЕсли;

	Если ДанныеДляПечати.КредитныйДоговор Тогда
		Если ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ФиксированнаяСтавка Тогда
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		ИначеЕсли ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ЛИБОР Тогда
			ДанныеДляПечати.Вставить("СтавкаЛИБОР", ДанныеДляПечати.СтавкаЛИБОР.Метаданные().ЗначенияПеречисления.Получить(Перечисления.РЭЙ_СтавкаЛИБОР.Индекс(ДанныеДляПечати.СтавкаЛИБОР)).Имя +ДанныеДляПечати.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код);
			
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
		ИначеЕсли ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ДругиеСтавки Тогда
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
		Иначе
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		КонецЕсли;
	КонецЕсли;
	
	
	//********************************************************************
	ДанныеДляПечати.Вставить("ПечБанк", "");
	Если ЗначениеЗаполнено(ДанныеДляПечати.Банк) Тогда
		ДанныеДляПечати.Вставить("ПечБанк", ?(ПустаяСтрока(ДанныеДляПечати.Банк.РЭЙ_НаименованиеПолное), ДанныеДляПечати.Банк.Наименование, ДанныеДляПечати.Банк.РЭЙ_НаименованиеПолное));
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ДатаЧисло", "");
	ДанныеДляПечати.Вставить("МесяцСтрока", "");
	ДанныеДляПечати.Вставить("Год2ПослЦифры", "");
	//Если Не ПаспортСделки.НеПечататьНомерИДатуПС Тогда
		Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаПаспортаСделки) Тогда 
			ДанныеДляПечати.Вставить("ДатаЧисло", Формат(ДанныеДляПечати.ДатаПаспортаСделки, "ДФ=dd"));
					стрДата = Формат(ДанныеДляПечати.ДатаПаспортаСделки,"ДЛФ=DD") ;          // Получим - "5 Августа 2005 г."  
					чПервыйПробел=Найти(стрДата," ");                       // Получим - 2  
					стрДатаБезЧисла=Сред(стрДата,чПервыйПробел+1);       // Получим - "Августа 2005 г."  
					чВторойПробел=Найти(стрДатаБезЧисла," ");              // Получим - 8  
					стрМесяц=НРег(СокрЛП(Лев(стрДатаБезЧисла,чВторойПробел))); // Получим - "Августа"
			ДанныеДляПечати.Вставить("МесяцСтрока", стрМесяц);
			ДанныеДляПечати.Вставить("Год2ПослЦифры", Формат(ДанныеДляПечати.ДатаПаспортаСделки, "ДФ=yy"));
		КонецЕсли;	
	//КонецЕсли;	
	
	//вывод номера паспорта сделки
	Для счетчик = 1 По 22 Цикл
		Если (счетчик = 9) или (счетчик = 14) или (счетчик = 19) или (счетчик = 21) Тогда
			ДанныеДляПечати.Вставить("НПС_"+счетчик, "/");
		Иначе
			//Если Не ПаспортСделки.НеПечататьНомерИДатуПС Тогда
				ДанныеДляПечати.Вставить("НПС_"+счетчик, Сред(ДанныеДляПечати.НомерПаспортаСделки, счетчик ,1));
			//Иначе
			//	ДанныеДляПечати.Вставить("НПС_"+счетчик, "");
			//КонецЕсли;
		КонецЕсли; 
	КонецЦикла; 
	
	//вывод данных об организации
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДанныеДляПечати.Организация, ДанныеДляПечати.Дата);
	ДанныеДляПечати.Вставить("ОрганизацияНаименование", ?(ПустаяСтрока(ДанныеДляПечати.Организация.НаименованиеПолное),?(ПустаяСтрока(ДанныеДляПечати.Организация.НаименованиеПолное),ДанныеДляПечати.Организация.Наименование,ДанныеДляПечати.Организация.НаименованиеПолное),ДанныеДляПечати.Организация.НаименованиеПолное));

	//вывод ИНН
	ПечИНН = Лев(СокрЛП(СведенияОбОрганизации.ИНН)+"            ",12);
	Для счетчик = 1 По 12 Цикл
		ДанныеДляПечати.Вставить("ИНН_"+счетчик, Сред(ПечИНН, счетчик ,1));
	КонецЦикла;
	
	//вывод КПП
	ПечКПП = ?(ЗначениеЗаполнено(КонтрактВЭД.ПаспортСделки.КППОбособленногоПодразделения), КонтрактВЭД.ПаспортСделки.КППОбособленногоПодразделения, СведенияОбОрганизации.КПП);
	ПечКПП = Лев(СокрЛП(ПечКПП)+"            ",9);
	Для счетчик = 1 По 9 Цикл
		ДанныеДляПечати.Вставить("КПП_"+счетчик, Сред(ПечКПП, счетчик ,1));
	КонецЦикла;
	
	//вывод ОГРН
	ПечОГРН = ДанныеДляПечати.Организация.ОГРН;
	Для счетчик = 1 По 15 Цикл
		ДанныеДляПечати.Вставить("ОГРН_"+счетчик, Сред(ПечОГРН, счетчик ,1));
	КонецЦикла;
	
	//вывод даты внесения в госреестр
	Если Организация.РЭЙ_ДатаВнесенияВГосРеестр >= Дата(2002,07,01) Тогда
		текДатаВнесенияВГосРеестр = Организация.РЭЙ_ДатаВнесенияВГосРеестр;
	Иначе
		текДатаВнесенияВГосРеестр = Дата(2002,07,01);
	КонецЕсли;
	печДатаВнесенияВГосРеестр = Формат(текДатаВнесенияВГосРеестр, "ДФ=dd.MM.yyyy");
	Для счетчик = 1 По 10 Цикл
		ДанныеДляПечати.Вставить("ДатаВнесенияВГосРеестр_"+счетчик, Сред(печДатаВнесенияВГосРеестр, счетчик ,1));
	КонецЦикла;
		                   
	ДанныеДляПечати.Вставить("Регион", ?(СокрЛП(Организация.РЭЙ_Регион) = "нет", "", СокрЛП(Организация.РЭЙ_Регион)));
	ДанныеДляПечати.Вставить("Район", ?(СокрЛП(Организация.РЭЙ_Район) = "нет", "", СокрЛП(Организация.РЭЙ_Район)));
	ДанныеДляПечати.Вставить("Город", ?(СокрЛП(Организация.РЭЙ_Город) = "нет", "", СокрЛП(Организация.РЭЙ_Город)));
	ДанныеДляПечати.Вставить("НаселенныйПункт", ?(СокрЛП(Организация.РЭЙ_НаселенныйПункт) = "нет", "", СокрЛП(Организация.РЭЙ_НаселенныйПункт)));
	ДанныеДляПечати.Вставить("Улица", ?(СокрЛП(Организация.РЭЙ_Улица) = "нет", "", СокрЛП(Организация.РЭЙ_Улица)));
	Если КонтрактВЭД.ПаспортСделки.ПечататьОрганизациюПрописными Тогда
		ДанныеДляПечати.Вставить("Дом", ВРег(Организация.РЭЙ_Дом));
		ДанныеДляПечати.Вставить("Корпус", ВРег(Организация.РЭЙ_Корпус));
		ДанныеДляПечати.Вставить("Квартира", ВРег(Организация.РЭЙ_Квартира));
	Иначе
		ДанныеДляПечати.Вставить("Дом", Организация.РЭЙ_Дом);
		ДанныеДляПечати.Вставить("Корпус", Организация.РЭЙ_Корпус);
		ДанныеДляПечати.Вставить("Квартира", Организация.РЭЙ_Квартира);
	КонецЕсли;
	
	Если ДанныеДляПечати.КонтрактВЭД.ПериодическиеФиксированныеПлатежи Тогда
		ДанныеДляПечати.Вставить("ВидПредоставленияДокументовПоСделке", "*");		
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ПериодичностьПлатежей", ДанныеДляПечати.КонтрактВЭД.ПериодФиксированныхПлатежей);		
	
	
	//2. Реквизиты иностранного контрагента
	//*************************************************************************
	
	//КонтрагентНаименование //Наименование контрагента на иностранном языке, при отсутствии - на русском
	//КонтрагентСтранаНаименование //Наименование страны регистрации контрагента согласно ОКСМ - справочнику "Классификатор стран мира"
	//КонтрагентСтранаКод //Код страны регистрации контрагента согласно ОКСМ - справочнику "Классификатор стран мира"
	ТаблицаКонтрагентов = Новый ТаблицаЗначений;
	ТаблицаКонтрагентов.Колонки.Добавить("КонтрагентНаименование");
	ТаблицаКонтрагентов.Колонки.Добавить("КонтрагентСтранаНаименование");
	ТаблицаКонтрагентов.Колонки.Добавить("КонтрагентСтранаКод");
	
	Если ДанныеДляПечати.КонтрактВЭД.Многосторонний Тогда	
		
		Для Каждого СтрокаПоКонтрагенту ИЗ ДанныеДляПечати.КонтрактВЭД.СтороныПоКонтракту Цикл
			НовСтрока = ТаблицаКонтрагентов.Добавить(); 
			ТекКонтрагент = СтрокаПоКонтрагенту.Контрагент;
			
			Если (ТекКонтрагент.Метаданные().Реквизиты.Найти("РЭЙ_НаименованиеАнгл")<>Неопределено) и (НЕ ПустаяСтрока(ТекКонтрагент.РЭЙ_НаименованиеАнгл)) Тогда
				НовСтрока["КонтрагентНаименование"]  = ТекКонтрагент.РЭЙ_НаименованиеАнгл;
			ИначеЕсли НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.НаименованиеПолное) Тогда 
				НовСтрока["КонтрагентНаименование"] =  ТекКонтрагент.НаименованиеПолное;
			Иначе
				НовСтрока["КонтрагентНаименование"] = ТекКонтрагент.Наименование;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекКонтрагент) Тогда
				Если  ТекКонтрагент.РЭЙ_НеЯвляетсяРезидентом Тогда	
					тСтрана = ТекКонтрагент.РЭЙ_Страна;
					Если ЗначениеЗаполнено(тСтрана) Тогда
						НовСтрока["КонтрагентСтранаНаименование"] = СокрЛП(тСтрана.Наименование);
						НовСтрока["КонтрагентСтранаКод"] =  тСтрана.Код;
					КонецЕсли;
				Иначе
					//Россия
					НовСтрока["КонтрагентСтранаНаименование"] = Справочники.СтраныМира.Россия.Наименование;
					НовСтрока["КонтрагентСтранаКод"] =  Справочники.СтраныМира.Россия.Код;		
				КонецЕсли;
			КонецЕсли; 			
		КонецЦикла;
	Иначе		
		НовСтрока = ТаблицаКонтрагентов.Добавить(); 
		
		Если (ДанныеДляПечати.Контрагент.Метаданные().Реквизиты.Найти("РЭЙ_НаименованиеАнгл")<>Неопределено) и (НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.РЭЙ_НаименованиеАнгл)) Тогда
			НовСтрока["КонтрагентНаименование"]  = ДанныеДляПечати.Контрагент.РЭЙ_НаименованиеАнгл;
		ИначеЕсли НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.НаименованиеПолное) Тогда 
			НовСтрока["КонтрагентНаименование"] =  ДанныеДляПечати.Контрагент.НаименованиеПолное;
		Иначе
			НовСтрока["КонтрагентНаименование"] = ДанныеДляПечати.Контрагент.Наименование;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеДляПечати.Контрагент) Тогда
			
			Если  ДанныеДляПечати.Контрагент.РЭЙ_НеЯвляетсяРезидентом Тогда	
				тСтрана = ДанныеДляПечати.Контрагент.РЭЙ_Страна;
				Если ЗначениеЗаполнено(тСтрана) Тогда
					НовСтрока["КонтрагентСтранаНаименование"] = СокрЛП(тСтрана.Наименование);
					НовСтрока["КонтрагентСтранаКод"] =  тСтрана.Код;
				КонецЕсли;
			Иначе
				//Россия
				НовСтрока["КонтрагентСтранаНаименование"] = Справочники.СтраныМира.Россия.Наименование;
				НовСтрока["КонтрагентСтранаКод"] =  Справочники.СтраныМира.Россия.Код;		
			КонецЕсли;
		КонецЕсли; 
		
		ДанныеДляПечати.Вставить("КонтрагентНаименование", НовСтрока["КонтрагентНаименование"]);
		ДанныеДляПечати.Вставить("КонтрагентСтранаНаименование", НовСтрока["КонтрагентСтранаНаименование"]);
		ДанныеДляПечати.Вставить("КонтрагентСтранаКод", НовСтрока["КонтрагентСтранаКод"]);		
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ТаблицаКонтрагентов", ТаблицаКонтрагентов);
	
	Если ПустаяСтрока(ДанныеДляПечати.КонтрактНомер) Тогда 
		ДанныеДляПечати.Вставить("КонтрактНомер", "БН");
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ДатаКонтракта", Формат(РЭЙ_СлужебныйСервер.ПолучитьДатуКонтракта(КонтрактВЭД), "ДФ=dd.MM.yyyy"));

	ВалютаДоговора = ДанныеДляПечати.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	ДанныеДляПечати.Вставить("КонтрактВалютаНаименование", ?(ПустаяСтрока(ВалютаДоговора.НаименованиеПолное), ВалютаДоговора.Наименование, ВалютаДоговора.НаименованиеПолное));
	ДанныеДляПечати.Вставить("КонтрактВалютаНаименованиеСокр", ВалютаДоговора.Наименование);

	ДанныеДляПечати.Вставить("КонтрактВалютаКод", ВалютаДоговора.Код);
	ДанныеДляПечати.Вставить("КонтрактДатаОкончания", Формат(ДанныеДляПечати.КонтрактДатаОкончания, "ДФ=dd.MM.yyyy"));
	ДанныеДляПечати.Вставить("ДатаЗавершенияОбязательствПоКонтракту", Формат(ДанныеДляПечати.ДатаЗавершенияОбязательствПоКонтракту, "ДФ=dd.MM.yyyy"));
	ДанныеДляПечати.Вставить("ВалютнаяОговорка", ?(ДанныеДляПечати.ВалютнаяОговорка, "Х",""));

	Если ДанныеДляПечати.КонтрактБезСуммы Тогда
		ДанныеДляПечати.Вставить("КонтрактСумма", "БС");
	Иначе
		ДанныеДляПечати.Вставить("КонтрактСумма", Формат(ДанныеДляПечати.КонтрактСумма, "ЧДЦ=2; ЧРД=.; ЧН="));
	КонецЕсли;
	ДанныеДляПечати.Вставить("СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте", Формат(ДанныеДляПечати.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте, "ЧДЦ=2; ЧН=' '"));
	
	
	Если ПустаяСтрока(СтрЗаменить(СтрЗаменить(ДанныеДляПечати.НомерПСДо18062004, " ",""), "/", "")) Тогда
		ДанныеДляПечати.Вставить("НомерПСДо18062004", "");
	КонецЕсли;
	
	Для счетчик = 1 По 22 Цикл
		Если (счетчик = 9) или (счетчик = 14) или (счетчик = 19) или (счетчик = 21) Тогда
		Иначе
			ДанныеДляПечати.Вставить("НПСДБ_"+счетчик, Сред(ДанныеДляПечати.НомерПСДругойБанк, счетчик ,1));
		КонецЕсли; 
	КонецЦикла;
	
	Для счетчик = 1 По 2 Цикл
		ДанныеДляПечати.Вставить("ПереоформлениеНомер_"+счетчик, Сред(ДанныеДляПечати.ПереоформлениеНомер, счетчик ,1));
	КонецЦикла;
		
	ПечПереоформлениеДата = Формат(ДанныеДляПечати.ПереоформлениеДата, "ДФ=dd.MM.yyyy; ДП='  .  .    '");
	Для счетчик = 1 По 10 Цикл
		Если Найти(".3.6.", "."+счетчик+".")>0 Тогда 
			Продолжить;
		КонецЕсли;
		ДанныеДляПечати.Вставить("ПереоформлениеДата_"+счетчик, Сред(ПечПереоформлениеДата, счетчик ,1)); 
	КонецЦикла;
		
	Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаЗакрытияПС) Тогда
		ДанныеДляПечати.Вставить("ДатаЗакрытияПС", Формат(ДанныеДляПечати.ДатаЗакрытияПС, "ДФ=dd.MM.yyyy"));	
		ДанныеДляПечати.Вставить("ОснованиеЗакрытияПС", ДанныеДляПечати.ОснованиеЗакрытияПС);	
	Иначе
		ДанныеДляПечати.Вставить("ДатаЗакрытияПС", "");
		ДанныеДляПечати.Вставить("ОснованиеЗакрытияПС", "");
	КонецЕсли;

	ДанныеДляПечати.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ДанныеДляПечати.Руководитель, ДанныеДляПечати.Дата));
	ДанныеДляПечати.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ДанныеДляПечати.ГлавныйБухгалтер, ДанныеДляПечати.Дата));
	
	//Лист 2
		
	Если ЗначениеЗаполнено(ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты) Тогда
		
		Если ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.nnnn Тогда       
			КодОтсрочки = "0000"+ДанныеДляПечати.КоличествоДней;
		Иначе
			КодОтсрочки = ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты.Метаданные().ЗначенияПеречисления.Получить(Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.Индекс(ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты)).Имя;
		КонецЕсли;
		
		КодОтсрочки = Прав(КодОтсрочки, 4);
		
	Иначе
		КодОтсрочки = "    ";
	КонецЕсли;
	
	Для счетчик = 1 По 4 Цикл
		ДанныеДляПечати.Вставить("Отсрочка_"+счетчик, Сред(КодОтсрочки, счетчик ,1));
	КонецЦикла; 
	
	
	Если Не КонтрактВЭД.ПаспортСделки.НеПечататьДатуОформленияЛиста2 Тогда
		ПечДатаОформленияЛиста2 = Формат(ДанныеДляПечати.ДатаОформленияЛиста2, "ДФ=dd.MM.yyyy");
		Если ПустаяСтрока(ПечДатаОформленияЛиста2) Тогда
			ПечДатаОформленияЛиста2 = "  .  .    ";
		КонецЕсли;
		Для счетчик = 1 По 10 Цикл
			Если Найти(".3.6.", "."+счетчик+".")>0 Тогда 
				Продолжить;
			КонецЕсли;
			ДанныеДляПечати.Вставить("ДатаОформленияЛиста2_"+счетчик, Сред(ПечДатаОформленияЛиста2, счетчик ,1));
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеДляПечати.СуммаОсновногоДолга <> 0 Тогда
		ДанныеДляПечати.Вставить("СуммаОсновногоДолгаВалютаКод", ДанныеДляПечати.КонтрактВалютаКод);
	КонецЕсли;	

	//В графе 2 указываются символы 10-18 номера ПС.
	//В графе 3 в формате ДД.ММ.ГГГГ указывается дата принятия ПС на обслуживание новым уполномоченным банком при переводе ПС на обслуживание в другой уполномоченный банк. В иных случаях графа 3 не заполняется.
 	//В графе 4 указывается дата закрытия ПС в формате ДД.ММ.ГГГГ, указанная в документе "Заявление в уполномоченный банк паспорта сделки", или же вручную устанавливается пользователем.
 	//В графе 5 указывается основание закрытия ПС, указанный в документе "Заявление в уполномоченный банк паспорта сделки" - перечисление РЭЙ_ОснованияЗакрытияПС. До 01.10.2012 указываются подпункты 3.18.Х пункта 3.18 Инструкции №117-И, с 01.10.2012 указываются подпункты 7.1.Х пункта 7.1 Инструкции №138-И. Значения перечислений согласно подпунктая 7.1.Х пункта 7.1 Инструкции №138-И я добавил 23.09.2012.
	
	
	РегНомерБанкаПС = Сред(КонтрактВЭД.ПаспортСделки.НомерПаспортаСделки, 10, 9);
	
	ТаблицаУчетПС = Новый ТаблицаЗначений;
	ТаблицаУчетПС.Колонки.Добавить("НомерСтроки");
	ТаблицаУчетПС.Колонки.Добавить("РегНомерБанкаПС");
	ТаблицаУчетПС.Колонки.Добавить("ДатаПринятияПСПриПереводе");
	ТаблицаУчетПС.Колонки.Добавить("ДатаЗакрытияПС");
	ТаблицаУчетПС.Колонки.Добавить("ОснованиеЗакрытияПС");
		
	НоваяСтрока = ТаблицаУчетПС.Добавить();
	Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаЗакрытияПС) Тогда
		НоваяСтрока.НомерСтроки = 1;
		НоваяСтрока.ДатаПринятияПСПриПереводе = "Х";
		НоваяСтрока.РегНомерБанкаПС = Сред(КонтрактВЭД.ПаспортСделки.НомерПаспортаСделки, 10, 9);
		НоваяСтрока.ДатаЗакрытияПС = ДанныеДляПечати.ДатаЗакрытияПС;
		НоваяСтрока.ОснованиеЗакрытияПС = ДанныеДляПечати.ОснованиеЗакрытияПС;
	КонецЕсли;
	ДанныеДляПечати.Вставить("ТаблицаУчетПС", ТаблицаУчетПС);
	
	ТаблицаПереоформлениеПС = КонтрактВЭД.ПаспортСделки.ПереоформлениеПС.Выгрузить();
	Для Каждого СтрокаТЧ Из ТаблицаПереоформлениеПС Цикл
		Если ПустаяСтрока(СтрокаТЧ.ОснованиеНомер)  Тогда
			СтрокаТЧ.ОснованиеНомер = "БН";
		КонецЕсли; 
	КонецЦикла; 
	ДанныеДляПечати.Вставить("ТаблицаПереоформлениеПС", ТаблицаПереоформлениеПС);
	
	Если ДанныеДляПечати.КредитныйДоговор Тогда
		ДанныеДляПечати.Вставить("ТаблицаГрафикФинансирования", РегистрыСведений.РЭЙ_ГрафикФинансирования.ПолучитьДанныеДляПечати(КонтрактВЭД));
		
		ДанныеДляПечати.Вставить("ТаблицаГрафикПогашения", РегистрыСведений.РЭЙ_ГрафикПогашения.ПолучитьДанныеДляПечати(КонтрактВЭД));
		
		ДанныеДляПечати.Вставить("ТаблицаКредитныйСиндикат", РегистрыСведений.РЭЙ_КредитныйСиндикат.ПолучитьДанныеДляПечати(КонтрактВЭД));
		
		Если КонтрактВЭД.ОснованиеЗаполненияГрафикаПогашения = 0 Тогда
			ДанныеДляПечати.Вставить("ОснованиеЗаполненияГрафикаПогашения0", "*");
		Иначе
			ДанныеДляПечати.Вставить("ОснованиеЗаполненияГрафикаПогашения0", "");
		КонецЕсли;
		Если КонтрактВЭД.ОснованиеЗаполненияГрафикаПогашения = 1 Тогда
			ДанныеДляПечати.Вставить("ОснованиеЗаполненияГрафикаПогашения1", "*");
		Иначе
			ДанныеДляПечати.Вставить("ОснованиеЗаполненияГрафикаПогашения1", "");
		КонецЕсли;
	КонецЕсли; 
	
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Процедура Печать2018_Раздел2(ТабДокумент, МенеджерВТ, Макет)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("СсылкиНаСправкиСВО", СсылкиНаСправкиСВО);
	Запрос.УстановитьПараметр("КонтрактВЭД", КонтрактВЭД);
	Запрос.УстановитьПараметр("ВалютаКонтракта", ВалютаКонтракта);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СВО.Ссылка КАК Ссылка,
	|	СВО.РасчетныйДокумент.Дата КАК ДатаРасчетногоДокумента,
	|	СВО.НаправлениеПлатежа КАК НаправлениеПлатежа,
	|	СВО.ВидВалютнойОперации КАК ВидВалютнойОперации,
	|	СВО.ВидВалютнойОперации.Код КАК КодВидаВалютнойОперации,
	|	СВО.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	СВО.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СВО.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО.ВалютаДокумента.Код
	|		ИНАЧЕ СВО.ВалютаКонтракта.Код
	|	КОНЕЦ КАК ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА СВО.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО.СуммаВВалютеДокумента
	|		ИНАЧЕ СВО.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	СВО.ОжидаемыйСрок КАК ОжидаемыйСрок,
	|	СВО.РасчетныйДокумент.БанковскийСчетКонтрагента.Банк.РЭЙ_Страна.Код КАК КодСтраныБанкаПлатежа,
	|	СВО.Ссылка.Корректировка КАК Корректировка,
	|	СВО.Ссылка.НомерКорректировки КАК НомерКорректировки,
	|	СВО.Ссылка.Инобанк.РЭЙ_Страна.Код КАК КодСтраныИноБанка,
	|	СВО.Примечание КАК Примечание,
	|	СВО.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	СВО.СрокВозвратаАванса КАК СрокВозвратаАванса,
	|	СВО.ПризнакПредставленияДокументов КАК ПризнакПредставленияДокументов
	|ПОМЕСТИТЬ ДанныеСВО
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК СВО
	|ГДЕ
	|	СВО.Ссылка В(&СсылкиНаСправкиСВО)
	|	И СВО.КонтрактВЭД = &КонтрактВЭД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СВО_Ручные.Ссылка,
	|	СВО_Ручные.ДатаРасчетногоДокумента,
	|	СВО_Ручные.НаправлениеПлатежа,
	|	СВО_Ручные.ВидВалютнойОперации,
	|	СВО_Ручные.ВидВалютнойОперации.Код,
	|	СВО_Ручные.ВалютаДокумента.Код,
	|	СВО_Ручные.СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СВО_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО_Ручные.ВалютаДокумента.Код
	|		ИНАЧЕ СВО_Ручные.ВалютаКонтракта.Код
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СВО_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО_Ручные.СуммаВВалютеДокумента
	|		ИНАЧЕ СВО_Ручные.СуммаВВалютеКонтракта
	|	КОНЕЦ,
	|	СВО_Ручные.ОжидаемыйСрок,
	|	СВО_Ручные.РасчетныйДокумент.БанковскийСчетКонтрагента.Банк.РЭЙ_Страна.Код,
	|	СВО_Ручные.Ссылка.Корректировка,
	|	СВО_Ручные.Ссылка.НомерКорректировки,
	|	СВО_Ручные.Ссылка.Инобанк.РЭЙ_Страна.Код,
	|	СВО_Ручные.Примечание,
	|	СВО_Ручные.НомерСтрокиДляПечати,
	|	СВО_Ручные.СрокВозвратаАванса,
	|	СВО_Ручные.ПризнакПредставленияДокументов
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперацииРучные КАК СВО_Ручные
	|ГДЕ
	|	СВО_Ручные.Ссылка В(&СсылкиНаСправкиСВО)
	|	И СВО_Ручные.КонтрактВЭД = &КонтрактВЭД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ДанныеСВО.Ссылка КАК Ссылка,
	|	ДанныеСВО.ДатаРасчетногоДокумента КАК ДатаРасчетногоДокумента,
	|	ДанныеСВО.НаправлениеПлатежа КАК НаправлениеПлатежа,
	|	ДанныеСВО.КодВидаВалютнойОперации КАК КодВидаВалютнойОперации,
	|	ДанныеСВО.ВалютаДокументаКод КАК ВалютаДокументаКод,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации.Возврат
	|			ТОГДА -ДанныеСВО.СуммаВВалютеДокумента
	|		ИНАЧЕ ДанныеСВО.СуммаВВалютеДокумента
	|	КОНЕЦ КАК СуммаВВалютеДокумента,
	|	ДанныеСВО.ВалютаКонтрактаКод КАК ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации.Возврат
	|			ТОГДА -ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ ДанныеСВО.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	ДанныеСВО.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтрактаДляРаздела5,
	|	ДанныеСВО.ОжидаемыйСрок КАК ОжидаемыйСрок,
	|	ДанныеСВО.КодСтраныБанкаПлатежа КАК КодСтраныБанкаПлатежа,
	|	ДанныеСВО.Корректировка КАК Корректировка,
	|	ДанныеСВО.НомерКорректировки КАК НомерКорректировки,
	|	ДанныеСВО.КодСтраныИноБанка КАК КодСтраныИноБанка,
	|	ДанныеСВО.Примечание КАК Примечание,
	|	ДанныеСВО.ВидВалютнойОперации КАК ВидВалютнойОперации,
	|	ДанныеСВО.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ДанныеСВО.СрокВозвратаАванса КАК СрокВозвратаАванса,
	|	ДанныеСВО.ПризнакПредставленияДокументов КАК ПризнакПредставленияДокументов
	|ИЗ
	|	ДанныеСВО КАК ДанныеСВО
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРасчетногоДокумента,
	|	НомерСтрокиДляПечати
	|ИТОГИ
	|	СУММА(СуммаВВалютеДокумента),
	|	СУММА(СуммаВВалютеКонтракта),
	|	СУММА(СуммаВВалютеКонтрактаДляРаздела5)
	|ПО
	|	ОБЩИЕ,
	|	ДатаРасчетногоДокумента,
	|	Ссылка,
	|	НомерСтрокиДляПечати";
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Секция = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Р2_Шапка");
	Секция.Вывести(Область);
	
	ТаблицаСВО = Новый ТаблицаЗначений;
	ТаблицаСВО.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
	ТаблицаСВО.Колонки.Добавить("ВидВалютнойОперации", Новый ОписаниеТипов("СправочникСсылка.РЭЙ_ВидыВалютныхОпераций"));
	ТаблицаСВО.Колонки.Добавить("СуммаВВалютеКонтракта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Если ВыборкаИтоги.Следующий() Тогда
		
		НомерСтроки = 0;
		ВыборкаДата = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДата.Следующий() Цикл
			ВыборкаДокументы = ВыборкаДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() Цикл
				ВыборкаОперации = ВыборкаДокументы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаОперации.Следующий() Цикл
					ВыборкаДетальныеЗаписи = ВыборкаОперации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					ВыборкаДетальныеЗаписи.Следующий();
					
					НомерСтроки = НомерСтроки + 1;
					
					Область = Макет.ПолучитьОбласть("Р2_Строка");
					Область.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
					Область.Параметры.НомерСтроки = НомерСтроки;
					Область.Параметры.СуммаВВалютеДокумента = ВыборкаОперации.СуммаВВалютеДокумента;
					Область.Параметры.СуммаВВалютеКонтракта = ВыборкаОперации.СуммаВВалютеКонтракта;
					Область.Параметры.ПризнакПредставленияДокументов = Сред(ВыборкаДетальныеЗаписи.ПризнакПредставленияДокументов, 1, 1);
					
					СтрокаТаблицыСВО = ТаблицаСВО.Добавить();
					СтрокаТаблицыСВО.НомерСтроки = НомерСтроки;
					СтрокаТаблицыСВО.ВидВалютнойОперации = ВыборкаДетальныеЗаписи.ВидВалютнойОперации;
					СтрокаТаблицыСВО.СуммаВВалютеКонтракта = ВыборкаОперации.СуммаВВалютеКонтрактаДляРаздела5;
					
					Если ВыборкаДетальныеЗаписи.Корректировка Тогда
						Область.Параметры.ТекстКорректировка = ВыборкаДетальныеЗаписи.НомерКорректировки;	
					КонецЕсли;
					
					ВыборкаДетальныеЗаписи.Сбросить();
					ТекстПримечания = "";
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						Если Не ПустаяСтрока(ВыборкаДетальныеЗаписи.Примечание) Тогда
							ТекстПримечания = ТекстПримечания + ?(ТекстПримечания = "", "", "; ") + СокрЛП(ВыборкаДетальныеЗаписи.Примечание);
						КонецЕсли;
					КонецЦикла;
					Область.Параметры.Примечание = ТекстПримечания;
					
					Секция.Вывести(Область);
				КонецЦикла; 
			КонецЦикла; 
		КонецЦикла; 
		
		Область = Макет.ПолучитьОбласть("Р2_Подвал");
		Область.Параметры.ВалютаКонтрактаКод = ВалютаКонтракта.Код;
		Область.Параметры.СуммаВВалютеКонтракта  = ВыборкаИтоги.СуммаВВалютеКонтракта;
		Секция.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("Р2_Строка");
		Секция.Вывести(Область);
	КонецЕсли;

	Если Не ТабДокумент.ПроверитьВывод(Секция) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ТабДокумент.Вывести(Секция);
	
	//Сохраняем таблицу для раздела 5
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСВО.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСВО.ВидВалютнойОперации,
	|	ТаблицаСВО.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта
	|ПОМЕСТИТЬ ДанныеСВО_ДляИтогов
	|ИЗ
	|	&ТаблицаСВО КАК ТаблицаСВО";
	Запрос.УстановитьПараметр("ТаблицаСВО", ТаблицаСВО);
	Запрос.Выполнить();
КонецПроцедуры

Процедура Печать2018_Раздел3(ТабДокумент, МенеджерВТ, Макет)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СПД.Ссылка КАК Ссылка,
	|	ЛОЖЬ КАК ЭтоРучныеОперации,
	|	СПД.ВидДокумента КАК ВидДокумента,
	|	СПД.ВидДокумента.Код КАК КодВидаПодтверждающегоДокумента,
	|	СПД.Документ КАК Документ,
	|	СПД.ДатаШтампаТаможни КАК ДатаШтампаТаможни,
	|	"""" КАК НомерНакладной,
	|	СПД.НомерГТД КАК НомерГТД,
	|	СПД.Ссылка.Корректировка КАК Корректировка,
	|	СПД.Ссылка.НомерКорректировки КАК НомерКорректировки,
	|	СПД.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	СПД.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД.ВалютаДокумента.Код
	|		ИНАЧЕ СПД.ВалютаКонтракта.Код
	|	КОНЕЦ КАК ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА СПД.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД.СуммаВВалютеДокумента
	|		ИНАЧЕ СПД.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	СПД.ОжидаемыйСрок КАК ОжидаемыйСрок,
	|	СПД.ПризнакПоставки КАК ПризнакПоставки,
	|	СПД.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	СПД.Примечание КАК Примечание,
	|	СПД.СуммаАвансаВВалютеДокумента КАК АвансВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД.СуммаАвансаВВалютеДокумента
	|		ИНАЧЕ СПД.СуммаАвансаВВалютеКонтракта
	|	КОНЕЦ КАК АвансВВалютеКонтракта
	|ПОМЕСТИТЬ ДанныеСПД
	|ИЗ
	|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК СПД
	|ГДЕ
	|	СПД.Ссылка В(&СсылкиНаСправкиСПД)
	|	И СПД.Ссылка.КонтрактВЭД = &КонтрактВЭД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СПД_Ручные.Ссылка,
	|	ИСТИНА,
	|	СПД_Ручные.ВидДокумента,
	|	СПД_Ручные.ВидДокумента.Код,
	|	"""",
	|	СПД_Ручные.ДатаШтампаТаможни,
	|	СПД_Ручные.НомерНакладной,
	|	СПД_Ручные.НомерГТД,
	|	СПД_Ручные.Ссылка.Корректировка,
	|	СПД_Ручные.Ссылка.НомерКорректировки,
	|	СПД_Ручные.ВалютаДокумента.Код,
	|	СПД_Ручные.СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД_Ручные.ВалютаДокумента.Код
	|		ИНАЧЕ СПД_Ручные.ВалютаКонтракта.Код
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СПД_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД_Ручные.СуммаВВалютеДокумента
	|		ИНАЧЕ СПД_Ручные.СуммаВВалютеКонтракта
	|	КОНЕЦ,
	|	СПД_Ручные.ОжидаемыйСрок,
	|	СПД_Ручные.ПризнакПоставки,
	|	СПД_Ручные.НомерСтрокиДляПечати,
	|	СПД_Ручные.Примечание,
	|	СПД_Ручные.СуммаАвансаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД_Ручные.СуммаАвансаВВалютеДокумента
	|		ИНАЧЕ СПД_Ручные.СуммаАвансаВВалютеКонтракта
	|	КОНЕЦ
	|ИЗ
	|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументыРучные КАК СПД_Ручные
	|ГДЕ
	|	СПД_Ручные.Ссылка В(&СсылкиНаСправкиСПД)
	|	И СПД_Ручные.Ссылка.КонтрактВЭД = &КонтрактВЭД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеСПД.Ссылка КАК Ссылка,
	|	ДанныеСПД.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ДанныеСПД.Документ КАК Документ,
	|	ДанныеСПД.НомерГТД КАК НомерГТД,
	|	ДанныеСПД.НомерНакладной КАК НомерНакладной,
	|	ДанныеСПД.ДатаШтампаТаможни КАК ДатаШтампаТаможни,
	|	ДанныеСПД.ЭтоРучныеОперации КАК ЭтоРучныеОперации
	|ИЗ
	|	ДанныеСПД КАК ДанныеСПД";
	
 	Запрос.УстановитьПараметр("СсылкиНаСправкиСПД", СсылкиНаСправкиСПД);
	Запрос.УстановитьПараметр("КонтрактВЭД", КонтрактВЭД);
	Запрос.УстановитьПараметр("ВалютаКонтракта", ВалютаКонтракта);
	
	ТаблицаНомерДата = Запрос.Выполнить().Выгрузить();
	ТаблицаНомерДата.Колонки.Добавить("НомерПодтверждающегоДокумента", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	ТаблицаНомерДата.Колонки.Добавить("ДатаПодтверждающегоДокумента", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	Для Каждого СтрокаСПД Из ТаблицаНомерДата Цикл
		СтрокаСПД.НомерПодтверждающегоДокумента = РЭЙ_СлужебныйСервер.ПолучитьНомерПодтверждающегоДокумента(СтрокаСПД, СтрокаСПД.ЭтоРучныеОперации);
		СтрокаСПД.ДатаПодтверждающегоДокумента = РЭЙ_СлужебныйСервер.ПолучитьДатуПодтверждающегоДокумента(СтрокаСПД, СтрокаСПД.ЭтоРучныеОперации);
	КонецЦикла;
	ТаблицаНомерДата.Свернуть("Ссылка, НомерСтрокиДляПечати, НомерПодтверждающегоДокумента, ДатаПодтверждающегоДокумента", "");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНомерДата.Ссылка КАК Ссылка,
	|	ТаблицаНомерДата.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ТаблицаНомерДата.НомерПодтверждающегоДокумента КАК НомерПодтверждающегоДокумента,
	|	ТаблицаНомерДата.ДатаПодтверждающегоДокумента КАК ДатаПодтверждающегоДокумента
	|ПОМЕСТИТЬ НомераДаты
	|ИЗ
	|	&ТаблицаНомерДата КАК ТаблицаНомерДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСПД.Ссылка КАК Ссылка,
	|	ДанныеСПД.ВидДокумента КАК ВидДокумента,
	|	ДанныеСПД.Документ КАК Документ,
	|	ДанныеСПД.Корректировка КАК Корректировка,
	|	ДанныеСПД.НомерКорректировки КАК НомерКорректировки,
	|	ДанныеСПД.ВалютаДокументаКод КАК ВалютаДокументаКод,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента.Возврат
	|			ТОГДА -ДанныеСПД.СуммаВВалютеДокумента
	|		ИНАЧЕ ДанныеСПД.СуммаВВалютеДокумента
	|	КОНЕЦ КАК СуммаВВалютеДокумента,
	|	ДанныеСПД.ВалютаКонтрактаКод КАК ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента.Возврат
	|			ТОГДА -ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ ДанныеСПД.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	ДанныеСПД.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтрактаДляРаздела5,
	|	ДанныеСПД.ОжидаемыйСрок КАК ОжидаемыйСрок,
	|	ДанныеСПД.ПризнакПоставки КАК ПризнакПоставки,
	|	ДанныеСПД.КодВидаПодтверждающегоДокумента КАК КодВидаПодтверждающегоДокумента,
	|	ДанныеСПД.ЭтоРучныеОперации КАК ЭтоРучныеОперации,
	|	ДанныеСПД.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ДанныеСПД.Примечание КАК Примечание,
	|	НомераДаты.НомерПодтверждающегоДокумента КАК НомерПодтверждающегоДокумента,
	|	НомераДаты.ДатаПодтверждающегоДокумента КАК ДатаПодтверждающегоДокумента
	|ИЗ
	|	ДанныеСПД КАК ДанныеСПД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НомераДаты КАК НомераДаты
	|		ПО ДанныеСПД.Ссылка = НомераДаты.Ссылка
	|			И ДанныеСПД.НомерСтрокиДляПечати = НомераДаты.НомерСтрокиДляПечати
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПодтверждающегоДокумента
	|ИТОГИ
	|	СУММА(СуммаВВалютеДокумента),
	|	СУММА(СуммаВВалютеКонтракта),
	|	СУММА(СуммаВВалютеКонтрактаДляРаздела5)
	|ПО
	|	ОБЩИЕ,
	|	ДатаПодтверждающегоДокумента,
	|	Ссылка,
	|	НомерСтрокиДляПечати";
	
	Запрос.УстановитьПараметр("ТаблицаНомерДата", ТаблицаНомерДата);
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	//Вывод в табличный документ
	Секция = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Р3_Шапка");
	Секция.Вывести(Область);

	ТаблицаСПД = Новый ТаблицаЗначений;
	ТаблицаСПД.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
	ТаблицаСПД.Колонки.Добавить("ВидДокумента", Новый ОписаниеТипов("СправочникСсылка.РЭЙ_ВидыПодтверждающихДокументов"));
	ТаблицаСПД.Колонки.Добавить("СуммаВВалютеКонтракта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Если ВыборкаИтоги.Следующий() Тогда
		
		НомерСтроки = 0;
		ВыборкаДата = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДата.Следующий() Цикл
			ВыборкаДокументы = ВыборкаДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() Цикл
				ВыборкаОперации = ВыборкаДокументы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаОперации.Следующий() Цикл
					ВыборкаДетальныеЗаписи = ВыборкаОперации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					ВыборкаДетальныеЗаписи.Следующий();
					
					НомерСтроки = НомерСтроки + 1;
					
					Область = Макет.ПолучитьОбласть("Р3_Строка");
					Область.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
					Область.Параметры.НомерСтроки = НомерСтроки;
					Область.Параметры.СуммаВВалютеДокумента = ВыборкаОперации.СуммаВВалютеДокумента;
					Область.Параметры.СуммаВВалютеКонтракта = ВыборкаОперации.СуммаВВалютеКонтракта;
					
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПризнакПоставки) Тогда
						Область.Параметры.ПризнакПоставки = Лев(ВыборкаДетальныеЗаписи.ПризнакПоставки, 1);
					КонецЕсли;			
					
					СтрокаТаблицыСПД = ТаблицаСПД.Добавить();
					СтрокаТаблицыСПД.НомерСтроки = НомерСтроки;
					СтрокаТаблицыСПД.ВидДокумента = ВыборкаДетальныеЗаписи.ВидДокумента;
					СтрокаТаблицыСПД.СуммаВВалютеКонтракта = ВыборкаОперации.СуммаВВалютеКонтрактаДляРаздела5;
					
					Если ВыборкаДетальныеЗаписи.Корректировка Тогда
						Область.Параметры.ТекстКорректировка = ВыборкаДетальныеЗаписи.НомерКорректировки;
					КонецЕсли;
					
					ВыборкаДетальныеЗаписи.Сбросить();
					ТекстПримечания = "";
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						Если Не ПустаяСтрока(ВыборкаДетальныеЗаписи.Примечание) Тогда
							ТекстПримечания = ТекстПримечания + ?(ТекстПримечания = "", "", "; ") + СокрЛП(ВыборкаДетальныеЗаписи.Примечание);
						КонецЕсли;
					КонецЦикла;
					Область.Параметры.Примечание = ТекстПримечания;
					
					Секция.Вывести(Область);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Р3_Подвал");
		Область.Параметры.ВалютаКонтрактаКод = ВалютаКонтракта.Код;
		Область.Параметры.СуммаВВалютеКонтракта  = ВыборкаИтоги.СуммаВВалютеКонтракта;
		Секция.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("Р3_Строка");
		Секция.Вывести(Область);
	КонецЕсли;
	
	Если Не ТабДокумент.ПроверитьВывод(Секция) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;		
	ТабДокумент.Вывести(Секция);
	
	//Сохраняем таблицу для раздела 5
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСПД.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСПД.ВидДокумента,
	|	ТаблицаСПД.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта
	|ПОМЕСТИТЬ ДанныеСПД_ДляИтогов
	|ИЗ
	|	&ТаблицаСПД КАК ТаблицаСПД";
	Запрос.УстановитьПараметр("ТаблицаСПД", ТаблицаСПД);
	Запрос.Выполнить();
КонецПроцедуры

Процедура Печать2018_КредитныйДоговор_Раздел1(ТабДокумент,  Макет)
	ДанныеДляПечати = ПолучитьДанныеДляПечати_2018();
	
	// Секции 1 и 2
	Область = Макет.ПолучитьОбласть("Р1_Секция1_Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	Область.Параметры.ДатаФормирования = ДатаОтчета; 
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.ТаблицаКонтрагентов.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Р1_Секция2_Строка");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаПоКонтрагенту ИЗ ДанныеДляПечати.ТаблицаКонтрагентов Цикл	
			Область = Макет.ПолучитьОбласть("Р1_Секция2_Строка");
			Область.Параметры.Заполнить(СтрокаПоКонтрагенту);
			ТабДокумент.Вывести(Область);
		КонецЦикла;
	КонецЕсли;
	
	// Секция 3
	Область = Макет.ПолучитьОбласть("Р1_Секция3_Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.ТаблицаГрафикФинансирования.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Р1_Секция3_Строка2");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.ТаблицаГрафикФинансирования Цикл
			Область = Макет.ПолучитьОбласть("Р1_Секция3_Строка2");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	// Секция 4
	Секция = Новый ТабличныйДокумент;
	Область = Макет.ПолучитьОбласть("Р1_Секция4_Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	Секция.Вывести(Область);
	
	Если ДанныеДляПечати.ТаблицаУчетПС.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Р1_Секция4_Строка");
		Секция.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.ТаблицаУчетПС Цикл
			Область = Макет.ПолучитьОбласть("Р1_Секция4_Строка");
			Область.Параметры.Заполнить(СтрокаТЧ);
			Секция.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Если Не ТабДокумент.ПроверитьВывод(Секция) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	ТабДокумент.Вывести(Секция);	
	
	// Секция 5
	Секция = Новый ТабличныйДокумент;
	Область = Макет.ПолучитьОбласть("Р1_Секция5_Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	Секция.Вывести(Область);
	
	Если ДанныеДляПечати.ТаблицаПереоформлениеПС.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Р1_Секция5_Строка");
		Секция.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.ТаблицаПереоформлениеПС Цикл
			Область = Макет.ПолучитьОбласть("Р1_Секция5_Строка");
			Область.Параметры.Заполнить(СтрокаТЧ);
			Секция.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Если Не ТабДокумент.ПроверитьВывод(Секция) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	ТабДокумент.Вывести(Секция);		
	
	// Секция 6
	Область = Макет.ПолучитьОбласть("Р1_Секция6");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	Если Не ТабДокумент.ПроверитьВывод(Область) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ТабДокумент.Вывести(Область);	
	
	// Секция 7
	Область = Макет.ПолучитьОбласть("Р1_Секция7");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	Если Не ТабДокумент.ПроверитьВывод(Область) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ТабДокумент.Вывести(Область);	
	
	// Секция 8
	Секция = Новый ТабличныйДокумент;
	Область = Макет.ПолучитьОбласть("Р1_Секция8_Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	Секция.Вывести(Область);
	
	Если ДанныеДляПечати.ТаблицаГрафикПогашения.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Р1_Секция8_Строка2");
		Секция.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.ТаблицаГрафикПогашения Цикл
			Область = Макет.ПолучитьОбласть("Р1_Секция8_Строка2");
			Область.Параметры.Заполнить(СтрокаТЧ);
			Секция.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Р1_Секция8_Шапка3");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	Секция.Вывести(Область);
	
	Если ДанныеДляПечати.ТаблицаКредитныйСиндикат.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Р1_Секция8_Строка5");
		Секция.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.ТаблицаКредитныйСиндикат Цикл
			Область = Макет.ПолучитьОбласть("Р1_Секция8_Строка5");
			Область.Параметры.Заполнить(СтрокаТЧ);
			Секция.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Если Не ТабДокумент.ПроверитьВывод(Секция) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	ТабДокумент.Вывести(Секция);		
КонецПроцедуры

Процедура Печать2018_КредитныйДоговор_Раздел4(табДокумент, МенеджерВТ, Макет)
	Секция = Новый ТабличныйДокумент;
	
	Область= Макет.ПолучитьОбласть("Р4_Шапка");
	Секция.Вывести(Область);
		
	СписокВидовОперацийДляКолонки3_Код5_Плюс = Новый Массив;
	СписокВидовОперацийДляКолонки3_Код5_Плюс.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("40030"));

	СписокВидовОперацийДляКолонки3_Код5_Минус = Новый Массив;
	СписокВидовОперацийДляКолонки3_Код5_Минус.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("40900"));
	СписокВидовОперацийДляКолонки3_Код5_Минус.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("99010"));
		
	СписокВидовОперацийДляКолонки3_Код6_Плюс = Новый Массив;
	СписокВидовОперацийДляКолонки3_Код6_Плюс.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("41030"));

	СписокВидовОперацийДляКолонки3_Код6_Минус = Новый Массив;
	СписокВидовОперацийДляКолонки3_Код6_Минус.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("41800"));
		
	СписокВидовОперацийДляКолонки4_Код5_Плюс = Новый Массив;
	СписокВидовОперацийДляКолонки4_Код5_Плюс.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("43015"));
	СписокВидовОперацийДляКолонки4_Код5_Плюс.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("32010"));

	СписокВидовОперацийДляКолонки4_Код5_Минус = Новый Массив;
	СписокВидовОперацийДляКолонки4_Код5_Минус.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("43800"));
	
	СписокВидовОперацийДляКолонки4_Код6_Плюс = Новый Массив;
	СписокВидовОперацийДляКолонки4_Код6_Плюс.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("42015"));
	СписокВидовОперацийДляКолонки4_Код6_Плюс.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("32025"));

	СписокВидовОперацийДляКолонки4_Код6_Минус = Новый Массив;
	СписокВидовОперацийДляКолонки4_Код6_Минус.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("42900"));
	СписокВидовОперацийДляКолонки4_Код6_Минус.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("99010"));

	СписокВидовПодтверждающихДокументовДляКолонки5_Код5 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки5_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("05_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("06_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("07_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("08_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("09_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("10_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("11_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("13_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("16_3"));

	СписокВидовПодтверждающихДокументовДляКолонки5_Код6 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки5_Код6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("05_4"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("06_4"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("07_4"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("08_4"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("09_4"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("10_4"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("11_4"));
	СписокВидовПодтверждающихДокументовДляКолонки5_Код6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("13_4"));
	
	СписокВидовПодтверждающихДокументовДляКолонки6_Код5 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки6_Код5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("12_4"));
	
	СписокВидовПодтверждающихДокументовДляКолонки6_Код6 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки6_Код6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("12_3"));

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеСВО.ВидВалютнойОперации КАК ВидВалютнойОперации,
	|	ДанныеСВО.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ВЫБОР
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПредоставлениеЗаймаРезидентомНерезиденту)
	|				И ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки3_Код5_Плюс)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПредоставлениеЗаймаРезидентомНерезиденту)
	|				И ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки3_Код5_Минус)
	|			ТОГДА -ДанныеСВО.СуммаВВалютеКонтракта
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПривлечениеКредитаРезидентомОтНерезидента)
	|				И ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки3_Код6_Плюс)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПривлечениеКредитаРезидентомОтНерезидента)
	|				И ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки3_Код6_Минус)
	|			ТОГДА -ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма3,
	|	ВЫБОР
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПредоставлениеЗаймаРезидентомНерезиденту)
	|				И ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки4_Код5_Плюс)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПредоставлениеЗаймаРезидентомНерезиденту)
	|				И ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки4_Код5_Минус)
	|			ТОГДА -ДанныеСВО.СуммаВВалютеКонтракта
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПривлечениеКредитаРезидентомОтНерезидента)
	|				И ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки4_Код6_Плюс)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПривлечениеКредитаРезидентомОтНерезидента)
	|				И ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки4_Код6_Минус)
	|			ТОГДА -ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма4,
	|	0 КАК Сумма5,
	|	0 КАК Сумма6,
	|	ДанныеСВО.СуммаВВалютеКонтракта КАК СуммаСВО,
	|	0 КАК СуммаСПД,
	|	NULL КАК ВидДокумента,
	|	ДанныеСВО.НомерСтроки КАК НомерСтроки,
	|	1 КАК НомерТЧ
	|ПОМЕСТИТЬ ДанныеДляИтогов
	|ИЗ
	|	ДанныеСВО_ДляИтогов КАК ДанныеСВО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ДанныеСПД.СуммаВВалютеКонтракта,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПредоставлениеЗаймаРезидентомНерезиденту)
	|				И ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки5_Код5)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПривлечениеКредитаРезидентомОтНерезидента)
	|				И ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки5_Код6)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПредоставлениеЗаймаРезидентомНерезиденту)
	|				И ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки6_Код5)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		КОГДА &ВидКонтрактаВЭД = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыКонтрактовВЭД.ПривлечениеКредитаРезидентомОтНерезидента)
	|				И ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки6_Код6)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	ДанныеСПД.СуммаВВалютеКонтракта,
	|	ДанныеСПД.ВидДокумента,
	|	ДанныеСПД.НомерСтроки,
	|	2
	|ИЗ
	|	ДанныеСПД_ДляИтогов КАК ДанныеСПД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляИтогов.ВидВалютнойОперации КАК ВидВалютнойОперации,
	|	ДанныеДляИтогов.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ДанныеДляИтогов.Сумма3 КАК Сумма3,
	|	ДанныеДляИтогов.Сумма4 КАК Сумма4,
	|	ДанныеДляИтогов.Сумма5 КАК Сумма5,
	|	ДанныеДляИтогов.Сумма6 КАК Сумма6,
	|	ДанныеДляИтогов.СуммаСВО КАК СуммаСВО,
	|	ДанныеДляИтогов.СуммаСПД КАК СуммаСПД,
	|	ДанныеДляИтогов.ВидДокумента КАК ВидДокумента,
	|	ДанныеДляИтогов.НомерСтроки КАК НомерСтроки,
	|	ДанныеДляИтогов.НомерТЧ КАК НомерТЧ
	|ИЗ
	|	ДанныеДляИтогов КАК ДанныеДляИтогов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТЧ,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма3),
	|	СУММА(Сумма4),
	|	СУММА(Сумма5),
	|	СУММА(Сумма6)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("ВидКонтрактаВЭД", КонтрактВЭД.ВидКонтрактаВЭД);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки3_Код5_Плюс", СписокВидовОперацийДляКолонки3_Код5_Плюс);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки3_Код5_Минус", СписокВидовОперацийДляКолонки3_Код5_Минус);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки3_Код6_Плюс", СписокВидовОперацийДляКолонки3_Код6_Плюс);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки3_Код6_Минус", СписокВидовОперацийДляКолонки3_Код6_Минус);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки4_Код5_Плюс", СписокВидовОперацийДляКолонки4_Код5_Плюс);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки4_Код5_Минус", СписокВидовОперацийДляКолонки4_Код5_Минус);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки4_Код6_Плюс", СписокВидовОперацийДляКолонки4_Код6_Плюс);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки4_Код6_Минус", СписокВидовОперацийДляКолонки4_Код6_Минус);
	
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки5_Код5", СписокВидовПодтверждающихДокументовДляКолонки5_Код5);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки5_Код6", СписокВидовПодтверждающихДокументовДляКолонки5_Код6);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки6_Код5", СписокВидовПодтверждающихДокументовДляКолонки6_Код5);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки6_Код6", СписокВидовПодтверждающихДокументовДляКолонки6_Код6);

	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Область = Макет.ПолучитьОбласть("Р4_Строка");
	Область.Параметры.ДатаРасчетаЗадолженностиОД = ДатаОтчета;
	Область.Параметры.КодВалКонтракт = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
	Если ВыборкаИтоги.Следующий() Тогда	
		Область.Параметры.Заполнить(ВыборкаИтоги);
		Область.Параметры.Сумма7 = КонтрактВЭД.ПаспортСделки.СуммаОсновногоДолга + ВыборкаИтоги.Сумма3 - ВыборкаИтоги.Сумма4 - ВыборкаИтоги.Сумма5 + ВыборкаИтоги.Сумма6;
		
		Выборка = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Если Выборка.СуммаСВО <> 0 Тогда
				//Если Выборка.СуммаСВО <> Выборка.Сумма3 + Выборка.Сумма4 Тогда
				//	Сообщить("Возможно, ошибочный код валютной операции """ + СокрЛП(Выборка.ВидВалютнойОперации) + """ в строке " + Выборка.НомерСтроки + " раздела II, сумма " + Формат(Выборка.СуммаСВО, "ЧДЦ=2") + " не учитывается в Разделе V.");
				//КонецЕсли;
			КонецЕсли;
			Если Выборка.СуммаСПД <> 0 Тогда
				//Если Выборка.СуммаСПД <> Выборка.Сумма5 + Выборка.Сумма6 + Выборка.Сумма7 + Выборка.Сумма8 Тогда
				//	Сообщить("Возможно, ошибочный код подтверждающего документа """ + СокрЛП(Выборка.ВидДокумента) + """ в строке " + Выборка.НомерСтроки + " раздела III, сумма " + Формат(Выборка.СуммаСПД, "ЧДЦ=2") + " не учитывается в Разделе V.");
				//КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Секция.Вывести(Область);
	
	Если Не ТабДокумент.ПроверитьВывод(Секция) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	
	ТабДокумент.Вывести(Секция);
КонецПроцедуры

Процедура Печать2018_Контракт_Раздел1(ТабДокумент,  Макет)
	ДанныеДляПечати = ПолучитьДанныеДляПечати_2018();
	ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка1");
	ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
	ОбластьЛист1_Шапка.Параметры.датаФормирования = ДатаОтчета; 
	ТабДокумент.Вывести(ОбластьЛист1_Шапка);
	
	фл = Ложь;
	Для Каждого СтрокаПоКонтрагенту ИЗ ДанныеДляПечати.ТаблицаКонтрагентов Цикл	
		ОбластьЛист1_Строка11 = Макет.ПолучитьОбласть("Лист1_Строка11");
		ОбластьЛист1_Строка11.Параметры.Заполнить(СтрокаПоКонтрагенту);
		ТабДокумент.Вывести(ОбластьЛист1_Строка11);
		фл = Истина;
	КонецЦикла;
	Если не фл Тогда
		ОбластьЛист1_Строка11 = Макет.ПолучитьОбласть("Лист1_Строка11");
		ТабДокумент.Вывести(ОбластьЛист1_Строка11);
		фл = Истина;
	КонецЕсли;
	
	табДокумент2 = Новый ТабличныйДокумент;
	
	ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка12");
	ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент2.Вывести(ОбластьЛист1_Шапка);
	
	Если Не ТабДокумент.ПроверитьВывод(табДокумент2) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	
	ТаблицаУчетПС = ДанныеДляПечати.ТаблицаУчетПС;
	Если ТаблицаУчетПС.Количество() = 0 Тогда
		ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
		ТабДокумент2.Вывести(ОбластьЛист1_Строка);
	Иначе
		Для Каждого СтрокаТЧ Из ТаблицаУчетПС Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент2.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Если Не ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;				
	ТабДокумент.Вывести(ТабДокумент2);	
	
	
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка2");
	ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент2.Вывести(ОбластьЛист1_Шапка);
	
	
	
	Если ДанныеДляПечати.ТаблицаПереоформлениеПС.Количество() = 0 Тогда
		ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
		ТабДокумент2.Вывести(ОбластьЛист1_Строка);
		
		Если НЕ ТабДокумент.ПроверитьВывод(табДокумент2) Тогда	
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;			
	Иначе
		Для каждого СтрПС2012_Таблица5 Из ДанныеДляПечати.ТаблицаПереоформлениеПС Цикл
			ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
			ОбластьЛист1_Строка.Параметры.Заполнить(СтрПС2012_Таблица5);
			ТабДокумент2.Вывести(ОбластьЛист1_Строка);
			
			Если НЕ ТабДокумент.ПроверитьВывод(табДокумент2) Тогда	
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;				
		КонецЦикла; 
	КонецЕсли;
	
	ТабДокумент.Вывести(ТабДокумент2);		
	
	ОбластьЛист1_Подвал = Макет.ПолучитьОбласть("Лист1_Подвал");
	ОбластьЛист1_Подвал.Параметры.Заполнить(ДанныеДляПечати);
	
	Если НЕ ТабДокумент.ПроверитьВывод(ОбластьЛист1_Подвал) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьЛист1_Подвал);	
КонецПроцедуры

Процедура Печать2018_Контракт_Раздел4(ТабДокумент, МенеджерВТ, Макет)
	Секция = Новый ТабличныйДокумент;	
	
	Область = Макет.ПолучитьОбласть("Р4_Шапка1");
	Секция.Вывести(Область);
	Область = Макет.ПолучитьОбласть("Р4_Строка1");
	Секция.Вывести(Область);
	Область = Макет.ПолучитьОбласть("Р4_Шапка2");
	Секция.Вывести(Область);
	Область = Макет.ПолучитьОбласть("Р4_Строка2");
	Секция.Вывести(Область);
	
	Если Не ТабДокумент.ПроверитьВывод(Секция) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;		
	ТабДокумент.Вывести(Секция);
КонецПроцедуры

Процедура Печать2018_Контракт_Раздел5(табДокумент, МенеджерВТ, Макет)
	Секция = Новый ТабличныйДокумент;
	
	Область= Макет.ПолучитьОбласть("Р5_Шапка");
	Секция.Вывести(Область);
		
	СписокВидовОперацийДляКолонки3 = Новый Массив;
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10100"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10200"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11900"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20100"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20200"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20300"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20400"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21500"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21900"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22100"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22110"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22200"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22210"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22300"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23900"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("32010"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("99010"));

	СписокВидовОперацийДляКолонки4 = Новый Массив;
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10800"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11100"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11200"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20500"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20800"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21100"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21200"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21300"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21400"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22800"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23100"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23110"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23200"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23210"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23300"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("32025"));

	СписокВидовПодтверждающихДокументовДляКолонки5 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("01_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("02_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("03_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("04_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("15_3"));
	
	СписокВидовПодтверждающихДокументовДляКолонки6 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("01_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("02_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("03_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("04_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("15_4"));
	
	СписокВидовПодтверждающихДокументовДляКолонки7 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки7.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("10_3"));
	СписокВидовПодтверждающихДокументовДляКолонки7.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("13_3"));
	СписокВидовПодтверждающихДокументовДляКолонки7.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("16_3"));
	
	СписокВидовПодтверждающихДокументовДляКолонки8 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки8.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("10_4"));
	СписокВидовПодтверждающихДокументовДляКолонки8.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("13_4"));
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеСВО.ВидВалютнойОперации,
	|	ДанныеСВО.СуммаВВалютеКонтракта,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки3)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма3,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки4)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма4,
	|	0 КАК Сумма5,
	|	0 КАК Сумма6,
	|	0 КАК Сумма7,
	|	0 КАК Сумма8,
	|	ДанныеСВО.СуммаВВалютеКонтракта КАК СуммаСВО,
	|	0 КАК СуммаСПД,
	|	NULL КАК ВидДокумента,
	|	ДанныеСВО.НомерСтроки,
	|	1 КАК НомерТЧ
	|ПОМЕСТИТЬ ДанныеДляИтогов
	|ИЗ
	|	ДанныеСВО_ДляИтогов КАК ДанныеСВО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ДанныеСПД.СуммаВВалютеКонтракта,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки5)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки6)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки7)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки8)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	ДанныеСПД.СуммаВВалютеКонтракта,
	|	ДанныеСПД.ВидДокумента,
	|	ДанныеСПД.НомерСтроки,
	|	2
	|ИЗ
	|	ДанныеСПД_ДляИтогов КАК ДанныеСПД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляИтогов.ВидВалютнойОперации,
	|	ДанныеДляИтогов.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ДанныеДляИтогов.Сумма3 КАК Сумма3,
	|	ДанныеДляИтогов.Сумма4 КАК Сумма4,
	|	ДанныеДляИтогов.Сумма5 КАК Сумма5,
	|	ДанныеДляИтогов.Сумма6 КАК Сумма6,
	|	ДанныеДляИтогов.Сумма7 КАК Сумма7,
	|	ДанныеДляИтогов.Сумма8 КАК Сумма8,
	|	ДанныеДляИтогов.СуммаСВО КАК СуммаСВО,
	|	ДанныеДляИтогов.СуммаСПД КАК СуммаСПД,
	|	ДанныеДляИтогов.ВидДокумента,
	|	ДанныеДляИтогов.НомерСтроки КАК НомерСтроки,
	|	ДанныеДляИтогов.НомерТЧ КАК НомерТЧ
	|ИЗ
	|	ДанныеДляИтогов КАК ДанныеДляИтогов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТЧ,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма3),
	|	СУММА(Сумма4),
	|	СУММА(Сумма5),
	|	СУММА(Сумма6),
	|	СУММА(Сумма7),
	|	СУММА(Сумма8)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки3", СписокВидовОперацийДляКолонки3);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки4", СписокВидовОперацийДляКолонки4);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки5", СписокВидовПодтверждающихДокументовДляКолонки5);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки6", СписокВидовПодтверждающихДокументовДляКолонки6);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки7", СписокВидовПодтверждающихДокументовДляКолонки7);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки8", СписокВидовПодтверждающихДокументовДляКолонки8);
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Область = Макет.ПолучитьОбласть("Р5_Строка");
	Область.Параметры.ДатаФормирования = ДатаОтчета;
	Область.Параметры.КодВалКонтракт = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
	Если ВыборкаИтоги.Следующий() Тогда	
		Область.Параметры.Заполнить(ВыборкаИтоги);
		Область.Параметры.СальдоРасчетов = (ВыборкаИтоги.Сумма3 + ВыборкаИтоги.Сумма6 + ВыборкаИтоги.Сумма7) - (ВыборкаИтоги.Сумма4 + ВыборкаИтоги.Сумма5 + ВыборкаИтоги.Сумма8);
		
		Выборка = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Если Выборка.СуммаСВО <> 0 Тогда
				Если Выборка.СуммаСВО <> Выборка.Сумма3 + Выборка.Сумма4 Тогда
					Сообщить("Возможно, ошибочный код валютной операции """ + СокрЛП(Выборка.ВидВалютнойОперации) + """ в строке " + Выборка.НомерСтроки + " раздела II, сумма " + Формат(Выборка.СуммаСВО, "ЧДЦ=2") + " не учитывается в Разделе V.");
				КонецЕсли;
			КонецЕсли;
			Если Выборка.СуммаСПД <> 0 Тогда
				Если Выборка.СуммаСПД <> Выборка.Сумма5 + Выборка.Сумма6 + Выборка.Сумма7 + Выборка.Сумма8 Тогда
					Сообщить("Возможно, ошибочный код подтверждающего документа """ + СокрЛП(Выборка.ВидДокумента) + """ в строке " + Выборка.НомерСтроки + " раздела III, сумма " + Формат(Выборка.СуммаСПД, "ЧДЦ=2") + " не учитывается в Разделе V.");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Секция.Вывести(Область);
	
	Если Не ТабДокумент.ПроверитьВывод(Секция) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	
	ТабДокумент.Вывести(Секция);
КонецПроцедуры

#КонецОбласти

#Область УстаревшиеПроцедурыПечати

Функция СформироватьВБК_2015() Экспорт
	СсылкиНаСправкиСПД  = РЭЙ_СлужебныйСервер.ПолучитьСсылкиНаАктуальныеСПД(КонтрактВЭД, ДатаОтчета);
	СсылкиНаСправкиСВО  = РЭЙ_СлужебныйСервер.ПолучитьСсылкиНаАктуальныеСВО(КонтрактВЭД, ДатаОтчета);
	ВалютаКонтракта = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ВедомостьБанковскогоКонтроля_2015");
	ДанныеДляПечати = ПолучитьДанныеДляПечатиПС_2012("ПС2012");
	ТабДокумент = ПечатьПаспортаСделки2012(ТабДокумент, ДанныеДляПечати, Макет);
	
	Печать2015_Раздел2(ТабДокумент, МенеджерВТ, Макет);
	Печать2015_Раздел3(ТабДокумент, МенеджерВТ, Макет);
	Печать2015_Раздел4(ТабДокумент, МенеджерВТ, Макет);
	Печать2015_Раздел5(ТабДокумент, МенеджерВТ, Макет);

	Возврат ТабДокумент;
КонецФункции

Процедура Печать2015_Раздел2(ТабДокумент, МенеджерВТ, Макет)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("СсылкиНаСправкиСВО", СсылкиНаСправкиСВО);
	Запрос.УстановитьПараметр("ПаспортСделки", КонтрактВЭД.ПаспортСделки);
	Запрос.УстановитьПараметр("ВалютаКонтракта", ВалютаКонтракта);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СВО.Ссылка,
	|	СВО.РасчетныйДокумент.Дата КАК ДатаРасчетногоДокумента,
	|	СВО.НаправлениеПлатежа,
	|	СВО.ВидВалютнойОперации,
	|	СВО.ВидВалютнойОперации.Код КАК КодВидаВалютнойОперации,
	|	СВО.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	СВО.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СВО.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО.ВалютаДокумента.Код
	|		ИНАЧЕ СВО.ВалютаКонтракта.Код
	|	КОНЕЦ КАК ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА СВО.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО.СуммаВВалютеДокумента
	|		ИНАЧЕ СВО.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	СВО.ОжидаемыйСрок,
	|	СВО.РасчетныйДокумент.БанковскийСчетКонтрагента.Банк.РЭЙ_Страна.Код КАК КодСтраныБанкаПлатежа,
	|	СВО.Ссылка.Корректировка КАК Корректировка,
	|	СВО.Ссылка.НомерКорректировки КАК НомерКорректировки,
	|	СВО.Ссылка.Инобанк.РЭЙ_Страна.Код КАК КодСтраныИноБанка,
	|	СВО.Примечание,
	|	СВО.НомерСтрокиДляПечати,
	|	СВО.СрокВозвратаАванса
	|ПОМЕСТИТЬ ДанныеСВО
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК СВО
	|ГДЕ
	|	СВО.Ссылка В(&СсылкиНаСправкиСВО)
	|	И СВО.ПаспортСделки = &ПаспортСделки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СВО_Ручные.Ссылка,
	|	СВО_Ручные.ДатаРасчетногоДокумента,
	|	СВО_Ручные.НаправлениеПлатежа,
	|	СВО_Ручные.ВидВалютнойОперации,
	|	СВО_Ручные.ВидВалютнойОперации.Код,
	|	СВО_Ручные.ВалютаДокумента.Код,
	|	СВО_Ручные.СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СВО_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО_Ручные.ВалютаДокумента.Код
	|		ИНАЧЕ СВО_Ручные.ВалютаКонтракта.Код
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СВО_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО_Ручные.СуммаВВалютеДокумента
	|		ИНАЧЕ СВО_Ручные.СуммаВВалютеКонтракта
	|	КОНЕЦ,
	|	СВО_Ручные.ОжидаемыйСрок,
	|	СВО_Ручные.РасчетныйДокумент.БанковскийСчетКонтрагента.Банк.РЭЙ_Страна.Код,
	|	СВО_Ручные.Ссылка.Корректировка,
	|	СВО_Ручные.Ссылка.НомерКорректировки,
	|	СВО_Ручные.Ссылка.Инобанк.РЭЙ_Страна.Код,
	|	СВО_Ручные.Примечание,
	|	СВО_Ручные.НомерСтрокиДляПечати,
	|	СВО_Ручные.СрокВозвратаАванса
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперацииРучные КАК СВО_Ручные
	|ГДЕ
	|	СВО_Ручные.Ссылка В(&СсылкиНаСправкиСВО)
	|	И СВО_Ручные.ПаспортСделки = &ПаспортСделки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ДанныеСВО.Ссылка КАК Ссылка,
	|	ДанныеСВО.ДатаРасчетногоДокумента КАК ДатаРасчетногоДокумента,
	|	ДанныеСВО.НаправлениеПлатежа,
	|	ДанныеСВО.КодВидаВалютнойОперации,
	|	ДанныеСВО.ВалютаДокументаКод,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации.Возврат
	|			ТОГДА -ДанныеСВО.СуммаВВалютеДокумента
	|		ИНАЧЕ ДанныеСВО.СуммаВВалютеДокумента
	|	КОНЕЦ КАК СуммаВВалютеДокумента,
	|	ДанныеСВО.ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации.Возврат
	|			ТОГДА -ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ ДанныеСВО.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	ДанныеСВО.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтрактаДляРаздела5,
	|	ДанныеСВО.ОжидаемыйСрок,
	|	ДанныеСВО.КодСтраныБанкаПлатежа,
	|	ДанныеСВО.Корректировка,
	|	ДанныеСВО.НомерКорректировки,
	|	ДанныеСВО.КодСтраныИноБанка,
	|	ДанныеСВО.Примечание,
	|	ДанныеСВО.ВидВалютнойОперации,
	|	ДанныеСВО.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ДанныеСВО.СрокВозвратаАванса
	|ИЗ
	|	ДанныеСВО КАК ДанныеСВО
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРасчетногоДокумента,
	|	НомерСтрокиДляПечати
	|ИТОГИ
	|	СУММА(СуммаВВалютеДокумента),
	|	СУММА(СуммаВВалютеКонтракта),
	|	СУММА(СуммаВВалютеКонтрактаДляРаздела5)
	|ПО
	|	ОБЩИЕ,
	|	ДатаРасчетногоДокумента,
	|	Ссылка,
	|	НомерСтрокиДляПечати";
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Раздел2_Шапка");
	ТабДокумент2.Вывести(Область);
	
	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ТаблицаСВО = Новый ТаблицаЗначений;
	ТаблицаСВО.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
	ТаблицаСВО.Колонки.Добавить("ВидВалютнойОперации", Новый ОписаниеТипов("СправочникСсылка.РЭЙ_ВидыВалютныхОпераций"));
	ТаблицаСВО.Колонки.Добавить("СуммаВВалютеКонтракта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Если ВыборкаИтоги.Следующий() Тогда
		
		НомерСтроки = 0;
		ВыборкаДата = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДата.Следующий() Цикл
			ВыборкаДокументы = ВыборкаДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() Цикл
				ВыборкаОперации = ВыборкаДокументы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаОперации.Следующий() Цикл
					ВыборкаДетальныеЗаписи = ВыборкаОперации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					ВыборкаДетальныеЗаписи.Следующий();
					
					НомерСтроки = НомерСтроки + 1;
					
					Область = Макет.ПолучитьОбласть("Раздел2_Строка");
					Область.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
					Область.Параметры.НомерСтроки = НомерСтроки;
					Область.Параметры.СуммаВВалютеДокумента = ВыборкаОперации.СуммаВВалютеДокумента;
					Область.Параметры.СуммаВВалютеКонтракта = ВыборкаОперации.СуммаВВалютеКонтракта;
					
					СтрокаТаблицыСВО = ТаблицаСВО.Добавить();
					СтрокаТаблицыСВО.НомерСтроки = НомерСтроки;
					СтрокаТаблицыСВО.ВидВалютнойОперации = ВыборкаДетальныеЗаписи.ВидВалютнойОперации;
					СтрокаТаблицыСВО.СуммаВВалютеКонтракта = ВыборкаОперации.СуммаВВалютеКонтрактаДляРаздела5;
					
					Если ВыборкаДетальныеЗаписи.Корректировка Тогда
						Если ВыборкаДетальныеЗаписи.НомерКорректировки <> 0 Тогда
							Область.Параметры.ТекстКорректировка = "*(" + ВыборкаДетальныеЗаписи.НомерКорректировки + ")";	
						Иначе
							Область.Параметры.ТекстКорректировка = "*";	
						КонецЕсли;
					КонецЕсли;
					
					ВыборкаДетальныеЗаписи.Сбросить();
					ТекстПримечания = "";
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						Если Не ПустаяСтрока(ВыборкаДетальныеЗаписи.Примечание) Тогда
							ТекстПримечания = ТекстПримечания + ?(ТекстПримечания = "", "", "; ") + СокрЛП(ВыборкаДетальныеЗаписи.Примечание);
						КонецЕсли;
					КонецЦикла;
					Область.Параметры.Примечание = ТекстПримечания;
					
					ТабДокумент2.Вывести(Область);
				КонецЦикла; 
			КонецЦикла; 
		КонецЦикла; 
		
		Область = Макет.ПолучитьОбласть("Раздел2_Подвал");
		Область.Параметры.ВалютаКонтрактаКод = ВалютаКонтракта.Код;
		Область.Параметры.СуммаВВалютеКонтракта  = ВыборкаИтоги.СуммаВВалютеКонтракта;
		ТабДокумент2.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("Раздел2_Строка");
		ТабДокумент2.Вывести(Область);
	КонецЕсли;

	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ТабДокумент.Вывести(ТабДокумент2);
	
	//Сохраняем таблицу для раздела 5
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСВО.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСВО.ВидВалютнойОперации,
	|	ТаблицаСВО.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта
	|ПОМЕСТИТЬ ДанныеСВО_ДляРаздела5
	|ИЗ
	|	&ТаблицаСВО КАК ТаблицаСВО";
	Запрос.УстановитьПараметр("ТаблицаСВО", ТаблицаСВО);
	Запрос.Выполнить();
КонецПроцедуры

Процедура Печать2015_Раздел3(ТабДокумент, МенеджерВТ, Макет)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СПД.Ссылка,
	|	ЛОЖЬ КАК ЭтоРучныеОперации,
	|	СПД.ВидДокумента,
	|	СПД.ВидДокумента.Код КАК КодВидаПодтверждающегоДокумента,
	|	СПД.Документ,
	|	СПД.ДатаШтампаТаможни,
	|	"""" КАК НомерНакладной,
	|	СПД.НомерГТД КАК НомерГТД,
	|	СПД.Ссылка.Корректировка КАК Корректировка,
	|	СПД.Ссылка.НомерКорректировки КАК НомерКорректировки,
	|	СПД.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	СПД.СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД.ВалютаДокумента.Код
	|		ИНАЧЕ СПД.ВалютаКонтракта.Код
	|	КОНЕЦ КАК ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА СПД.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД.СуммаВВалютеДокумента
	|		ИНАЧЕ СПД.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	СПД.ОжидаемыйСрок,
	|	СПД.ПризнакПоставки,
	|	СПД.НомерСтрокиДляПечати,
	|	СПД.Примечание,
	|	СПД.СуммаАвансаВВалютеДокумента КАК АвансВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД.СуммаАвансаВВалютеДокумента
	|		ИНАЧЕ СПД.СуммаАвансаВВалютеКонтракта
	|	КОНЕЦ КАК АвансВВалютеКонтракта
	|ПОМЕСТИТЬ ДанныеСПД
	|ИЗ
	|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК СПД
	|ГДЕ
	|	СПД.Ссылка В(&СсылкиНаСправкиСПД)
	|	И СПД.Ссылка.ПаспортСделки = &ПаспортСделки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СПД_Ручные.Ссылка,
	|	ИСТИНА,
	|	СПД_Ручные.ВидДокумента,
	|	СПД_Ручные.ВидДокумента.Код,
	|	"""",
	|	СПД_Ручные.ДатаШтампаТаможни,
	|	СПД_Ручные.НомерНакладной,
	|	СПД_Ручные.НомерГТД,
	|	СПД_Ручные.Ссылка.Корректировка,
	|	СПД_Ручные.Ссылка.НомерКорректировки,
	|	СПД_Ручные.ВалютаДокумента.Код,
	|	СПД_Ручные.СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД_Ручные.ВалютаДокумента.Код
	|		ИНАЧЕ СПД_Ручные.ВалютаКонтракта.Код
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СПД_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД_Ручные.СуммаВВалютеДокумента
	|		ИНАЧЕ СПД_Ручные.СуммаВВалютеКонтракта
	|	КОНЕЦ,
	|	СПД_Ручные.ОжидаемыйСрок,
	|	СПД_Ручные.ПризнакПоставки,
	|	СПД_Ручные.НомерСтрокиДляПечати,
	|	СПД_Ручные.Примечание,
	|	СПД_Ручные.СуммаАвансаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД_Ручные.СуммаАвансаВВалютеДокумента
	|		ИНАЧЕ СПД_Ручные.СуммаАвансаВВалютеКонтракта
	|	КОНЕЦ
	|ИЗ
	|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументыРучные КАК СПД_Ручные
	|ГДЕ
	|	СПД_Ручные.Ссылка В(&СсылкиНаСправкиСПД)
	|	И СПД_Ручные.Ссылка.ПаспортСделки = &ПаспортСделки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеСПД.Ссылка,
	|	ДанныеСПД.НомерСтрокиДляПечати,
	|	ДанныеСПД.Документ,
	|	ДанныеСПД.НомерГТД,
	|	ДанныеСПД.НомерНакладной,
	|	ДанныеСПД.ДатаШтампаТаможни,
	|	ДанныеСПД.ЭтоРучныеОперации
	|ИЗ
	|	ДанныеСПД КАК ДанныеСПД";
	
 	Запрос.УстановитьПараметр("СсылкиНаСправкиСПД", СсылкиНаСправкиСПД);
	Запрос.УстановитьПараметр("ПаспортСделки", КонтрактВЭД.ПаспортСделки);
	Запрос.УстановитьПараметр("ВалютаКонтракта", ВалютаКонтракта);
	
	ТаблицаНомерДата = Запрос.Выполнить().Выгрузить();
	ТаблицаНомерДата.Колонки.Добавить("НомерПодтверждающегоДокумента", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	ТаблицаНомерДата.Колонки.Добавить("ДатаПодтверждающегоДокумента", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	Для Каждого СтрокаСПД Из ТаблицаНомерДата Цикл
		СтрокаСПД.НомерПодтверждающегоДокумента = РЭЙ_СлужебныйСервер.ПолучитьНомерПодтверждающегоДокумента(СтрокаСПД, СтрокаСПД.ЭтоРучныеОперации);
		СтрокаСПД.ДатаПодтверждающегоДокумента = РЭЙ_СлужебныйСервер.ПолучитьДатуПодтверждающегоДокумента(СтрокаСПД, СтрокаСПД.ЭтоРучныеОперации);
	КонецЦикла;
	ТаблицаНомерДата.Свернуть("Ссылка, НомерСтрокиДляПечати, НомерПодтверждающегоДокумента, ДатаПодтверждающегоДокумента", "");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНомерДата.Ссылка,
	|	ТаблицаНомерДата.НомерСтрокиДляПечати,
	|	ТаблицаНомерДата.НомерПодтверждающегоДокумента,
	|	ТаблицаНомерДата.ДатаПодтверждающегоДокумента
	|ПОМЕСТИТЬ НомераДаты
	|ИЗ
	|	&ТаблицаНомерДата КАК ТаблицаНомерДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСПД.Ссылка КАК Ссылка,
	|	ДанныеСПД.ВидДокумента,
	|	ДанныеСПД.Документ,
	|	ДанныеСПД.Корректировка,
	|	ДанныеСПД.НомерКорректировки,
	|	ДанныеСПД.ВалютаДокументаКод,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента.Возврат
	|			ТОГДА -ДанныеСПД.СуммаВВалютеДокумента
	|		ИНАЧЕ ДанныеСПД.СуммаВВалютеДокумента
	|	КОНЕЦ КАК СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента.Возврат
	|			ТОГДА -ДанныеСПД.АвансВВалютеДокумента
	|		ИНАЧЕ ДанныеСПД.АвансВВалютеДокумента
	|	КОНЕЦ КАК АвансВВалютеДокумента,
	|	ДанныеСПД.ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента.Возврат
	|			ТОГДА -ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ ДанныеСПД.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента.Возврат
	|			ТОГДА -ДанныеСПД.АвансВВалютеКонтракта
	|		ИНАЧЕ ДанныеСПД.АвансВВалютеКонтракта
	|	КОНЕЦ КАК АвансВВалютеКонтракта,
	|	ДанныеСПД.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтрактаДляРаздела5,
	|	ДанныеСПД.ОжидаемыйСрок,
	|	ДанныеСПД.ПризнакПоставки,
	|	ДанныеСПД.КодВидаПодтверждающегоДокумента,
	|	ДанныеСПД.ЭтоРучныеОперации,
	|	ДанныеСПД.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ДанныеСПД.Примечание КАК Примечание,
	|	НомераДаты.НомерПодтверждающегоДокумента,
	|	НомераДаты.ДатаПодтверждающегоДокумента КАК ДатаПодтверждающегоДокумента
	|ИЗ
	|	ДанныеСПД КАК ДанныеСПД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НомераДаты КАК НомераДаты
	|		ПО ДанныеСПД.Ссылка = НомераДаты.Ссылка
	|			И ДанныеСПД.НомерСтрокиДляПечати = НомераДаты.НомерСтрокиДляПечати
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПодтверждающегоДокумента
	|ИТОГИ
	|	СУММА(СуммаВВалютеДокумента),
	|	СУММА(АвансВВалютеДокумента),
	|	СУММА(СуммаВВалютеКонтракта),
	|	СУММА(АвансВВалютеКонтракта),
	|	СУММА(СуммаВВалютеКонтрактаДляРаздела5)
	|ПО
	|	ОБЩИЕ,
	|	ДатаПодтверждающегоДокумента,
	|	Ссылка,
	|	НомерСтрокиДляПечати";
	
	Запрос.УстановитьПараметр("ТаблицаНомерДата", ТаблицаНомерДата);
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	//Вывод в табличный документ
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Раздел3_Шапка");
	ТабДокумент2.Вывести(Область);

	ТаблицаСПД = Новый ТаблицаЗначений;
	ТаблицаСПД.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
	ТаблицаСПД.Колонки.Добавить("ВидДокумента", Новый ОписаниеТипов("СправочникСсылка.РЭЙ_ВидыПодтверждающихДокументов"));
	ТаблицаСПД.Колонки.Добавить("СуммаВВалютеКонтракта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Если ВыборкаИтоги.Следующий() Тогда
		
		НомерСтроки = 0;
		ВыборкаДата = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДата.Следующий() Цикл
			ВыборкаДокументы = ВыборкаДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДокументы.Следующий() Цикл
				ВыборкаОперации = ВыборкаДокументы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаОперации.Следующий() Цикл
					ВыборкаДетальныеЗаписи = ВыборкаОперации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					ВыборкаДетальныеЗаписи.Следующий();
					
					НомерСтроки = НомерСтроки + 1;
					
					Область = Макет.ПолучитьОбласть("Раздел3_Строка");
					Область.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
					Область.Параметры.НомерСтроки = НомерСтроки;
					Область.Параметры.СуммаВВалютеДокумента = ВыборкаОперации.СуммаВВалютеДокумента;
					Область.Параметры.АвансВВалютеДокумента = ВыборкаОперации.АвансВВалютеДокумента;
					Область.Параметры.СуммаВВалютеКонтракта = ВыборкаОперации.СуммаВВалютеКонтракта;
					Область.Параметры.АвансВВалютеКонтракта = ВыборкаОперации.АвансВВалютеКонтракта;
					
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПризнакПоставки) Тогда
						Область.Параметры.ПризнакПоставки = Лев(ВыборкаДетальныеЗаписи.ПризнакПоставки, 1);
					КонецЕсли;			
					
					СтрокаТаблицыСПД = ТаблицаСПД.Добавить();
					СтрокаТаблицыСПД.НомерСтроки = НомерСтроки;
					СтрокаТаблицыСПД.ВидДокумента = ВыборкаДетальныеЗаписи.ВидДокумента;
					СтрокаТаблицыСПД.СуммаВВалютеКонтракта = ВыборкаОперации.СуммаВВалютеКонтрактаДляРаздела5;
					
					Если ВыборкаДетальныеЗаписи.Корректировка Тогда
						Если ВыборкаДетальныеЗаписи.НомерКорректировки <> 0 Тогда
							Область.Параметры.ТекстКорректировка = "*(" + ВыборкаДетальныеЗаписи.НомерКорректировки + ")";	
						Иначе
							Область.Параметры.ТекстКорректировка = "*";	
						КонецЕсли;
					КонецЕсли;
					
					ВыборкаДетальныеЗаписи.Сбросить();
					ТекстПримечания = "";
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						Если Не ПустаяСтрока(ВыборкаДетальныеЗаписи.Примечание) Тогда
							ТекстПримечания = ТекстПримечания + ?(ТекстПримечания = "", "", "; ") + СокрЛП(ВыборкаДетальныеЗаписи.Примечание);
						КонецЕсли;
					КонецЦикла;
					Область.Параметры.Примечание = ТекстПримечания;
					
					ТабДокумент2.Вывести(Область);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Раздел3_Подвал");
		Область.Параметры.ВалютаКонтрактаКод = ВалютаКонтракта.Код;
		Область.Параметры.СуммаВВалютеКонтракта  = ВыборкаИтоги.СуммаВВалютеКонтракта;
		Область.Параметры.АвансВВалютеКонтракта = ВыборкаИтоги.АвансВВалютеКонтракта;
		ТабДокумент2.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("Раздел3_Строка");
		ТабДокумент2.Вывести(Область);
	КонецЕсли;
	
	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;		
	ТабДокумент.Вывести(ТабДокумент2);
	
	//Сохраняем таблицу для раздела 5
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСПД.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСПД.ВидДокумента,
	|	ТаблицаСПД.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта
	|ПОМЕСТИТЬ ДанныеСПД_ДляРаздела5
	|ИЗ
	|	&ТаблицаСПД КАК ТаблицаСПД";
	Запрос.УстановитьПараметр("ТаблицаСПД", ТаблицаСПД);
	Запрос.Выполнить();
КонецПроцедуры

Процедура Печать2015_Раздел4(ТабДокумент, МенеджерВТ, Макет)
	ТабДокумент2 = Новый ТабличныйДокумент;	
	Область4раздел= Макет.ПолучитьОбласть("Раздел4_1");
	ТабДокумент2.Вывести(Область4раздел);
	
	//Запрос = Новый Запрос;
	//Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	//
	//Запрос4Раздела = Новый Запрос;
	//Запрос4Раздела.Текст =
	//"ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	Данные2Раздела.ВидВалютнойОперации,
	//|	Данные2Раздела.СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела
	//|ИЗ
	//|	&Данные2Раздела КАК Данные2Раздела
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	СУММА(Данные2Раздела.СуммаВВалютеЦены) КАК СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела_1
	//|ИЗ
	//|	Данные2Раздела КАК Данные2Раздела
	//|ГДЕ
	//|	Данные2Раздела.ВидВалютнойОперации В(&ВидыВалютныхОпераций)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Данные2Раздела.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) КАК ОжидаемыйСрок,
	//|	СУММА(ЕСТЬNULL(Данные2Раздела.СуммаВВалютеЦены, 0)) КАК СуммаОжидаемаяЗачислено
	//|ПОМЕСТИТЬ Данные2Раздела_2
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_1 КАК Данные2Раздела
	//|		ПО (ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) >= Данные2Раздела.ОжидаемыйСрок)
	//|ГДЕ РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок КАК ДатаРасчетногоДокумента,
	//|	СУММА(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.СуммаВВалютеКонтракта) КАК СуммаИсполненныхИнымСпособом,
	//|	СУММА(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.СуммаВВалютеКонтракта) КАК ОжидаемаяСуммаПоступлений
	//|ПОМЕСТИТЬ таблицаДанных
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1
	//|		ПО РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.ОжидаемыйСрок
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.ВидДокумента В (ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПрекращениеОбязательствНерезидентаПередачейРезидентуЦенныхБумаг), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ИныеСпособыИсполненияОбязательствНерезидентаПередРезидентом)))
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка.ПаспортСделки = &ПаспортСделки)
	//|			И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В (&ВидКонтрактаВЭД))
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2
	//|		ПО РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ОжидаемыйСрок
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ВидДокумента В (ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ВывозСТерриторииРФТоваровПоГТД), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ОтгрузкаТоваровПриВывозеСТерриторииРФБезГТД), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПередачаРезидентомНаТерриторииРФТоваровИУслугНерезидентуГСМ), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ВыполненныеРезидентомРаботыУслугиПереданныеПрава)))
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка.ПаспортСделки = &ПаспортСделки)
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ПризнакПоставки = &ПризнакПоставки)
	//|			И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В (&ВидКонтрактаВЭД))
	//|ГДЕ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) КАК ДатаРасчетногоДокумента,
	//|	СУММА(ЕСТЬNULL(таблицаДанных1.СуммаИсполненныхИнымСпособом, 0)) КАК СуммаОбязательствИИС,
	//|	СУММА(ЕСТЬNULL(таблицаДанных1.ОжидаемаяСуммаПоступлений, 0)) КАК СуммаПоступленийОжидаемая,
	//|	ЕСТЬNULL(данные2Раздела_2.СуммаОжидаемаяЗачислено, 0) КАК СуммаОжидаемаяЗачислено
	//|ИЗ
	//|	таблицаДанных КАК таблицаДанных
	//|		ЛЕВОЕ СОЕДИНЕНИЕ таблицаДанных КАК таблицаДанных1
	//|		ПО таблицаДанных.ДатаРасчетногоДокумента >= таблицаДанных1.ДатаРасчетногоДокумента
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_2 КАК данные2Раздела_2
	//|		ПО (ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) = данные2Раздела_2.ОжидаемыйСрок)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	таблицаДанных.ДатаРасчетногоДокумента,
	//|	ЕСТЬNULL(данные2Раздела_2.СуммаОжидаемаяЗачислено, 0)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ДатаРасчетногоДокумента
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ данные2Раздела
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_1
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_2
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ таблицаДанных";
	//
	//
	//
	////Запрос4раздела.УстановитьПараметр("Данные2Раздела", данные2Раздела);
	//Запрос4раздела.УстановитьПараметр("ПаспортСделки", ПаспортСделки);
	//Запрос4раздела.УстановитьПараметр("ПризнакПоставки", перечисления.РЭЙ_ПризнакиПоставки.ПредоставлениеРезидентомОтсрочкиОплатыНерезиденту);
	//
	//ВидКонтрактаВЭД = Новый Массив;
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВывозТоваровСТаможеннойТерриторииРФ);
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВыполнениеРаботРезидентом);
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.СмешаннаяСделка);
	//
	//Запрос4раздела.УстановитьПараметр("ВидКонтрактаВЭД", ВидКонтрактаВЭД);
	//	
	//ВидыВалютныхОпераций = Новый Массив;
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10200"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20200"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22200"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22210"));
	//Запрос4раздела.УстановитьПараметр("ВидыВалютныхОпераций", ВидыВалютныхОпераций);
	//Рез4Раздела = Запрос4раздела.Выполнить().Выбрать();
	//
	//
	//НомерПоПорядку = 1;
	//
	//_Фл = Ложь;
	//Пока Рез4раздела.Следующий() Цикл
	//	_Фл = Истина;
	//	Область4Строка = Макет.ПолучитьОбласть("Строка4_1");
	//	Область4строка.Параметры.Заполнить(Рез4Раздела);
	//	Область4строка.Параметры.НомерСтроки = НомерПоПорядку;
	//	Область4Строка.Параметры.СуммаНедопоступления =  Рез4раздела.СуммаПоступленийОжидаемая - 
	//	Рез4раздела.СуммаОжидаемаяЗачислено  -  Рез4раздела.СуммаОбязательствИИС;
	//	Область4Строка.Параметры.КодВалКонтракт = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
	//	ТабДокумент2.Вывести(Область4Строка);
	//	
	//	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
	//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;			
	//	
	//	НомерПоПорядку = НомерПоПорядку + 1;		
	//КонецЦикла;
	_Фл = Ложь;
	Если Не _Фл Тогда
		Область4Строка = Макет.ПолучитьОбласть("Строка4_1");
		ТабДокумент2.Вывести(Область4Строка);
	КонецЕсли;
	ТабДокумент.Вывести(ТабДокумент2);	
	
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	Область4раздел= Макет.ПолучитьОбласть("Раздел4_2");
	ТабДокумент2.Вывести(Область4раздел);
	
	//
	//Запрос4Раздела = Новый Запрос;
	//Запрос4Раздела.Текст =
	//"ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	Данные2Раздела.ВидВалютнойОперации,
	//|	Данные2Раздела.СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела
	//|ИЗ
	//|	&Данные2Раздела КАК Данные2Раздела
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	СУММА(Данные2Раздела.СуммаВВалютеЦены) КАК СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела_1
	//|ИЗ
	//|	Данные2Раздела КАК Данные2Раздела
	//|ГДЕ
	//|	Данные2Раздела.ВидВалютнойОперации В(&ВидыВалютныхОпераций)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Данные2Раздела.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) КАК ОжидаемыйСрок,
	//|	СУММА(ЕСТЬNULL(Данные2Раздела.СуммаВВалютеЦены, 0)) КАК СуммаОжидаемаяЗачислено
	//|ПОМЕСТИТЬ Данные2Раздела_2
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_1 КАК Данные2Раздела
	//|		ПО (ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) >= Данные2Раздела.ОжидаемыйСрок)
	//|ГДЕ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|СГРУППИРОВАТЬ ПО
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	СУММА(Данные2Раздела.СуммаВВалютеЦены) КАК СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела_21
	//|ИЗ
	//|	Данные2Раздела КАК Данные2Раздела
	//|ГДЕ
	//|	Данные2Раздела.ВидВалютнойОперации В(&ВидыВалютныхОпераций_2)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Данные2Раздела.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) КАК ОжидаемыйСрок,
	//|	СУММА(ЕСТЬNULL(Данные2Раздела.СуммаВВалютеЦены, 0)) КАК ВозвратИзлишнихСумм
	//|ПОМЕСТИТЬ Данные2Раздела_22
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_21 КАК Данные2Раздела
	//|		ПО (ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) >= Данные2Раздела.ОжидаемыйСрок)
	//|ГДЕ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|   И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|СГРУППИРОВАТЬ ПО
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок КАК ДатаРасчетногоДокумента,
	//|	СУММА(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.СуммаВВалютеКонтракта) КАК СуммаИсполненныхИнымСпособом,
	//|	СУММА(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.СуммаВВалютеКонтракта) КАК ПолученоВСчетАванса
	//|ПОМЕСТИТЬ таблицаДанных
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1
	//|		ПО РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.ОжидаемыйСрок
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.ВидДокумента В (ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПрекращениеОбязательствРезидентаПередачейНерезидентуЦенныхБумаг), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ИныеСпособыИсполненияОбязательствРезидентаПередНерезидентом)))
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка.ПаспортСделки = &ПаспортСделки)
	//|			И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В (&ВидКонтрактаВЭД))
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2
	//|		ПО РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ОжидаемыйСрок
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ВидДокумента В (ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ВвозНаТерриториюРФТоваровПоГТД), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПолучениеТоваровПриВвозеНаТерриториюРФБезГТД), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПолучениеРезидентомЗаПределамиТерриторииРФТоваровИУслугОтНерезидентаГСМ), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ВыполненныеНерезидентомРаботыУслугиПереданныеПрава)))
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка.ПаспортСделки = &ПаспортСделки)
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ПризнакПоставки = &ПризнакПоставки)
	//|			И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В (&ВидКонтрактаВЭД))
	//|ГДЕ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|СГРУППИРОВАТЬ ПО
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) КАК ДатаРасчетногоДокумента,
	//|	СУММА(ЕСТЬNULL(таблицаДанных1.СуммаИсполненныхИнымСпособом, 0)) КАК СуммаОбязательствИИС,
	//|	СУММА(ЕСТЬNULL(таблицаДанных1.ПолученоВСчетАванса, 0)) КАК ПолученоВСчетАванса,
	//|	ЕСТЬNULL(данные2Раздела_2.СуммаОжидаемаяЗачислено, 0) КАК СуммаПогашенияАвансаОжидаемая,
	//|	ЕСТЬNULL(данные2Раздела_22.ВозвратИзлишнихСумм, 0) КАК ВозвратИзлишнихСумм
	//|ИЗ
	//|	таблицаДанных КАК таблицаДанных
	//|		ЛЕВОЕ СОЕДИНЕНИЕ таблицаДанных КАК таблицаДанных1
	//|		ПО таблицаДанных.ДатаРасчетногоДокумента >= таблицаДанных1.ДатаРасчетногоДокумента
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_2 КАК данные2Раздела_2
	//|		ПО (ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) = данные2Раздела_2.ОжидаемыйСрок)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_22 КАК данные2Раздела_22
	//|		ПО (ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) = данные2Раздела_22.ОжидаемыйСрок)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	таблицаДанных.ДатаРасчетногоДокумента,
	//|	ЕСТЬNULL(данные2Раздела_2.СуммаОжидаемаяЗачислено, 0),
	//|	ЕСТЬNULL(данные2Раздела_22.ВозвратИзлишнихСумм, 0)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ДатаРасчетногоДокумента
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ данные2Раздела
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_21
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_2
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_22
	//|;
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ таблицаДанных";
	//
	//Запрос4раздела.УстановитьПараметр("Данные2Раздела", "Данные2Раздела");
	//Запрос4раздела.УстановитьПараметр("ПризнакПоставки", Перечисления.РЭЙ_ПризнакиПоставки.ИсполнениеНерезидентомОбязательствВСчетАвансаОтРезидента);
	//Запрос4раздела.УстановитьПараметр("ПаспортСделки", ПаспортСделки);	
	//
	//ВидКонтрактаВЭД = Новый Массив;
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВвозТоваровНаТаможеннуюТерриториюРФ);
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВыполнениеРаботНерезидентом);
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.СмешаннаяСделка);
	//
	//Запрос4раздела.УстановитьПараметр("ВидКонтрактаВЭД", ВидКонтрактаВЭД);	
	
	//СписокВидовДокументовПолученоВСчетАванса= Новый Массив;
	//СписокВидовДокументовПолученоВСчетАванса.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ВвозНаТерриториюРФТоваровПоГТД);
	//СписокВидовДокументовПолученоВСчетАванса.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ПолучениеТоваровПриВвозеНаТерриториюРФБезГТД);
	//СписокВидовДокументовПолученоВСчетАванса.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ПолучениеРезидентомЗаПределамиТерриторииРФТоваровИУслугОтНерезидентаГСМ);
	//СписокВидовДокументовПолученоВСчетАванса.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ВыполненныеНерезидентомРаботыУслугиПереданныеПрава);
	//Запрос4раздела.УстановитьПараметр("СписокВидовДокументовПолученоВСчетАванса", СписокВидовДокументовПолученоВСчетАванса);
	//
	//СписокВидовДокументовИсполненныхИнымСпособом = Новый Массив;
	// СписокВидовДокументовИсполненныхИнымСпособом.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ПрекращениеОбязательствРезидентаПередачейНерезидентуЦенныхБумаг);
	// СписокВидовДокументовИсполненныхИнымСпособом.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ИныеСпособыИсполненияОбязательствРезидентаПередНерезидентом);
	//Запрос4раздела.УстановитьПараметр("СписокВидовДокументовИсполненныхИнымСпособом", СписокВидовДокументовИсполненныхИнымСпособом);
	//
	//ВидыВалютныхОпераций = Новый Массив;
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11100"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21100"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23100"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23110"));
	//Запрос4раздела.УстановитьПараметр("ВидыВалютныхОпераций", ВидыВалютныхОпераций);
	//
	//ВидыВалютныхОпераций_2 = Новый Массив;
	//ВидыВалютныхОпераций_2.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11900"));
	//ВидыВалютныхОпераций_2.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21900"));
	//ВидыВалютныхОпераций_2.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23900"));
	//ВидыВалютныхОпераций_2.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("99010"));
	//Запрос4раздела.УстановитьПараметр("ВидыВалютныхОпераций_2", ВидыВалютныхОпераций_2);
	//
	//Рез4Раздела = Запрос4раздела.Выполнить().Выбрать();
	//
	//НомерПоПорядку = 1;	
	//
	//_Фл = Ложь;
	//Пока Рез4раздела.Следующий() Цикл
	//	_Фл = Истина;
	//	Область4Строка = Макет.ПолучитьОбласть("Строка4_2");
	//	Область4строка.Параметры.Заполнить(Рез4Раздела);
	//	Область4строка.Параметры.НомерСтроки = НомерПоПорядку;	
	//	Область4Строка.Параметры.КодВалКонтракт = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;	
	//	Область4Строка.Параметры.СуммаНедопоступления = Рез4раздела.СуммаПогашенияАвансаОжидаемая - Рез4раздела.ПолученоВСчетАванса - Рез4раздела.ВозвратИзлишнихСумм - Рез4раздела.СуммаОбязательствИИС;
	//	ТабДокумент2.Вывести(Область4Строка);
	//	
	//	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
	//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;			
	//	
	//	НомерПоПорядку = НомерПоПорядку + 1;				
	//КонецЦикла;	
	_Фл = Ложь;
	Если Не _Фл Тогда
		Область4Строка = Макет.ПолучитьОбласть("Строка4_2");
		ТабДокумент2.Вывести(Область4Строка);
	КонецЕсли;
	
	ТабДокумент.Вывести(ТабДокумент2);

КонецПроцедуры

Процедура Печать2015_Раздел5(табДокумент, МенеджерВТ, Макет)
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	Область5раздел= Макет.ПолучитьОбласть("Раздел5");
	ТабДокумент2.Вывести(Область5раздел);
		
	СписокВидовОперацийДляКолонки3 = Новый Массив;
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10100"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10200"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11900"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20100"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20200"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21500"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21900"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22100"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22110"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22200"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22210"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22300"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23900"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("99010"));
	
	СписокВидовОперацийДляКолонки4 = Новый Массив;
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10800"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11100"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11200"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20500"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20800"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21100"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21200"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22800"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23100"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23110"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23200"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23210"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23300"));
	
	СписокВидовПодтверждающихДокументовДляКолонки5 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("01_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("02_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("03_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("04_3"));
	
	СписокВидовПодтверждающихДокументовДляКолонки6 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("01_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("02_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("03_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("04_4"));
	
	СписокВидовПодтверждающихДокументовДляКолонки7 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки7.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("10_3"));
	СписокВидовПодтверждающихДокументовДляКолонки7.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("13_3"));
	
	СписокВидовПодтверждающихДокументовДляКолонки8 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки8.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("10_4"));
	СписокВидовПодтверждающихДокументовДляКолонки8.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("13_4"));
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеСВО.ВидВалютнойОперации,
	|	ДанныеСВО.СуммаВВалютеКонтракта,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки3)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма3,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки4)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма4,
	|	0 КАК Сумма5,
	|	0 КАК Сумма6,
	|	0 КАК Сумма7,
	|	0 КАК Сумма8,
	|	ДанныеСВО.СуммаВВалютеКонтракта КАК СуммаСВО,
	|	0 КАК СуммаСПД,
	|	NULL КАК ВидДокумента,
	|	ДанныеСВО.НомерСтроки,
	|	1 КАК НомерТЧ
	|ПОМЕСТИТЬ ДанныеДляРаздела5
	|ИЗ
	|	ДанныеСВО_ДляРаздела5 КАК ДанныеСВО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ДанныеСПД.СуммаВВалютеКонтракта,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки5)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки6)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки7)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки8)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	ДанныеСПД.СуммаВВалютеКонтракта,
	|	ДанныеСПД.ВидДокумента,
	|	ДанныеСПД.НомерСтроки,
	|	2
	|ИЗ
	|	ДанныеСПД_ДляРаздела5 КАК ДанныеСПД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляРаздела5.ВидВалютнойОперации,
	|	ДанныеДляРаздела5.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ДанныеДляРаздела5.Сумма3 КАК Сумма3,
	|	ДанныеДляРаздела5.Сумма4 КАК Сумма4,
	|	ДанныеДляРаздела5.Сумма5 КАК Сумма5,
	|	ДанныеДляРаздела5.Сумма6 КАК Сумма6,
	|	ДанныеДляРаздела5.Сумма7 КАК Сумма7,
	|	ДанныеДляРаздела5.Сумма8 КАК Сумма8,
	|	ДанныеДляРаздела5.СуммаСВО КАК СуммаСВО,
	|	ДанныеДляРаздела5.СуммаСПД КАК СуммаСПД,
	|	ДанныеДляРаздела5.ВидДокумента,
	|	ДанныеДляРаздела5.НомерСтроки КАК НомерСтроки,
	|	ДанныеДляРаздела5.НомерТЧ КАК НомерТЧ
	|ИЗ
	|	ДанныеДляРаздела5 КАК ДанныеДляРаздела5
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТЧ,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма3),
	|	СУММА(Сумма4),
	|	СУММА(Сумма5),
	|	СУММА(Сумма6),
	|	СУММА(Сумма7),
	|	СУММА(Сумма8)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки3", СписокВидовОперацийДляКолонки3);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки4", СписокВидовОперацийДляКолонки4);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки5", СписокВидовПодтверждающихДокументовДляКолонки5);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки6", СписокВидовПодтверждающихДокументовДляКолонки6);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки7", СписокВидовПодтверждающихДокументовДляКолонки7);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки8", СписокВидовПодтверждающихДокументовДляКолонки8);
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Строка5Раздел = Макет.ПолучитьОбласть("Строка5");
	Строка5Раздел.Параметры.ДатаФормирования= ДатаОтчета;
	Строка5Раздел.Параметры.КодВалКонтракт = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
	
	Если ВыборкаИтоги.Следующий() Тогда	
		Строка5раздел.Параметры.Заполнить(ВыборкаИтоги);
		Строка5раздел.Параметры.СальдоРасчетов = (ВыборкаИтоги.Сумма5 - ВыборкаИтоги.Сумма3 - ВыборкаИтоги.Сумма7) - (ВыборкаИтоги.Сумма4 - ВыборкаИтоги.Сумма6 - ВыборкаИтоги.Сумма8);
		
		Выборка = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Если Выборка.СуммаСВО <> 0 Тогда
				Если Выборка.СуммаСВО <> Выборка.Сумма3 + Выборка.Сумма4 Тогда
					Сообщить("Возможно, ошибочный код валютной операции """ + СокрЛП(Выборка.ВидВалютнойОперации) + """ в строке " + Выборка.НомерСтроки + " раздела II, сумма " + Формат(Выборка.СуммаСВО, "ЧДЦ=2") + " не учитывается в Разделе V.");
				КонецЕсли;
			КонецЕсли;
			Если Выборка.СуммаСПД <> 0 Тогда
				Если Выборка.СуммаСПД <> Выборка.Сумма5 + Выборка.Сумма6 + Выборка.Сумма7 + Выборка.Сумма8 Тогда
					Сообщить("Возможно, ошибочный код подтверждающего документа """ + СокрЛП(Выборка.ВидДокумента) + """ в строке " + Выборка.НомерСтроки + " раздела III, сумма " + Формат(Выборка.СуммаСПД, "ЧДЦ=2") + " не учитывается в Разделе V.");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
	ТабДокумент2.Вывести(Строка5Раздел);
	
	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	
	ТабДокумент.Вывести(ТабДокумент2);
КонецПроцедуры

Функция СформироватьВБК_2012() Экспорт
	СсылкиНаСправкиСПД  = РЭЙ_СлужебныйСервер.ПолучитьСсылкиНаАктуальныеСПД(КонтрактВЭД, ДатаОтчета);
	СсылкиНаСправкиСВО  = РЭЙ_СлужебныйСервер.ПолучитьСсылкиНаАктуальныеСВО(КонтрактВЭД, ДатаОтчета);
	ВалютаКонтракта = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ВедомостьБанковскогоКонтроля_2012");	
	ДанныеДляПечати = ПолучитьДанныеДляПечатиПС_2012("ПС2012");
	ТабДокумент = ПечатьПаспортаСделки2012(ТабДокумент, ДанныеДляПечати, Макет);
	
	Печать2012_Раздел2(ТабДокумент, МенеджерВТ, Макет);
	Печать2012_Раздел3(ТабДокумент, МенеджерВТ, Макет);
	Печать2012_Раздел4(ТабДокумент, МенеджерВТ, Макет);
	Печать2012_Раздел5(ТабДокумент, МенеджерВТ, Макет);

	Возврат ТабДокумент;
КонецФункции

Функция ПолучитьЮрАдрес(ЮрФизЛицо) Экспорт
	Если НЕ ЗначениеЗаполнено(ЮрФизЛицо) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Объект", ЮрФизЛицо);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОрганизацииКонтактнаяИнформация.ЗначенияПолей
	               |ИЗ
	               |	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	               |ГДЕ
	               |	ОрганизацииКонтактнаяИнформация.Ссылка = &Объект
	               |	И ОрганизацииКонтактнаяИнформация.Тип = &Тип
	               |	И ОрганизацииКонтактнаяИнформация.Вид = &Вид";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Количество()>0 Тогда 
		Выборка.Следующий()
	КонецЕсли;
	
	Возврат Выборка;

КонецФункции

Функция СформироватьВБК() Экспорт
	СсылкиНаСправкиСВО  = РЭЙ_СлужебныйСервер.ПолучитьСсылкиНаАктуальныеСВО(КонтрактВЭД.ПаспортСделки, ДатаОтчета);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", КонтрактВЭД.ПаспортСделки);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПаспортСделки.Номер,
	|	ПаспортСделки.Дата,
	|	ПаспортСделки.Организация,
	|	ПаспортСделки.Контрагент,
	|	ПаспортСделки.КонтрактВЭД,
	|	ПаспортСделки.ДатаПаспортаСделки,
	|	ПаспортСделки.НомерПаспортаСделки,
	|	ПаспортСделки.БанковскийСчет.Банк КАК Банк,
	|	ПаспортСделки.ДатаОформленияЛиста2,
	|	ПаспортСделки.Руководитель,
	|	ПаспортСделки.ГлавныйБухгалтер,
	|	ПаспортСделки.КонтрактУсловия,
	|	ПаспортСделки.КонтрактВЭД.ВидКонтрактаВЭД КАК ВидКонтрактаВЭД,
	|	ПаспортСделки.КонтрактВЭД.ВалютнаяОговорка КАК ВалютнаяОговорка,
	|	ПаспортСделки.КонтрактВЭД.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте КАК СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте,
	|	ПаспортСделки.КонтрактВЭД.ОтсрочкаПлатежаПредоплаты КАК ОтсрочкаПлатежаПредоплаты,
	|	ПаспортСделки.КонтрактВЭД.КредитныйДоговор КАК КредитныйДоговор,
	|	ПаспортСделки.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ПаспортСделки.КонтрактВЭД.КонтрактНомер КАК КонтрактНомер,
	|	ПаспортСделки.КонтрактВЭД.КонтрактДатаПодписания КАК КонтрактДатаПодписания,
	|	ПаспортСделки.КонтрактВЭД.КонтрактДатаОкончания КАК КонтрактДатаОкончания,
	|	ПаспортСделки.КонтрактВЭД.КонтрактСумма КАК КонтрактСумма,
	|	ПаспортСделки.КонтрактВЭД.КонтрактБезСуммы КАК КонтрактБезСуммы,
	|	ПаспортСделки.БанковскийСчет,
	|	ПаспортСделки.НомерПСДо18062004,
	|	ПаспортСделки.НомерПСДругойБанк,
	|	ПаспортСделки.КонтрактВЭД.КоличествоДней КАК КоличествоДней,
	|	ПаспортСделки.КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД КАК ПроцентныеПлатежиПоКредитамВЭД,
	|	ПаспортСделки.КонтрактВЭД.ДругиеМетодыОпределенияПроцентнойСтавки КАК ДругиеМетодыОпределенияПроцентнойСтавки,
	|	ПаспортСделки.КонтрактВЭД.ФиксированнаяСтавкаГодовыхПроцентов КАК ФиксированнаяСтавкаГодовыхПроцентов,
	|	ПаспортСделки.КонтрактВЭД.СтавкаЛИБОР КАК СтавкаЛИБОР,
	|	ПаспортСделки.КонтрактВЭД.РазмерПроцентнойНадбавки КАК РазмерПроцентнойНадбавки,
	|	ПаспортСделки.СуммаОсновногоДолга,
	|	ПаспортСделки.КонтрактВЭД.МеждународныеФинОрганизации КАК МеждународныеФинОрганизации,
	|	ПаспортСделки.КонтрактВЭД.СуммаОбеспечения КАК СуммаОбеспечения,
	|	ПаспортСделки.КонтрактВЭД.ПрямоеИнвестирование КАК ПрямоеИнвестирование,
	|	ПаспортСделки.НеПечататьДатуПереоформленияПС,
	|	ПаспортСделки.ПечататьОрганизациюПрописными,
	|	ПаспортСделки.НеПечататьНомерИДатуПС,
	|	ПаспортСделки.ДокументЗакрытияПС,
	|	ПаспортСделки.ОснованиеЗакрытияПС
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки КАК ПаспортСделки
	|ГДЕ
	|	ПаспортСделки.Ссылка = &ТекущийДокумент";
				  
	ТЗДанныеДляПечати = Запрос.Выполнить().Выгрузить();
	
	ДанныеДляПечати = Новый Структура;
	
	Для Каждого ТекКолонка Из ТЗДанныеДляПечати.Колонки Цикл
		ДанныеДляПечати.Вставить(ТекКолонка.Имя, ТЗДанныеДляПечати[0][ТекКолонка.Имя]);	
	КонецЦикла;

	Организация = ДанныеДляПечати.Организация;
	КонтрактВЭД = ДанныеДляПечати.КонтрактВЭД;	
	БанковскийСчет = ДанныеДляПечати.БанковскийСчет;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.НомерСтроки КАК НомерСтроки,
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.Дата
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки.ПереоформлениеПС КАК РЭЙ_ПаспортСделкиПереоформлениеПС
	|ГДЕ
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки УБЫВ";
	
	Запрос.УстановитьПараметр("ТекущийДокумент", КонтрактВЭД.ПаспортСделки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ДанныеДляПечати.Вставить("ПереоформлениеНомер", Формат(Выборка.НомерСтроки, "ЧЦ=2; ЧВН="));
	Если НЕ ДанныеДляПечати.НеПечататьДатуПереоформленияПС Тогда
		ДанныеДляПечати.Вставить("ПереоформлениеДата", Выборка.Дата);
	Иначе
		ДанныеДляПечати.Вставить("ПереоформлениеДата", "");
	КонецЕсли;
	
	
	Если ДанныеДляПечати.КредитныйДоговор Тогда
		
		ДанныеДляПечати.Вставить("СтавкаЛИБОР", ДанныеДляПечати.СтавкаЛИБОР.Метаданные().ЗначенияПеречисления.Получить(Перечисления.РЭЙ_СтавкаЛИБОР.Индекс(ДанныеДляПечати.СтавкаЛИБОР)).Имя +ДанныеДляПечати.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код);

		Если ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ФиксированнаяСтавка Тогда
			//ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("СтавкаЛИБОР");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		ИначеЕсли ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ЛИБОР Тогда
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			//ДанныеДляПечати.Удалить("СтавкаЛИБОР");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			//ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		ИначеЕсли ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ДругиеСтавки Тогда
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("СтавкаЛИБОР");
			//ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			//ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		Иначе
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("СтавкаЛИБОР");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		КонецЕсли;
		
	КонецЕсли;
	
	
	//********************************************************************
	
	Если ЗначениеЗаполнено(ДанныеДляПечати.Банк) Тогда
		ДанныеДляПечати.Вставить("ПечБанк", ?(ПустаяСтрока(ДанныеДляПечати.Банк.Наименование), ДанныеДляПечати.Банк.РЭЙ_НаименованиеПолное, ДанныеДляПечати.Банк.Наименование));
	Иначе
		ДанныеДляПечати.Вставить("ПечБанк", "");
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ДатаЧисло", "");
	ДанныеДляПечати.Вставить("МесяцСтрока", "");
	ДанныеДляПечати.Вставить("Год2ПослЦифры", "");
	//Если Не ДанныеДляПечати.НеПечататьНомерИДатуПС Тогда
		Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаПаспортаСделки) Тогда 
			ДанныеДляПечати.Вставить("ДатаЧисло", Формат(ДанныеДляПечати.ДатаПаспортаСделки, "ДФ=dd"));
					стрДата = Формат(ДанныеДляПечати.ДатаПаспортаСделки,"ДЛФ=DD") ;          // Получим - "5 Августа 2005 г."  
					чПервыйПробел=Найти(стрДата," ");                       // Получим - 2  
					стрДатаБезЧисла=Сред(стрДата,чПервыйПробел+1);       // Получим - "Августа 2005 г."  
					чВторойПробел=Найти(стрДатаБезЧисла," ");              // Получим - 8  
					стрМесяц=НРег(СокрЛП(Лев(стрДатаБезЧисла,чВторойПробел))); // Получим - "Августа"
			ДанныеДляПечати.Вставить("МесяцСтрока", стрМесяц);
			ДанныеДляПечати.Вставить("Год2ПослЦифры", Формат(ДанныеДляПечати.ДатаПаспортаСделки, "ДФ=yy"));
		КонецЕсли;	
	//КонецЕсли;	
	
	//вывод номера паспорта сделки
	Для счетчик = 1 По 22 Цикл
		Если (счетчик = 9) или (счетчик = 14) или (счетчик = 19) или (счетчик = 21) Тогда
			ДанныеДляПечати.Вставить("НПС_"+счетчик, "/");
		Иначе
			//Если Не ДанныеДляПечати.НеПечататьНомерИДатуПС Тогда
				ДанныеДляПечати.Вставить("НПС_"+счетчик, Сред(ДанныеДляПечати.НомерПаспортаСделки, счетчик ,1));
			//Иначе
			//	ДанныеДляПечати.Вставить("НПС_"+счетчик, "");
			//КонецЕсли;
		КонецЕсли; 
	КонецЦикла; 
	
	//вывод данных об организации
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДанныеДляПечати.Организация, ДанныеДляПечати.Дата);
	ДанныеДляПечати.Вставить("ОрганизацияНаименование", ?(ПустаяСтрока(ДанныеДляПечати.Организация.НаименованиеПолное),?(ПустаяСтрока(ДанныеДляПечати.Организация.НаименованиеПолное),ДанныеДляПечати.Организация.Наименование,ДанныеДляПечати.Организация.НаименованиеПолное),ДанныеДляПечати.Организация.НаименованиеПолное));

	//вывод ИНН
	ПечИНН = Лев(СокрЛП(СведенияОбОрганизации.ИНН)+"            ",12);
	Для счетчик = 1 По 12 Цикл
		ДанныеДляПечати.Вставить("ИНН_"+счетчик, Сред(ПечИНН, счетчик ,1));
	КонецЦикла;
	
	//вывод КПП
	ПечКПП = Лев(СокрЛП(СведенияОбОрганизации.КПП)+"            ",9);
	Для счетчик = 1 По 9 Цикл
		ДанныеДляПечати.Вставить("КПП_"+счетчик, Сред(ПечКПП, счетчик ,1));
	КонецЦикла;
	
	//вывод ОГРН
	ПечОГРН = ДанныеДляПечати.Организация.ОГРН;
	Для счетчик = 1 По 15 Цикл
		ДанныеДляПечати.Вставить("ОГРН_"+счетчик, Сред(ПечОГРН, счетчик ,1));
	КонецЦикла;
	
//	ПечДатаРегистрации = Формат(ДанныеДляПечати.Организация.ДатаРегистрации, "ДФ=dd.MM.yyyy");
	ПечДатаРегистрации = Формат(ДанныеДляПечати.Организация.РЭЙ_ДатаВнесенияВГосРеестр, "ДФ=dd.MM.yyyy");
	Если ПустаяСтрока(ПечДатаРегистрации) Тогда
		ПечДатаРегистрации = "  .  .    ";
	КонецЕсли;
	Для счетчик = 1 По 10 Цикл
		ДанныеДляПечати.Вставить("ДатаРегистрации_"+счетчик, Сред(ПечДатаРегистрации, счетчик ,1));
	КонецЦикла;
	
	Выборка		= ПолучитьЮрАдрес(ДанныеДляПечати.Организация);
	ЮрАдресОрг	= УправлениеКонтактнойИнформациейКлиентСервер.СтруктураЗначенийПолей(Выборка.ЗначенияПолей);
	
	ДанныеДляПечати.Вставить("Регион", Организация.РЭЙ_Регион);
	ДанныеДляПечати.Вставить("Район", Организация.РЭЙ_Район);
	ДанныеДляПечати.Вставить("Город", Организация.РЭЙ_Город);
	ДанныеДляПечати.Вставить("НаселенныйПункт", Организация.РЭЙ_НаселенныйПункт);
	ДанныеДляПечати.Вставить("Улица", Организация.РЭЙ_Улица);
	ДанныеДляПечати.Вставить("Дом", ЮрАдресОрг.Свойство("Дом"));
	ДанныеДляПечати.Вставить("Корпус", ЮрАдресОрг.Свойство("Корпус"));
	ДанныеДляПечати.Вставить("Квартира", ЮрАдресОрг.Свойство("Квартира"));
	
	//2. Реквизиты иностранного контрагента
	//*************************************************************************
	
	//КонтрагентНаименование //Наименование контрагента на иностранном языке, при отсутствии - на русском
	//КонтрагентСтранаНаименование //Наименование страны регистрации контрагента согласно ОКСМ - справочнику "Классификатор стран мира"
	//КонтрагентСтранаКод //Код страны регистрации контрагента согласно ОКСМ - справочнику "Классификатор стран мира"
	
	Если (ДанныеДляПечати.Контрагент.Метаданные().Реквизиты.Найти("РЭЙ_НаименованиеАнгл")<>Неопределено) и (НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.РЭЙ_НаименованиеАнгл)) Тогда
		ДанныеДляПечати.Вставить("КонтрагентНаименование", ДанныеДляПечати.Контрагент.РЭЙ_НаименованиеАнгл);
	ИначеЕсли НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.НаименованиеПолное) Тогда 
		ДанныеДляПечати.Вставить("КонтрагентНаименование", ДанныеДляПечати.Контрагент.НаименованиеПолное);
	Иначе
		ДанныеДляПечати.Вставить("КонтрагентНаименование", ДанныеДляПечати.Контрагент.Наименование);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДляПечати.Контрагент) Тогда
		Если  ДанныеДляПечати.Контрагент.РЭЙ_НеЯвляетсяРезидентом Тогда	
			//не россия
			ДанныеДляПечати.Вставить("КонтрагентСтранаНаименование", ДанныеДляПечати.Контрагент.РЭЙ_Страна.Наименование);
			ДанныеДляПечати.Вставить("КонтрагентСтранаКод", ДанныеДляПечати.Контрагент.РЭЙ_Страна.Код);
		Иначе
			//Россия
			ДанныеДляПечати.Вставить("КонтрагентСтранаНаименование", Справочники.СтраныМира.Россия.Наименование);
			ДанныеДляПечати.Вставить("КонтрагентСтранаКод", Справочники.СтраныМира.Россия.Код);
		КонецЕсли;
	КонецЕсли; 
	
	Если ПустаяСтрока(ДанныеДляПечати.КонтрактНомер) Тогда 
		ДанныеДляПечати.Вставить("КонтрактНомер", "б/н");
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("КонтрактДатаПодписания", Формат(ДанныеДляПечати.КонтрактДатаПодписания, "ДФ=dd.MM.yyyy"));

	ВалютаДоговора = ДанныеДляПечати.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	ДанныеДляПечати.Вставить("КонтрактВалютаНаименование", ?(ПустаяСтрока(ВалютаДоговора.НаименованиеПолное), ВалютаДоговора.Наименование, ВалютаДоговора.НаименованиеПолное));
	//рк+ 27.01.2011
	ДанныеДляПечати.Вставить("КонтрактВалютаНаименованиеСокр", ВалютаДоговора.Наименование);
	//рк-
	ДанныеДляПечати.Вставить("КонтрактВалютаКод", ВалютаДоговора.Код);
	ДанныеДляПечати.Вставить("КонтрактДатаОкончания", Формат(ДанныеДляПечати.КонтрактДатаОкончания, "ДФ=dd.MM.yyyy"));
	ДанныеДляПечати.Вставить("ВалютнаяОговорка", ?(ДанныеДляПечати.ВалютнаяОговорка, "Х",""));
	//ДанныеДляПечати.Вставить("ТоварыИзРазделовXVI_XVII_XIX_ТН_ВЭД", ?(ДанныеДляПечати.ТоварыИзРазделовXVI_XVII_XIX_ТН_ВЭД, "Х",""));
	//ДанныеДляПечати.Вставить("СтроительныеРаботыЗаПределамиРФ", ?(ДанныеДляПечати.СтроительныеРаботыЗаПределамиРФ, "Х",""));

	Если ДанныеДляПечати.КонтрактБезСуммы Тогда
		ДанныеДляПечати.Вставить("КонтрактСумма", "б/с");
	Иначе
		ДанныеДляПечати.Вставить("КонтрактСумма", Формат(ДанныеДляПечати.КонтрактСумма, "ЧДЦ=2; ЧРД=.; ЧН=")); //+ ГО 25.12.2010 был формат "ЧДЦ=2; ЧН="
	КонецЕсли;
	ДанныеДляПечати.Вставить("СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте", Формат(ДанныеДляПечати.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте, "ЧДЦ=2; ЧН=' '"));
	
	
	Если ПустаяСтрока(СтрЗаменить(СтрЗаменить(ДанныеДляПечати.НомерПСДо18062004, " ",""), "/", "")) Тогда
		ДанныеДляПечати.Вставить("НомерПСДо18062004", "");
	КонецЕсли;
	
	Для счетчик = 1 По 22 Цикл
		Если (счетчик = 9) или (счетчик = 14) или (счетчик = 19) или (счетчик = 21) Тогда
		Иначе
			ДанныеДляПечати.Вставить("НПСДБ_"+счетчик, Сред(ДанныеДляПечати.НомерПСДругойБанк, счетчик ,1));
		КонецЕсли; 
	КонецЦикла;
	
	Для счетчик = 1 По 2 Цикл
		ДанныеДляПечати.Вставить("ПереоформлениеНомер_"+счетчик, Сред(ДанныеДляПечати.ПереоформлениеНомер, счетчик ,1));
	КонецЦикла;
		
	ПечПереоформлениеДата = Формат(ДанныеДляПечати.ПереоформлениеДата, "ДФ=dd.MM.yyyy; ДП='  .  .    '");
	Для счетчик = 1 По 10 Цикл
		Если Найти(".3.6.", "."+счетчик+".")>0 Тогда 
			Продолжить;
		КонецЕсли;
		ДанныеДляПечати.Вставить("ПереоформлениеДата_"+счетчик, Сред(ПечПереоформлениеДата, счетчик ,1)); 
	КонецЦикла;
		
		
	Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаЗакрытияПС) Тогда
		ДанныеДляПечати.Вставить("ДатаЗакрытияПС", Формат(ДанныеДляПечати.ДатаЗакрытияПС, "ДФ=dd.MM.yyyy"));	
		ДанныеДляПечати.Вставить("ОснованиеЗакрытияПС", ДанныеДляПечати.ОснованиеЗакрытияПС);	
	Иначе
		ДанныеДляПечати.Вставить("ДатаЗакрытияПС", "");
		ДанныеДляПечати.Вставить("ОснованиеЗакрытияПС", "");
	КонецЕсли;

	ДанныеДляПечати.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ДанныеДляПечати.Руководитель, ДанныеДляПечати.Дата));
	ДанныеДляПечати.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ДанныеДляПечати.ГлавныйБухгалтер, ДанныеДляПечати.Дата));
	
	//Лист 2
		
		Если ЗначениеЗаполнено(ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты) Тогда
			
			Если ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.nnnn Тогда       
				КодОтсрочки = "0000"+ДанныеДляПечати.КоличествоДней;
			Иначе
				КодОтсрочки = ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты.Метаданные().ЗначенияПеречисления.Получить(Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.Индекс(ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты)).Имя;
			КонецЕсли;
			
			КодОтсрочки = Прав(КодОтсрочки, 4);
		
		Иначе
			КодОтсрочки = "    ";
		КонецЕсли;
		
		Для счетчик = 1 По 4 Цикл
			ДанныеДляПечати.Вставить("Отсрочка_"+счетчик, Сред(КодОтсрочки, счетчик ,1));
		КонецЦикла; 
		
		
		//Если Не НеПечататьДатуОформленияЛиста2 Тогда
		//	ПечДатаОформленияЛиста2 = Формат(ДанныеДляПечати.ДатаОформленияЛиста2, "ДФ=dd.MM.yyyy");
		//	Если ПустаяСтрока(ПечДатаОформленияЛиста2) Тогда
		//		ПечДатаОформленияЛиста2 = "  .  .    ";
		//	КонецЕсли;
		//	Для счетчик = 1 По 10 Цикл
		//		Если Найти(".3.6.", "."+счетчик+".")>0 Тогда 
		//			Продолжить;
		//		КонецЕсли;
		//		ДанныеДляПечати.Вставить("ДатаОформленияЛиста2_"+счетчик, Сред(ПечДатаОформленияЛиста2, счетчик ,1));
		//	КонецЦикла;
		//КонецЕсли;
		
		Если ДанныеДляПечати.СуммаОсновногоДолга <> 0 Тогда
			ДанныеДляПечати.Вставить("СуммаОсновногоДолгаВалютаКод", ДанныеДляПечати.КонтрактВалютаКод);
		КонецЕсли;
	
		
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПаспортСделкиФорма1";
	Макет = ЭтотОбъект.ПолучитьМакет("ВедомостьБанковскогоКонтроля");
	
	
	Если НЕ ДанныеДляПечати.КредитныйДоговор Тогда
		
		ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка");
		ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
		//ОбластьЛист1_Шапка.Параметры.ДатаФормирования = Формат(ДатаФормирования, "ДФ='dd MMM yyyy'");
		ОбластьЛист1_Шапка.Параметры.ДатаФормирования = ДатаОтчета;
		Если ДанныеДляПечати.ПечататьОрганизациюПрописными Тогда
			ОбластьЛист1_Шапка.Параметры.Дом = ВРег(ОбластьЛист1_Шапка.Параметры.Дом);
			ОбластьЛист1_Шапка.Параметры.Корпус = ВРег(ОбластьЛист1_Шапка.Параметры.Корпус);
			ОбластьЛист1_Шапка.Параметры.Квартира = ВРег(ОбластьЛист1_Шапка.Параметры.Квартира);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьЛист1_Шапка);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект,
		               |	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Номер КАК РазрешениеНомер,
		               |	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Дата КАК РазрешениеДата,
		               |	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Сумма КАК РазрешениеСумма,
		               |	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.СрокОкончания КАК РазрешениеСрокОкончания,
		               |	ВЫБОР
		               |		КОГДА РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект ССЫЛКА Справочник.РЭЙ_БанковскиеСчетаВалютные
		               |			ТОГДА РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект.ВалютаДенежныхСредств.Код
		               |		КОГДА РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект ССЫЛКА Справочник.РЭЙ_КонтрактыВЭД
		               |			ТОГДА РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код
		               |		ИНАЧЕ НЕОПРЕДЕЛЕНО
		               |	КОНЕЦ КАК РазрешениеКодВалюты
		               |ИЗ
		               |	РегистрСведений.РЭЙ_ИнформацияОРазрешенияхВалКонтроля КАК РЭЙ_ИнформацияОРазрешенияхВалКонтроля
		               |ГДЕ
		               |	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект В(&СписокОбъектов)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	РазрешениеДата";
		
		ОтборСписок = Новый СписокЗначений;
		Если ЗначениеЗаполнено(КонтрактВЭД) Тогда
			ОтборСписок.Добавить(КонтрактВЭД);
		//рк+ 2010.12.29
		ЗапросВалютныхСчетовКонтракта = Новый Запрос;
		ЗапросВалютныхСчетовКонтракта.Текст = "ВЫБРАТЬ
		                                      |	РЭЙ_КонтрактыВЭДБанковскиеСчета.БанковскийСчет.Ссылка КАК Ссылка
		                                      |ПОМЕСТИТЬ СчетаОбычные
		                                      |ИЗ
		                                      |	Справочник.РЭЙ_КонтрактыВЭД.БанковскиеСчета КАК РЭЙ_КонтрактыВЭДБанковскиеСчета
		                                      |ГДЕ
		                                      |	РЭЙ_КонтрактыВЭДБанковскиеСчета.БанковскийСчет.Банк.РЭЙ_НеЯвляетсяРезидентом
		                                      |	И РЭЙ_КонтрактыВЭДБанковскиеСчета.Ссылка = &СсылкаНаКонтракт
		                                      |;
		                                      |
		                                      |////////////////////////////////////////////////////////////////////////////////
		                                      |ВЫБРАТЬ
		                                      |	РЭЙ_БанковскиеСчетаВалютные.Ссылка,
		                                      |	РЭЙ_БанковскиеСчетаВалютные.БанковскийСчет
		                                      |ПОМЕСТИТЬ СчетаВалютные
		                                      |ИЗ
		                                      |	Справочник.РЭЙ_БанковскиеСчетаВалютные КАК РЭЙ_БанковскиеСчетаВалютные
		                                      |;
		                                      |
		                                      |////////////////////////////////////////////////////////////////////////////////
		                                      |ВЫБРАТЬ
		                                      |	СчетаВалютные.Ссылка
		                                      |ИЗ
		                                      |	СчетаОбычные КАК СчетаОбычные
		                                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаВалютные КАК СчетаВалютные
		                                      |		ПО СчетаОбычные.Ссылка = СчетаВалютные.БанковскийСчет";
					   
		ЗапросВалютныхСчетовКонтракта.УстановитьПараметр("СсылкаНаКонтракт",КонтрактВЭД);					  
		ВыборкаЗапросаВалютныхСчетов= ЗапросВалютныхСчетовКонтракта.Выполнить().Выбрать();
		Пока ВыборкаЗапросаВалютныхСчетов.Следующий() Цикл
		    ОтборСписок.Добавить(ВыборкаЗапросаВалютныхСчетов.Ссылка);		
		КонецЦикла;
		//рк- 2010.12.29
		
		КонецЕсли;
		Если ЗначениеЗаполнено(БанковскийСчет) Тогда
			ОтборСписок.Добавить(БанковскийСчет);
		КонецЕсли;
				
		
		Если ОтборСписок.Количество()>0 Тогда
			Запрос.УстановитьПараметр("СписокОбъектов", ОтборСписок);
		Иначе
			Запрос.УстановитьПараметр("СписокОбъектов", Неопределено);
		КонецЕсли;
	
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 0 Тогда
			ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_Строка");
			ТабДокумент.Вывести(ОбластьЛист1_Строка);
		Иначе
			Пока Выборка.Следующий() Цикл
				ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_Строка");
				ОбластьЛист1_Строка.Параметры.Заполнить(Выборка);
				ТабДокумент.Вывести(ОбластьЛист1_Строка);
			КонецЦикла; 
		КонецЕсли;
		
		ОбластьЛист1_Подвал = Макет.ПолучитьОбласть("Лист1_Подвал");
		ОбластьЛист1_Подвал.Параметры.Заполнить(ДанныеДляПечати);
		ТабДокумент.Вывести(ОбластьЛист1_Подвал);
	Иначе
		ОбластьЛист1 = Макет.ПолучитьОбласть("Лист1");
		
		ОбластьЛист1.Параметры.Заполнить(ДанныеДляПечати);
		//ОбластьЛист1.Параметры.ДатаФормирования = Формат(ДатаФормирования, "ДФ='dd MMM yyyy'");
		ОбластьЛист1.Параметры.ДатаФормирования = ДатаОтчета;
		Если ДанныеДляПечати.ПечататьОрганизациюПрописными Тогда
			ОбластьЛист1.Параметры.Дом = ВРег(ОбластьЛист1.Параметры.Дом);
			ОбластьЛист1.Параметры.Корпус = ВРег(ОбластьЛист1.Параметры.Корпус);
			ОбластьЛист1.Параметры.Квартира = ВРег(ОбластьЛист1.Параметры.Квартира);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьЛист1);
	КонецЕсли;

	ВидимостьЛиста2 = Истина;
	
	Если НЕ ДанныеДляПечати.КредитныйДоговор Тогда
		Если 	ЗначениеЗаполнено(ДанныеДляПечати.ВидКонтрактаВЭД) И 
				НЕ (ДанныеДляПечати.ВидКонтрактаВЭД = Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВвозТоваровНаТаможеннуюТерриториюРФ или 
				ДанныеДляПечати.ВидКонтрактаВЭД = Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВывозТоваровСТаможеннойТерриторииРФ или 
				ДанныеДляПечати.ВидКонтрактаВЭД = Перечисления.РЭЙ_ВидыКонтрактовВЭД.СмешаннаяСделка) Тогда
			ВидимостьЛиста2 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//Раздел II
	ОбластьРаздел2_Шапка = Макет.ПолучитьОбласть("Раздел2_Шапка");
	ТабДокумент.Вывести(ОбластьРаздел2_Шапка);
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СВО.Ссылка,
	|	СВО.РасчетныйДокумент.Дата КАК ДатаПлатежа,
	|	СВО.ВидВалютнойОперации КАК КодВидаВалютнойОперации,
	|	СВО.НаправлениеПлатежа,
	|	СВО.РасчетныйДокумент.СуммаДокумента КАК СуммаВВалютеПлатежа,
	|	СВО.РасчетныйДокумент.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	СВО.РасчетныйДокумент.БанковскийСчет.ВалютаДенежныхСредств.Код КАК КодВалютыПлатежа,
	|	СВО.РасчетныйДокумент.БанковскийСчетКонтрагента.Банк.РЭЙ_Страна.Код КАК КодСтраныБанкаПлатежа,
	|	ВЫБОР
	|		КОГДА СВО.РасчетныйДокумент.БанковскийСчет.Банк.РЭЙ_НеЯвляетсяРезидентом
	|			ТОГДА ""N""
	|		ИНАЧЕ "" ""
	|	КОНЕЦ КАК ПризнакСчетаРезидента,
	|	СВО.Примечание
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК СВО
	|ГДЕ
	|	СВО.Ссылка В(&СсылкиНаСправкиСВО)
	|	И СВО.ПаспортСделки = &ПаспортСделки
	|	И СВО.РасчетныйДокумент.Дата <= &ДатаФормирования
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа";
	
	Запрос.УстановитьПараметр("СсылкиНаСправкиСВО", СсылкиНаСправкиСВО);
	Запрос.УстановитьПараметр("ПаспортСделки", КонтрактВЭД.ПаспортСделки);
	Запрос.УстановитьПараметр("ДатаФормирования", ДатаОтчета);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ВыводитьИтогиПоКолонкам67 = Ложь;
	ВсегоПлатежей = 0;
	
	Если НЕ Результат.Пустой() Тогда
		
		ИтогоВВалютеЦены = 0;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбластьРаздел2_Строка = Макет.ПолучитьОбласть("Раздел2_Строка");
			ОбластьРаздел2_Строка.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
			ВалютаВзаиморасчетовПоДоговору = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
			
			
				
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	&ВалютаНач,
				|	&ВалютаКон,
				|	КурсыНач.Курс КАК КурсНач,
				|	КурсыНач.Кратность КАК КратностьНач,
				|	КурсыКон.Курс КАК КурсКон,
				|	КурсыКон.Кратность КАК КратностьКон
				|ИЗ
				|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаНач) КАК КурсыНач
				|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаКон) КАК КурсыКон
				|		ПО (1 = 1)";
				
				Запрос.УстановитьПараметр("Период", ВыборкаДетальныеЗаписи.Ссылка.МоментВремени());
				Запрос.УстановитьПараметр("ВалютаНач", ВыборкаДетальныеЗаписи.ВалютаДенежныхСредств);
				Запрос.УстановитьПараметр("ВалютаКон", ВалютаВзаиморасчетовПоДоговору);
				
				Результат = Запрос.Выполнить();
				ДанныеПоВалютам = Результат.Выбрать();
				ДанныеПоВалютам.Следующий();
				
				СуммаВВалютеЦены = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(ВыборкаДетальныеЗаписи.СуммаВВалютеПлатежа,
				ВыборкаДетальныеЗаписи.ВалютаДенежныхСредств, 
				ВалютаВзаиморасчетовПоДоговору,
				ДанныеПоВалютам.КурсНач, 
				ДанныеПоВалютам.КурсКон,
				ДанныеПоВалютам.КратностьНач, 
				ДанныеПоВалютам.КратностьКон);
				Если  ВыборкаДетальныеЗаписи.ВалютаДенежныхСредств <> ВалютаВзаиморасчетовПоДоговору Тогда
					ОбластьРаздел2_Строка.Параметры.СуммаВалютыЦены = СуммаВВалютеЦены;
					ОбластьРаздел2_Строка.Параметры.КодВалютыЦены   = ВалютаВзаиморасчетовПоДоговору.Код;
					ВыводитьИтогиПоКолонкам67 = Истина;
				КонецЕсли;
			    ИтогоВВалютеЦены = ИтогоВВалютеЦены + СуммаВВалютеЦены;
			
			
			
			ТабДокумент.Вывести(ОбластьРаздел2_Строка);
		КонецЦикла;
		ВсегоПлатежей = ИтогоВВалютеЦены;
	Иначе
		ОбластьРаздел2_Строка = Макет.ПолучитьОбласть("Раздел2_Строка");
		ТабДокумент.Вывести(ОбластьРаздел2_Строка);
	КонецЕсли;
	ОбластьРаздел2_Подвал = Макет.ПолучитьОбласть("Раздел2_Подвал");
	Если ВыводитьИтогиПоКолонкам67 И ЗначениеЗаполнено(ИтогоВВалютеЦены) И ИтогоВВалютеЦены <> 0 Тогда
		ОбластьРаздел2_Подвал.Параметры.КодВалютыЦены = ВалютаВзаиморасчетовПоДоговору.Код;
		ОбластьРаздел2_Подвал.Параметры.ИтогоВВалютеЦены = ИтогоВВалютеЦены; 
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьРаздел2_Подвал);
	
	
	
	//Раздел III
	ВсегоВВалютеКонтракта01_05 = 0;
	ВсегоВВалютеКонтракта10_14 = 0;
	
	ОбластьРаздел3_Шапка = Макет.ПолучитьОбласть("Раздел3_Шапка");
	ТабДокумент.Вывести(ОбластьРаздел3_Шапка);
	
	
	Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ВидДокумента,
	//			   |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ,
	//			   |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.НомерГТД.Представление КАК НомерГТД,
	//			   |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Корректировка
	//			   |ИЗ
	//			   |	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//			   |ГДЕ
	//			   |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//			   |	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ.Дата <= &ДатаФормирования";
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Дата) КАК МаксимальнаяДата,
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ
	               |ПОМЕСТИТЬ СрезПоследнихПовторов
	               |ИЗ
	               |	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	               |ГДЕ
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	               |	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	               |	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ.Дата <= &ДатаФормирования
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ВидДокумента,
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ,
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.НомерГТД.Представление КАК НомерГТД,
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Корректировка
	               |ПОМЕСТИТЬ ПовторныеСведения
	               |ИЗ
	               |	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СрезПоследнихПовторов КАК СрезПоследнихПовторов
	               |		ПО РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Дата = СрезПоследнихПовторов.МаксимальнаяДата
	               |			И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ = СрезПоследнихПовторов.Документ
	               |ГДЕ
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ВидДокумента,
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ,
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.НомерГТД.Представление КАК НомерГТД,
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Корректировка
	               |ПОМЕСТИТЬ ПервичныеСведения
	               |ИЗ
	               |	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	               |ГДЕ
	               |	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	               |	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ.Дата <= &ДатаФормирования
	               |	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	               |	И НЕ РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Корректировка
	               |	И НЕ РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Документ В
	               |				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |					ПовторныеСведения.Документ
	               |				ИЗ
	               |					ПовторныеСведения КАК ПовторныеСведения)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПервичныеСведения.ВидДокумента КАК ВидДокумента,
	               |	ПервичныеСведения.Документ КАК Документ,
	               |	ПервичныеСведения.НомерГТД КАК НомерГТД,
	               |	ПервичныеСведения.Корректировка КАК Корректировка,
	               |	ПервичныеСведения.Документ.Дата КАК ДокументДата
	               |ИЗ
	               |	ПервичныеСведения КАК ПервичныеСведения
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПовторныеСведения.ВидДокумента,
	               |	ПовторныеСведения.Документ,
	               |	ПовторныеСведения.НомерГТД,
	               |	ПовторныеСведения.Корректировка,
	               |	ПовторныеСведения.Документ.Дата
	               |ИЗ
	               |	ПовторныеСведения КАК ПовторныеСведения
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДокументДата";
	
	
	Запрос.УстановитьПараметр("ПаспортСделки", КонтрактВЭД.ПаспортСделки);
	Запрос.УстановитьПараметр("ДатаФормирования", ДатаОтчета);
	
	Результат = Запрос.Выполнить();
	ДанныеДляПечатиТЧ = Результат.Выбрать();	
	ВыводитьИтогиПоКолонкам67 = Ложь;
	Если ДанныеДляПечатиТЧ.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Раздел3_Строка");
		ТабДокумент.Вывести(Область);
	Иначе
		КодыВидов01_05 = Новый Массив;
		КодыВидов01_05.Добавить("01");
		КодыВидов01_05.Добавить("02");
		КодыВидов01_05.Добавить("03");
		КодыВидов01_05.Добавить("04");
		КодыВидов01_05.Добавить("05");
		КодыВидов10_14 = Новый Массив;
		КодыВидов10_14.Добавить("10");
		КодыВидов10_14.Добавить("11");
		КодыВидов10_14.Добавить("12");
		КодыВидов10_14.Добавить("13");
		КодыВидов10_14.Добавить("14");
		ВсегоВВалютеКонтракта01_05 = 0;
		ВсегоВВалютеКонтракта10_14 = 0;
		Пока ДанныеДляПечатиТЧ.Следующий() Цикл
			Область = Макет.ПолучитьОбласть("Раздел3_Строка");
			Область.Параметры.Дата = Формат(ДанныеДляПечатиТЧ.Документ.Дата, "ДФ=dd.MM.yyyy");
			Область.Параметры.ВидДокумента = ДанныеДляПечатиТЧ.ВидДокумента.Код;
			Область.Параметры.НомерГТД = ДанныеДляПечатиТЧ.НомерГТД;
			Если ДанныеДляПечатиТЧ.Корректировка = Истина Тогда
				Область.Параметры.Корректировка = "*";//"√";
			КонецЕсли;
			
			Если ДанныеДляПечатиТЧ.Документ <> Null Тогда 
				
				ТекДокумент = ДанныеДляПечатиТЧ.Документ;
				Имя = ВРег(СокрЛП(ТекДокумент.Метаданные().Имя));
				Фл = (Имя = ВРег("РеализацияОтгруженныхТоваров"));
				Если Фл Тогда
					Фл1 = ЗначениеЗаполнено(ТекДокумент.ДокументОтгрузки);
				Иначе
					Фл1 = Истина;
				КонецЕсли;
				Если Фл и (НЕ Фл1) Тогда
					
				Иначе
					
					Если Фл Тогда
						
						ТЧ_СуммаДокумента = РЭЙ_СлужебныйСервер.ПолучитьСуммуДокументаДляСПД(ТекДокумент.ДокументОтгрузки, КонтрактВЭД);
						ТЧ_ДоговорКонтрагента = ТекДокумент.ДокументОтгрузки.ДоговорКонтрагента;
						ТЧ_ВалютаДокумента = ТекДокумент.ДокументОтгрузки.ВалютаДокумента;
						ТЧ_КурсВзаиморасчетов = ТекДокумент.ДокументОтгрузки.КурсВзаиморасчетов;
						ТЧ_КратностьВзаиморасчетов = ТекДокумент.ДокументОтгрузки.КратностьВзаиморасчетов;
					Иначе
						ТЧ_СуммаДокумента = РЭЙ_СлужебныйСервер.ПолучитьСуммуДокументаДляСПД(ТекДокумент, КонтрактВЭД);
						ТЧ_ДоговорКонтрагента = РЭЙ_СлужебныйСервер.ПолучитьДоговорКонтрагентаПоРасчетномуДокументу(ТекДокумент);
						ТЧ_ВалютаДокумента = ТекДокумент.ВалютаДокумента;
						ТЧ_КурсВзаиморасчетов = ТекДокумент.КурсВзаиморасчетов;
						ТЧ_КратностьВзаиморасчетов = ТекДокумент.КратностьВзаиморасчетов;
					КонецЕсли;
					
					ВалютаРубли = Справочники.Валюты.НайтиПоКоду("643");
					Если ТЧ_ДоговорКонтрагента.РасчетыВУсловныхединицах И ТЧ_ВалютаДокумента <> ВалютаРубли Тогда
						СуммаВРублях = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(ТЧ_СуммаДокумента,ТЧ_ВалютаДокумента, ВалютаРубли, 
																						ТЧ_КурсВзаиморасчетов, 1, ТЧ_КратностьВзаиморасчетов, 1);
						ТЧ_ВалютаДокумента = ВалютаРубли;	
						ТЧ_КратностьВзаиморасчетов = 1;
						ТЧ_КурсВзаиморасчетов = 1;
						ТЧ_СуммаДокумента = СуммаВРублях;
					КонецЕсли;
					Область.Параметры.СуммаДок = Формат(ТЧ_СуммаДокумента, "ЧДЦ=2");
					Область.Параметры.КодВалДок = ТЧ_ВалютаДокумента.Код;

					
						
					Если ЗначениеЗаполнено(ТЧ_ВалютаДокумента) и ЗначениеЗаполнено(ТЧ_ДоговорКонтрагента.ВалютаВзаиморасчетов) Тогда
						Запрос = Новый Запрос;
						Запрос.Текст = "ВЫБРАТЬ
						|	&ВалютаКон,
						|	КурсыКон.Курс КАК КурсКон,
						|	КурсыКон.Кратность КАК КратностьКон
						|ИЗ
						|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаКон) КАК КурсыКон";
						
						Запрос.УстановитьПараметр("Период", ТекДокумент.МоментВремени());
						Запрос.УстановитьПараметр("ВалютаКон", ТЧ_ДоговорКонтрагента.ВалютаВзаиморасчетов);
						
						Результат = Запрос.Выполнить();
						ДанныеПоВалютам = Результат.Выбрать();
						ДанныеПоВалютам.Следующий();
						
						СуммаВВалютеКонтракта   = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(ТЧ_СуммаДокумента,ТЧ_ВалютаДокумента, ТЧ_ДоговорКонтрагента.ВалютаВзаиморасчетов,ТЧ_КурсВзаиморасчетов, ДанныеПоВалютам.КурсКон, ТЧ_КратностьВзаиморасчетов, ДанныеПоВалютам.КратностьКон);					
						Если ТЧ_ВалютаДокумента <> ТЧ_ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
							Область.Параметры.СуммаКонтракт = Формат(СуммаВВалютеКонтракта, "ЧДЦ=2");
							Область.Параметры.КодВалКонтракт = ТЧ_ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
							ВыводитьИтогиПоКолонкам67 = Истина;
						КонецЕсли;		
						Если КодыВидов01_05.Найти(ДанныеДляПечатиТЧ.ВидДокумента.Код) <> Неопределено Тогда
							ВсегоВВалютеКонтракта01_05 = ВсегоВВалютеКонтракта01_05 + СуммаВВалютеКонтракта;
						ИначеЕсли КодыВидов10_14.Найти(ДанныеДляПечатиТЧ.ВидДокумента.Код) <> Неопределено Тогда
							ВсегоВВалютеКонтракта10_14 = ВсегоВВалютеКонтракта10_14 + СуммаВВалютеКонтракта;
						КонецЕсли;
					КонецЕсли;
				
				КонецЕсли;
			КонецЕсли;
			
			ТабДокумент.Вывести(Область);
		КонецЦикла;
		
	КонецЕсли;
	
	
	
	Область = Макет.ПолучитьОбласть("Раздел3_Подвал");
	Если ВыводитьИтогиПоКолонкам67 И ЗначениеЗаполнено(ВсегоВВалютеКонтракта01_05) И ВсегоВВалютеКонтракта01_05 <> 0 Тогда
		Область.Параметры.КодВалКонтракт01_05 = ТЧ_ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
		Область.Параметры.ВсегоВВалютеКонтракта01_05 = ВсегоВВалютеКонтракта01_05;
	КонецЕсли;
	Если ВыводитьИтогиПоКолонкам67 И ЗначениеЗаполнено(ВсегоВВалютеКонтракта10_14) И ВсегоВВалютеКонтракта10_14 <> 0 Тогда
		Область.Параметры.КодВалКонтракт10_14 = ТЧ_ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
		Область.Параметры.ВсегоВВалютеКонтракта10_14 = ВсегоВВалютеКонтракта10_14;
	КонецЕсли;
	
	
	ТабДокумент.Вывести(Область);
	
	Если НЕ НеПечататьРазделы456 Тогда
		Область = Макет.ПолучитьОбласть("Раздел4");	
		ТабДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("Раздел5");	
		ТабДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("Раздел6");	
		ТабДокумент.Вывести(Область);
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Раздел7");
		
	Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаЗакрытияПС) Тогда
		Область.Параметры.ДатаЗакрытияПС = ДанныеДляПечати.ДатаЗакрытияПС;
	КонецЕсли;
	
	Область.Параметры.КодВалюты = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
	Область.Параметры.СуммаПлатежей = ВсегоПлатежей;
	Область.Параметры.СуммаВсего = ВсегоВВалютеКонтракта01_05 + ВсегоВВалютеКонтракта10_14;
	Область.Параметры.Сумма10_14 = ВсегоВВалютеКонтракта10_14;
	Область.Параметры.СальдоРасчетов = ВсегоПлатежей - (ВсегоВВалютеКонтракта01_05 + ВсегоВВалютеКонтракта10_14);
	ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПолучитьДанныеДляПечатиПС_2012(ВидПечФормы = "")
	ДанныеДляПечати = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", КонтрактВЭД.ПаспортСделки);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПаспортСделки.Номер,
	|	ПаспортСделки.Дата,
	|	ПаспортСделки.Организация,
	|	ПаспортСделки.Контрагент,
	|	ПаспортСделки.КонтрактВЭД,
	|	ПаспортСделки.ДатаПаспортаСделки,
	|	ПаспортСделки.НомерПаспортаСделки,
	|	ПаспортСделки.БанковскийСчет.Банк КАК Банк,
	|	ПаспортСделки.ДатаОформленияЛиста2,
	|	ПаспортСделки.Руководитель,
	|	ПаспортСделки.ГлавныйБухгалтер,
	|	ПаспортСделки.КонтрактУсловия,
	|	ПаспортСделки.КонтрактВЭД.ВидКонтрактаВЭД КАК ВидКонтрактаВЭД,
	|	ПаспортСделки.КонтрактВЭД.ВалютнаяОговорка КАК ВалютнаяОговорка,
	|	ПаспортСделки.КонтрактВЭД.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте КАК СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте,
	|	ПаспортСделки.КонтрактВЭД.ОтсрочкаПлатежаПредоплаты КАК ОтсрочкаПлатежаПредоплаты,
	|	ПаспортСделки.КонтрактВЭД.КредитныйДоговор КАК КредитныйДоговор,
	|	ПаспортСделки.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ПаспортСделки.КонтрактВЭД.КонтрактНомер КАК КонтрактНомер,
	|	ПаспортСделки.КонтрактВЭД.КонтрактДатаПодписания КАК КонтрактДатаПодписания,
	|	ПаспортСделки.КонтрактВЭД.КонтрактДатаНачала КАК КонтрактДатаНачала,
	|	ПаспортСделки.КонтрактВЭД.КонтрактДатаОкончания КАК КонтрактДатаОкончания,
	|	ПаспортСделки.КонтрактВЭД.ДатаЗавершенияОбязательствПоКонтракту КАК ДатаЗавершенияОбязательствПоКонтракту,
	|	ПаспортСделки.КонтрактВЭД.КонтрактСумма КАК КонтрактСумма,
	|	ПаспортСделки.КонтрактВЭД.КонтрактБезСуммы КАК КонтрактБезСуммы,
	|	ПаспортСделки.БанковскийСчет,
	|	ПаспортСделки.НомерПСДо18062004,
	|	ПаспортСделки.НомерПСДругойБанк,
	|	ПаспортСделки.КонтрактВЭД.КоличествоДней КАК КоличествоДней,
	|	ПаспортСделки.КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД КАК ПроцентныеПлатежиПоКредитамВЭД,
	|	ПаспортСделки.КонтрактВЭД.ДругиеМетодыОпределенияПроцентнойСтавки КАК ДругиеМетодыОпределенияПроцентнойСтавки,
	|	ПаспортСделки.КонтрактВЭД.ФиксированнаяСтавкаГодовыхПроцентов КАК ФиксированнаяСтавкаГодовыхПроцентов,
	|	ПаспортСделки.КонтрактВЭД.СтавкаЛИБОР КАК СтавкаЛИБОР,
	|	ПаспортСделки.КонтрактВЭД.РазмерПроцентнойНадбавки КАК РазмерПроцентнойНадбавки,
	|	ПаспортСделки.СуммаОсновногоДолга,
	|	ПаспортСделки.КонтрактВЭД.МеждународныеФинОрганизации КАК МеждународныеФинОрганизации,
	|	ПаспортСделки.КонтрактВЭД.СуммаОбеспечения КАК СуммаОбеспечения,
	|	ПаспортСделки.КонтрактВЭД.ПрямоеИнвестирование КАК ПрямоеИнвестирование,
	|	ПаспортСделки.ВидПредоставленияДокументовПоСделке,
	|	ПаспортСделки.ДатаПредоставленияДокументовПоСделке,
	|	ПаспортСделки.Контрагент.РЭЙ_Страна,
	|	ПаспортСделки.ДокументЗакрытияПС,
	|	ПаспортСделки.ОснованиеЗакрытияПС,
	|	ПаспортСделки.ДатаЗакрытияПС
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки КАК ПаспортСделки
	|ГДЕ
	|	ПаспортСделки.Ссылка = &ТекущийДокумент";
				  
				  
	ТЗДанныеДляПечати = Запрос.Выполнить().Выгрузить();
	
	
	Для Каждого ТекКолонка Из ТЗДанныеДляПечати.Колонки Цикл
		ДанныеДляПечати.Вставить(ТекКолонка.Имя, ТЗДанныеДляПечати[0][ТекКолонка.Имя]);	
	КонецЦикла;

	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.НомерСтроки КАК НомерСтроки,
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.Дата
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки.ПереоформлениеПС КАК РЭЙ_ПаспортСделкиПереоформлениеПС
	|ГДЕ
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки УБЫВ";
	
	Запрос.УстановитьПараметр("ТекущийДокумент", КонтрактВЭД.ПаспортСделки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ДанныеДляПечати.Вставить("ПереоформлениеНомер", Формат(Выборка.НомерСтроки, "ЧЦ=2; ЧВН="));
	Если НЕ КонтрактВЭД.ПаспортСделки.НеПечататьДатуПереоформленияПС Тогда
		ДанныеДляПечати.Вставить("ПереоформлениеДата", Выборка.Дата);
	Иначе
		ДанныеДляПечати.Вставить("ПереоформлениеДата", "");
	КонецЕсли;
	
	
	Если ДанныеДляПечати.КредитныйДоговор Тогда
		

		Если ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ФиксированнаяСтавка Тогда
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		ИначеЕсли ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ЛИБОР Тогда
			ДанныеДляПечати.Вставить("СтавкаЛИБОР", ДанныеДляПечати.СтавкаЛИБОР.Метаданные().ЗначенияПеречисления.Получить(Перечисления.РЭЙ_СтавкаЛИБОР.Индекс(ДанныеДляПечати.СтавкаЛИБОР)).Имя +ДанныеДляПечати.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код);
			
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
		ИначеЕсли ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ДругиеСтавки Тогда
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
		Иначе
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		КонецЕсли;
		
	КонецЕсли;
	
	
	//********************************************************************
	ДанныеДляПечати.Вставить("ПечБанк", "");
	Если ЗначениеЗаполнено(ДанныеДляПечати.Банк) Тогда
		ДанныеДляПечати.Вставить("ПечБанк", ?(ПустаяСтрока(ДанныеДляПечати.Банк.РЭЙ_НаименованиеПолное), ДанныеДляПечати.Банк.Наименование, ДанныеДляПечати.Банк.РЭЙ_НаименованиеПолное));
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ДатаЧисло", "");
	ДанныеДляПечати.Вставить("МесяцСтрока", "");
	ДанныеДляПечати.Вставить("Год2ПослЦифры", "");
	//Если Не ПаспортСделки.НеПечататьНомерИДатуПС Тогда
		Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаПаспортаСделки) Тогда 
			ДанныеДляПечати.Вставить("ДатаЧисло", Формат(ДанныеДляПечати.ДатаПаспортаСделки, "ДФ=dd"));
					стрДата = Формат(ДанныеДляПечати.ДатаПаспортаСделки,"ДЛФ=DD") ;          // Получим - "5 Августа 2005 г."  
					чПервыйПробел=Найти(стрДата," ");                       // Получим - 2  
					стрДатаБезЧисла=Сред(стрДата,чПервыйПробел+1);       // Получим - "Августа 2005 г."  
					чВторойПробел=Найти(стрДатаБезЧисла," ");              // Получим - 8  
					стрМесяц=НРег(СокрЛП(Лев(стрДатаБезЧисла,чВторойПробел))); // Получим - "Августа"
			ДанныеДляПечати.Вставить("МесяцСтрока", стрМесяц);
			ДанныеДляПечати.Вставить("Год2ПослЦифры", Формат(ДанныеДляПечати.ДатаПаспортаСделки, "ДФ=yy"));
		КонецЕсли;	
	//КонецЕсли;	
	
	//вывод номера паспорта сделки
	Для счетчик = 1 По 22 Цикл
		Если (счетчик = 9) или (счетчик = 14) или (счетчик = 19) или (счетчик = 21) Тогда
			ДанныеДляПечати.Вставить("НПС_"+счетчик, "/");
		Иначе
			//Если Не ПаспортСделки.НеПечататьНомерИДатуПС Тогда
				ДанныеДляПечати.Вставить("НПС_"+счетчик, Сред(ДанныеДляПечати.НомерПаспортаСделки, счетчик ,1));
			//Иначе
			//	ДанныеДляПечати.Вставить("НПС_"+счетчик, "");
			//КонецЕсли;
		КонецЕсли; 
	КонецЦикла; 
	
	//вывод данных об организации
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДанныеДляПечати.Организация, ДанныеДляПечати.Дата);
	ДанныеДляПечати.Вставить("ОрганизацияНаименование", ?(ПустаяСтрока(ДанныеДляПечати.Организация.НаименованиеПолное),?(ПустаяСтрока(ДанныеДляПечати.Организация.НаименованиеПолное),ДанныеДляПечати.Организация.Наименование,ДанныеДляПечати.Организация.НаименованиеПолное),ДанныеДляПечати.Организация.НаименованиеПолное));

	//вывод ИНН
	ПечИНН = Лев(СокрЛП(СведенияОбОрганизации.ИНН)+"            ",12);
	Для счетчик = 1 По 12 Цикл
		ДанныеДляПечати.Вставить("ИНН_"+счетчик, Сред(ПечИНН, счетчик ,1));
	КонецЦикла;
	
	//вывод КПП
	ПечКПП = ?(ЗначениеЗаполнено(КонтрактВЭД.ПаспортСделки.КППОбособленногоПодразделения), КонтрактВЭД.ПаспортСделки.КППОбособленногоПодразделения, СведенияОбОрганизации.КПП);
	ПечКПП = Лев(СокрЛП(ПечКПП)+"            ",9);
	Для счетчик = 1 По 9 Цикл
		ДанныеДляПечати.Вставить("КПП_"+счетчик, Сред(ПечКПП, счетчик ,1));
	КонецЦикла;
	
	//вывод ОГРН
	ПечОГРН = ДанныеДляПечати.Организация.ОГРН;
	Для счетчик = 1 По 15 Цикл
		ДанныеДляПечати.Вставить("ОГРН_"+счетчик, Сред(ПечОГРН, счетчик ,1));
	КонецЦикла;
	
	ПечДатаРегистрации = Формат(ДанныеДляПечати.Организация.РЭЙ_ДатаВнесенияВГосРеестр, "ДФ=dd.MM.yyyy");
	Если ПустаяСтрока(ПечДатаРегистрации) Тогда
		ПечДатаРегистрации = "  .  .    ";
	КонецЕсли;
	Для счетчик = 1 По 10 Цикл
		ДанныеДляПечати.Вставить("ДатаРегистрации_"+счетчик, Сред(ПечДатаРегистрации, счетчик ,1));
	КонецЦикла;
		
	Если ДатаОтчета > Дата(2012,09,30,23,59,59) Тогда
		ДанныеДляПечати.Вставить("Регион", ?(СокрЛП(Организация.РЭЙ_Регион) = "нет", "", СокрЛП(Организация.РЭЙ_Регион)));
		ДанныеДляПечати.Вставить("Район", ?(СокрЛП(Организация.РЭЙ_Район) = "нет", "", СокрЛП(Организация.РЭЙ_Район)));
		ДанныеДляПечати.Вставить("Город", ?(СокрЛП(Организация.РЭЙ_Город) = "нет", "", СокрЛП(Организация.РЭЙ_Город)));
		ДанныеДляПечати.Вставить("НаселенныйПункт", ?(СокрЛП(Организация.РЭЙ_НаселенныйПункт) = "нет", "", СокрЛП(Организация.РЭЙ_НаселенныйПункт)));
		ДанныеДляПечати.Вставить("Улица", ?(СокрЛП(Организация.РЭЙ_Улица) = "нет", "", СокрЛП(Организация.РЭЙ_Улица)));
	Иначе
		ДанныеДляПечати.Вставить("Регион", Организация.РЭЙ_Регион);
		ДанныеДляПечати.Вставить("Район", Организация.РЭЙ_Район);
		ДанныеДляПечати.Вставить("Город", Организация.РЭЙ_Город);
		ДанныеДляПечати.Вставить("НаселенныйПункт", Организация.РЭЙ_НаселенныйПункт);
		ДанныеДляПечати.Вставить("Улица", Организация.РЭЙ_Улица);
	КонецЕсли;
	Если КонтрактВЭД.ПаспортСделки.ПечататьОрганизациюПрописными Тогда
		ДанныеДляПечати.Вставить("Дом", ВРег(Организация.РЭЙ_Дом));
		ДанныеДляПечати.Вставить("Корпус", ВРег(Организация.РЭЙ_Корпус));
		ДанныеДляПечати.Вставить("Квартира", ВРег(Организация.РЭЙ_Квартира));
	Иначе
		ДанныеДляПечати.Вставить("Дом", Организация.РЭЙ_Дом);
		ДанныеДляПечати.Вставить("Корпус", Организация.РЭЙ_Корпус);
		ДанныеДляПечати.Вставить("Квартира", Организация.РЭЙ_Квартира);
	КонецЕсли;
	
	Если ДанныеДляПечати.КонтрактВЭД.ПериодическиеФиксированныеПлатежи Тогда
		ДанныеДляПечати.Вставить("ВидПредоставленияДокументовПоСделке", "*");		
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ПериодичностьПлатежей", ДанныеДляПечати.КонтрактВЭД.ПериодФиксированныхПлатежей);		
	
	
	//2. Реквизиты иностранного контрагента
	//*************************************************************************
	
	//КонтрагентНаименование //Наименование контрагента на иностранном языке, при отсутствии - на русском
	//КонтрагентСтранаНаименование //Наименование страны регистрации контрагента согласно ОКСМ - справочнику "Классификатор стран мира"
	//КонтрагентСтранаКод //Код страны регистрации контрагента согласно ОКСМ - справочнику "Классификатор стран мира"
	ТаблицаКонтрагентов = Новый ТаблицаЗначений;
	ТаблицаКонтрагентов.Колонки.Добавить("КонтрагентНаименование");
	ТаблицаКонтрагентов.Колонки.Добавить("КонтрагентСтранаНаименование");
	ТаблицаКонтрагентов.Колонки.Добавить("КонтрагентСтранаКод");
	
	Если ДанныеДляПечати.КонтрактВЭД.Многосторонний Тогда	
		
		Для Каждого СтрокаПоКонтрагенту ИЗ ДанныеДляПечати.КонтрактВЭД.СтороныПоКонтракту Цикл
			НовСтрока = ТаблицаКонтрагентов.Добавить(); 
			ТекКонтрагент = СтрокаПоКонтрагенту.Контрагент;
			
			Если (ТекКонтрагент.Метаданные().Реквизиты.Найти("РЭЙ_НаименованиеАнгл")<>Неопределено) и (НЕ ПустаяСтрока(ТекКонтрагент.РЭЙ_НаименованиеАнгл)) Тогда
				НовСтрока["КонтрагентНаименование"]  = ТекКонтрагент.РЭЙ_НаименованиеАнгл;
			ИначеЕсли НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.НаименованиеПолное) Тогда 
				НовСтрока["КонтрагентНаименование"] =  ТекКонтрагент.НаименованиеПолное;
			Иначе
				НовСтрока["КонтрагентНаименование"] = ТекКонтрагент.Наименование;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекКонтрагент) Тогда
				Если  ТекКонтрагент.РЭЙ_НеЯвляетсяРезидентом Тогда	
					тСтрана = ТекКонтрагент.РЭЙ_Страна;
					Если ЗначениеЗаполнено(тСтрана) Тогда
						НовСтрока["КонтрагентСтранаНаименование"] = СокрЛП(тСтрана.Наименование);
						НовСтрока["КонтрагентСтранаКод"] =  тСтрана.Код;
					КонецЕсли;
				Иначе
					//Россия
					НовСтрока["КонтрагентСтранаНаименование"] = Справочники.СтраныМира.Россия.Наименование;
					НовСтрока["КонтрагентСтранаКод"] =  Справочники.СтраныМира.Россия.Код;		
				КонецЕсли;
			КонецЕсли; 			
		КонецЦикла;
	Иначе		
		НовСтрока = ТаблицаКонтрагентов.Добавить(); 
		
		Если (ДанныеДляПечати.Контрагент.Метаданные().Реквизиты.Найти("РЭЙ_НаименованиеАнгл")<>Неопределено) и (НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.РЭЙ_НаименованиеАнгл)) Тогда
			НовСтрока["КонтрагентНаименование"]  = ДанныеДляПечати.Контрагент.РЭЙ_НаименованиеАнгл;
		ИначеЕсли НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.НаименованиеПолное) Тогда 
			НовСтрока["КонтрагентНаименование"] =  ДанныеДляПечати.Контрагент.НаименованиеПолное;
		Иначе
			НовСтрока["КонтрагентНаименование"] = ДанныеДляПечати.Контрагент.Наименование;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеДляПечати.Контрагент) Тогда
			
			Если  ДанныеДляПечати.Контрагент.РЭЙ_НеЯвляетсяРезидентом Тогда	
				тСтрана = ДанныеДляПечати.Контрагент.РЭЙ_Страна;
				Если ЗначениеЗаполнено(тСтрана) Тогда
					НовСтрока["КонтрагентСтранаНаименование"] = СокрЛП(тСтрана.Наименование);
					НовСтрока["КонтрагентСтранаКод"] =  тСтрана.Код;
				КонецЕсли;
			Иначе
				//Россия
				НовСтрока["КонтрагентСтранаНаименование"] = Справочники.СтраныМира.Россия.Наименование;
				НовСтрока["КонтрагентСтранаКод"] =  Справочники.СтраныМира.Россия.Код;		
			КонецЕсли;
		КонецЕсли; 
		
		ДанныеДляПечати.Вставить("КонтрагентНаименование", НовСтрока["КонтрагентНаименование"]);
		ДанныеДляПечати.Вставить("КонтрагентСтранаНаименование", НовСтрока["КонтрагентСтранаНаименование"]);
		ДанныеДляПечати.Вставить("КонтрагентСтранаКод", НовСтрока["КонтрагентСтранаКод"]);		
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ТаблицаКонтрагентов", ТаблицаКонтрагентов);
	
	Если ПустаяСтрока(ДанныеДляПечати.КонтрактНомер) Тогда 
		Если ВидПечФормы = "ПС2012" Тогда
			ДанныеДляПечати.Вставить("КонтрактНомер", "БН");
		Иначе
			ДанныеДляПечати.Вставить("КонтрактНомер", "б/н");
		КонецЕсли;
	КонецЕсли;
	
	Если ВидПечФормы = "ПС2012" Тогда
		ДанныеДляПечати.Вставить("КонтрактДатаПодписания", Формат(Макс(ДанныеДляПечати.КонтрактДатаПодписания, ДанныеДляПечати.КонтрактДатаНачала), "ДФ=dd.MM.yyyy"));
	Иначе
		ДанныеДляПечати.Вставить("КонтрактДатаПодписания", Формат(ДанныеДляПечати.КонтрактДатаПодписания, "ДФ=dd.MM.yyyy"));
	КонецЕсли;

	ВалютаДоговора = ДанныеДляПечати.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	ДанныеДляПечати.Вставить("КонтрактВалютаНаименование", ?(ПустаяСтрока(ВалютаДоговора.НаименованиеПолное), ВалютаДоговора.Наименование, ВалютаДоговора.НаименованиеПолное));
	ДанныеДляПечати.Вставить("КонтрактВалютаНаименованиеСокр", ВалютаДоговора.Наименование);

	ДанныеДляПечати.Вставить("КонтрактВалютаКод", ВалютаДоговора.Код);
	ДанныеДляПечати.Вставить("КонтрактДатаОкончания", Формат(ДанныеДляПечати.КонтрактДатаОкончания, "ДФ=dd.MM.yyyy"));
	ДанныеДляПечати.Вставить("ДатаЗавершенияОбязательствПоКонтракту", Формат(ДанныеДляПечати.ДатаЗавершенияОбязательствПоКонтракту, "ДФ=dd.MM.yyyy"));
	ДанныеДляПечати.Вставить("ВалютнаяОговорка", ?(ДанныеДляПечати.ВалютнаяОговорка, "Х",""));

	Если ДанныеДляПечати.КонтрактБезСуммы Тогда
		Если ВидПечФормы = "ПС2012" Тогда
			ДанныеДляПечати.Вставить("КонтрактСумма", "БС");
		Иначе
			ДанныеДляПечати.Вставить("КонтрактСумма", "б/с");
		КонецЕсли;
	Иначе
		ДанныеДляПечати.Вставить("КонтрактСумма", Формат(ДанныеДляПечати.КонтрактСумма, "ЧДЦ=2; ЧРД=.; ЧН=")); //рк+ 25.12.2010 был формат "ЧДЦ=2; ЧН="
	КонецЕсли;
	ДанныеДляПечати.Вставить("СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте", Формат(ДанныеДляПечати.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте, "ЧДЦ=2; ЧН=' '"));
	
	
	Если ПустаяСтрока(СтрЗаменить(СтрЗаменить(ДанныеДляПечати.НомерПСДо18062004, " ",""), "/", "")) Тогда
		ДанныеДляПечати.Вставить("НомерПСДо18062004", "");
	КонецЕсли;
	
	Для счетчик = 1 По 22 Цикл
		Если (счетчик = 9) или (счетчик = 14) или (счетчик = 19) или (счетчик = 21) Тогда
		Иначе
			ДанныеДляПечати.Вставить("НПСДБ_"+счетчик, Сред(ДанныеДляПечати.НомерПСДругойБанк, счетчик ,1));
		КонецЕсли; 
	КонецЦикла;
	
	Для счетчик = 1 По 2 Цикл
		ДанныеДляПечати.Вставить("ПереоформлениеНомер_"+счетчик, Сред(ДанныеДляПечати.ПереоформлениеНомер, счетчик ,1));
	КонецЦикла;
		
	ПечПереоформлениеДата = Формат(ДанныеДляПечати.ПереоформлениеДата, "ДФ=dd.MM.yyyy; ДП='  .  .    '");
	Для счетчик = 1 По 10 Цикл
		Если Найти(".3.6.", "."+счетчик+".")>0 Тогда 
			Продолжить;
		КонецЕсли;
		ДанныеДляПечати.Вставить("ПереоформлениеДата_"+счетчик, Сред(ПечПереоформлениеДата, счетчик ,1)); 
	КонецЦикла;
		
	Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаЗакрытияПС) Тогда
		ДанныеДляПечати.Вставить("ДатаЗакрытияПС", Формат(ДанныеДляПечати.ДатаЗакрытияПС, "ДФ=dd.MM.yyyy"));	
		ДанныеДляПечати.Вставить("ОснованиеЗакрытияПС", ДанныеДляПечати.ОснованиеЗакрытияПС);	
	Иначе
		ДанныеДляПечати.Вставить("ДатаЗакрытияПС", "");
		ДанныеДляПечати.Вставить("ОснованиеЗакрытияПС", "");
	КонецЕсли;

	ДанныеДляПечати.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ДанныеДляПечати.Руководитель, ДанныеДляПечати.Дата));
	ДанныеДляПечати.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ДанныеДляПечати.ГлавныйБухгалтер, ДанныеДляПечати.Дата));
	
	//Лист 2
		
	Если ЗначениеЗаполнено(ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты) Тогда
		
		Если ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.nnnn Тогда       
			КодОтсрочки = "0000"+ДанныеДляПечати.КоличествоДней;
		Иначе
			КодОтсрочки = ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты.Метаданные().ЗначенияПеречисления.Получить(Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.Индекс(ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты)).Имя;
		КонецЕсли;
		
		КодОтсрочки = Прав(КодОтсрочки, 4);
		
	Иначе
		КодОтсрочки = "    ";
	КонецЕсли;
	
	Для счетчик = 1 По 4 Цикл
		ДанныеДляПечати.Вставить("Отсрочка_"+счетчик, Сред(КодОтсрочки, счетчик ,1));
	КонецЦикла; 
	
	
	Если Не КонтрактВЭД.ПаспортСделки.НеПечататьДатуОформленияЛиста2 Тогда
		ПечДатаОформленияЛиста2 = Формат(ДанныеДляПечати.ДатаОформленияЛиста2, "ДФ=dd.MM.yyyy");
		Если ПустаяСтрока(ПечДатаОформленияЛиста2) Тогда
			ПечДатаОформленияЛиста2 = "  .  .    ";
		КонецЕсли;
		Для счетчик = 1 По 10 Цикл
			Если Найти(".3.6.", "."+счетчик+".")>0 Тогда 
				Продолжить;
			КонецЕсли;
			ДанныеДляПечати.Вставить("ДатаОформленияЛиста2_"+счетчик, Сред(ПечДатаОформленияЛиста2, счетчик ,1));
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеДляПечати.СуммаОсновногоДолга <> 0 Тогда
		ДанныеДляПечати.Вставить("СуммаОсновногоДолгаВалютаКод", ДанныеДляПечати.КонтрактВалютаКод);
	КонецЕсли;
	
	
	//разрешения валютного контроля
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект,
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Номер КАК РазрешениеНомер,
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Дата КАК РазрешениеДата,
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Сумма КАК РазрешениеСумма,
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.СрокОкончания КАК РазрешениеСрокОкончания
	|ИЗ
	|	РегистрСведений.РЭЙ_ИнформацияОРазрешенияхВалКонтроля КАК РЭЙ_ИнформацияОРазрешенияхВалКонтроля
	|ГДЕ
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект В(&СписокОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазрешениеДата";
	
	ОтборСписок = Новый СписокЗначений;
	Если ЗначениеЗаполнено(КонтрактВЭД) Тогда
		ОтборСписок.Добавить(КонтрактВЭД);

		ЗапросВалютныхСчетовКонтракта = Новый Запрос;
		ЗапросВалютныхСчетовКонтракта.Текст = "ВЫБРАТЬ
		|	РЭЙ_КонтрактыВЭДБанковскиеСчета.БанковскийСчет.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ СчетаОбычные
		|ИЗ
		|	Справочник.РЭЙ_КонтрактыВЭД.БанковскиеСчета КАК РЭЙ_КонтрактыВЭДБанковскиеСчета
		|ГДЕ
		|	РЭЙ_КонтрактыВЭДБанковскиеСчета.БанковскийСчет.Банк.РЭЙ_НеЯвляетсяРезидентом
		|	И РЭЙ_КонтрактыВЭДБанковскиеСчета.Ссылка = &СсылкаНаКонтракт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РЭЙ_БанковскиеСчетаВалютные.Ссылка,
		|	РЭЙ_БанковскиеСчетаВалютные.БанковскийСчет
		|ПОМЕСТИТЬ СчетаВалютные
		|ИЗ
		|	Справочник.РЭЙ_БанковскиеСчетаВалютные КАК РЭЙ_БанковскиеСчетаВалютные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаВалютные.Ссылка
		|ИЗ
		|	СчетаОбычные КАК СчетаОбычные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаВалютные КАК СчетаВалютные
		|		ПО СчетаОбычные.Ссылка = СчетаВалютные.БанковскийСчет";
		
		ЗапросВалютныхСчетовКонтракта.УстановитьПараметр("СсылкаНаКонтракт",КонтрактВЭД);					  
		ВыборкаЗапросаВалютныхСчетов= ЗапросВалютныхСчетовКонтракта.Выполнить().Выбрать();
		Пока ВыборкаЗапросаВалютныхСчетов.Следующий() Цикл
			ОтборСписок.Добавить(ВыборкаЗапросаВалютныхСчетов.Ссылка);		
		КонецЦикла;
		
	КонецЕсли;
	Если ЗначениеЗаполнено(КонтрактВЭД.ПаспортСделки.БанковскийСчет) Тогда
		ОтборСписок.Добавить(КонтрактВЭД.ПаспортСделки.БанковскийСчет);
	КонецЕсли;
	Если ОтборСписок.Количество()>0 Тогда
		Запрос.УстановитьПараметр("СписокОбъектов", ОтборСписок);
	Иначе
		Запрос.УстановитьПараметр("СписокОбъектов", Неопределено);
	КонецЕсли;
	
	ТЗРазрешенияВалютногоКонтроля = Запрос.Выполнить().Выгрузить();
	ДанныеДляПечати.Вставить("ТЗРазрешенияВалютногоКонтроля", ТЗРазрешенияВалютногоКонтроля);
	
	
	Если ВидПечФормы = "ПС2012" Тогда
		//В графе 2 указываются символы 10-18 номера ПС.
		//В графе 3 в формате ДД.ММ.ГГГГ указывается дата принятия ПС на обслуживание новым уполномоченным банком при переводе ПС на обслуживание в другой уполномоченный банк. В иных случаях графа 3 не заполняется.
 		//В графе 4 указывается дата закрытия ПС в формате ДД.ММ.ГГГГ, указанная в документе "Заявление в уполномоченный банк паспорта сделки", или же вручную устанавливается пользователем.
 		//В графе 5 указывается основание закрытия ПС, указанный в документе "Заявление в уполномоченный банк паспорта сделки" - перечисление РЭЙ_ОснованияЗакрытияПС. До 01.10.2012 указываются подпункты 3.18.Х пункта 3.18 Инструкции №117-И, с 01.10.2012 указываются подпункты 7.1.Х пункта 7.1 Инструкции №138-И. Значения перечислений согласно подпунктая 7.1.Х пункта 7.1 Инструкции №138-И я добавил 23.09.2012.
		
		
		РегНомерБанкаПС = Сред(КонтрактВЭД.ПаспортСделки.НомерПаспортаСделки, 10, 9);
		
		ПС2012_Таблица4 = Новый ТаблицаЗначений;
		ПС2012_Таблица4.Колонки.Добавить("НомерСтроки");
		ПС2012_Таблица4.Колонки.Добавить("РегНомерБанкаПС");
		ПС2012_Таблица4.Колонки.Добавить("ДатаПринятияПСПриПереводе");
		ПС2012_Таблица4.Колонки.Добавить("ДатаЗакрытияПС");
		ПС2012_Таблица4.Колонки.Добавить("ОснованиеЗакрытияПС");
			
		НоваяСтрока = ПС2012_Таблица4.Добавить();
		Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаЗакрытияПС) Тогда
			НоваяСтрока.НомерСтроки = 1;
			НоваяСтрока.ДатаПринятияПСПриПереводе = "Х";
			НоваяСтрока.РегНомерБанкаПС = Сред(КонтрактВЭД.ПаспортСделки.НомерПаспортаСделки, 10, 9);
			НоваяСтрока.ДатаЗакрытияПС = ДанныеДляПечати.ДатаЗакрытияПС;
			НоваяСтрока.ОснованиеЗакрытияПС = ДанныеДляПечати.ОснованиеЗакрытияПС;
		КонецЕсли;
		
		ДанныеДляПечати.Вставить("ПС2012_Таблица4", ПС2012_Таблица4);
		
		
		
		ПС2012_Таблица5 = КонтрактВЭД.ПаспортСделки.ПереоформлениеПС.Выгрузить();
		Для каждого СтрПС2012_Таблица5 Из ПС2012_Таблица5 Цикл
			Если ПустаяСтрока(СтрПС2012_Таблица5.ОснованиеНомер)  Тогда
				СтрПС2012_Таблица5.ОснованиеНомер = "БН";
			КонецЕсли; 
		КонецЦикла; 
		ДанныеДляПечати.Вставить("ПС2012_Таблица5", ПС2012_Таблица5);
		
	КонецЕсли; 
	
	
	Возврат ДанныеДляПечати;
	
КонецФункции // ПолучитьДанныеДляПечатиПС()

Функция ПечатьПаспортаСделки2012(ТабДокумент, ДанныеДляПечати, Макет)
	ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка1");
	ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
	ОбластьЛист1_Шапка.Параметры.датаФормирования = ДатаОтчета; 
	ТабДокумент.Вывести(ОбластьЛист1_Шапка);
	
	фл = Ложь;
	Для Каждого СтрокаПоКонтрагенту ИЗ ДанныеДляПечати.ТаблицаКонтрагентов Цикл	
		ОбластьЛист1_Строка11 = Макет.ПолучитьОбласть("Лист1_Строка11");
		ОбластьЛист1_Строка11.Параметры.Заполнить(СтрокаПоКонтрагенту);
		ТабДокумент.Вывести(ОбластьЛист1_Строка11);
		фл = Истина;
	КонецЦикла;
	Если не фл Тогда
		ОбластьЛист1_Строка11 = Макет.ПолучитьОбласть("Лист1_Строка11");
		ТабДокумент.Вывести(ОбластьЛист1_Строка11);
		фл = Истина;
	КонецЕсли;
	
	табДокумент2 = Новый ТабличныйДокумент;
	
	ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка12");
	ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент2.Вывести(ОбластьЛист1_Шапка);
	
	Если НЕ ТабДокумент.ПроверитьВывод(табДокумент2) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	
	ПС2012_Таблица4 = ДанныеДляПечати.ПС2012_Таблица4;
	Если ПС2012_Таблица4.Количество() = 0 Тогда
		ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
		ТабДокумент2.Вывести(ОбластьЛист1_Строка);
		
		Если НЕ ТабДокумент.ПроверитьВывод(табДокумент2) Тогда	
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		
	Иначе
		Для каждого СтрПС2012_Таблица4 Из ПС2012_Таблица4 Цикл
			ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
			ОбластьЛист1_Строка.Параметры.Заполнить(СтрПС2012_Таблица4);
			ТабДокумент2.Вывести(ОбластьЛист1_Строка);
			
			Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда	
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;				
		КонецЦикла; 
	КонецЕсли;
	
	ТабДокумент.Вывести(ТабДокумент2);	
	
	
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка2");
	ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент2.Вывести(ОбластьЛист1_Шапка);
	
	
	
	ПС2012_Таблица5 = ДанныеДляПечати.ПС2012_Таблица5;
	Если ПС2012_Таблица5.Количество() = 0 Тогда
		ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
		ТабДокумент2.Вывести(ОбластьЛист1_Строка);
		
		Если НЕ ТабДокумент.ПроверитьВывод(табДокумент2) Тогда	
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;			
	Иначе
		Для каждого СтрПС2012_Таблица5 Из ПС2012_Таблица5 Цикл
			ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
			ОбластьЛист1_Строка.Параметры.Заполнить(СтрПС2012_Таблица5);
			ТабДокумент2.Вывести(ОбластьЛист1_Строка);
			
			Если НЕ ТабДокумент.ПроверитьВывод(табДокумент2) Тогда	
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;				
		КонецЦикла; 
	КонецЕсли;
	
	ТабДокумент.Вывести(ТабДокумент2);		
	
	ОбластьЛист1_Подвал = Макет.ПолучитьОбласть("Лист1_Подвал");
	ОбластьЛист1_Подвал.Параметры.Заполнить(ДанныеДляПечати);
	
	Если НЕ ТабДокумент.ПроверитьВывод(ОбластьЛист1_Подвал) Тогда	
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьЛист1_Подвал);	
	
	Возврат ТабДокумент;

КонецФункции // ПечатьПаспортаСделки()

Процедура Печать2012_Раздел2(ТабДокумент, МенеджерВТ, Макет)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("СсылкиНаСправкиСВО", СсылкиНаСправкиСВО);
	Запрос.УстановитьПараметр("ПаспортСделки", КонтрактВЭД.ПаспортСделки);
	Запрос.УстановитьПараметр("ВалютаКонтракта", ВалютаКонтракта);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СВО.Ссылка,
	|	СВО.РасчетныйДокумент.Дата КАК ДатаРасчетногоДокумента,
	|	СВО.НаправлениеПлатежа,
	|	СВО.ВидВалютнойОперации,
	|	СВО.ВидВалютнойОперации.Код КАК КодВидаВалютнойОперации,
	|	СВО.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	СВО.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СВО.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО.ВалютаДокумента.Код
	|		ИНАЧЕ СВО.ВалютаКонтракта.Код
	|	КОНЕЦ КАК ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА СВО.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО.СуммаВВалютеДокумента
	|		ИНАЧЕ СВО.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	СВО.ОжидаемыйСрок,
	|	СВО.РасчетныйДокумент.БанковскийСчетКонтрагента.Банк.РЭЙ_Страна.Код КАК КодСтраныБанкаПлатежа,
	|	ВЫБОР
	|		КОГДА СВО.Ссылка.Корректировка
	|			ТОГДА ""*""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Корректировка,
	|	СВО.Ссылка.Инобанк.РЭЙ_Страна.Код КАК КодСтраныИноБанка,
	|	СВО.Примечание
	|ПОМЕСТИТЬ ДанныеСВО
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК СВО
	|ГДЕ
	|	СВО.Ссылка В(&СсылкиНаСправкиСВО)
	|	И СВО.ПаспортСделки = &ПаспортСделки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СВО_Ручные.Ссылка,
	|	СВО_Ручные.ДатаРасчетногоДокумента,
	|	СВО_Ручные.НаправлениеПлатежа,
	|	СВО_Ручные.ВидВалютнойОперации,
	|	СВО_Ручные.ВидВалютнойОперации.Код,
	|	СВО_Ручные.ВалютаДокумента.Код,
	|	СВО_Ручные.СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СВО_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО_Ручные.ВалютаДокумента.Код
	|		ИНАЧЕ СВО_Ручные.ВалютаКонтракта.Код
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СВО_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СВО_Ручные.СуммаВВалютеДокумента
	|		ИНАЧЕ СВО_Ручные.СуммаВВалютеКонтракта
	|	КОНЕЦ,
	|	СВО_Ручные.ОжидаемыйСрок,
	|	СВО_Ручные.РасчетныйДокумент.БанковскийСчетКонтрагента.Банк.РЭЙ_Страна.Код,
	|	ВЫБОР
	|		КОГДА СВО_Ручные.Ссылка.Корректировка
	|			ТОГДА ""*""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	СВО_Ручные.Ссылка.Инобанк.РЭЙ_Страна.Код,
	|	СВО_Ручные.Примечание
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперацииРучные КАК СВО_Ручные
	|ГДЕ
	|	СВО_Ручные.Ссылка В(&СсылкиНаСправкиСВО)
	|	И СВО_Ручные.ПаспортСделки = &ПаспортСделки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ДанныеСВО.Ссылка,
	|	ДанныеСВО.ДатаРасчетногоДокумента КАК ДатаРасчетногоДокумента,
	|	ДанныеСВО.НаправлениеПлатежа,
	|	ДанныеСВО.КодВидаВалютнойОперации,
	|	ДанныеСВО.ВалютаДокументаКод,
	|	ДанныеСВО.СуммаВВалютеДокумента,
	|	ДанныеСВО.ВалютаКонтрактаКод,
	|	ДанныеСВО.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ДанныеСВО.ОжидаемыйСрок,
	|	ДанныеСВО.КодСтраныБанкаПлатежа,
	|	ДанныеСВО.Корректировка,
	|	ДанныеСВО.КодСтраныИноБанка,
	|	ДанныеСВО.Примечание,
	|	ДанныеСВО.ВидВалютнойОперации
	|ИЗ
	|	ДанныеСВО КАК ДанныеСВО
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРасчетногоДокумента";
	
	ТаблицаСВО = Запрос.Выполнить().Выгрузить();
	
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Раздел2_Шапка");
	ТабДокумент2.Вывести(Область);
	
	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	Если ТаблицаСВО.Количество() > 0 Тогда
		
		НомерСтроки = 0;
		Для Каждого СтрокаСВО Из ТаблицаСВО Цикл
			НомерСтроки = НомерСтроки + 1;
			СтрокаСВО.НомерСтроки = НомерСтроки;
			
			Область = Макет.ПолучитьОбласть("Раздел2_Строка");
			Область.Параметры.Заполнить(СтрокаСВО);
			ТабДокумент2.Вывести(Область);
		КонецЦикла; 
		
		Область = Макет.ПолучитьОбласть("Раздел2_Подвал");
		Область.Параметры.ВалютаКонтрактаКод = ВалютаКонтракта.Код;
		Область.Параметры.СуммаВВалютеКонтракта  = ТаблицаСВО.Итог("СуммаВВалютеКонтракта");
		ТабДокумент2.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("Раздел2_Строка");
		ТабДокумент2.Вывести(Область);
	КонецЕсли;

	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ТабДокумент.Вывести(ТабДокумент2);
	
	//Сохраняем таблицу для раздела 5
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСВО.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСВО.ВидВалютнойОперации,
	|	ТаблицаСВО.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта
	|ПОМЕСТИТЬ ДанныеСВО_ДляРаздела5
	|ИЗ
	|	&ТаблицаСВО КАК ТаблицаСВО";
	Запрос.УстановитьПараметр("ТаблицаСВО", ТаблицаСВО);
	Запрос.Выполнить();
КонецПроцедуры

Процедура Печать2012_Раздел3(ТабДокумент, МенеджерВТ, Макет)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СПД.Ссылка,
	|	ЛОЖЬ КАК ЭтоРучныеОперации,
	|	СПД.ВидДокумента,
	|	СПД.ВидДокумента.Код КАК КодВидаПодтверждающегоДокумента,
	|	СПД.Документ,
	|	СПД.ДатаШтампаТаможни,
	|	"""" КАК НомерНакладной,
	|	СПД.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА СПД.Ссылка.Корректировка
	|			ТОГДА ""*""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Корректировка,
	|	СПД.ВалютаДокумента.Код КАК ВалютаДокументаКод,
	|	СПД.СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД.ВалютаДокумента.Код
	|		ИНАЧЕ СПД.ВалютаКонтракта.Код
	|	КОНЕЦ КАК ВалютаКонтрактаКод,
	|	ВЫБОР
	|		КОГДА СПД.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД.СуммаВВалютеДокумента
	|		ИНАЧЕ СПД.СуммаВВалютеКонтракта
	|	КОНЕЦ КАК СуммаВВалютеКонтракта,
	|	СПД.ОжидаемыйСрок,
	|	СПД.ПризнакПоставки
	|ПОМЕСТИТЬ ДанныеСПД
	|ИЗ
	|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК СПД
	|ГДЕ
	|	СПД.Ссылка В(&СсылкиНаСправкиСПД)
	|	И СПД.Ссылка.ПаспортСделки = &ПаспортСделки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СПД_Ручные.Ссылка,
	|	ИСТИНА,
	|	СПД_Ручные.ВидДокумента,
	|	СПД_Ручные.ВидДокумента.Код,
	|	"""",
	|	СПД_Ручные.ДатаШтампаТаможни,
	|	СПД_Ручные.НомерНакладной,
	|	СПД_Ручные.НомерГТД,
	|	ВЫБОР
	|		КОГДА СПД_Ручные.Ссылка.Корректировка
	|			ТОГДА ""*""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	СПД_Ручные.ВалютаДокумента.Код,
	|	СПД_Ручные.СуммаВВалютеДокумента,
	|	ВЫБОР
	|		КОГДА СПД_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД_Ручные.ВалютаДокумента.Код
	|		ИНАЧЕ СПД_Ручные.ВалютаКонтракта.Код
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СПД_Ручные.ВалютаДокумента = &ВалютаКонтракта
	|			ТОГДА СПД_Ручные.СуммаВВалютеДокумента
	|		ИНАЧЕ СПД_Ручные.СуммаВВалютеКонтракта
	|	КОНЕЦ,
	|	СПД_Ручные.ОжидаемыйСрок,
	|	СПД_Ручные.ПризнакПоставки
	|ИЗ
	|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументыРучные КАК СПД_Ручные
	|ГДЕ
	|	СПД_Ручные.Ссылка В(&СсылкиНаСправкиСПД)
	|	И СПД_Ручные.Ссылка.ПаспортСделки = &ПаспортСделки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	ДанныеСПД.Ссылка,
	|	ДанныеСПД.ДатаШтампаТаможни,
	|	ДанныеСПД.ВидДокумента,
	|	ДанныеСПД.Документ,
	|	ДанныеСПД.НомерГТД,
	|	ДанныеСПД.НомерНакладной,
	|	ДанныеСПД.Корректировка,
	|	ДанныеСПД.ВалютаДокументаКод,
	|	ДанныеСПД.СуммаВВалютеДокумента,
	|	ДанныеСПД.ВалютаКонтрактаКод,
	|	ДанныеСПД.СуммаВВалютеКонтракта,
	|	ДанныеСПД.ОжидаемыйСрок,
	|	ДанныеСПД.ПризнакПоставки,
	|	ДанныеСПД.КодВидаПодтверждающегоДокумента,
	|	ДанныеСПД.ЭтоРучныеОперации
	|ИЗ
	|	ДанныеСПД КАК ДанныеСПД";

 	Запрос.УстановитьПараметр("СсылкиНаСправкиСПД", СсылкиНаСправкиСПД);
	Запрос.УстановитьПараметр("ПаспортСделки", КонтрактВЭД.ПаспортСделки);
	Запрос.УстановитьПараметр("ВалютаКонтракта", ВалютаКонтракта);
	
	//заполнение ДатаПодтверждающегоДокумента, НомерПодтверждающегоДокумента
	ТаблицаСПД = Запрос.Выполнить().Выгрузить();
	ТаблицаСПД.Колонки.Добавить("НомерПодтверждающегоДокумента", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	ТаблицаСПД.Колонки.Добавить("ДатаПодтверждающегоДокумента", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	Для Каждого СтрокаСПД Из ТаблицаСПД Цикл
		СтрокаСПД.НомерПодтверждающегоДокумента = РЭЙ_СлужебныйСервер.ПолучитьНомерПодтверждающегоДокумента(СтрокаСПД, СтрокаСПД.ЭтоРучныеОперации);
		СтрокаСПД.ДатаПодтверждающегоДокумента = РЭЙ_СлужебныйСервер.ПолучитьДатуПодтверждающегоДокумента(СтрокаСПД, СтрокаСПД.ЭтоРучныеОперации);
	КонецЦикла;
	ТаблицаСПД.Сортировать("ДатаПодтверждающегоДокумента");

	//Вывод в табличный документ
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("Раздел3_Шапка");
	ТабДокумент2.Вывести(Область);

	Если ТаблицаСПД.Количество() > 0 Тогда 		
		НомерСтроки = 0;
		Для Каждого СтрокаСПД Из ТаблицаСПД Цикл
			НомерСтроки = НомерСтроки + 1;
			СтрокаСПД.НомерСтроки = НомерСтроки;
			Область = Макет.ПолучитьОбласть("Раздел3_Строка");
			Область.Параметры.Заполнить(СтрокаСПД);
			
			Если ЗначениеЗаполнено(СтрокаСПД.ПризнакПоставки) Тогда
				Область.Параметры.ПризнакПоставки = Лев(СтрокаСПД.ПризнакПоставки, 1);
			КонецЕсли;			
			
			ТабДокумент2.Вывести(Область);
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Раздел3_Подвал");
		Область.Параметры.ВалютаКонтрактаКод = ВалютаКонтракта.Код;
		Область.Параметры.СуммаВВалютеКонтракта  = ТаблицаСПД.Итог("СуммаВВалютеКонтракта");
		ТабДокумент2.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("Раздел3_Строка");
		ТабДокумент2.Вывести(Область);
	КонецЕсли;
	
	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;		
	ТабДокумент.Вывести(ТабДокумент2);
	
	//Сохраняем таблицу для раздела 5
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСПД.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСПД.ВидДокумента,
	|	ТаблицаСПД.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта
	|ПОМЕСТИТЬ ДанныеСПД_ДляРаздела5
	|ИЗ
	|	&ТаблицаСПД КАК ТаблицаСПД";
	Запрос.УстановитьПараметр("ТаблицаСПД", ТаблицаСПД);
	Запрос.Выполнить();
КонецПроцедуры

Процедура Печать2012_Раздел4(ТабДокумент, МенеджерВТ, Макет)
	ТабДокумент2 = Новый ТабличныйДокумент;	
	Область4раздел= Макет.ПолучитьОбласть("Раздел4_1");
	ТабДокумент2.Вывести(Область4раздел);
	
	//Запрос = Новый Запрос;
	//Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	//
	//Запрос4Раздела = Новый Запрос;
	//Запрос4Раздела.Текст =
	//"ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	Данные2Раздела.ВидВалютнойОперации,
	//|	Данные2Раздела.СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела
	//|ИЗ
	//|	&Данные2Раздела КАК Данные2Раздела
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	СУММА(Данные2Раздела.СуммаВВалютеЦены) КАК СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела_1
	//|ИЗ
	//|	Данные2Раздела КАК Данные2Раздела
	//|ГДЕ
	//|	Данные2Раздела.ВидВалютнойОперации В(&ВидыВалютныхОпераций)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Данные2Раздела.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) КАК ОжидаемыйСрок,
	//|	СУММА(ЕСТЬNULL(Данные2Раздела.СуммаВВалютеЦены, 0)) КАК СуммаОжидаемаяЗачислено
	//|ПОМЕСТИТЬ Данные2Раздела_2
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_1 КАК Данные2Раздела
	//|		ПО (ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) >= Данные2Раздела.ОжидаемыйСрок)
	//|ГДЕ РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок КАК ДатаРасчетногоДокумента,
	//|	СУММА(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.СуммаВВалютеКонтракта) КАК СуммаИсполненныхИнымСпособом,
	//|	СУММА(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.СуммаВВалютеКонтракта) КАК ОжидаемаяСуммаПоступлений
	//|ПОМЕСТИТЬ таблицаДанных
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1
	//|		ПО РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.ОжидаемыйСрок
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.ВидДокумента В (ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПрекращениеОбязательствНерезидентаПередачейРезидентуЦенныхБумаг), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ИныеСпособыИсполненияОбязательствНерезидентаПередРезидентом)))
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка.ПаспортСделки = &ПаспортСделки)
	//|			И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В (&ВидКонтрактаВЭД))
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2
	//|		ПО РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ОжидаемыйСрок
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ВидДокумента В (ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ВывозСТерриторииРФТоваровПоГТД), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ОтгрузкаТоваровПриВывозеСТерриторииРФБезГТД), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПередачаРезидентомНаТерриторииРФТоваровИУслугНерезидентуГСМ), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ВыполненныеРезидентомРаботыУслугиПереданныеПрава)))
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка.ПаспортСделки = &ПаспортСделки)
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ПризнакПоставки = &ПризнакПоставки)
	//|			И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В (&ВидКонтрактаВЭД))
	//|ГДЕ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) КАК ДатаРасчетногоДокумента,
	//|	СУММА(ЕСТЬNULL(таблицаДанных1.СуммаИсполненныхИнымСпособом, 0)) КАК СуммаОбязательствИИС,
	//|	СУММА(ЕСТЬNULL(таблицаДанных1.ОжидаемаяСуммаПоступлений, 0)) КАК СуммаПоступленийОжидаемая,
	//|	ЕСТЬNULL(данные2Раздела_2.СуммаОжидаемаяЗачислено, 0) КАК СуммаОжидаемаяЗачислено
	//|ИЗ
	//|	таблицаДанных КАК таблицаДанных
	//|		ЛЕВОЕ СОЕДИНЕНИЕ таблицаДанных КАК таблицаДанных1
	//|		ПО таблицаДанных.ДатаРасчетногоДокумента >= таблицаДанных1.ДатаРасчетногоДокумента
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_2 КАК данные2Раздела_2
	//|		ПО (ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) = данные2Раздела_2.ОжидаемыйСрок)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	таблицаДанных.ДатаРасчетногоДокумента,
	//|	ЕСТЬNULL(данные2Раздела_2.СуммаОжидаемаяЗачислено, 0)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ДатаРасчетногоДокумента
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ данные2Раздела
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_1
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_2
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ таблицаДанных";
	//
	//
	//
	////Запрос4раздела.УстановитьПараметр("Данные2Раздела", данные2Раздела);
	//Запрос4раздела.УстановитьПараметр("ПаспортСделки", ПаспортСделки);
	//Запрос4раздела.УстановитьПараметр("ПризнакПоставки", перечисления.РЭЙ_ПризнакиПоставки.ПредоставлениеРезидентомОтсрочкиОплатыНерезиденту);
	//
	//ВидКонтрактаВЭД = Новый Массив;
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВывозТоваровСТаможеннойТерриторииРФ);
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВыполнениеРаботРезидентом);
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.СмешаннаяСделка);
	//
	//Запрос4раздела.УстановитьПараметр("ВидКонтрактаВЭД", ВидКонтрактаВЭД);
	//	
	//ВидыВалютныхОпераций = Новый Массив;
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10200"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20200"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22200"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22210"));
	//Запрос4раздела.УстановитьПараметр("ВидыВалютныхОпераций", ВидыВалютныхОпераций);
	//Рез4Раздела = Запрос4раздела.Выполнить().Выбрать();
	//
	//
	//НомерПоПорядку = 1;
	//
	//_Фл = Ложь;
	//Пока Рез4раздела.Следующий() Цикл
	//	_Фл = Истина;
	//	Область4Строка = Макет.ПолучитьОбласть("Строка4_1");
	//	Область4строка.Параметры.Заполнить(Рез4Раздела);
	//	Область4строка.Параметры.НомерСтроки = НомерПоПорядку;
	//	Область4Строка.Параметры.СуммаНедопоступления =  Рез4раздела.СуммаПоступленийОжидаемая - 
	//	Рез4раздела.СуммаОжидаемаяЗачислено  -  Рез4раздела.СуммаОбязательствИИС;
	//	Область4Строка.Параметры.КодВалКонтракт = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
	//	ТабДокумент2.Вывести(Область4Строка);
	//	
	//	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
	//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;			
	//	
	//	НомерПоПорядку = НомерПоПорядку + 1;		
	//КонецЦикла;
	_Фл = Ложь;
	Если Не _Фл Тогда
		Область4Строка = Макет.ПолучитьОбласть("Строка4_1");
		ТабДокумент2.Вывести(Область4Строка);
	КонецЕсли;
	ТабДокумент.Вывести(ТабДокумент2);	
	
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	Область4раздел= Макет.ПолучитьОбласть("Раздел4_2");
	ТабДокумент2.Вывести(Область4раздел);
	
	//
	//Запрос4Раздела = Новый Запрос;
	//Запрос4Раздела.Текст =
	//"ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	Данные2Раздела.ВидВалютнойОперации,
	//|	Данные2Раздела.СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела
	//|ИЗ
	//|	&Данные2Раздела КАК Данные2Раздела
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	СУММА(Данные2Раздела.СуммаВВалютеЦены) КАК СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела_1
	//|ИЗ
	//|	Данные2Раздела КАК Данные2Раздела
	//|ГДЕ
	//|	Данные2Раздела.ВидВалютнойОперации В(&ВидыВалютныхОпераций)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Данные2Раздела.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) КАК ОжидаемыйСрок,
	//|	СУММА(ЕСТЬNULL(Данные2Раздела.СуммаВВалютеЦены, 0)) КАК СуммаОжидаемаяЗачислено
	//|ПОМЕСТИТЬ Данные2Раздела_2
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_1 КАК Данные2Раздела
	//|		ПО (ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) >= Данные2Раздела.ОжидаемыйСрок)
	//|ГДЕ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|СГРУППИРОВАТЬ ПО
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Данные2Раздела.ОжидаемыйСрок,
	//|	СУММА(Данные2Раздела.СуммаВВалютеЦены) КАК СуммаВВалютеЦены
	//|ПОМЕСТИТЬ Данные2Раздела_21
	//|ИЗ
	//|	Данные2Раздела КАК Данные2Раздела
	//|ГДЕ
	//|	Данные2Раздела.ВидВалютнойОперации В(&ВидыВалютныхОпераций_2)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Данные2Раздела.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) КАК ОжидаемыйСрок,
	//|	СУММА(ЕСТЬNULL(Данные2Раздела.СуммаВВалютеЦены, 0)) КАК ВозвратИзлишнихСумм
	//|ПОМЕСТИТЬ Данные2Раздела_22
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_21 КАК Данные2Раздела
	//|		ПО (ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1) >= Данные2Раздела.ОжидаемыйСрок)
	//|ГДЕ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|   И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|СГРУППИРОВАТЬ ПО
	//|	ДОБАВИТЬКДАТЕ(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок, ДЕНЬ, 1)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок КАК ДатаРасчетногоДокумента,
	//|	СУММА(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.СуммаВВалютеКонтракта) КАК СуммаИсполненныхИнымСпособом,
	//|	СУММА(РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.СуммаВВалютеКонтракта) КАК ПолученоВСчетАванса
	//|ПОМЕСТИТЬ таблицаДанных
	//|ИЗ
	//|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1
	//|		ПО РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.ОжидаемыйСрок
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.ВидДокумента В (ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПрекращениеОбязательствРезидентаПередачейНерезидентуЦенныхБумаг), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ИныеСпособыИсполненияОбязательствРезидентаПередНерезидентом)))
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка.ПаспортСделки = &ПаспортСделки)
	//|			И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы1.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В (&ВидКонтрактаВЭД))
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2
	//|		ПО РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ОжидаемыйСрок
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ВидДокумента В (ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ВвозНаТерриториюРФТоваровПоГТД), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПолучениеТоваровПриВвозеНаТерриториюРФБезГТД), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ПолучениеРезидентомЗаПределамиТерриторииРФТоваровИУслугОтНерезидентаГСМ), ЗНАЧЕНИЕ(Справочник.РЭЙ_ВидыПодтверждающихДокументов.ВыполненныеНерезидентомРаботыУслугиПереданныеПрава)))
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка.ПаспортСделки = &ПаспортСделки)
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.ПризнакПоставки = &ПризнакПоставки)
	//|			И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка = РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка
	//|			И (РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы2.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В (&ВидКонтрактаВЭД))
	//|ГДЕ
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.ПаспортСделки = &ПаспортСделки
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.КонтрактВЭД.ВидКонтрактаВЭД В(&ВидКонтрактаВЭД)
	//|	И РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.Ссылка.Проведен
	//|СГРУППИРОВАТЬ ПО
	//|	РЭЙ_СправкаОПодтверждающихДокументахПодтверждающиеДокументы.ОжидаемыйСрок
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) КАК ДатаРасчетногоДокумента,
	//|	СУММА(ЕСТЬNULL(таблицаДанных1.СуммаИсполненныхИнымСпособом, 0)) КАК СуммаОбязательствИИС,
	//|	СУММА(ЕСТЬNULL(таблицаДанных1.ПолученоВСчетАванса, 0)) КАК ПолученоВСчетАванса,
	//|	ЕСТЬNULL(данные2Раздела_2.СуммаОжидаемаяЗачислено, 0) КАК СуммаПогашенияАвансаОжидаемая,
	//|	ЕСТЬNULL(данные2Раздела_22.ВозвратИзлишнихСумм, 0) КАК ВозвратИзлишнихСумм
	//|ИЗ
	//|	таблицаДанных КАК таблицаДанных
	//|		ЛЕВОЕ СОЕДИНЕНИЕ таблицаДанных КАК таблицаДанных1
	//|		ПО таблицаДанных.ДатаРасчетногоДокумента >= таблицаДанных1.ДатаРасчетногоДокумента
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_2 КАК данные2Раздела_2
	//|		ПО (ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) = данные2Раздела_2.ОжидаемыйСрок)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Данные2Раздела_22 КАК данные2Раздела_22
	//|		ПО (ДОБАВИТЬКДАТЕ(таблицаДанных.ДатаРасчетногоДокумента, ДЕНЬ, 1) = данные2Раздела_22.ОжидаемыйСрок)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	таблицаДанных.ДатаРасчетногоДокумента,
	//|	ЕСТЬNULL(данные2Раздела_2.СуммаОжидаемаяЗачислено, 0),
	//|	ЕСТЬNULL(данные2Раздела_22.ВозвратИзлишнихСумм, 0)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ДатаРасчетногоДокумента
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ данные2Раздела
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_21
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_2
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ Данные2Раздела_22
	//|;
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ таблицаДанных";
	//
	//Запрос4раздела.УстановитьПараметр("Данные2Раздела", "Данные2Раздела");
	//Запрос4раздела.УстановитьПараметр("ПризнакПоставки", Перечисления.РЭЙ_ПризнакиПоставки.ИсполнениеНерезидентомОбязательствВСчетАвансаОтРезидента);
	//Запрос4раздела.УстановитьПараметр("ПаспортСделки", ПаспортСделки);	
	//
	//ВидКонтрактаВЭД = Новый Массив;
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВвозТоваровНаТаможеннуюТерриториюРФ);
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.ВыполнениеРаботНерезидентом);
	//ВидКонтрактаВЭД.Добавить(Перечисления.РЭЙ_ВидыКонтрактовВЭД.СмешаннаяСделка);
	//
	//Запрос4раздела.УстановитьПараметр("ВидКонтрактаВЭД", ВидКонтрактаВЭД);	
	
	//СписокВидовДокументовПолученоВСчетАванса= Новый Массив;
	//СписокВидовДокументовПолученоВСчетАванса.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ВвозНаТерриториюРФТоваровПоГТД);
	//СписокВидовДокументовПолученоВСчетАванса.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ПолучениеТоваровПриВвозеНаТерриториюРФБезГТД);
	//СписокВидовДокументовПолученоВСчетАванса.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ПолучениеРезидентомЗаПределамиТерриторииРФТоваровИУслугОтНерезидентаГСМ);
	//СписокВидовДокументовПолученоВСчетАванса.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ВыполненныеНерезидентомРаботыУслугиПереданныеПрава);
	//Запрос4раздела.УстановитьПараметр("СписокВидовДокументовПолученоВСчетАванса", СписокВидовДокументовПолученоВСчетАванса);
	//
	//СписокВидовДокументовИсполненныхИнымСпособом = Новый Массив;
	// СписокВидовДокументовИсполненныхИнымСпособом.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ПрекращениеОбязательствРезидентаПередачейНерезидентуЦенныхБумаг);
	// СписокВидовДокументовИсполненныхИнымСпособом.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.ИныеСпособыИсполненияОбязательствРезидентаПередНерезидентом);
	//Запрос4раздела.УстановитьПараметр("СписокВидовДокументовИсполненныхИнымСпособом", СписокВидовДокументовИсполненныхИнымСпособом);
	//
	//ВидыВалютныхОпераций = Новый Массив;
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11100"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21100"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23100"));
	//ВидыВалютныхОпераций.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23110"));
	//Запрос4раздела.УстановитьПараметр("ВидыВалютныхОпераций", ВидыВалютныхОпераций);
	//
	//ВидыВалютныхОпераций_2 = Новый Массив;
	//ВидыВалютныхОпераций_2.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11900"));
	//ВидыВалютныхОпераций_2.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21900"));
	//ВидыВалютныхОпераций_2.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23900"));
	//ВидыВалютныхОпераций_2.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("99010"));
	//Запрос4раздела.УстановитьПараметр("ВидыВалютныхОпераций_2", ВидыВалютныхОпераций_2);
	//
	//Рез4Раздела = Запрос4раздела.Выполнить().Выбрать();
	//
	//НомерПоПорядку = 1;	
	//
	//_Фл = Ложь;
	//Пока Рез4раздела.Следующий() Цикл
	//	_Фл = Истина;
	//	Область4Строка = Макет.ПолучитьОбласть("Строка4_2");
	//	Область4строка.Параметры.Заполнить(Рез4Раздела);
	//	Область4строка.Параметры.НомерСтроки = НомерПоПорядку;	
	//	Область4Строка.Параметры.КодВалКонтракт = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;	
	//	Область4Строка.Параметры.СуммаНедопоступления = Рез4раздела.СуммаПогашенияАвансаОжидаемая - Рез4раздела.ПолученоВСчетАванса - Рез4раздела.ВозвратИзлишнихСумм - Рез4раздела.СуммаОбязательствИИС;
	//	ТабДокумент2.Вывести(Область4Строка);
	//	
	//	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
	//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;			
	//	
	//	НомерПоПорядку = НомерПоПорядку + 1;				
	//КонецЦикла;	
	_Фл = Ложь;
	Если Не _Фл Тогда
		Область4Строка = Макет.ПолучитьОбласть("Строка4_2");
		ТабДокумент2.Вывести(Область4Строка);
	КонецЕсли;
	
	ТабДокумент.Вывести(ТабДокумент2);

КонецПроцедуры

Процедура Печать2012_Раздел5(табДокумент, МенеджерВТ, Макет)
	ТабДокумент2 = Новый ТабличныйДокумент;
	
	Область5раздел= Макет.ПолучитьОбласть("Раздел5");
	ТабДокумент2.Вывести(Область5раздел);
		
	СписокВидовОперацийДляКолонки3 = Новый Массив;
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10100"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10200"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11900"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20100"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20200"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21500"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21900"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22100"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22110"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22200"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22210"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22300"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23900"));
	СписокВидовОперацийДляКолонки3.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("99010"));
	
	СписокВидовОперацийДляКолонки4 = Новый Массив;
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("10800"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11100"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("11200"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20500"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("20800"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21100"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("21200"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("22800"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23100"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23110"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23200"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23210"));
	СписокВидовОперацийДляКолонки4.Добавить(Справочники.РЭЙ_ВидыВалютныхОпераций.НайтиПоКоду("23300"));
	
	СписокВидовПодтверждающихДокументовДляКолонки5 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("01_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("02_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("03_3"));
	СписокВидовПодтверждающихДокументовДляКолонки5.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("04_3"));
	
	СписокВидовПодтверждающихДокументовДляКолонки6 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("01_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("02_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("03_4"));
	СписокВидовПодтверждающихДокументовДляКолонки6.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("04_4"));
	
	СписокВидовПодтверждающихДокументовДляКолонки7 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки7.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("10_3"));
	СписокВидовПодтверждающихДокументовДляКолонки7.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("13_3"));
	
	СписокВидовПодтверждающихДокументовДляКолонки8 = Новый Массив;
	СписокВидовПодтверждающихДокументовДляКолонки8.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("10_4"));
	СписокВидовПодтверждающихДокументовДляКолонки8.Добавить(Справочники.РЭЙ_ВидыПодтверждающихДокументов.НайтиПоКоду("13_4"));
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеСВО.ВидВалютнойОперации,
	|	ДанныеСВО.СуммаВВалютеКонтракта,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки3)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма3,
	|	ВЫБОР
	|		КОГДА ДанныеСВО.ВидВалютнойОперации В (&СписокВидовОперацийДляКолонки4)
	|			ТОГДА ДанныеСВО.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма4,
	|	0 КАК Сумма5,
	|	0 КАК Сумма6,
	|	0 КАК Сумма7,
	|	0 КАК Сумма8,
	|	ДанныеСВО.СуммаВВалютеКонтракта КАК СуммаСВО,
	|	0 КАК СуммаСПД,
	|	NULL КАК ВидДокумента,
	|	ДанныеСВО.НомерСтроки,
	|	1 КАК НомерТЧ
	|ПОМЕСТИТЬ ДанныеДляРаздела5
	|ИЗ
	|	ДанныеСВО_ДляРаздела5 КАК ДанныеСВО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ДанныеСПД.СуммаВВалютеКонтракта,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки5)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки6)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки7)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеСПД.ВидДокумента В (&СписокВидовПодтверждающихДокументовДляКолонки8)
	|			ТОГДА ДанныеСПД.СуммаВВалютеКонтракта
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	ДанныеСПД.СуммаВВалютеКонтракта,
	|	ДанныеСПД.ВидДокумента,
	|	ДанныеСПД.НомерСтроки,
	|	2
	|ИЗ
	|	ДанныеСПД_ДляРаздела5 КАК ДанныеСПД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляРаздела5.ВидВалютнойОперации,
	|	ДанныеДляРаздела5.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ДанныеДляРаздела5.Сумма3 КАК Сумма3,
	|	ДанныеДляРаздела5.Сумма4 КАК Сумма4,
	|	ДанныеДляРаздела5.Сумма5 КАК Сумма5,
	|	ДанныеДляРаздела5.Сумма6 КАК Сумма6,
	|	ДанныеДляРаздела5.Сумма7 КАК Сумма7,
	|	ДанныеДляРаздела5.Сумма8 КАК Сумма8,
	|	ДанныеДляРаздела5.СуммаСВО КАК СуммаСВО,
	|	ДанныеДляРаздела5.СуммаСПД КАК СуммаСПД,
	|	ДанныеДляРаздела5.ВидДокумента,
	|	ДанныеДляРаздела5.НомерСтроки КАК НомерСтроки,
	|	ДанныеДляРаздела5.НомерТЧ КАК НомерТЧ
	|ИЗ
	|	ДанныеДляРаздела5 КАК ДанныеДляРаздела5
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТЧ,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма3),
	|	СУММА(Сумма4),
	|	СУММА(Сумма5),
	|	СУММА(Сумма6),
	|	СУММА(Сумма7),
	|	СУММА(Сумма8)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки3", СписокВидовОперацийДляКолонки3);
	Запрос.УстановитьПараметр("СписокВидовОперацийДляКолонки4", СписокВидовОперацийДляКолонки4);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки5", СписокВидовПодтверждающихДокументовДляКолонки5);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки6", СписокВидовПодтверждающихДокументовДляКолонки6);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки7", СписокВидовПодтверждающихДокументовДляКолонки7);
	Запрос.УстановитьПараметр("СписокВидовПодтверждающихДокументовДляКолонки8", СписокВидовПодтверждающихДокументовДляКолонки8);
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Строка5Раздел = Макет.ПолучитьОбласть("Строка5");
	Строка5Раздел.Параметры.ДатаФормирования= ДатаОтчета;
	Строка5Раздел.Параметры.КодВалКонтракт = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код;
	
	Если ВыборкаИтоги.Следующий() Тогда	
		Строка5раздел.Параметры.Заполнить(ВыборкаИтоги);
		Строка5раздел.Параметры.СальдоРасчетов = (ВыборкаИтоги.Сумма5 - ВыборкаИтоги.Сумма3 - ВыборкаИтоги.Сумма7) - (ВыборкаИтоги.Сумма4 - ВыборкаИтоги.Сумма6 - ВыборкаИтоги.Сумма8);
		
		Выборка = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Если Выборка.СуммаСВО <> 0 Тогда
				Если Выборка.СуммаСВО <> Выборка.Сумма3 + Выборка.Сумма4 Тогда
					Сообщить("Возможно, ошибочный код валютной операции """ + СокрЛП(Выборка.ВидВалютнойОперации) + """ в строке " + Выборка.НомерСтроки + " раздела II, сумма " + Формат(Выборка.СуммаСВО, "ЧДЦ=2") + " не учитывается в Разделе V.");
				КонецЕсли;
			КонецЕсли;
			Если Выборка.СуммаСПД <> 0 Тогда
				Если Выборка.СуммаСПД <> Выборка.Сумма5 + Выборка.Сумма6 + Выборка.Сумма7 + Выборка.Сумма8 Тогда
					Сообщить("Возможно, ошибочный код подтверждающего документа """ + СокрЛП(Выборка.ВидДокумента) + """ в строке " + Выборка.НомерСтроки + " раздела III, сумма " + Формат(Выборка.СуммаСПД, "ЧДЦ=2") + " не учитывается в Разделе V.");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
	ТабДокумент2.Вывести(Строка5Раздел);
	
	Если НЕ ТабДокумент.ПроверитьВывод(ТабДокумент2) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;	
	
	ТабДокумент.Вывести(ТабДокумент2);
КонецПроцедуры

#КонецОбласти