
Функция Registration(IMEI, SettingsID)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_СостояниеПользователейСинхронизации.IMEI КАК IMEI,
	|	CRM_СостояниеПользователейСинхронизации.Пользователь КАК Пользователь
	|ИЗ
	|	РегистрСведений.CRM_СостояниеПользователейСинхронизации КАК CRM_СостояниеПользователейСинхронизации
	|ГДЕ
	|	CRM_СостояниеПользователейСинхронизации.Идентификатор = &SettingsID";
	Запрос.УстановитьПараметр("SettingsID", SettingsID);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		УстановитьПривилегированныйРежим(Ложь);
		Возврат "Пользователь с таким идентификатором не зарегистрирован";
	КонецЕсли;	
	
	НаборЗаписей = РегистрыСведений.CRM_СостояниеПользователейСинхронизации.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Идентификатор.Установить(SettingsID);
	НаборЗаписей.Прочитать();
	Для Каждого ЗаписьРегистра из НаборЗаписей Цикл
		ЗаписьРегистра.IMEI = IMEI;
	КонецЦикла;
	НаборЗаписей.Записать(Истина);
	СтрокаНастроек = CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьФайлНастроекПользователя(SettingsID);
	УстановитьПривилегированныйРежим(Ложь);
	Возврат XMLСтрока(СтрокаНастроек);
КонецФункции

Функция GetSettings(SettingsID)
	УстановитьПривилегированныйРежим(Истина);
	СтрокаНастроек = CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьФайлНастроекПользователя(SettingsID);
	УстановитьПривилегированныйРежим(Ложь);
	Возврат XMLСтрока(СтрокаНастроек); 
КонецФункции


Функция PutData(SettingsID, Data)
	УстановитьПривилегированныйРежим(Истина);
	ФайлЗагрузки = ПолучитьИмяВременногоФайла("xml");
	Data.Записать(ФайлЗагрузки);
	ОбработкаЗагрузки = Обработки.CRM_УниверсальныйОбменДаннымиXML.Создать();
	ОбработкаЗагрузки.ИмяФайлаОбмена = ФайлЗагрузки;
	ОбработкаЗагрузки.БезопаснаяЗагрузка = Ложь;
	ОбработкаЗагрузки.ЗагружатьДанныеВРежимеОбмена = Истина;
	ОбработкаЗагрузки.ОптимизированнаяЗаписьОбъектов = Истина;
	ОбработкаЗагрузки.ЗаписыватьРегистрыНаборамиЗаписей = Истина;
	ОбработкаЗагрузки.РежимОбмена = "Загрузка";
	РезультатЗагрузки = ОбработкаЗагрузки.ВыгрузитьДанныеCRM();
	УдалитьФайлы(ФайлЗагрузки);
	УстановитьПривилегированныйРежим(Ложь);
	Если РезультатЗагрузки Тогда
		Возврат "Данные успешно загружены";
	Иначе
		Возврат "Данные не загружены";	
	КонецЕсли;	
КонецФункции


Функция GetData(DataID)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеДляВыгрузкиВiCRM.ИдентификаторФайла КАК ИдентификаторФайла,
	|	ДанныеДляВыгрузкиВiCRM.Размер КАК Размер,
	|	ДанныеДляВыгрузкиВiCRM.ДанныеФайла КАК ДанныеФайла,
	|	ДанныеДляВыгрузкиВiCRM.ВремяФайла КАК ВремяФайла
	|ИЗ
	|	РегистрСведений.CRM_ДанныеДляВыгрузкиВiCRM КАК ДанныеДляВыгрузкиВiCRM
	|ГДЕ
	|	ДанныеДляВыгрузкиВiCRM.ИдентификаторФайла = &DataID
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДляВыгрузкиВiCRM.ВремяФайла";
	Запрос.УстановитьПараметр("DataID", DataID);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		УстановитьПривилегированныйРежим(Ложь);
		Возврат "Нет данных для выгрузки";
	КонецЕсли;	
	Выборка = Результат.Выгрузить();
	Если Выборка.Количество() > 0 Тогда
		Для Каждого Строка Из Выборка Цикл
			ДанныеВыгрузки = Строка.ДанныеФайла.Получить();
			Возврат ДанныеВыгрузки; 
		КонецЦикла;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	Возврат "Нет данных для выгрузки";
КонецФункции

Функция GetDataID(SettingsID)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_СостояниеПользователейСинхронизации.IMEI КАК IMEI,
	|	CRM_СостояниеПользователейСинхронизации.Пользователь КАК Пользователь
	|ИЗ
	|	РегистрСведений.CRM_СостояниеПользователейСинхронизации КАК CRM_СостояниеПользователейСинхронизации
	|ГДЕ
	|	CRM_СостояниеПользователейСинхронизации.Идентификатор = &SettingsID";
	Запрос.УстановитьПараметр("SettingsID", SettingsID);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		УстановитьПривилегированныйРежим(Ложь);
		Возврат "Нет данных для выгрузки";
	КонецЕсли;	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДанныеДляВыгрузкиВiCRM.ИдентификаторФайла КАК ИдентификаторФайла,
		|	ДанныеДляВыгрузкиВiCRM.Размер КАК Размер,
		|	ДанныеДляВыгрузкиВiCRM.ДанныеФайла КАК ДанныеФайла,
		|	ДанныеДляВыгрузкиВiCRM.ВремяФайла КАК ВремяФайла
		|ИЗ
		|	РегистрСведений.CRM_ДанныеДляВыгрузкиВiCRM КАК ДанныеДляВыгрузкиВiCRM
		|ГДЕ
		|	ДанныеДляВыгрузкиВiCRM.УзелОбмена = &УзелОбмена
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДанныеДляВыгрузкиВiCRM.ВремяФайла";
		УзелОбмена = ПланыОбмена.CRM_СинхронизацияСМобильнымПриложениемНовый.НайтиПоКоду(SettingsID);
		Запрос.УстановитьПараметр("УзелОбмена", УзелОбмена);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			УстановитьПривилегированныйРежим(Ложь);
			Возврат "Нет данных для выгрузки";
		КонецЕсли;	
		Выборка = Результат.Выгрузить();
		Если Выборка.Количество() > 0 Тогда
			ДанныеВыгрузки = Новый ЗаписьXML;
			ДанныеВыгрузки.УстановитьСтроку();
			ДанныеВыгрузки.ЗаписатьНачалоЭлемента("IDStruc");
			Для Каждого Строка Из Выборка Цикл
				ДанныеВыгрузки.ЗаписатьНачалоЭлемента("ID");
				ДанныеВыгрузки.ЗаписатьАтрибут("Value", Строка.ИдентификаторФайла);
				ДанныеВыгрузки.ЗаписатьКонецЭлемента(); 
			КонецЦикла;
			ДанныеВыгрузки.ЗаписатьКонецЭлемента();
			УстановитьПривилегированныйРежим(Ложь);
			Возврат ДанныеВыгрузки.Закрыть();
		КонецЕсли;
		УстановитьПривилегированныйРежим(Ложь);
		Возврат "Нет данных для выгрузки";
	КонецЕсли;	
	УстановитьПривилегированныйРежим(Ложь);	
	Возврат "Нет данных для выгрузки";

КонецФункции

Функция PutConfirmation(DataID)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеДляВыгрузкиВiCRM.ИдентификаторФайла КАК ИдентификаторФайла,
	|	ДанныеДляВыгрузкиВiCRM.Размер КАК Размер,
	|	ДанныеДляВыгрузкиВiCRM.ДанныеФайла КАК ДанныеФайла,
	|	ДанныеДляВыгрузкиВiCRM.ВремяФайла КАК ВремяФайла
	|ИЗ
	|	РегистрСведений.CRM_ДанныеДляВыгрузкиВiCRM КАК ДанныеДляВыгрузкиВiCRM
	|ГДЕ
	|	ДанныеДляВыгрузкиВiCRM.ИдентификаторФайла = &DataID
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДляВыгрузкиВiCRM.ВремяФайла";
	Запрос.УстановитьПараметр("DataID", DataID);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		УстановитьПривилегированныйРежим(Ложь);
		Возврат "Нет данных для выгрузки";
	КонецЕсли;
	НаборРегистра = РегистрыСведений.CRM_ДанныеДляВыгрузкиВiCRM.СоздатьНаборЗаписей();
	НаборРегистра.Отбор.ИдентификаторФайла.Установить(DataID);
	НаборРегистра.Записать(Истина);
	Возврат "Принято";
КонецФункции


