
Процедура ПриЗаписи(Отказ)
	СтруктураЗаписи = Новый Структура;
	СтруктураЗаписи.Вставить("ИмяПланаОбмена",  "CRM_СинхронизацияСМобильнымПриложениемНовый");
	СтруктураЗаписи.Вставить("ВидПравил",       Перечисления.ВидыПравилДляОбменаДанными.ПравилаРегистрацииОбъектов);
	СтруктураЗаписи.Вставить("ИмяМакетаПравил", "ПравилаРегистрации");
	СтруктураЗаписи.Вставить("ИсточникПравил",  Перечисления.ИсточникиПравилДляОбменаДанными.МакетКонфигурации);
	СтруктураЗаписи.Вставить("ИспользоватьФильтрВыборочнойРегистрацииОбъектов", Истина);
	
	// Получаем набор записей регистра.
	
	НаборЗаписей = СоздатьНаборЗаписейРегистраСведений(СтруктураЗаписи, "ПравилаДляОбменаДанными");
	
	// Добавляем только одну запись в новый набор записей.
	НоваяЗапись = НаборЗаписей.Добавить();
	
	// Заполняем значения свойств записи из структуры.
	ЗаполнитьЗначенияСвойств(НоваяЗапись, СтруктураЗаписи);
	
	// Загружаем правила для обмена данными в ИБ.
	РегистрыСведений.ПравилаДляОбменаДанными.ЗагрузитьПравила(Отказ, НаборЗаписей[0]);
	
	Если Не Отказ Тогда
		НаборЗаписей.Записать();
	КонецЕсли;
КонецПроцедуры

Функция СоздатьНаборЗаписейРегистраСведений(СтруктураЗаписи, ИмяРегистра)
	
	МетаданныеРегистра = Метаданные.РегистрыСведений[ИмяРегистра];
	
	// Создаем набор записей регистра.
	НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
	
	// Устанавливаем отбор по измерениям регистра.
	Для Каждого Измерение Из МетаданныеРегистра.Измерения Цикл
		
		// Если задано значение в структуре, то отбор устанавливаем.
		Если СтруктураЗаписи.Свойство(Измерение.Имя) Тогда
			
			НаборЗаписей.Отбор[Измерение.Имя].Установить(СтруктураЗаписи[Измерение.Имя]);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НаборЗаписей;
КонецФункции

Процедура ПередЗаписью(Отказ)
	МассивДоступныеПользователи = CRM_СинхронизацияСiCRMНовый.ПолучитьСписокДоступныхПользователейДляОбмена(Пользователь);
	ДоступныеПользователи.Очистить();
	Для Каждого ДоступныйПользователь Из МассивДоступныеПользователи Цикл
		Стр = ДоступныеПользователи.Добавить();
		Стр.Пользователь = ДоступныйПользователь;
	КонецЦикла;	
КонецПроцедуры


