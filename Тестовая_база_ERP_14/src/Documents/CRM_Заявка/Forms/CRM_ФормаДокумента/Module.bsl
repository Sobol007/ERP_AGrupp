
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	
	Если Объект.Ссылка.Пустая() Тогда
		Если Параметры.Свойство("ИсточникПолучения") Тогда
			Объект.ИсточникПолучения = Параметры.ИсточникПолучения;
			ИсточникПолученияПриИзмененииНаСервере();
		КонецЕсли;	
		Если Параметры.Свойство("Мероприятие") Тогда
			Объект.ДокументОснование = Параметры.Мероприятие;
			Объект.Тема = Объект.ДокументОснование.Наименование;
		КонецЕсли;	
		Если Параметры.Свойство("Контакт") Тогда
			Объект.Контакт = Параметры.Контакт;
			Объект.Наименование = Объект.Контакт.Наименование;
			Стр = Объект.Контакт.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Телефон,"Тип");
			Если Стр <> Неопределено Тогда
				Объект.Телефон = Стр.Представление;
			КонецЕсли;	
			Стр = Объект.Контакт.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,"Тип");
			Если Стр <> Неопределено Тогда
				Объект.ЭлектроннаяПочта = Стр.Представление;;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	
	// Лиды
	Если РегистрыСведений.CRM_СостоянияЛидов.СсылкаЯвляетсяЛидом(Объект.Ссылка) Тогда
		СтруктураСостоянияЛида = РегистрыСведений.CRM_СостоянияЛидов.ПолучитьТекущееСостояниеЛида(Объект.Ссылка);
		Если СтруктураСостоянияЛида = Неопределено Тогда
			Элементы.ГруппаСостояниеЛида.Видимость = Ложь;
		Иначе
			СостояниеЛида = СтруктураСостоянияЛида.Состояние;
			Если Не СостояниеЛида = Справочники.CRM_СостоянияЛидов.Новый Тогда
				Элементы.ФормаПринятьОбращение.Доступность = Ложь;
				Элементы.ФормаОтклонитьОбращение.Доступность = Ложь;
			КонецЕсли;
			Если СостояниеЛида = Справочники.CRM_СостоянияЛидов.Отклонен Тогда
				ПричинаОтклоненияЛида = СтруктураСостоянияЛида.ПричинаОтклонения;
				КомментарийСостоянияЛида = СтруктураСостоянияЛида.Комментарий;
			Иначе
				ЛидСконвертированВОбъект = СтруктураСостоянияЛида.СконвертированВОбъект;
				Элементы.ЛидСконвертированВОбъект.Видимость = ЗначениеЗаполнено(ЛидСконвертированВОбъект);
				Элементы.ПричинаОтклонения.Видимость = Ложь;
				Элементы.КомментарийСостоянияЛида.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Элементы.ГруппаСостояниеЛида.Видимость = Ложь;
		Элементы.ФормаОтклонитьОбращение.Видимость = Ложь;
	КонецЕсли;
	
	CRM_ОбщегоНазначенияСервер.СоздатьНеобходимыеРеквизитыИЭлементыДляГруппыИнтерес(ЭтотОбъект, Объект, "ГруппаИнтерес", ТипЗнч(Объект.Ссылка));
	CRM_ОбщегоНазначенияСервер.ЗаполнитьГруппуИнтересаВФормеДокумента(Объект, ЭтотОбъект, Истина, , ТипЗнч(Объект.Ссылка), Объект.Ссылка.Пустая());
	CRM_ОбщегоНазначенияСервер.ЗаполнитьНадписьВСтрокеИнтереса(ЭтотОбъект, Объект);
	Если Объект.ДополнительныеРеквизиты.Количество() = 0 Тогда
		Элементы.ДополнительныеРеквизиты.Видимость = Ложь;
	КонецЕсли;
	//Если НЕ Объект.Ссылка.Пустая() Тогда
	//	Элементы.Ответственный.ТолькоПросмотр = Истина;
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	CRM_ТаблицаИнтересовЗнач = РеквизитФормыВЗначение("CRM_ТаблицаИнтересов",Тип("ТаблицаЗначений"));
	ТекущийОбъект.ДополнительныеСвойства.Вставить("CRM_ТаблицаИнтересов",CRM_ТаблицаИнтересовЗнач);	

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновитьАРМ");
КонецПроцедуры

&НаСервере
Процедура ИсточникПолученияПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.ИсточникПолучения) Тогда
		Объект.Ответственный = Объект.ИсточникПолучения.ОтветственныйМенеджер;
		Объект.CRM_РольОтветственного = Объект.ИсточникПолучения.CRM_РольОтветственного;
		Элементы.ФормаОтклонитьОбращение.Видимость = Объект.ИсточникПолучения.CRM_ИсточникЛидов;
		Объект.ДополнительныеРеквизиты.Очистить();
		Для Каждого Строка Из Объект.ИсточникПолучения.ДополнительныеРеквизиты Цикл
			Стр = Объект.ДополнительныеРеквизиты.Добавить();
			Стр.Свойство = Строка.Свойство;
		КонецЦикла;	
		Объект.ИсточникПервичногоИнтереса = Объект.ИсточникПолучения.ИсточникПервичногоИнтереса;
		Объект.КаналПервичногоИнтереса = Объект.ИсточникПолучения.КаналПервичногоИнтереса;
	КонецЕсли;
	
	Если Объект.ДополнительныеРеквизиты.Количество() = 0 Тогда
		Элементы.ДополнительныеРеквизиты.Видимость = Ложь;
	Иначе	
		Элементы.ДополнительныеРеквизиты.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсточникПолученияПриИзменении(Элемент)
	ИсточникПолученияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Позвонить(Команда)
	// +СофтФон
	сфпСофтФонПроКлиентПереопределяемый.сфпПодключаемый_ПозвонитьНаНомер(ЭтотОбъект, Объект);	
	// -СофтФон
КонецПроцедуры

&НаКлиенте
Процедура НаписатьПисьмо(Команда)
	Если НЕ ЗначениеЗаполнено(СокрЛП(Объект.ЭлектроннаяПочта)) Тогда
		Возврат;
	КонецЕсли;
		
	СписокАдресов = Новый СписокЗначений;
	СписокАдресов.Добавить(Объект.Наименование, Объект.ЭлектроннаяПочта);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("СписокАдресов", СписокАдресов);
			
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ПринятьОбращение(Команда)
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заявка", Объект.Ссылка);	
	ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма", ПараметрыФормы,,, ,, ,);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КонтактПриИзменении(Элемент)
	ЗаполнитьГруппуИнтересаВФормеДокументаНаСервере(Истина);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГруппуИнтересаВФормеДокументаНаСервере(ИзмененКлиентКонтакт = Ложь)
	
	CRM_ОбщегоНазначенияСервер.ЗаполнитьГруппуИнтересаВФормеДокумента(Объект, ЭтотОбъект, , ИзмененКлиентКонтакт, ТипЗнч(Объект.Ссылка), Объект.Ссылка.Пустая());
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИнтересНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Клиент) Тогда
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ПометкаУдаления", Ложь);
		СтруктураОтбора.Вставить("Партнер", ЭтотОбъект.Клиент);
		
		ПараметрыФормыВыбора = Новый Структура;
		ПараметрыФормыВыбора.Вставить("РежимВыбора"			, Истина);
		ПараметрыФормыВыбора.Вставить("МножественныйВыбор"	, Ложь);
		ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе"	, Истина);
		ПараметрыФормыВыбора.Вставить("Отбор"				, СтруктураОтбора);
		ПараметрыФормыВыбора.Вставить("ЭтоВыборИнтереса"	, Истина);		
		
		ОткрытьФорму("Документ.CRM_Интерес.Форма.ФормаСписка", ПараметрыФормыВыбора, Элемент, УникальныйИдентификатор);
	Иначе
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ПометкаУдаления", Ложь);
		
		ПараметрыФормыВыбора = Новый Структура;
		ПараметрыФормыВыбора.Вставить("РежимВыбора"			, Истина);
		ПараметрыФормыВыбора.Вставить("МножественныйВыбор"	, Ложь);
		ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе"	, Истина);
		ПараметрыФормыВыбора.Вставить("Отбор"				, СтруктураОтбора);
		ПараметрыФормыВыбора.Вставить("ЭтоВыборИнтереса"	, Истина);		
		
		ОткрытьФорму("Документ.CRM_Интерес.Форма.ФормаСписка", ПараметрыФормыВыбора, Элемент, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИнтересОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка		= Ложь;
	CRM_ДобавитьИнтересНаСервере(ВыбранноеЗначение, Истина);
	ЭтотОбъект.CRM_ИнтересСтрокой	= CRM_ОбщегоНазначенияСервер.СформироватьПредставлениеИнтересаСтрокой(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИнтересОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЭтотОбъект.CRM_ТаблицаИнтересов[0].ВведенНаОсновании Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.CRM_ТаблицаИнтересов.Количество() > 0 Тогда
		ЭтотОбъект.CRM_ТаблицаИнтересов.Удалить(0);
	КонецЕсли;
	
	Если ЭтотОбъект.CRM_ТаблицаИнтересов.Количество() > 0 Тогда
		ЭтотОбъект.CRM_ИнтересСтрокой = CRM_ОбщегоНазначенияСервер.СформироватьПредставлениеИнтересаСтрокой(ЭтотОбъект.CRM_ТаблицаИнтересов[0].Ссылка);
	Иначе
		ЭтотОбъект.CRM_ИнтересСтрокой = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИнтересОткрытие(Элемент, СтандартнаяОбработка)
	
	CRM_ОбщегоНазначенияКлиент.Подключаемый_ИнтересОткрытие(Элемент, СтандартнаяОбработка, ЭтотОбъект.CRM_ТаблицаИнтересов);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_CRM_ТаблицаИнтересовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ Элементы.CRM_ТаблицаИнтересов.ТекущиеДанные = Неопределено Тогда
		ПоказатьЗначение(,Элементы.CRM_ТаблицаИнтересов.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_CRM_ТаблицаИнтересовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ПометкаУдаления", Ложь);
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимВыбора"			, Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор"	, Ложь);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе"	, Истина);
	ПараметрыФормыВыбора.Вставить("Отбор"				, СтруктураОтбора);
	
	ОткрытьФорму("Документ.CRM_Интерес.Форма.ФормаСписка", ПараметрыФормыВыбора, Элемент, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура CRM_ДобавитьИнтересНаСервере(ВыбранноеЗначение,ВНачало = Ложь)
	
	МассивСтрок = ЭтотОбъект.CRM_ТаблицаИнтересов.НайтиСтроки(новый Структура("Ссылка",ВыбранноеЗначение));
	
	Если МассивСтрок.Количество() = 0 Тогда
		Если ВНачало Тогда
			НоваяСтрока = ЭтотОбъект.CRM_ТаблицаИнтересов.Вставить(0);
		Иначе
			НоваяСтрока = ЭтотОбъект.CRM_ТаблицаИнтересов.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыбранноеЗначение);
	ИначеЕсли ВНачало Тогда
		ЭтотОбъект.CRM_ТаблицаИнтересов.Сдвинуть(ЭтотОбъект.CRM_ТаблицаИнтересов.Индекс(МассивСтрок[0]),-ЭтотОбъект.CRM_ТаблицаИнтересов.Индекс(МассивСтрок[0]));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_CRM_ТаблицаИнтересовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка		= Ложь;
	CRM_ДобавитьИнтересНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СкрытьПоказатьИнтересы(Команда)
	
	Элементы.СкрытьПоказатьИнтересы.Пометка = НЕ Элементы.СкрытьПоказатьИнтересы.Пометка;
	Элементы.ГруппаCRM_ТаблицаИнтересов.Видимость = Элементы.СкрытьПоказатьИнтересы.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_CRM_ТаблицаИнтересовПередУдалением(Элемент, Отказ)
	
	Если НЕ Элементы.CRM_ТаблицаИнтересов.ТекущиеДанные = Неопределено Тогда
		Отказ = Элементы.CRM_ТаблицаИнтересов.ТекущиеДанные.ВведенНаОсновании;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_CRM_ТаблицаИнтересовПослеУдаления(Элемент)
	

	Если ЭтотОбъект.CRM_ТаблицаИнтересов.Количество() > 0 Тогда
		ЭтотОбъект.CRM_ИнтересСтрокой = CRM_ОбщегоНазначенияСервер.СформироватьПредставлениеИнтересаСтрокой(ЭтотОбъект.CRM_ТаблицаИнтересов[0].Ссылка);
	Иначе
		ЭтотОбъект.CRM_ИнтересСтрокой = "";
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьОбращение(Команда)
	Если НЕ Объект.Ссылка.Пустая() Тогда
		Если УказыватьПричинуОтклонения(Объект.Ссылка) Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ОтклонитьОбращениеЗавершение", ЭтотОбъект, Объект.Ссылка);
			ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма.ФормаПотериОбращения", , ЭтотОбъект,, ВариантОткрытияОкна.ОтдельноеОкно,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе	
			ОтклонитьОбращениеЗавершение(Истина, Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьОбращениеЗавершение(Результат, Ссылка) Экспорт
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли ТипЗнч(Результат) = Тип("Структура") 
			И Результат.Свойство("ПричинаОтказа")
			И ТипЗнч(Результат.ПричинаОтказа) = Тип("СправочникСсылка.CRM_ПричиныОтказаПоИнтересам") Тогда
		ОтклонитьОбращениеНаСервере(Ссылка, Результат.ПричинаОтказа, Результат.Комментарий);
	Иначе
		ОтклонитьОбращениеНаСервере(Ссылка, Неопределено, "");
	КонецЕсли;
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура ОтклонитьОбращениеНаСервере(Ссылка, ПричинаОтказа, Комментарий) Экспорт
	Если РегистрыСведений.CRM_СостоянияЛидов.СсылкаЯвляетсяЛидом(Ссылка) Тогда
		РегистрыСведений.CRM_СостоянияЛидов.ЗаписатьСостояниеЛида(Ссылка, Справочники.CRM_СостоянияЛидов.Отклонен,, ПричинаОтказа, Комментарий); 
	КонецЕсли;
	
	Об = Ссылка.ПолучитьОбъект();
	Об.CRM_СкрытьВАРМ = Истина;
	Если Не ЗначениеЗаполнено(Об.Ответственный) Тогда
		Об.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	Об.Записать();
КонецПроцедуры

&НаСервере
Функция УказыватьПричинуОтклонения(Ссылка)
	Возврат РегистрыСведений.CRM_СостоянияЛидов.СсылкаЯвляетсяЛидом(Ссылка, Истина);
КонецФункции

&НаКлиенте
Процедура ДополнительныеРеквизитыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаполнениеОбязательныхПолей()
	ТекстСообщения = "";
	ЕстьОшибки = Ложь;
	Если Объект.ИсточникПолучения.ТелефонОбязательно И НЕ ЗначениеЗаполнено(Объект.Телефон) Тогда
		ТекстСообщения = "Не заполнено обязательное поле 'Телефон'";
		ЕстьОшибки = Истина;
	КонецЕсли;	
	Если Объект.ИсточникПолучения.НаименованиеОбязательно И НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда
		ТекстСообщения = ?(ТекстСообщения = "", "", ТекстСообщения+"
		|") + "Не заполнено обязательное поле 'ФИО'";
		ЕстьОшибки = Истина;
	КонецЕсли;
	Если Объект.ИсточникПолучения.ПочтаОбязательно И НЕ ЗначениеЗаполнено(Объект.ЭлектроннаяПочта) Тогда
		ТекстСообщения = ?(ТекстСообщения = "", "", ТекстСообщения+"
		|") + "Не заполнено обязательное поле 'Электронная почта'";
		ЕстьОшибки = Истина;
	КонецЕсли;
	Для Каждого Строка Из Объект.ИсточникПолучения.ДополнительныеРеквизиты Цикл
		Если Строка.Обязательно Тогда
			СтруктураОтбора = Новый Структура("Свойство", Строка.Свойство);
			Стр = Объект.ДополнительныеРеквизиты.НайтиСтроки(СтруктураОтбора);
			Если Стр.Количество() = 0 Тогда
				ТекстСообщения = ?(ТекстСообщения = "", "", ТекстСообщения+"
				|") + "Не заполнен обязательный доп. реквизит '"+Строка.Свойство.Наименование+"'";
				ЕстьОшибки = Истина;
			ИначеЕсли НЕ ЗначениеЗаполнено(Стр[0].Значение) Тогда
				ТекстСообщения = ?(ТекстСообщения = "", "", ТекстСообщения+"
				|") + "Не заполнен обязательный доп. реквизит '"+Строка.Свойство.Наименование+"'";
				ЕстьОшибки = Истина;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	Если ЕстьОшибки Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
	КонецЕсли;	
	Возврат ЕстьОшибки;
КонецФункции	

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Отказ = ПроверитьЗаполнениеОбязательныхПолей();
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыСвойствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка	= Ложь;
	ДополнительныеПараметры	= Новый Структура();
	ОповещениеВыбораРеквизита	= Новый ОписаниеОповещения("ОбработкаВыбораРеквизита", ЭтотОбъект, ДополнительныеПараметры);
	ПараметрыФормы			= Новый Структура("Отбор", Новый Структура("НаборСвойств", ПредопределенноеЗначение("Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_CRM_ИсточникиПолученияЛидов")));
	ПараметрыФормы.Вставить("РежимВыбора",			Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",	Истина);
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаВыбора", ПараметрыФормы, Элемент, , , , ОповещениеВыбораРеквизита);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораРеквизита(РезультатВыбора, ДополнительныеПараметры) Экспорт
КонецПроцедуры // ОбработкаВыбораМеста()

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ПолучитьФункциональнуюОпцию("CRM_ИспользоватьСервисРаспознаванияЛиц") И ТипЗнч(ТекущийОбъект.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		Об = ТекущийОбъект.Контакт.ПолучитьОбъект();
		Об.Наименование = ТекущийОбъект.Наименование;
		Об.Организация = ТекущийОбъект.Организация;
		
		Стр = Об.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Телефон,"Тип");
		Если Стр = Неопределено Тогда
			Стр = Об.КонтактнаяИнформация.Добавить();
		КонецЕсли;	
		Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		Стр.Вид = Справочники.ВидыКонтактнойИнформации.CRM_ТелефонПотенциальногоКлиента;
		Стр.Представление = ТекущийОбъект.Телефон;
		Стр.НомерТелефона = ТекущийОбъект.Телефон;
		
		Стр = Об.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,"Тип");
		Если Стр = Неопределено Тогда
			Стр = Об.КонтактнаяИнформация.Добавить();
		КонецЕсли;	
		Стр.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		Стр.Вид = Справочники.ВидыКонтактнойИнформации.CRM_EmailПотенциальногоКлиента;
		Стр.АдресЭП = ТекущийОбъект.ЭлектроннаяПочта;
		Стр.Представление = ТекущийОбъект.ЭлектроннаяПочта;
		Об.Записать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Закрыть(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПолучитьФункциональнуюОпцию("ФиксироватьПервичныйИнтерес") Тогда
		пПартнер = Объект.Контакт;
		
		Если ЗначениеЗаполнено(Объект.Контакт) Тогда
			Если ТипЗнч(Объект.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				пПартнер = Объект.Контакт.Владелец;
			КонецЕсли;
		КонецЕсли;	
		
		НаборЗаписей = РегистрыСведений.ИсточникиПервичногоИнтереса.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Сделка.Установить(ТекущийОбъект.Ссылка);
		
		Если ЗначениеЗаполнено(ТекущийОбъект.КаналПервичногоИнтереса) Тогда
			Если (НЕ ЗначениеЗаполнено(ТекущийОбъект.ИсточникПервичногоИнтереса) 
				И ТипЗнч(ТекущийОбъект.КаналПервичногоИнтереса.ТипЗначения.ПривестиЗначение()) 
				= Тип("ПеречислениеСсылка.CRM_КаналыБезУказанияИсточника"))
				ИЛИ ЗначениеЗаполнено(ТекущийОбъект.ИсточникПервичногоИнтереса) Тогда
				Если ЗначениеЗаполнено(пПартнер) Тогда
					Запрос = Новый Запрос("
					|ВЫБРАТЬ Период
					|ИЗ РегистрСведений.ИсточникиПервичногоИнтереса
					|ГДЕ Сделка = &Сделка И Партнер = &Партнер");
					Запрос.УстановитьПараметр("Сделка", ТекущийОбъект.Ссылка);
					Запрос.УстановитьПараметр("Партнер", пПартнер);
					
					Выборка = Запрос.Выполнить().Выбрать();
					Пока Выборка.Следующий() Цикл
						МенеджерЗаписи = РегистрыСведений.ИсточникиПервичногоИнтереса.СоздатьМенеджерЗаписи();
						МенеджерЗаписи.Период = Выборка.Период;
						МенеджерЗаписи.Сделка = ТекущийОбъект.Ссылка;
						МенеджерЗаписи.Партнер = пПартнер;
						МенеджерЗаписи.Удалить();
					КонецЦикла;
				КонецЕсли;	
					
				Запись = НаборЗаписей.Добавить();
				Запись.Период = ТекущийОбъект.Дата;
				Запись.Партнер = пПартнер;
				Запись.Сделка = ТекущийОбъект.Ссылка;
				Запись.ИсточникПервичногоИнтереса = ТекущийОбъект.ИсточникПервичногоИнтереса;
				Запись.КаналПервичногоИнтереса = ТекущийОбъект.КаналПервичногоИнтереса;
			КонецЕсли;
		КонецЕсли;
		
		НаборЗаписей.Записать();
	КонецЕсли;

КонецПроцедуры

