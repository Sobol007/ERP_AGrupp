#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Команды

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ВыработкаСотрудников.ДобавитьКомандуСоздатьНаОснованииСозданиеВыработкиСотрудников(КомандыСозданияНаОсновании);
	
	Команда = Документы.ДвижениеПродукцииИМатериалов.ДобавитьКомандуСоздатьПередачуВПроизводствоНаОснованииЗаказа(КомандыСозданияНаОсновании);
	Если Команда <> Неопределено Тогда
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, "ПроизводствоНаСтороне", Ложь, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	
	Команда = Документы.ДвижениеПродукцииИМатериалов.ДобавитьКомандуСоздатьВозвратИзПроизводстваНаОснованииЗаказа(КомандыСозданияНаОсновании);
	Если Команда <> Неопределено Тогда
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, "ПроизводствоНаСтороне", Ложь, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	
	Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСозданияНаОсновании);
	
	Документы.ДвижениеПродукцииИМатериалов.ДобавитьКомандуСоздатьПередачуИзПроизводстваНаОснованииЗаказа(КомандыСозданияНаОсновании);
	
	Документы.КорректировкаНазначенияТоваров.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.АктВыполненныхВнутреннихРабот.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПлановаяКалькуляция2_2.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Команда = Документы.ПроизводственнаяОперация2_2.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	Если Команда <> Неопределено Тогда
		ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды(Команда, "ПроизводствоНаСтороне", Ложь, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
	ЭтапПроизводства2_2Локализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Этап производства".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЭтапПроизводства2_2) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ЭтапПроизводства2_2.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ЭтапПроизводства2_2);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьУправлениеПроизводством2_2";

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	Отчеты.ПередачаМатериаловПоЗаказу.ДобавитьКомандуКонтрольДвиженияПродукцииИМатериаловПоЭтапуПроизводства(КомандыОтчетов);
	
	Отчеты.ДиагностикаЭтапаПроизводства.ДобавитьКомандуДиагностикаГрафикаЭтапаПроизводства(КомандыОтчетов);
	
	Отчеты.ДиаграммаСмежныхЭтаповПроизводства.ДобавитьКомандуСмежныеЭтапыПроизводства(КомандыОтчетов);
	
	Отчеты.ДиаграммаПроизводстваПартииЗапуска.ДобавитьКомандуГрафикПартииЗапуска(КомандыОтчетов);
	
	Отчеты.ДеревоСебестоимостиПродукции.ДобавитьКомандуОтчета(КомандыОтчетов);
	
	Отчеты.ХодВыполненияПроизводственныхОпераций.ДобавитьКомандуОтчета(КомандыОтчетов);
	
	ЭтапПроизводства2_2Локализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

#КонецОбласти

#Область Серии

// Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "Подразделение,ПроизводствоНаСтороне";
	
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//  Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = Новый Структура;
	
	НастройкиПроизводства = ПроизводствоСервер.ИспользованиеСерийВПроизводстве22();
	
	#Область ВыходныеИзделия
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ДатаПроизводства");
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Подразделение", Объект.Подразделение);
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Получатель";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "ВыходныеИзделия";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии = "ВыходныеИзделияСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = (
																ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
																ИЛИ НастройкиПроизводства.УчитыватьСебестоимостьПоСериям
																)
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = (
																ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
																ИЛИ НастройкиПроизводства.ИспользоватьСерииНоменклатуры
																)
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства);
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Отменено");
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");

	ПараметрыУказанияСерий.Вставить("ВыходныеИзделия", ПараметрыУказанияСерийТЧ);
	
	#КонецОбласти
	
	#Область ПобочныеИзделия
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ДатаПроизводства");
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Подразделение", Объект.Подразделение);
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Получатель";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "ПобочныеИзделия";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии = "ПобочныеИзделияСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = (
																ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
																ИЛИ НастройкиПроизводства.УчитыватьСебестоимостьПоСериям
																)
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = (
																ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
																ИЛИ НастройкиПроизводства.ИспользоватьСерииНоменклатуры
																)
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства);
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Отменено");
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	
	ПараметрыУказанияСерий.Вставить("ПобочныеИзделия", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	#Область РасходМатериаловИРабот
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Подразделение";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "РасходМатериаловИРабот";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии  = "РасходМатериаловИРабот";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = НастройкиПроизводства.УчитыватьСебестоимостьПоСериям
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры = НастройкиПроизводства.ИспользоватьСерииНоменклатуры
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПотреблениеМатериаловПриПроизводстве);
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Истина; // всегда используется форма регистрации серий (в ней можно также выбрать из остатков)
	
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора   = Ложь;
	
	ПараметрыУказанияСерий.Вставить("РасходМатериаловИРабот", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	#Область ЭкономияМатериалов
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "ЭкономияМатериалов";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии  = "ЭкономияМатериаловСерии";
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Получатель";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = (
																ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
																ИЛИ НастройкиПроизводства.УчитыватьСебестоимостьПоСериям
																)
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = (
																ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
																ИЛИ НастройкиПроизводства.ИспользоватьСерииНоменклатуры
																)
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВозвратМатериаловИзПроизводстваПриемка);
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ДатаОперации");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Обособить");
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Подразделение", Объект.Подразделение);
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Истина; // всегда используется форма регистрации серий (в ней можно также выбрать из остатков)
	
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора   = Ложь;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерий.Вставить("ЭкономияМатериалов", ПараметрыУказанияСерийТЧ);
	#КонецОбласти

	#Область ОбеспечениеМатериаламиИРаботами
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары      = "ОбеспечениеМатериаламиИРаботами";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии       = "ОбеспечениеМатериаламиИРаботами";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
		ИЛИ НастройкиПроизводства.ИспользоватьСерииНоменклатуры;
	
	Если Объект.ПроизводствоНаСтороне Тогда
		ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	Иначе
		ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаВПроизводствоОтгрузка);
	КонецЕсли; 
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Подразделение", Объект.Подразделение);
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("ПроизводствоНаСтороне", Объект.ПроизводствоНаСтороне);
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Склад");
	
	ПараметрыУказанияСерийТЧ.ЭтоЗаказ = Истина;
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Ложь;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерий.Вставить("ОбеспечениеМатериаламиИРаботами", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает значение распоряжения на поступление или отгрузку.
//
// Параметры:
//  ЗначенияПолейДляОпределенияРаспоряжения	 - Структура - состав полей определяется значением
//  поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа.
//
// Возвращаемое значение:
//  ДокументСсылка.ЭтапПроизводства2_2 - Ссылка на распоряжение.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Возврат ЗначенияПолейДляОпределенияРаспоряжения.Ссылка;
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = "ВыходныеИзделия" 
		ИЛИ ПараметрыУказанияСерий.ИмяТЧТовары = "ПобочныеИзделия" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "ОбеспечениеМатериаламиИРаботами" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийОбеспечениеМатериаламиИРаботами();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "РасходМатериаловИРабот" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийРасходМатериаловИРабот();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "ЭкономияМатериалов" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийЭкономияМатериалов();
	КонецЕсли;                                                        
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область Обеспечение

// Используется для получения данных из документа, используемых в обработке "Состояние обеспечения заказов".
// Аналогичные функции объявлены в модулях менеджеров всех типов заказов и учитывают структуру хранения данных документа.
//
// Возвращаемое значение:
// 		Строка - Текст запроса - Текст запроса для выборки данных.
//
Функция ТекстЗапросаЗаказовКОбеспечению() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Ссылка      КАК Заказ,
	|	Т.КодСтроки   КАК КодСтроки,
	|	Т.НомерСтроки КАК НомерСтроки,
	|	0             КАК НомерСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО  КАК Продукция,
	|	НЕОПРЕДЕЛЕНО  КАК Этап,
	|	0             КАК ЭтапПорядок,
	|	
	|	Т.Номенклатура               КАК Номенклатура,
	|	Т.Характеристика             КАК Характеристика,
	|	Т.Склад                      КАК Склад,
	|	Т.Назначение                 КАК Назначение,
	|	ТаблицаЭтап.Подразделение    КАК Подразделение,
	|	
	|	Т.ВариантОбеспечения КАК ВариантОбеспечения,
	|	Т.ДатаОтгрузки       КАК ДатаОтгрузки,
	|	
	|	Т.Упаковка             КАК Упаковка,
	|	Т.Количество           КАК Количество,
	|	
	|	ТаблицаЭтап.ЖелаемаяДатаОбеспечения КАК ЖелаемаяДатаОтгрузки,
	|	ТаблицаЭтап.НеОтгружатьЧастями      КАК НеОтгружатьЧастями,
	|	ТаблицаЭтап.Дата                    КАК Дата,
	|	НЕОПРЕДЕЛЕНО                        КАК Партнер,
	|	ТаблицаЭтап.Ответственный           КАК Менеджер,
	|	ТаблицаЭтап.Статус                  КАК Статус,
	|	ИСТИНА                              КАК СтатусИспользуется
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ТаблицаЭтап
	|		ПО Т.Ссылка = ТаблицаЭтап.Ссылка
	|ГДЕ
	|	Т.Ссылка В (&Заказы)
	|	И ТаблицаЭтап.Проведен
	|	И ТаблицаЭтап.ПометкаУдаления = ЛОЖЬ
	|	И ТаблицаЭтап.ПроизводствоНаСтороне = ЛОЖЬ
	|	И Т.ВариантОбеспечения В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов)
	|	)";
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПереработчику) Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т.Ссылка                            КАК Заказ,
		|	Т.КодСтроки                         КАК КодСтроки,
		|	Т.НомерСтроки                       КАК НомерСтроки,
		|	0                                   КАК НомерСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО                        КАК Продукция,
		|	НЕОПРЕДЕЛЕНО                        КАК Этап,
		|	0                                   КАК ЭтапПорядок,
		|	
		|	Т.Номенклатура                      КАК Номенклатура,
		|	Т.Характеристика                    КАК Характеристика,
		|	Т.Склад                             КАК Склад,
		|	Т.Назначение                        КАК Назначение,
		|	ТаблицаЭтап.Подразделение           КАК Подразделение,
		|	
		|	Т.ВариантОбеспечения                КАК ВариантОбеспечения,
		|	Т.ДатаОтгрузки                      КАК ДатаОтгрузки,
		|	
		|	Т.Упаковка                          КАК Упаковка,
		|	Т.Количество                        КАК Количество,
		|	
		|	ТаблицаЭтап.ЖелаемаяДатаОбеспечения КАК ЖелаемаяДатаОтгрузки,
		|	ТаблицаЭтап.НеОтгружатьЧастями      КАК НеОтгружатьЧастями,
		|	ТаблицаЭтап.Дата                    КАК Дата,
		|	НЕОПРЕДЕЛЕНО                        КАК Партнер,
		|	ТаблицаЭтап.Ответственный           КАК Менеджер,
		|	ТаблицаЭтап.Статус                  КАК Статус,
		|	ИСТИНА                              КАК СтатусИспользуется
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ТаблицаЭтап
		|		ПО Т.Ссылка = ТаблицаЭтап.Ссылка
		|ГДЕ
		|	Т.Ссылка В (&Заказы)
		|	И ТаблицаЭтап.Проведен
		|	И ТаблицаЭтап.ПометкаУдаления = ЛОЖЬ
		|	И Т.ВариантОбеспечения В (
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов)
		|	)
		|	И ТаблицаЭтап.ПроизводствоНаСтороне
		|	// Заказ переработчику еще не создан; поле Заказ заполняется ссылкой на этап, поле Этап не заполняется
		|	И &ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т.Ссылка КАК Заказ,
		|	Товары.КодСтроки КАК КодСтроки,
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	0 КАК НомерСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	ТаблицаЭтап.Ссылка КАК Этап,
		|	0 КАК ЭтапПорядок,
		|	
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Склад КАК Склад,
		|	Товары.Назначение КАК Назначение,
		|	ТаблицаЭтап.Подразделение КАК Подразделение,
		|	
		|	Товары.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Товары.ДатаОтгрузки КАК ДатаОтгрузки,
		|	
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.Количество КАК Количество,
		|	
		|	ТаблицаЭтап.ЖелаемаяДатаОбеспечения КАК ЖелаемаяДатаОтгрузки,
		|	ЛОЖЬ                                КАК НеОтгружатьЧастями,
		|	ТаблицаЭтап.Дата                    КАК Дата,
		|	Т.Партнер                           КАК Партнер,
		|	Т.Менеджер                          КАК Менеджер,
		|	ТаблицаЭтап.Статус                  КАК Статус,
		|	ИСТИНА                              КАК СтатусИспользуется
		|ИЗ
		|	// Заказ переработчику создан; в поле Заказ указывается заказ переработчику, поле Этап заполяется
		|	Документ.ЗаказПереработчику КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ТаблицаЭтап
		|		ПО Т.Ссылка = ТаблицаЭтап.ЗаказПереработчику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Товары
		|		ПО ТаблицаЭтап.Ссылка = Товары.Ссылка
		|ГДЕ
		|	Т.Ссылка В (&Заказы)
		|	И Т.ГруппировкаЗатрат В (
		|		ЗНАЧЕНИЕ(Перечисление.ГруппировкиЗатратВЗаказеПереработчику.ПоЭтапамПроизводства)
		|	)
		|	И ТаблицаЭтап.Проведен
		|	И ТаблицаЭтап.ПометкаУдаления = ЛОЖЬ
		|	И Товары.ВариантОбеспечения В (
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов)
		|	)
		|	И ТаблицаЭтап.ПроизводствоНаСтороне";
		
		ПереопределенныеПараметры = ПереопределениеРасчетаПараметров("ТаблицаЭтап");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЗаказПереработчику", ПереопределенныеПараметры["ЗаказПереработчику"]);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ЗаполнитьВариантОбеспечения(Объект, Форма, Операция, ДанныеЗаполнения, ПараметрыРедактированияЭтапа = Неопределено, ПараметрыУказанияСерий = Неопределено) Экспорт
	
	Если ПараметрыРедактированияЭтапа = Неопределено Тогда
		ПараметрыРедактированияЭтапа = Новый ФиксированнаяСтруктура(ПараметрыРедактированияЭтапа());
	КонецЕсли;
	
	Если ПараметрыУказанияСерий = Неопределено Тогда
		ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ЭтапПроизводства2_2));
	КонецЕсли;
	
	Результат = УправлениеПроизводством.ЗаполнитьВариантОбеспеченияЭтапа(
						Объект,
						Форма,
						Операция,
						ДанныеЗаполнения,
						ПараметрыРедактированияЭтапа,
						ПараметрыУказанияСерий);
	
	Возврат Результат;

КонецФункции

// Возвращает признак наличия в заказе возможности управления частичной отгрузкой.
// Используется в состоянии обеспечения. Если возможность есть, то пользователь может
// управлять флагом "Не отгружать частями" из обработки состояния обеспечения,
// при выполнении действий с заказом.
//
// Возвращаемое значение:
//  Булево - Истина, если есть реквизит НеОтгружатьЧастями.
//
Функция ЕстьНеОтгружатьЧастями() Экспорт
	Возврат Истина;
КонецФункции

Функция ПараметрыВыбораОбеспечения(Статус) Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ПутиКДанным",          Новый Соответствие());
	Параметры.Вставить("ИмяТабличнойЧасти",    "ОбеспечениеМатериаламиИРаботами");
	Параметры.Вставить("СтатусКВыполнению",    Истина);
	Параметры.Вставить("ИмяМенеджераРегистра", "ЗаказыМатериаловВПроизводство");
	
	Возврат Параметры;
	
КонецФункции

// Изменяет желаемые даты обеспечения этапов.
//
// Параметры:
//  Этапы - ТаблицаЗначений - содержит колонки:
//		* ЭтапПроизводства - ДокументСсылка.ЭтапПроизводства2_2 - документ, который необходимо изменить.
//		* Дата - Дата - значение, которое необходимо установить в качестве желаемой даты обеспечения.
//
// Возвращаемое значение:
// 	Число - количество обработанных документов.
//
Функция ИзменитьЖелаемыеДатыОбеспечения(Этапы) Экспорт
	
	КоличествоОбработанных = 0;
	
	Для каждого Строка Из Этапы Цикл
		
		ДокументОбъект = Строка.ЭтапПроизводства.ПолучитьОбъект();
		
		Попытка
			
			ДокументОбъект.Заблокировать();
			
			УправлениеПроизводством.ИзменитьЖелаемуюДатуОбеспеченияЭтапа(
				ДокументОбъект,
				Строка.Дата);
			
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
			КоличествоОбработанных = КоличествоОбработанных + 1;
			
		Исключение
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Перенос желаемой даты обеспечения';
					|en = 'Production stage. Required supply date transfer '",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат КоличествоОбработанных;
	
КонецФункции

// Возвращает даты обеспечения этапов материалами.
//
// Параметры:
//  МассивЭтапов - Массив - содержит ссылки на этапы, даты обеспечения которых необходимо получить.
//  ВРазрезеМатериалов - Булево - если Истина, то даты получаются в разрезе материалов.
//		Если Ложь, то даты обеспечения сворачиваются по этапам производства.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица, содержащая даты обеспечения, с колонками:
//		Если ВРазрезеМатериалов - Истина:
//			* ЭтапПроизводства - ДокументСсылка.ЭтапПроизводства2_2.
//			* Номенклатура - СправочникСсылка.Номенклатура.
//			* Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры.
//			* Склад - СправочникСсылка.Склады.
//			* ВариантОбеспечения - ПеречислениеСсылка.ВариантыОбеспечения.
//			* ДатаОбеспечения - Дата.
//		Если ВРазрезеМатериалов - Ложь:
//			* ЭтапПроизводства - ДокументСсылка.ЭтапПроизводства2_2.
//			* ДатаОбеспечения - Дата.
//
Функция ДатыОбеспеченияЭтапов(МассивЭтапов, ВРазрезеМатериалов) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Обеспечение.Ссылка                 КАК ЭтапПроизводства,
	|	Обеспечение.Номенклатура           КАК Номенклатура,
	|	Обеспечение.Характеристика         КАК Характеристика,
	|	Обеспечение.Склад                  КАК Склад,
	|	Обеспечение.ВариантОбеспечения     КАК ВариантОбеспечения,
	|	МАКСИМУМ(Обеспечение.ДатаОтгрузки) КАК ДатаОбеспечения
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Обеспечение
	|ГДЕ
	|	Обеспечение.Ссылка В (&МассивЭтапов)
	|
	|	И (
	|		Обеспечение.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов),
	|										 ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется))
	|		
	|		ИЛИ (Обеспечение.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
	|			И Обеспечение.Ссылка.Распоряжение.ВариантОбособления <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.ЭтапПроизводства))
	|	)
	|
	|	И Обеспечение.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|	И НЕ Обеспечение.Производится
	|
	|СГРУППИРОВАТЬ ПО
	|	Обеспечение.Ссылка,
	|	Обеспечение.Номенклатура,
	|	Обеспечение.Характеристика,
	|	Обеспечение.Склад,
	|	Обеспечение.ВариантОбеспечения
	|
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Обеспечение.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Обеспечение
	|ГДЕ
	|	Обеспечение.Ссылка В(&МассивЭтапов)
	|
	|	И Обеспечение.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
	|	И Обеспечение.Ссылка.Распоряжение.ВариантОбособления = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.ЭтапПроизводства)
	|
	|	И НЕ Обеспечение.Производится
	|");
	Запрос.УстановитьПараметр("МассивЭтапов", МассивЭтапов);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДатыОбеспечения = РезультатыЗапроса[0].Выгрузить();
	
	ЭтапыКРасчету = РезультатыЗапроса[1].Выгрузить().ВыгрузитьКолонку(0);
	Если ЭтапыКРасчету.ВГраница() <> -1 Тогда
		
		ДатыОбособленногоОбеспечения = ОбеспечениеСервер.ДатаОбеспеченияОбособленныхПотребностей(ЭтапыКРасчету);
		
		Для каждого Строка Из ДатыОбособленногоОбеспечения Цикл
			
			НоваяСтрока = ДатыОбеспечения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.ЭтапПроизводства   = Строка.Заказ;
			НоваяСтрока.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно;
			
		КонецЦикла;
		
	КонецЕсли;
	
	СгруппироватьПоЭтапам = Не ВРазрезеМатериалов;
	Если СгруппироватьПоЭтапам Тогда
		
		МассивЭтапов = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(МассивЭтапов);
		ДатыОбеспечения.Индексы.Добавить("ЭтапПроизводства");
		
		Результат = Новый ТаблицаЗначений;
		Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
		Результат.Колонки.Добавить("ДатаОбеспечения",  Новый ОписаниеТипов("Дата"));
		
		ОтборПоЭтапу = Новый Структура("ЭтапПроизводства");
		
		Для каждого ЭтапПроизводства Из МассивЭтапов Цикл
			
			ОтборПоЭтапу.ЭтапПроизводства = ЭтапПроизводства;
			НайденныеСтроки = ДатыОбеспечения.НайтиСтроки(ОтборПоЭтапу);
			
			ДатаОбеспечения = '00010101';
			Для каждого Строка Из НайденныеСтроки Цикл
				ДатаОбеспечения = Макс(ДатаОбеспечения, Строка.ДатаОбеспечения);
			КонецЦикла;
			
			Если ЗначениеЗаполнено(ДатаОбеспечения) Тогда
				
				НоваяСтрока = Результат.Добавить();
				НоваяСтрока.ЭтапПроизводства = ЭтапПроизводства;
				НоваяСтрока.ДатаОбеспечения  = ДатаОбеспечения;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Результат = ДатыОбеспечения;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает материалы и работы этапа, необходимые для его выполнения
//
// Параметры:
//  Этап - ДокументСсылка.ЭтапПроизводства2_2 - этап, данные которого необходимо получить.
//
// Возвращаемое значение:
//  ТаблицаЗначений - обеспечиваемые материалы и работы.
//
Функция ОбеспечиваемыеМатериалыИРаботы(Этап) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.КоличествоУпаковок,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Этап);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает обеспечиваемые материалы этапа за вычетом израсходованных материалов.
//
// Параметры:
//  Этап - ДокументСсылка.ЭтапПроизводства2_2 - этап производства.
//	Разрезы - Сторка - перечень полей через запятую, в разрезе которых необходимо получить остатки.
//		Допустимые значения: Характеристика, Серия. Если не передано, то данные получаются только в
//		разрезе номенклатуры.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблицы с материалами.
//
Функция ОстаткиОбеспечиваемыхМатериалов(Этап, Разрезы = Неопределено) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	%ТекстДополнительныеПоляВыбор%
	|	МАКСИМУМ(ТабличнаяЧасть.Упаковка) КАК Упаковка,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТОбеспечение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Этап
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура
	|	%ТекстДополнительныеПоляГруппировка%
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	%ТекстДополнительныеПоляВыбор%
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТРасход
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Этап
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура
	|	%ТекстДополнительныеПоляГруппировка%
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	%ТекстДополнительныеПоляВыбор%
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.Количество - ЕСТЬNULL(ВТРасход.Количество, 0) КАК Количество,
	|	ТабличнаяЧасть.Количество - ЕСТЬNULL(ВТРасход.Количество, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоУпаковок
	|ИЗ
	|	ВТОбеспечение КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасход КАК ВТРасход
	|		ПО ТабличнаяЧасть.Номенклатура = ВТРасход.Номенклатура
	|			%ТекстДополнительныеПоляСоединение%
	|ГДЕ
	|	ТабличнаяЧасть.Количество - ЕСТЬNULL(ВТРасход.Количество, 0) > 0";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТабличнаяЧасть.Упаковка",
			"ТабличнаяЧасть.Номенклатура"));
			
	ТекстДопПоляВыбор = "";
	ТекстДопПоляГруппировка = "";
	ТекстДопПоляСоединение = "";
	
	Если ЗначениеЗаполнено(Разрезы) Тогда
		
		МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Разрезы, ",");
		
		Для каждого Поле Из МассивПолей Цикл
			
			Поле = СокрЛП(Поле);
			
			ТекстДопПоляВыбор = ТекстДопПоляВыбор
				+ "ТабличнаяЧасть." + Поле + " КАК " + Поле + ",";
			
			ТекстДопПоляГруппировка = ТекстДопПоляГруппировка
				+ ?(ЗначениеЗаполнено(ТекстДопПоляГруппировка), ", ", "")
				+ "ТабличнаяЧасть." + Поле;
			
			ТекстДопПоляСоединение = ТекстДопПоляСоединение
				+ " И ТабличнаяЧасть." + Поле + " = ВТРасход." + Поле;
			
		КонецЦикла;
		
		ТекстДопПоляГруппировка = ", " + ТекстДопПоляГруппировка;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстДополнительныеПоляВыбор%", ТекстДопПоляВыбор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстДополнительныеПоляГруппировка%", ТекстДопПоляГруппировка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстДополнительныеПоляСоединение%", ТекстДопПоляСоединение);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("Этап", Этап);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область РасчетСостояния

// Возвращает структуру, содержащую тексты запросов временных таблиц для расчета состояния.
//
// Возвращаемое значение:
//   - Структура - тексты запросов временных таблиц для расчета состояния.
//
Функция ВременныеТаблицыДляРасчетаСостояния() Экспорт
	
	Результат = Новый Структура();
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Ссылка                КАК Ссылка,
		|	Таблица.Проведен              КАК Проведен,
		|	Таблица.Статус                КАК Статус,
		|	Таблица.Распоряжение          КАК Распоряжение,
		|	Таблица.Подразделение         КАК Подразделение,
		|	Таблица.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
		|	Таблица.МаршрутнаяКарта       КАК МаршрутнаяКарта,
		|	
		|	ВЫБОР КОГДА Таблица.Распоряжение.ВариантОбособления = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.ЭтапПроизводства) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|	КОНЕЦ                         КАК РассчитыватьОстаткиКЗаказу,
		|	
		|	Таблица.НазначениеМатериалы   КАК НазначениеМатериалы,
		|	
		|	ВЫБОР КОГДА Таблица.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|	КОНЕЦ                         КАК СтатусЗавершен
		|	
		|ПОМЕСТИТЬ ВТРеквизитыДокумента
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В(&МассивСсылок)";
	
	Результат.Вставить("Реквизиты", ТекстЗапроса);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Набор.Ссылка КАК Ссылка,
		|	
		|	МАКСИМУМ(Набор.ЕстьКОбеспечению)            КАК ЕстьКОбеспечению,
		|	МАКСИМУМ(Набор.ЕстьРезервироватьКДате)      КАК ЕстьРезервироватьКДате,
		|	МАКСИМУМ(Набор.ЕстьКОбеспечениюОбособленно) КАК ЕстьКОбеспечениюОбособленно
		|	
		|ПОМЕСТИТЬ ВТОбеспечениеЗаказа
		|ИЗ(
		|	ВЫБРАТЬ
		|		Таблица.Ссылка КАК Ссылка,
		|		
		|		ВЫБОР КОГДА Таблица.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется) ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ      КАК ЕстьКОбеспечению,
		|		
		|		ВЫБОР КОГДА Таблица.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов) ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ      КАК ЕстьРезервироватьКДате,
		|			
		|		ВЫБОР КОГДА Таблица.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно) ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ      КАК ЕстьКОбеспечениюОбособленно
		|	
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Таблица
		|	ГДЕ
		|		Таблица.Ссылка В(&МассивСсылок)
		|		И НЕ Таблица.Производится 
		|
		|) КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Ссылка";
	
	Результат.Вставить("Обеспечение", ТекстЗапроса);
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА СУММА(ВЫБОР
		|					КОГДА ВложенныйЗапрос.ПредшественникСтатус = &СтатусЗавершен
		|						ТОГДА 1
		|					ИНАЧЕ 0
		|				КОНЕЦ) = КОЛИЧЕСТВО(ВложенныйЗапрос.Предшественник)
		|			ТОГДА &ЗавершеныПредшественники
		|		КОГДА СУММА(ВЫБОР
		|					КОГДА ВложенныйЗапрос.ПредшественникСтатус = &СтатусНачат
		|						ТОГДА 1
		|					ИНАЧЕ 0
		|				КОНЕЦ) > 0
		|			ТОГДА &НачатыПредшественники
		|		КОГДА СУММА(ВЫБОР
		|					КОГДА ВложенныйЗапрос.ПредшественникСтатус = &СтатусНачат
		|						ТОГДА 1
		|					ИНАЧЕ 0
		|				КОНЕЦ) = 0
		|			ТОГДА &НеНачатыПредшественники
		|	КОНЕЦ КАК Состояние
		|ПОМЕСТИТЬ ВТСостоянияПредшественников
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаСвязи.Этап КАК Ссылка,
		|		Предшественники.Ссылка КАК Предшественник,
		|		Предшественники.Статус КАК ПредшественникСтатус
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.Последователи КАК ТаблицаСвязи
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Предшественники
		|			ПО ТаблицаСвязи.Ссылка = Предшественники.Ссылка
		|	ГДЕ
		|		ТаблицаСвязи.Этап В(&МассивСсылок)
		|		И Предшественники.Проведен
		|		И НЕ Предшественники.Ссылка В (&МассивСсылокКОчистке)
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		Таблица.Ссылка,
		|		Предшественники.Ссылка,
		|		Предшественники.Статус
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2 КАК Таблица
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Предшественники
		|			ПО ((ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2)) = Предшественники.Ссылка)
		|	ГДЕ
		|		Таблица.Ссылка В(&МассивСсылок)
		|		И (ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2)) <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|		И Предшественники.Проведен
		|		И НЕ Предшественники.Ссылка В (&МассивСсылокКОчистке)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";
		
	Результат.Вставить("СостоянияПредшественников", ТекстЗапроса);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ЦепочкаЭтапов

// Возвращает цепочку этапов по партии производства.
//
// Параметры:
//  ПартияПроизводства	 - СправочникСсылка.ПартииПроизводства	 - партия производства.
//  Направление			 - НаправлениеСортировки				 - направление сортировки этапов в цепочке.
// 
// Возвращаемое значение:
//  Массив - цепочка этапов
//
Функция ЦепочкаЭтапов(ПартияПроизводства, Направление = Неопределено) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Таблица
	|	//ТекстСоединение
	|ГДЕ
	|	Таблица.ПартияПроизводства = &ПартияПроизводства
	|	И НЕ Таблица.ПометкаУдаления
	|//ТекстУпорядочивание
	|";
	ТекстСоединение = "";
	ТекстУпорядочивание = "";
	Если Направление <> Неопределено Тогда
		ТекстСоединение = "
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО Таблица.Ссылка = НормативныйГрафик.ЭтапПроизводства
		|";
		Если Направление = НаправлениеСортировки.Возр Тогда
			ТекстУпорядочивание = "УПОРЯДОЧИТЬ ПО ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска,0)";
		ИначеЕсли Направление = НаправлениеСортировки.Убыв Тогда
			ТекстУпорядочивание = "УПОРЯДОЧИТЬ ПО ЕСТЬNULL(НормативныйГрафик.ДлительностьДоВыпуска,0)";
		КонецЕсли;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ТекстСоединение",ТекстСоединение);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ТекстУпорядочивание",ТекстУпорядочивание);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПартияПроизводства", ПартияПроизводства);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	
КонецФункции

// Возвращает ближайших последователей
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап или список этапов.
//
// Возвращаемое значение:
//   - Массив - массив ближайших последователей.
//
Функция Последователи(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Этап КАК Последователь
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&Ссылка)
		|	И Таблица.Этап.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.ПланироватьНеРанее В (&Ссылка)
		|	И Таблица.Проведен");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Новый Массив;
		
	Иначе
		
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0);
		
	КонецЕсли;
	
КонецФункции

// Возвращает ближайших предшественников
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап.
//
// Возвращаемое значение:
//   - Массив - массив ближайших предшественников.
//
Функция Предшественники(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Предшественник
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Этап = &Ссылка
		|	И Таблица.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2)
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2) <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Проведен");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Новый Массив;
		
	Иначе
		
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0);
		
	КонецЕсли;
	
КонецФункции

// Возвращает ближайшее окружение этапа
//
// Параметры:
//  Ссылка			 - Документ.ЭтапПроизводства2_2	 - этап
//  Предшественники	 - Массив - в параметр будут записаны предшественники.
//  Последователи	 - Массив - в параметр будут записаны последователи.
//
// Возвращаемое значение:
//   - Массив - массив ближайших смежных этапов.
//
Функция СмежныеЭтапы(Ссылка, Предшественники = Неопределено, Последователи = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	Предшественники = Предшественники(Ссылка);
	
	Для каждого Элемент Из Предшественники Цикл
		
		Результат.Добавить(Элемент);
		
	КонецЦикла;
	
	Последователи = Последователи(Ссылка);
	
	Для каждого Элемент Из Последователи Цикл
		
		Результат.Добавить(Элемент);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает дочерние цепочки этапов
//
// Параметры:
//  ПартияПроизводства	 - СправочникСсылка.ПартииПроизводства	 - партия производства.
//
// Возвращаемое значение:
//   - Массив - все дочерние этапы.
//
Функция ДочерниеЦепочки(ПартияПроизводства)
	
	ДочерниеЦепочки = Новый Массив();
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДочерниеЦепочки.ПартияПроизводства КАК ПартияПроизводства
	|ПОМЕСТИТЬ ВтДочерниеЦепочки
	|ИЗ (
	|ВЫБРАТЬ
	|	Таблица.ЭтапПотребитель.ПартияПроизводства КАК ПартияПроизводства
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В(&МассивСсылок)
	|	И Таблица.ОбработатьПоСпецификации
	|	И НЕ Таблица.Отменено
	|	И НЕ Таблица.ЭтапПотребитель.ПометкаУдаления
	|	И Таблица.Ссылка.ПартияПроизводства <> Таблица.ЭтапПотребитель.ПартияПроизводства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка.ПартияПроизводства
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Таблица
	|ГДЕ
	|	Таблица.ЭтапПотребитель В(&МассивСсылок)
	|	И НЕ Таблица.ОбработатьПоСпецификации
	|	И НЕ Таблица.Отменено
	|	И НЕ Таблица.Ссылка.ПометкаУдаления
	|	И Таблица.ЭтапПотребитель.ПартияПроизводства <> Таблица.Ссылка.ПартияПроизводства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.ЭтапПотребитель.ПартияПроизводства КАК ПартияПроизводства
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В(&МассивСсылок)
	|	И Таблица.ОбработатьПоСпецификации
	|	И НЕ Таблица.Отменено
	|	И НЕ Таблица.ЭтапПотребитель.ПометкаУдаления
	|	И Таблица.Ссылка.ПартияПроизводства <> Таблица.ЭтапПотребитель.ПартияПроизводства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка.ПартияПроизводства
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Таблица
	|ГДЕ
	|	Таблица.ЭтапПотребитель В(&МассивСсылок)
	|	И НЕ Таблица.ОбработатьПоСпецификации
	|	И НЕ Таблица.Отменено
	|	И НЕ Таблица.Ссылка.ПометкаУдаления
	|	И Таблица.ЭтапПотребитель.ПартияПроизводства <> Таблица.Ссылка.ПартияПроизводства
	|
	|) КАК ДочерниеЦепочки
	|
	|ГДЕ
	|	НЕ ДочерниеЦепочки.ПартияПроизводства В (&МассивДочернихЦепочек)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.ПартияПроизводства КАК ПартияПроизводства
	|ИЗ
	|	ВтДочерниеЦепочки КАК ДочерниеЦепочки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
	|		ПО ДочерниеЦепочки.ПартияПроизводства = Документ.ПартияПроизводства
	|ГДЕ
	|	НЕ Документ.ПометкаУдаления");
	
	Очередь = ЦепочкаЭтапов(ПартияПроизводства);
	
	Пока Очередь.Количество() > 0 Цикл
		
		Запрос.УстановитьПараметр("МассивСсылок", Очередь);
		Запрос.УстановитьПараметр("МассивДочернихЦепочек", ДочерниеЦепочки);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Очередь.Очистить();
		
		Пока Выборка.Следующий() Цикл
			Очередь.Добавить(Выборка.Ссылка);
			ДочерниеЦепочки.Добавить(Выборка.ПартияПроизводства);
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ДочерниеЦепочки;
	
КонецФункции

// Возвращает всех последователей
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап.
//
// Возвращаемое значение:
//   - Массив - массив всех последователей.
//
Функция ВсеПоследователи(Ссылка) Экспорт
	
	Идентификатор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Распоряжение");
	
	НаправлениеОбхода = УправлениеПроизводством.НаправлениеОбходаГрафаВперед();
	
	Вершина = ГрафЦепочкиЭтапов(Идентификатор, НаправлениеОбхода).Найти(Ссылка, "Ссылка");
	
	Если Вершина <> Неопределено Тогда
		Возврат УправлениеПроизводством.НайтиОкружениеВершины(Вершина);
	Иначе
		Возврат Новый Массив;
	КонецЕсли;
	
КонецФункции

// Возвращает всех предшественников
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап.
//
// Возвращаемое значение:
//   - Массив - массив всех предшественников.
//
Функция ВсеПредшественники(Ссылка) Экспорт
	
	Идентификатор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Распоряжение");
	
	НаправлениеОбхода = УправлениеПроизводством.НаправлениеОбходаГрафаНазад();
	
	Вершина = ГрафЦепочкиЭтапов(Идентификатор, НаправлениеОбхода).Найти(Ссылка, "Ссылка");
	
	Если Вершина <> Неопределено Тогда
		Возврат УправлениеПроизводством.НайтиОкружениеВершины(Вершина);
	Иначе
		Возврат Новый Массив;
	КонецЕсли;
	
КонецФункции

// Текст запроса для создания временной таблицы ВТПоследователи.
//
Функция ТекстЗапросаВТПоследователи() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	Таблица.Этап   КАК Последователь
		|ПОМЕСТИТЬ ВТПоследователи
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)
		|	И Таблица.Этап.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2),
		|	Таблица.Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2) В (&МассивСсылок)
		|	И Таблица.Ссылка.Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Последователь";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Создает в менеджере временную таблицу ВТПоследователи.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - менеджер временных таблиц
//  Этапы					 - Массив					 - этапы.
//
Процедура СоздатьВТПоследователи(МенеджерВременныхТаблиц, Этапы) Экспорт
	
	Запрос = Новый Запрос(ТекстЗапросаВТПоследователи());
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ТипЗнч(Этапы) = Тип("Массив") Тогда
		МассивСсылок = Этапы;
	ИначеЕсли ТипЗнч(Этапы) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Этапы);
	КонецЕсли;

	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Текст запроса для создания временной таблицы ВТПредшественники.
//
Функция ТекстЗапросаВТПредшественники() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Этап   КАК Ссылка,
		|	Таблица.Ссылка КАК Предшественник
		|ПОМЕСТИТЬ ВТПредшественники
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Этап В (&МассивСсылок)
		|	И Таблица.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2)
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2) <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Предшественник";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Создает в менеджере временную таблицу ВТПредшественники.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - менеджер временных таблиц
//  Этапы					 - Массив					 - этапы.
//
Процедура СоздатьВТПредшественники(МенеджерВременныхТаблиц, Этапы) Экспорт
	
	Запрос = Новый Запрос(ТекстЗапросаВТПредшественники());
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ТипЗнч(Этапы) = Тип("Массив") Тогда
		МассивСсылок = Этапы;
	ИначеЕсли ТипЗнч(Этапы) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Этапы);
	КонецЕсли;

	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Создает в менеджере временную таблицу ВТСвязиЭтапов.
//  Поля таблицы:
//  - Этап
//  - СледующийЭтап.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - менеджер для создания временной таблицы
//  МассивСсылок			 - Массив - этапы производства
//  ТолькоВнутренниеСвязи	 - Булево - признак, связи нужно получить в пределах одного распоряжения.
//
Процедура СоздатьВТСвязиЭтапов(МенеджерВременныхТаблиц, МассивСсылок, ТолькоВнутренниеСвязи = Ложь) Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Этап,
		|	Таблица.Этап   КАК СледующийЭтап
		|ПОМЕСТИТЬ ВТСвязиЭтапов
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)
		|	И Таблица.Этап.Проведен
		|	И &ОтборПоТипуСвязиПоследователи
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.Этап
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Этап В (&МассивСсылок)
		|	И Таблица.Ссылка.Проведен
		|	И &ОтборПоТипуСвязиПоследователи
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2),
		|	Таблица.Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2) <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Проведен
		|	И &ОтборПоТипуСвязиПредшественники
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2),
		|	Таблица.Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.ПланироватьНеРанее В (&МассивСсылок)
		|	И Таблица.Ссылка.Проведен
		|	И &ОтборПоТипуСвязиПредшественники
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Этап,
		|	СледующийЭтап";
		
	Если ТолькоВнутренниеСвязи Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоТипуСвязиПоследователи", 
			"Таблица.Ссылка.Распоряжение = Таблица.Этап.Распоряжение");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоТипуСвязиПредшественники", 
			"ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Распоряжение = Таблица.Ссылка.Распоряжение");
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ОтборПоТипуСвязиПоследователи", "");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ОтборПоТипуСвязиПредшественники", "");
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Создает в менеджере временную таблицу ВТСвязиЭтапов.
//  Поля таблицы:
//  - Этап
//  - СледующийЭтап.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - менеджер для создания временной таблицы
//  Распоряжение			 - ДокументСсылка.ЗаказНаПроизводство2_2 - распоряжение
//  ТолькоВнутренниеСвязи	 - Булево - признак, связи нужно получить в пределах одного распоряжения.
//
Процедура СоздатьВТСвязиЭтаповПоРаспоряжению(МенеджерВременныхТаблиц, Распоряжение, ТолькоВнутренниеСвязи = Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Этап,
		|	Таблица.Этап   КАК СледующийЭтап
		|ПОМЕСТИТЬ ВТСвязиЭтапов
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка.Распоряжение = &Распоряжение
		|	И Таблица.Ссылка.Проведен
		|	И Таблица.Этап.Проведен
		|	И (&ТолькоВнутренниеСвязи И Таблица.Этап.Распоряжение = &Распоряжение
		|			ИЛИ НЕ &ТолькоВнутренниеСвязи)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.Этап
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	НЕ &ТолькоВнутренниеСвязи
		|	И Таблица.Этап.Распоряжение = &Распоряжение
		|	И Таблица.Ссылка.Проведен
		|	И Таблица.Этап.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2),
		|	Таблица.Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Распоряжение = &Распоряжение
		|	И Таблица.Проведен
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2) <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	И (&ТолькоВнутренниеСвязи
		|		И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Распоряжение = &Распоряжение
		|		ИЛИ НЕ &ТолькоВнутренниеСвязи)
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2),
		|	Таблица.Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	НЕ &ТолькоВнутренниеСвязи
		|	И Таблица.Проведен
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2) <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Распоряжение = &Распоряжение
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Этап,
		|	СледующийЭтап");
		
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Запрос.УстановитьПараметр("ТолькоВнутренниеСвязи", ТолькоВнутренниеСвязи);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Выполняет поиск циклов в цепочке этапов
//  в качестве идентификатора может быть передан заказ на производство
//  или выпускающий этап цепочки.
//
// Параметры:
//  Идентификатор	 - ДокументСсылка.ЗаказНаПроизводство2_2, ДокументСсылка.ЭтапПроизводства2_2 - Идентификатор цепочки.
//  ЭтапОшибка		 - ДокументСсылка.ЭтапПроизводства2_2 - Ссылка на этап, в котором обнаружено зацикливание.
//
// Возвращаемое значение:
//   - Булево - Истина, если цикл найден.
//
Функция ЕстьЦиклыВЦепочкеЭтапов(Идентификатор, ЭтапОшибка = Неопределено) Экспорт
	
	Граф = ГрафЦепочкиЭтапов(Идентификатор);
	
	Возврат УправлениеПроизводством.ЕстьЦиклыВГрафе(Граф, ЭтапОшибка);
	
КонецФункции

// Возвращает назначения этапов
//
// Параметры:
//  МассивСсылок - Массив - массив этапов
//  РезультатВМассив - Булево - признак, результатом должен быть массив назначений.
//
// Возвращаемое значение:
//   - Массив, Соответствие - назначений этапов.
//
Функция НазначенияЭтапов(МассивСсылок, РезультатВМассив = Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Назначение КАК Назначение,
		|	Таблица.Ссылка     КАК Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Если РезультатВМассив Тогда
	
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
		
	Иначе
		
		Результат = Новый Соответствие;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Результат.Вставить(Выборка.Ссылка, Выборка.Назначение);
		КонецЦикла;
		
		Возврат Результат;
		
	КонецЕсли;
	
КонецФункции

// Возвращает этапы по назначению
//
// Параметры:
//  МассивСсылок - Массив - массив назначений
//  РезультатВМассив - Булево - признак, результатом должен быть массив этапов.
//
// Возвращаемое значение:
//   - Массив, Соответствие - найденные этапы.
//
Функция НайтиЭтапыПоНазначению(МассивСсылок, РезультатВМассив = Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Ссылка     КАК Ссылка,
		|	Таблица.Назначение КАК Назначение
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Назначение В (&МассивСсылок)");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Если РезультатВМассив Тогда
	
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
		
	Иначе
		
		Результат = Новый Соответствие;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Результат.Вставить(Выборка.Назначение, Выборка.Ссылка);
		КонецЦикла;
		
		Возврат Результат;
		
	КонецЕсли;

КонецФункции

// Возвращает основное изделие цепочки этапов (определяется по первой строке).
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап производства.
//
// Возвращаемое значение:
//   - Структура - номенклатура и характеристика основного изделия.
//
Функция ОсновноеИзделиеЦепочкиЭтапов(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Документ.ПартияПроизводства.ОсновноеИзделиеНоменклатура   КАК Номенклатура,
	|	Документ.ПартияПроизводства.ОсновноеИзделиеХарактеристика КАК Характеристика,
	|	СУММА(ТабличнаяЧасть.Количество)                          КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|			ПО (Документ.ПартияПроизводства = ТабличнаяЧасть.Ссылка.ПартияПроизводства
	|				И Документ.ПартияПроизводства.ОсновноеИзделиеНоменклатура = ТабличнаяЧасть.Номенклатура
	|				И Документ.ПартияПроизводства.ОсновноеИзделиеХарактеристика = ТабличнаяЧасть.Характеристика
	|				И НЕ ТабличнаяЧасть.Отменено
	|				И ТабличнаяЧасть.Ссылка.Проведен)
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|	И Документ.ПартияПроизводства.ТипПроцесса В (ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка),
	|															ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Ремонт),
	|															ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.БезСпецификаций))
	|СГРУППИРОВАТЬ ПО
	|	Документ.ПартияПроизводства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документ.ПартияПроизводства.ОсновноеИзделиеНоменклатура   КАК Номенклатура,
	|	Документ.ПартияПроизводства.ОсновноеИзделиеХарактеристика КАК Характеристика,
	|	СУММА(ТабличнаяЧасть.Количество)                          КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|			ПО (Документ.ПартияПроизводства = ТабличнаяЧасть.Ссылка.ПартияПроизводства
	|				И Документ.ПартияПроизводства.ОсновноеИзделиеНоменклатура = ТабличнаяЧасть.Номенклатура
	|				И Документ.ПартияПроизводства.ОсновноеИзделиеХарактеристика = ТабличнаяЧасть.Характеристика
	|				И ТабличнаяЧасть.Ссылка.Проведен)
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|	И Документ.ПартияПроизводства.ТипПроцесса В (ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Разборка))
	|
	|СГРУППИРОВАТЬ ПО
	|	Документ.ПартияПроизводства");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Новый Структура("Номенклатура, Характеристика, Количество",,, 0);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Результат, Выборка);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Выбирает из переданного списка этапы-назначения обособленного обеспечения
//
// Параметры:
//  МассивСсылок - Массив - массив этапов.
//
// Возвращаемое значение:
//  - Массив - массив этапов
//
Функция ВыбратьЭтапыНазначения(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка В (&МассивСсылок)
	|	И Таблица.Распоряжение.ВариантОбособления = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.ЭтапПроизводства)
	|");
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	Возврат Результат;
	
КонецФункции

// Возвращает список общих реквизитов цепочки этапов
//
// Параметры:
//  ВключитьРеквизитыРаспоряжения	 - Булево	 - признак, список необходимо дополнить реквизитами распоряжения.
// 
// Возвращаемое значение:
//   - Массив - общие реквизиты цепочки этапов.
//
Функция ОбщиеРеквизитыЦепочкиЭтапов(ВключитьРеквизитыРаспоряжения = Ложь) Экспорт
	
	Реквизиты = Новый Массив;
	
	// общие реквизиты цепочки этапов
	Реквизиты.Добавить("Распоряжение");
	Реквизиты.Добавить("НазначениеПродукция");
	
	Реквизиты.Добавить("ПартияПроизводства");
	Реквизиты.Добавить("ТипПроизводственногоПроцесса");
	
	Реквизиты.Добавить("Спецификация");
	Реквизиты.Добавить("Запланировано");
	
	// реквизиты распоряжения
	Если ВключитьРеквизитыРаспоряжения Тогда
		
		Реквизиты.Добавить("НаправлениеДеятельности");
		Реквизиты.Добавить("ХозяйственнаяОперация");
		Реквизиты.Добавить("Партнер");
		Реквизиты.Добавить("Договор");
		
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

// Возвращает подразделение-исполнитель этапов производства
//
// Параметры:
//  МассивСсылок	 - Массив	 - список этапов производства.
//
// Возвращаемое значение:
//  Соответствие - подразделения-исполнители этапов производства.
//
Функция ПодразделенияИсполнители(МассивСсылок) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, "Подразделение");
	
КонецФункции

// Возвращает данные партии производства
//
// Параметры:
//  Распоряжение		 - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ на производство
//  НазначениеПродукция	 - СправочникСсылка.Назначения			 - назначение продукции ( при обособлении по целевому назначению )
//  ПартияПроизводства	 - СправочникСсылка.ПартияПроизводства	 - партия производства
// 
// Возвращаемое значение:
//  Структура - данные запущенной в производство партии.
//
Функция ДанныеПартииПроизводства(Распоряжение, НазначениеПродукция, ПартияПроизводства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Распоряжение КАК Распоряжение,
	|	&НазначениеПродукция КАК НазначениеПродукция,
	|	&ПартияПроизводства КАК ПартияПроизводства,
	|	
	|	Заказы.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	Заказы.Партнер                 КАК Партнер,
	|	Заказы.Договор                 КАК Договор,
	|	Заказы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	ЕСТЬNULL(ПартииПроизводства.Спецификация, ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)) КАК Спецификация,
	|	ЕСТЬNULL(ПартииПроизводства.ТипПроцесса, ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.ПустаяСсылка)) КАК ТипПроизводственногоПроцесса,
	|	
	|	ЕСТЬNULL(ПартииПроизводства.ОсновноеИзделиеНоменклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК ОсновноеИзделиеНоменклатура,
	|	ЕСТЬNULL(ПартииПроизводства.ОсновноеИзделиеХарактеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ОсновноеИзделиеХарактеристика,
	|	
	|	МАКСИМУМ(ISNULL(ЗапланированоКЗапуску.Запланировано, 0)) КАК Запланировано
	|ИЗ
	|	Документ.ЗаказНаПроизводство2_2 КАК Заказы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК ПартииПроизводства
	|		ПО (ПартииПроизводства.Ссылка = &ПартияПроизводства)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО (СпрНазначения.Ссылка = &НазначениеПродукция)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЗапланированоКЗапуску
	|		ПО ЗапланированоКЗапуску.ПартияПроизводства = &ПартияПроизводства
	|			И ЗапланированоКЗапуску.Проведен
	|ГДЕ
	|	Заказы.Ссылка = &Распоряжение
	|
	|СГРУППИРОВАТЬ ПО
	|	Заказы.Ссылка,
	|	ПартииПроизводства.Ссылка
	|");
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Запрос.УстановитьПараметр("НазначениеПродукция", НазначениеПродукция);
	Запрос.УстановитьПараметр("ПартияПроизводства", ПартияПроизводства);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	УстановитьПривилегированныйРежим(Ложь);
	
	ДанныеПартии = Новый Структура("
		|Распоряжение,
		|НазначениеПродукция,
		|ПартияПроизводства,
		|ХозяйственнаяОперация,
		|Партнер,
		|Договор,
		|НаправлениеДеятельности,
		|Спецификация,
		|ТипПроизводственногоПроцесса,
		|ОсновноеИзделиеНоменклатура,
		|ОсновноеИзделиеХарактеристика,
		|Запланировано");
	ЗаполнитьЗначенияСвойств(ДанныеПартии, Выборка);
	
	Если ЗначениеЗаполнено(НазначениеПродукция) Тогда
		ДанныеПартии.НаправлениеДеятельности =
			УправлениеПроизводствомПовтИсп.НаправлениеДеятельностиНазначенияПродукции(НазначениеПродукция);
	КонецЕсли;
	
	ДанныеПартии.Вставить("Номенклатура", Выборка.ОсновноеИзделиеНоменклатура); // для совместимости механизма расчета нормативов
	ДанныеПартии.Вставить("Характеристика", Выборка.ОсновноеИзделиеХарактеристика);
	
	Если ЗначениеЗаполнено(ДанныеПартии.Спецификация) Тогда
		ДанныеСпецификации = Справочники.РесурсныеСпецификации.ДанныеОсновногоИзделияСпецификации(
			ДанныеПартии.Спецификация,
			ДанныеПартии.Номенклатура,
			ДанныеПартии.Характеристика);
		ДанныеПартии.Вставить("Количество", ДанныеПартии.Запланировано * ДанныеСпецификации.Количество);
	Иначе
		ДанныеПартии.Вставить("Количество", 0);
	КонецЕсли;
	
	Результат = Новый ФиксированнаяСтруктура(ДанныеПартии);
	Возврат Результат;
	
КонецФункции

// Возвращает идентификатор производственной транзакции ВЕТИС и состояние производственного процесса
//
// Параметры:
//  ДокументОснование - Документ.ЭтапПроизводства2_2	 - этап производства.
//
// Возвращаемое значение:
//  Структура - данные партии производства
//   * ИдентификаторПроизводственнойТранзакции
//   * ЗавершениеПроизводственнойТранзакции
//
Функция ДанныеПартииПроизводстваВЕТИС(ДокументОснование) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИдентификаторПроизводственнойТранзакции", Справочники.ПартииПроизводства.ПустаяСсылка());
	Результат.Вставить("ЗавершениеПроизводственнойТранзакции", Ложь);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка КАК Ссылка,
	|	ДокументОснование.ПартияПроизводства КАК ПартияПроизводства,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ДокументОснование.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Разборка)
	|				ТОГДА ПервыйЭтап.Ссылка
	|			ИНАЧЕ ПоследнийЭтап.Ссылка
	|		КОНЕЦ) КАК Идентификатор
	|ПОМЕСТИТЬ ВтПартииПроизводства
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ПервыйЭтап
	|		ПО ДокументОснование.ПартияПроизводства = ПервыйЭтап.ПартияПроизводства
	|			И (ПервыйЭтап.НомерЭтапа = 1)
	|			И (ПервыйЭтап.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ПоследнийЭтап
	|		ПО ДокументОснование.ПартияПроизводства = ПоследнийЭтап.ПартияПроизводства
	|			И (ПоследнийЭтап.НомерСледующегоЭтапа = 0)
	|			И (ПоследнийЭтап.Проведен)
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументОснование.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументОснование.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					Документ.ПроизводственнаяОперацияВЕТИС КАК Таблица
	|				ГДЕ
	|					Таблица.ИдентификаторПроизводственнойТранзакции = ВтПартииПроизводства.Идентификатор)
	|		ТОГДА
	|			ВтПартииПроизводства.Идентификатор
	|		ИНАЧЕ
	|			ВтПартииПроизводства.ПартияПроизводства
	|	КОНЕЦ                                                         КАК ИдентификаторПроизводственнойТранзакции,
	|	ВЫБОР
	|		КОГДА НЕ ИСТИНА В
	|						(ВЫБРАТЬ ПЕРВЫЕ 1
	|							ИСТИНА
	|						ИЗ
	|							Документ.ЭтапПроизводства2_2 КАК ВыпускающийЭтап
	|						ГДЕ
	|							ВыпускающийЭтап.ПартияПроизводства = ДокументОснование.ПартияПроизводства
	|							И ВыпускающийЭтап.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
	|							И ВыпускающийЭтап.Проведен)
	|				И ДокументОснование.НомерСледующегоЭтапа = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                         КАК ЗавершениеПроизводственнойТранзакции
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПартииПроизводства КАК ВтПартииПроизводства
	|		ПО (ВтПартииПроизводства.Ссылка = ДокументОснование.Ссылка)
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает долю стоимости выходных изделий остальных этапов цепочки
//
// Параметры:
//  Ссылка	 - Документ.ЭтапПроизводства2_2	 - этап производства.
//
// Возвращаемое значение:
//  Число - доля стоимости выходных изделий остальных этапов цепочки.
//
Функция ДоляСтоимостиОстальныхЭтаповЦепочки(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ТабличнаяЧасть.ДоляСтоимости) КАК ДоляСтоимости
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|			ПО (Документ.ПартияПроизводства = ТабличнаяЧасть.Ссылка.ПартияПроизводства
	|				И НЕ ТабличнаяЧасть.Ссылка = &Ссылка
	|				И НЕ ТабличнаяЧасть.Отменено
	|				И ТабличнаяЧасть.Ссылка.Проведен)
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|ИМЕЮЩИЕ
	|	СУММА(ТабличнаяЧасть.ДоляСтоимости) > 0 
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.ДоляСтоимости;
	Иначе
		Результат = 0;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область УправлениеЭтапами

// Формирует/перезаполняет этапы производства и обосабливает выпуск полуфабрикатов, производимых на этапе.
// Тем самым удовлетворяются потребности производства в продукции и полуфабрикатах.
//
// Параметры:
//  Параметры - Структура - настройки формирования и заполнения документов со свойствами:
//		* Распоряжения - Массив - массив заказов, потребности которых необходимо обеспечить.
//		* Этапы - Массив - массив этапов производства, потребности которых необходимо обеспечить.
//		* ВариантыОбеспечения - Массив - содержит перечень доступных для заполнения вариантов обеспечения.
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат. Результатом является
//		количество записанных документов.
//
Процедура ОбеспечитьПотребностиПроизводстваВПродукцииИПолуфабрикатах(Параметры, АдресХранилища) Экспорт
	
	КлючеваяОперация = "МежцеховоеУправление2_2.ФормированиеЭтаповПроизводства";
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(КлючеваяОперация);
	
	Результат = ОбеспечитьПотребностиПроизводстваВнутриЗамераВремени(Параметры);
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, Результат.СформированоДокументов);
	
КонецПроцедуры

// Помечает на удаление цепочки этапов по переданному отбору.
//
// Параметры:
//  Отбор               - ДокументСсылка.ЗаказНаПроизводство2_2, СправочникСсылка.ПартииПроизводства - отбор
//  ВключатьПодчиненные - Булево - определяет, будут ли помечены на удаление подчиненные цепочки.
//
// Возвращаемое значение:
//  Структура - результат
//
Функция ПометитьНаУдалениеЭтапы(Отбор, ВключатьПодчиненные = Истина) Экспорт
	
	Результат = Новый Структура("КоличествоОбработано,ЕстьОшибки,ОшибкаСсылка",0,Ложь);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.ПартияПроизводства КАК ПартияПроизводства
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|			ПО Таблица.Ссылка = НормативныйГрафик.ЭтапПроизводства
		|
		|ГДЕ
		|	Таблица.НомерЭтапа = 1 И НЕ Таблица.ПометкаУдаления
		|	//&Отбор
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ПартияПроизводства
		|
		|УПОРЯДОЧИТЬ ПО
		|	МИНИМУМ(ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска,0))
		|");
	
	УстановленыОтборы = Ложь;
	Если ЗначениеЗаполнено(Отбор) Тогда
		
		ТипОтбора = ТипЗнч(Отбор);
		ДоступныеОтборы = Новый Структура;
		Если ТипОтбора = Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда
			ДоступныеОтборы.Вставить("Распоряжение", Отбор);
		ИначеЕсли ТипОтбора = Тип("СправочникСсылка.ПартииПроизводства") Тогда
			Если ВключатьПодчиненные Тогда
				Список = ДочерниеЦепочки(Отбор);
				Список.Добавить(Отбор);
			Иначе
				Список = Новый Массив;
				Список.Добавить(Отбор);
			КонецЕсли;
			ДоступныеОтборы.Вставить("ПартияПроизводства", Список);
		КонецЕсли;
		
		ТекстОтбора = "";
		
		Для каждого КлючЗначение Из ДоступныеОтборы Цикл
			
			ТекстОтбора = 
				ТекстОтбора
				+ " И Таблица."
				+ КлючЗначение.Ключ
				+ " В(&"
				+ КлючЗначение.Ключ
				+ ")";
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
			
			УстановленыОтборы = Истина;
			
		КонецЦикла;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//&Отбор", ТекстОтбора);
		
	КонецЕсли;
	Если Не УстановленыОтборы Тогда
		Возврат Результат;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПартияПроизводства = Выборка.ПартияПроизводства;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
			ЭлементБлокировки.УстановитьЗначение("ПартияПроизводства", ПартияПроизводства);
			
			Блокировка.Заблокировать();
			
			ЦепочкаЭтапов = ЦепочкаЭтапов(ПартияПроизводства, НаправлениеСортировки.Возр);
			
			Если ЦепочкаЭтапов.ВГраница() = -1 Тогда
				ВызватьИсключение НСтр("ru = 'Ошибка чтения этапов по партии производства';
										|en = 'An error occurred when reading production batch stages'");
			КонецЕсли;
			
			Для каждого СсылкаНаОбъект Из ЦепочкаЭтапов Цикл
				
				ДокументОбъект = СсылкаНаОбъект.ПолучитьОбъект();
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
				
				Результат.КоличествоОбработано = Результат.КоличествоОбработано + 1;
				
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			Результат.ЕстьОшибки = Истина;
			Результат.ОшибкаСсылка = ПартияПроизводства;
			
			СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеПометкаНаУдалениеЭтапов();
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось пометить на удаление цепочку этапов: %1 по причине: %2';
											|en = 'Cannot mark stage chain for deletion: %1 due to: %2'"),
								ПартияПроизводства,
								ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, ПартияПроизводства.Метаданные(), ПартияПроизводства, ТекстСообщения);
			
			Прервать;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Создает новые/изменяет существующие этапы производства в рамках одной цепочки.
//
// Параметры:
//  Параметры		 - Структура					 - параметры изменения этапов:
//  					* Распоряжение               - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ на производство.
//  					* ПартияПроизводства         - СправочникСсылка.ПартияПроизводства   - партия производства.
//  					* ПоляПартии                 - Структура                             - описание партии производства.
//  					* Действия                   - Массив                                - список действий с этапами производства.
//  АдресХранилища	 - УникальныйИдентификатор, Строка	 - адрес во временном хранилище, по которому будет
//  	помещен результат работы процедуры - идентификатор цепочки.
//
Процедура РедактированиеЦепочкиЭтаповПроизводства(Параметры, АдресХранилища) Экспорт
	
	Распоряжение       = Параметры.Распоряжение;
	ПартияПроизводства = Параметры.ПартияПроизводства;
	ПоляПартии         = Параметры.ПоляПартии;
	Действия           = Параметры.Действия;
	
	ЕстьОшибки = Ложь;
	ДатаДокумента = ТекущаяДатаСеанса();
	НоваяПартияЗапуска = Ложь;
	НомерПартииЗапуска = -1;
	НачатьТранзакцию();
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
		ЭлементБлокировки.УстановитьЗначение("ПартияПроизводства", ПартияПроизводства);
		Блокировка.Заблокировать();
		
		Справочники.ПартииПроизводства.СоздатьОбновитьПартиюПроизводства(
			ПартияПроизводства, ПоляПартии, Истина, Ложь, НоваяПартияЗапуска, НомерПартииЗапуска);
		
		Если НоваяПартияЗапуска Тогда
			НовыйНомерЭтапаВПартииЗапуска = 1;
		Иначе
			НовыйНомерЭтапаВПартииЗапуска = НовыйНомерЭтапаВПартииЗапуска(ПартияПроизводства);
		КонецЕсли;
		
		Для каждого Действие Из Действия Цикл
			
			Если Действие.Тип = "Создать" Тогда
				
				ДокументОбъект = Документы.ЭтапПроизводства2_2.СоздатьДокумент();
				
				ДокументОбъект.Дата = ДатаДокумента;
				ДокументОбъект.УстановитьСсылкуНового(Действие.Ссылка);
				
				ДокументОбъект.НомерПартииЗапуска       = НомерПартииЗапуска;
				ДокументОбъект.НомерЭтапаВПартииЗапуска = НовыйНомерЭтапаВПартииЗапуска;
				
				НовыйНомерЭтапаВПартииЗапуска = НовыйНомерЭтапаВПартииЗапуска + 1;
				
			ИначеЕсли Действие.Тип = "Изменить" ИЛИ Действие.Тип = "Удалить" Тогда
				
				ДокументОбъект = Действие.Ссылка.ПолучитьОбъект();
				
				Если Действие.Тип = "Удалить" Тогда
					ДокументОбъект.УстановитьПометкуУдаления(Истина);
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			ДокументОбъект.Заполнить(Действие.ЗначенияЗаполнения);
			
			Если ДокументОбъект.ПроверитьЗаполнение() Тогда
				
				ДокументОбъект.ОтключитьПроверкуРеквизитовЦепочкиЭтапов();
				ДокументОбъект.ОтключитьЗаполнениеНормативногоГрафикаПриЗаписи();
				
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
			Иначе
				ВызватьИсключение НСтр("ru = 'Найдены ошибки заполнения этапов производства';
										|en = 'There are errors in filled production stages'");
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не ПоляПартии.ТипПроцесса = Перечисления.ТипыПроизводственныхПроцессов.БезСпецификаций Тогда
			ПроверитьУстановитьПометкуУдаленияПартииПроизводства(ПартияПроизводства, ПоляПартии);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИмяСобытия = ПроизводствоСервер.СобытиеРедактированиеЦепочкиЭтапов();
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ЕстьОшибки = Истина;
		
	КонецПопытки;
	
	Если Не ЕстьОшибки Тогда
		
		// нормативный график производства
		РегистрыСведений.НормативныйГрафикЭтаповПроизводства.РассчитатьГрафик(Распоряжение);
		
	КонецЕсли;
	
	Результат = Новый Структура("ЕстьОшибки, Сообщения", ЕстьОшибки, ПолучитьСообщенияПользователю(Истина));
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

// Возвращает этапы по отбору
//
// Параметры:
//  Отбор			- Структура	- отбор
//  ВыбиратьПервые	- Число		- ограничение объема выборки
// 
// Возвращаемое значение:
//  Массив - найденные этапы
//
Функция НайтиЭтапы(Отбор, ВыбиратьПервые = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ //&Первые
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Таблица
	|//&Отбор");
	
	Если ЗначениеЗаполнено(Отбор) Тогда
		СписокТекстов = Новый Массив;
		Для каждого КлючЗначение Из Отбор Цикл
			Если ТипЗнч(КлючЗначение.Ключ) = Тип("Массив") Тогда
				ТекстОтбора = СтрШаблон("Таблица.%1 В (&%1)", КлючЗначение.Ключ);
				СписокТекстов.Добавить(ТекстОтбора);
			Иначе
				ТекстОтбора = СтрШаблон("Таблица.%1 = &%1", КлючЗначение.Ключ);
				СписокТекстов.Добавить(ТекстОтбора);
			КонецЕсли;
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//&Отбор", " ГДЕ " + СтрСоединить(СписокТекстов, " И "));
	КонецЕсли;
	
	Если ТипЗнч(ВыбиратьПервые) = Тип("Число") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//&Первые", "ПЕРВЫЕ " + Строка(ВыбиратьПервые));
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0)
	
КонецФункции

// Определяет необходимость установки пометки удаления партии производства
// и устанавливает ее при необходимости.
//
// Параметры:
//  ПартияПроизводства	- СправочникСсылка.ПартияПроизводства	- партия производства.
//  ПоляПартии			- Структура								- описание партии производства.
//
Процедура ПроверитьУстановитьПометкуУдаленияПартииПроизводства(ПартияПроизводства, ПоляПартии) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ЭтапыЦепочки.ПометкаУдаления) КАК ПометкаУдаленияЭтапа,
	|	МИНИМУМ(ВЫРАЗИТЬ(&ПартияПроизводства КАК Справочник.ПартииПроизводства).ПометкаУдаления) КАК ПометкаУдаленияКлюча
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапыЦепочки
	|
	|ГДЕ
	|	ЭтапыЦепочки.ПартияПроизводства = &ПартияПроизводства
	|	И НЕ ЭтапыЦепочки.ТипПроизводственногоПроцесса =
	|		ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.БезСпецификаций)
	|
	|ИМЕЮЩИЕ
	|	НЕ МИНИМУМ(ЭтапыЦепочки.ПометкаУдаления) =
	|		МИНИМУМ(ВЫРАЗИТЬ(&ПартияПроизводства КАК Справочник.ПартииПроизводства).ПометкаУдаления)
	|");
	
	Запрос.УстановитьПараметр("ПартияПроизводства", ПартияПроизводства);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Справочники.ПартииПроизводства.СоздатьОбновитьПартиюПроизводства(
			ПартияПроизводства,
			ПоляПартии,,
			Выборка.ПометкаУдаленияЭтапа);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ГрафикПроизводства

// Возвращает статусы документа, находясь в которых он может быть запланирован в графике производства.
//
// Возвращаемое значение:
//  Массив - массив статусов документа.
//
Функция СтатусыЭтапМожетБытьЗапланирован() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Формируется);
	Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Сформирован);
	Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению);
	
	Возврат Результат;
	
КонецФункции

// Период выполнения этапа по графику производства
//
// Параметры:
//  Ссылка - ДокументСсылка.ЭтапПроизводства2_2 - Этап производства.
//
// Возвращаемое значение:
//   - Структура - период выполнения этапа по графику производства.
//
Функция ГрафикПроизводства(Ссылка) Экспорт
	
	Результат = УправлениеПроизводствомКлиентСервер.СтруктураРазмещенияЭтапаВГрафике();
	
	Если Ссылка.Пустая() Тогда
		Возврат Результат;
	КонецЕсли;
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ГрафикПроизводства = РегистрыСведений.ГрафикЭтаповПроизводства2_2.ГрафикПроизводства(МассивСсылок);
	
	Если ГрафикПроизводства.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Результат, ГрафикПроизводства[0]);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Период выполнения этапа по нормативному графику производства
//
// Параметры:
//  Ссылка - ДокументСсылка.ЭтапПроизводства2_2 - Этап производства.
//
// Возвращаемое значение:
//   - Структура - период выполнения этапа по нормативному графику производства.
//
Функция НормативныйГрафикПроизводства(Ссылка) Экспорт
	
	Результат = УправлениеПроизводствомКлиентСервер.СтруктураРазмещенияЭтапаВГрафике();
	
	Если Ссылка.Пустая() Тогда
		Возврат Результат;
	КонецЕсли;
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ГрафикПроизводства = РегистрыСведений.НормативныйГрафикЭтаповПроизводства.ГрафикПроизводства(МассивСсылок);
	
	Если ГрафикПроизводства.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Результат, ГрафикПроизводства[0]);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Плановая дата поступления изделий
//
// Если график производства используется, то дата окончания этапа из графика,
//  иначе плановая дата по нормативному графику.
//
// Параметры:
//  Ссылка - ДокументСсылка.ЭтапПроизводства2_2 - Этап производства.
//
// Возвращаемое значение:
//   - Дата - плановая дата поступления изделий.
//
Функция ПлановаяДатаПоступления(Ссылка) Экспорт
	
	Если УправлениеПроизводствомПовтИсп.ИспользуетсяГрафикПроизводства() Тогда
		ГрафикПроизводства = ГрафикПроизводства(Ссылка);
	Иначе
		ГрафикПроизводства = НормативныйГрафикПроизводства(Ссылка);
	КонецЕсли;
	
	Возврат ПлановаяДатаПоступленияПоГрафику(ГрафикПроизводства);
	
КонецФункции

// Плановая дата поступления изделий
//
// Параметры:
//  ГрафикПроизводства - Структура - см. УправлениеПроизводствомКлиентСервер.СтруктураРазмещенияЭтапаВГрафике().
//
// Возвращаемое значение:
//   - Дата - плановая дата поступления изделий.
//
Функция ПлановаяДатаПоступленияПоГрафику(ГрафикПроизводства) Экспорт
	
	Возврат НачалоДня(ГрафикПроизводства.ОкончаниеЭтапа);
	
КонецФункции

// Обновляет график движения товаров после расчета графика производства
//
// Параметры:
//  Этапы - Массив - Список этапов производства.
//
Процедура ОбновитьПланируемоеПоступлениеТоваров(Этапы) Экспорт
	
	ЛокальнаяТранзакция = НЕ ТранзакцияАктивна();
	
	Если ЛокальнаяТранзакция Тогда
		НачатьТранзакцию();
	КонецЕсли;
	
	Регистры = Новый Структура;
	
	МенеджерРегистра = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("РегистрНакопления.ДвижениеТоваров");
	Регистры.Вставить("ДвижениеТоваров", МенеджерРегистра);
	
	МенеджерРегистра = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("РегистрНакопления.ОбеспечениеЗаказов");
	Регистры.Вставить("ОбеспечениеЗаказов", МенеджерРегистра);
	
	Попытка
	
		УстановитьПривилегированныйРежим(Истина);
		
		ЗаблокироватьЭтапы(Этапы);
		
		// Выполним ответственное чтение реквизитов
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЭтапПроизводства22.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства22
		|ГДЕ
		|	ЭтапПроизводства22.Ссылка В(&Этапы)
		|	И ЭтапПроизводства22.Статус = &СтатусКВыполнению
		|	И ЭтапПроизводства22.Проведен");
		
		Запрос.УстановитьПараметр("Этапы", Этапы);
		Запрос.УстановитьПараметр("СтатусКВыполнению", Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл

				ТекущийОбъект = Выборка.Ссылка.ПолучитьОбъект();
				
				ДополнительныеСвойства = ТекущийОбъект.ДополнительныеСвойства;
				
				ДополнительныеСвойства.Вставить("ЭтоНовый",    Ложь);
				ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
				
				ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(
							Выборка.Ссылка,
							ДополнительныеСвойства);
				
				Документы.ЭтапПроизводства2_2.ИнициализироватьДанныеДокумента(
							Выборка.Ссылка, 
							ДополнительныеСвойства, 
							Регистры);
				
				Для каждого КлючИЗначение Из Регистры Цикл
					
					ИмяРегистра = КлючИЗначение.Ключ;
					
					ДвиженияПоРегистру = ТекущийОбъект.Движения[ИмяРегистра];
					
					ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений["Таблица" + ИмяРегистра];
				
					Для каждого Запись Из ТаблицаДвижений Цикл
						
						ЗаполнитьЗначенияСвойств(ДвиженияПоРегистру.Добавить(), Запись);
						
					КонецЦикла;
					
					ДвиженияПоРегистру.Записывать = Истина;
					
				КонецЦикла;
		
				ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ТекущийОбъект);
				ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
				
				ТекущийОбъект = Неопределено;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЛокальнаяТранзакция Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	Исключение
		
		Если ЛокальнаяТранзакция Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

// Снимает признак ручного размещения в графике производства у этапов.
//
// Параметры:
//  Этапы - Массив - массив этапов производства, для которых необходимо снять признак ручного размещения в графике.
//	КонтролироватьПараметрыРазмещения - Булево - флаг, обозначающий что при записи этапа необходимо выполнить
//		контроль изменения параметров размещения в графике и соответственно при их изменении отметить этап
//		как требующий пересчета графика.
//
Процедура ОтменитьРучноеРазмещениеЭтаповВГрафике(Этапы, КонтролироватьПараметрыРазмещения) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.Ссылка КАК Этап
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Т
	|ГДЕ
	|	Т.Ссылка В(&Этапы)
	|	И Т.РучноеРазмещениеВГрафике
	|	И Т.Проведен");
	Запрос.УстановитьПараметр("Этапы", Этапы);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			ДокументОбъект = Выборка.Этап.ПолучитьОбъект();
			ДокументОбъект.Заблокировать();
			ДокументОбъект.РучноеРазмещениеВГрафике = Ложь;
			ДокументОбъект.ПланироватьРаботуВидовРабочихЦентров = ДокументОбъект.ВидыРабочихЦентров.Количество() > 0;
			
			Если НЕ КонтролироватьПараметрыРазмещения Тогда
				ДокументОбъект.ОтключитьКонтрольПараметровРазмещенияВГрафике();
			КонецЕсли;
			ДокументОбъект.ОтключитьОбновлениеСостоянияЗаказа();
			
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
		Исключение
		
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Отмена ручного размещения в графике';
					|en = 'Production stage.Cancel manual placement in the schedule'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет график этапов по расписанию и устанавливает им способ планирования "Вручную".
//
// Параметры:
//  Расписание - ТаблицаЗначений - данные рсписания:
//		* Этап - ДокументСсылка.ЭтапПроизводства2_2.
//		* РабочийЦентр - СправочникСсылка.РабочиеЦентры.
//		* Начало - Дата.
//		* Окончание - Дата.
//
Процедура ЗаполнитьГрафикЭтаповПоДаннымРасписания(Расписание) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Расписание.Этап КАК Документ.ЭтапПроизводства2_2) КАК Этап,
		|	Расписание.РабочийЦентр КАК РабочийЦентр,
		|	Расписание.Начало КАК Начало,
		|	Расписание.Окончание КАК Окончание
		|ПОМЕСТИТЬ ВТРасписание
		|ИЗ
		|	&Расписание КАК Расписание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРасписание.Этап.Подразделение.ИнтервалПланирования КАК ИнтервалПланирования,
		|	ВТРасписание.Этап КАК Этап,
		|	РабочиеЦентры.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
		|	ВТРасписание.Начало КАК Начало,
		|	ДОБАВИТЬКДАТЕ(ВТРасписание.Окончание, СЕКУНДА, -1) КАК Окончание
		|ИЗ
		|	ВТРасписание КАК ВТРасписание
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РабочиеЦентры КАК РабочиеЦентры
		|		ПО ВТРасписание.РабочийЦентр = РабочиеЦентры.Ссылка
		|ГДЕ
		|	РабочиеЦентры.ВидРабочегоЦентра.УчитыватьДоступностьПоГрафикуРаботы
		|ИТОГИ
		|	МИНИМУМ(Начало),
		|	МАКСИМУМ(Окончание)
		|ПО
		|	Этап");
	
	Запрос.УстановитьПараметр("Расписание", Расписание);
	ВыборкаЭтап = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаЭтап.Следующий() Цикл
		
		Попытка
			
			ДокументОбъект = ВыборкаЭтап.Этап.ПолучитьОбъект();
			ДокументОбъект.Заблокировать();
			
			// Реквизиты документа
			ДокументОбъект.ПланироватьРаботуВидовРабочихЦентров	= Ложь;
			ДокументОбъект.РучноеРазмещениеВГрафике = Истина;
			ДокументОбъект.ПланироватьНеРанее = Неопределено;
			
			// Даты графика
			График = УправлениеПроизводствомКлиентСервер.СтруктураРазмещенияЭтапаВГрафике();
			График.Рассчитан                       = Истина;
			График.НачалоЭтапа                     = ВыборкаЭтап.Начало;
			График.ОкончаниеПредварительногоБуфера = ВыборкаЭтап.Начало;
			График.НачалоЗавершающегоБуфера        = ВыборкаЭтап.Окончание;
			График.ОкончаниеЭтапа                  = ВыборкаЭтап.Окончание;
			
			ДокументОбъект.ДополнительныеСвойства.Вставить("ГрафикПроизводства", График);
			
			// Плановые даты поступления
			ДатаПоступления = ПлановаяДатаПоступленияПоГрафику(График);
			
			ГрафикДоИзменения = ГрафикПроизводства(ВыборкаЭтап.Этап);
			ДатаПоступленияДоИзменения = ПлановаяДатаПоступленияПоГрафику(ГрафикДоИзменения);
			
			УправлениеПроизводством.ОбновитьПлановыеДатыПоступления(
				ДокументОбъект, ДатаПоступления, ДатаПоступленияДоИзменения);
			
			// Виды рабочих центров
			ДокументОбъект.ЗанятостьВидовРабочихЦентров.Очистить();
			
			Выборка = ВыборкаЭтап.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ГраницаПериода = ПланированиеПроизводстваКлиентСервер.НачалоИнтервалаПланирования(
					Выборка.Начало,
					ВыборкаЭтап.ИнтервалПланирования);
				
				Пока ГраницаПериода <= Выборка.Окончание Цикл
					
					СледующийИнтервал = ПланированиеПроизводстваКлиентСервер.ОкончаниеИнтервалаПланирования(
						ГраницаПериода,
						ВыборкаЭтап.ИнтервалПланирования) + 1;
					
					НоваяСтрока = ДокументОбъект.ЗанятостьВидовРабочихЦентров.Добавить();
					НоваяСтрока.ВидРабочегоЦентра = Выборка.ВидРабочегоЦентра;
					НоваяСтрока.ДатаИнтервала = ГраницаПериода;
					НоваяСтрока.Количество = Мин(СледующийИнтервал, Выборка.Окончание + 1) - Макс(ГраницаПериода, Выборка.Начало);
					
					ГраницаПериода = СледующийИнтервал;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
		Исключение
		
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Заполнение графика по данным расписания';
					|en = 'Production stage. Fill in schedule by timetable data'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СтатусДокумента

// Формирует массив допустимых статусов на основании настроек программы
//
// Параметры:
//	ИмяДокумента - Строка - Имя вводимого документа.
//
// Возвращаемое значение:
//	Массив - массив допустимых статусов.
//
Функция ДопустимыеСтатусыВводаНаОсновании(ИмяДокумента) Экспорт
	
	ДопустимыеСтатусы = Новый Массив;
	ДопустимыеСтатусы.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Сформирован);
	ДопустимыеСтатусы.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению);
	ДопустимыеСтатусы.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Начат);
	ДопустимыеСтатусы.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	
	Возврат ДопустимыеСтатусы;
	
КонецФункции

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса.
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыЭтаповПроизводства2_2[НовыйСтатус];
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка                КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ТаблицаДокументов.Статус                КАК ТекущийСтатус,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	&Статус                                 КАК НовыйСтатус,
		|	ПРЕДСТАВЛЕНИЕ(&Статус)                  КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                   КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен              КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления       КАК ПометкаУдаления,
		|	ИСТИНА                                  КАК ЗаписьПроведением,
		|	ТаблицаДокументов.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
		|	ТаблицаДокументов.ЗаказПереработчику    КАК ЗаказПереработчику
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ТаблицаДокументов
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В(&МассивДокументов)");
		
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки.
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Отказ = Ложь;
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыЭтаповПроизводства2_2[НовыйСтатус];
	
	Если ЗначениеНовогоСтатуса = Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению
		И УправлениеПроизводствомКлиентСервер.СравнениеСтатусовЭтапа(ЗначениеНовогоСтатуса, ВыборкаПроверки.ТекущийСтатус) < 0 Тогда
		
		ТекстОшибки = НСтр("ru = 'У документа %Документ% статус ""%Статус%"" не установлен, т.к. этап уже был передан к выполнению';
							|en = 'The ""%Статус%"" status of the %Документ% document is not set as the stage has already been transferred for execution'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаПроверки.Ссылка);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", ВыборкаПроверки.ПредставлениеНовогоСтатуса);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					ВыборкаПроверки.Ссылка,
					"Статус",,
					Отказ); 
	
	ИначеЕсли ВыборкаПроверки.ПроизводствоНаСтороне Тогда
		Если ВыборкаПроверки.ЗаказПереработчику.Пустая() Тогда
			Если УправлениеПроизводствомКлиентСервер.СравнениеСтатусовЭтапа(
					ЗначениеНовогоСтатуса,
					Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению) > 0 Тогда
				
				ТекстОшибки = НСтр("ru = 'У документа %Документ% статус ""%Статус%"" не установлен, т.к. не оформлен заказ переработчику';
									|en = 'The ""%Статус%"" status of the %Документ% document is not set as the tolling order is not registered'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаПроверки.Ссылка);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", ВыборкаПроверки.ПредставлениеНовогоСтатуса);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							ТекстОшибки,
							ВыборкаПроверки.Ссылка,
							"Статус",,
							Отказ);
			КонецЕсли;
		Иначе
			Если УправлениеПроизводствомКлиентСервер.СравнениеСтатусовЭтапа(
					ЗначениеНовогоСтатуса,
					Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению) < 0 Тогда
				
				ТекстОшибки = НСтр("ru = 'У документа %Документ% статус ""%Статус%"" не установлен, т.к. на основании него оформлен заказ переработчику';
									|en = 'The ""%Статус%"" status of the %Документ% document is not set as the tolling order is not registered'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаПроверки.Ссылка);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", ВыборкаПроверки.ПредставлениеНовогоСтатуса);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							ТекстОшибки,
							ВыборкаПроверки.Ссылка,
							"Статус",,
							Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

#КонецОбласти

#Область Операции

// Возвращает статусы документа, в которых доступно выполнение производственных операций.
//
// Параметры:
//  Параметры	 - ДанныеФормыСтруктура, Структура	 - структура, содержащая параметры подразделения.
//
// Возвращаемое значение:
//  Массив - массив статусов документа.
//
Функция СтатусыДоступноВыполнениеОпераций(Параметры) Экспорт
	
	Результат = Новый Массив;
	
	Если Параметры.ИспользоватьСменныеЗадания
		ИЛИ Параметры.ИспользоватьПооперационноеПланирование Тогда
		Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению);
	КонецЕсли;
	Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Начат);
	
	Возврат Результат;
	
КонецФункции

// Проверяет, требуется ли отразить выполнение операций для этапа
//
// Параметры:
//  Ссылка	 - ДокументСсылка.ЭтапПроизводства2_2	 - этап производства.
//
// Возвращаемое значение:
//   - Булево - Истина, требуется отразить выполнение операций.
//
Функция ТребуетсяОтразитьВыполнениеОпераций(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РеквизитыДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК РеквизитыДокумента
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|	И ВЫБОР
	|		КОГДА (РеквизитыДокумента.Подразделение.ИспользоватьПооперационноеПланирование
	|			ИЛИ РеквизитыДокумента.Подразделение.ИспользоватьСменныеЗадания)
	|				И РеквизитыДокумента.Статус В (
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат))
	|			ТОГДА ИСТИНА
	|		КОГДА РеквизитыДокумента.Подразделение.ИспользоватьПооперационноеУправление
	|				И РеквизитыДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И РеквизитыДокумента.Проведен
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Возврат Не Запрос.Выполнить().Пустой()
	
КонецФункции

// Возвращает данные этапа для расчета очереди производственных операций.
//
// Параметры:
//  Ссылка	 - ДокументСсылка.ЭтапПроизводства2_2	 - этап производства.
//
// Возвращаемое значение:
//  Структура - данные для расчета.
//
Функция ДанныеДляРасчетаОчередиОпераций(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РеквизитыДокумента.Ссылка                     КАК Ссылка,
	|	РеквизитыДокумента.Статус                     КАК Статус,
	|	РеквизитыДокумента.Распоряжение               КАК Распоряжение,
	|	РеквизитыДокумента.Подразделение              КАК Подразделение,
	|	РеквизитыДокумента.МаршрутнаяКарта            КАК МаршрутнаяКарта,
	|	РеквизитыДокумента.КоэффициентМаршрутнойКарты КАК КоэффициентМаршрутнойКарты,
	|
	|	ВЫБОР
	|		КОГДА РеквизитыДокумента.Проведен
	|			И (
	|				(РеквизитыДокумента.Подразделение.ИспользоватьПооперационноеПланирование
	|					ИЛИ РеквизитыДокумента.Подразделение.ИспользоватьСменныеЗадания)
	|					И РеквизитыДокумента.Статус В (
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ИЛИ РеквизитыДокумента.Подразделение.ИспользоватьПооперационноеУправление
	|					И РеквизитыДокумента.Статус В (
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|			)
	|			И РеквизитыДокумента.МаршрутнаяКарта <> ЗНАЧЕНИЕ(Справочник.МаршрутныеКарты.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТребуетсяРассчитать,
	|
	|	РеквизитыДокумента.Подразделение.ИспользоватьСменныеЗадания КАК ИспользоватьСменныеЗадания,
	|
	|	РеквизитыДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен) КАК ВАрхиве
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК РеквизитыДокумента
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Результат = Новый Структура(
		"Ссылка,
		|Статус,
		|Распоряжение,
		|Подразделение,
		|МаршрутнаяКарта,
		|КоэффициентМаршрутнойКарты,
		|ТребуетсяРассчитать,
		|ИспользоватьСменныеЗадания,
		|ВАрхиве");
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Представление

// Возвращает строку, формирующую представление этапа производства, для подстановки в текст запроса.
//
// Параметры:
//  СинонимТаблицыЭтапПроизводства - Строка - синоним таблицы запроса, получающей данные документа ЭтапПроизводства2_2.
//
// Возвращаемое значение:
//  Строка - строка для подстановки в текст запроса.
//
Функция ТекстЗапросаПредставлениеЭтапа(СинонимТаблицыЭтапПроизводства) Экспорт
	
	Результат = "Т.Номер + "", "" + Т.НаименованиеЭтапа";
	Результат = СтрЗаменить(Результат, "Т", СинонимТаблицыЭтапПроизводства);
	
	Возврат Результат;
	
КонецФункции

// Выполняет подстановку в текст запроса поля "Представление этапа производства"
//
// Параметры:
//  ТекстЗапроса					 - Строка	 - текст запроса
//  ИмяПоля							 - Строка	 - имя поля
//  СинонимТаблицыЭтапПроизводства	 - Строка	 - синоним таблицы запроса, получающей данные документа ЭтапПроизводства2_2
//
Процедура ВыполнитьПодстановкуПоляПредставлениеЭтапа(ТекстЗапроса, ИмяПоля, СинонимТаблицыЭтапПроизводства) Экспорт
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ИмяПоля, Документы.ЭтапПроизводства2_2.ТекстЗапросаПредставлениеЭтапа(СинонимТаблицыЭтапПроизводства));
	
КонецПроцедуры

// Формирует представление этапа производства по данным документа.
// Если представление необходимо получить в запросе, то следует
// воспользоваться функцией ТекстЗапросаПредставлениеЭтапа.
//
// Параметры:
//  ДанныеЭтапа - Структура - данные этапа для формирования представления:
//		* Номер - Строка
//		* НаименованиеЭтапа - Строка
//
// Возвращаемое значение:
//  Строка - представление этапа производства.
//
Функция ПредставлениеЭтапа(ДанныеЭтапа) Экспорт
	
	Если ТипЗнч(ДанныеЭтапа) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЭтапа, "Номер,НаименованиеЭтапа");
	Иначе
		Реквизиты = ДанныеЭтапа;
	КонецЕсли;
	
	Возврат СтрШаблон("%1, %2", Реквизиты.Номер, Реквизиты.НаименованиеЭтапа);
	
КонецФункции

// Формирует представление основного изделия этапа.
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап.
//
// Возвращаемое значение:
//  Строка - представление основного изделия.
//
Функция ОсновноеИзделиеПредставление(Ссылка) Экспорт
	
	ОсновноеИзделиеПредставление = "";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(Таблица.ПартияПроизводства.ОсновноеИзделиеНоменклатура.Наименование, """") КАК НоменклатураПредставление,
	|	ВЫБОР
	|		КОГДА Таблица.ПартияПроизводства.ОсновноеИзделиеХарактеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И Таблица.ПартияПроизводства.ОсновноеИзделиеНоменклатура.ИспользованиеХарактеристик В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), 
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры), 
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			ТОГДА Таблица.ПартияПроизводства.ОсновноеИзделиеХарактеристика.Наименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ХарактеристикаПредставление
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|;
	|
	|ВЫБРАТЬ
	|	СУММА(Таблица.Количество) КАК Количество
	|ИЗ
	|(
	|ВЫБРАТЬ
	|	Сумма(1) КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|			ПО (Документ.ПартияПроизводства = ТабличнаяЧасть.Ссылка.ПартияПроизводства
	|				И НЕ ТабличнаяЧасть.Отменено
	|				И ТабличнаяЧасть.Ссылка.Проведен)
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|	И Документ.ПартияПроизводства.ТипПроцесса В (ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка),
	|															ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Ремонт),
	|															ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.БезСпецификаций))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Сумма(1) КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|			ПО (Документ.ПартияПроизводства = ТабличнаяЧасть.Ссылка.ПартияПроизводства
	|				И ТабличнаяЧасть.Ссылка.Проведен)
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|	И Документ.ПартияПроизводства.ТипПроцесса В (ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Разборка))
	|
	|) КАК Таблица
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда

		Выборка = Результат[0].Выбрать();
		Выборка.Следующий();
		
		ОсновноеИзделиеПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
																	Выборка.НоменклатураПредставление,
																	Выборка.ХарактеристикаПредставление);
		
		ВыборкаСтрок = Результат[1].Выбрать();
		ВыборкаСтрок.Следующий();
	
		Если ВыборкаСтрок.Количество > 1 Тогда
			
			ОсновноеИзделиеПредставление =
				ОсновноеИзделиеПредставление
				+ " "
				+ СтрШаблон(НСтр("ru = 'и еще %1 %2';
								|en = 'also in %1 %2'"), 
					Формат(ВыборкаСтрок.Количество - 1, "ЧГ="),
					ОбщегоНазначенияУТКлиентСервер.ФормаМножественногоЧисла(
						НСтр("ru = 'изделие';
							|en = 'product'"),
						НСтр("ru = 'изделия';
							|en = 'products'"),
						НСтр("ru = 'изделий';
							|en = 'products'"),
						ВыборкаСтрок.Количество - 1));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОсновноеИзделиеПредставление;
	
КонецФункции

#КонецОбласти

#Область ОбслуживаниеЗаданий

// Передает этапы к выполнению
//
// Параметры:
//  Параметры		 - Структура - параметры передачи
//  АдресХранилища	 - Строка	 - адрес хранилища, в которое будет помещен результат.
//
Процедура ПередатьЭтапыКВыполнениюОтложенно(Параметры, АдресХранилища) Экспорт
	
	Перем Распоряжения;
	
	Если НЕ Параметры.Свойство("Распоряжения", Распоряжения) Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура("Количество", 0);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СостоянияЭтаповПроизводства.Этап КАК Ссылка
	|ИЗ
	|	РегистрСведений.СостоянияЭтаповПроизводства КАК СостоянияЭтаповПроизводства
	|ГДЕ
	|	СостоянияЭтаповПроизводства.Распоряжение В (&Распоряжения)
	|	И СостоянияЭтаповПроизводства.СостояниеНаМежцеховомУровне = &ГотовКВыполнению");
	Запрос.УстановитьПараметр("Распоряжения", Распоряжения);
	Запрос.УстановитьПараметр("ГотовКВыполнению", Перечисления.СостоянияЭтаповНаМежцеховомУровне.ГотовКВыполнению);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		СтатусСформирован = Перечисления.СтатусыЭтаповПроизводства2_2.Сформирован;
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				
				ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
				
				Блокировка.Заблокировать();
				
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				Если ДокументОбъект = Неопределено ИЛИ ДокументОбъект.Статус <> СтатусСформирован Тогда
					ВызватьИсключение НСтр("ru = 'Обрабатываемый объект не соответствует условиям отбора.';
											|en = 'Processed object does not match filter conditions.'");
				КонецЕсли;
				
				ДокументОбъект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению;
				
				ДокументОбъект.УстановитьРежимПакетнойПередачиКВыполнению();
				
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеПередачаЭтаповКВыполнению();
				
				ТекстСообщения = НСтр("ru = 'Не удалось передать к выполнению этап: %Ссылка% по причине: %Причина%';
										|en = 'Cannot pass the stage for completion: %Ссылка% due to: %Причина%'");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(
					СобытиеЖурналаРегистрации,
					УровеньЖурналаРегистрации.Предупреждение,
					Выборка.Ссылка.Метаданные(),
					Выборка.Ссылка,
					ТекстСообщения);
				
				Продолжить;
				
			КонецПопытки;
			
			Результат.Количество = Результат.Количество + 1;
			
		КонецЦикла;
		
		РегистрыСведений.СостоянияЗаказовНаПроизводство.ОтразитьСостояние(Распоряжения);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПооперационноеУправление")
			ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьПооперационноеПланирование") Тогда
			
			РегистрыСведений.ЗаданияКРасчетуОчередиПроизводственныхОпераций.ЗапуститьЗадание();
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

// Помечает на удаление цепочки этапов по переданному отбору.
//
// Параметры:
//  Отбор		     - Структура - структура параметров
//  АдресХранилища	 - Строка	 - адрес хранилища, в которое будет помещен результат.
//
Процедура ПометитьНаУдалениеЭтапыОтложенно(Отбор, АдресХранилища) Экспорт
	
	Если ТипЗнч(Отбор) = Тип("Массив") Тогда
		
		Результат = Новый Структура("КоличествоОбработано,ЕстьОшибки,ОшибкаСсылка",0,Ложь);
		Для каждого ЭлементОтбора Из Отбор Цикл
			
			РезультатПорции = ПометитьНаУдалениеЭтапы(ЭлементОтбора);
			
			Результат.КоличествоОбработано = Результат.КоличествоОбработано + РезультатПорции.КоличествоОбработано;
			
			Если РезультатПорции.ЕстьОшибки Тогда
				ЗаполнитьЗначенияСвойств(Результат,РезультатПорции,,"КоличествоОбработано");
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Результат = ПометитьНаУдалениеЭтапы(Отбор);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

// Выполняет необходимые действия по очереди заданий к обработке этапов производства.
//
// Параметры:
//  Задание				 - Структура				 - см. РегистрыСведений.ЗаданияКОбработкеЭтаповПроизводства.НовоеЗадание()
//  ПропуститьЗадание	 - Булево					 - признак, требуется пропустить выполнение задания (возвращаемое значение).
//
Процедура ОбработатьДокументОтложенно(Задание, ПропуститьЗадание = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Ссылка = Задание.ЭтапПроизводства;
	
	БлокировкаУстановлена = Ложь;
	НачатьТранзакцию();
	Попытка
		
		ЗаблокироватьДанныеДляРедактирования(Ссылка);
		БлокировкаУстановлена = Истина;
		
		Если Задание.ЗаполнитьПоОперациям И ТребуетсяОтразитьВыполнениеОпераций(Ссылка) Тогда
			
			ДокументОбъект = Ссылка.ПолучитьОбъект();
			ДокументОбъект.ЗаполнитьПоОперациям();
			
			Если ДокументОбъект.ПроверитьЗаполнение() Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ДокументОбъект.Прочитать();
				ДокументОбъект.ТребуетсяЗаполнитьПоОперациям = Истина;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
			
		КонецЕсли;
		
		Если Задание.ОбновитьСостояние Тогда
			
			РегистрыСведений.СостоянияЭтаповПроизводства.ОбновитьСостояниеОпераций(Ссылка);
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		Если НЕ БлокировкаУстановлена Тогда
			ПропуститьЗадание = Истина;
		КонецЕсли;
		
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Определяет наличие права доступа "ДиспетчированиеЭтаповПроизводства" для текущего пользователя.
//
// Возвращаемое значение:
//   - Булево - Истина, если доступно диспетчирование этапов.
//
Функция ДоступноДиспетчированиеЭтапов() Экспорт
	
	Возврат ПравоДоступа("Просмотр", Метаданные.ОбщиеКоманды.ДиспетчированиеЭтаповПроизводства);
	
КонецФункции

// Формирует временные таблицы документа, которые используются при проверке
//
// Параметры:
//  Объект	 - ДокументОбъект.ЭтапПроизводства2_2, ОбработкаОбъект.РедактированиеЭтаповПроизводства	 - объект, который нужно проверить.
// 
// Возвращаемое значение:
//  МенеджерВременныхТаблиц - менеджер временных таблиц.
//
Функция СформироватьВременныеТаблицыДляПроверки(Объект) Экспорт
	
	ДанныеДляПроверки = Объект.ДанныеДляПроверкиЗаполнения();
	
	ТекстыЗапроса = Новый Массив;
	Запрос = Новый Запрос;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.ПартияПроизводства КАК ПартияПроизводства,
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.Статус КАК Статус,
	|
	|	Таблица.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	Таблица.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
	|	Таблица.ЗаказПереработчику КАК ЗаказПереработчику,
	|	
	|	Таблица.ПроизводствоОднойДатой КАК ПроизводствоОднойДатой,
	|	Таблица.ДатаПроизводства КАК ДатаПроизводства,
	|	Таблица.НеОтгружатьЧастями КАК НеОтгружатьЧастями,
	|	Таблица.ДатаОтгрузки КАК ДатаОтгрузки,
	|	Таблица.РасходОднойДатой КАК РасходОднойДатой,
	|	Таблица.ДатаРасхода КАК ДатаРасхода,
	|	Таблица.ВыполнениеРаботОднойДатой КАК ВыполнениеРаботОднойДатой,
	|	Таблица.ДатаВыполненияРабот КАК ДатаВыполненияРабот,
	|
	|	Таблица.ФактическоеНачалоЭтапа КАК ФактическоеНачалоЭтапа,
	|	Таблица.ФактическоеОкончаниеЭтапа КАК ФактическоеОкончаниеЭтапа,
	|
	|	Таблица.Подразделение КАК Подразделение,
	|
	|	Таблица.МаршрутнаяКарта КАК МаршрутнаяКарта,
	|	Таблица.КоэффициентМаршрутнойКарты КАК КоэффициентМаршрутнойКарты,
	|
	|	Таблица.СпособРаспределенияЗатратНаВыходныеИзделия КАК СпособРаспределенияЗатратНаВыходныеИзделия,
	|
	|	&ЭтоПроверкаДокумента КАК ЭтоПроверкаДокумента
	|
	|ПОМЕСТИТЬ РеквизитыЭтапов
	|ИЗ
	|	&Реквизиты КАК Таблица
	|ИНДЕКСИРОВАТЬ ПО
	|	Таблица.Ссылка";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	Запрос.УстановитьПараметр("Реквизиты"            , ДанныеДляПроверки.Реквизиты);
	Запрос.УстановитьПараметр("ЭтоПроверкаДокумента" , ТипЗнч(Объект) = Тип("ДокументОбъект.ЭтапПроизводства2_2"));
	
	Если ДанныеДляПроверки.ПроверятьТЧВыходныеИзделия Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Упаковка,
		|	ТабличнаяЧасть.КоличествоУпаковок,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.СписатьНаРасходы,
		|	ТабличнаяЧасть.СтатьяРасходов,
		|	ТабличнаяЧасть.Назначение,
		|	ТабличнаяЧасть.ЭтапПотребитель,
		|	ТабличнаяЧасть.Получатель,
		|	ТабличнаяЧасть.ДатаПроизводства,
		|	ТабличнаяЧасть.ДоляСтоимости,
		|	ТабличнаяЧасть.Произведено,
		|	ТабличнаяЧасть.Отменено,
		|	ТабличнаяЧасть.ПричинаОтмены,
		|	ТабличнаяЧасть.ОбработатьПоСпецификации,
		|	ТабличнаяЧасть.Спецификация,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Произведено И НЕ ТабличнаяЧасть.Отменено
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПризнакПроизведено,
		|	0 КАК Цена,
		|	0 КАК Сумма
		|ПОМЕСТИТЬ ВыходныеИзделия
		|ИЗ
		|	&ВыходныеИзделия КАК ТабличнаяЧасть";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		Запрос.УстановитьПараметр("ВыходныеИзделия", ДанныеДляПроверки.ВыходныеИзделия);
		
	КонецЕсли;
	
	Если ДанныеДляПроверки.ПроверятьТЧПобочныеИзделия Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Упаковка,
		|	ТабличнаяЧасть.КоличествоУпаковок,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.СписатьНаРасходы,
		|	ТабличнаяЧасть.СтатьяРасходов,
		|	ТабличнаяЧасть.Назначение,
		|	ТабличнаяЧасть.ЭтапПотребитель,
		|	ТабличнаяЧасть.Получатель,
		|	ТабличнаяЧасть.Произведено,
		|	ТабличнаяЧасть.ДатаПроизводства,
		|	ТабличнаяЧасть.Отменено,
		|	ТабличнаяЧасть.ПричинаОтмены,
		|	ТабличнаяЧасть.ОбработатьПоСпецификации,
		|	ТабличнаяЧасть.Спецификация,
		|	ТабличнаяЧасть.Цена,
		|	ТабличнаяЧасть.Сумма,
		|	ТабличнаяЧасть.СтатьяКалькуляции,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Произведено И НЕ ТабличнаяЧасть.Отменено
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПризнакПроизведено,
		|	0 КАК ДоляСтоимости
		|ПОМЕСТИТЬ ПобочныеИзделия
		|ИЗ
		|	&ПобочныеИзделия КАК ТабличнаяЧасть";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		Запрос.УстановитьПараметр("ПобочныеИзделия", ДанныеДляПроверки.ПобочныеИзделия);
		
	КонецЕсли;
	
	Если ДанныеДляПроверки.ПроверятьТЧОбеспечениеМатериаламиИРаботами Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Упаковка,
		|	ТабличнаяЧасть.КоличествоУпаковок,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.Склад,
		|	ТабличнаяЧасть.ДатаОтгрузки,
		|	ТабличнаяЧасть.ВариантОбеспечения,
		|	ТабличнаяЧасть.Назначение,
		|	ТабличнаяЧасть.Производится,
		|	ТабличнаяЧасть.Спецификация,
		|	ТабличнаяЧасть.СтатьяКалькуляции
		|ПОМЕСТИТЬ ОбеспечениеМатериаламиИРаботами
		|ИЗ
		|	&ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		Запрос.УстановитьПараметр("ОбеспечениеМатериаламиИРаботами", ДанныеДляПроверки.ОбеспечениеМатериаламиИРаботами);
		
	КонецЕсли;
	
	Если ДанныеДляПроверки.ПроверятьТЧРасходМатериаловИРабот Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Упаковка,
		|	ТабличнаяЧасть.КоличествоУпаковок,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.ДатаРасхода,
		|	ТабличнаяЧасть.СтатьяКалькуляции
		|ПОМЕСТИТЬ РасходМатериаловИРабот
		|ИЗ
		|	&РасходМатериаловИРабот КАК ТабличнаяЧасть";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		Запрос.УстановитьПараметр("РасходМатериаловИРабот", ДанныеДляПроверки.РасходМатериаловИРабот);
		
	КонецЕсли;
	
	Если ДанныеДляПроверки.ПроверятьТЧЭкономияМатериалов Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Упаковка,
		|	ТабличнаяЧасть.КоличествоУпаковок,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.Обособить,
		|	ТабличнаяЧасть.СписатьНаРасходы,
		|	ТабличнаяЧасть.ДатаОперации,
		|	ТабличнаяЧасть.СтатьяРасходов,
		|	ТабличнаяЧасть.АналитикаРасходов,
		|	ТабличнаяЧасть.Получатель
		|ПОМЕСТИТЬ ЭкономияМатериалов
		|ИЗ
		|	&ЭкономияМатериалов КАК ТабличнаяЧасть";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		Запрос.УстановитьПараметр("ЭкономияМатериалов", ДанныеДляПроверки.ЭкономияМатериалов);
		
	КонецЕсли;
	
	Если ДанныеДляПроверки.ПроверятьТЧТрудозатраты Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Исполнитель,
		|	ТабличнаяЧасть.Выполнено,
		|	ТабличнаяЧасть.ДатаВыполнения,
		|	ТабличнаяЧасть.СтатьяКалькуляции
		|ПОМЕСТИТЬ Трудозатраты
		|ИЗ
		|	&Трудозатраты КАК ТабличнаяЧасть";
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		Запрос.УстановитьПараметр("Трудозатраты", ДанныеДляПроверки.Трудозатраты);
		
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = УправлениеПроизводством.ОбъединитьТекстыЗапросаВПакет(ТекстыЗапроса);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

// Выполняет проверку заполнения реквизитов этапа
//
// Параметры:
//  Объект					- ДокументОбъект.ЭтапПроизводства2_2, ОбработкаОбъект.РедактированиеЭтаповПроизводства	 - объект, который нужно проверить
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит временные таблицы документа
//  Отказ					- Булево - присваивается Истина, если есть ошибки
//  ПроверяемыеРеквизиты	- Массив - параметр обработчика ОбработкаПроверкиЗаполнения.
//
Процедура ПроверитьЗаполнениеОбъекта(Объект, МенеджерВременныхТаблиц, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивНепроверяемыхРеквизитов.Добавить("ФактическоеНачалоЭтапа");
	МассивНепроверяемыхРеквизитов.Добавить("ФактическоеОкончаниеЭтапа");
	
	МассивНепроверяемыхРеквизитов.Добавить("ДатаПроизводства");
	МассивНепроверяемыхРеквизитов.Добавить("ДатаОтгрузки");
	МассивНепроверяемыхРеквизитов.Добавить("ДатаРасхода");
	МассивНепроверяемыхРеквизитов.Добавить("ДатаВыполненияРабот");
	
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Характеристика");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Назначение");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Получатель");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.СтатьяРасходов");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.АналитикаРасходов");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.ДоляСтоимости");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.ПричинаОтмены");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.ДатаПроизводства");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.КоличествоУпаковок");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Количество");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Серия");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделияСерии.Серия");
	
	МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.Получатель");
	МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.СтатьяРасходов");
	МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.АналитикаРасходов");
	
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Характеристика");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Назначение");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Получатель");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.СтатьяРасходов");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.АналитикаРасходов");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.ПричинаОтмены");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.ДатаПроизводства");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.СтатьяКалькуляции");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.КоличествоУпаковок");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Количество");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Серия");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделияСерии.Серия");
	
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.Характеристика");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.Спецификация");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.Склад");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.ДатаОтгрузки");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.СтатьяКалькуляции");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.КоличествоУпаковок");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.Количество");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.Серия");
	
	МассивНепроверяемыхРеквизитов.Добавить("РасходМатериаловИРабот.Характеристика");
	МассивНепроверяемыхРеквизитов.Добавить("РасходМатериаловИРабот.СтатьяКалькуляции");
	МассивНепроверяемыхРеквизитов.Добавить("РасходМатериаловИРабот.ДатаРасхода");
	МассивНепроверяемыхРеквизитов.Добавить("РасходМатериаловИРабот.Серия");
	
	МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.Характеристика");
	МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.Серия");
	МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.ДатаОперации");
	МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.Получатель");
	МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.СтатьяРасходов");
	МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.АналитикаРасходов");
	
	МассивНепроверяемыхРеквизитов.Добавить("Трудозатраты.Исполнитель");
	МассивНепроверяемыхРеквизитов.Добавить("Трудозатраты.СтатьяКалькуляции");
	МассивНепроверяемыхРеквизитов.Добавить("Трудозатраты.ДатаВыполнения");
	
	ПроверитьРеквизитыШапки(Объект, МенеджерВременныхТаблиц, Отказ);
	
	ПроверитьВыходныеИзделия(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	
	ПроверитьОбеспечениеМатериаламиИРаботами(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	
	ПроверитьРасходМатериаловИРабот(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	
	ПроверитьЭкономияМатериалов(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	
	ПроверитьТрудозатраты(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	
	ПроверитьРавенствоПоМатериалам(Объект, МенеджерВременныхТаблиц, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// Возвращает список реквизитов обязательных к заполнению в статусе "Формируется"
//
// Параметры:
//  Объект	 - ДокументОбъект.ЭтапПроизводства2_2	 - объект, для которого нужно подготовить список реквизитов.
//
// Возвращаемое значение:
//   - Массив - список обязательных реквизитов в статусе "Формируется".
//
Функция СписокОбязательныхРеквизитовВСтатусеФормируется(Объект) Экспорт
	
	Результат = Новый Массив;
	
	Если НЕ Объект.ПланироватьРаботуВидовРабочихЦентров И НЕ Объект.РучноеРазмещениеВГрафике Тогда
		
		Результат.Добавить("ЕдиницаИзмеренияДлительностиЭтапа");
		
	КонецЕсли;
	
	Если Объект.ПланироватьРаботуВидовРабочихЦентров И НЕ Объект.РучноеРазмещениеВГрафике  Тогда
		
		Результат.Добавить("ЕдиницаИзмеренияПредварительногоБуфера");
		Результат.Добавить("ЕдиницаИзмеренияЗавершающегоБуфера");
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Заполняет реквизит "Цена" в побочном выпуске этапа производства
//
// Параметры:
//  Объект	 - ДокументОбъект	 - обрабатываемый документ.
//
Процедура ЗаполнитьЦеныПоВидуЦен(Объект) Экспорт
	
	Если Объект.ВидЦены.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиКОбработке = Новый Массив;
	
	Для каждого Строка Из Объект.ПобочныеИзделия Цикл
		Если Строка.Произведено И НЕ Строка.Отменено Тогда
			СтрокиКОбработке.Добавить(Строка);
		КонецЕсли;
		Строка.Цена  = 0;
		Строка.Сумма = 0;
	КонецЦикла;
	
	Если СтрокиКОбработке.Количество() > 0 Тогда
	
		ПараметрыЗаполнения = УправлениеПроизводствомКлиентСервер.ПараметрыЗаполненияЦенПобочногоВыпуска(
			Объект.ВидЦены,
			Объект.Валюта,
			Объект.ФактическоеНачалоЭтапа);
		
		ПродажиСервер.ЗаполнитьЦены(
			Объект.ПобочныеИзделия, // Табличная часть
			СтрокиКОбработке, // Массив строк или структура отбора
			ПараметрыЗаполнения, // Параметры заполнения
			Новый Структура( // Структура действий с измененными строками
				"ПересчитатьСумму",
				"КоличествоУпаковок"));
				
	КонецЕсли;
	
КонецПроцедуры

// Функция проверяет, требуется ли уточнить этапы для заказов
//
// Параметры:
//  Заказы - ДокументСсылка.ЗаказНаПроизводство2_2, Массив - Заказы на производство.
//
// Возвращаемое значение:
//   - Истина - требуется уточнить этапы.
//
Функция ТребуетсяУточнитьЭтапы(Заказы) Экспорт
	
	МассивСсылок = УправлениеПроизводствомКлиентСервер.МассивЗначений(Заказы);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Распоряжение В (&МассивСсылок)
		|	И Таблица.Статус = &СтатусФормируется
		|	И Таблица.Проведен");
		
	Запрос.УстановитьПараметр("МассивСсылок",      МассивСсылок);
	Запрос.УстановитьПараметр("СтатусФормируется", Перечисления.СтатусыЭтаповПроизводства2_2.Формируется);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Функция возвращает текст запроса для проверки оснований при вводе
// актов выполнения внутренних работ.
//
// Возвращаемое значение:
//   - Строка - текст запроса для проверки оснований.
//
Функция ТекстЗапросаПроверкиОснованийАктовРабот() Экспорт
	
	Возврат "
	// Получатели выходных изделий (этапы производства)
	|ВЫБРАТЬ
	|	Реквизиты.Организация				КАК Организация,
	|	Реквизиты.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ТаблицаТоваров.Получатель			КАК Подразделение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Реквизиты
	|		ПО ТаблицаТоваров.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&ОбъектыОснований)
	|	И ТаблицаТоваров.Произведено
	|	И НЕ ТаблицаТоваров.Отменено
	|	И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТИПЗНАЧЕНИЯ(ТаблицаТоваров.Получатель) = ТИП(Справочник.СтруктураПредприятия)
	|	И НЕ ТаблицаТоваров.СписатьНаРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.НаправлениеДеятельности,
	|	ТаблицаТоваров.Получатель,
	|	Реквизиты.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Получатели побочных изделий (этапы производства)
	|ВЫБРАТЬ
	|	Реквизиты.Организация				КАК Организация,
	|	Реквизиты.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ТаблицаТоваров.Получатель			КАК Подразделение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Реквизиты
	|		ПО ТаблицаТоваров.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	ТаблицаТоваров.Ссылка В(&ОбъектыОснований)
	|	И ТаблицаТоваров.Произведено
	|	И НЕ ТаблицаТоваров.Отменено
	|	И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТИПЗНАЧЕНИЯ(ТаблицаТоваров.Получатель) = ТИП(Справочник.СтруктураПредприятия)
	|	И НЕ ТаблицаТоваров.СписатьНаРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.НаправлениеДеятельности,
	|	ТаблицаТоваров.Получатель,
	|	Реквизиты.Организация
	|"
КонецФункции

// Функция возвращает период, за который требуется сформировать движения по регистру Себестоимость товаров
// с учетом периода изменения данных документа и последнего закрытого периода.
//
// Параметры:
//  ПериодЗаполнения - Дата - Период, за который требуется переформировать движения
//  Организация - СправочникСсылка.Организации - Организация, от имени которой оформлен документ.
//
// Возвращаемое значение:
//   - Дата - период, за который требуется перезаписать движения.
//
Функция ПериодЗаполненияВидовЗапасовИСебестоимости(ПериодЗаполнения, Организация) Экспорт
	
	Результат = НачалоМесяца(ТекущаяДатаСеанса());
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(Задания.Месяц) КАК Месяц
		|ИЗ
		|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК Задания
		|ГДЕ
		|	Задания.Организация = &Организация
		|ИМЕЮЩИЕ
		|	НЕ МИНИМУМ(Задания.Месяц) ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если ЗначениеЗаполнено(ПериодЗаполнения) Тогда
			Возврат Мин(ПериодЗаполнения, Выборка.Месяц);
		Иначе
			Возврат Выборка.Месяц;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Подставляет в текст запроса выбираемые поля из выходных изделий
//
// Параметры:
//  ТекстЗапроса	 - Строка - текст запроса, в который нужно подставить соединение
//	ИсходныеПоля - Структура - содержит пути к полям в исходном тексте запроса в виде [ВедущаяТаблица].ИмяПоля
//		* Номенклатура - Строка - путь к полю Номенклатура
//		* Характеристика - Строка - путь к полю Характеристика
//		* Назначение - Строка - путь к полю Назначение
//		* КодСтроки - Строка - путь к полю КодСтроки
//		* ДоляСтоимости - Строка - путь к полю ДоляСтоимости
//		* Количество - Строка - путь к полю Количество.
//
// Возвращаемое значение:
//  Строка - новый текст запроса
//
Функция ПодставитьВыбираемыеПоля(ТекстЗапроса, ИсходныеПоля) Экспорт
	
	ПоляВыходныхИзделий = Новый Соответствие;
	ПоляВыходныхИзделий.Вставить("Номенклатура", "Номенклатура");
	ПоляВыходныхИзделий.Вставить("Характеристика", "Характеристика");
	ПоляВыходныхИзделий.Вставить("Назначение", "Назначение");
	ПоляВыходныхИзделий.Вставить("ДоляСтоимости", "ДоляСтоимости");
	ПоляВыходныхИзделий.Вставить("Количество", "Количество");
	ПоляВыходныхИзделий.Вставить("КодСтроки", "КодСтроки");
	
	Для Каждого КлючИЗначение Из ИсходныеПоля Цикл
		
		ПолеИзделия = ПоляВыходныхИзделий.Получить(КлючИЗначение.Ключ);
		Если ПолеИзделия = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ВедущаяТаблица = Лев(КлючИЗначение.Значение, СтрНайти(КлючИЗначение.Значение, ".", НаправлениеПоиска.СНачала));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, КлючИЗначение.Значение, ВедущаяТаблица + ПолеИзделия);
		
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Подставляет в текст запроса соединение, необходимое для получения выходных изделий.
//
// Параметры:
//  ТекстЗапроса	 - Строка - текст запроса, в который нужно подставить соединение
//  ИмяПараметра	 - Строка - имя параметра на место которого будет подставлено соединение
//  ПоляСоединений	 - Структура - содержит пути к полям в исходном запросе в виде [ВедущаяТаблица].Номенклатура. Структура содержит возможные поля, можно передавать не все поля.
//		* Распоряжение - Строка - заказ на производство, по которому необходимо получить выходные изделия
//		* Этап - Строка - этап производства, из которого требуется получить выходные изделия
//		* Номенклатура - Строка - выходное изделие
//		* Характеристика - Строка - характеристика выходного изделия
//		* Назначение - Строка - Назначение выходного изделия.
//
// Возвращаемое значение:
//  Строка - новый текст запроса
//
Функция ПодставитьСоединениеДляПолученияВыходныхИзделий(ТекстЗапроса, ИмяПараметра, ПоляСоединений) Экспорт
	
	СоединяемыеПоляЭтапа = Новый Соответствие;
	СоединяемыеПоляЭтапа.Вставить("Распоряжение", "Ссылка.Распоряжение");
	СоединяемыеПоляЭтапа.Вставить("Этап", "Ссылка");
	СоединяемыеПоляЭтапа.Вставить("Номенклатура", "Номенклатура");
	СоединяемыеПоляЭтапа.Вставить("Характеристика", "Характеристика");
	СоединяемыеПоляЭтапа.Вставить("Назначение", "Назначение");
	
	РезультатПодстановки = ТекстЗапроса;
	Пока Истина Цикл
		
		НачалоПараметра = СтрНайти(РезультатПодстановки, ИмяПараметра, НаправлениеПоиска.СНачала);
		
		Если НачалоПараметра = 0 Тогда
			Прервать;
		КонецЕсли;
		
		ПоследнийСимвол = НачалоПараметра + СтрДлина(ИмяПараметра);
		НачалоСинонима = СтрНайти(РезультатПодстановки, "КАК", НаправлениеПоиска.СКонца, НачалоПараметра) + СтрДлина("КАК");
		Синоним = СокрЛП(СтрЗаменить(Сред(РезультатПодстановки, НачалоСинонима, НачалоПараметра - НачалоСинонима - 1), "ПО", ""));
		ПревыйСимвол = СтрНайти(РезультатПодстановки, "СОЕДИНЕНИЕ", НаправлениеПоиска.СКонца, НачалоСинонима) + СтрДлина("СОЕДИНЕНИЕ");
		
		ПодстрокаПоиска = Сред(РезультатПодстановки, ПревыйСимвол, ПоследнийСимвол - ПревыйСимвол);
		ПодстрокаЗамены = " Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК %Синоним%";
		
		СвязьУсловий = " ПО ";
		
		Для Каждого КлючИЗначение Из ПоляСоединений Цикл
			
			СоединяемоеПоле = СоединяемыеПоляЭтапа.Получить(КлючИЗначение.Ключ);
			Если СоединяемоеПоле = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПодстрокаЗамены = ПодстрокаЗамены + СвязьУсловий + КлючИЗначение.Значение + " = " + "%Синоним%." + СоединяемоеПоле;
			СвязьУсловий = " И ";
			
		КонецЦикла;
		
		ПодстрокаЗамены = ПодстрокаЗамены + " И НЕ %Синоним%.Отменено";
		
		ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "%Синоним%", Синоним);
		РезультатПодстановки = СтрЗаменить(РезультатПодстановки, ПодстрокаПоиска, ПодстрокаЗамены);
		
	КонецЦикла;
	
	Возврат РезультатПодстановки;
	
КонецФункции

// Возвращает текст выборки поля ЭтапИсточник для подстановки в запрос
//
// Параметры:
//  ПутьРаспоряжение - Строка	 - путь к данным поля Распоряжение
//  ПутьЭтап		 - Строка	 - путь к данным поля Этап
//  ПутьНазначение	 - Строка	 - путь к данным поля Назначение
// 
// Возвращаемое значение:
//  Строка - текст для подстановки в запрос
//
Функция ТекстЗапросаПолеЭтапИсточник(ПутьРаспоряжение, ПутьЭтап, ПутьНазначение) Экспорт
	
	ТекстЗапроса =
	"ВЫБОР
	|	КОГДА ВЫРАЗИТЬ(&Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется
	|		ТОГДА
	|			&Этап
	|	КОГДА ВЫРАЗИТЬ(&Распоряжение КАК Документ.ЗаказНаПроизводство2_2) = ВЫРАЗИТЬ(ВЫРАЗИТЬ(&Назначение КАК Справочник.Назначения).Заказ КАК Документ.ЭтапПроизводства2_2).Распоряжение
	|		ТОГДА
	|			ВЫРАЗИТЬ(ВЫРАЗИТЬ(&Назначение КАК Справочник.Назначения).Заказ КАК Документ.ЭтапПроизводства2_2)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|КОНЕЦ
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Распоряжение", ПутьРаспоряжение);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Этап",         ПутьЭтап);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Назначение",   ПутьНазначение);
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает параметры выбора спецификаций для изделий, указанных в документе.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров выбора спецификаций.
//
// Возвращаемое значение:
//   Структура - Структура, переопределяющая умолчания, заданные в функции УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций().
//
Функция ПараметрыВыбораСпецификаций(Объект) Экспорт
	
	ПараметрыВыбораСпецификаций = Новый Структура;
	
#Область ВыходныеИзделия

	ПараметрыВыбораСпецификацийТЧ = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	
	ПараметрыВыбораСпецификацийТЧ.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Разборка);
	ПараметрыВыбораСпецификацийТЧ.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	ПараметрыВыбораСпецификаций.Вставить("ВыходныеИзделия", ПараметрыВыбораСпецификацийТЧ);
	
#КонецОбласти
	
#Область ОбеспечениеМатериаламиИРаботами

	ПараметрыВыбораСпецификацийТЧ = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	
	ПараметрыВыбораСпецификацийТЧ.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	ПараметрыВыбораСпецификацийТЧ.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Ремонт);
	ПараметрыВыбораСпецификацийТЧ.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	ПараметрыВыбораСпецификаций.Вставить("ОбеспечениеМатериаламиИРаботами", ПараметрыВыбораСпецификацийТЧ);
	
#КонецОбласти
	
	Возврат ПараметрыВыбораСпецификаций;

КонецФункции

// Имена реквизитов, от значений которых зависят параметры выбора спецификаций
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровВыбораСпецификаций() Экспорт
	
	ИменаРеквизитов = "";
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры распределения затрат на выходные изделия.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров распределения затрат.
//
// Возвращаемое значение:
//  Структура - параметры, уточняющие особенности распределения затрат на выходные изделия.
//
Функция ПараметрыРаспределенияЗатрат(Объект) Экспорт
	
	ПараметрыРаспределенияЗатрат = ПроизводствоКлиентСервер.ПараметрыРаспределенияЗатратНаВыходныеИзделия("ВыходныеИзделия", Объект.СпособРаспределенияЗатратНаВыходныеИзделия);
	
	ПараметрыРаспределенияЗатрат.ЕстьПолеОтменено = Истина;
	
	ПараметрыРаспределенияЗатрат.РассчитыватьПолеДоляСтоимостиПроцент = Истина;
	ПараметрыРаспределенияЗатрат.РассчитыватьПризнакЕстьОшибкиЗаполнения = Истина;
	ПараметрыРаспределенияЗатрат.РассчитыватьПризнакДоляСтоимостиОбязательна = Истина;
	
	ПараметрыРаспределенияЗатрат.ДоляСтоимостиДругихДокументовВГруппировке = ДоляСтоимостиОстальныхЭтаповЦепочки(Объект.Ссылка);
	
	Возврат ПараметрыРаспределенияЗатрат;
	
КонецФункции

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	// шаблон для выходных изделий по рассчитываемой стоимости
	#Область ВыходныеИзделия
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ВыходныеИзделия.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СобственноеПроизводство)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.Собственное);
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ВыходныеИзделия.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.Партнер                  = "Объект.Партнер";
	ШаблонНазначения.Договор                  = "Объект.Договор";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеПродукция22);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалы22);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22);
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	
	// Потребности в выпущенной продукции на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.ВыходныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ВыходныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ВыходныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ВыходныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.ВыходныеИзделия.Получатель";
	
	// Потребности в производимых работах в подразделении-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовРаботами", Истина, "Объект.ВыходныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ВыходныеИзделия.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ВыходныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ВыходныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.ВыходныеИзделия.Получатель";
	
	// Потребности в продукции на всех складах.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовВсеСклады", Истина, "Объект.ВыходныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ВыходныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ВыходныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ВыходныеИзделия.Характеристика";
	
	#КонецОбласти
	
	// шаблон для побочных изделий по фиксированной стоимости
	#Область ПобочныеИзделия
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ПобочныеИзделия.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СобственноеПроизводство)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.Собственное);
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.ПобочныеИзделия.Назначение");
	ШаблонНазначения.УсловиеИспользования     = "Объект.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)";
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.Партнер                  = "Объект.Партнер";
	ШаблонНазначения.Договор                  = "Объект.Договор";
	ШаблонНазначения.ТипыНазначений.Очистить();
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеПродукция22);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалы22);
	ШаблонНазначения.ТипыНазначений.Добавить(Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22);
	ШаблонНазначения.ВидимыеОтборыНаФорме.Вставить("НаправлениеДеятельности", НСтр("ru = 'Только назначения направления деятельности ""%1""';
																					|en = 'The ""%1"" line of business assignments only'"));
	
	// Потребности в выпущенной продукции на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.ПобочныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ПобочныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ПобочныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ПобочныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.ПобочныеИзделия.Получатель";
	
	// Потребности в производимых работах в подразделении-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовРаботами", Истина, "Объект.ПобочныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ПобочныеИзделия.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ПобочныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ПобочныеИзделия.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение    = "Объект.ПобочныеИзделия.Получатель";
	
	// Потребности в продукции на всех складах.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовВсеСклады", Истина, "Объект.ПобочныеИзделия.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.ПобочныеИзделия.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ПобочныеИзделия.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ПобочныеИзделия.Характеристика";
	
	#КонецОбласти
	
	Возврат МакетФормы;
	
КонецФункции

// Инициализирует параметры заполнения вида деятельности НДС
//
// Параметры:
//  Объект	 - ДокументОбъект.ЭтапПроизводства2_2, ДанныеФормыСтруктура	 - документ, для которого необходимо получить параметры.
// 
// Возвращаемое значение:
//  Структура - структура параметров, см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС().
//
Функция ПараметрыЗаполненияВидаДеятельностиНДС(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	ПараметрыЗаполнения.Организация             = Объект.Организация;
	ПараметрыЗаполнения.Дата                    = Объект.Дата;
	ПараметрыЗаполнения.Склад                   = Неопределено;
	ПараметрыЗаполнения.Договор                 = Неопределено;
	ПараметрыЗаполнения.НаправлениеДеятельности = Объект.НаправлениеДеятельности;
	
	ПараметрыЗаполнения.ВыпускПродукцииИРабот = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Рассчитывает минимальную дату документа, записываемую в реестр документов
//
// Параметры:
//  Объект	 - ДокументОбъект.ЭтапПроизводства2_2, ДанныеФормыСтруктура	 - документ, для которого необходимо получить параметры.
// 
// Возвращаемое значение:
//  Дата - минимальная дата документа.
//
Функция ОсновнаяЗаписьРеестраДокументов(Объект) Экспорт
	
	МаксимальнаяДата = Дата(3999,12,31,23,59,59);
	Результат = МаксимальнаяДата;
	
	СтруктураОтбора = Новый Структура("Отменено", Ложь);
	
	ТаблицаВыходныеИзделия = Объект.ВыходныеИзделия.Выгрузить(СтруктураОтбора, "ДатаПроизводства");
	Для Каждого ТекСтрока Из ТаблицаВыходныеИзделия Цикл
		Если ЗначениеЗаполнено(ТекСтрока.ДатаПроизводства) Тогда
			Результат = Мин(Результат, ТекСтрока.ДатаПроизводства);
		КонецЕсли;
	КонецЦикла;
	
	Если Не Результат = МаксимальнаяДата Тогда
		ОсновнаяЗапись = Новый Структура;
		ОсновнаяЗапись.Вставить("ДатаРеестраДокументов", Результат);
		ОсновнаяЗапись.Вставить("ОперацияРеестраДокументов",
			Перечисления.ХозяйственныеОперации.ВыпускПродукции);
		Возврат ОсновнаяЗапись;
	КонецЕсли;
	
	ТаблицаПобочныеИзделия = Объект.ПобочныеИзделия.Выгрузить(СтруктураОтбора, "ДатаПроизводства");
	Для Каждого ТекСтрока Из ТаблицаПобочныеИзделия Цикл
		Если ЗначениеЗаполнено(ТекСтрока.ДатаПроизводства) Тогда
			Результат = Мин(Результат, ТекСтрока.ДатаПроизводства);
		КонецЕсли;
	КонецЦикла;
	
	Если Не Результат = МаксимальнаяДата Тогда
		ОсновнаяЗапись = Новый Структура;
		ОсновнаяЗапись.Вставить("ДатаРеестраДокументов", Результат);
		ОсновнаяЗапись.Вставить("ОперацияРеестраДокументов",
			Перечисления.ХозяйственныеОперации.ВыпускПродукции);
		Возврат ОсновнаяЗапись;
	КонецЕсли;
	
	ТаблицаРасходМатериаловИРабот = Объект.РасходМатериаловИРабот.Выгрузить(, "ДатаРасхода");
	Для Каждого ТекСтрока Из ТаблицаРасходМатериаловИРабот Цикл
		Если ЗначениеЗаполнено(ТекСтрока.ДатаРасхода) Тогда
			Результат = Мин(Результат, ТекСтрока.ДатаРасхода);
		КонецЕсли;
	КонецЦикла;
	
	Если Не Результат = МаксимальнаяДата Тогда
		ОсновнаяЗапись = Новый Структура;
		ОсновнаяЗапись.Вставить("ДатаРеестраДокументов", Результат);
		ОсновнаяЗапись.Вставить("ОперацияРеестраДокументов",
			Перечисления.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства);
		Возврат ОсновнаяЗапись;
	КонецЕсли;
	
	ТаблицаЭкономияМатериалов = Объект.ЭкономияМатериалов.Выгрузить(, "ДатаОперации");
	Для Каждого ТекСтрока Из ТаблицаЭкономияМатериалов Цикл
		Если ЗначениеЗаполнено(ТекСтрока.ДатаОперации) Тогда
			Результат = Мин(Результат, ТекСтрока.ДатаОперации);
		КонецЕсли;
	КонецЦикла;
	
	Если Не Результат = МаксимальнаяДата Тогда
		ОсновнаяЗапись = Новый Структура;
		ОсновнаяЗапись.Вставить("ДатаРеестраДокументов", Результат);
		ОсновнаяЗапись.Вставить("ОперацияРеестраДокументов",
			Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства);
		Возврат ОсновнаяЗапись;
	КонецЕсли;
	
	ОсновнаяЗапись = Новый Структура;
	ОсновнаяЗапись.Вставить("ДатаРеестраДокументов", Объект.Дата);
	ОсновнаяЗапись.Вставить("ОперацияРеестраДокументов", Перечисления.ХозяйственныеОперации.ВыпускПродукции);
	Возврат ОсновнаяЗапись;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроверкаЗаполнения

Функция ПараметрыПроверкиРеквизитов(ИмяПоля = "", ИмяПоляПроверки = "")

	Возврат Новый Структура("ИмяПоля,ИмяПоляПроверки,ШаблонСообщения", ИмяПоля, ИмяПоляПроверки, "");

КонецФункции

Процедура СообщитьОбОшибкахЗаполнения(Объект, Выборка, СписокРеквизитов, ИмяТЧ = "", Отказ = Ложь) Экспорт
	
	Если Выборка.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = Объект.Метаданные();
	Если ТипЗнч(Объект) <> Тип("ДокументОбъект.ЭтапПроизводства2_2") Тогда
		КлючДанных = Неопределено;
		ПутьКДанным = Объект.ПутьКДаннымРеквизитаФормыРедактирования();
	Иначе
		КлючДанных = Объект;
		ПутьКДанным = "";
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		Для каждого ПараметрыПроверки Из СписокРеквизитов Цикл
			Если Выборка[ПараметрыПроверки.ИмяПоляПроверки] <> Истина Тогда
				Продолжить;
			КонецЕсли;
			Если ИмяТЧ <> "" Тогда // проверка табличной части
				ИмяСписка = МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Синоним;
				Если ЗначениеЗаполнено(ПараметрыПроверки.ШаблонСообщения) Тогда
					Шаблон = ПараметрыПроверки.ШаблонСообщения;
					Текст = СтрШаблон(Шаблон, Формат(Выборка.НомерСтроки, "ЧГ="), ИмяСписка);
				Иначе
					Синоним = МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Реквизиты[ПараметрыПроверки.ИмяПоля].Синоним;
					Текст = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Заполнение", Синоним, Формат(Выборка.НомерСтроки, "ЧГ="), ИмяСписка);
				КонецЕсли;
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Выборка.НомерСтроки, ПараметрыПроверки.ИмяПоля);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, КлючДанных, Поле, ПутьКДанным, Отказ);
			Иначе
				Если ЗначениеЗаполнено(ПараметрыПроверки.ШаблонСообщения) Тогда
					Текст = ПараметрыПроверки.ШаблонСообщения;
				Иначе
					Синоним = МетаданныеОбъекта.Реквизиты[ПараметрыПроверки.ИмяПоля].Синоним;
					Текст = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", Синоним);
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, КлючДанных, ПараметрыПроверки.ИмяПоля, ПутьКДанным, Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьРеквизитДляПроверкиЗаполнения(ИмяПоля, ТекстОшибки, СписокРеквизитов) Экспорт
	
	ПараметрыПроверки = Новый Структура("ИмяПоля,ТекстОшибки", ИмяПоля, ТекстОшибки);
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
КонецПроцедуры

Процедура ПроверитьРеквизитыШапки(Объект, МенеджерВременныхТаблиц, Отказ)
	
	СписокРеквизитов = Новый Массив;
	
#Область ПроизводствоНаСтороне
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ЗаказПереработчику", "ЗаказПереработчикуНеОФормлен");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Проведение документа со статусом ""Начат"" или ""Завершен"" доступно только при наличии заказа переработчику.';
											|en = 'You can post a document with the Started or Completed status only if there is a tolling order.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ЗаказПереработчику", "ЗаказПереработчикуОФормлен");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Проведение документа со статусом ""Формируется"" или ""Сформирован"" доступно только при отсутствии заказа переработчику.';
											|en = 'You can post a document with the Being generated or Generated status only if a tolling order is missing.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
#КонецОбласти

#Область ДатаПроизводства
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаПроизводства", "ДатаПроизводства");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаПроизводства", "ДатаПроизводстваМеньшеЧемФактическоеНачалоЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата производства не может быть меньше даты начала этапа.';
											|en = 'Production date cannot be less than the stage start date.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаПроизводства", "ДатаПроизводстваБольшеЧемФактическоеОкончаниеЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата производства не может быть больше даты выполнения этапа.';
											|en = 'Production date cannot be greater than the stage fulfillment date.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
#КонецОбласти
	
#Область ДатаОтгрузки
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаОтгрузки", "ДатаОтгрузки");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
#КонецОбласти
	
#Область ДатаРасхода
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаРасхода", "ДатаРасхода");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаРасхода", "ДатаРасходаМеньшеЧемФактическоеНачалоЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата расхода не может быть меньше даты начала этапа.';
											|en = 'Consumption date cannot be less than the stage start date.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаРасхода", "ДатаРасходаБольшеЧемФактическоеОкончаниеЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата расхода не может быть больше даты выполнения этапа.';
											|en = 'Consumption date cannot be greater than the stage fulfillment date.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
#КонецОбласти
	
#Область ДатаВыполненияРабот
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаВыполненияРабот", "ДатаВыполненияРабот");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаВыполнения", "ДатаВыполненияРаботМеньшеЧемФактическоеНачалоЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата выполнения работ не может быть меньше даты начала этапа.';
											|en = 'Work execution date cannot be less than the stage start date.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаВыполнения", "ДатаВыполненияРаботБольшеЧемФактическоеОкончаниеЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата выполнения работ не может быть больше даты выполнения этапа.';
											|en = 'Work execution date cannot be greater than the stage fulfillment date.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
#КонецОбласти
	
#Область ФактическоеНачалоЭтапа
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ФактическоеНачалоЭтапа", "ФактическоеНачалоЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Поле ""Дата начала выполнения этапа"" не заполнена.';
											|en = 'The ""Stage start date"" field is not filled in.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
#КонецОбласти
	
#Область ФактическоеОкончаниеЭтапа

	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ФактическоеОкончаниеЭтапа", "ФактическоеОкончаниеЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Поле ""Дата завершения выполнения этапа"" не заполнена.';
											|en = 'The ""Date of production stage end"" field is not filled in.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ФактическоеОкончаниеЭтапа", "ФактическоеОкончаниеЭтапаМеньшеФактическоеНачалоЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата начала выполнения этапа не может быть больше даты завершения этапа.';
											|en = 'Stage start date cannot be greater than the stage end date.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
#КонецОбласти
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ЗаказПереработчикуНеОФормлен КАК ЗаказПереработчикуНеОФормлен,
	|	ВложенныйЗапрос.ЗаказПереработчикуОФормлен КАК ЗаказПереработчикуОФормлен,
	|	ВложенныйЗапрос.ДатаПроизводства КАК ДатаПроизводства,
	|	ВложенныйЗапрос.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ВложенныйЗапрос.ДатаРасхода КАК ДатаРасхода,
	|	ВложенныйЗапрос.ДатаВыполненияРабот КАК ДатаВыполненияРабот,
	|	ВложенныйЗапрос.ДатаПроизводстваМеньшеЧемФактическоеНачалоЭтапа	КАК ДатаПроизводстваМеньшеЧемФактическоеНачалоЭтапа,
	|	ВложенныйЗапрос.ДатаПроизводстваБольшеЧемФактическоеОкончаниеЭтапа КАК ДатаПроизводстваБольшеЧемФактическоеОкончаниеЭтапа,	
	|	ВложенныйЗапрос.ДатаРасходаМеньшеЧемФактическоеНачалоЭтапа,
	|	ВложенныйЗапрос.ДатаРасходаБольшеЧемФактическоеОкончаниеЭтапа,
	|	ВложенныйЗапрос.ДатаВыполненияРаботМеньшеЧемФактическоеНачалоЭтапа,
	|	ВложенныйЗапрос.ДатаВыполненияРаботБольшеЧемФактическоеОкончаниеЭтапа,
	|	ВложенныйЗапрос.ФактическоеНачалоЭтапа КАК ФактическоеНачалоЭтапа,
	|	ВложенныйЗапрос.ФактическоеОкончаниеЭтапа КАК ФактическоеОкончаниеЭтапа,
	|	ВложенныйЗапрос.ФактическоеОкончаниеЭтапаМеньшеФактическоеНачалоЭтапа КАК ФактическоеОкончаниеЭтапаМеньшеФактическоеНачалоЭтапа
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ФактическоеНачалоЭтапа = ДАТАВРЕМЯ(1,1,1)
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ФактическоеНачалоЭтапа,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ФактическоеОкончаниеЭтапа = ДАТАВРЕМЯ(1,1,1)
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ФактическоеОкончаниеЭтапа,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ФактическоеНачалоЭтапа > РеквизитыЭтапов.ФактическоеОкончаниеЭтапа
	|					И РеквизитыЭтапов.ФактическоеОкончаниеЭтапа <> ДАТАВРЕМЯ(1,1,1)
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ФактическоеОкончаниеЭтапаМеньшеФактическоеНачалоЭтапа,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ПроизводствоОднойДатой
	|					И РеквизитыЭтапов.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|					И (РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|						ИЛИ РеквизитыЭтапов.ПроизводствоНаСтороне
	|							И (НЕ РеквизитыЭтапов.ЭтоПроверкаДокумента 
	|								ИЛИ РеквизитыЭтапов.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|					)
	|					И (КоличествоСтрок.ВыходныеИзделия > 0 ИЛИ КоличествоСтрок.ПобочныеИзделия > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаПроизводства,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ПроизводствоОднойДатой
	|					И РеквизитыЭтапов.ДатаПроизводства < НАЧАЛОПЕРИОДА(РеквизитыЭтапов.ФактическоеНачалоЭтапа, ДЕНЬ)
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И (КоличествоСтрок.ВыходныеИзделияПроизведено > 0 ИЛИ КоличествоСтрок.ПобочныеИзделияПроизведено > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаПроизводстваМеньшеЧемФактическоеНачалоЭтапа,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ПроизводствоОднойДатой 
	|					И РеквизитыЭтапов.ДатаПроизводства > РеквизитыЭтапов.ФактическоеОкончаниеЭтапа
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					И (КоличествоСтрок.ВыходныеИзделияПроизведено > 0 ИЛИ КоличествоСтрок.ПобочныеИзделияПроизведено > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаПроизводстваБольшеЧемФактическоеОкончаниеЭтапа,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.НеОтгружатьЧастями
	|					И РеквизитыЭтапов.ДатаОтгрузки = ДАТАВРЕМЯ(1,1,1)
	|					И (КоличествоСтрок.Обеспечение > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаОтгрузки,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.РасходОднойДатой
	|					И РеквизитыЭтапов.ДатаРасхода = ДАТАВРЕМЯ(1,1,1)
	|					И (КоличествоСтрок.Расход > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаРасхода,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.РасходОднойДатой
	|					И РеквизитыЭтапов.ДатаРасхода < НАЧАЛОПЕРИОДА(РеквизитыЭтапов.ФактическоеНачалоЭтапа, ДЕНЬ)
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И (КоличествоСтрок.Расход > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаРасходаМеньшеЧемФактическоеНачалоЭтапа,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.РасходОднойДатой
	|					И РеквизитыЭтапов.ДатаРасхода > РеквизитыЭтапов.ФактическоеОкончаниеЭтапа
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					И (КоличествоСтрок.Расход > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаРасходаБольшеЧемФактическоеОкончаниеЭтапа,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ВыполнениеРаботОднойДатой
	|					И РеквизитыЭтапов.ДатаВыполненияРабот = ДАТАВРЕМЯ(1,1,1)
	|					И (КоличествоСтрок.Трудозатраты > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаВыполненияРабот,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ВыполнениеРаботОднойДатой
	|					И РеквизитыЭтапов.ДатаВыполненияРабот < НАЧАЛОПЕРИОДА(РеквизитыЭтапов.ФактическоеНачалоЭтапа, ДЕНЬ)
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И (КоличествоСтрок.Трудозатраты > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаВыполненияРаботМеньшеЧемФактическоеНачалоЭтапа,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ВыполнениеРаботОднойДатой
	|					И РеквизитыЭтапов.ДатаВыполненияРабот > РеквизитыЭтапов.ФактическоеОкончаниеЭтапа
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					И (КоличествоСтрок.Трудозатраты > 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаВыполненияРаботБольшеЧемФактическоеОкончаниеЭтапа,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И РеквизитыЭтапов.ЭтоПроверкаДокумента
	|					И РеквизитыЭтапов.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|					И (РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗаказПереработчикуНеОФормлен,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И РеквизитыЭтапов.ЭтоПроверкаДокумента
	|					И НЕ РеквизитыЭтапов.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|					И (РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован)))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗаказПереработчикуОФормлен
	|	ИЗ
	|		РеквизитыЭтапов КАК РеквизитыЭтапов,
	|			ЛЕВОЕ СОЕДИНЕНИЕ #КоличествоСтрок КАК КоличествоСтрок
	|			ПО РеквизитыЭтапов.Ссылка = КоличествоСтрок.Ссылка
	|) КАК ВложенныйЗапрос
	|ГДЕ
	|	(ВложенныйЗапрос.ЗаказПереработчикуНеОФормлен
	|		ИЛИ ВложенныйЗапрос.ЗаказПереработчикуОФормлен
	|		ИЛИ ВложенныйЗапрос.ДатаПроизводства
	|		ИЛИ ВложенныйЗапрос.ДатаПроизводстваМеньшеЧемФактическоеНачалоЭтапа
	|		ИЛИ ВложенныйЗапрос.ДатаПроизводстваБольшеЧемФактическоеОкончаниеЭтапа	
	|		ИЛИ ВложенныйЗапрос.ДатаОтгрузки
	|		ИЛИ ВложенныйЗапрос.ДатаРасхода
	|		ИЛИ ВложенныйЗапрос.ДатаРасходаМеньшеЧемФактическоеНачалоЭтапа
	|		ИЛИ ВложенныйЗапрос.ДатаРасходаБольшеЧемФактическоеОкончаниеЭтапа
	|		ИЛИ ВложенныйЗапрос.ДатаВыполненияРабот
	|		ИЛИ ВложенныйЗапрос.ДатаВыполненияРаботМеньшеЧемФактическоеНачалоЭтапа
	|		ИЛИ ВложенныйЗапрос.ДатаВыполненияРаботБольшеЧемФактическоеОкончаниеЭтапа
	|		ИЛИ ВложенныйЗапрос.ФактическоеНачалоЭтапа
	|		ИЛИ ВложенныйЗапрос.ФактическоеОкончаниеЭтапа
	|		ИЛИ ВложенныйЗапрос.ФактическоеОкончаниеЭтапаМеньшеФактическоеНачалоЭтапа
	|	)";
	ПодставитьТекстЗапросаКоличествоСтрокВТЧДляПроверкиЗаполнения(МенеджерВременныхТаблиц, ТекстЗапроса);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	СообщитьОбОшибкахЗаполнения(
		Объект,
		Выборка,
		СписокРеквизитов,,
		Отказ);
	
КонецПроцедуры

Процедура ПроверитьВыходныеИзделия(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ)

	ПроверятьВыходныеИзделия = МенеджерВременныхТаблиц.Таблицы.Найти("ВыходныеИзделия") <> Неопределено;
	Если Не ПроверятьВыходныеИзделия Тогда
		ОтключитьПроверкуЗаполненияТЧ("ВыходныеИзделия", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
	ПроверятьПобочныеИзделия = МенеджерВременныхТаблиц.Таблицы.Найти("ПобочныеИзделия") <> Неопределено;
	Если Не ПроверятьПобочныеИзделия Тогда
		ОтключитьПроверкуЗаполненияТЧ("ПобочныеИзделия", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	КонецЕсли;
	
	Если Не ПроверятьВыходныеИзделия И Не ПроверятьПобочныеИзделия Тогда
		Возврат;
	КонецЕсли;
	
	СписокРеквизитов = Новый Массив;
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Получатель", "ПолучательНеЗаполнен");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""Получатель"" в строке %1 списка ""%2"".';
											|en = 'The Recipient column is not filled in line %1 of the ""%2"" list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("СтатьяРасходов", "СтатьяРасходовНеЗаполнена");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""Статья расходов"" в строке %1 списка ""%2"".';
											|en = 'The ""Expense item"" column is not filled in line %1 of the ""%2"" list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Номенклатура", "ЗапрещенВыборСУчетомПоГТД_Операции");
	ПараметрыПроверки.ШаблонСообщения =
		НСтр("ru = 'В строке %1 списка ""%2"" выбрана номенклатура, для которой ведется учет по ГТД.
			|При включенной опции ""Запретить оформление операций с импортными товарами без номеров ГТД"" выбор такой номенклатуры запрещен.';
			|en = 'Products with accounting by CCD are selected in line %1 of the %2 list. 
			|If the ""Prohibit registration of operations with imported goods without CCD numbers"" option is enabled, you cannot select such products.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
		
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Характеристика", "ХарактеристикаНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Получатель", "РаботыЗапрещеноВыпускатьНаСклад");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Работы можно выпустить в подразделение или списать на расходы, передача работ на склад не предусмотрена (строка %1 списка ""%2"").';
											|en = 'You can release works to department or write off as expenses, work transfer to warehouse is not available (line %1 of the ""%2"" list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Назначение", "НазначениеНеЗаполнено");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""Назначение"" в строке %1 списка ""%2"".';
											|en = 'The Assignment column is not filled in line %1 of the ""%2"" list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Номенклатура", "ДоляСтоимостиНеЗаполнена");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не удалось рассчитать долю стоимости для номенклатуры в строке %1 списка ""%2"".';
											|en = 'Cannot calculate cost share for products in line %1 of the ""%2"" list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Произведено", "ПроизведеноНеЗаполнено");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаПроизводства", "ДатаПроизводстваНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("КоличествоУпаковок", "КоличествоУпаковокНеЗаполнено");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Количество", "КоличествоНеЗаполнено");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Обнаружено нулевое количество при пересчете в единицу хранения в строке %1 списка ""%2"".';
											|en = 'Zero quantity is detected after conversion into the storage unit in line %1 of the %2 list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("СтатьяКалькуляции", "СтатьяКалькуляцииНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаПроизводства", "ДатаПроизводстваМеньшеЧемФактическоеНачалоЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата производства не может быть меньше даты начала этапа (строка %1 списка ""%2"").';
											|en = 'Production date cannot be less than the stage start date (line %1 of the %2 list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаПроизводства", "ДатаПроизводстваБольшеЧемФактическоеОкончаниеЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата производства не может быть больше даты выполнения этапа (строка %1 списка ""%2"").';
											|en = 'Production date cannot be greater than the stage fulfillment date (line %1 of the %2 list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Номенклатура", "СписаниеНаРасходТоваровПриПроизводствеНаСтороне");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не допускается списание товара (тары) на расходы при переработке на стороне (строка %1 списка ""%2"").';
											|en = 'Cannot write off goods (package) as expenses while processing by the third party (line %1 of the %2 list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
		
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ПричинаОтмены", "ПричинаОтменыНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.РаботыЗапрещеноВыпускатьНаСклад,
	|	ВложенныйЗапрос.ХарактеристикаНеЗаполнена,
	|	ВложенныйЗапрос.ПолучательНеЗаполнен,
	|	ВложенныйЗапрос.СтатьяРасходовНеЗаполнена,
	|	ВложенныйЗапрос.НазначениеНеЗаполнено,
	|	ВложенныйЗапрос.ДоляСтоимостиНеЗаполнена,
	|	ВложенныйЗапрос.ПроизведеноНеЗаполнено,
	|	ВложенныйЗапрос.ДатаПроизводстваНеЗаполнена,
	|	ВложенныйЗапрос.КоличествоУпаковокНеЗаполнено,
	|	ВложенныйЗапрос.КоличествоНеЗаполнено,
	|	ВложенныйЗапрос.ЗапрещенВыборСУчетомПоГТД_Операции,
	|	ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена,
	|	ВложенныйЗапрос.ДатаПроизводстваМеньшеЧемФактическоеНачалоЭтапа,
	|	ВложенныйЗапрос.ДатаПроизводстваБольшеЧемФактическоеОкончаниеЭтапа,
	|	ВложенныйЗапрос.СписаниеНаРасходТоваровПриПроизводствеНаСтороне,
	|	ВложенныйЗапрос.ПричинаОтменыНеЗаполнена
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|		ВЫБОР
	|			КОГДА &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|				И ТабличнаяЧасть.Номенклатура.ВестиУчетПоГТД
	|				И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|																ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗапрещенВыборСУчетомПоГТД_Операции,
	|		ВЫБОР
	|			КОГДА &ХарактеристикиИспользуются
	|				И ТабличнаяЧасть.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ХарактеристикаНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|					И ТабличнаяЧасть.Получатель <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					И НЕ ТабличнаяЧасть.Отменено
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК РаботыЗапрещеноВыпускатьНаСклад,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Получатель В (
	|							НЕОПРЕДЕЛЕНО, 
	|							ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), 
	|							ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|					И НЕ ТабличнаяЧасть.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|					И НЕ ТабличнаяЧасть.Отменено
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПолучательНеЗаполнен,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|					И ТабличнаяЧасть.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|					И НЕ ТабличнаяЧасть.Отменено
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СтатьяРасходовНеЗаполнена,
	|		ВЫБОР
	|			КОГДА (РеквизитыЭтапов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)
	|						И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|					ИЛИ ТабличнаяЧасть.Произведено И ТабличнаяЧасть.ОбработатьПоСпецификации
	|					ИЛИ ТабличнаяЧасть.ЭтапПотребитель <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка))
	|				И ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				И НЕ ТабличнаяЧасть.Отменено
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НазначениеНеЗаполнено,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДоляСтоимости = 0
	|					И РеквизитыЭтапов.СпособРаспределенияЗатратНаВыходныеИзделия В (
	|								// способ ""По долям стоимости"" проверяется отдельно
	|								ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоПлановойСтоимости),
	|								ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоВесу),
	|								ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоОбъему))
	|					И НЕ ТабличнаяЧасть.Отменено
	|					И НЕ &ПроверкаПобочногоВыпуска
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДоляСтоимостиНеЗаполнена,
	|		ВЫБОР
	|			КОГДА НЕ ТабличнаяЧасть.Произведено
	|					И РеквизитыЭтапов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					И НЕ ТабличнаяЧасть.Отменено
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПроизведеноНеЗаполнено,
	|		ВЫБОР
	|			КОГДА (ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|					И (РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|						ИЛИ РеквизитыЭтапов.ПроизводствоНаСтороне
	|							И (НЕ РеквизитыЭтапов.ЭтоПроверкаДокумента 
	|								ИЛИ РеквизитыЭтапов.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|					)
	|					И НЕ ТабличнаяЧасть.Отменено
	|					И НЕ РеквизитыЭтапов.ПроизводствоОднойДатой
	|			)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаПроизводстваНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				И НЕ ТабличнаяЧасть.Отменено
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК КоличествоУпаковокНеЗаполнено,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Количество = 0 И ТабличнаяЧасть.КоличествоУпаковок <> 0
	|				И НЕ ТабличнаяЧасть.Отменено
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК КоличествоНеЗаполнено,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					И НЕ ТабличнаяЧасть.Отменено
	|					И &ПроверкаПобочногоВыпуска
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СтатьяКалькуляцииНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаПроизводства < НАЧАЛОПЕРИОДА(РеквизитыЭтапов.ФактическоеНачалоЭтапа, ДЕНЬ)
	|					И НЕ ТабличнаяЧасть.Отменено
	|					И ТабличнаяЧасть.Произведено
	|					И НЕ РеквизитыЭтапов.ПроизводствоОднойДатой
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаПроизводстваМеньшеЧемФактическоеНачалоЭтапа,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаПроизводства > РеквизитыЭтапов.ФактическоеОкончаниеЭтапа 
	|					И НЕ ТабличнаяЧасть.Отменено
	|					И ТабличнаяЧасть.Произведено
	|					И НЕ РеквизитыЭтапов.ПроизводствоОднойДатой
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаПроизводстваБольшеЧемФактическоеОкончаниеЭтапа,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.СписатьНаРасходы	
	|					И ТабличнаяЧасть.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					И РеквизитыЭтапов.ПроизводствоНаСтороне	
	|					И НЕ ТабличнаяЧасть.Отменено
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СписаниеНаРасходТоваровПриПроизводствеНаСтороне,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Отменено
	|					И ТабличнаяЧасть.ПричинаОтмены = ЗНАЧЕНИЕ(Справочник.ПричиныОтменыПроизводства.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПричинаОтменыНеЗаполнена
	|	ИЗ
	|		ВыходныеИзделия КАК ТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|				ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка) КАК ВложенныйЗапрос
	|ГДЕ
	|	(ВложенныйЗапрос.РаботыЗапрещеноВыпускатьНаСклад
	|			ИЛИ ВложенныйЗапрос.ХарактеристикаНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.ПолучательНеЗаполнен
	|			ИЛИ ВложенныйЗапрос.СтатьяРасходовНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.НазначениеНеЗаполнено
	|			ИЛИ ВложенныйЗапрос.ДоляСтоимостиНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.ПроизведеноНеЗаполнено
	|			ИЛИ ВложенныйЗапрос.ДатаПроизводстваНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.КоличествоУпаковокНеЗаполнено
	|			ИЛИ ВложенныйЗапрос.КоличествоНеЗаполнено
	|			ИЛИ ВложенныйЗапрос.ЗапрещенВыборСУчетомПоГТД_Операции
	|			ИЛИ ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.ДатаПроизводстваМеньшеЧемФактическоеНачалоЭтапа
	|			ИЛИ ВложенныйЗапрос.ДатаПроизводстваБольшеЧемФактическоеОкончаниеЭтапа
	|			ИЛИ ВложенныйЗапрос.СписаниеНаРасходТоваровПриПроизводствеНаСтороне
	|			ИЛИ ВложенныйЗапрос.ПричинаОтменыНеЗаполнена
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки";
	
	Если ПроверятьВыходныеИзделия Тогда
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ПроверкаПобочногоВыпуска", Ложь);
		Запрос.УстановитьПараметр("ХарактеристикиИспользуются", ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры"));
		Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД", ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Выборка = Запрос.Выполнить().Выбрать();
		СообщитьОбОшибкахЗаполнения(
			Объект,
			Выборка,
			СписокРеквизитов,
			"ВыходныеИзделия",
			Отказ);
		
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			Объект,
			Новый Структура("ВыходныеИзделия"),
			МассивНепроверяемыхРеквизитов,
			Отказ);
		
	КонецЕсли;
	
	Если ПроверятьПобочныеИзделия Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВыходныеИзделия КАК ТабличнаяЧасть", "ПобочныеИзделия КАК ТабличнаяЧасть");
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ПроверкаПобочногоВыпуска", Истина);
		Запрос.УстановитьПараметр("ХарактеристикиИспользуются", ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры"));
		Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД", ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Выборка = Запрос.Выполнить().Выбрать();
		СообщитьОбОшибкахЗаполнения(
			Объект,
			Выборка,
			СписокРеквизитов,
			"ПобочныеИзделия",
			Отказ);
		
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			Объект,
			Новый Структура("ПобочныеИзделия"),
			МассивНепроверяемыхРеквизитов,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьОбеспечениеМатериаламиИРаботами(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ)

	ПроверятьОбеспечение = МенеджерВременныхТаблиц.Таблицы.Найти("ОбеспечениеМатериаламиИРаботами") <> Неопределено;
	Если Не ПроверятьОбеспечение Тогда
		ОтключитьПроверкуЗаполненияТЧ("ОбеспечениеМатериаламиИРаботами", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
		Возврат;
	КонецЕсли;
	
	СписокРеквизитов = Новый Массив;
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Характеристика", "ХарактеристикаНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаОтгрузки", "ДатаОтгрузкиНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Склад", "СкладНеЗаполнен");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Спецификация", "СпецификацияНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Номенклатура", "ЗапрещенВыборРабот");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не допускается выбор работ при переработке на стороне (строка %1 списка ""%2"").';
											|en = 'Cannot select works while processing by the third party (line %1 of the ""%2"" list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ВариантОбеспечения", "ВариантОбеспеченияПФ");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Для производимых полуфабрикатов необходимо установить действие ""Обеспечивать обособленно"" или ""Отгрузить обособленно"" (строка %1 списка ""%2"").';
											|en = 'Select the ""Provide on pegging basis"" or ""Ship on pegging basis"" action for the manufactured semi-finished products (line %1 of the %2 list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ВариантОбеспечения", "НедоступнаОтгрузка");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Отгрузка материалов доступна только при статусах ""Начат"", ""Завершен"" (строка %1 списка ""%2"").';
											|en = 'Material shipment is available only for statuses ""Started"", ""Completed"" (%1 line of the ""%2"" list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ВариантОбеспечения", "ВариантОбеспеченияЭтапЗавершен");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'В завершенном этапе для всех материалов необходимо установить действие ""Отгрузить"" или ""Отгрузить обособленно"" (строка %1 списка ""%2"").';
											|en = 'Select the Ship or Ship separately action (line %1 of the ""%2"" list) for all materials at the completed stage.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("СтатьяКалькуляции", "СтатьяКалькуляцииНеЗаполнена");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'В статусе ""Начат"" и ""Завершен"" указание статьи калькуляции является обязательным (строка %1 списка ""%2"").';
											|en = 'Costing item specification is required in the Started and Completed status (line %1 of the ""%2"" list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("КоличествоУпаковок", "КоличествоУпаковокНеЗаполнено");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Количество", "КоличествоНеЗаполнено");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Обнаружено нулевое количество при пересчете в единицу хранения в строке %1 списка ""%2"".';
											|en = 'Zero quantity is detected after conversion into the storage unit in line %1 of the %2 list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	Если ТипЗнч(Объект) <> Тип("ОбработкаОбъект.РедактированиеЭтаповПроизводства") Тогда // редактирование этапов производства на стороне
		
		ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ВариантОбеспечения", "НедоступнаОтгрузкаЗаказНеПроведен");
		ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Отгрузка материалов недоступна т.к. заказ переработчику не проведен (строка %1 списка ""%2"").';
												|en = 'Material shipment is not available as the tolling order is not posted (%1 line of the ""%2"" list).'");
		СписокРеквизитов.Добавить(ПараметрыПроверки);
		
		ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ВариантОбеспечения", "НедоступнаОтгрузкаНетЗаказа");
		ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Отгрузка материалов недоступна т.к. не оформлен заказ переработчику (строка %1 списка ""%2"").';
												|en = 'Material shipment is not available as the tolling order is not registered (%1 line of the ""%2"" list).'");
		СписокРеквизитов.Добавить(ПараметрыПроверки);
		
	КонецЕсли; 

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.ХарактеристикаНеЗаполнена,
	|	ВложенныйЗапрос.ЗапрещенВыборРабот,
	|	ВложенныйЗапрос.ДатаОтгрузкиНеЗаполнена,
	|	ВложенныйЗапрос.ВариантОбеспеченияПФ,
	|	ВложенныйЗапрос.ВариантОбеспеченияЭтапЗавершен,
	|	ВложенныйЗапрос.СкладНеЗаполнен,
	|	ВложенныйЗапрос.НедоступнаОтгрузка,
	|	ВложенныйЗапрос.НедоступнаОтгрузкаЗаказНеПроведен,
	|	ВложенныйЗапрос.НедоступнаОтгрузкаНетЗаказа,
	|	ВложенныйЗапрос.СпецификацияНеЗаполнена,
	|	ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена,
	|	ВложенныйЗапрос.КоличествоУпаковокНеЗаполнено,
	|	ВложенныйЗапрос.КоличествоНеЗаполнено
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|		ВЫБОР
	|			КОГДА &ХарактеристикиИспользуются
	|				И ТабличнаяЧасть.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ХарактеристикаНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					И РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗапрещенВыборРабот,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					И НЕ ТабличнаяЧасть.ВариантОбеспечения В (
	|							ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|							ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВариантОбеспеченияЭтапЗавершен,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
	|					И НЕ РеквизитыЭтапов.НеОтгружатьЧастями
	|					И ТабличнаяЧасть.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаОтгрузкиНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ВариантОбеспечения В (
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|					И НЕ РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НедоступнаОтгрузка,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ЭтоПроверкаДокумента
	|					И РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И ТабличнаяЧасть.ВариантОбеспечения В (
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|					И РеквизитыЭтапов.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|					И НЕ ВЫРАЗИТЬ(РеквизитыЭтапов.ЗаказПереработчику КАК Документ.ЗаказПереработчику).Проведен
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НедоступнаОтгрузкаЗаказНеПроведен,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.ЭтоПроверкаДокумента
	|					И РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И ТабличнаяЧасть.ВариантОбеспечения В (
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|					И РеквизитыЭтапов.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НедоступнаОтгрузкаНетЗаказа,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					И ТабличнаяЧасть.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
	|					И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СкладНеЗаполнен,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Производится
	|					И НЕ ТабличнаяЧасть.ВариантОбеспечения В (
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВариантОбеспеченияПФ,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Спецификация = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|					И ТабличнаяЧасть.Производится
	|					И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СпецификацияНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СтатьяКалькуляцииНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК КоличествоУпаковокНеЗаполнено,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Количество = 0 И ТабличнаяЧасть.КоличествоУпаковок <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК КоличествоНеЗаполнено
	|	ИЗ
	|		ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|			ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка) КАК ВложенныйЗапрос
	|ГДЕ
	|	(ВложенныйЗапрос.СкладНеЗаполнен
	|			ИЛИ ВложенныйЗапрос.ХарактеристикаНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.ДатаОтгрузкиНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.СпецификацияНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.ВариантОбеспеченияПФ
	|			ИЛИ ВложенныйЗапрос.НедоступнаОтгрузка
	|			ИЛИ ВложенныйЗапрос.НедоступнаОтгрузкаЗаказНеПроведен
	|			ИЛИ ВложенныйЗапрос.НедоступнаОтгрузкаНетЗаказа
	|			ИЛИ ВложенныйЗапрос.ЗапрещенВыборРабот
	|			ИЛИ ВложенныйЗапрос.ВариантОбеспеченияЭтапЗавершен
	|			ИЛИ ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.КоличествоУпаковокНеЗаполнено
	|			ИЛИ ВложенныйЗапрос.КоличествоНеЗаполнено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ХарактеристикиИспользуются", ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры"));

	Выборка = Запрос.Выполнить().Выбрать();
	СообщитьОбОшибкахЗаполнения(
		Объект,
		Выборка,
		СписокРеквизитов,
		"ОбеспечениеМатериаламиИРаботами",
		Отказ);
	
КонецПроцедуры

Процедура ПроверитьТрудозатраты(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ)
	
	ПроверятьТрудозатраты = МенеджерВременныхТаблиц.Таблицы.Найти("Трудозатраты") <> Неопределено;
	Если Не ПроверятьТрудозатраты Тогда
		ОтключитьПроверкуЗаполненияТЧ("Трудозатраты", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
		Возврат;
	КонецЕсли;
	
	СписокРеквизитов = Новый Массив;
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Исполнитель", "ИсполнительНеЗаполнен");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Выполнено", "ВыполненоНеЗаполнено");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаВыполнения", "ДатаВыполненияНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаВыполнения", "ДатаВыполненияМеньшеЧемФактическоеНачалоЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата выполнения работы не может быть меньше даты начала этапа (строка %1 списка ""%2"").';
											|en = 'Work execution date cannot be less than the stage start date (line %1 of the %2 list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаВыполнения", "ДатаВыполненияБольшеЧемФактическоеОкончаниеЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата выполнения работы не может быть больше даты выполнения этапа (строка %1 списка ""%2"").';
											|en = 'Work execution date cannot be greater than the stage fulfillment date (line %1 of the %2 list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("СтатьяКалькуляции", "СтатьяКалькуляцииНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.ИсполнительНеЗаполнен,
	|	ВложенныйЗапрос.ВыполненоНеЗаполнено,
	|	ВложенныйЗапрос.ДатаВыполненияНеЗаполнена,
	|	ВложенныйЗапрос.ДатаВыполненияМеньшеЧемФактическоеНачалоЭтапа,
	|	ВложенныйЗапрос.ДатаВыполненияБольшеЧемФактическоеОкончаниеЭтапа,
	|	ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Выполнено И ТабличнаяЧасть.Исполнитель В (
	|													НЕОПРЕДЕЛЕНО,
	|													ЗНАЧЕНИЕ(Справочник.Бригады.ПустаяСсылка),
	|													ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|				И НЕ РеквизитыЭтапов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется),
	|												ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ИсполнительНеЗаполнен,
	|		ВЫБОР
	|			КОГДА НЕ ТабличнаяЧасть.Выполнено
	|				И РеквизитыЭтапов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВыполненоНеЗаполнено,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Выполнено И ТабличнаяЧасть.ДатаВыполнения = ДАТАВРЕМЯ(1,1,1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаВыполненияНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаВыполнения < НАЧАЛОПЕРИОДА(РеквизитыЭтапов.ФактическоеНачалоЭтапа, ДЕНЬ) 
	|					И ТабличнаяЧасть.Выполнено
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаВыполненияМеньшеЧемФактическоеНачалоЭтапа,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаВыполнения > РеквизитыЭтапов.ФактическоеОкончаниеЭтапа 
	|					И ТабличнаяЧасть.Выполнено
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаВыполненияБольшеЧемФактическоеОкончаниеЭтапа,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СтатьяКалькуляцииНеЗаполнена
	|	ИЗ
	|		Трудозатраты КАК ТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|				ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка) КАК ВложенныйЗапрос
	|ГДЕ
	|	(ВложенныйЗапрос.ИсполнительНеЗаполнен
	|		ИЛИ ВложенныйЗапрос.ВыполненоНеЗаполнено
	|		ИЛИ ВложенныйЗапрос.ДатаВыполненияНеЗаполнена
	|		ИЛИ ВложенныйЗапрос.ДатаВыполненияМеньшеЧемФактическоеНачалоЭтапа
	|		ИЛИ ВложенныйЗапрос.ДатаВыполненияБольшеЧемФактическоеОкончаниеЭтапа
	|		ИЛИ ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	СообщитьОбОшибкахЗаполнения(
		Объект,
		Выборка,
		СписокРеквизитов,
		"Трудозатраты",
		Отказ);
	
КонецПроцедуры

Процедура ПроверитьРасходМатериаловИРабот(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ)
	
	ПроверятьРасходМатериаловИРабот = МенеджерВременныхТаблиц.Таблицы.Найти("РасходМатериаловИРабот") <> Неопределено;
	Если Не ПроверятьРасходМатериаловИРабот Тогда
		ОтключитьПроверкуЗаполненияТЧ("РасходМатериаловИРабот", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
		Возврат;
	КонецЕсли;
	
	СписокРеквизитов = Новый Массив;
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Характеристика", "ХарактеристикаНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаРасхода", "ДатаРасходаНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаРасхода", "ДатаРасходаМеньшеЧемФактическоеНачалоЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата расхода не может быть меньше даты начала этапа (строка %1 списка ""%2"").';
											|en = 'Consumption date cannot be less than the stage start date (line %1 of the %2 list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаРасхода", "ДатаРасходаБольшеЧемФактическоеОкончаниеЭтапа");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Дата расхода не может быть больше даты выполнения этапа (строка %1 списка ""%2"").';
											|en = 'Consumption date cannot be greater than the stage fulfillment date (line %1 of the %2 list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("КоличествоУпаковок", "КоличествоУпаковокНеЗаполнено");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Количество", "КоличествоНеЗаполнено");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Обнаружено нулевое количество при пересчете в единицу хранения в строке %1 списка ""%2"".';
											|en = 'Zero quantity is detected after conversion into the storage unit in line %1 of the %2 list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("СтатьяКалькуляции", "СтатьяКалькуляцииНеЗаполнена");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'В статусе ""Начат"" и ""Завершен"" указание статьи калькуляции является обязательным (строка %1 списка ""%2"").';
											|en = 'Costing item specification is required in the Started and Completed status (line %1 of the ""%2"" list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.ХарактеристикаНеЗаполнена,
	|	ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена,
	|	ВложенныйЗапрос.ДатаРасходаНеЗаполнена,
	|	ВложенныйЗапрос.ДатаРасходаМеньшеЧемФактическоеНачалоЭтапа,
	|	ВложенныйЗапрос.ДатаРасходаБольшеЧемФактическоеОкончаниеЭтапа,
	|	ВложенныйЗапрос.КоличествоУпаковокНеЗаполнено,
	|	ВложенныйЗапрос.КоличествоНеЗаполнено
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|		ВЫБОР
	|			КОГДА &ХарактеристикиИспользуются
	|				И ТабличнаяЧасть.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ХарактеристикаНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|				И РеквизитыЭтапов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|												ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СтатьяКалькуляцииНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаРасхода = ДАТАВРЕМЯ(1, 1, 1)
	|					И НЕ РеквизитыЭтапов.РасходОднойДатой
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаРасходаНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаРасхода < НАЧАЛОПЕРИОДА(РеквизитыЭтапов.ФактическоеНачалоЭтапа, ДЕНЬ)
	|					И НЕ РеквизитыЭтапов.РасходОднойДатой
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаРасходаМеньшеЧемФактическоеНачалоЭтапа,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаРасхода > РеквизитыЭтапов.ФактическоеОкончаниеЭтапа
	|					И НЕ РеквизитыЭтапов.РасходОднойДатой
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаРасходаБольшеЧемФактическоеОкончаниеЭтапа,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК КоличествоУпаковокНеЗаполнено,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Количество = 0 И ТабличнаяЧасть.КоличествоУпаковок <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК КоличествоНеЗаполнено
	|	ИЗ
	|		РасходМатериаловИРабот КАК ТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|				ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка) КАК ВложенныйЗапрос
	|ГДЕ
	|	(ВложенныйЗапрос.ХарактеристикаНеЗаполнена
	|		ИЛИ ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена
	|		ИЛИ ВложенныйЗапрос.ДатаРасходаНеЗаполнена
	|		ИЛИ ВложенныйЗапрос.ДатаРасходаМеньшеЧемФактическоеНачалоЭтапа
	|		ИЛИ ВложенныйЗапрос.ДатаРасходаБольшеЧемФактическоеОкончаниеЭтапа
	|		ИЛИ ВложенныйЗапрос.КоличествоУпаковокНеЗаполнено
	|		ИЛИ ВложенныйЗапрос.КоличествоНеЗаполнено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки");
	Запрос.УстановитьПараметр("ХарактеристикиИспользуются", ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Выборка = Запрос.Выполнить().Выбрать();
	
	СообщитьОбОшибкахЗаполнения(
		Объект,
		Выборка,
		СписокРеквизитов,
		"РасходМатериаловИРабот",
		Отказ);

КонецПроцедуры

Процедура ПроверитьЭкономияМатериалов(Объект, МенеджерВременныхТаблиц, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ)
	
	ПроверятьЭкономияМатериалов = МенеджерВременныхТаблиц.Таблицы.Найти("ЭкономияМатериалов") <> Неопределено;
	Если Не ПроверятьЭкономияМатериалов Тогда
		ОтключитьПроверкуЗаполненияТЧ("ЭкономияМатериалов", ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
		Возврат;
	КонецЕсли;

	СписокРеквизитов = Новый Массив;
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Характеристика", "ХарактеристикаНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Получатель", "ПолучательНеЗаполнен");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""Получатель"" в строке %1 списка ""%2"".';
											|en = 'The Recipient column is not filled in line %1 of the ""%2"" list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("СтатьяРасходов", "СтатьяРасходовНеЗаполнена");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не заполнена колонка ""Статья расходов"" в строке %1 списка ""%2"".';
											|en = 'The ""Expense item"" column is not filled in line %1 of the ""%2"" list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Получатель", "ВыбранаЧужаяКладовая");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не допускается выбор цеховых кладовых других подразделений (строка %1 списка ""%2"").';
											|en = 'Cannot select shop storerooms of other departments (line %1 of the ""%2"" list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Обособить", "НедопускаетсяОбособлениеТары");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Не допускается обособление тары (строка %1 списка ""%2"").';
											|en = 'Cannot separate package (line %1 of the ""%2"" list).'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("ДатаОперации", "ДатаОперацииНеЗаполнена");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("КоличествоУпаковок", "КоличествоУпаковокНеЗаполнено");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиРеквизитов("Количество", "КоличествоНеЗаполнено");
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru = 'Обнаружено нулевое количество при пересчете в единицу хранения в строке %1 списка ""%2"".';
											|en = 'Zero quantity is detected after conversion into the storage unit in line %1 of the %2 list.'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.ХарактеристикаНеЗаполнена,
	|	ВложенныйЗапрос.ПолучательНеЗаполнен,
	|	ВложенныйЗапрос.СтатьяРасходовНеЗаполнена,
	|	ВложенныйЗапрос.ДатаОперацииНеЗаполнена,
	|	ВложенныйЗапрос.ВыбранаЧужаяКладовая,
	|	ВложенныйЗапрос.НедопускаетсяОбособлениеТары,
	|	ВложенныйЗапрос.КоличествоУпаковокНеЗаполнено,
	|	ВложенныйЗапрос.КоличествоНеЗаполнено
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|		ВЫБОР
	|			КОГДА &ХарактеристикиИспользуются
	|				И ТабличнаяЧасть.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ХарактеристикаНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаОперации = ДАТАВРЕМЯ(1, 1, 1)
	|					И НЕ РеквизитыЭтапов.РасходОднойДатой
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаОперацииНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Получатель В (НЕОПРЕДЕЛЕНО,
	|						ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|						ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|					И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПолучательНеЗаполнен,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|					И ТабличнаяЧасть.СписатьНаРасходы
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СтатьяРасходовНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|					И ТабличнаяЧасть.Обособить
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НедопускаетсяОбособлениеТары,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Получатель <> НЕОПРЕДЕЛЕНО
	|					И ТабличнаяЧасть.Получатель.ЦеховаяКладовая
	|					И ТабличнаяЧасть.Получатель.Подразделение <> РеквизитыЭтапов.Подразделение
	|					И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВыбранаЧужаяКладовая,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК КоличествоУпаковокНеЗаполнено,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Количество = 0 И ТабличнаяЧасть.КоличествоУпаковок <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК КоличествоНеЗаполнено
	|	ИЗ
	|		ЭкономияМатериалов КАК ТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|				ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка) КАК ВложенныйЗапрос
	|ГДЕ
	|	(ВложенныйЗапрос.ХарактеристикаНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.СтатьяРасходовНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.ПолучательНеЗаполнен
	|			ИЛИ ВложенныйЗапрос.ДатаОперацииНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.ВыбранаЧужаяКладовая
	|			ИЛИ ВложенныйЗапрос.НедопускаетсяОбособлениеТары
	|			ИЛИ ВложенныйЗапрос.КоличествоУпаковокНеЗаполнено
	|			ИЛИ ВложенныйЗапрос.КоличествоНеЗаполнено)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки");
	Запрос.УстановитьПараметр("ХарактеристикиИспользуются", ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	СообщитьОбОшибкахЗаполнения(
		Объект,
		Выборка,
		СписокРеквизитов,
		"ЭкономияМатериалов",
		Отказ);
	
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
		Объект,
		Новый Структура("ЭкономияМатериалов"),
		МассивНепроверяемыхРеквизитов,
		Отказ);
	
КонецПроцедуры

Процедура ПроверитьРавенствоПоМатериалам(Объект, МенеджерВременныхТаблиц, Отказ)
	
	Если Отказ
		ИЛИ МенеджерВременныхТаблиц.Таблицы.Найти("ОбеспечениеМатериаламиИРаботами") = Неопределено
		ИЛИ МенеджерВременныхТаблиц.Таблицы.Найти("РасходМатериаловИРабот") = Неопределено
		ИЛИ МенеджерВременныхТаблиц.Таблицы.Найти("ЭкономияМатериалов") = Неопределено
		Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	// 0
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка               КАК Ссылка,
	|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки) КАК НомерСтроки,
	|	ТабличнаяЧасть.Номенклатура         КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика       КАК Характеристика,
	|	СУММА(ТабличнаяЧасть.Количество)    КАК Количество
	|
	|ПОМЕСТИТЬ Обеспечение
	|ИЗ
	|	ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|		ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	РеквизитыЭтапов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
	|	И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 1
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка               КАК Ссылка,
	|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки) КАК НомерСтроки,
	|	ТабличнаяЧасть.Номенклатура         КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика       КАК Характеристика,
	|	СУММА(ТабличнаяЧасть.Количество)    КАК Количество
	|
	|ПОМЕСТИТЬ Расход
	|ИЗ
	|	РасходМатериаловИРабот КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|		ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	РеквизитыЭтапов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
	|	И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 2
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка               КАК Ссылка,
	|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки) КАК НомерСтроки,
	|	ТабличнаяЧасть.Номенклатура         КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика       КАК Характеристика,
	|	СУММА(ТабличнаяЧасть.Количество)    КАК Количество
	|
	|ПОМЕСТИТЬ Экономия
	|ИЗ
	|	ЭкономияМатериалов КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|		ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	РеквизитыЭтапов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
	|	И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 3
	|ВЫБРАТЬ
	|	Обеспечение.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры                КАК ТипНоменклатуры,
	|	ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения.ТипИзмеряемойВеличины КАК ТипИзмеряемойВеличины,
	|	ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).Представление                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(Обеспечение.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).Представление  КАК Характеристика,
	|	ВЫРАЗИТЬ(ИсходнаяТЧ.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения).Представление           КАК Упаковка,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоэффициентУпаковки,
	|	Обеспечение.Количество - (ЕСТЬNULL(Расход.Количество, 0) + ЕСТЬNULL(Экономия.Количество, 0)) КАК Количество
	|ИЗ
	|	Обеспечение КАК Обеспечение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбеспечениеМатериаламиИРаботами КАК ИсходнаяТЧ
	|			ПО ИсходнаяТЧ.Ссылка      = Обеспечение.Ссылка
	|			 И ИсходнаяТЧ.НомерСтроки = Обеспечение.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Расход КАК Расход
	|			ПО Расход.Ссылка         = Обеспечение.Ссылка
	|			 И Расход.Номенклатура   = Обеспечение.Номенклатура
	|			 И Расход.Характеристика = Обеспечение.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Экономия КАК Экономия
	|			ПО Экономия.Ссылка         = Обеспечение.Ссылка
	|			 И Экономия.Номенклатура   = Обеспечение.Номенклатура
	|			 И Экономия.Характеристика = Обеспечение.Характеристика
	|ГДЕ
	|	Обеспечение.Количество > ЕСТЬNULL(Расход.Количество, 0) + ЕСТЬNULL(Экономия.Количество, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 4
	|ВЫБРАТЬ
	|	Расход.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Расход.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры                  КАК ТипНоменклатуры,
	|	ВЫРАЗИТЬ(Расход.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения.Представление   КАК ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ(Расход.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения.ТипИзмеряемойВеличины КАК ТипИзмеряемойВеличины,
	|	ВЫРАЗИТЬ(Расход.Номенклатура КАК Справочник.Номенклатура).Представление                    КАК Номенклатура,
	|	ВЫРАЗИТЬ(Расход.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).Представление    КАК Характеристика,
	|	ВЫРАЗИТЬ(ИсходнаяТЧ.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения).Представление        КАК Упаковка,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоэффициентУпаковки,
	|	Расход.Количество - ЕСТЬNULL(Обеспечение.Количество, 0) КАК Количество
	|ИЗ
	|	Расход КАК Расход
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходМатериаловИРабот КАК ИсходнаяТЧ
	|			ПО ИсходнаяТЧ.Ссылка      = Расход.Ссылка
	|			 И ИсходнаяТЧ.НомерСтроки = Расход.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Обеспечение КАК Обеспечение
	|			ПО Расход.Ссылка         = Обеспечение.Ссылка
	|			 И Расход.Номенклатура   = Обеспечение.Номенклатура
	|			 И Расход.Характеристика = Обеспечение.Характеристика
	|ГДЕ
	|	Расход.Количество > ЕСТЬNULL(Обеспечение.Количество, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 5
	|ВЫБРАТЬ
	|	Экономия.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Экономия.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры                КАК ТипНоменклатуры,
	|	ВЫРАЗИТЬ(Экономия.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ(Экономия.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения.ТипИзмеряемойВеличины КАК ТипИзмеряемойВеличины,
	|	ВЫРАЗИТЬ(Экономия.Номенклатура КАК Справочник.Номенклатура).Представление                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(Экономия.Характеристика КАК Справочник.ХарактеристикиНоменклатуры).Представление  КАК Характеристика,
	|	ВЫРАЗИТЬ(ИсходнаяТЧ.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения).Представление        КАК Упаковка,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоэффициентУпаковки,
	|	Экономия.Количество - (ЕСТЬNULL(Обеспечение.Количество, 0) - ЕСТЬNULL(Расход.Количество, 0)) КАК Количество
	|ИЗ
	|	Экономия КАК Экономия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЭкономияМатериалов КАК ИсходнаяТЧ
	|			ПО ИсходнаяТЧ.Ссылка      = Экономия.Ссылка
	|			 И ИсходнаяТЧ.НомерСтроки = Экономия.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Обеспечение КАК Обеспечение
	|			ПО Экономия.Ссылка         = Обеспечение.Ссылка
	|			 И Экономия.Номенклатура   = Обеспечение.Номенклатура
	|			 И Экономия.Характеристика = Обеспечение.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Расход КАК Расход
	|			ПО Экономия.Ссылка         = Расход.Ссылка
	|			 И Экономия.Номенклатура   = Расход.Номенклатура
	|			 И Экономия.Характеристика = Расход.Характеристика
	|ГДЕ
	|	Экономия.Количество > (ЕСТЬNULL(Обеспечение.Количество, 0) - ЕСТЬNULL(Расход.Количество, 0))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Обеспечение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Расход
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Экономия
	|;");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ВЫРАЗИТЬ(ИсходнаяТЧ.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения)",
		"ВЫРАЗИТЬ(ИсходнаяТЧ.Номенклатура КАК Справочник.Номенклатура)"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Результат = Запрос.ВыполнитьПакет();
	
	Если ТипЗнч(Объект) <> Тип("ДокументОбъект.ЭтапПроизводства2_2") Тогда
		КлючДанных = Неопределено;
		ПутьКДанным = Объект.ПутьКДаннымРеквизитаФормыРедактирования();
	Иначе
		КлючДанных = Объект;
		ПутьКДанным = "";
	КонецЕсли;
	
	// Не указан расход материала
	Если Не Результат[3].Пустой() Тогда
		
		ШаблонСообщенияОбеспечениеБольше = НСтр("ru = 'Не указан расход материала ""%1"" в количестве %2 %3';
												|en = 'The ""%1"" material consumption in the amount of %2 %3 is not specified '");
		ШаблонСообщенияОбеспечениеБольшеРабота = НСтр("ru = 'Не указан расход работ ""%1"" в количестве %2 %3';
														|en = 'The ""%1"" work consumption in the amount of %2 %3 is not specified'");
		
		Выборка = Результат[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
										Выборка.Номенклатура, 
										Выборка.Характеристика);
										
			Если ЗначениеЗаполнено(Выборка.Упаковка)
				И (Выборка.ТипИзмеряемойВеличины <> Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук
					ИЛИ Цел(Выборка.Количество / Выборка.КоэффициентУпаковки) = (Выборка.Количество / Выборка.КоэффициентУпаковки)) Тогда
				Количество = Окр(Выборка.Количество / Выборка.КоэффициентУпаковки, 3);
				ЕдиницаИзмерения = Выборка.Упаковка;
			Иначе
				Количество = Выборка.Количество;
				ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
			КонецЕсли;
			
			ТекстШаблона = ?(Выборка.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа, ШаблонСообщенияОбеспечениеБольшеРабота, ШаблонСообщенияОбеспечениеБольше);
			ТекстСообщения = СтрШаблон(ТекстШаблона, НоменклатураПредставление, Формат(Количество, "ЧН=0; ЧГ=0"), ЕдиницаИзмерения);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОбеспечениеМатериаламиИРаботами", Выборка.НомерСтроки, "КоличествоУпаковок");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, ПутьКДанным, Отказ);
		
		КонецЦикла;
		
	КонецЕсли;
	
	// Расход превышает запланированное к обеспечению
	Если Не Результат[4].Пустой() Тогда
		
		ШаблонСообщенияРасходБольше = НСтр("ru = 'Расход материала ""%1"" превышает запланированное к обеспечению на %2 %3';
											|en = 'Consumption of the ""%1"" material exceeds the amount planned for fulfillment by %2 %3'");
		ШаблонСообщенияРасходБольшеРабота = НСтр("ru = 'Расход работы ""%1"" превышает запланированное к обеспечению на %2 %3';
												|en = 'Consumption of the ""%1"" work exceeds the amount planned for fulfillment by %2 %3'");
		
		Выборка = Результат[4].Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
										Выборка.Номенклатура, 
										Выборка.Характеристика);
										
			Если ЗначениеЗаполнено(Выборка.Упаковка)
				И (Выборка.ТипИзмеряемойВеличины <> Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук
					ИЛИ Цел(Выборка.Количество / Выборка.КоэффициентУпаковки) = (Выборка.Количество / Выборка.КоэффициентУпаковки)) Тогда
				Количество = Окр(Выборка.Количество / Выборка.КоэффициентУпаковки, 3);
				ЕдиницаИзмерения = Выборка.Упаковка;
			Иначе
				Количество = Выборка.Количество;
				ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
			КонецЕсли;
			
			ТекстШаблона = ?(Выборка.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа, ШаблонСообщенияРасходБольшеРабота, ШаблонСообщенияРасходБольше);
			ТекстСообщения = СтрШаблон(ТекстШаблона, НоменклатураПредставление, Формат(Количество, "ЧН=0; ЧГ=0"), ЕдиницаИзмерения);
								
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РасходМатериаловИРабот", Выборка.НомерСтроки, "КоличествоУпаковок");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, ПутьКДанным, Отказ);
		
		КонецЦикла;
		
	КонецЕсли;
	
	// Количество неизрасходованного материала превышает запланированное к обеспечению
	Если Не Результат[5].Пустой() Тогда
		
		ШаблонСообщенияЭкономия = НСтр("ru = 'Количество неизрасходованного материала ""%1"" превышает запланированное к обеспечению на %2 %3';
										|en = 'The amount of unused material ""%1"" exceeds the amount planned for fulfillment by %2 %3'");
		
		Выборка = Результат[5].Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
										Выборка.Номенклатура, 
										Выборка.Характеристика);
										
			Если ЗначениеЗаполнено(Выборка.Упаковка)
				И (Выборка.ТипИзмеряемойВеличины <> Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук
					ИЛИ Цел(Выборка.Количество / Выборка.КоэффициентУпаковки) = (Выборка.Количество / Выборка.КоэффициентУпаковки)) Тогда
				Количество = Окр(Выборка.Количество / Выборка.КоэффициентУпаковки, 3);
				ЕдиницаИзмерения = Выборка.Упаковка;
			Иначе
				Количество = Выборка.Количество;
				ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
			КонецЕсли;
			
			ТекстСообщения = СтрШаблон(ШаблонСообщенияЭкономия,
								НоменклатураПредставление,
								Формат(Количество, "ЧН=0; ЧГ=0"),
								ЕдиницаИзмерения);
								
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ЭкономияМатериалов", Выборка.НомерСтроки, "КоличествоУпаковок");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, ПутьКДанным, Отказ);
		
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодставитьТекстЗапросаКоличествоСтрокВТЧДляПроверкиЗаполнения(МенеджерВременныхТаблиц, ТекстЗапроса)
	
	ЕстьВыходныеИзделия = МенеджерВременныхТаблиц.Таблицы.Найти("ВыходныеИзделия") <> Неопределено;
	ЕстьПобочныеИзделия = МенеджерВременныхТаблиц.Таблицы.Найти("ПобочныеИзделия") <> Неопределено;
	ЕстьОбеспечение     = МенеджерВременныхТаблиц.Таблицы.Найти("ОбеспечениеМатериаламиИРаботами") <> Неопределено;
	ЕстьРасход          = МенеджерВременныхТаблиц.Таблицы.Найти("РасходМатериаловИРабот") <> Неопределено;
	ЕстьТрудозатраты    = МенеджерВременныхТаблиц.Таблицы.Найти("Трудозатраты") <> Неопределено;
	
	ТекстЗапросаКоличествоСтрок = 
	"ВЫБРАТЬ
	|	РеквизитыЭтапов.Ссылка КАК Ссылка,
	|" +
	?(ЕстьВыходныеИзделия, " КОЛИЧЕСТВО(ТВыходныеИзделия.Ссылка) ", " 0 ") + " КАК ВыходныеИзделия," +
	?(ЕстьПобочныеИзделия, " КОЛИЧЕСТВО(ТПобочныеИзделия.Ссылка) ", " 0 ") + " КАК ПобочныеИзделия," +
	?(ЕстьОбеспечение,     " КОЛИЧЕСТВО(ТОбеспечение.Ссылка)     ", " 0 ") + " КАК Обеспечение,"     +
	?(ЕстьРасход,          " КОЛИЧЕСТВО(ТРасход.Ссылка)          ", " 0 ") + " КАК Расход,"          +
	?(ЕстьТрудозатраты,    " КОЛИЧЕСТВО(ТТрудозатраты.Ссылка)    ", " 0 ") + " КАК Трудозатраты,"     +
	
	?(ЕстьВыходныеИзделия, " СУММА(ТВыходныеИзделия.ПризнакПроизведено) ", " 0 ") + " КАК ВыходныеИзделияПроизведено," +
	?(ЕстьПобочныеИзделия, " СУММА(ТПобочныеИзделия.ПризнакПроизведено) ", " 0 ") + " КАК ПобочныеИзделияПроизведено"  +
	"
	|ИЗ
	|	РеквизитыЭтапов КАК РеквизитыЭтапов " +
	?(ЕстьВыходныеИзделия, "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыходныеИзделия КАК ТВыходныеИзделия
	|		ПО РеквизитыЭтапов.Ссылка = ТВыходныеИзделия.Ссылка", "") +
	?(ЕстьПобочныеИзделия, "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПобочныеИзделия КАК ТПобочныеИзделия
	|		ПО РеквизитыЭтапов.Ссылка = ТПобочныеИзделия.Ссылка", "") +
	?(ЕстьОбеспечение, "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбеспечениеМатериаламиИРаботами КАК ТОбеспечение
	|		ПО РеквизитыЭтапов.Ссылка = ТОбеспечение.Ссылка", "") + 
	?(ЕстьРасход, "
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходМатериаловИРабот КАК ТРасход
	|		ПО РеквизитыЭтапов.Ссылка = ТРасход.Ссылка", "") +
	?(ЕстьТрудозатраты, "
	|		ЛЕВОЕ СОЕДИНЕНИЕ Трудозатраты КАК ТТрудозатраты
	|		ПО РеквизитыЭтапов.Ссылка = ТТрудозатраты.Ссылка", "") +
	"
	|
	|СГРУППИРОВАТЬ ПО
	|	РеквизитыЭтапов.Ссылка";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#КоличествоСтрок", " ( " + ТекстЗапросаКоличествоСтрок + " ) ");
	
КонецПроцедуры

Процедура ОтключитьПроверкуЗаполненияТЧ(ИмяТЧ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов)
	
	Для Каждого ПутьКРеквизиту Из ПроверяемыеРеквизиты Цикл
		Если Найти(ПутьКРеквизиту, ИмяТЧ) > 0
			И МассивНепроверяемыхРеквизитов.Найти(ПутьКРеквизиту) = Неопределено Тогда
			МассивНепроверяемыхРеквизитов.Добавить(ПутьКРеквизиту);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьИспользованиеПартионногоУчета22(Объект, Отказ) Экспорт
	
	ДатаДокумента = Дата('00010101');
	
	Для Каждого Строка Из Объект.ВыходныеИзделия Цикл
		Если ЗначениеЗаполнено(Строка.ДатаПроизводства) И ЗначениеЗаполнено(ДатаДокумента)
			И Не Строка.Отменено Тогда
			ДатаДокумента = Мин(ДатаДокумента,Строка.ДатаПроизводства);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из Объект.ПобочныеИзделия Цикл
		Если ЗначениеЗаполнено(Строка.ДатаПроизводства) И ЗначениеЗаполнено(ДатаДокумента)
			И Не Строка.Отменено Тогда
			ДатаДокумента = Мин(ДатаДокумента,Строка.ДатаПроизводства);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из Объект.ОбеспечениеМатериаламиИРаботами Цикл
		Если ЗначениеЗаполнено(Строка.ДатаОтгрузки) И ЗначениеЗаполнено(ДатаДокумента) Тогда
			ДатаДокумента = Мин(ДатаДокумента,Строка.ДатаОтгрузки);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из Объект.РасходМатериаловИРабот Цикл
		Если ЗначениеЗаполнено(Строка.ДатаРасхода) И ЗначениеЗаполнено(ДатаДокумента) Тогда
			ДатаДокумента = Мин(ДатаДокумента,Строка.ДатаРасхода);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из Объект.ЭкономияМатериалов Цикл
		Если ЗначениеЗаполнено(Строка.ДатаОперации) И ЗначениеЗаполнено(ДатаДокумента) Тогда
			ДатаДокумента = Мин(ДатаДокумента,Строка.ДатаОперации);
		КонецЕсли;
	КонецЦикла;
	
	ЗатратыСервер.ПроверитьИспользованиеПартионногоУчета22(Объект, ДатаДокумента, Отказ);
	
КонецФункции

Функция ПроверитьПериодыОтраженияЗатрат(ПартияПроизводства, Отказ) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(Таблица.ДатаПроизводства,МЕСЯЦ)) КАК ДатаПроизводства
	|ПОМЕСТИТЬ МаксимальныеДатыВыпуска
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка.ПартияПроизводства = &ПартияПроизводства
	|	И Таблица.Ссылка.Проведен
	|	И Таблица.Произведено
	|	И НЕ Таблица.Отменено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВложеннаяТаблица.ДатаПотребления) КАК ДатаПотребления
	|ПОМЕСТИТЬ МаксимальныеДатыПотребления
	|ИЗ (
	|ВЫБРАТЬ
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(Таблица.ДатаОтгрузки,МЕСЯЦ)) КАК ДатаПотребления
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка.ПартияПроизводства = &ПартияПроизводства
	|	И Таблица.Ссылка.Проведен
	|	И Таблица.ДатаОтгрузки <> ДАТАВРЕМЯ(1,1,1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(Таблица.ДатаРасхода,МЕСЯЦ)) КАК ДатаПотребления
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка.ПартияПроизводства = &ПартияПроизводства
	|	И Таблица.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(Таблица.ДатаВыполнения,МЕСЯЦ)) КАК ДатаПотребления
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.Трудозатраты КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка.ПартияПроизводства = &ПартияПроизводства
	|	И Таблица.Ссылка.Проведен
	|	И Таблица.Выполнено
	|
	|) КАК ВложеннаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыВыпуска.ДатаПроизводства КАК ДатаПроизводства,
	|	ДатыПотребления.ДатаПотребления КАК ДатаПотребления
	|ИЗ
	|	МаксимальныеДатыВыпуска КАК ДатыВыпуска
	|	ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеДатыПотребления КАК ДатыПотребления
	|		ПО ИСТИНА
	|ГДЕ
	|	ДатыВыпуска.ДатаПроизводства < ДатыПотребления.ДатаПотребления
	|	И НЕ ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					Документ.ЭтапПроизводства2_2 КАК Т
	|				ГДЕ
	|					Т.Ссылка = &ПартияПроизводства
	|					И Т.Проведен
	|					И Т.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)))
	|");
	Запрос.УстановитьПараметр("ПартияПроизводства", ПартияПроизводства);
	
	Результат = Запрос.Выполнить();
	
	ЕстьОшибки = Не Результат.Пустой();
	Если ЕстьОшибки Тогда
		
		// Месяц потребления раньше последнего месяца производства
		ШаблонСообщения = НСтр("ru = 'В периоде %1 по этапу есть потребление матералов (работ), при этом выпуск изделий не запланирован.
		|В выпускающем этапе требуется указать выходное изделие, на которое будут отнесены затраты, или изменить плановую дату выпуска.';
		|en = 'There is material (work) consumption in the %1 period of the stage, while goods release is not planned. 
		|At the release stage, specify a finished product to which expenses will be assigned, or change the planned release date.'");
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Формат(Выборка.ДатаПотребления, "ЧН=0; ЧГ=0; ДФ='MMМM yyyy'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		
	КонецЕсли;
	
	Возврат Не ЕстьОшибки;
	
КонецФункции

Функция ТекстЗапросаПроверитьДолиСтоимости(Объект, ПоляСвязи, ПолеГруппыЗатрат = "") Экспорт 
	
	ТекстыЗапросов = Новый Массив;
	
	ТекстыЗапросовЗаказПереработчику = ТекстыЗапросовПроверкиДолиСтоимостиВЗаказеПереработчику(Объект);
	
	ТекстЗапроса = "
	|" + ?(ТекстыЗапросовЗаказПереработчику = Неопределено, "", ТекстыЗапросовЗаказПереработчику.ВременныеТаблицы) + "
	|ВЫБРАТЬ
	|	Документ.ПартияПроизводства КАК ПартияПроизводства,
	|	Таблица.Ссылка        		КАК Ссылка,
	|	Таблица.НомерСтроки    		КАК НомерСтроки,
	|	Таблица.Номенклатура   		КАК Номенклатура,
	|	Таблица.Характеристика 		КАК Характеристика,
	|	Таблица.ДоляСтоимости  		КАК ДоляСтоимости
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Таблица
	|       ПО Документ.Ссылка = Таблица.Ссылка
	|ГДЕ
	|	&ОтборПартияПроизводства
	|	И Документ.Проведен
	|	И Документ.Статус <> Значение(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|	И НЕ Таблица.Отменено
	|	И &ОтборСпособРаспределенияЗатрат
	|	И &ОтборТекущийДокумент
	|" + ?(ТекстыЗапросовЗаказПереработчику = Неопределено, "", ТекстыЗапросовЗаказПереработчику.Источник) + "
	|;
	|////////////////////////////////////////////////////////////////
	|" + ПроизводствоСервер.ТекстЗапросаПроверитьДолиСтоимостиВыходныхИзделий(ПоляСвязи, ПолеГруппыЗатрат) + "
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПартияПроизводства",
		?(ТекстыЗапросовЗаказПереработчику = Неопределено, 
			"Документ.ПартияПроизводства В(&ПартияПроизводства)",
			"Документ.ПартияПроизводства В(" + ТекстыЗапросовЗаказПереработчику.ПартииПоДолямСтоимости + ")"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборТекущийДокумент", 
		?(ТекстыЗапросовЗаказПереработчику = Неопределено, 
			"(ИСТИНА)", 
			"НЕ Документ.Ссылка В(" + ТекстыЗапросовЗаказПереработчику.Этапы + ")"));	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборСпособРаспределенияЗатрат",
		?(ТекстыЗапросовЗаказПереработчику = Неопределено,
			"&СпособРаспределенияЗатратНаВыходныеИзделия = Значение(Перечисление.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоДолямСтоимости)",
			"(ИСТИНА)"));
		
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.ПартияПроизводства
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Таблица
	|ГДЕ
	|	&ОтборПартияПроизводства
	|	И Таблица.Проведен
	|	И Таблица.Статус <> Значение(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
	|	И Таблица.НомерСледующегоЭтапа = 0 //ЭтоВыпускающийЭтап()
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.ПартияПроизводства	
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Таблица.СпособРаспределенияЗатратНаВыходныеИзделия) > 1
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПартияПроизводства",
		?(ТекстыЗапросовЗаказПереработчику = Неопределено, 
			"Таблица.ПартияПроизводства В(&ПартияПроизводства)",
			"Таблица.ПартияПроизводства В(" + ТекстыЗапросовЗаказПереработчику.Партии + ")"));
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	

	ТекстЗапроса = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Возврат ТекстЗапроса;
	    	
КонецФункции

Функция ТекстыЗапросовПроверкиДолиСтоимостиВЗаказеПереработчику(Объект)
	
	Если ТипЗнч(Объект) <> тип("ОбработкаОбъект.РедактированиеЭтаповПроизводства") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстыЗапросов = Новый Структура;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаИсточник.Распоряжение   КАК Этап,
	|	ТаблицаИсточник.НомерСтроки	   КАК НомерСтроки,
	|	ТаблицаИсточник.Номенклатура   КАК Номенклатура,
	|	ТаблицаИсточник.Характеристика КАК Характеристика,
	|	ТаблицаИсточник.ДоляСтоимости  КАК ДоляСтоимости,
	|	ТаблицаИсточник.Отменено	   КАК Отменено
	|ПОМЕСТИТЬ ТаблицаИсточник
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаИсточник
	|ГДЕ
	|	НЕ ТаблицаИсточник.Отменено
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Этап
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.ПартияПроизводства						 КАК ПартияПроизводства,
	|	Документы.СпособРаспределенияЗатратНаВыходныеИзделия КАК СпособРаспределенияЗатрат
	|ПОМЕСТИТЬ ТаблицаПартии
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаИсточник КАК ТаблицаИсточник
	|		ПО Документы.Ссылка = ТаблицаИсточник.Этап
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособРаспределенияЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИсточник.Этап КАК Этап
	|ПОМЕСТИТЬ ТаблицаЭтапов
	|ИЗ
	|	ТаблицаИсточник КАК ТаблицаИсточник";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете();
	ТекстыЗапросов.Вставить("ВременныеТаблицы", ТекстЗапроса);
	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Документы.ПартияПроизводства	КАК ПартияПроизводства,
	|	НЕОПРЕДЕЛЕНО					КАК Ссылка,
	|	ТаблицаИсточник.НомерСтроки		КАК НомерСтроки,
	|	ТаблицаИсточник.Номенклатура	КАК Номенклатура,
	|	ТаблицаИсточник.Характеристика	КАК Характеристика,
	|	ТаблицаИсточник.ДоляСтоимости	КАК ДоляСтоимости
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаИсточник КАК ТаблицаИсточник
	|		ПО Документы.Ссылка = ТаблицаИсточник.Этап
	|ГДЕ
	|	Документы.СпособРаспределенияЗатратНаВыходныеИзделия = 
	|		ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоДолямСтоимости)";
	
	ТекстЗапроса = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() + ТекстЗапроса;
	ТекстыЗапросов.Вставить("Источник", ТекстЗапроса);
	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаЭтапов.Этап КАК Этап
	|ИЗ
	|	ТаблицаЭтапов КАК ТаблицаЭтапов";
	
	ТекстыЗапросов.Вставить("Этапы", ТекстЗапроса);
	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаПартии.ПартияПроизводства КАК ПартияПроизводства
	|ИЗ
	|	ТаблицаПартии КАК ТаблицаПартии";
	
	ТекстыЗапросов.Вставить("Партии", ТекстЗапроса);
	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаПартии.ПартияПроизводства КАК ПартияПроизводства
	|ИЗ
	|	ТаблицаПартии КАК ТаблицаПартии
	|ГДЕ
	|	ТаблицаПартии.СпособРаспределенияЗатрат = 
	|		ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоДолямСтоимости)";
	
	ТекстыЗапросов.Вставить("ПартииПоДолямСтоимости", ТекстЗапроса);
	
	
	Возврат ТекстыЗапросов;
	
КонецФункции	

#КонецОбласти

#Область Проведение

#Область Инициализация

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	Если ИмяРегистра = "РегистрНакопления.СебестоимостьТоваров"
		ИЛИ ИмяРегистра = "РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту" Тогда
		ИсточникиДанных.Вставить("РегистрНакопления.ТоварыОрганизаций");
	КонецЕсли;
	
	Возврат ИсточникиДанных; 
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента           = "Документ.ЭтапПроизводства2_2";
	СинонимТаблицыДокумента      = "ТабличнаяЧасть";
	ВЗапросеЕстьИсточник         = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = ПереопределениеРасчетаПараметров(СинонимТаблицыДокумента + ".Ссылка");
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",             """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоДоговору",      """""");
	ПереопределениеРасчетаПараметров.Вставить("ИдентификаторРаспоряжения", """""");
	ПереопределениеРасчетаПараметров.Вставить("РабочийГрафик",
		РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	ПереопределениеРасчетаПараметров.Вставить("НакладнаяЯвляетсяРаспоряжением",
		"ТабличнаяЧасть.Ссылка.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "ДвижениеТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвижениеТоваров(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ГрафикОтгрузкиТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаГрафикОтгрузкиТоваров(Неопределено, ТекстыЗапроса, Неопределено);		
		
	ИначеЕсли ИмяРегистра = "ОбеспечениеПроизводственныхПроцессов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеПроизводственныхПроцессов(Неопределено, ТекстыЗапроса, Неопределено);		
		
	ИначеЕсли ИмяРегистра = "ТоварыНаСкладах" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыНаСкладах(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "РаспоряженияНаПередачуИзПроизводства" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРаспоряженияНаПередачуИзПроизводства(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ДвиженияСерийТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвиженияСерийТоваров(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ТоварыКПоступлению" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКПоступлению(Неопределено, ТекстыЗапроса, ИмяРегистра);
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Неопределено, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтОснований", ТекстЗапросаВтОснований(Неопределено, ТекстыЗапроса));
		
	ИначеЕсли ИмяРегистра = "ВыпускПродукции" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаВыпускПродукции(Неопределено, ТекстыЗапроса, ИмяРегистра);
		
	ИначеЕсли ИмяРегистра = "ТрудозатратыКОформлению" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТрудозатратыКОформлению(Неопределено, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТрудозатраты";
		
	ИначеЕсли ИмяРегистра = "ТоварыКОтгрузке" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОтгрузке(Неопределено, ТекстыЗапроса, Неопределено);
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	ЗаполнитьПараметрыИнициализации(Запрос);
	ЗаполнитьПараметрыРасчетаСебестоимости(Запрос, ДополнительныеСвойства);
	ЗаполнитьПараметрыИнициализацииПоСсылке(Запрос);
	
	ТекстыЗапроса = ТекстыЗапросаДляФормированияДвижений(Запрос, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Функция ТекстыЗапросаДляФормированияДвижений(Запрос, Регистры = Неопределено)
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаГрафикОтгрузкиТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРаспоряженияНаПередачуИзПроизводства(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказовРаботами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТрудозатратыКОформлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗаказыКлиентов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗаказыПоставщикам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеПроизводственныхПроцессов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДоступностьВидовРабочихЦентров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ЭтапПроизводства2_2Локализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	Возврат ТекстыЗапроса;
	
КонецФункции

// Заполняет параметры запроса, которые не зависят от конкретного экземпляра документа.
//
// Параметры:
//  Запрос	- Запрос	запрос, инициализирующий данные документа.
//
Процедура ЗаполнитьПараметрыИнициализации(Запрос)
	
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("ПустаяСсылкаНазначение",Справочники.Назначения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаСклад", Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаПодразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаРаспоряжение", Документы.ЗаказНаПроизводство2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Запрос.УстановитьПараметр(
		"РабочийГрафик", 
		РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	
	Запрос.УстановитьПараметр(
		"ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.УстановитьПараметр(
		"ИспользуетсяНазначение", 
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
	Запрос.УстановитьПараметр(
		"АналитическийУчетПоГруппамПродукции", 
		ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции"));
		
	Запрос.УстановитьПараметр(
		"ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.ЭтапПроизводства2_2")));
	
КонецПроцедуры

// Заполняет параметры запроса, которые зависят от конкретного экземпляра документа.
//
// Параметры:
//  Запрос - Запрос - запрос, инициализирующий данные документа.
//
Процедура ЗаполнитьПараметрыИнициализацииПоСсылке(Запрос)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка                             КАК Ссылка,
		|	Реквизиты.Дата                               КАК Период,
		|	Реквизиты.Статус                             КАК Статус,
		|	Реквизиты.Организация                        КАК Организация,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Реквизиты.НазначениеПродукция.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА Реквизиты.НазначениеПродукция.ВидДеятельностиНДС
		|		ИНАЧЕ Реквизиты.ВыпускПодДеятельность
		|	КОНЕЦ										 КАК ВыпускПодДеятельность,
		|	Реквизиты.Подразделение                      КАК Подразделение,
		|	Реквизиты.Валюта                             КАК Валюта,
		|	Реквизиты.Назначение                         КАК Назначение,
		|	Реквизиты.НазначениеМатериалы                КАК НазначениеМатериалы,
		|	Реквизиты.ПартияПроизводства                 КАК ПартияПроизводства,
		|	Реквизиты.ПартияПроизводства.ГруппаПродукции КАК ГруппаПродукции,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Реквизиты.ПартияПроизводства.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
		|			ТОГДА Реквизиты.ПартияПроизводства.Назначение.ВидДеятельностиНДС
		|		ИНАЧЕ Реквизиты.ПартияПроизводства.ВидДеятельностиНДС
		|	КОНЕЦ										 КАК ВидДеятельностиНДСНЗП,
		|	Реквизиты.Спецификация                       КАК Спецификация,
		|	Реквизиты.Распоряжение                       КАК Распоряжение,
		|	Реквизиты.ФактическоеНачалоЭтапа             КАК ФактическоеНачалоЭтапа,
		|	Реквизиты.ФактическоеОкончаниеЭтапа          КАК ФактическоеОкончаниеЭтапа,
		|	Реквизиты.РучноеРазмещениеВГрафике           КАК РучноеРазмещениеВГрафике,
		|	Реквизиты.ДатаОтгрузки                       КАК ДатаОтгрузки,
		|	Реквизиты.ПроизводствоНаСтороне              КАК ПроизводствоНаСтороне,
		|	Реквизиты.Партнер                            КАК Партнер,
		|	Реквизиты.НаправлениеДеятельности            КАК НаправлениеДеятельности,
		|	Реквизиты.Номер                              КАК Номер,
		|	Реквизиты.НомерНаПечать                      КАК НомерНаПечать,
		|	Реквизиты.Ответственный                      КАК Ответственный,
		|	Реквизиты.Комментарий                        КАК Комментарий,
		|	Реквизиты.Проведен                           КАК Проведен,
		|	Реквизиты.ПометкаУдаления                    КАК ПометкаУдаления,
		|	Реквизиты.ВариантПриемкиТоваров              КАК ВариантПриемкиТоваров,
		|	Реквизиты.ЯвляетсяНазначениемПродукции       КАК ЯвляетсяНазначениемПродукции,
		|	Реквизиты.ТипПроизводственногоПроцесса       КАК ТипПроизводственногоПроцесса,
		|	&ПереопределяемыеПоля
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка";
	
	
	ПереопределяемыеПоля = "";
	
	ПереопределениеРасчетаПараметров = ПереопределениеРасчетаПараметров("Реквизиты");
	Для каждого КлючИЗначение Из ПереопределениеРасчетаПараметров Цикл
		
		ПереопределяемыеПоля = ПереопределяемыеПоля
			+ ?(ЗначениеЗаполнено(ПереопределяемыеПоля), "," + Символы.ПС, "")
			+ КлючИЗначение.Значение
			+ " КАК "
			+ КлючИЗначение.Ключ;
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПереопределяемыеПоля", ПереопределяемыеПоля);
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	НакладнаяЯвляетсяРаспоряжением = ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Реквизиты.ВариантПриемкиТоваров);
	
	Запрос.УстановитьПараметр("ИдентификаторРаспоряжения", Строка(Реквизиты.Распоряжение.УникальныйИдентификатор()));
	Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением", НакладнаяЯвляетсяРаспоряжением);
	
	ПараметрыПартийИСебестоимости = Новый Структура();
	ПараметрыПартийИСебестоимости.Вставить("Период", ?(ЗначениеЗаполнено(Запрос.Параметры.ПериодЗаполненияВидовЗапасовИСебестоимости), Запрос.Параметры.ПериодЗаполненияВидовЗапасовИСебестоимости, Реквизиты.Период));
	ПараметрыПартийИСебестоимости.Вставить("Организация", Реквизиты.Организация);
	ПараметрыПартийИСебестоимости.Вставить("Ссылка", Реквизиты.Ссылка);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, ПараметрыПартийИСебестоимости);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыРасчетаСебестоимости(Запрос, ДополнительныеСвойства)
	
	// Сохранение отложенных движений требуется при программной перезаписи наборов.
	// По умолчанию отложенные движения сохраняются, отказ от сохранения отложенных движений задается при интерактивной
	// записи документа.
	СохранятьОтложенныеДвижения = Истина;
	Если ДополнительныеСвойства.Свойство("СохранятьОтложенныеДвижения") Тогда
		СохранятьОтложенныеДвижения = ДополнительныеСвойства.СохранятьОтложенныеДвижения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СохранятьОтложенныеДвижения", СохранятьОтложенныеДвижения);
	
	// Если период заполнения не задан, то переформировываются все движения документа.
	// Перезапись всех движений требуется для обработчиков обновления и процедур восстановления движений.
	ПериодЗаполнения = Неопределено;
	
	// Если документ проводится интерактивно или период заполнения передан, то сохраняем движения
	//        до периода заполнения, а движения с начала периода заполнения переформировываются.
	Если ДополнительныеСвойства.Свойство("ПериодЗаполненияВидовЗапасовИСебестоимости") Тогда
		
		ПериодЗаполнения = ДополнительныеСвойства.ПериодЗаполненияВидовЗапасовИСебестоимости;
		
		КонецПериодаСохраняемыхДвижений = НачалоМесяца(ПериодЗаполнения) - 1;
		
		РегистрыНакопления.СебестоимостьТоваров.ИнициализироватьСохранениеДвиженийДокументаЗаПериод(
			ДополнительныеСвойства, // доп. свойства документа
			, // начало периода сохраняемых движений
			КонецПериодаСохраняемыхДвижений);
			
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПериодЗаполненияВидовЗапасовИСебестоимости", ПериодЗаполнения);
	
КонецПроцедуры

Функция ПереопределениеРасчетаПараметров(ОсновнаяТаблица)
	
	Результат = Новый Структура;
	
	ТекстПараметра = СтрЗаменить(
		"%ОсновнаяТаблица%.ЗаказПереработчику.Партнер",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("Переработчик", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"%ОсновнаяТаблица%.Подразделение.ВариантОбособленногоУчетаТоваров",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ВариантОбособленногоУчетаТоваров", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|				И %ОсновнаяТаблица%.ЗаказПереработчику.Проведен
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику 
		|		ИНАЧЕ %ОсновнаяТаблица%.Ссылка
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ДокументПоступления", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|				И %ОсновнаяТаблица%.ЗаказПереработчику.Проведен
		|				И %ОсновнаяТаблица%.ЗаказПереработчику.Статус В(
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПереработчикам.КОбеспечению),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПереработчикам.КИсполнению),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПереработчикам.Закрыт))
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ЗаказПереработчику", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику.Контрагент 
		|		КОГДА НЕ %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|			ТОГДА %ОсновнаяТаблица%.Договор.Контрагент 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("Контрагент", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику.Партнер 
		|		КОГДА НЕ %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|			ТОГДА %ОсновнаяТаблица%.Партнер
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ПартнерРеестраДокументов", ТекстПараметра);
		
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику.Договор 
		|		КОГДА НЕ %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|			ТОГДА %ОсновнаяТаблица%.Договор
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("Договор", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоУПереработчика)
		|		КОГДА %ОсновнаяТаблица%.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СобственноеПроизводство)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ХозяйственнаяОперация", ТекстПараметра);
	
	Результат.Вставить("ПустаяСсылкаНазначение", "ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)");
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)

	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("КлючиАналитикиНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитики = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.МестоХранения     КАК МестоХранения,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ТаблицаТовары.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Назначение        КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия
	|ИЗ
	// Для обеспечения с назначением (материалы в цехе)
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение                  КАК МестоХранения,
	|		ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|		ТаблицаТовары.Характеристика    КАК Характеристика,
	|		&ПустаяСтатья                   КАК СтатьяКалькуляции,
	|		&Назначение                     КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ                           КАК Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для обеспечения без назначения (материалы в цехе)
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для обеспечения со статьей калькуляции (план по материалам в НЗП)
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение                  КАК МестоХранения,
	|		ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|		ТаблицаТовары.Характеристика    КАК Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		&Назначение                     КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ                           КАК Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для расхода с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение                  КАК МестоХранения,
	|		ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|		ТаблицаТовары.Характеристика    КАК Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		&Назначение                     КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ                           КАК Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// РасходМатериаловИРабот
	// Для расхода без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение КАК МестоХранения,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ &ПустаяСерия
	|		КОНЕЦ КАК Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для склада с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка),
	|		&Назначение КАК Назначение,
	|		ТаблицаТовары.Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка),
	|		&Назначение КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для склада без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		ТаблицаТовары.Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для работ по выходным изделиям давальца с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫРАЗИТЬ(ТаблицаТовары.Назначение.Заказ КАК Документ.ЗаказДавальца).Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для работ по выходным изделиям давальца без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫРАЗИТЬ(ТаблицаТовары.Назначение.Заказ КАК Документ.ЗаказДавальца).Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для выходных изделий без назначения по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для выходных изделий с назначением по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для выходных изделий с назначением по получателю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = &Подразделение
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для выходных изделий без назначения по получателю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = &Подразделение
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для работ по побочным изделиям давальца с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫРАЗИТЬ(ТаблицаТовары.Назначение.Заказ КАК Документ.ЗаказДавальца).Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для работ по побочным изделиям давальца без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫРАЗИТЬ(ТаблицаТовары.Назначение.Заказ КАК Документ.ЗаказДавальца).Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для побочных изделий без назначения по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для побочных изделий с назначением по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для побочных изделий с назначением по получателю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = &Подразделение
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для побочных изделий без назначения по получателю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = &Подразделение
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для побочных изделий со статьей калькуляции с назначением по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции,
	|		&Назначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для побочных изделий со статьей калькуляции без назначения по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для экономии с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&НазначениеМатериалы,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для экономии без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Серия = Аналитика.Серия
	|		И ТаблицаТовары.МестоХранения = Аналитика.МестоХранения
	|		И ТаблицаТовары.Назначение = Аналитика.Назначение
	|		И ТаблицаТовары.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И (НЕ ТаблицаТовары.МестоХранения В (&ПустыеМестаХранения)
	|		ИЛИ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|	И НЕ (ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			И ТаблицаТовары.Назначение <> &ПустоеНазначение
	|			И НЕ ТаблицаТовары.МестоХранения ССЫЛКА Справочник.СтруктураПредприятия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.МестоХранения,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.СтатьяКалькуляции,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.Серия");
	
	ПустыеМестаХранения = Новый Массив;
	ПустыеМестаХранения.Добавить(Неопределено);
	ПустыеМестаХранения.Добавить(Справочники.Склады.ПустаяСсылка());
	ПустыеМестаХранения.Добавить(Справочники.СтруктураПредприятия.ПустаяСсылка());
	
	ЗапросАналитики.УстановитьПараметр("Ссылка",                 Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("Подразделение",          Запрос.Параметры.Подразделение);
	ЗапросАналитики.УстановитьПараметр("Назначение",             Запрос.Параметры.Назначение);
	ЗапросАналитики.УстановитьПараметр("НазначениеМатериалы",    Запрос.Параметры.НазначениеМатериалы);
	ЗапросАналитики.УстановитьПараметр("ИспользуетсяНазначение", Запрос.Параметры.ИспользуетсяНазначение);
	ЗапросАналитики.УстановитьПараметр("ПустаяСерия",            Справочники.СерииНоменклатуры.ПустаяСсылка());
	ЗапросАналитики.УстановитьПараметр("ПустаяСтатья",           Справочники.СтатьиКалькуляции.ПустаяСсылка());
	ЗапросАналитики.УстановитьПараметр("ПустоеНазначение",       Справочники.Назначения.ПустаяСсылка());
	ЗапросАналитики.УстановитьПараметр("Статус",                 Запрос.Параметры.Статус);
	ЗапросАналитики.УстановитьПараметр("ПустыеМестаХранения",    ПустыеМестаХранения);
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;

	Запрос.УстановитьПараметр("КлючиАналитикиНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаТаблицаКоэффициентыПересчетаВалют(Запрос)
	
	ЗапросКурсов = Новый Запрос;
	ЗапросКурсов.Текст =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЭтапПроизводства2_2ПобочныеИзделия.ДатаПроизводства, ДЕНЬ) КАК Период
		|ПОМЕСТИТЬ втПериоды
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ЭтапПроизводства2_2ПобочныеИзделия
		|ГДЕ
		|	ЭтапПроизводства2_2ПобочныеИзделия.Ссылка = &Ссылка
		|	И НЕ ЭтапПроизводства2_2ПобочныеИзделия.Отменено
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЭтапПроизводства2_2ПобочныеИзделия.ДатаПроизводства, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(КурсыВалют.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
		|	втПериоды.Период КАК Период,
		|	МАКСИМУМ(ЕСТЬNULL(КурсыВалют.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаПоследнегоКурса
		|ПОМЕСТИТЬ втДатыПоследнихКурсовВалют
		|ИЗ
		|	втПериоды КАК втПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО (КурсыВалют.Период <= втПериоды.Период)
		|			И (КурсыВалют.Валюта = &ВалютаРеглУчета
		|				ИЛИ КурсыВалют.Валюта = &ВалютаУпрУчета
		|				ИЛИ КурсыВалют.Валюта = &ВалютаДокумента)
		|
		|СГРУППИРОВАТЬ ПО
		|	втПериоды.Период,
		|	ЕСТЬNULL(КурсыВалют.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаРеглУчета
		|				ТОГДА КурсыВалют.Курс
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КурсРеглУчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаРеглУчета
		|				ТОГДА КурсыВалют.Кратность
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КратностьРеглУчета,
		|	втДатыПоследнихКурсовВалют.Период КАК Период,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаУпрУчета
		|				ТОГДА КурсыВалют.Курс
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КурсУпрУчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаУпрУчета
		|				ТОГДА КурсыВалют.Кратность
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КратностьУпрУчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаДокумента
		|				ТОГДА КурсыВалют.Курс
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КурсДокумента,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаДокумента
		|				ТОГДА КурсыВалют.Кратность
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КратностьДокумента
		|ПОМЕСТИТЬ втКурсыВалютНаДату
		|ИЗ
		|	втДатыПоследнихКурсовВалют КАК втДатыПоследнихКурсовВалют
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО втДатыПоследнихКурсовВалют.ДатаПоследнегоКурса = КурсыВалют.Период
		|			И втДатыПоследнихКурсовВалют.Валюта = КурсыВалют.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	втДатыПоследнихКурсовВалют.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втКурсыВалютНаДату.Период,
		|	ВЫБОР
		|		КОГДА втКурсыВалютНаДату.КратностьДокумента * втКурсыВалютНаДату.КурсУпрУчета = 0
		|			ТОГДА 1
		|		ИНАЧЕ втКурсыВалютНаДату.КурсДокумента * втКурсыВалютНаДату.КратностьУпрУчета / (втКурсыВалютНаДату.КратностьДокумента * втКурсыВалютНаДату.КурсУпрУчета)
		|	КОНЕЦ КАК КоэффициентПересчетаВВалютуУпр,
		|	ВЫБОР
		|		КОГДА втКурсыВалютНаДату.КратностьДокумента * втКурсыВалютНаДату.КурсРеглУчета = 0
		|			ТОГДА 1
		|		ИНАЧЕ втКурсыВалютНаДату.КурсДокумента * втКурсыВалютНаДату.КратностьРеглУчета / (втКурсыВалютНаДату.КратностьДокумента * втКурсыВалютНаДату.КурсРеглУчета)
		|	КОНЕЦ КАК КоэффициентПересчетаВВалютуРегл
		|ИЗ
		|	втКурсыВалютНаДату КАК втКурсыВалютНаДату";

	ЗапросКурсов.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросКурсов.УстановитьПараметр("ВалютаДокумента", Запрос.Параметры.Валюта);
	ЗапросКурсов.УстановитьПараметр("ВалютаУпрУчета",  Константы.ВалютаУправленческогоУчета.Получить());
	ЗапросКурсов.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Запрос.УстановитьПараметр("ВтКоэффициентыПересчетаВалют", ЗапросКурсов.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаПустаяАналитикаУчетаПартий(Запрос)
	
	Если Не Запрос.Параметры.Свойство("АналитикаУчетаПартийТоваров") Тогда
		ОтборПоАналитикеПартии = Новый Структура("Дата, ВидЦенности", Запрос.Параметры.Период, Перечисления.ВидыЦенностей.Товары);
		Запрос.УстановитьПараметр("АналитикаУчетаПартийТоваров",
									Справочники.КлючиАналитикиУчетаПартий.ПолучитьКлючАналитики(ОтборПоАналитикеПартии));
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("АналитикаУчетаПартийРабот") Тогда
		ОтборПоАналитикеПартии = Новый Структура("Дата, ВидЦенности", Запрос.Параметры.Период, Перечисления.ВидыЦенностей.ПрочиеРаботыИУслуги);
		Запрос.УстановитьПараметр("АналитикаУчетаПартийРабот",
									Справочники.КлючиАналитикиУчетаПартий.ПолучитьКлючАналитики(ОтборПоАналитикеПартии));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросовПроведения

#Область ТекстыЗапросовВременныеТаблицы

Функция ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтОснований";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Подразделения.ХозяйственнаяОперация	        КАК ХозяйственнаяОперация,
	|	Подразделения.Ссылка				        КАК Ссылка,
	|	Подразделения.Дата					        КАК Дата,
	|	Подразделения.Подразделение			        КАК Подразделение,
	|	МИНИМУМ(Подразделения.ДополнительнаяЗапись)	КАК ДополнительнаяЗапись
	|ПОМЕСТИТЬ ВтОснований
	|ИЗ
	|	(
	// Основная запись реестра документов
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.ОперацияРеестраДокументов	КАК ХозяйственнаяОперация,
	|		ТабличнаяЧасть.Ссылка						КАК Ссылка,
	|		ТабличнаяЧасть.ДатаРеестраДокументов		КАК Дата,
	|		ТабличнаяЧасть.Подразделение				КАК Подразделение,
	|		ЛОЖЬ										КАК ДополнительнаяЗапись
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2 КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Выпускающее подразделение по дате выпуска продукции
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|		ТабличнаяЧасть.Ссылка			КАК Ссылка,
	|		ТабличнаяЧасть.ДатаПроизводства	КАК Дата,
	|		ДанныеДокумента.Подразделение	КАК Подразделение,
	|		ИСТИНА							КАК ДополнительнаяЗапись
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТабличнаяЧасть.Ссылка
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		И ТабличнаяЧасть.Произведено
	|		И НЕ ТабличнаяЧасть.Отменено
	|		И НЕ НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПроизводства, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеДокумента.ДатаРеестраДокументов, ДЕНЬ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Выпускающее подразделение по дате выпуска побочных изделий
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|		ТабличнаяЧасть.Ссылка			КАК Ссылка,
	|		ТабличнаяЧасть.ДатаПроизводства	КАК Дата,
	|		ДанныеДокумента.Подразделение	КАК Подразделение,
	|		ИСТИНА							КАК ДополнительнаяЗапись
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТабличнаяЧасть.Ссылка
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		И ТабличнаяЧасть.Произведено
	|		И НЕ ТабличнаяЧасть.Отменено
	|		И НЕ НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПроизводства, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеДокумента.ДатаРеестраДокументов, ДЕНЬ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Выпускающее подразделение по дате потребления материалов
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|		ТабличнаяЧасть.Ссылка			КАК Ссылка,
	|		ТабличнаяЧасть.ДатаРасхода		КАК Дата,
	|		ДанныеДокумента.Подразделение	КАК Подразделение,
	|		ИСТИНА							КАК ДополнительнаяЗапись
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТабличнаяЧасть.Ссылка
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		И НЕ ТабличнаяЧасть.ДатаРасхода = ДАТАВРЕМЯ(1,1,1)
	|		И (НЕ НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаРасхода, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеДокумента.ДатаРеестраДокументов, ДЕНЬ)
	|			ИЛИ НЕ ДанныеДокумента.ОперацияРеестраДокументов = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Выпускающее подразделение по дате экономии материалов
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства) КАК ХозяйственнаяОперация,
	|		ТабличнаяЧасть.Ссылка			КАК Ссылка,
	|		ТабличнаяЧасть.ДатаОперации		КАК Дата,
	|		ДанныеДокумента.Подразделение	КАК Подразделение,
	|		ИСТИНА							КАК ДополнительнаяЗапись
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТабличнаяЧасть.Ссылка
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &Ссылка
	|		И НЕ ТабличнаяЧасть.ДатаОперации = ДАТАВРЕМЯ(1,1,1)
	|		И (НЕ НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаОперации, ДЕНЬ) = НАЧАЛОПЕРИОДА(ДанныеДокумента.ДатаРеестраДокументов, ДЕНЬ)
	|			ИЛИ НЕ ДанныеДокумента.ОперацияРеестраДокументов = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства))
	|	) КАК Подразделения
	|
	|СГРУППИРОВАТЬ ПО
	|	Подразделения.Ссылка,
	|	Подразделения.Подразделение,
	|	Подразделения.Дата,
	|	Подразделения.ХозяйственнаяОперация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра)
	
	ИмяТаблицы = "ВтВидыЗапасов";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// ВидыЗапасовОбеспечение (товары)
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	ЛОЖЬ                                        КАК ДополнениеДляДавальца,
	|	СпрВидыЗапасов.ВидЗапасовВладельца          КАК ВидЗапасовВладельца,
	|	СпрВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасов                      КАК ВидЗапасов,
	|	ВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики        КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	Аналитика.Номенклатура                      КАК Номенклатура,
	|	Аналитика.Характеристика                    КАК Характеристика,
	|	Аналитика.МестоХранения						КАК Склад,
	|	Аналитика.Назначение                        КАК Назначение,
	|	ВидыЗапасов.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) КАК ХозяйственнаяОперация,
	|	ЛОЖЬ                                        КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                      КАК НалогообложениеНДС,
	|	КлючиПроизводства.КлючАналитики             КАК АналитикаУчетаНоменклатурыПолучателя,
	|	КлючиПроизводстваБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	ВидыЗапасов.ДатаОтгрузки                    КАК ДатаОтгрузки,
	|	ДАТАВРЕМЯ(1,1,1)                            КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО                                КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаУчетаПартий,
	|	ВЫБОР
	// давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	// комиссионные товары всегда на отдельном разделе учета
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	// принятые на хранении с правом продажи на отдельном разделе учета
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	// для собственных раздел учетом учета являются производственные затраты
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	0                                             КАК СуммаЗабалансовая,
	|	""""                                          КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА НЕ &ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА &ГруппаПродукции
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорАналитикаФинансовогоУчета
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВидыЗапасовОбеспечение КАК ВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		ВидыЗапасов.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		Аналитика.Номенклатура = КлючиПроизводства.Номенклатура
	|		И Аналитика.Характеристика = КлючиПроизводства.Характеристика
	|		И &Назначение = КлючиПроизводства.Назначение
	|		И ВидыЗапасов.Серия = КлючиПроизводства.Серия
	|		И &Подразделение = КлючиПроизводства.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводства.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводстваБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = КлючиПроизводстваБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = КлючиПроизводстваБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = КлючиПроизводстваБезНазначения.Назначение
	|		И ВидыЗапасов.Серия = КлючиПроизводстваБезНазначения.Серия
	|		И &Подразделение = КлючиПроизводстваБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводстваБезНазначения.СтатьяКалькуляции
	|
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВидыЗапасовОбеспечение (работы, строится по ТЧ ОбеспечениеМатериаламиИРаботами)
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                       КАК НомерСтроки,
	|	ЛОЖЬ                                          КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                  КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                          КАК РеализацияЗапасовДругойОрганизации,
	|	НЕОПРЕДЕЛЕНО                                  КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                  КАК НомерГТД,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры        КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики          КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	Аналитика.Номенклатура                        КАК Номенклатура,
	|	Аналитика.Характеристика                      КАК Характеристика,
	|	Аналитика.МестоХранения						  КАК Склад,
	|	Аналитика.Назначение                          КАК Назначение,
	|	ВидыЗапасов.Количество                        КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) КАК ХозяйственнаяОперация,
	|	ЛОЖЬ                                          КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                        КАК НалогообложениеНДС,
	|	КлючиПроизводства.КлючАналитики               КАК АналитикаУчетаНоменклатурыПолучателя,
	|	КлючиПроизводстваБезНазначения.КлючАналитики  КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	ВидыЗапасов.ДатаОтгрузки                      КАК ДатаОтгрузки,
	|	ДАТАВРЕМЯ(1,1,1)                              КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО                                  КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                  КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                  КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                  КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаУчетаПартий,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	0                                             КАК СуммаЗабалансовая,
	|	""""                                          КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА НЕ &ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА &ГруппаПродукции
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорАналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		Аналитика.Номенклатура = КлючиПроизводства.Номенклатура
	|		И Аналитика.Характеристика = КлючиПроизводства.Характеристика
	|		И &Назначение = КлючиПроизводства.Назначение
	|		И Аналитика.Серия = КлючиПроизводства.Серия
	|		И &Подразделение = КлючиПроизводства.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводства.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводстваБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = КлючиПроизводстваБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = КлючиПроизводстваБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = КлючиПроизводстваБезНазначения.Назначение
	|		И Аналитика.Серия = КлючиПроизводстваБезНазначения.Серия
	|		И &Подразделение = КлючиПроизводстваБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводстваБезНазначения.СтатьяКалькуляции
	|
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ВидыЗапасов.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ВидыЗапасов.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|										ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВидыЗапасовЭкономия
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                       КАК НомерСтроки,
	|	ЛОЖЬ                                          КАК ДополнениеДляДавальца,
	|	СпрВидыЗапасов.ВидЗапасовВладельца            КАК ВидЗапасовВладельца,
	|	СпрВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.ВидЗапасов                        КАК ВидЗапасов,
	|	ВидыЗапасов.НомерГТД                          КАК НомерГТД,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры        КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики          КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	Аналитика.Номенклатура                        КАК Номенклатура,
	|	Аналитика.Характеристика                      КАК Характеристика,
	|	Аналитика.МестоХранения						  КАК Склад,
	|	Аналитика.Назначение                          КАК Назначение,
	|	ВидыЗапасов.Количество                        КАК Количество,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СписатьНаРасходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|	КОНЕЦ                                         КАК ХозяйственнаяОперация,
	|	ВидыЗапасов.СписатьНаРасходы                  КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                        КАК НалогообложениеНДС,
	|	КлючиНаСкладе.КлючАналитики                   КАК АналитикаУчетаНоменклатурыПолучателя,
	|	КлючиНаСкладеБезНазначения.КлючАналитики      КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                  КАК ДатаОтгрузки,
	|	ВидыЗапасов.ДатаОперации                      КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО                                  КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                  КАК СтатьяКалькуляции,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.СписатьНаРасходы
	|			И ВидыЗапасов.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение
	|		КОГДА ВидыЗапасов.СписатьНаРасходы
	|			И НЕ ВидыЗапасов.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ВидыЗапасов.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК Подразделение,
	|	ВидыЗапасов.СтатьяРасходов                    КАК СтатьяРасходов,
	|	ВидыЗапасов.АналитикаРасходов                 КАК АналитикаРасходов,
	|	ВидыЗапасов.АналитикаАктивовПассивов          КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаУчетаПартий,
	// давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	|	ВЫБОР
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	// комиссионные товары всегда на отдельном разделе учета
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	// принятые на хранении с правом продажи на отдельном разделе учета
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	// для собственных раздел учетом учета являются производственные затраты
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ВидыЗапасов.СписатьНаРасходы ТОГДА
	|			НЕОПРЕДЕЛЕНО
	// принятые на хранении с правом продажи на отдельном разделе учета
	|		КОГДА СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	0                                             КАК СуммаЗабалансовая,
	|	ВидыЗапасов.ИдентификаторСтроки               КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА НЕ &ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА &ГруппаПродукции
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорАналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВидыЗапасовЭкономия КАК ВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		ВидыЗапасов.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиНаСкладе
	|	ПО
	|		Аналитика.Номенклатура = КлючиНаСкладе.Номенклатура
	|		И Аналитика.Характеристика = КлючиНаСкладе.Характеристика
	|		И ВидыЗапасов.НазначениеПолучателя = КлючиНаСкладе.Назначение
	|		И ВидыЗапасов.Серия = КлючиНаСкладе.Серия
	|		И ВидыЗапасов.Получатель = КлючиНаСкладе.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиНаСкладе.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиНаСкладеБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = КлючиНаСкладеБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = КлючиНаСкладеБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = КлючиНаСкладеБезНазначения.Назначение
	|		И ВидыЗапасов.Серия = КлючиНаСкладеБезНазначения.Серия
	|		И ВидыЗапасов.Получатель = КлючиНаСкладеБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиНаСкладеБезНазначения.СтатьяКалькуляции
	|	
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВыходныеИзделия
	// выпуск продукции на получателя.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЛОЖЬ                                           КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                           КАК РеализацияЗапасовДругойОрганизации,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики           КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.Получатель                      КАК Склад,
	|	ТабличнаяЧасть.Назначение                      КАК Назначение,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.СписатьНаРасходы                КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаНоменклатурыПолучателя,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДатаОтгрузки,
	|	ТабличнаяЧасть.ДатаПроизводства                КАК ДатаПоступления,
	|	ТабличнаяЧасть.Получатель                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяКалькуляции,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|			И НЕ ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ТабличнаяЧасть.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                          КАК Подразделение,
	|	ТабличнаяЧасть.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов               КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов        КАК АналитикаАктивовПассивов,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	// Давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	// передаем из цеха.
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ТабличнаяЧасть.Получатель ССЫЛКА Справочник.СтруктураПредприятия ИЛИ ТабличнаяЧасть.Получатель.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                         КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	0                                             КАК СуммаЗабалансовая,
	|	ТабличнаяЧасть.ИдентификаторСтроки            КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТабличнаяЧасть.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТабличнаяЧасть.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорАналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И Аналитика.СтатьяКалькуляции = АналитикаБезНазначения.СтатьяКалькуляции
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО
	|		ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТабличнаяЧасть.НомерСтроки
	|		И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВыходныеИзделия""
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВыходныеИзделия
	// выпуск работ по продукции давальца.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ИСТИНА                                         КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                           КАК РеализацияЗапасовДругойОрганизации,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	Аналитика.КлючАналитики                        КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики           КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.Получатель                      КАК Склад,
	|	ТабличнаяЧасть.Назначение                      КАК Назначение,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.СписатьНаРасходы                КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатурыПолучателя,
	|	АналитикаПоПолучателюБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДатаОтгрузки,
	|	ТабличнаяЧасть.ДатаПроизводства                КАК ДатаПоступления,
	|	ТабличнаяЧасть.Получатель                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                   КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	// Давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	// передаем из цеха.
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	0                                             КАК СуммаЗабалансовая,
	|	ТабличнаяЧасть.ИдентификаторСтроки            КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТабличнаяЧасть.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТабличнаяЧасть.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорАналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаПоПолучателю
	|	ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = АналитикаПоПолучателю.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПоПолучателюБезНазначения
	|	ПО
	|		АналитикаПоПолучателю.Номенклатура = АналитикаПоПолучателюБезНазначения.Номенклатура
	|		И АналитикаПоПолучателю.Характеристика = АналитикаПоПолучателюБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаПоПолучателюБезНазначения.Назначение
	|		И АналитикаПоПолучателю.Серия = АналитикаПоПолучателюБезНазначения.Серия
	|		И АналитикаПоПолучателю.МестоХранения = АналитикаПоПолучателюБезНазначения.МестоХранения
	|		И АналитикаПоПолучателю.СтатьяКалькуляции = АналитикаПоПолучателюБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = Аналитика.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = Аналитика.Характеристика
	|		И ТабличнаяЧасть.Назначение = Аналитика.Назначение
	|		И &ПустаяСсылкаСерия = Аналитика.Серия
	|		И ТабличнаяЧасть.Назначение.Заказ.Подразделение = Аналитика.МестоХранения
	|		И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаБезНазначения.Характеристика
	|		И АналитикаБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И &ПустаяСсылкаСерия = АналитикаБезНазначения.Серия
	|		И ТабличнаяЧасть.Назначение.Заказ.Подразделение = АналитикаБезНазначения.МестоХранения
	|		И АналитикаБезНазначения.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО
	|		ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТабличнаяЧасть.НомерСтроки
	|		И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВыходныеИзделия""
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И ТабличнаяЧасть.ПередатьДавальцу
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ПобочныеИзделия
	// выпуск продукции на получателя.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЛОЖЬ                                           КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                           КАК РеализацияЗапасовДругойОрганизации,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики           КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.Получатель                      КАК Склад,
	|	ТабличнаяЧасть.Назначение                      КАК Назначение,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.СписатьНаРасходы                КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	// Аналитика получателя соответствует аналитике поступления в котел, со статьей калькуляции.
	|	АналитикаПолучателя.КлючАналитики              КАК АналитикаУчетаНоменклатурыПолучателя,
	|	АналитикаПолучателяБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДатаОтгрузки,
	|	ТабличнаяЧасть.ДатаПроизводства                КАК ДатаПоступления,
	|	ТабличнаяЧасть.Получатель                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяКалькуляции,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|			И НЕ ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ТабличнаяЧасть.Получатель
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                          КАК Подразделение,
	|	ТабличнаяЧасть.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов               КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов        КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|			ТОГДА &АналитикаУчетаПартийТоваров
	|		ИНАЧЕ &АналитикаУчетаПартийРабот
	|	КОНЕЦ                                          КАК АналитикаУчетаПартий,
	// Давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	// передаем из цеха.
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                          КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ТабличнаяЧасть.Получатель ССЫЛКА Справочник.СтруктураПредприятия ИЛИ ТабличнаяЧасть.Получатель.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                         КАК КорРазделУчета,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТабличнаяЧасть.Сумма
	|	КОНЕЦ                                          КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		ТабличнаяЧасть.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                          КАК СуммаЗабалансовая,
	|	ТабличнаяЧасть.ИдентификаторСтроки             КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТабличнаяЧасть.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТабличнаяЧасть.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                          КАК АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА &ГруппаПродукции
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК КорАналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И Аналитика.СтатьяКалькуляции = АналитикаБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|	ПО ТабличнаяЧасть.Номенклатура = АналитикаПолучателя.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаПолучателя.Характеристика
	|		И &Назначение = АналитикаПолучателя.Назначение
	|		И ВЫБОР КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель = 14 ТОГДА ТабличнаяЧасть.Серия ИНАЧЕ &ПустаяСсылкаСерия КОНЕЦ = АналитикаПолучателя.Серия
	|		И &Подразделение = АналитикаПолучателя.МестоХранения
	|		И ТабличнаяЧасть.СтатьяКалькуляции = АналитикаПолучателя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателяБезНазначения
	|	ПО ТабличнаяЧасть.Номенклатура = АналитикаПолучателяБезНазначения.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаПолучателяБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаПолучателяБезНазначения.Назначение
	|		И ВЫБОР КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель = 14 ТОГДА ТабличнаяЧасть.Серия ИНАЧЕ &ПустаяСсылкаСерия КОНЕЦ = АналитикаПолучателяБезНазначения.Серия
	|		И &Подразделение = АналитикаПолучателяБезНазначения.МестоХранения
	|		И ТабличнаяЧасть.СтатьяКалькуляции = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ПобочныеИзделия
	// выпуск работ по продукции давальца.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ИСТИНА                                         КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                           КАК РеализацияЗапасовДругойОрганизации,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	Аналитика.КлючАналитики                        КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики           КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.Получатель                      КАК Склад,
	|	ТабличнаяЧасть.Назначение                      КАК Назначение,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.СписатьНаРасходы                КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	// Аналитика получателя соответствует аналитике поступления в котел, со статьей калькуляции.
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатурыПолучателя,
	|	АналитикаПоПолучателюБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДатаОтгрузки,
	|	ТабличнаяЧасть.ДатаПроизводства                КАК ДатаПоступления,
	|	ТабличнаяЧасть.Получатель                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                   КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|			ТОГДА &АналитикаУчетаПартийТоваров
	|		ИНАЧЕ &АналитикаУчетаПартийРабот
	|	КОНЕЦ                                          КАК АналитикаУчетаПартий,
	// Давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	// передаем из цеха.
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорРазделУчета,
	|	0                                              КАК Сумма,
	|	0                                              КАК СуммаЗабалансовая,
	|	ТабличнаяЧасть.ИдентификаторСтроки             КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ТабличнаяЧасть.Номенклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТабличнаяЧасть.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                          КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = ТабличнаяЧасть.Номенклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаПоПолучателю
	|	ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = АналитикаПоПолучателю.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПоПолучателюБезНазначения
	|	ПО
	|		АналитикаПоПолучателю.Номенклатура = АналитикаПоПолучателюБезНазначения.Номенклатура
	|		И АналитикаПоПолучателю.Характеристика = АналитикаПоПолучателюБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаПоПолучателюБезНазначения.Назначение
	|		И АналитикаПоПолучателю.Серия = АналитикаПоПолучателюБезНазначения.Серия
	|		И АналитикаПоПолучателю.МестоХранения = АналитикаПоПолучателюБезНазначения.МестоХранения
	|		И АналитикаПоПолучателю.СтатьяКалькуляции = АналитикаПоПолучателюБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = Аналитика.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = Аналитика.Характеристика
	|		И ТабличнаяЧасть.Назначение = Аналитика.Назначение
	|		И &ПустаяСсылкаСерия = Аналитика.Серия
	|		И ТабличнаяЧасть.Назначение.Заказ.Подразделение = Аналитика.МестоХранения
	|		И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаБезНазначения.Характеристика
	|		И АналитикаБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И &ПустаяСсылкаСерия = АналитикаБезНазначения.Серия
	|		И ТабличнаяЧасть.Назначение.Заказ.Подразделение = АналитикаБезНазначения.МестоХранения
	|		И АналитикаБезНазначения.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И ТабличнаяЧасть.ПередатьДавальцу
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКоэффициентыПересчетаВалют";
	
	УстановитьПараметрЗапросаТаблицаКоэффициентыПересчетаВалют(Запрос);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВтКоэффициентыПересчетаВалют.Период,
		|	ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр,
		|	ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл
		|ПОМЕСТИТЬ ВтКоэффициентыПересчетаВалют
		|ИЗ
		|	&ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ВыходныеИзделия""	КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки	КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО					КАК Поставщик,
	|	НЕОПРЕДЕЛЕНО					КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО					КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО					КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|	КОНЕЦ							КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|				И &ФИФОСкользящаяОценка
	|			ТОГДА ТаблицаДокумента.КодСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ							КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = ТаблицаДокумента.Номенклатура
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И НЕ ТаблицаДокумента.Отменено
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

Функция ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УслугиДавальцуКОформлению";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Назначение.Заказ         КАК ЗаказДавальца,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Количество               КАК КОформлению,
	|	0 КАК Заказано,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ПричиныОтменыЗаказовКлиентов.ПустаяСсылка) КАК ПричинаОтмены,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС)                  КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И ТабличнаяЧасть.ПередатьДавальцу
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Назначение.Заказ         КАК ЗаказДавальца,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Количество               КАК КОформлению,
	|	0 КАК Заказано,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ПричиныОтменыЗаказовКлиентов.ПустаяСсылка) КАК ПричинаОтмены,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС)                  КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И ТабличнаяЧасть.ПередатьДавальцу
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// Потребность в материалах на складе.
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение               КАК Назначение,
	|	ТабличнаяЧасть.Количество               КАК КЗаказу,
	|	ТабличнаяЧасть.Количество               КАК Потребность,
	|	0                                       КАК НаличиеПодЗаказ,
	|	ЛОЖЬ                                    КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.ВариантОбеспечения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Выдача распоряжения на отгрузку со склада.
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение               КАК Назначение,
	|	0                                       КАК КЗаказу,
	|	ТабличнаяЧасть.Количество               КАК Потребность,
	|	ТабличнаяЧасть.Количество               КАК НаличиеПодЗаказ,
	|	ЛОЖЬ                                    КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обеспечение склада выходными изделиями.
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель              КАК Склад,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	ТабличнаяЧасть.Назначение              КАК Назначение,
	|	-ТабличнаяЧасть.Количество             КАК КЗаказу,
	|	0                                      КАК Потребность,
	|	0                                      КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|	И (&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ПроизводствоНаСтороне
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление выходных изделий в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение               КАК Назначение,
	|	0                                       КАК КЗаказу,
	|	0                                       КАК Потребность,
	|	ТабличнаяЧасть.Количество               КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	
	|	// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|	И (&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ПроизводствоНаСтороне
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|		И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обеспечение склада побочными изделиями.
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение               КАК Назначение,
	|	-ТабличнаяЧасть.Количество              КАК КЗаказу,
	|	0                                       КАК Потребность,
	|	0                                       КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|	И (&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ПроизводствоНаСтороне
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление побочных изделий в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение               КАК Назначение,
	|	0                                       КАК КЗаказу,
	|	0                                       КАК Потребность,
	|	ТабличнаяЧасть.Количество               КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|	// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|	И (&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ПроизводствоНаСтороне
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|		И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обеспечение склада неизрасходованными материалами.
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель              КАК Склад,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	&НазначениеМатериалы                   КАК Назначение,
	|	-ТабличнаяЧасть.Количество             КАК КЗаказу,
	|	0                                      КАК Потребность,
	|	0                                      КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ // давальческие назначения
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Обособить
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление неизрасходованных материалов в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации             КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	&НазначениеМатериалы                    КАК Назначение,
	|	0                                       КАК КЗаказу,
	|	0                                       КАК Потребность,
	|	ТабличнаяЧасть.Количество               КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ // давальческие назначения
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Обособить
	|	
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	// Резерв материалов на складе.
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Количество               КАК ВРезервеСоСклада,
	|	0                                      КАК ВРезервеПодЗаказ,
	|	0                                      КАК ВНаличии
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Распоряжение на отгрузку материалов со склада.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	0                                      КАК ВРезервеСоСклада,
	|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление выходных изделий в кладовую.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	0                                      КАК ВРезервеСоСклада,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление побочных изделий в кладовую.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	0                                      КАК ВРезервеСоСклада,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление неизрасходованных материалов в кладовую.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации            КАК Период,
	|	ТабличнаяЧасть.Получатель              КАК Склад,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	0                                      КАК ВРезервеСоСклада,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Обособить
	|				  И &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	ТабличнаяЧасть.Количество              КАК ВНаличии
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказовРаботами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказовРаботами";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// Потребность в работах в подразделении.
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОтгрузки            КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Подразделение                         КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	ТабличнаяЧасть.Назначение              КАК Назначение,
	|	ТабличнаяЧасть.Количество              КАК КОбеспечению
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И НЕ ТабличнаяЧасть.Производится
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|	И ТабличнаяЧасть.ВариантОбеспечения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаГрафикОтгрузкиТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикОтгрузкиТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
		// График отгрузки материалов со склада.
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.ДатаОтгрузки              КАК Период,
		|	ТабличнаяЧасть.ДатаОтгрузки              КАК ДатаОтгрузки,
		|
		|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
		|	ТабличнаяЧасть.Склад                     КАК Склад,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно) ТОГДА
		|			ТабличнаяЧасть.Назначение
		|		КОНЕЦ                                КАК Назначение,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов) ТОГДА
		|			ТабличнаяЧасть.Количество
		|		КОНЕЦ                                КАК КоличествоИзЗаказов,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно) ТОГДА
		|				ТабличнаяЧасть.Количество
		|		КОНЕЦ                                КАК КоличествоПодЗаказ,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется) ТОГДА
		|			ТабличнаяЧасть.Количество
		|		КОНЕЦ                                КАК КоличествоНеобеспечено
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|	И &Статус В (
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
		|
		|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|
		|	И ТабличнаяЧасть.ВариантОбеспечения В(
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвижениеТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// График поступления выходных изделий.
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Статус В (
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &ПроизводствоНаСтороне
	|				И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL ТОГДА
	|			НАЧАЛОПЕРИОДА(ГрафикПроизводства.ОкончаниеЭтапа, День)
	|		ИНАЧЕ
	|			&Период
	|	КОНЕЦ                          КАК Период,
	|	
	|	&ДокументПоступления           КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				
	|				// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|				И( &Статус В(
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И &ПроизводствоНаСтороне
	|							И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|				
	|			ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				
	|				// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|				И( &Статус В(
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И &ПроизводствоНаСтороне
	|							И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|				
	|			ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказ,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|	
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления выходных изделий по заказу на производство.
	// Текст запроса должен быть синхронным тексту запроса графика поступления выходных изделий по этапу, отличие только в
	// знаке движения и Распоряжении.
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Статус В(
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &ПроизводствоНаСтороне
	|				И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL ТОГДА
	|			НАЧАЛОПЕРИОДА(ГрафикПроизводства.ОкончаниеЭтапа, День)
	|		ИНАЧЕ
	|			&Период
	|	КОНЕЦ                          КАК Период,
	|	
	|	&Распоряжение                  КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	0                              КАК ПланируемоеПоступление,
	|	0                              КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|	
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления выходных изделий в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства КАК Период,
	|	&ДокументПоступления           КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель       КАК Склад,
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Назначение       КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|	
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.Произведено
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// График поступления побочных изделий.
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Статус В(
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &ПроизводствоНаСтороне
	|				И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL ТОГДА
	|			НАЧАЛОПЕРИОДА(ГрафикПроизводства.ОкончаниеЭтапа, День)
	|		ИНАЧЕ
	|			&Период
	|	КОНЕЦ                          КАК Период,
	|	
	|	&ДокументПоступления           КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				
	|				// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|				И( &Статус В(
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И &ПроизводствоНаСтороне
	|							И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|				
	|			ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				
	|				// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|				И( &Статус В(
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И &ПроизводствоНаСтороне
	|							И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|				
	|			ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказ,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|	
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления побочных изделий по заказу на производство.
	// Текст запроса должен быть синхронным тексту запроса графика поступления побочных изделий по этапу, отличие только в
	// знаке движения и Распоряжении.
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Статус В(
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL ТОГДА
	|			НАЧАЛОПЕРИОДА(ГрафикПроизводства.ОкончаниеЭтапа, День)
	|		ИНАЧЕ
	|			&Период
	|	КОНЕЦ                          КАК Период,
	|	
	|	&Распоряжение                  КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	0                              КАК ПланируемоеПоступление,
	|	0                              КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|		
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления побочных изделий в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства КАК Период,
	|	&ДокументПоступления            КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель       КАК Склад,
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Назначение       КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.Произведено
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|	
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// График поступления неизрасходованных материалов.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации    КАК Период,
	|	&ДокументПоступления           КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|
	|	ВЫБОР КОГДА ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                     КАК Назначение,
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				0
	|			ИНАЧЕ
	|				ТабличнаяЧасть.Количество
	|		КОНЕЦ                     КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				0
	|			ИНАЧЕ
	|				ТабличнаяЧасть.Количество
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) // фактически эти движения появляются начиная со статуса ""Начат"", до этого момента табличная часть ""Экономия материалов пуста"".
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика неизрасходованных материалов в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации     КАК Период,
	|	&ДокументПоступления            КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель       КАК Склад,
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                     КАК Назначение,
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				0
	|			ИНАЧЕ
	|				-ТабличнаяЧасть.Количество
	|		КОНЕЦ                     КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				0
	|			ИНАЧЕ
	|				-ТабличнаяЧасть.Количество
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) // фактически эти движения появляются начиная со статуса ""Начат"", до этого момента табличная часть ""Экономия материалов пуста"".
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтгрузке";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	// Резерв серий материалов.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки            КАК Период,
	|	ТабличнаяЧасть.Склад                   КАК Склад,
	|	ВЫБОР 
	|		КОГДА &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|			ТОГДА &Переработчик
	|		ИНАЧЕ &Подразделение                         
	|	КОНЕЦ                                  КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ВЫБОР КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Серия,
	|	ТабличнаяЧасть.Количество              КАК ВРезерве,
	|	0                                      КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Распоряжение на отгрузку материалов
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки            КАК Период,
	|	ТабличнаяЧасть.Склад                   КАК Склад,
	|	ВЫБОР 
	|		КОГДА &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|			ТОГДА &Переработчик
	|		ИНАЧЕ &Подразделение                         
	|	КОНЕЦ                                  КАК Получатель,
	|	ВЫБОР 
	|		КОГДА &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|			ТОГДА &ЗаказПереработчику 
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ                                  КАК ДокументОтгрузки,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|			И ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	0                                      КАК ВРезерве,
	|	ТабличнаяЧасть.Количество              КАК КОтгрузке,
	|	ТабличнаяЧасть.Количество              КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Отгрузка материалов из кладовой.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки            КАК Период,
	|	ТабличнаяЧасть.Склад                   КАК Склад,
	|	ВЫБОР 
	|		КОГДА &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|			ТОГДА &Переработчик
	|		ИНАЧЕ &Подразделение                         
	|	КОНЕЦ                                  КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|			И ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	0                                      КАК ВРезерве,
	|	ТабличнаяЧасть.Количество              КАК КОтгрузке,
	|	ТабличнаяЧасть.Количество              КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Склад
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ &ПроизводствоНаСтороне
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.ВариантОбеспечения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// Распоряжение на приемку выходных изделий.
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства        КАК Период,
	|	ТабличнаяЧасть.Получатель              КАК Склад,
	|	ВЫБОР
	|		КОГДА &ПроизводствоНаСтороне
	|			ТОГДА &Переработчик
	|		ИНАЧЕ &Подразделение
	|	КОНЕЦ                                  КАК Отправитель,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	&ДокументПоступления                   КАК ДокументПоступления,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	ТабличнаяЧасть.Количество              КАК КОформлениюНакладныхПоРаспоряжению,
	|	ВЫБОР
	|		КОГДА НЕ &НакладнаяЯвляетсяРаспоряжением
	|				И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				И ТабличнаяЧасть.ДатаПроизводства >= ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК КОформлениюОрдеров,
	|	ВЫБОР
	|		КОГДА &ПроизводствоНаСтороне ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.Получатель) = ТИП(Справочник.Склады)
	|	И (ТабличнаяЧасть.Произведено
	|			ИЛИ &ПроизводствоНаСтороне
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Распоряжение на приемку побочных изделий.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства        КАК Период,
	|	ТабличнаяЧасть.Получатель              КАК Склад,
	|	ВЫБОР
	|		КОГДА &ПроизводствоНаСтороне
	|			ТОГДА &Переработчик
	|		ИНАЧЕ &Подразделение
	|	КОНЕЦ КАК Отправитель,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	&ДокументПоступления                   КАК ДокументПоступления,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Количество              КАК КОформлениюНакладныхПоРаспоряжению,
	|	ВЫБОР
	|		КОГДА (НЕ &НакладнаяЯвляетсяРаспоряжением
	|				И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				И ТабличнаяЧасть.ДатаПроизводства >= ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении)
	|			ТОГДА ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК КОформлениюОрдеров,
	|	ВЫБОР
	|		КОГДА &ПроизводствоНаСтороне ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	И ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.Получатель) = ТИП(Справочник.Склады)
	|	И (ТабличнаяЧасть.Произведено 
	|			ИЛИ &ПроизводствоНаСтороне 
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Распоряжение на приемку неизрасходованных материалов.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации            КАК Период,
	|	ТабличнаяЧасть.Получатель              КАК Склад,
	|	ВЫБОР
	|		КОГДА &ПроизводствоНаСтороне
	|			ТОГДА &Переработчик
	|		ИНАЧЕ &Подразделение
	|	КОНЕЦ КАК Отправитель,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	&ДокументПоступления                   КАК ДокументПоступления,
	|	ВЫБОР КОГДА ВЫРАЗИТЬ(&НазначениеМатериалы КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Количество              КАК КОформлениюНакладныхПоРаспоряжению,
	|	ВЫБОР
	|		КОГДА (НЕ &НакладнаяЯвляетсяРаспоряжением
	|				И ТабличнаяЧасть.Получатель.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И ТабличнаяЧасть.ДатаОперации >= ТабличнаяЧасть.Получатель.ДатаНачалаОрдернойСхемыПриПоступлении)
	|			ТОГДА ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК КОформлениюОрдеров,
	|	ВЫБОР
	|		КОГДА &ПроизводствоНаСтороне ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.Получатель) = ТИП(Справочник.Склады)
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// Передача из нашей кладовой в производство
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                   КАК Период,
	|	ТабличнаяЧасть.Склад                          КАК Склад,
	|	ТабличнаяЧасть.Номенклатура                   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                 КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|		И ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                                    КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель В (4, 6, 8, 10, 14)
	|			ТОГДА ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТабличнаяЧасть.Количество                     КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель В (6, 8, 10, 14)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                        КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Склад
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.ВариантОбеспечения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногоОборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Передача выходных и побочных изделий в нашу кладовую
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерийПолучатель В (4, 6, 8, 10, 14)
	|			ТОГДА ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                    КАК Серия,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И (НЕ ТабличнаяЧасть.СтатусУказанияСерийПолучатель В (4, 6, 8, 10)
	|			ИЛИ ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Серия                    КАК Серия,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И (НЕ ТабличнаяЧасть.СтатусУказанияСерийПолучатель В (4, 6, 8, 10)
	|			ИЛИ ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства          КАК Период,
	|	ТабличнаяЧасть.Получатель                КАК Склад,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.Количество                КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ВыходныеИзделия
	|		ПО ТабличнаяЧасть.Ссылка = ВыходныеИзделия.Ссылка
	|			И ТабличнаяЧасть.Номенклатура = ВыходныеИзделия.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ВыходныеИзделия.Характеристика
	|			И ТабличнаяЧасть.Назначение = ВыходныеИзделия.Назначение
	|			И ТабличнаяЧасть.Получатель = ВыходныеИзделия.Получатель
	|			И ТабличнаяЧасть.ДатаПроизводства = ВыходныеИзделия.ДатаПроизводства
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ВыходныеИзделия.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ ВыходныеИзделия.СписатьНаРасходы
	|	И НЕ ВыходныеИзделия.Отменено
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Назначение,
	|	ТабличнаяЧасть.Получатель,
	|	ТабличнаяЧасть.ДатаПроизводства,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВыходныеИзделия.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства          КАК Период,
	|	ТабличнаяЧасть.Получатель                КАК Склад,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.Количество                КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделияСерии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ПобочныеИзделия
	|		ПО ТабличнаяЧасть.Ссылка = ПобочныеИзделия.Ссылка
	|			И ТабличнаяЧасть.Номенклатура = ПобочныеИзделия.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ПобочныеИзделия.Характеристика
	|			И ТабличнаяЧасть.Назначение = ПобочныеИзделия.Назначение
	|			И ТабличнаяЧасть.Получатель = ПобочныеИзделия.Получатель
	|			И ТабличнаяЧасть.ДатаПроизводства = ПобочныеИзделия.ДатаПроизводства
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ПобочныеИзделия.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ ПобочныеИзделия.СписатьНаРасходы
	|	И НЕ ПобочныеИзделия.Отменено
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Назначение,
	|	ТабличнаяЧасть.Получатель,
	|	ТабличнаяЧасть.ДатаПроизводства,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ПобочныеИзделия.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Передача неизрасходованных материалов в нашу кладовую
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации             КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ВЫРАЗИТЬ(&НазначениеМатериалы КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерийПолучатель В (4, 6, 8, 10, 14)
	|			ТОГДА ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Серия,
	|	ТабличнаяЧасть.Количество              КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И (НЕ ТабличнаяЧасть.СтатусУказанияСерийПолучатель В (4, 6, 8, 10)
	|			ИЛИ ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации              КАК Период,
	|	ТабличнаяЧасть.Получатель                КАК Склад,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ВЫБОР КОГДА ВЫРАЗИТЬ(&НазначениеМатериалы КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.Количество                КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериаловСерии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ЭкономияМатериалов
	|		ПО ТабличнаяЧасть.Ссылка = ЭкономияМатериалов.Ссылка
	|			И ТабличнаяЧасть.Номенклатура = ЭкономияМатериалов.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ЭкономияМатериалов.Характеристика
	|			И ТабличнаяЧасть.Получатель = ЭкономияМатериалов.Получатель
	|			И ТабличнаяЧасть.ДатаОперации = ЭкономияМатериалов.ДатаОперации
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ЭкономияМатериалов.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ ЭкономияМатериалов.СписатьНаРасходы
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Получатель,
	|	ТабличнаяЧасть.ДатаОперации,
	|	ВЫБОР КОГДА ВЫРАЗИТЬ(&НазначениеМатериалы КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ЭкономияМатериалов.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДоступностьВидовРабочихЦентров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДоступностьВидовРабочихЦентров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|
		|	ТабличнаяЧасть.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
		|	ТабличнаяЧасть.ДатаИнтервала     КАК ДатаИнтервала,
		|
		|	СУММА(ТабличнаяЧасть.Количество) КАК Занято,
		|
		|	&Подразделение КАК Подразделение
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ЗанятостьВидовРабочихЦентров КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И &РучноеРазмещениеВГрафике
		|	
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.ВидРабочегоЦентра,
		|	ТабличнаяЧасть.ДатаИнтервала";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	// выпуск работ по расчитываемой стоимости
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТабличнаяЧасть.Получатель             КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура           КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика         КАК Характеристика,
	|	ТабличнаяЧасть.Назначение             КАК Назначение,
	|	ТабличнаяЧасть.Количество             КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// выпуск работ по фиксированной стоимости
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ТабличнаяЧасть.Получатель,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Назначение,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// потребление не обособленных работ
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОтгрузки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	&Подразделение,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	НЕОПРЕДЕЛЕНО,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// потребление обособленных работ
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОтгрузки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	&Подразделение,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Назначение,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыпускПродукции";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Организация								КАК Организация,
	|	&Подразделение								КАК Подразделение,
	|	ТабличнаяЧасть.ДатаПроизводства				КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаБезНазначения.КлючАналитики
	|	КОНЕЦ										КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка										КАК Распоряжение,
	|	ТабличнаяЧасть.КодСтроки					КАК КодСтроки,
	|	ТабличнаяЧасть.Количество					КАК Количество,
	|	ТабличнаяЧасть.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация								КАК Организация,
	|	&Подразделение								КАК Подразделение,
	|	ТабличнаяЧасть.ДатаПроизводства				КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаБезНазначения.КлючАналитики
	|	КОНЕЦ										КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка										КАК Распоряжение,
	|	ТабличнаяЧасть.КодСтроки					КАК КодСтроки,
	|	ТабличнаяЧасть.Количество					КАК Количество,
	|	ТабличнаяЧасть.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	// Отгрузка материалов из цеховой кладовой
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОтгрузки                             КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	ТабличнаяЧасть.Склад                                    КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПередачаВПроизводствоОтгрузка) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	НЕ ТабличнаяЧасть.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|		ИЛИ &Период < ТабличнаяЧасть.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Склад.ЦеховаяКладовая
	|	И ТабличнаяЧасть.Склад.Подразделение = &Подразделение
	|	И НЕ &ПроизводствоНаСтороне
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Производство продукции в подразделении
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                               КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                              			КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПроизводствоПродукции) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ИСТИНА                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                               КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПроизводствоПродукции) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ИСТИНА                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Производство продукции в подразделении
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                           	КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                               КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПроизводствоПродукции) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ИСТИНА                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                               КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПроизводствоПродукции) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ИСТИНА                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделияСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приемка продукции в цеховую кладовую
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|				ИЛИ НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ВЫБОР
	|						КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|							ТОГДА &Период
	|						ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|					КОНЕЦ < ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение = &Подразделение
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|				ИЛИ НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ВЫБОР
	|						КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|							ТОГДА &Период
	|						ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|					КОНЕЦ < ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение = &Подразделение
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приемка продукции в цеховую кладовую
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|				ИЛИ НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ВЫБОР
	|						КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|							ТОГДА &Период
	|						ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|					КОНЕЦ < ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|				ИЛИ НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ВЫБОР
	|						КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|							ТОГДА &Период
	|						ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|					КОНЕЦ < ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделияСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Возврат неизрасходованных материалов в нашу кладовую
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации                              КАК Период,
	|	ТабличнаяЧасть.Номенклатура                              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                            КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(&НазначениеМатериалы КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить
	|			ТОГДА &НазначениеМатериалы
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                    КАК Назначение,
	|	ТабличнаяЧасть.Серия                                     КАК Серия,
	|	ТабличнаяЧасть.Количество                                КАК Количество,
	|	&Подразделение                                           КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                                КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВозвратМатериаловИзПроизводстваПриемка) КАК СкладскаяОперация,
	|	&Ссылка                                                КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ТабличнаяЧасть.ДатаОперации < ТабличнаяЧасть.Получатель.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТабличнаяЧасть.Получатель.ЦеховаяКладовая
	|	И ТабличнаяЧасть.Получатель.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации                              КАК Период,
	|	ТабличнаяЧасть.Номенклатура                              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                            КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(&НазначениеМатериалы КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить
	|			ТОГДА &НазначениеМатериалы
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  КАК Назначение,
	|	ТабличнаяЧасть.Серия                                   КАК Серия,
	|	ТабличнаяЧасть.Количество                              КАК Количество,
	|	&Подразделение                                         КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                              КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВозвратМатериаловИзПроизводстваПриемка) КАК СкладскаяОперация,
	|	&Ссылка                                                КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ТабличнаяЧасть.ДатаОперации < ТабличнаяЧасть.Получатель.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериаловСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Получатель <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	И ТабличнаяЧасть.Получатель.ЦеховаяКладовая
	|	И ТабличнаяЧасть.Получатель.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Расход материалов
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаРасхода                              КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	&Назначение				                                КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                          КАК Отправитель,
	|	&Подразделение                                          КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПотреблениеМатериаловПриПроизводстве) КАК СкладскаяОперация,
	|	&Ссылка                                                 КАК Документ,
	|	ИСТИНА                                                  КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	ТекстЗапроса = "
	// сохранение движений по расходу материала, сформированных фоновым заданием
	|ВЫБРАТЬ
	|	6                                                    КАК Порядок,
	|	0                                                    КАК НомерСтроки,
	|	Движения.ВидДвижения                                 КАК ВидДвижения,
	|	Движения.Период                                      КАК Период,
	|	Движения.ОрганизацияОтгрузки                         КАК ОрганизацияОтгрузки,
	|	Движения.Организация                                 КАК Организация,
	|	Движения.ВидЗапасов                                  КАК ВидЗапасов,
	|	Движения.КорВидЗапасов                               КАК КорВидЗапасов,
	|	Движения.Номенклатура                                КАК Номенклатура,
	|	Движения.Характеристика                              КАК Характеристика,
	|	Движения.НомерГТД                                    КАК НомерГТД,
	|	Движения.Количество                                  КАК Количество,
	|	Движения.ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	Движения.НалогообложениеНДС                          КАК НалогообложениеНДС,
	|	Движения.АналитикаУчетаНоменклатуры                  КАК АналитикаУчетаНоменклатуры,
	|	Движения.СтатьяРасходов                              КАК СтатьяРасходов,
	|	Движения.АналитикаРасходов                           КАК АналитикаРасходов,
	|	Движения.АналитикаАктивовПассивов                    КАК АналитикаАктивовПассивов,
	|	Движения.КорАналитикаУчетаНоменклатуры               КАК КорАналитикаУчетаНоменклатуры,
	|	Движения.Первичное                                   КАК Первичное,
	|	Движения.РасчетПартий                                КАК РасчетПартий
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК Движения
	|
	|ГДЕ
	|	Движения.Регистратор = &Ссылка
	|	И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = ДАТАВРЕМЯ(1,1,1)
	|		ИЛИ &ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО
	|		ИЛИ Движения.Период < &ПериодЗаполненияВидовЗапасовИСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход материалов из кладовой
	|ВЫБРАТЬ
	|	1                                              КАК Порядок,
	|	ВидыЗапасов.НомерСтроки                        КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)         КАК ВидДвижения,
	|	ВидыЗапасов.ДатаОтгрузки                       КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ                                          КАК Организация,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ВидыЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ВидыЗапасов.ВидЗапасов
	|	КОНЕЦ                                          КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ВидыЗапасов.Номенклатура                       КАК Номенклатура,
	|	ВидыЗапасов.Характеристика                     КАК Характеристика,
	|	ВидыЗапасов.НомерГТД                           КАК НомерГТД,
	|	ВидыЗапасов.Количество                         КАК Количество,
	|	ВидыЗапасов.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры         КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыПолучателя КАК КорАналитикаУчетаНоменклатуры,
	|	ЛОЖЬ                                           КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|ГДЕ
	|	ВидыЗапасов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И ВидыЗапасов.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход материалов в цех
	|ВЫБРАТЬ
	|	2                                              КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                    КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.НомерГТД                        КАК НомерГТД,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаУчетаНоменклатуры,
	|	ЛОЖЬ                                           КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Расход сэкономленных материалов из цеха (передаваемых на склад или списываемых на расходы).
	|ВЫБРАТЬ
	|	3                                              КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)         КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                 КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.НомерГТД                        КАК НомерГТД,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов               КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов        КАК АналитикаАктивовПассивов,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя КАК КорАналитикаУчетаНоменклатуры,
	|	ЛОЖЬ                                           КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход сэкономленных материалов в кладовую
	|ВЫБРАТЬ
	|	4                                              КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                 КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.НомерГТД                        КАК НомерГТД,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаУчетаНоменклатуры,
	|	ЛОЖЬ                                           КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход продукции в подразделение или в цеховую кладовую
	|ВЫБРАТЬ
	|	5                                              КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                 КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаУчетаНоменклатуры,
	|	ЛОЖЬ                                           КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)					КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки								КАК Период,
	|	ТабличнаяЧасть.Склад									КАК Склад,
	|	ТабличнаяЧасть.ВидЗапасовВладельца.Организация			КАК ОрганизацияВладелец,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры				КАК АналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.ВидЗапасов								КАК ВидЗапасовПродавца,
	|	ТабличнаяЧасть.НомерГТД									КАК НомерГТД,
	|	ТабличнаяЧасть.Номенклатура								КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика							КАК Характеристика,
	|	ТабличнаяЧасть.Количество								КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация					КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность									КАК НалогообложениеНДС
	|ИЗ
	|	втВидыЗапасов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.РеализацияЗапасовДругойОрганизации
	|	И ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.НомерСтроки                        КАК НомерСтроки,
	|	ТабличнаяЧасть.ДатаПоступления                    КАК ДатаПоступления,
	|	ТабличнаяЧасть.Номенклатура                       КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                     КАК Характеристика,
	|	Аналитика.Серия                               	  КАК Серия,
	|	ТабличнаяЧасть.Назначение                         КАК Назначение,
	|	ТабличнаяЧасть.ВидЗапасов                         КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    	  КАК НомерГТД
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТабличнаяЧасть.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|		И ТабличнаяЧасть.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = ПоступленияТоваров.Характеристика
	|		И Аналитика.Серия = ПоступленияТоваров.Серия
	|		И ТабличнаяЧасть.Назначение = ПоступленияТоваров.Назначение
	|		И (ПоступленияТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|	И (ПоступленияТоваров.ВидЗапасов ЕСТЬ NULL 
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < ТабличнаяЧасть.ДатаПоступления)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыМатериаловВПроизводство";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Ссылка                                      КАК Распоряжение,
	|	&Подразделение                               КАК Подразделение,
	|	&Подразделение                               КАК Получатель,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ТабличнаяЧасть.Серия                         КАК Серия,
	|	ТабличнаяЧасть.Склад                         КАК Склад,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|			ТОГДА 
	|				ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                        КАК НазначениеОтправителя,
	|	&Назначение                                  КАК Назначение,
	|	ТабличнаяЧасть.Количество                    КАК Заказано,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов), 
	|													ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада))
	|			ТОГДА ТабличнаяЧасть.Количество
	|	КОНЕЦ                                        КАК ВРезерве,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить), 
	|													ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|			ТОГДА ТабличнаяЧасть.Количество
	|	КОНЕЦ                                        КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И НЕ &ПроизводствоНаСтороне
	|
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                  КАК Период,
	|	&Ссылка                                      КАК Распоряжение,
	|	&Подразделение                               КАК Подразделение,
	|	&Подразделение                               КАК Получатель,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ТабличнаяЧасть.Серия                         КАК Серия,
	|	ТабличнаяЧасть.Склад                         КАК Склад,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                        КАК НазначениеОтправителя,
	|	&Назначение                                  КАК Назначение,
	|	ТабличнаяЧасть.Количество                    КАК Заказано,
	|	0                                            КАК ВРезерве,
	|	ТабличнаяЧасть.Количество                    КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И НЕ &ПроизводствоНаСтороне
	|
	|	И (ТабличнаяЧасть.Склад.ЦеховаяКладовая
	|		И ТабличнаяЧасть.Склад.Подразделение = &Подразделение)
	|
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаРаспоряженияНаПередачуИзПроизводства(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РаспоряженияНаПередачуИзПроизводства";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства              КАК Период,
	|	&Подразделение                               КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                    КАК Получатель,
	|	&Ссылка                                      КАК Распоряжение,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                    КАК Назначение,
	|	ВЫБОР
	|		КОГДА &ЯвляетсяНазначениемПродукции
	|			ТОГДА &Назначение
	|		ИНАЧЕ ТабличнаяЧасть.Назначение
	|	КОНЕЦ                                        КАК НазначениеОтправителя,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель = 14
	|			ТОГДА ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                        КАК Серия,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства) КАК Операция,
	|	ТабличнаяЧасть.Количество                    КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И (НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|		ИЛИ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение <> &Подразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства              КАК Период,
	|	&Подразделение                               КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                    КАК Получатель,
	|	&Ссылка                                      КАК Распоряжение,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                    КАК Назначение,
	|	ВЫБОР
	|		КОГДА &ЯвляетсяНазначениемПродукции
	|			ТОГДА &Назначение
	|		ИНАЧЕ ТабличнаяЧасть.Назначение
	|	КОНЕЦ                                        КАК НазначениеОтправителя,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель = 14
	|			ТОГДА ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                        КАК Серия,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства) КАК Операция,
	|	ТабличнаяЧасть.Количество                    КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И (НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|		ИЛИ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение <> &Подразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации                  КАК Период,
	|	&Подразделение                               КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                    КАК Получатель,
	|	&Ссылка                                      КАК Распоряжение,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                                   КАК Назначение,
	|	&Назначение                                 КАК НазначениеОтправителя,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерийОтправитель = 14
	|			ТОГДА ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                        КАК Серия,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства) КАК Операция,
	|	ТабличнаяЧасть.Количество                    КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И (НЕ ТабличнаяЧасть.Получатель.ЦеховаяКладовая
	|		ИЛИ ТабличнаяЧасть.Получатель.Подразделение <> &Подразделение)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТрудозатратыКОформлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТрудозатратыКОформлению";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	ТаблицаТрудозатраты.ДатаВыполнения            КАК Период,
	|	&Организация                                  КАК Организация,
	|	&ПартияПроизводства                           КАК ПартияПроизводства,
	|	ТаблицаТрудозатраты.Ссылка                    КАК Распоряжение,
	|	ТаблицаТрудозатраты.ВидРабот                  КАК ВидРабот,
	|	ТаблицаТрудозатраты.Исполнитель               КАК Исполнитель,
	|	&Подразделение                                КАК Подразделение,
	|	ТаблицаТрудозатраты.КодСтроки                 КАК КодСтрокиРаспоряжения,
	|	ТаблицаТрудозатраты.Количество                КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.Трудозатраты КАК ТаблицаТрудозатраты
	|ГДЕ
	|	ТаблицаТрудозатраты.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И ТаблицаТрудозатраты.Выполнено";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                   КАК НомерСтроки,
	|	ТабличнаяЧасть.ДатаПроизводства              КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ ТабличнаяЧасть.Получатель
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТабличнаяЧасть.СтатьяРасходов                КАК Статья,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов      КАК Аналитика,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК Сумма
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПроизводства, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.Отменено
	|	И ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.СтатьяРасходов Ссылка ПланВидовХарактеристик.СтатьиАктивовПассивов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	УстановитьПараметрЗапросаПустаяАналитикаУчетаПартий(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасовОтложенно", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасовОтложенно(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСебестоимостьТоваровОтложенно", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСебестоимостьТоваровОтложенно(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// расход материалов из цеховой кладовой
	|ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                       КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                      КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                       КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                        КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	0                                                КАК СтоимостьУпр,
	|	0                                                КАК СтоимостьЗабалансовая,
	|	0                                                КАК СтоимостьЗабалансоваяРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.РазделУчета                       КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК КорАналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки               КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ 
	|		(&ПериодЗаполненияВидовЗапасовИСебестоимости <> ДатаВремя(1,1,1) И ТабличнаяЧасть.ДатаОтгрузки >= &ПериодЗаполненияВидовЗапасовИСебестоимости))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход материалов в цех
	|ВЫБРАТЬ
	|	2                                                 КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                        КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                       КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                             КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                      КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                        КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                         КАК Количество,
	|	0                                                 КАК Стоимость,
	|	0                                                 КАК СтоимостьБезНДС,
	|	0                                                 КАК СтоимостьРегл,
	|	0                                                 КАК СтоимостьУпр,
	|	0                                                 КАК СтоимостьЗабалансовая,
	|	0                                                 КАК СтоимостьЗабалансоваяРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                      КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорПартия,
	|	ВЫБОР КОГДА &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета          КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                            КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ 
	|		(&ПериодЗаполненияВидовЗапасовИСебестоимости <> ДатаВремя(1,1,1) И ТабличнаяЧасть.ДатаОтгрузки >= &ПериодЗаполненияВидовЗапасовИСебестоимости))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Расход сэкономленных материалов из цеха (передаваемых на склад или списываемых на расходы).
	|ВЫБРАТЬ
	|	3                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                       КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                   КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                       КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                        КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	0                                                КАК СтоимостьУпр,
	|	0                                                КАК СтоимостьЗабалансовая,
	|	0                                                КАК СтоимостьЗабалансоваяРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.КорРазделУчета                    КАК КорРазделУчета,
	|	ТабличнаяЧасть.Подразделение                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	ТабличнаяЧасть.СтатьяРасходов                    КАК СтатьяРасходовСписания,
	|	ТабличнаяЧасть.СтатьяРасходов                    КАК СтатьяАктивовПассивов,
	|	ТабличнаяЧасть.АналитикаРасходов                 КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов          КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК КорАналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки               КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	(ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|	ИЛИ ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию))
	|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ 
	|		(&ПериодЗаполненияВидовЗапасовИСебестоимости <> ДатаВремя(1,1,1) И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаполненияВидовЗапасовИСебестоимости))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход сэкономленных материалов в цеховую кладовую
	|ВЫБРАТЬ
	|	4                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                       КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                   КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.КорРазделУчета                    КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                        КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	0                                                КАК СтоимостьУпр,
	|	0                                                КАК СтоимостьЗабалансовая,
	|	0                                                КАК СтоимостьЗабалансоваяРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	ВЫБОР КОГДА &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											 КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                    КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ 
	|		(&ПериодЗаполненияВидовЗапасовИСебестоимости <> ДатаВремя(1,1,1) И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаполненияВидовЗапасовИСебестоимости))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход продукции и побочных изделий
	|ВЫБРАТЬ
	|	5                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                       КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                   КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                       КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов И ТабличнаяЧасть.ДополнениеДляДавальца
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                        КАК Количество,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))   КАК Стоимость,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))   КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(31,2))  КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))
	|		ИНАЧЕ 0
	|	КОНЕЦ 						                     КАК СтоимостьУпр,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.СуммаЗабалансовая * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))   КАК СтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.СуммаЗабалансовая * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(31,2))  КАК СтоимостьЗабалансоваяРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов И ТабличнаяЧасть.ДополнениеДляДавальца
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		КОГДА НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов И ТабличнаяЧасть.ДополнениеДляДавальца
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)   КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПоступления, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ 
	|		(&ПериодЗаполненияВидовЗапасовИСебестоимости <> ДатаВремя(1,1,1) И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаполненияВидовЗапасовИСебестоимости))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход продукции и побочных изделий из цеха на статью расходов
	|ВЫБРАТЬ
	|	6                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                          КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                      КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                          КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                        КАК Количество,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))   КАК Стоимость,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))   КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(31,2))  КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))
	|		ИНАЧЕ 0
	|	КОНЕЦ 						                     КАК СтоимостьУпр,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.СуммаЗабалансовая * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))   КАК СтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.СуммаЗабалансовая * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(31,2))  КАК СтоимостьЗабалансоваяРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.КорРазделУчета                    КАК КорРазделУчета,
	|	ТабличнаяЧасть.Подразделение                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ТабличнаяЧасть.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК СтатьяРасходовСписания,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|			ТОГДА ТабличнаяЧасть.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК СтатьяАктивовПассивов,
	|	ТабличнаяЧасть.АналитикаРасходов                 КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов          КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                            КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                            КАК КорВидДеятельностиНДС,
	|	&НаправлениеДеятельности                          КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                   КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПоступления, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	И ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ 
	|		(&ПериодЗаполненияВидовЗапасовИСебестоимости <> ДатаВремя(1,1,1) И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаполненияВидовЗапасовИСебестоимости))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход побочных изделий на партию производства
	|ВЫБРАТЬ
	|	8                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                       КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                   КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|	КОНЕЦ                                            КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидЗапасов,
	|	- ТабличнаяЧасть.Количество                      КАК Количество,
	|	- ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))   КАК Стоимость,
	|	- ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))   КАК СтоимостьБезНДС,
	|	- ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(31,2))  КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УправленческийУчетОрганизаций
	|		ТОГДА -ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))
	|		ИНАЧЕ 0
	|	КОНЕЦ 						                     КАК СтоимостьУпр,
	|	- ВЫРАЗИТЬ(ТабличнаяЧасть.СуммаЗабалансовая * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))   КАК СтоимостьЗабалансовая,
	|	- ВЫРАЗИТЬ(ТабличнаяЧасть.СуммаЗабалансовая * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(31,2))  КАК СтоимостьЗабалансоваяРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	ТабличнаяЧасть.СтатьяКалькуляции                 КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	&ПартияПроизводства                              КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.КорАналитикаФинансовогоУчета      КАК АналитикаФинансовогоУчета,
	|	&ВидДеятельностиНДСНЗП                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)  КАК ТипЗаписи,
	|	НЕОПРЕДЕЛЕНО                                     КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПоступления, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|	И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ 
	|		(&ПериодЗаполненияВидовЗапасовИСебестоимости <> ДатаВремя(1,1,1) И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаполненияВидовЗапасовИСебестоимости))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Движения, сформированные отложенным проведением.
	// Формируются когда параметр СохранятьОтложенныеДвижения установлен в значение Истина
	// Период, за который сохраняются отложенные движения вычисляется по параметру ПериодЗаполненияВидовЗапасовИСебестоимости:
	// если НЕОПРЕДЕЛЕНО, то все
	// если пустая дата, то движения не выбираются, а сохраняются при записи набора
	// если заполнено периодом, то сохраняются начиная с этого периода.
	|ВЫБРАТЬ
	|	7                                                КАК Порядок,
	|	0                                                КАК НомерСтрокиДокумента,
	|	ВидыЗапасов.ВидДвижения                          КАК ВидДвижения,
	|	ВидыЗапасов.Период                               КАК Период,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры           КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Организация                          КАК Организация,
	|	ВидыЗапасов.РазделУчета                          КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасов                           КАК ВидЗапасов,
	|	ВидыЗапасов.КорВидЗапасов                        КАК КорВидЗапасов,
	|	ВидыЗапасов.Количество                           КАК Количество,
	|	ВидыЗапасов.Стоимость                            КАК Стоимость,
	|	ВидыЗапасов.СтоимостьБезНДС                      КАК СтоимостьБезНДС,
	|	ВидыЗапасов.СтоимостьРегл                        КАК СтоимостьРегл,
	|	ВидыЗапасов.СтоимостьУпр                         КАК СтоимостьУпр,
	|	ВидыЗапасов.СтоимостьЗабалансовая                КАК СтоимостьЗабалансовая,
	|	ВидыЗапасов.СтоимостьЗабалансоваяРегл            КАК СтоимостьЗабалансоваяРегл,
	|	ВидыЗапасов.ХозяйственнаяОперация                КАК ХозяйственнаяОперация,
	|	ВидыЗапасов.КорАналитикаУчетаНоменклатуры        КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.КорРазделУчета                       КАК КорРазделУчета,
	|	ВидыЗапасов.Подразделение                        КАК Подразделение,
	|	ВидыЗапасов.ГруппаПродукции                      КАК ГруппаПродукции,
	|	ВидыЗапасов.СтатьяКалькуляции                    КАК СтатьяКалькуляции,
	|	ВидыЗапасов.СтатьяРасходовСписания               КАК СтатьяРасходовСписания,
	|	ВидыЗапасов.СтатьяАктивовПассивов                КАК СтатьяАктивовПассивов,
	|	ВидыЗапасов.АналитикаРасходов                    КАК АналитикаРасходов,
	|	ВидыЗапасов.АналитикаАктивовПассивов             КАК АналитикаАктивовПассивов,
	|	ВидыЗапасов.Партия                               КАК Партия,
	|	ВидыЗапасов.КорПартия                            КАК КорПартия,
	|	ВидыЗапасов.АналитикаУчетаПартий                 КАК АналитикаУчетаПартий,
	|	ВидыЗапасов.АналитикаФинансовогоУчета            КАК АналитикаФинансовогоУчета,
	|	ВидыЗапасов.ВидДеятельностиНДС                   КАК ВидДеятельностиНДС,
	|	ВидыЗапасов.КорАналитикаУчетаПартий              КАК КорАналитикаУчетаПартий,
	|	ВидыЗапасов.КорАналитикаФинансовогоУчета         КАК КорАналитикаФинансовогоУчета,
	|	ВидыЗапасов.КорВидДеятельностиНДС                КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорНаправлениеДеятельности,
	|	ВидыЗапасов.ТипЗаписи                            КАК ТипЗаписи,
	|	ВидыЗапасов.ИдентификаторСтроки                  КАК ИдентификаторСтроки
	|ИЗ
	|	ВтСебестоимостьТоваровОтложенно КАК ВидыЗапасов
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаказыКлиентов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыКлиентов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	НачалоПериода(&Период, День)            КАК Период,
	|	&ЗаказПереработчику                     КАК ЗаказКлиента,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.КодСтроки                 КАК КодСтроки,
	|	ТабличнаяЧасть.Склад                     КАК Склад,
	|	ТабличнаяЧасть.Количество                КАК Заказано,
	|	0                                       КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &ПроизводствоНаСтороне
	|	И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|	И ТабличнаяЧасть.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки              КАК Период,
	|	&ЗаказПереработчику                     КАК ЗаказКлиента,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.КодСтроки                 КАК КодСтроки,
	|	ТабличнаяЧасть.Склад                     КАК Склад,
	|	0                                       КАК Заказано,
	|	ТабличнаяЧасть.Количество                КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &ПроизводствоНаСтороне
	|	И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаказыПоставщикам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыПоставщикам";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                            КАК ВидДвижения,
	|	&Период                                                           КАК Период,
	|	&ЗаказПереработчику                                               КАК ЗаказПоставщику,
	|	ТабличнаяЧасть.Номенклатура                                        КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                                      КАК Характеристика,
	|	ТабличнаяЧасть.КодСтроки                                           КАК КодСтроки,
	|	ТабличнаяЧасть.Получатель                                          КАК Склад,
	|	ВЫБОР КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТабличнаяЧасть.Количество
	|	КОНЕЦ                                                             КАК КОформлению,
	|	ТабличнаяЧасть.Количество                                          КАК Заказано
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &ПроизводствоНаСтороне
	|	И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                            КАК ВидДвижения,
	|	&Период                                                           КАК Период,
	|	&ЗаказПереработчику                                               КАК ЗаказПоставщику,
	|	ТабличнаяЧасть.Номенклатура                                        КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                                      КАК Характеристика,
	|	ТабличнаяЧасть.КодСтроки                                           КАК КодСтроки,
	|	ТабличнаяЧасть.Получатель                                          КАК Склад,
	|	ВЫБОР КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТабличнаяЧасть.Количество
	|	КОНЕЦ                                                             КАК КОформлению,
	|	ТабличнаяЧасть.Количество                                          КАК Заказано
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &ПроизводствоНаСтороне
	|	И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|	И НЕ ТабличнаяЧасть.Отменено";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.ДатаПоступления														КАК Период,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов 
		|				И ТабличнаяЧасть.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|			ТОГДА ВЫБОР
		|					КОГДА ТабличнаяЧасть.СтатьяРасходов.ВидЦенностиНДС В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
		|					КОГДА ТабличнаяЧасть.СтатьяРасходов.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
		|				КОНЕЦ
		|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|				И ТабличнаяЧасть.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
		|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
		|	КОНЕЦ																				КАК ХозяйственнаяОперация,
		|	&Организация																		КАК Организация,
		|	ТабличнаяЧасть.Подразделение														КАК Подразделение,
		|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры											КАК АналитикаУчетаНоменклатуры,
		|	&Подразделение																		КАК Склад,
		|	ТабличнаяЧасть.ВидЗапасов															КАК ВидЗапасов,
		|	ТабличнаяЧасть.ВидЗапасов.ТипЗапасов													КАК ТипЗапасов,
		|	ТабличнаяЧасть.СтатьяРасходов														КАК СтатьяДоходовРасходов,
		|	ТабличнаяЧасть.АналитикаРасходов														КАК АналитикаРасходов,
		|	ТабличнаяЧасть.АналитикаАктивовПассивов												КАК АналитикаАктивовПассивов,
		|	ТабличнаяЧасть.Количество															КАК Количество,
		|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))	КАК Стоимость,
		|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(31,2))	КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(31,2))	КАК СтоимостьРегл,
		|	ВЫБОР
		|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
		|			ТОГДА ТабличнаяЧасть.ВидЗапасов
		|		ИНАЧЕ ТабличнаяЧасть.Номенклатура
		|	КОНЕЦ																				КАК ИсточникГФУНоменклатуры
		|ИЗ
		|	ВтВидыЗапасов КАК ТабличнаяЧасть
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
		|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПоступления, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
		|ГДЕ
		|	ТабличнаяЧасть.СписатьНаРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ИдентификаторМетаданных			КАК ТипСсылки,
	|	&Организация						КАК Организация,
	|	Подразделения.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|	&Партнер							КАК Партнер,
	|	НЕОПРЕДЕЛЕНО						КАК Контрагент,
	|	&Договор							КАК Договор,
	|	&НаправлениеДеятельности			КАК НаправлениеДеятельности,
	|	Подразделения.ДополнительнаяЗапись	КАК ДополнительнаяЗапись,
	|	&Подразделение						КАК Подразделение,
	|	Подразделения.Подразделение			КАК МестоХранения,
	|	Подразделения.Дата					КАК ДатаДокументаИБ,
	|	&Ссылка								КАК Ссылка,
	|	&ИдентификаторРаспоряжения			КАК РазделительЗаписи,
	|	&Номер								КАК НомерДокументаИБ,
	|	&Статус								КАК Статус,
	|	&Ответственный						КАК Ответственный,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА (100))		КАК Дополнительно,
	|	ВЫРАЗИТЬ(&Комментарий КАК СТРОКА (100))	КАК Комментарий,
	|	&Проведен							КАК Проведен,
	|	&ПометкаУдаления					КАК ПометкаУдаления,
	|	Подразделения.Дата					КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать						КАК НомерПервичногоДокумента,
	|	0									КАК Сумма,
	|	&Валюта								КАК Валюта,
	|	Подразделения.Дата   КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОснований КАК Подразделения
	|		ПО ТабличнаяЧасть.Ссылка = Подразделения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                   КАК НомерСтроки,
	|	ТабличнаяЧасть.ДатаПроизводства              КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ ТабличнаяЧасть.Получатель
	|	КОНЕЦ                                        КАК Подразделение,
	|	ТабличнаяЧасть.СтатьяРасходов                КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов             КАК АналитикаРасходов,
	|	&НаправлениеДеятельности                     КАК НаправлениеДеятельности,
	|	&ВыпускПодДеятельность                       КАК ВидДеятельностиНДС,
	|
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31,2))  КАК СуммаБезНДСУпр,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаСНДСРегл,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК СуммаБезНДСРегл,
	|	0                                            КАК ПостояннаяРазница,
	|	0                                            КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПроизводства, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И ТабличнаяЧасть.Произведено
	|
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|	И ТабличнаяЧасть.СписатьНаРасходы
	|
	|	И ТабличнаяЧасть.СтатьяРасходов Ссылка ПланВидовХарактеристик.СтатьиРасходов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеПроизводственныхПроцессов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеПроизводственныхПроцессов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
		// Обеспечение потребности в производстве
		"ВЫБРАТЬ
		|	&Период                                КАК Период,
		|
		|	&Распоряжение                          КАК Распоряжение,
		|
		|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
		|
		|	&Спецификация                          КАК Спецификация,
		|
		|	ТабличнаяЧасть.Назначение              КАК Назначение,
		|
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(&Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется
		|			ТОГДА ТабличнаяЧасть.ЭтапПотребитель
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	КОНЕЦ                                  КАК Этап,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
		|		ТабличнаяЧасть.Получатель
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	КОНЕЦ КАК Склад,
		|
		|	ВЫБОР 
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ВЫБОР
		|					КОГДА ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|						ТОГДА &Подразделение
		|					ИНАЧЕ ТабличнаяЧасть.Получатель
		|				  КОНЕЦ
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ТОГДА ТабличнаяЧасть.Получатель
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|	КОНЕЦ КАК Подразделение,
		|
		|   ТабличнаяЧасть.СписатьНаРасходы        КАК СписатьНаРасходы,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.СтатьяРасходов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                  КАК СтатьяРасходов,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.АналитикаРасходов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                  КАК АналитикаРасходов,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.АналитикаАктивовПассивов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                  КАК АналитикаАктивовПассивов,
		|
		|	0                                      КАК Требуется,
		|
		|	ВЫБОР КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован)) ТОГДА
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Запланировано,
		|
		|	ВЫБОР
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению) ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК ПереданоКПроизводству,
		|
		|	ВЫБОР 
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат)
		|				И НЕ ТабличнаяЧасть.Произведено 
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Производится,
		|
		|	ВЫБОР 
		|		КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
		|					И ТабличнаяЧасть.Произведено
		|				ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
		|					И &ПроизводствоНаСтороне
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Произведено,
		|
		|	0                                      КАК ТребуетсяРазборка,
		|	0                                      КАК ГотовКРазборке,
		|	0                                      КАК ЗапланированаРазборка
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И НЕ ТабличнаяЧасть.Отменено
		|	И НЕ ТабличнаяЧасть.ОбработатьПоСпецификации
		|	И НЕ ТабличнаяЧасть.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период                                КАК Период,
		|	&Распоряжение                          КАК Распоряжение,
		|
		|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
		|
		|	&Спецификация                          КАК Спецификация,
		|
		|	ТабличнаяЧасть.Назначение              КАК Назначение,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(&Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется
		|			ТОГДА ТабличнаяЧасть.ЭтапПотребитель
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	КОНЕЦ                                  КАК Этап,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
		|		ТабличнаяЧасть.Получатель
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	КОНЕЦ КАК Склад,
		|
		|	ВЫБОР 
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ВЫБОР
		|					КОГДА ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|						ТОГДА &Подразделение
		|					ИНАЧЕ ТабличнаяЧасть.Получатель
		|				  КОНЕЦ
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ТОГДА ТабличнаяЧасть.Получатель
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|	КОНЕЦ КАК Подразделение,
		|
		|   ТабличнаяЧасть.СписатьНаРасходы        КАК СписатьНаРасходы,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.СтатьяРасходов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                  КАК СтатьяРасходов,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.АналитикаРасходов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                  КАК АналитикаРасходов,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.АналитикаАктивовПассивов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                  КАК АналитикаАктивовПассивов,
		|
		|	0                                      КАК Требуется,
		|
		|	ВЫБОР КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован)) ТОГДА
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Запланировано,
		|
		|	ВЫБОР
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК ПереданоКПроизводству,
		|
		|	ВЫБОР 
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат)
		|				И НЕ ТабличнаяЧасть.Произведено 
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Производится,
		|
		|	ВЫБОР 
		|		КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) 
		|					И ТабличнаяЧасть.Произведено
		|				ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
		|					И &ПроизводствоНаСтороне
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Произведено,
		|
		|	0                                      КАК ТребуетсяРазборка,
		|	0                                      КАК ГотовКРазборке,
		|	0                                      КАК ЗапланированаРазборка
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И НЕ ТабличнаяЧасть.Отменено
		|	И НЕ ТабличнаяЧасть.ОбработатьПоСпецификации
		|	И НЕ ТабличнаяЧасть.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Формирование потребности в обеспечении производства
		|ВЫБРАТЬ
		|	&Период                                КАК Период,
		|	&Распоряжение                          КАК Распоряжение,
		|
		|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
		|
		|	ТабличнаяЧасть.Спецификация            КАК Спецификация,
		|
		|	ТабличнаяЧасть.Назначение              КАК Назначение,
		|
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(&Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется
		|			ТОГДА &Ссылка
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	КОНЕЦ                                  КАК Этап,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
		|		ТабличнаяЧасть.Склад
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	КОНЕЦ КАК Склад,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|		&Подразделение
		|	ИНАЧЕ
		|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|	КОНЕЦ КАК Подразделение,
		|
		|   ЛОЖЬ                                    КАК СписатьНаРасходы,
		|	НЕОПРЕДЕЛЕНО                            КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО                            КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО                            КАК АналитикаАктивовПассивов,
		|
		|	ТабличнаяЧасть.Количество              КАК Требуется,
		|
		|	0                                      КАК Запланировано,
		|	0                                      КАК ПереданоКПроизводству,
		|	0                                      КАК Производится,
		|	0                                      КАК Произведено,
		|
		|	0                                      КАК ТребуетсяРазборка,
		|	0                                      КАК ГотовКРазборке,
		|	0                                      КАК ЗапланированаРазборка
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И ТабличнаяЧасть.Производится И НЕ (&ТекстЗапросаРазбираемоеИзделие)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период                              КАК Период,
		|
		|	&Распоряжение                        КАК Распоряжение,
		|
		|	ТабличнаяЧасть.Номенклатура          КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика        КАК Характеристика,
		|
		|	&Спецификация                        КАК Спецификация,
		|
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Производится
		|			ТОГДА
		|				ТабличнаяЧасть.Назначение
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ                                  КАК Назначение,
		|
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Производится
		|				И ВЫРАЗИТЬ(&Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется
		|			ТОГДА
		|				&Ссылка
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	КОНЕЦ                                  КАК Этап,
		|
		|	ТабличнаяЧасть.Склад                                  КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)КАК Подразделение,
		|
		|   ЛОЖЬ                                                  КАК СписатьНаРасходы,
		|	НЕОПРЕДЕЛЕНО                                          КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО                                          КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО                                          КАК АналитикаАктивовПассивов,
		|
		|	0                                    КАК Требуется,
		|	0                                    КАК Запланировано,
		|	0                                    КАК ПереданоКПроизводству,
		|	0                                    КАК Производится,
		|	0                                    КАК Произведено,
		|	0                                    КАК ТребуетсяРазборка,
		|	0                                    КАК ГотовКРазборке,
		|	ТабличнаяЧасть.Количество            КАК ЗапланированаРазборка
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка И (&ТекстЗапросаРазбираемоеИзделие)
		|	И ТабличнаяЧасть.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Формирование потребности в разборке
		|ВЫБРАТЬ
		|	&Период                              КАК Период,
		|
		|	&Распоряжение                        КАК Распоряжение,
		|
		|	ТабличнаяЧасть.Номенклатура          КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика        КАК Характеристика,
		|
		|	ТабличнаяЧасть.Спецификация          КАК Спецификация,
		|
		|	ТабличнаяЧасть.Назначение            КАК Назначение,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(&Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется
		|			ТОГДА ТабличнаяЧасть.ЭтапПотребитель
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	КОНЕЦ                                КАК Этап,
		|
		|	ТабличнаяЧасть.Получатель                             КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)КАК Подразделение,
		|
		|   ТабличнаяЧасть.СписатьНаРасходы      КАК СписатьНаРасходы,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.СтатьяРасходов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                КАК СтатьяРасходов,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.АналитикаРасходов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                КАК АналитикаРасходов,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.АналитикаАктивовПассивов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                КАК АналитикаАктивовПассивов,
		|
		|	0                                    КАК Требуется,
		|
		|	0                                    КАК Запланировано,
		|	0                                    КАК ПереданоКПроизводству,
		|	0                                    КАК Производится,
		|	0                                    КАК Произведено,
		|
		|	ВЫБОР 
		|		КОГДА НЕ ТабличнаяЧасть.Произведено
		|			ТОГДА
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                КАК ТребуетсяРазборка,
		|	ВЫБОР 
		|		КОГДА ТабличнаяЧасть.Произведено
		|			ТОГДА
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                КАК ГотовКРазборке,
		|
		|	0                                    КАК ЗапланированаРазборка
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И ТабличнаяЧасть.ОбработатьПоСпецификации
		|	И НЕ ТабличнаяЧасть.Отменено
		|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
		|	И НЕ ТабличнаяЧасть.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И ТабличнаяЧасть.Ссылка.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Разборка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Период                              КАК Период,
		|
		|	&Распоряжение                        КАК Распоряжение,
		|
		|	ТабличнаяЧасть.Номенклатура          КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика        КАК Характеристика,
		|
		|	ТабличнаяЧасть.Спецификация          КАК Спецификация,
		|
		|	ТабличнаяЧасть.Назначение            КАК Назначение,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(&Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется
		|			ТОГДА ТабличнаяЧасть.ЭтапПотребитель
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	КОНЕЦ                                КАК Этап,
		|
		|	ТабличнаяЧасть.Получатель                             КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)КАК Подразделение,
		|
		|   ТабличнаяЧасть.СписатьНаРасходы      КАК СписатьНаРасходы,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.СтатьяРасходов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                КАК СтатьяРасходов,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.АналитикаРасходов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                КАК АналитикаРасходов,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.АналитикаАктивовПассивов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                КАК АналитикаАктивовПассивов,
		|
		|	0                                    КАК Требуется,
		|	0                                    КАК Запланировано,
		|	0                                    КАК ПереданоКПроизводству,
		|	0                                    КАК Производится,
		|	0                                    КАК Произведено,
		|
		|	ВЫБОР 
		|		КОГДА НЕ ТабличнаяЧасть.Произведено
		|			ТОГДА
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                КАК ТребуетсяРазборка,
		|	ВЫБОР 
		|		КОГДА ТабличнаяЧасть.Произведено
		|			ТОГДА
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                КАК ГотовКРазборке,
		|
		|	0                                    КАК ЗапланированаРазборка
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И ТабличнаяЧасть.ОбработатьПоСпецификации
		|	И НЕ ТабличнаяЧасть.Отменено
		|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
		|	И НЕ ТабличнаяЧасть.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И ТабличнаяЧасть.Ссылка.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Разборка)";
		
	// Разбираемое изделие в табличной части "Обеспечение материалами и работами" никак не идентифицировано (интерфейсное решение)
	//      - в обеспечении нет колонки <Разбираемое изделие>
	//      - в заказе на производство не указано под какое назначение приходит разбираемое изделие
	// (поиск выполняется по разбираемому изделию - основному изделию партии)
	ТекстЗапросаРазбираемоеИзделие = "
	|( ТабличнаяЧасть.Ссылка.ПартияПроизводства.ТипПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Разборка)
	|	И ТабличнаяЧасть.Номенклатура   = ТабличнаяЧасть.Ссылка.ПартияПроизводства.ОсновноеИзделиеНоменклатура
	|	И ТабличнаяЧасть.Характеристика = ТабличнаяЧасть.Ссылка.ПартияПроизводства.ОсновноеИзделиеХарактеристика
	|)";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРазбираемоеИзделие", ТекстЗапросаРазбираемоеИзделие);
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ОтложенноеПроведение

Процедура ИнициализироватьДанныеДокументаОтложенно(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализацииОтложенно(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаТоварыОрганизацийОтложенно(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваровОтложенно(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитентуОтложенно(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализацииОтложенно(Запрос, ДокументСсылка, ДополнительныеСвойства)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка                             КАК Ссылка,
	|	Реквизиты.Дата                               КАК Период,
	|	Реквизиты.Организация                        КАК Организация,
	|	Реквизиты.ВыпускПодДеятельность              КАК ВыпускПодДеятельность,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|	Реквизиты.Подразделение.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|	Реквизиты.ПартияПроизводства                 КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Реквизиты.ПартияПроизводства.Назначение.ВидДеятельностиНДС,ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Реквизиты.ПартияПроизводства.Назначение.ВидДеятельностиНДС
	|		ИНАЧЕ Реквизиты.ПартияПроизводства.ВидДеятельностиНДС
	|	КОНЕЦ										 КАК ВидДеятельностиНДСНЗП,
	|	Реквизиты.ПартияПроизводства.ГруппаПродукции КАК ГруппаПродукции,
	|	Реквизиты.ВариантПриемкиТоваров              КАК ВариантПриемкиТоваров,
	|	Реквизиты.ТипПроизводственногоПроцесса       КАК ТипПроизводственногоПроцесса,
	|	Реквизиты.Распоряжение                       КАК Распоряжение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ПустаяСсылкаНазначение",    Справочники.Назначения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПериодЗаполненияВидовЗапасовИСебестоимости", ДополнительныеСвойства.ПериодЗаполненияВидовЗапасовИСебестоимости);
	Запрос.УстановитьПараметр("АналитическийУчетПоГруппамПродукции", ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции"));
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",        ДополнительныеСвойства.ТаблицаВидыЗапасов);
	Запрос.УстановитьПараметр("РезервыТоваровОрганизаций", ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций);
	
	ЗаполнитьПараметрыРасчетаСебестоимости(Запрос, ДополнительныеСвойства);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаВидыЗапасов";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя       КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СтатьяКалькуляции          КАК СтатьяКалькуляции,
	|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
	|	ТаблицаВидыЗапасов.ДатаОтгрузки               КАК ДатаОтгрузки
	|ПОМЕСТИТЬ ВтТаблицаВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтВидыЗапасовОтложенно(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасовОтложенно";
	
	// Если установлен параметр ТаблицаВидыЗапасов, тогда данные выбираются из таблицы, иначе из движений документа.
	Если Запрос.Параметры.Свойство("ТаблицаВидыЗапасов") Тогда
		
		Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
			ТекстЗапросаТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
		КонецЕсли;
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
		|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя       КАК ВидЗапасовПолучателя,
		|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаВидыЗапасов.СтатьяКалькуляции          КАК СтатьяКалькуляции,
		|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
		|	ТаблицаВидыЗапасов.ДатаОтгрузки               КАК ДатаОтгрузки
		|ПОМЕСТИТЬ ВтВидыЗапасовОтложенно
		|ИЗ
		|	ВтТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// данные по работам выбираются из табличной части документа
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовПолучателя,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)   КАК НомерГТД,
		|	ДД.АналитикаУчетаНоменклатуры                 КАК АналитикаУчетаНоменклатуры,
		|	ДД.СтатьяКалькуляции                          КАК СтатьяКалькуляции,
		|	ДД.Количество                                 КАК Количество,
		|	ДД.ДатаРасхода                                КАК ДатаОтгрузки
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ДД
		|ГДЕ
		|	ДД.Ссылка = &Ссылка
		|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ 
		|		(&ПериодЗаполненияВидовЗапасовИСебестоимости <> ДатаВремя(1,1,1) И ДД.ДатаРасхода >= &ПериодЗаполненияВидовЗапасовИСебестоимости))
		|	И ДД.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|";
		
	Иначе
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Движения.ВидЗапасов                 КАК ВидЗапасов,
		|	Движения.КорВидЗапасов              КАК ВидЗапасовПолучателя,
		|	Движения.НомерГТД                   КАК НомерГТД,
		|	Движения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Аналитика.СтатьяКалькуляции         КАК СтатьяКалькуляции,
		|	Движения.Количество                 КАК Количество,
		|	Движения.Период                     КАК ДатаОтгрузки
		|ПОМЕСТИТЬ ВтВидыЗапасовОтложенно
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК Движения
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Движения.КорАналитикаУчетаНоменклатуры = Аналитика.Ссылка
		|ГДЕ
		|	Движения.Регистратор = &Ссылка
		|	И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
		|	И (&ПериодЗаполненияВидовЗапасовИСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ 
		|		(&ПериодЗаполненияВидовЗапасовИСебестоимости <> ДатаВремя(1,1,1) И Движения.Период >= &ПериодЗаполненияВидовЗапасовИСебестоимости))
		|	И &СохранятьОтложенныеДвижения
		|";
		
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийОтложенно(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасовОтложенно", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасовОтложенно(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// сохранение существующих движений за прошлые периоды и по другим операциям
	|ВЫБРАТЬ
	|	1                                              КАК Порядок,
	|	Движения.ВидДвижения                           КАК ВидДвижения,
	|	Движения.Период                                КАК Период,
	|	Движения.ОрганизацияОтгрузки                   КАК ОрганизацияОтгрузки,
	|	Движения.Организация                           КАК Организация,
	|	Движения.ВидЗапасов                            КАК ВидЗапасов,
	|	Движения.КорВидЗапасов                         КАК КорВидЗапасов,
	|	Движения.Номенклатура                          КАК Номенклатура,
	|	Движения.Характеристика                        КАК Характеристика,
	|	Движения.НомерГТД                              КАК НомерГТД,
	|	Движения.Количество                            КАК Количество,
	|	Движения.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	Движения.НалогообложениеНДС                    КАК НалогообложениеНДС,
	|	Движения.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	Движения.КорАналитикаУчетаНоменклатуры         КАК КорАналитикаУчетаНоменклатуры,
	|	Движения.СтатьяРасходов                        КАК СтатьяРасходов,
	|	Движения.АналитикаРасходов                     КАК АналитикаРасходов,
	|	Движения.АналитикаАктивовПассивов              КАК АналитикаАктивовПассивов,
	|	Движения.Первичное                             КАК Первичное,
	|	Движения.РасчетПартий                          КАК РасчетПартий
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК Движения
	|
	|ГДЕ
	|	Движения.Регистратор = &Ссылка
	|	И (Движения.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|		ИЛИ Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|			И Движения.Период < &ПериодЗаполненияВидовЗапасовИСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход материалов на производство
	|ВЫБРАТЬ
	|	2                                              КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)         КАК ВидДвижения,
	|	ВидыЗапасов.ДатаОтгрузки                       КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ВидыЗапасов.ВидЗапасов                         КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПолучателя               КАК КорВидЗапасов,
	|	Аналитика.Номенклатура                         КАК Номенклатура,
	|	Аналитика.Характеристика                       КАК Характеристика,
	|	ВидыЗапасов.НомерГТД                           КАК НомерГТД,
	|	ВидыЗапасов.Количество                         КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры         КАК АналитикаУчетаНоменклатуры,
	|	АналитикаПолучателя.КлючАналитики              КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	ЛОЖЬ                                           КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий
	|ИЗ
	|	ВтВидыЗапасовОтложенно КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаноменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаПолучателя
	|		ПО Аналитика.Номенклатура = АналитикаПолучателя.Номенклатура
	|		И Аналитика.Характеристика = АналитикаПолучателя.Характеристика
	|		И Аналитика.МестоХранения = АналитикаПолучателя.МестоХранения
	|		И Аналитика.Серия = АналитикаПолучателя.Серия
	|		И ВидыЗапасов.СтатьяКалькуляции = АналитикаПолучателя.СтатьяКалькуляции
	|		И Аналитика.Назначение = АналитикаПолучателя.Назначение
	|
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Порядок
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтСебестоимостьТоваровОтложенно(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСебестоимостьТоваровОтложенно";
	
	ТекстЗапроса = "
	// Расход собственного материала с производственных затрат на незавершенное производство.
	|ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ВидыЗапасов.ДатаОтгрузки                         КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаБезНазначения.КлючАналитики
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	// принятые на хранении с правом продажи на отдельном разделе учета
	|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                            КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ВидыЗапасов.Количество                           КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	0                                                КАК СтоимостьУпр,
	|	0                                                КАК СтоимостьЗабалансовая,
	|	0                                                КАК СтоимостьЗабалансоваяРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА АналитикаПолучателя.КлючАналитики
	|		ИНАЧЕ АналитикаПолучателяБезНазначения.КлючАналитики
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|	КОНЕЦ                                            КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	&ПартияПроизводства                              КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА НЕ &ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА &ГруппаПродукции
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорАналитикаФинансовогоУчета,
	|	&ВидДеятельностиНДСНЗП                           КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	НЕОПРЕДЕЛЕНО                                     КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВтСебестоимостьТоваровОтложенно
	|ИЗ
	|	ВтВидыЗапасовОтложенно КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.СтатьяКалькуляции = АналитикаБезНазначения.СтатьяКалькуляции
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаПолучателя
	|		ПО Аналитика.Номенклатура = АналитикаПолучателя.Номенклатура
	|		И Аналитика.Характеристика = АналитикаПолучателя.Характеристика
	|		И Аналитика.МестоХранения = АналитикаПолучателя.МестоХранения
	|		И Аналитика.Серия = АналитикаПолучателя.Серия
	|		И ВидыЗапасов.СтатьяКалькуляции = АналитикаПолучателя.СтатьяКалькуляции
	|		И Аналитика.Назначение = АналитикаПолучателя.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаПолучателяБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаПолучателяБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаПолучателяБезНазначения.Характеристика
	|		И Аналитика.МестоХранения = АналитикаПолучателяБезНазначения.МестоХранения
	|		И Аналитика.Серия = АналитикаПолучателяБезНазначения.Серия
	|		И ВидыЗапасов.СтатьяКалькуляции = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|		И &ПустаяСсылкаНазначение = АналитикаПолучателяБезНазначения.Назначение
	|ГДЕ
	|	ЕСТЬNULL(ВидыЗапасов.ВидЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход комиссионного материала с товаров принятых
	|ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ВидыЗапасов.ДатаОтгрузки                         КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаБезНазначения.КлючАналитики
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидЗапасов,
	|	ВидыЗапасов.Количество                           КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	0                                                КАК СтоимостьУпр,
	|	0                                                КАК СтоимостьЗабалансовая,
	|	0                                                КАК СтоимостьЗабалансоваяРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	ВЫБОР КОГДА ВидыЗапасов.ВидЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетовСКомитентом.КлючАналитики
	|	КОНЕЦ                                            КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	НЕОПРЕДЕЛЕНО                                     КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасовОтложенно КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.СтатьяКалькуляции = АналитикаБезНазначения.СтатьяКалькуляции
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовСКомитентом
	|		ПО АналитикаРасчетовСКомитентом.Организация = &Организация
	|		И АналитикаРасчетовСКомитентом.Партнер = ВидыЗапасов.ВидЗапасов.ВладелецТовара
	|		И АналитикаРасчетовСКомитентом.Контрагент = ВидыЗапасов.ВидЗапасов.Контрагент
	|		И АналитикаРасчетовСКомитентом.Договор = ВидыЗапасов.ВидЗапасов.Договор
	|		И АналитикаРасчетовСКомитентом.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = ВидыЗапасов.ВидЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = ВидыЗапасов.ВидЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход выкупленного комиссионного материала
	|ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ВидыЗапасов.ДатаОтгрузки                         КАК Период,
	|	АналитикаКомитента.КлючАналитики                 КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ВидыЗапасов.Количество                           КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	0                                                КАК СтоимостьУпр,
	|	0                                                КАК СтоимостьЗабалансовая,
	|	0                                                КАК СтоимостьЗабалансоваяРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА АналитикаПолучателя.КлючАналитики
	|		ИНАЧЕ АналитикаПолучателяБезНазначения.КлючАналитики
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство) КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	&ПартияПроизводства                              КАК КорПартия,
	|	ВЫБОР КОГДА ВидыЗапасов.ВидЗапасов.ВладелецТовара ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетовСКомитентом.КлючАналитики
	|	КОНЕЦ                                            КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА НЕ &ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА &ГруппаПродукции
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорАналитикаФинансовогоУчета,
	|	&ВидДеятельностиНДСНЗП                           КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	НЕОПРЕДЕЛЕНО                                     КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасовОтложенно КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|	ПО
	|		Аналитика.Номенклатура = АналитикаКомитента.Номенклатура
	|		И Аналитика.Характеристика = АналитикаКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомитента.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомитента.Серия
	|		И ВидыЗапасов.ВидЗапасов.ВладелецТовара = АналитикаКомитента.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаКомитента.СтатьяКалькуляции
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаПолучателя
	|		ПО Аналитика.Номенклатура = АналитикаПолучателя.Номенклатура
	|		И Аналитика.Характеристика = АналитикаПолучателя.Характеристика
	|		И Аналитика.МестоХранения = АналитикаПолучателя.МестоХранения
	|		И Аналитика.Серия = АналитикаПолучателя.Серия
	|		И ВидыЗапасов.СтатьяКалькуляции = АналитикаПолучателя.СтатьяКалькуляции
	|		И Аналитика.Назначение = АналитикаПолучателя.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаПолучателяБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаПолучателяБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаПолучателяБезНазначения.Характеристика
	|		И Аналитика.МестоХранения = АналитикаПолучателяБезНазначения.МестоХранения
	|		И Аналитика.Серия = АналитикаПолучателяБезНазначения.Серия
	|		И ВидыЗапасов.СтатьяКалькуляции = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|		И &ПустаяСсылкаНазначение = АналитикаПолучателяБезНазначения.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовСКомитентом
	|		ПО АналитикаРасчетовСКомитентом.Организация = &Организация
	|		И АналитикаРасчетовСКомитентом.Партнер = ВидыЗапасов.ВидЗапасов.ВладелецТовара
	|		И АналитикаРасчетовСКомитентом.Контрагент = ВидыЗапасов.ВидЗапасов.Контрагент
	|		И АналитикаРасчетовСКомитентом.Договор = ВидыЗапасов.ВидЗапасов.Договор
	|		И АналитикаРасчетовСКомитентом.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = ВидыЗапасов.ВидЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = ВидыЗапасов.ВидЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход материала на незавершенное производство
	|ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ВидыЗапасов.ДатаОтгрузки                         КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА АналитикаПолучателя.КлючАналитики
	|		ИНАЧЕ АналитикаПолучателяБезНазначения.КлючАналитики
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|	КОНЕЦ                                            КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидЗапасов,
	|	ВидыЗапасов.Количество                           КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	0                                                КАК СтоимостьУпр,
	|	0                                                КАК СтоимостьЗабалансовая,
	|	0                                                КАК СтоимостьЗабалансоваяРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	&ПартияПроизводства                              КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА НЕ &ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА &ГруппаПродукции
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК АналитикаФинансовогоУчета,
	|	&ВидДеятельностиНДСНЗП                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи,
	|	НЕОПРЕДЕЛЕНО                                     КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасовОтложенно КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаПолучателя
	|		ПО Аналитика.Номенклатура = АналитикаПолучателя.Номенклатура
	|		И Аналитика.Характеристика = АналитикаПолучателя.Характеристика
	|		И Аналитика.МестоХранения = АналитикаПолучателя.МестоХранения
	|		И Аналитика.Серия = АналитикаПолучателя.Серия
	|		И ВидыЗапасов.СтатьяКалькуляции = АналитикаПолучателя.СтатьяКалькуляции
	|		И Аналитика.Назначение = АналитикаПолучателя.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаПолучателяБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаПолучателяБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаПолучателяБезНазначения.Характеристика
	|		И Аналитика.МестоХранения = АналитикаПолучателяБезНазначения.МестоХранения
	|		И Аналитика.Серия = АналитикаПолучателяБезНазначения.Серия
	|		И ВидыЗапасов.СтатьяКалькуляции = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|		И &ПустаяСсылкаНазначение = АналитикаПолучателяБезНазначения.Назначение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваровОтложенно(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасовОтложенно", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасовОтложенно(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСебестоимостьТоваровОтложенно", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСебестоимостьТоваровОтложенно(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	2                                                КАК Порядок,
	|	0                                                КАК НомерСтрокиДокумента,
	|	ВидыЗапасов.ВидДвижения                          КАК ВидДвижения,
	|	ВидыЗапасов.Период                               КАК Период,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры           КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Организация                          КАК Организация,
	|	ВидыЗапасов.РазделУчета                          КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасов                           КАК ВидЗапасов,
	|	ВидыЗапасов.КорВидЗапасов                        КАК КорВидЗапасов,
	|	ВидыЗапасов.Количество                           КАК Количество,
	|	ВидыЗапасов.Стоимость                            КАК Стоимость,
	|	ВидыЗапасов.СтоимостьБезНДС                      КАК СтоимостьБезНДС,
	|	ВидыЗапасов.СтоимостьРегл                        КАК СтоимостьРегл,
	|	ВидыЗапасов.СтоимостьУпр                         КАК СтоимостьУпр,
	|	ВидыЗапасов.ХозяйственнаяОперация                КАК ХозяйственнаяОперация,
	|	ВидыЗапасов.КорАналитикаУчетаНоменклатуры        КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.КорРазделУчета                       КАК КорРазделУчета,
	|	ВидыЗапасов.Подразделение                        КАК Подразделение,
	|	ВидыЗапасов.ГруппаПродукции                      КАК ГруппаПродукции,
	|	ВидыЗапасов.СтатьяКалькуляции                    КАК СтатьяКалькуляции,
	|	ВидыЗапасов.СтатьяРасходовСписания               КАК СтатьяРасходовСписания,
	|	ВидыЗапасов.СтатьяАктивовПассивов                КАК СтатьяАктивовПассивов,
	|	ВидыЗапасов.АналитикаРасходов                    КАК АналитикаРасходов,
	|	ВидыЗапасов.АналитикаАктивовПассивов             КАК АналитикаАктивовПассивов,
	|	ВидыЗапасов.Партия                               КАК Партия,
	|	ВидыЗапасов.КорПартия                            КАК КорПартия,
	|	ВидыЗапасов.АналитикаУчетаПартий                 КАК АналитикаУчетаПартий,
	|	ВидыЗапасов.АналитикаУчетаПоПартнерам            КАК АналитикаУчетаПоПартнерам,
	|	ВидыЗапасов.АналитикаФинансовогоУчета            КАК АналитикаФинансовогоУчета,
	|	ВидыЗапасов.ВидДеятельностиНДС                   КАК ВидДеятельностиНДС,
	|	ВидыЗапасов.КорАналитикаУчетаПартий              КАК КорАналитикаУчетаПартий,
	|	ВидыЗапасов.КорАналитикаФинансовогоУчета         КАК КорАналитикаФинансовогоУчета,
	|	ВидыЗапасов.КорВидДеятельностиНДС                КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ТипЗаписи                            КАК ТипЗаписи,
	|	ВидыЗапасов.ИдентификаторСтроки                  КАК ИдентификаторСтроки
	|ИЗ
	|	ВтСебестоимостьТоваровОтложенно КАК ВидыЗапасов
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Порядок";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитентуОтложенно(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиНоменклатурыОтложенно(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасовОтложенно", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасовОтложенно(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Движения.ВидДвижения                           КАК ВидДвижения,
	|	Движения.Период                                КАК Период,
	|	Движения.ВидЗапасов                            КАК ВидЗапасов,
	|	Движения.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	Движения.Валюта                                КАК Валюта,
	|	Движения.НомерГТД                              КАК НомерГТД,
	|	Движения.Количество                            КАК Количество,
	|	Движения.СуммаВыручки                          КАК СуммаВыручки,
	|	Движения.КоличествоСписано                     КАК КоличествоСписано,
	|	Движения.Количество                            КАК КоличествоКОформлению,
	|	Движения.СуммаВыручки                          КАК СуммаВыручкиКОформлению,
	|	Движения.КоличествоСписано                     КАК КоличествоСписаноКОформлению,
	|	Движения.Номенклатура                          КАК Номенклатура,
	|	Движения.Характеристика                        КАК Характеристика,
	|	Движения.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	Движения.НалогообложениеНДС                    КАК НалогообложениеНДС
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК Движения
	|
	|ГДЕ
	|	Движения.Регистратор = &Ссылка
	|	И Движения.Период < &ПериодЗаполненияВидовЗапасовИСебестоимости
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	ВидыЗапасов.ДатаОтгрузки                  КАК Период,
	|	ВидыЗапасов.ВидЗапасов                    КАК ВидЗапасов,
	|	АналитикаКомитента.КлючАналитики          КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов.Валюта             КАК Валюта,
	|	ВидыЗапасов.НомерГТД                      КАК НомерГТД,
	|	0                                         КАК Количество,
	|	0                                         КАК СуммаВыручки,
	|	ВидыЗапасов.Количество                    КАК КоличествоСписано,
	|	0                                         КАК КоличествоКОформлению,
	|	0                                         КАК СуммаВыручкиКОформлению,
	|	ВидыЗапасов.Количество                    КАК КоличествоСписаноКОформлению,
	|	Аналитика.Номенклатура                    КАК Номенклатура,
	|	Аналитика.Характеристика                  КАК Характеристика,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                    КАК НалогообложениеНДС
	|ИЗ
	|	ВтВидыЗапасовОтложенно КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|	ПО
	|		Аналитика.Номенклатура = АналитикаКомитента.Номенклатура
	|		И Аналитика.Характеристика = АналитикаКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомитента.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомитента.Серия
	|		И ВидыЗапасов.ВидЗапасов.ВладелецТовара = АналитикаКомитента.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаКомитента.СтатьяКалькуляции
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаноменклатуры КАК АналитикаПолучателя
	|		ПО Аналитика.Номенклатура = АналитикаПолучателя.Номенклатура
	|		И Аналитика.Характеристика = АналитикаПолучателя.Характеристика
	|		И Аналитика.МестоХранения = АналитикаПолучателя.МестоХранения
	|		И Аналитика.Серия = АналитикаПолучателя.Серия
	|		И ВидыЗапасов.СтатьяКалькуляции = АналитикаПолучателя.СтатьяКалькуляции
	|		И Аналитика.Назначение = АналитикаПолучателя.Назначение
	|ГДЕ
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиНоменклатурыОтложенно(Запрос)

	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("КлючиАналитикиНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	Если Запрос.Параметры.Свойство("ТаблицаВидыЗапасов") Тогда
		
		ЗапросАналитики = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
		|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
		|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаВидыЗапасов.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	ТаблицаВидыЗапасов.Количество КАК Количество,
		|	ТаблицаВидыЗапасов.ДатаОтгрузки КАК ДатаОтгрузки
		|ПОМЕСТИТЬ ВтТаблицаВидыЗапасов
		|ИЗ
		|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВидыЗапасов.ВладелецТовара КАК Склад,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|ИЗ
		|	ВтТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ТаблицаВидыЗапасов.ВидЗапасов = ВидыЗапасов.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РСАналитикаУчетаНоменклатуры
		|		ПО (РСАналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиУчетаНоменклатуры.Номенклатура)
		|			И (РСАналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиУчетаНоменклатуры.Характеристика)
		|			И (РСАналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|			И (РСАналитикаУчетаНоменклатуры.МестоХранения = ВидыЗапасов.ВладелецТовара)
		|			И (РСАналитикаУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
		|			И (РСАналитикаУчетаНоменклатуры.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка))
		|ГДЕ
		|	РСАналитикаУчетаНоменклатуры.Номенклатура ЕСТЬ NULL
		|	И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)");
		
		ЗапросАналитики.УстановитьПараметр("ТаблицаВидыЗапасов", Запрос.Параметры.ТаблицаВидыЗапасов);
		
	Иначе
		
		ЗапросАналитики = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВидыЗапасов.ВладелецТовара КАК Склад,
		|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ТоварыОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РСАналитикаУчетаНоменклатуры
		|		ПО (РСАналитикаУчетаНоменклатуры.Номенклатура = КлючиАналитикиУчетаНоменклатуры.Номенклатура)
		|			И (РСАналитикаУчетаНоменклатуры.Характеристика = КлючиАналитикиУчетаНоменклатуры.Характеристика)
		|			И (РСАналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|			И (РСАналитикаУчетаНоменклатуры.МестоХранения = ВидыЗапасов.ВладелецТовара)
		|			И (РСАналитикаУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
		|			И (РСАналитикаУчетаНоменклатуры.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка))
		|ГДЕ
		|	РСАналитикаУчетаНоменклатуры.Номенклатура ЕСТЬ NULL
		|	И ТоварыОрганизаций.Регистратор = &Ссылка
		|	И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)");
		
		ЗапросАналитики.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
		
	КонецЕсли;
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;

	Запрос.УстановитьПараметр("КлючиАналитикиНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеРегламентированныйУчет

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат ЭтапПроизводства2_2Локализация.ТекстОтраженияВРеглУчете();

КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат ЭтапПроизводства2_2Локализация.ТекстЗапросаВТОтраженияВРеглУчете();

КонецФункции

#КонецОбласти

#Область ПакетноеФормированиеДвижений

Процедура ЗаполнитьОбеспечениеИОтразитьДвиженияПоЭтапам(Этапы, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения, НеНовыеЭтапы, РассчитыватьИзменения = Истина)
	
	Параметры = ПараметрыПакетногоФормированияДвижений(Этапы);
	
	ОчередьОбработки = Параметры.ОчередьОбработки;
	Запрос = Параметры.Запрос;
	ПорядокРегистров = Параметры.ПорядокРегистров;
	
	ЭтапыПонизитьСтатус = Новый Массив;
	
	ПолучитьДанныеИСформироватьДвиженияВПакетномРежиме(
		ОчередьОбработки,
		Запрос,
		ПорядокРегистров,
		ЭтапыПонизитьСтатус,
		СтрокиДляЗаполненияОбеспечения,
		ВариантыОбеспечения,
		НеНовыеЭтапы,
		РассчитыватьИзменения);
	
	Если ЭтапыПонизитьСтатус.Количество() > 0 Тогда
		
		УстановитьЭтапамСтатусФормируется(ЭтапыПонизитьСтатус);
		
		ПолучитьДанныеИСформироватьДвиженияВПакетномРежиме(
			ЭтапыПонизитьСтатус,
			Запрос,
			ПорядокРегистров,
			Новый Массив,
			Новый ТаблицаЗначений,
			ВариантыОбеспечения,
			НеНовыеЭтапы,
			РассчитыватьИзменения);
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыПакетногоФормированияДвижений(Этапы)
	
	Результат = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЗаполнитьПараметрыИнициализации(Запрос);
	
	ОчередьОбработки = ОчередьЭтаповДляПакетногоФормированияДвижений(Запрос, Этапы);
	Результат.Вставить("ОчередьОбработки", ОчередьОбработки);
	
	ПорядокРегистров = Неопределено;
	Запрос.Текст = ТекстЗапросаДляПакетногоФормированияДвижений(Запрос, ПорядокРегистров);
	
	Результат.Вставить("Запрос", Запрос);
	Результат.Вставить("ПорядокРегистров", ПорядокРегистров);
	
	Возврат Результат;
	
КонецФункции

Функция ОчередьЭтаповДляПакетногоФормированияДвижений(Запрос, Этапы)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормативныйГрафикЭтаповПроизводства.ЭтапПроизводства КАК Ссылка,
	|	НормативныйГрафикЭтаповПроизводства.ДлительностьДоЗапуска КАК Очередь
	|ПОМЕСТИТЬ ВТОчередьОбработки
	|ИЗ
	|	РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафикЭтаповПроизводства
	|ГДЕ
	|	НормативныйГрафикЭтаповПроизводства.ЭтапПроизводства В(&Ссылки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОчередьОбработки.Ссылка КАК Ссылка,
	|	ВТОчередьОбработки.Очередь КАК Очередь
	|ИЗ
	|	ВТОчередьОбработки КАК ВТОчередьОбработки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Очередь,
	|	Ссылка";
	
	Запрос.УстановитьПараметр("Ссылки", Этапы);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ТекстЗапросаДляПакетногоФормированияДвижений(Запрос, ПорядокРегистров)
	
	ТекстыЗапросов = Новый Массив;
	ПорядокРегистров = Новый Массив;
	
	СписокТекстов = ТекстыЗапросаДляФормированияДвижений(
		Запрос,
		РегистрыДляПакетногоФормированияДвижений());
	
	Для каждого Элемент Из СписокТекстов Цикл
		
		Если ПустаяСтрока(Элемент.Представление) Тогда
			ТекстЗапроса = Элемент.Значение;
		Иначе
			ТекстЗапроса = СтрШаблон("// %1%2%3", Элемент.Представление, Символы.ПС, Элемент.Значение);
		КонецЕсли;
		АдаптироватьТекстЗапросаДляПакетногоФормированияДвижений(ТекстЗапроса);
		
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		ПорядокРегистров.Добавить(Элемент.Представление);
		
	КонецЦикла;
	Результат = СтрСоединить(ТекстыЗапросов,
		";
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|");
	ЗаменитьПараметрыВАдаптируемомТекстеЗапроса(Результат);
	
	Возврат Результат;
	
КонецФункции

Функция РегистрыДляПакетногоФормированияДвижений()
	
	Результат = Новый Структура;
		
	Результат.Вставить("ГрафикОтгрузкиТоваров");
	Результат.Вставить("ЗаказыКлиентов");
	Результат.Вставить("ЗаказыМатериаловВПроизводство");
	Результат.Вставить("ЗаказыПоставщикам");
	Результат.Вставить("ДвиженияСерийТоваров");
	Результат.Вставить("ДвижениеТоваров");
	Результат.Вставить("ДоступностьВидовРабочихЦентров");
	Результат.Вставить("ОбеспечениеЗаказов");
	Результат.Вставить("ОбеспечениеЗаказовРаботами");
	Результат.Вставить("СвободныеОстатки");
	Результат.Вставить("ОбеспечениеПроизводственныхПроцессов");
	Результат.Вставить("РаспоряженияНаПередачуИзПроизводства");
	Результат.Вставить("ТоварыКОтгрузке");
	Результат.Вставить("ТоварыКПоступлению");
	Результат.Вставить("ТоварыНаСкладах");
	
	Возврат Результат;
	
КонецФункции

Процедура АдаптироватьТекстЗапросаДляПакетногоФормированияДвижений(ТекстЗапроса)
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"ВЫБРАТЬ",
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка КАК Ссылка,
		|	ОчередьОбработки.Очередь КАК Очередь,");
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"СГРУППИРОВАТЬ ПО",
		"СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.Ссылка,
		|	ОчередьОбработки.Очередь,");
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"КАК ТабличнаяЧасть",
		"КАК ТабличнаяЧасть
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОчередьОбработки КАК ОчередьОбработки
		|	ПО ТабличнаяЧасть.Ссылка = ОчередьОбработки.Ссылка
		|");
	
	ТекстЗапроса = ТекстЗапроса + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Очередь,
		|	Ссылка";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"ТабличнаяЧасть.Ссылка = &Ссылка",
		"ТабличнаяЧасть.Ссылка В (&Ссылки)");
		
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&НакладнаяЯвляетсяРаспоряжением",
		"ТабличнаяЧасть.Ссылка.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)");
	
КонецПроцедуры

Процедура ЗаменитьПараметрыВАдаптируемомТекстеЗапроса(ТекстЗапроса, ОсновнаяТаблица = "ТабличнаяЧасть.Ссылка")
	
	Перем Курсор, Параметр;
	
	СтандартныеРеквизиты = Новый Структура(
		"Номер,
		|Дата,
		|Проведен,
		|ПометкаУдаления");
	РеквизитыДокумента = Документы.ЭтапПроизводства2_2.ПустаяСсылка().Метаданные().Реквизиты;
	
	ПереопределениеРасчетаПараметров = ПереопределениеРасчетаПараметров(ОсновнаяТаблица);
	
	Пока ПроизводствоСервер.СледующийПараметрЗапроса(ТекстЗапроса, Параметр, Курсор) Цикл
		
		ТекстЗамены = "";
		
		Если Параметр = "Ссылка" Тогда
			
			ТекстЗамены = ОсновнаяТаблица;
			
		ИначеЕсли Параметр = "Период" Тогда
			
			ТекстЗамены = ОсновнаяТаблица + ".Дата";
			
		ИначеЕсли РеквизитыДокумента.Найти(Параметр) <> Неопределено
			ИЛИ СтандартныеРеквизиты.Свойство(Параметр) Тогда
			
			ТекстЗамены = ОсновнаяТаблица + "." + Параметр;
			
		ИначеЕсли ПереопределениеРасчетаПараметров.Свойство(Параметр) Тогда
			
			ТекстЗамены = ПереопределениеРасчетаПараметров[Параметр];
			
		КонецЕсли;
		
		Если Не ПустаяСтрока(ТекстЗамены) Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&" + Параметр, ТекстЗамены);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЭтапамСтатусФормируется(Этапы)
	
	НачатьТранзакцию();
	
	Попытка
		
		ЗаблокироватьЭтапы(Этапы);
		
		Для каждого Этап Из Этапы Цикл
			
			ДокументОбъект = Этап.ПолучитьОбъект();
			
			ДокументОбъект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Формируется;
			
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Этап производства.Пакетное формирование движений';
				|en = 'Production stage. Package movement generation'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ПолучитьДанныеИСформироватьДвиженияВПакетномРежиме(
															Этапы,
															Запрос,
															ПорядокРегистров,
															ЭтапыПонизитьСтатус,
															СтрокиДляЗаполненияОбеспечения,
															ВариантыОбеспечения,
															НеНовыеЭтапы,
															РассчитыватьИзменения)
	
	ПартияОбработки = Новый Массив;
	РазмерПартииОбработки = 1000;
	
	МаксИндекс = Этапы.ВГраница();
	
	Для Индекс = 0 По МаксИндекс Цикл
		
		ПартияОбработки.Добавить(Этапы[Индекс]);
		
		Если Индекс = МаксИндекс ИЛИ ПартияОбработки.Количество() = РазмерПартииОбработки Тогда
			
			ЗаполнитьПараметрыОбеспеченияВПакетномРежиме(ПартияОбработки, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения);
			
			СформироватьДвиженияВПакетномРежиме(Запрос, ПорядокРегистров, ПартияОбработки, ЭтапыПонизитьСтатус, НеНовыеЭтапы, РассчитыватьИзменения);
			
			ПартияОбработки.Очистить();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыОбеспеченияВПакетномРежиме(Этапы, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения)
	
	Если СтрокиДляЗаполненияОбеспечения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		ТаблицаОбеспечение = ПараметрыОбеспеченияЭтапов(Этапы, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения);
		Если ТаблицаОбеспечение = Неопределено Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Ссылка, КодСтроки");
		СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок");
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		ПараметрыОбеспечения = "ВариантОбеспечения, Количество, ДатаОтгрузки";
		
		Для Индекс = 0 По Этапы.ВГраница() Цикл
			
			ДокументСсылка = Этапы[Индекс];
			СтруктураПоиска.Ссылка = ДокументСсылка;
			
			НайденнаяСтрока = СтрокиДляЗаполненияОбеспечения.Найти(ДокументСсылка, "ЭтапПроизводства");
			Если НайденнаяСтрока = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаблокироватьЭтап(ДокументСсылка);
			ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
			
			ПараметрыЗаполненияНазначений = ОбеспечениеПроизводстваКлиентСервер.
				ПараметрыДействияПроверитьЗаполнитьНазначениеОбеспеченияВЭтапеПроизводства(ДокументОбъект);
			
			Для каждого КодСтроки Из НайденнаяСтрока.КодыСтрок Цикл
				
				ИсходнаяСтрока = ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Найти(КодСтроки, "КодСтроки");
				
				СтруктураПоиска.КодСтроки = КодСтроки;
				СтрокиОбеспечение = ТаблицаОбеспечение.НайтиСтроки(СтруктураПоиска);
				
				Если СтрокиОбеспечение.Количество() = 1 Тогда
					
					ЗаполнитьЗначенияСвойств(ИсходнаяСтрока, СтрокиОбеспечение[0], ПараметрыОбеспечения);
					ЗаполнитьДатуОтгрузки(ДокументОбъект, ИсходнаяСтрока, СтрокиОбеспечение[0]);
					ОбеспечениеПроизводстваКлиентСервер.ЗаполнитьНазначениеОбеспеченияВСтрокеЭтапаПроизводства(
						ИсходнаяСтрока,
						ПараметрыЗаполненияНазначений);
					
				Иначе
					
					Для каждого ДанныеОбеспечения Из СтрокиОбеспечение Цикл
						
						НоваяСтрока = ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходнаяСтрока,, "КодСтроки");
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеОбеспечения, ПараметрыОбеспечения);
						ЗаполнитьДатуОтгрузки(ДокументОбъект, НоваяСтрока, ДанныеОбеспечения);
						ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
						ОбеспечениеПроизводстваКлиентСервер.ЗаполнитьНазначениеОбеспеченияВСтрокеЭтапаПроизводства(
							НоваяСтрока,
							ПараметрыЗаполненияНазначений);
						
					КонецЦикла;
					
					ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Удалить(ИсходнаяСтрока);
					
				КонецЕсли;
				
			КонецЦикла;
			
			ДокументОбъект.ЗаполнитьМаксимальнуюДатуОтгрузки();
			
			ЗаказыСервер.УстановитьКлючВСтрокахТабличнойЧасти(
				ДокументОбъект, "ОбеспечениеМатериаламиИРаботами", "МаксимальныйКодСтрокиОбеспечение");
			
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Этап производства.Пакетное заполнение обеспечения';
				|en = 'Production stage. Package fill in supply'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьДатуОтгрузки(Объект, СтрокаМатериалы, СтрокаОбеспечения)
	
	ЖелаемаяДата = Объект.ЖелаемаяДатаОбеспечения;
	
	УправлениеПроизводством.ЗаполнитьДатуОтгрузки(Объект, СтрокаМатериалы, СтрокаОбеспечения, ЖелаемаяДата);
	
	Если НЕ ЗначениеЗаполнено(СтрокаМатериалы.ДатаОтгрузки) Тогда
		
		СтрокаМатериалы.ДатаОтгрузки = Объект.ЖелаемаяДатаОбеспечения;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияВПакетномРежиме(Запрос, ПорядокРегистров, ПартияОбработки, ЭтапыПонизитьСтатус, НеНовыеЭтапы, РассчитыватьИзменения)
	
	ДанныеДляДвижений = Новый Структура();
	
	Запрос.УстановитьПараметр("Ссылки", ПартияОбработки);
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеРегистров = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Индекс = 0 По ПорядокРегистров.ВГраница() Цикл
		Выборка = ДанныеРегистров[Индекс].Выбрать();
		Если Выборка.Следующий() Тогда
			ДанныеДляДвижений.Вставить(ПорядокРегистров[Индекс], Выборка);
		КонецЕсли;
	КонецЦикла;
	
	Для Индекс = 0 По ПартияОбработки.ВГраница() Цикл
		
		ДокументСсылка = ПартияОбработки[Индекс];
		
		ЕстьДанные = ФормироватьДвиженияЭтапаПакетно(ДокументСсылка, ДанныеДляДвижений);
		Если НЕ ЕстьДанные Тогда
			Продолжить;
		КонецЕсли;
		
		НачатьТранзакцию();
		Попытка
			
			Отказ = Ложь;
			ЗаблокироватьЭтап(ДокументСсылка);
			
			ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
			
			ДокументОбъект.УстановитьРежимПакетногоФормирования();
			
			ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
			ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
			ДополнительныеСвойства.Вставить("ЭтоНовый", НеНовыеЭтапы.Найти(ДокументСсылка) = Неопределено);
			
			ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(
				ДокументСсылка,
				ДополнительныеСвойства);
			
			Для каждого КлючИЗначение Из ДанныеДляДвижений Цикл
				
				Выборка = КлючИЗначение.Значение;
				Если Выборка = Неопределено ИЛИ НЕ Выборка.Ссылка = ДокументСсылка Тогда
					Продолжить;
				КонецЕсли;
				
				ИмяРегистра = КлючИЗначение.Ключ;
				ДвиженияПоРегистру = ДокументОбъект.Движения[ИмяРегистра];
				
				Пока Выборка.Ссылка = ДокументСсылка Цикл
					
					ЗаполнитьЗначенияСвойств(ДвиженияПоРегистру.Добавить(), Выборка);
					
					Если НЕ Выборка.Следующий() Тогда
						ДанныеДляДвижений.Вставить(КлючИЗначение.Ключ, Неопределено);
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
				ДвиженияПоРегистру.Записывать = Истина;
				
			КонецЦикла;
			
			ДокументОбъект.СформироватьСписокРегистровДляКонтроля();
			ДокументОбъект.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", РассчитыватьИзменения);
			
			УстановитьПривилегированныйРежим(Истина);
			
			ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ДокументОбъект);
			
			ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ДокументОбъект, Отказ);
			
			УстановитьПривилегированныйРежим(Ложь);
			
			Если Отказ Тогда
				
				Если ДокументОбъект.Статус <> Перечисления.СтатусыЭтаповПроизводства2_2.Формируется Тогда
					
					ОтменитьТранзакцию();
					ЭтапыПонизитьСтатус.Добавить(ДокументСсылка);
					Продолжить;
					
				Иначе
					
					ТекстИсключения = СтрШаблон(
						НСтр("ru = 'Не удалось провести этап № %1 от %2';
							|en = 'Cannot post stage No. %1 dated %2'"),
						ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.Номер, Истина, Ложь),
						Формат(ДокументОбъект.Дата, "ДЛФ=D"));
					
					ВызватьИсключение ТекстИсключения;
					
				КонецЕсли;
			    
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Пакетное формирование движений';
					|en = 'Production stage. Package movement generation'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ФормироватьДвиженияЭтапаПакетно(Этап, ДанныеДляДвижений)
	
	Результат = Ложь;
	
	Для каждого КлючИЗначение Из ДанныеДляДвижений Цикл
		
		Выборка = КлючИЗначение.Значение;
		
		Если НЕ Выборка = Неопределено
			И Выборка.Ссылка = Этап Тогда
			
			Результат = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПараметрыОбеспеченияЭтапов(Этапы, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Материалы.Ссылка                       КАК Ссылка,
	|	Материалы.Ссылка.Подразделение         КАК Подразделение,
	|	Материалы.НомерСтроки                  КАК НомерСтроки,
	|	Материалы.КодСтроки                    КАК КодСтроки,
	|	Материалы.Номенклатура                 КАК Номенклатура,
	|	Материалы.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	Материалы.Характеристика               КАК Характеристика,
	|	Материалы.Склад                        КАК Склад,
	// назначение передается всегда (для подбора обособленных остатков)
	|	ВЫБОР КОГДА Материалы.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА
	|		Материалы.Назначение
	|	ИНАЧЕ
	|		Материалы.Ссылка.НазначениеМатериалы
	|	КОНЕЦ                                  КАК Назначение,
	|	Материалы.Серия                        КАК Серия,
	|	Материалы.ВариантОбеспечения           КАК ВариантОбеспечения,
	|	Материалы.ДатаОтгрузки                 КАК ДатаОтгрузки,
	|	Материалы.Количество                   КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Материалы
	|ГДЕ
	|	Материалы.Ссылка В(&Этапы)
	|И
	|	НЕ Материалы.Производится");
	Запрос.УстановитьПараметр("Этапы", Этапы);
	
	СоставМатериалов = Запрос.Выполнить().Выгрузить();
	ОбщегоНазначенияУТ.ДобавитьИдентификаторСтрокВТаблицу(СоставМатериалов, "Идентификатор", "Число");
	
	СоставМатериалов.Индексы.Добавить("Ссылка, КодСтроки");
	СоставМатериалов.Индексы.Добавить("Идентификатор");
	
	МатериалыСОбособлением = ТаблицаДляПолученияПараметровОбеспечения();
	МатериалыБезОбособления = ТаблицаДляПолученияПараметровОбеспечения();
	
	СтруктураПоиска = Новый Структура("Ссылка, КодСтроки");
	
	Для Индекс = 0 По Этапы.ВГраница() Цикл
		
		Этап = Этапы[Индекс];
		СтруктураПоиска.Ссылка = Этап;
		
		НайденнаяСтрока = СтрокиДляЗаполненияОбеспечения.Найти(Этап, "ЭтапПроизводства");
		Если НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого КодСтроки Из НайденнаяСтрока.КодыСтрок Цикл
			
			СтруктураПоиска.КодСтроки = КодСтроки;
			НайденныеСтроки = СоставМатериалов.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныеСтроки.Количество() = 1 Тогда
				
				СтрокаМатериал = НайденныеСтроки[0];
				
				Если СтрокаМатериал.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно Тогда
					НоваяСтрока = МатериалыСОбособлением.Добавить();
				Иначе
					НоваяСтрока = МатериалыБезОбособления.Добавить();
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМатериал);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если МатериалыСОбособлением.Количество() > 0
		ИЛИ МатериалыБезОбособления.Количество() > 0 Тогда
		
		Результат = ПолучитьОбеспечениеПоМатериалам(
			МатериалыСОбособлением, МатериалыБезОбособления, ВариантыОбеспечения);
		
		Результат.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
		Результат.Колонки.Добавить("КодСтроки", Новый ОписаниеТипов("Число"));
		
		Для каждого Строка Из Результат Цикл
			
			НайденнаяСтрока = СоставМатериалов.Найти(Строка.Идентификатор, "Идентификатор");
			ЗаполнитьЗначенияСвойств(Строка, НайденнаяСтрока, "Ссылка, КодСтроки");
			
		КонецЦикла;
		
		Результат.Индексы.Добавить("Ссылка, КодСтроки");
		
	Иначе
		
		Результат = Неопределено;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ТаблицаДляПолученияПараметровОбеспечения()
	
	Результат = Новый ТаблицаЗначений;
	
	ПутиКДанным = ОбеспечениеСервер.ПутиКДаннымПоУмолчанию();
	Колонки = СтрРазделить(ПутиКДанным, ",");
	
	Для каждого Колонка Из Колонки Цикл
		Результат.Колонки.Добавить(СокрЛП(Колонка));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьОбеспечениеПоМатериалам(МатериалыСОбособлением, МатериалыБезОбособления, ВариантыОбеспечения)
	
	Если МатериалыСОбособлением.Количество() > 0 Тогда
		
		ОбеспечениеСОбособлением = ТаблицаЗаполнениеОбеспечения(
			МатериалыСОбособлением,
			ВариантыОбеспечения,
			Истина);
				
	Иначе
		ОбеспечениеСОбособлением = Неопределено;
	КонецЕсли;
	
	Если МатериалыБезОбособления.Количество() > 0 Тогда
		
		ОбеспечениеБезОбособления = ТаблицаЗаполнениеОбеспечения(
			МатериалыБезОбособления,
			ВариантыОбеспечения,
			Ложь);
		
	Иначе
		ОбеспечениеБезОбособления = Неопределено;
	КонецЕсли;
	
	Если ОбеспечениеБезОбособления = Неопределено Тогда
		
		Результат = ОбеспечениеСОбособлением;
		
	ИначеЕсли ОбеспечениеСОбособлением = Неопределено Тогда
		
		Результат = ОбеспечениеБезОбособления;
		
	Иначе
		
		Результат = ОбеспечениеСОбособлением;
		
		Для каждого Строка Из ОбеспечениеБезОбособления Цикл
			
			НоваяСтрока = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ТаблицаЗаполнениеОбеспечения(ТаблицаМатериалов, ВариантыОбеспечения, ОбособленнаяСхема)
	
	УдалитьВариантОбособленноИзПеречня = Ложь;
	Если ОбособленнаяСхема
		И ВариантыОбеспечения.Найти(Перечисления.ВариантыОбеспечения.Обособленно) = Неопределено
		И ВариантыОбеспечения.Найти(Перечисления.ВариантыОбеспечения.НеТребуется) = Неопределено Тогда
		
		ВариантыОбеспечения.Добавить(Перечисления.ВариантыОбеспечения.Обособленно);
		УдалитьВариантОбособленноИзПеречня = Истина;
		
	КонецЕсли;
	
	ТаблицаОформлено = ТаблицаОформленоПустая();
	ТаблицаНевыделенныеСтроки = ТаблицаМатериалов.СкопироватьКолонки();
	
	ЗаблокироватьРегистрыОбеспеченияПотребностей(ТаблицаМатериалов);
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ПереченьВариантов", ВариантыОбеспечения);
	ПараметрыЗаполнения.Вставить("ИзменятьОбособление", НЕ ОбособленнаяСхема);
	
	Результат = ОбеспечениеСервер.ТаблицаЗаполнениеОбеспеченияУниверсальный(
		ТаблицаМатериалов,
		ТаблицаОформлено,
		ТаблицаНевыделенныеСтроки,
		Неопределено,
		Неопределено,
		Неопределено,
		ПараметрыЗаполнения);
		
	Если УдалитьВариантОбособленноИзПеречня Тогда
		ВариантыОбеспечения.Удалить(ВариантыОбеспечения.Найти(Перечисления.ВариантыОбеспечения.Обособленно));
	КонецЕсли;
	
	Возврат Результат; 
	
КонецФункции

Функция ТаблицаОформленоПустая()
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("КодСтроки");
	Результат.Колонки.Добавить("Ссылка");
	Результат.Колонки.Добавить("Номенклатура");
	Результат.Колонки.Добавить("Характеристика");
	Результат.Колонки.Добавить("Склад");
	Результат.Колонки.Добавить("Серия");
	Результат.Колонки.Добавить("Количество");
	Результат.Колонки.Добавить("КоличествоПриход");
	Результат.Колонки.Добавить("КоличествоКорректировка");
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьРеестрДокументовВПакетномРежиме(Этапы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	ЗаполнитьПараметрыИнициализации(Запрос);
	
	ПорядокРегистров = Неопределено;
	
	Запрос.Текст = ТекстЗапросаДляПакетногоЗаполненияРеестраДокументов(Запрос, ПорядокРегистров);
	Запрос.УстановитьПараметр("Ссылки", Этапы);
	
	ДанныеРегистров = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = Новый Структура("ТаблицаРеестрДокументов");
	ДополнительныеСвойства = Новый Структура("ТаблицыДляДвижений", ТаблицыДляДвижений);
	
	ТаблицаРеестрДокументов = РегистрыСведений.РеестрДокументов.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	ИндексРезультата = ПорядокРегистров.Найти("РеестрДокументов");
	
	ВыборкаРазделитель = ДанныеРегистров[ИндексРезультата].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаРазделитель.Следующий() Цикл
		
		РазделительЗаписи = ВыборкаРазделитель.РазделительЗаписи.УникальныйИдентификатор();
		
		ВыборкаСпособЗаписи = ВыборкаРазделитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСпособЗаписи.Следующий() Цикл
			
			Выборка = ВыборкаСпособЗаписи.Выбрать();
			
			Если ВыборкаСпособЗаписи.ЗаписьПоРазделителю Тогда
				
				ТаблицаРеестрДокументов.Очистить();
				
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(ТаблицаРеестрДокументов.Добавить(), Выборка);
				КонецЦикла;
				
				ТаблицаРеестрДокументов.ЗаполнитьЗначения(РазделительЗаписи, "РазделительЗаписи");
				ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеестрДокументов = ТаблицаРеестрДокументов;
			
				РегистрыСведений.РеестрДокументов.ЗаписатьДанныеРазделителя(
					РазделительЗаписи,
					ДополнительныеСвойства,
					Ложь);
				
			Иначе
				
				СтруктураПоиска = Новый Структура("Ссылка");
				
				Пока Выборка.Следующий() Цикл
					
					ТаблицаРеестрДокументов.Очистить();
					
					Ссылка = Выборка.Ссылка;
					
					ЗаполнитьЗначенияСвойств(ТаблицаРеестрДокументов.Добавить(), Выборка);
					
					СтруктураПоиска.Ссылка = Ссылка;
					Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
						ЗаполнитьЗначенияСвойств(ТаблицаРеестрДокументов.Добавить(), Выборка);
					КонецЦикла;
					
					ТаблицаРеестрДокументов.ЗаполнитьЗначения(РазделительЗаписи, "РазделительЗаписи");
					ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеестрДокументов = ТаблицаРеестрДокументов;
					
					РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(
						Ссылка,
						ДополнительныеСвойства,
						Ложь);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаДляПакетногоЗаполненияРеестраДокументов(Запрос, ПорядокРегистров)
	
	ТекстыЗапроса = ТекстыЗапросаДляФормированияДвижений(Запрос, Новый Структура("РеестрДокументов"));
	
	МассивТекстов = Новый Массив;
	РазделительЗапросов = ";
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
	ПорядокРегистров = Новый Массив;
	
	Для каждого Элемент Из ТекстыЗапроса Цикл
		
		Если ЗначениеЗаполнено(Элемент.Представление) Тогда
			МассивТекстов.Добавить("// " + Элемент.Представление);
		КонецЕсли;
		
		ТекстЗапроса = Элемент.Значение;
		
		Если Элемент.Представление = "РеестрДокументов" Тогда
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"ТабличнаяЧасть.Ссылка = &Ссылка",
				"ТабличнаяЧасть.Ссылка В (&Ссылки)");
				
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИдентификаторРаспоряжения", "Распоряжение");
			
			ЗаменитьПараметрыВАдаптируемомТекстеЗапроса(ТекстЗапроса, "ТабличнаяЧасть.Ссылка");
			
			ТекстЗапросаДвиженияПоРегистру = ТекстЗапроса;
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	#ПоляЗапросаДвиженияПоРегистру
			|	РеестрДокументов.Ссылка ЕСТЬ NULL КАК ЗаписьПоРазделителю
			|ИЗ
			|	(#ТекстЗапросаДвиженияПоРегистру) КАК ВложенныйЗапрос
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
			|		ПО #УсловияСоединения
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка
			|ИТОГИ ПО
			|	РазделительЗаписи,
			|	ЗаписьПоРазделителю";
			
			ПоляЗапроса = Новый Массив;
			
			Схема = Новый СхемаЗапроса;
			Схема.УстановитьТекстЗапроса(ТекстЗапросаДвиженияПоРегистру);
			
			Для каждого Колонка Из Схема.ПакетЗапросов[0].Колонки Цикл
				ПоляЗапроса.Добавить("ВложенныйЗапрос." + Колонка.Псевдоним + " КАК " + Колонка.Псевдоним + ",");
			КонецЦикла;
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"#ПоляЗапросаДвиженияПоРегистру",
				СтрСоединить(ПоляЗапроса, Символы.ПС));
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"#ТекстЗапросаДвиженияПоРегистру",
				ТекстЗапросаДвиженияПоРегистру);
			
			УсловияСоединения = Новый Массив;
			Для каждого Измерение Из РегистрыСведений.РеестрДокументов.СоздатьНаборЗаписей().Метаданные().Измерения Цикл
				
				Если (
					Измерение.Имя = "РазделительЗаписи" // В результате пакетного запроса РазделительЗаписи - это ссылка на распоряжение, а не его УИД
					ИЛИ Измерение.Имя = "Контрагент"    // Поля Контрагент и МестоХранения в тексте определены как Неопределено,
					ИЛИ Измерение.Имя = "МестоХранения" //		поэтому они не должны быть в условиях соединения
					) Тогда
					Продолжить;
				КонецЕсли;
				
				УсловияСоединения.Добавить("И ВложенныйЗапрос." + Измерение.Имя + " = РеестрДокументов." + Измерение.Имя);
				
			КонецЦикла;
			ТекстУсловияСоединения = СтрСоединить(УсловияСоединения, Символы.ПС);
			ТекстУсловияСоединения = Прав(ТекстУсловияСоединения, СтрДлина(ТекстУсловияСоединения)-1);
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"#УсловияСоединения",
				ТекстУсловияСоединения);
			
		Иначе
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"ТабличнаяЧасть.Ссылка = &Ссылка",
				"ТабличнаяЧасть.Ссылка В (&Ссылки)");
			
			ЗаменитьПараметрыВАдаптируемомТекстеЗапроса(ТекстЗапроса, "ТабличнаяЧасть.Ссылка");
			
		КонецЕсли;
		
		МассивТекстов.Добавить(ТекстЗапроса);
		
		МассивТекстов.Добавить(РазделительЗапросов);
		
		ПорядокРегистров.Добавить(Элемент.Представление);
		
	КонецЦикла;
	
	Возврат СтрСоединить(МассивТекстов, Символы.ПС);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Задание на производство
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаданиеНаПроизводство";
	КомандаПечати.Представление = НСтр("ru = 'Задание на производство';
										|en = 'Production job'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент.ПечатьЗаданиеНаПроизводство";

	ЭтапПроизводства2_2Локализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаданиеНаПроизводство") Тогда
		
		ТабличныйДокумент = СформироватьПечатнуюФормуЗаданиеНаПроизводство(
			МассивОбъектов, ОбъектыПечати, ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаданиеНаПроизводство",
			НСтр("ru = 'Задание на производство';
				|en = 'Production job'"),
			ТабличныйДокумент);
		
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(
		ПараметрыВывода.ПараметрыОтправки,
		МассивОбъектов,
		КоллекцияПечатныхФорм);
		
	ЭтапПроизводства2_2Локализация.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуЗаданиеНаПроизводство(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЭтапПроизводства2_2_ЗаданиеНаПроизводство";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЭтапПроизводства2_2.ПФ_MXL_ЗаданиеНаПроизводство");
	ПервыйДокумент = Истина;
	
	ДанныеДляПечати = ПолучитьДанныеДляПечатнойФормыЗаданиеНаПроизводство(МассивОбъектов, ПараметрыПечати);
	ВыборкаДокумент = ДанныеДляПечати.ВыборкаДокумент;
	
	Пока ВыборкаДокумент.Следующий() Цикл
	
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаданиеНаПроизводствоВывестиЗаголовок(ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		ЗаданиеНаПроизводствоВывестиШапку(ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		ЗаданиеНаПроизводствоВывестиСмежныеЭтапы(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати, Истина);
			
		ЗаданиеНаПроизводствоВывестиМатериалы(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати);
		
		ЗаданиеНаПроизводствоВывестиВыходныеИзделия(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати);
		
		ЗаданиеНаПроизводствоВывестиСмежныеЭтапы(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати, Ложь);
		
		ЗаданиеНаПроизводствоВывестиМаршрутнуюКарту(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ВыборкаДокумент.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыЗаданиеНаПроизводство(МассивОбъектов, ПараметрыПечати)
	
	ТекстыЗапросовПакета = Новый Массив;
	ИндексыРезультатов = Новый Соответствие;
	Индекс = 0;
	
	#Область ТекстЗапросаШапка
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка            КАК Ссылка,
	|	ДанныеДокумента.Номер             КАК Номер,
	|	ДанныеДокумента.НаименованиеЭтапа КАК НаименованиеЭтапа,
	|
	|	ДанныеДокумента.Распоряжение                КАК Распоряжение,
	|	ДанныеДокумента.Распоряжение.Представление  КАК ПредставлениеРаспоряжения,
	|	ДанныеДокумента.Подразделение               КАК Подразделение,
	|	ДанныеДокумента.Подразделение.Представление КАК ПредставлениеПодразделения,
	|
	|	ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеНоменклатура                              КАК Изделие,
	|	ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеХарактеристика                            КАК ИзделиеХарактеристика,
	|	ЕСТЬNULL(ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеНоменклатура.Наименование, """") КАК ИзделиеПредставление,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеХарактеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеНоменклатура.ИспользованиеХарактеристик В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			ТОГДА ДанныеДокумента.ПартияПроизводства.ОсновноеИзделиеХарактеристика.Наименование
	|		ИНАЧЕ """"
	|	КОНЕЦ                                                                                       КАК ИзделиеХарактеристикаПредставление,
	|
	|	ДанныеДокумента.Спецификация               КАК Спецификация,
	|	ДанныеДокумента.Спецификация.Представление КАК ПредставлениеСпецификации,
	|
	|	ДанныеДокумента.МаршрутнаяКарта КАК МаршрутнаяКарта,
	|
	|	ДанныеДокумента.Запланировано                               КАК Запланировано,
	|	ДанныеДокумента.ЕдиницаИзмеренияПартииВыпуска.Представление КАК ЕдиницаИзмеренияПартииВыпускаПредставление,
	|
	|	ЕСТЬNULL(ГрафикПроизводства.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)) КАК ПлановоеОкончаниеЭтапа,
	|
	|	ДанныеДокумента.Исполнитель.Представление КАК ПредставлениеИсполнителя
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО ДанныеДокумента.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ДанныеДокумента.Распоряжение = ГрафикПроизводства.Распоряжение
	|			И (ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
	ИндексыРезультатов.Вставить("ВыборкаДокумент", Индекс);
	Индекс = Индекс + 1;
	
	#КонецОбласти
	
	#Область ТекстЗапросаСмежныеЭтапы
	
	Если ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати) Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТСвязиЭтапов.СледующийЭтап КАК Ссылка,
		|	ВТСвязиЭтапов.Этап КАК ЭтапПроизводства,
		|	&ВТСвязиЭтаповПредставлениеЭтап КАК ПредставлениеЭтапа,
		|	ВЫРАЗИТЬ(ВТСвязиЭтапов.Этап КАК Документ.ЭтапПроизводства2_2).Подразделение КАК Подразделение
		|ИЗ
		|	ВТСвязиЭтапов КАК ВТСвязиЭтапов
		|ГДЕ
		|	ВТСвязиЭтапов.СледующийЭтап В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ЭтапПроизводства
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстПредставлениеЭтапа = ТекстЗапросаПредставлениеЭтапа("ВТСвязиЭтапов.Этап");
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ВТСвязиЭтаповПредставлениеЭтап",
			ТекстПредставлениеЭтапа);
		
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаПредшественники", Индекс);
		Индекс = Индекс + 1;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТСвязиЭтапов.Этап КАК Ссылка,
		|	ВТСвязиЭтапов.СледующийЭтап КАК ЭтапПроизводства,
		|	&ВТСвязиЭтаповПредставлениеСледующийЭтап КАК ПредставлениеЭтапа,
		|	ВЫРАЗИТЬ(ВТСвязиЭтапов.СледующийЭтап КАК Документ.ЭтапПроизводства2_2).Подразделение КАК Подразделение
		|ИЗ
		|	ВТСвязиЭтапов КАК ВТСвязиЭтапов
		|ГДЕ
		|	ВТСвязиЭтапов.Этап В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ЭтапПроизводства
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстПредставлениеЭтапа = ТекстЗапросаПредставлениеЭтапа("ВТСвязиЭтапов.СледующийЭтап");
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ВТСвязиЭтаповПредставлениеСледующийЭтап",
			ТекстПредставлениеЭтапа);
		
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаПоследователи", Индекс);
		Индекс = Индекс + 1;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ТекстЗапросаМатериалы
	
	Если ЗаданиеНаПроизводствоПечататьМатериалы(ПараметрыПечати) Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Материалы.Ссылка КАК Ссылка,
		|	Материалы.Номенклатура КАК Номенклатура,
		|	Материалы.Номенклатура.Код КАК Код,
		|	Материалы.Номенклатура.Артикул КАК Артикул,
		|	Материалы.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		|	Материалы.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное,
		|	Материалы.Склад КАК Склад,
		|	Материалы.Склад.Представление КАК ПредставлениеСклада,
		|	&ТекстЗапросаЕдиницаИзмеренияМатериалы КАК ПредставлениеЕдиницыИзмерения,
		|	Материалы.КоличествоУпаковок КАК Количество
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Материалы
		|ГДЕ
		|	Материалы.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Материалы.НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Материалы.Упаковка",
			"Материалы.Номенклатура");
			
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ТекстЗапросаЕдиницаИзмеренияМатериалы",
			ТекстЕдИзм);
		
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаМатериалы", Индекс);
		Индекс = Индекс + 1;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ТекстЗапросаВыходныеИзделия
	
	Если ЗаданиеНаПроизводствоПечататьВыходныеИзделия(ПараметрыПечати) Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Выпуск.Ссылка КАК Ссылка,
		|	Выпуск.Номенклатура КАК Номенклатура,
		|	Выпуск.Характеристика КАК Характеристика,
		|	Выпуск.Получатель КАК Получатель,
		|	&ТекстЗапросаЕдиницаИзмеренияВыпуск КАК ПредставлениеЕдиницыИзмерения,
		|	Выпуск.КоличествоУпаковок КАК Количество,
		|	Выпуск.Назначение КАК Назначение,
		|	Выпуск.ЭтапПотребитель КАК ЭтапПотребитель,
		|	Выпуск.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТВыпуск
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Выпуск
		|ГДЕ
		|	Выпуск.Ссылка В(&МассивОбъектов)
		|	И НЕ Выпуск.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПобочныйВыпуск.Ссылка,
		|	ПобочныйВыпуск.Номенклатура,
		|	ПобочныйВыпуск.Характеристика,
		|	ПобочныйВыпуск.Получатель,
		|	&ТекстЗапросаЕдиницаИзмеренияПобочныйВыпуск,
		|	ПобочныйВыпуск.КоличествоУпаковок,
		|	ПобочныйВыпуск.Назначение,
		|	ПобочныйВыпуск.ЭтапПотребитель,
		|	ПобочныйВыпуск.НомерСтроки
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ПобочныйВыпуск
		|ГДЕ
		|	ПобочныйВыпуск.Ссылка В(&МассивОбъектов)
		|	И НЕ ПобочныйВыпуск.Отменено
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выпуск.Ссылка КАК Ссылка,
		|	Выпуск.Номенклатура КАК Номенклатура,
		|	Выпуск.Номенклатура.Код КАК Код,
		|	Выпуск.Номенклатура.Артикул КАК Артикул,
		|	Выпуск.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		|	Выпуск.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное,
		|	ВЫБОР
		|		КОГДА Выпуск.ЭтапПотребитель <> &ПустаяСсылкаЭтап 
		|			ТОГДА &ПредставлениеЭтапа
		|		ИНАЧЕ Выпуск.Назначение.Представление
		|	КОНЕЦ КАК ПредставлениеНазначения,
		|	Выпуск.Получатель КАК Получатель,
		|	Выпуск.Получатель.Представление КАК ПредставлениеПолучателя,
		|	Выпуск.ПредставлениеЕдиницыИзмерения КАК ПредставлениеЕдиницыИзмерения,
		|	Выпуск.Количество КАК Количество
		|ИЗ
		|	ВТВыпуск КАК Выпуск
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Выпуск.НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Выпуск.Упаковка",
			"Выпуск.Номенклатура");
			
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ТекстЗапросаЕдиницаИзмеренияВыпуск",
			ТекстЕдИзм);
			
		ТекстЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ПобочныйВыпуск.Упаковка",
			"ПобочныйВыпуск.Номенклатура");
		
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ТекстЗапросаЕдиницаИзмеренияПобочныйВыпуск",
			ТекстЕдИзм);
			
		ТекстПредставлениеЭтапа = ТекстЗапросаПредставлениеЭтапа("Выпуск.ЭтапПотребитель");
		
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ПредставлениеЭтапа",
			ТекстПредставлениеЭтапа);
		
		Индекс = Индекс + 1;
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаВыходныеИзделия", Индекс);
		Индекс = Индекс + 1;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СборкаТекста
	
	Разделитель =
	"
	|;
	|/////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросовПакета, Разделитель);
	
	#КонецОбласти
	
	#Область ВыполнениеЗапроса
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПустаяСсылкаЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("РабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати) Тогда
		СоздатьВТСвязиЭтапов(Запрос.МенеджерВременныхТаблиц, МассивОбъектов, Ложь);
	КонецЕсли;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ДанныеДляПечати = Новый Структура;
	
	Для каждого Результат Из ИндексыРезультатов Цикл
		
		Если Результат.Ключ = "ВыборкаДокумент" Тогда
			Выборка = МассивРезультатов[Результат.Значение].Выбрать();
		Иначе
			Выборка = МассивРезультатов[Результат.Значение].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КонецЕсли;
		
		ДанныеДляПечати.Вставить(
			Результат.Ключ, 
			Выборка);
		
	КонецЦикла;
	
	#КонецОбласти
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Процедура ЗаданиеНаПроизводствоВывестиЗаголовок(ТабличныйДокумент, Макет, ВыборкаДокумент)
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	
	Область.Параметры.Заполнить(ВыборкаДокумент);
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
		ТабличныйДокумент,
		Макет,
		Область,
		ВыборкаДокумент.Ссылка);
	
	ТабличныйДокумент.Вывести(Область);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиШапку(ТабличныйДокумент, Макет, ВыборкаДокумент)
	
	ФорматнаяСтрока = УправлениеПроизводством.ФорматнаяСтрокаДляДатыГрафикаПроизводства();
	
	Область = Макет.ПолучитьОбласть("Шапка");
	
	Область.Параметры.Заполнить(ВыборкаДокумент);
	
	Область.Параметры.ПредставлениеИзделия = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
															ВыборкаДокумент.ИзделиеПредставление, 
															ВыборкаДокумент.ИзделиеХарактеристикаПредставление);
	
	Область.Параметры.ПлановоеОкончаниеЭтапа = Формат(ВыборкаДокумент.ПлановоеОкончаниеЭтапа, ФорматнаяСтрока);
	
	Область.Параметры.ЕдиницаИзмеренияПартииВыпуска = УправлениеДаннымиОбИзделияхКлиентСервер.ПредставлениеЕдиницыИзмеренияПартииВыпуска(
															ВыборкаДокумент.ЕдиницаИзмеренияПартииВыпускаПредставление);
	
	ТабличныйДокумент.Вывести(Область);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиСмежныеЭтапы(ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати, Предшественники)
	
	Если НЕ ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати) Тогда
		Возврат;
	Иначе
		
		Если Предшественники Тогда
			ВыборкаЭтапы = ДанныеДляПечати.ВыборкаПредшественники;
		Иначе
			ВыборкаЭтапы = ДанныеДляПечати.ВыборкаПоследователи;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокумент.Ссылка);
		Если НЕ ВыборкаЭтапы.НайтиСледующий(СтруктураПоиска) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	#Область Заголовок
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("СмежныеЭтапыЗаголовок");
	
	Если Предшественники Тогда
		ОбластьЗаголовок.Параметры.СмежныеЭтапыТекстЗаголовка = НСтр("ru = 'Принять работу';
																	|en = 'Accept the job'");
	Иначе
		ОбластьЗаголовок.Параметры.СмежныеЭтапыТекстЗаголовка = НСтр("ru = 'Сдать работу';
																	|en = 'Pass the work'");
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	#КонецОбласти
	
	#Область Данные
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СмежныеЭтапыСтрока");
	
	Выборка = ВыборкаЭтапы.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	#КонецОбласти
	
	ОбластьПодвал = Макет.ПолучитьОбласть("СмежныеЭтапыПодвал");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиМатериалы(ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати)
	
	Если НЕ ЗаданиеНаПроизводствоПечататьМатериалы(ПараметрыПечати) Тогда
		Возврат;
	Иначе
		
		ВыборкаМатериалы = ДанныеДляПечати.ВыборкаМатериалы;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокумент.Ссылка);
		Если НЕ ВыборкаМатериалы.НайтиСледующий(СтруктураПоиска) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицыМатериалы");
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	Если ВыводитьКоды Тогда
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыМатериалы_СКодом");
		ОбластьШапка.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		
		ИмяОбластиСтрока = "СтрокаТаблицыМатериалы_СКодом";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	Иначе
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыМатериалы_БезКода");
		
		ИмяОбластиСтрока = "СтрокаТаблицыМатериалы_БезКода";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
		
	НомерСтроки = 0;
	Выборка = ВыборкаМатериалы.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		Если ВыводитьКоды Тогда
			ОбластьСтрока.Параметры.Артикул = Выборка[КолонкаКодов];
		КонецЕсли;
		
		ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				Выборка.НоменклатураНаименованиеПолное,
				Выборка.ХарактеристикаНаименованиеПолное);
		ОбластьСтрока.Параметры.ПредставлениеНоменклатуры = ПредставлениеНоменклатуры;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	Если ЗаданиеНаПроизводствоДобавлятьПустыеСтрокиВМатериалы(ПараметрыПечати) Тогда
		
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		ЗаданиеНаПроизводствоВывестиПустыеСтроки(ТабличныйДокумент, ОбластьСтрока, НомерСтроки);
		
	КонецЕсли;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалТаблицыМатериалы");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиВыходныеИзделия(ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати)
	
	Если НЕ ЗаданиеНаПроизводствоПечататьВыходныеИзделия(ПараметрыПечати) Тогда
		Возврат;
	Иначе
		
		ВыборкаВыходныеИзделия = ДанныеДляПечати.ВыборкаВыходныеИзделия;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокумент.Ссылка);
		Если НЕ ВыборкаВыходныеИзделия.НайтиСледующий(СтруктураПоиска) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицыВыходныеИзделия");
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	Если ВыводитьКоды Тогда
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыВыходныеИзделия_СКодом");
		ОбластьШапка.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		
		ИмяОбластиСтрока = "СтрокаТаблицыВыходныеИзделия_СКодом";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	Иначе
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыВыходныеИзделия_БезКода");
		
		ИмяОбластиСтрока = "СтрокаТаблицыВыходныеИзделия_БезКода";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
		
	НомерСтроки = 0;
	Выборка = ВыборкаВыходныеИзделия.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		Если ВыводитьКоды Тогда
			ОбластьСтрока.Параметры.Артикул = Выборка[КолонкаКодов];
		КонецЕсли;
		
		ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				Выборка.НоменклатураНаименованиеПолное,
				Выборка.ХарактеристикаНаименованиеПолное);
		ОбластьСтрока.Параметры.ПредставлениеНоменклатуры = ПредставлениеНоменклатуры;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	Если ЗаданиеНаПроизводствоДобавлятьПустыеСтрокиВВыходныеИзделия(ПараметрыПечати) Тогда
		
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		ЗаданиеНаПроизводствоВывестиПустыеСтроки(ТабличныйДокумент, ОбластьСтрока, НомерСтроки);
		
	КонецЕсли;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалТаблицыВыходныеИзделия");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиМаршрутнуюКарту(ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент)
	
	Если НЕ ЗаданиеНаПроизводствоПечататьМаршрутнуюКарту(ПараметрыПечати)
		ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДокумент.МаршрутнаяКарта) Тогда
		Возврат;
	Иначе
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицыМаршрутнаяКарта");
	ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокумент);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыМаршрутнаяКарта");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыМаршрутнаяКарта");
	НомерСтроки = 0;
	
	ДанныеМаршрутнойКарты = Справочники.МаршрутныеКарты.ДанныеМаршрутнойКартыДляПечати(
		ВыборкаДокумент.МаршрутнаяКарта,
		ВыборкаДокумент.Запланировано,
		ВыборкаДокумент.Изделие,
		ВыборкаДокумент.ИзделиеХарактеристика,
		"Операции");
		
	Операции = ДанныеМаршрутнойКарты.Операции;
	
	Для каждого Операция Из Операции Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Операция);
		
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		Если Операция.ВремяВыполненияЕдИзм = Перечисления.ЕдиницыИзмеренияВремени.Час Тогда
			
			ВремяЧасы = Операция.ВремяВыполнения;
			
		Иначе
			
			ВремяСекунды = ПланированиеПроизводстваКлиентСервер.ПолучитьВремяВСекундах(
				Операция.ВремяВыполнения, Операция.ВремяВыполненияЕдИзм);
				
			ВремяЧасы = ПланированиеПроизводстваКлиентСервер.ПолучитьВремяВЕдиницеИзмерения(
				ВремяСекунды, Перечисления.ЕдиницыИзмеренияВремени.Час);
				
		КонецЕсли;
		
		ОбластьСтрока.Параметры.ВремяЧасы = ВремяЧасы;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалТаблицыМаршрутнаяКарта");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиПустыеСтроки(ТабличныйДокумент, ОбластьСтрока, НомерСтроки)
	
	Количество = НомерСтроки/5;
	
	Если НЕ Количество = Цел(Количество) Тогда
		Количество = Цел(Количество) + 1;
	КонецЕсли;
	
	Для Сч = 1 По Количество Цикл
		
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ПечататьСмежныеЭтапы") Тогда
		Возврат ПараметрыПечати.ПечататьСмежныеЭтапы;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ПечататьСмежныеЭтапы""';
								|en = 'The ""ПечататьСмежныеЭтапы"" print option is missing'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоПечататьМатериалы(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ПечататьМатериалы") Тогда
		Возврат ПараметрыПечати.ПечататьМатериалы;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ПечататьМатериалы""';
								|en = 'The ""ПечататьМатериалы"" print option is missing'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоПечататьВыходныеИзделия(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ПечататьВыходныеИзделия") Тогда
		Возврат ПараметрыПечати.ПечататьВыходныеИзделия;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ПечататьВыходныеИзделия""';
								|en = 'The ""ПечататьВыходныеИзделия"" print option is missing'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоПечататьМаршрутнуюКарту(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ПечататьМаршрутнуюКарту") Тогда
		Возврат ПараметрыПечати.ПечататьМаршрутнуюКарту;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ПечататьМаршрутнуюКарту""';
								|en = 'The ""ПечататьМаршрутнуюКарту"" print option is missing'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоДобавлятьПустыеСтрокиВМатериалы(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ДобавлятьПустыеСтрокиВМатериалы") Тогда
		Возврат ПараметрыПечати.ДобавлятьПустыеСтрокиВМатериалы;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ДобавлятьПустыеСтрокиВМатериалы""';
								|en = 'The ""ДобавлятьПустыеСтрокиВМатериалы"" print option is missing'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоДобавлятьПустыеСтрокиВВыходныеИзделия(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ДобавлятьПустыеСтрокиВВыходныеИзделия") Тогда
		Возврат ПараметрыПечати.ДобавлятьПустыеСтрокиВВыходныеИзделия;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ДобавлятьПустыеСтрокиВВыходныеИзделия""';
								|en = 'The ""ДобавлятьПустыеСтрокиВВыходныеИзделия"" print option is missing'");
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	Товары.Получатель КАК Получатель,
	|	Товары.Произведено КАК Произведено,
	|	Товары.ДатаПроизводства КАК ДатаПроизводства,
	|	Товары.Количество КАК Количество,
	|	Товары.Отменено КАК Отменено,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	Товары.Получатель КАК Получатель,
	|	Товары.Произведено КАК Произведено,
	|	Товары.ДатаПроизводства КАК ДатаПроизводства,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	НЕ Товары.Отменено
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Получатель,
	|	Товары.Произведено,
	|	Товары.ДатаПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Назначение КАК Назначение,
	|	Серии.Получатель КАК Получатель,
	|	Серии.Произведено КАК Произведено,
	|	Серии.ДатаПроизводства КАК ДатаПроизводства,
	|	Серии.Количество КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Назначение КАК Назначение,
	|	Серии.Получатель КАК Получатель,
	|	Серии.Произведено КАК Произведено,
	|	Серии.ДатаПроизводства КАК ДатаПроизводства,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Получатель,
	|	Серии.Произведено,
	|	Серии.ДатаПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.Отменено
	|				ИЛИ ВидыНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					КОГДА НЕ Товары.Произведено
	|						ТОГДА 15
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УказыватьПриПроизводствеПродукции
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 2
	|					КОГДА НЕ ТоварыДляЗапроса.Произведено
	|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|						ТОГДА 21
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Получатель = ТоварыДляЗапроса.Получатель
	|			И Товары.Произведено = ТоварыДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = ТоварыДляЗапроса.ДатаПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|		ПО Товары.Номенклатура = СерииДляЗапроса.Номенклатура
	|			И Товары.Характеристика = СерииДляЗапроса.Характеристика
	|			И Товары.Назначение = СерииДляЗапроса.Назначение
	|			И Товары.Получатель = СерииДляЗапроса.Получатель
	|			И Товары.Произведено = СерииДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = СерииДляЗапроса.ДатаПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА Товары.Отменено
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ НЕ Склады.ЦеховаяКладовая
	|				ИЛИ Склады.Подразделение <> &Подразделение
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					КОГДА НЕ Товары.Произведено
	|						ТОГДА 15
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					КОГДА НЕ ТоварыДляЗапроса.Произведено
	|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|						ТОГДА 11
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					КОГДА НЕ ТоварыДляЗапроса.Произведено
	|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|						ТОГДА 27
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПродукцииИзПроизводства
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								КОГДА НЕ ТоварыДляЗапроса.Произведено
	|										И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|									ТОГДА 23
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							КОГДА НЕ ТоварыДляЗапроса.Произведено
	|									И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|								ТОГДА 21
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Получатель = ТоварыДляЗапроса.Получатель
	|			И Товары.Произведено = ТоварыДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = ТоварыДляЗапроса.ДатаПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|		ПО Товары.Номенклатура = СерииДляЗапроса.Номенклатура
	|			И Товары.Характеристика = СерииДляЗапроса.Характеристика
	|			И Товары.Назначение = СерииДляЗапроса.Назначение
	|			И Товары.Получатель = СерииДляЗапроса.Получатель
	|			И Товары.Произведено = СерииДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = СерииДляЗапроса.ДатаПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО Товары.Получатель = Склады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО Товары.Получатель = ПолитикиУчетаСерий.Склад
	|			И (СправочникНоменклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	СтатусыПолучатель.СтатусУказанияСерий КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий В (13, 14, 15)
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО Товары.НомерСтроки = СтатусыОтправитель.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО Товары.НомерСтроки = СтатусыПолучатель.НомерСтроки
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ СтатусыПолучатель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий В (13, 14, 15)
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|			КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийОбеспечениеМатериаламиИРаботами()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Склад КАК Склад,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Серия КАК Серия,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ВариантОбеспечения КАК ВариантОбеспечения
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ НЕ Товары.ВариантОбеспечения В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					КОГДА Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|						ТОГДА 15
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					КОГДА Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|						ТОГДА 11
	|					ИНАЧЕ 9
	|				КОНЕЦ
	// При отгрузке из нашей кладовой
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|				И Товары.ВариантОбеспечения В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ЦеховаяКладовая
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).Подразделение = &Подразделение
	|				И НЕ &ПроизводствоНаСтороне
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеНаВнутренниеНужды
	|				И Товары.ВариантОбеспечения В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ЦеховаяКладовая
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).Подразделение = &Подразделение
	|				И НЕ &ПроизводствоНаСтороне
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Товары.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО Товары.Склад = ПолитикиУчетаСерий.Склад
	|			И (СпрНоменклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|				И Товары.ВариантОбеспечения В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ЦеховаяКладовая
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).Подразделение = &Подразделение
	|				И НЕ &ПроизводствоНаСтороне
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Товары.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СпрНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	СтатусыПолучатель.СтатусУказанияСерий КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО Товары.НомерСтроки = СтатусыОтправитель.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО Товары.НомерСтроки = СтатусыПолучатель.НомерСтроки
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ СтатусыПолучатель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|				КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|			КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийРасходМатериаловИРабот()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УказыватьПриРасходеМатериалов
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 2
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Товары.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СпрНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийЭкономияМатериалов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Получатель КАК Склад,
	|	Товары.Обособить КАК Обособить,
	|	Товары.ДатаОперации КАК ДатаОперации,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Склад КАК Склад,
	|	Товары.Обособить КАК Обособить,
	|	Товары.ДатаОперации КАК ДатаОперации,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Склад,
	|	Товары.Обособить,
	|	Товары.ДатаОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Получатель КАК Склад,
	|	Серии.Обособить КАК Обособить,
	|	Серии.ДатаОперации КАК ДатаОперации,
	|	Серии.Количество КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Склад КАК Склад,
	|	Серии.Обособить КАК Обособить,
	|	Серии.ДатаОперации КАК ДатаОперации,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Склад,
	|	Серии.Обособить,
	|	Серии.ДатаОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ВидыНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|			И Товары.Обособить = ТоварыДляЗапроса.Обособить
	|			И Товары.ДатаОперации = ТоварыДляЗапроса.ДатаОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ НЕ Склады.ЦеховаяКладовая
	|				ИЛИ Склады.Подразделение <> &Подразделение
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПрочемуОприходованию
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|			И Товары.Обособить = ТоварыДляЗапроса.Обособить
	|			И Товары.ДатаОперации = ТоварыДляЗапроса.ДатаОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|		ПО Товары.Номенклатура = СерииДляЗапроса.Номенклатура
	|			И Товары.Характеристика = СерииДляЗапроса.Характеристика
	|			И Товары.Склад = СерииДляЗапроса.Склад
	|			И Товары.Обособить = СерииДляЗапроса.Обособить
	|			И Товары.ДатаОперации = СерииДляЗапроса.ДатаОперации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО Товары.Склад = Склады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО Товары.Склад = ПолитикиУчетаСерий.Склад
	|			И (СправочникНоменклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	СтатусыПолучатель.СтатусУказанияСерий КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		ИНАЧЕ СтатусыПолучатель.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО Товары.НомерСтроки = СтатусыОтправитель.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО Товары.НомерСтроки = СтатусыПолучатель.НомерСтроки
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ СтатусыПолучатель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий <> 0
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				ИНАЧЕ СтатусыПолучатель.СтатусУказанияСерий
	|			КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПакетноеФормированиеЭтапов

Функция ОбеспечитьПотребностиПроизводстваВнутриЗамераВремени(Параметры)
	
	Распоряжения = Параметры.Распоряжения;
	
	Если Параметры.Свойство("ВариантыОбеспечения") Тогда
		ВариантыОбеспечения = Параметры.ВариантыОбеспечения;
	Иначе
		ВариантыОбеспечения = Неопределено;
	КонецЕсли;
	
	Результат = РезультатФормированияЭтапов(Распоряжения);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Документы.ЗаказНаПроизводство2_2.СоздатьВТДанныеДляФормированияЭтапов(
		МенеджерВременныхТаблиц,
		Распоряжения);

	ПроверитьДанныеДляФормированияЭтапов(
		МенеджерВременныхТаблиц,
		Результат);
	
	Документы.ЗаказНаПроизводство2_2.СоздатьВтСпособыПолученияМатериалов2_2(
		МенеджерВременныхТаблиц,
		Распоряжения);
	
	СформироватьЭтапыПоПотребностямПроизводства(
		МенеджерВременныхТаблиц,
		ВариантыОбеспечения,
		Результат);
		
	Возврат Результат;
	
КонецФункции

Функция РезультатФормированияЭтапов(Распоряжения = Неопределено) Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("ЕстьОшибка", Ложь);
	Результат.Вставить("ОшибкаТекст", Неопределено);
	Результат.Вставить("ОшибкаСсылка", Неопределено);
	
	Результат.Вставить("СформированоДокументов", 0);
	
	Результат.Вставить("Распоряжения", Распоряжения);
	
	Возврат Результат;
	
КонецФункции

Процедура СформироватьЭтапыПоПотребностямПроизводства(МенеджерВременныхТаблиц, ВариантыОбеспечения, РезультатФормирования)
	
	Потребности = ПродукцияИПолуфабрикатыДляФормированияЭтапов(МенеджерВременныхТаблиц);
	Если Потребности.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВыборки = Справочники.РесурсныеСпецификации.ПараметрыВыборкиДанных(, МенеджерВременныхТаблиц);
	ПараметрыВыборки.РежимПолученияДанныхНаборов = "Подготовить";
	
	РезультатРазузлования = Справочники.РесурсныеСпецификации.ДанныеСпецификацииПоПотребности(
		Потребности,
		ПараметрыВыборки);
	
	Если РезультатРазузлования.ЕстьОшибка Тогда
		
		ЗаполнитьЗначенияСвойств(
			РезультатФормирования,
			РезультатРазузлования,
			"ЕстьОшибка, ОшибкаТекст, ОшибкаСсылка");
			
		Возврат;
		
	КонецЕсли;
	
	ДанныеСпецификаций = РезультатРазузлования.ДанныеСпецификаций;
	
	Распоряжения = ОбщегоНазначенияУТ.ВыгрузитьЗначенияКолонки(Потребности, "Распоряжение");
	РезультатРазузлования.Вставить("Распоряжения", Распоряжения);
	
	НормативныйГрафик = НормативныйГрафикПоДаннымСпецификаций(ДанныеСпецификаций, Распоряжения,	Потребности);
	РезультатРазузлования.Вставить("НормативныйГрафик", НормативныйГрафик);
	
	ЗаполнитьСрокиИУпорядочитьДанныеСпецификаций(ДанныеСпецификаций, НормативныйГрафик);
	
	СформироватьЭтапы(РезультатРазузлования, ВариантыОбеспечения, РезультатФормирования);
	
КонецПроцедуры

Процедура СформироватьЭтапы(ДанныеЗаполнения, ВариантыОбеспечения, РезультатФормирования) Экспорт
	
	Распоряжения = ДанныеЗаполнения.Распоряжения;
	ДанныеСпецификаций = ДанныеЗаполнения.ДанныеСпецификаций;
	
	ПартииПроизводства = СтруктураДанныхПартииПроизводства();
	ДополнитьДанныеСпецификации(
		Распоряжения,
		ДанныеСпецификаций,
		ПартииПроизводства);
	Справочники.ПартииПроизводства.ЗаполнитьПартиюПроизводстваВКоллекции(ПартииПроизводства, Ложь, Ложь);
	
	ТаблицыСвязей = ТаблицыСвязейДляФормированияЭтапов(ДанныеСпецификаций);
	
	НормативныйГрафик          = Неопределено;
	НормативныйГрафикРассчитан = ДанныеЗаполнения.Свойство("НормативныйГрафик", НормативныйГрафик);
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		Если НЕ ДанныеСпецификации.ДополнитьЦепочку Тогда
			
			ЗначенияЗаполненияНовогоЭтапа = УправлениеПроизводствомВызовСервера.ЗначенияЗаполненияНовогоЭтапаПроизводства(
				ДанныеСпецификации.Распоряжение,
				ДанныеСпецификации.НазначениеПродукция,
				ДанныеСпецификации.ПартияПроизводства,
				ДанныеСпецификации.ТипПроизводственногоПроцесса,
				ДанныеСпецификации.Спецификация);
			СоздатьЦепочкуЭтапов(ЗначенияЗаполненияНовогоЭтапа, ДанныеСпецификации, ТаблицыСвязей, ВариантыОбеспечения, РезультатФормирования);
			
		Иначе
			
			ДополнитьЦепочкуЭтапов(ДанныеСпецификации, ТаблицыСвязей, ВариантыОбеспечения, РезультатФормирования);
			НормативныйГрафикРассчитан = Ложь;
			
		КонецЕсли;
		
		Если ДанныеСпецификации.ЭтапыОбособитьВыпуск.ВГраница() <> -1 Тогда
			ОбособитьВыпускПодРазборку(ДанныеСпецификации, ТаблицыСвязей);
		КонецЕсли;
		
	КонецЦикла;
	
	Если НормативныйГрафикРассчитан Тогда
		
		ЗаполнитьИЗаписатьНормативныйГрафикПослеФормированияЭтапов(
			Распоряжения,
			НормативныйГрафик,
			ТаблицыСвязей.КлючиЭтапов);
			
	Иначе
		
		РассчитатьНормативныйГрафик(Распоряжения, Ложь);
		
	КонецЕсли;
	
	НаборЭтапов = ОбщегоНазначенияУТ.ВыгрузитьЗначенияКолонки(
		ТаблицыСвязей.КлючиЭтапов, "ЭтапПроизводства");
	
	Если НаборЭтапов.Количество() > 0 Тогда
		
		ЗаполнитьОбеспечениеИОтразитьДвиженияПоЭтапам(
			НаборЭтапов,
			ТаблицыСвязей.СтрокиДляЗаполненияОбеспечения,
			ВариантыОбеспечения,
			ТаблицыСвязей.НеНовыеЭтапы);
		
		Если УправлениеПроизводствомПовтИсп.ИспользуетсяГрафикПроизводства() Тогда
			РегистрыСведений.ЗаданияКРасчетуГрафикаПроизводства.ДобавитьЗадания(
				НаборЭтапов);
		КонецЕсли;
		
		ОтразитьСостояние = Документы.ЭтапПроизводства2_2.Последователи(НаборЭтапов);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
			ОтразитьСостояние,
			НаборЭтапов,
			Истина);
		
		РегистрыСведений.СостоянияЭтаповПроизводства.ОтразитьСостояниеЭтапов(ОтразитьСостояние);
		
		ЗаполнитьРеестрДокументовВПакетномРежиме(НаборЭтапов);
		
	КонецЕсли;
	
	РегистрыСведений.СостоянияЗаказовНаПроизводство.ОтразитьСостояние(
		Распоряжения);
	
КонецПроцедуры

Процедура ПроверитьДанныеДляФормированияЭтапов(МенеджерВременныхТаблиц, РезультатФормирования)
	
	Если РезультатФормирования.ЕстьОшибка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.ТипПроизводственногоПроцесса КАК ТипПроизводственногоПроцесса
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ВЫРАЗИТЬ(ВТПотребности.Распоряжение КАК Документ.ЗаказНаПроизводство2_2) КАК Ссылка,
	|		ВЫРАЗИТЬ(ВТПотребности.Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ТипПроизводственногоПроцесса КАК ТипПроизводственногоПроцесса
	|	ИЗ
	|		ВтДанныеДляФормированияЭтапов КАК ВТПотребности
	|	ГДЕ
	|		ВТПотребности.ЭтапИсточник = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|		И ВТПотребности.Спецификация = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ВЫРАЗИТЬ(ВТПотребности.ЭтапИсточник КАК Документ.ЭтапПроизводства2_2) КАК Ссылка,
	|		ВЫРАЗИТЬ(ВТПотребности.ЭтапИсточник КАК Документ.ЭтапПроизводства2_2).ТипПроизводственногоПроцесса КАК ТипПроизводственногоПроцесса
	|	ИЗ
	|		ВтДанныеДляФормированияЭтапов КАК ВТПотребности
	|	ГДЕ
	|		ВТПотребности.ЭтапИсточник <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|		И ВТПотребности.Спецификация = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|) КАК Таблица");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Если Выборка.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Разборка Тогда
			Подстановка = НСтр("ru = 'производства (разборки)';
								|en = 'production (disassembly)'");
		ИначеЕсли Выборка.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Ремонт Тогда
			Подстановка = НСтр("ru = 'производства (ремонта)';
								|en = 'production (repair)'");
		Иначе
			Подстановка = НСтр("ru = 'производства';
								|en = 'production'");
		КонецЕсли;
		
		ТекстШаблон = НСтр("ru = 'Для %1 изделий необходимо создать этапы вручную (см. документ № %2)';
							|en = 'For the %1 goods, create stages manually (see document No.%2)'");
		ОшибкаТекст = СтрШаблон(ТекстШаблон, Подстановка, Выборка.Ссылка);

		РезультатФормирования.ЕстьОшибка = Истина;
		РезультатФормирования.ОшибкаТекст = ОшибкаТекст;
		РезультатФормирования.ОшибкаСсылка = Выборка.Ссылка;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПродукцияИПолуфабрикатыДляФормированияЭтапов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Распоряжение КАК Распоряжение,
	|	
	|	Таблица.Обособленно         КАК Обособленно,
	|	Таблица.НазначениеПродукция КАК НазначениеПродукция,
	|	
	|	Таблица.Номенклатура   КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|
	|	Таблица.Отправитель    КАК Отправитель,
	|	Таблица.Получатель     КАК Получатель,
	|	
	|	Таблица.ЭтапИсточник   КАК ЭтапИсточник,
	|	Таблица.Назначение     КАК Назначение,
	|	
	|	Таблица.Спецификация   КАК Спецификация,
	|
	|	Таблица.СписатьНаРасходы         КАК СписатьНаРасходы,
	|	Таблица.СтатьяРасходов           КАК СтатьяРасходов,
	|	Таблица.АналитикаРасходов        КАК АналитикаРасходов,
	|	Таблица.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	
	|	Таблица.Количество     КАК Количество,
	|	
	|	ВЫРАЗИТЬ(Таблица.Распоряжение КАК Документ.ЗаказНаПроизводство2_2).НачатьНеРанее КАК ДатаЗапуска,
	|	ВЫРАЗИТЬ(Таблица.Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ДатаПотребности КАК ДатаВыпуска,
	|	ВЫРАЗИТЬ(Таблица.Распоряжение КАК Документ.ЗаказНаПроизводство2_2).РазмещениеВыпуска КАК РазмещениеВыпуска
	|
	|ИЗ
	|	ВтДанныеДляФормированияЭтапов КАК Таблица
	|	
	|ГДЕ
	|	Таблица.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СтруктураДанныхПартииПроизводства()
	
	Таблица = Новый ТаблицаЗначений();
	
	Таблица.Колонки.Добавить("Код", Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.ПартииПроизводства"));
	Таблица.Колонки.Добавить("ПартияПроизводства", Новый ОписаниеТипов("СправочникСсылка.ПартииПроизводства"));
	
	Для каждого Реквизит Из Метаданные.Справочники.ПартииПроизводства.Реквизиты Цикл
		Таблица.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

Функция ИнициализироватьТаблицыСвязейДляФормированияЭтапов()
	
	Результат = Новый Структура;
	
	Результат.Вставить("КлючиЭтапов", ИнициализироватьТаблицуКлючиЭтапов());
	Результат.Вставить("НеНовыеЭтапы", Новый Массив);
	
	Результат.Вставить("ПФВыпуск", ИнициализироватьТаблицуПФВыпуск());
	Результат.Вставить("ПФПотребность", ИнициализироватьТаблицуПФПотребность());
	Результат.Вставить("ПФСвязи", ИнициализироватьТаблицуПФСвязи());
	
	Результат.Вставить("НазначенияПолуфабрикатов", Новый Соответствие);
	
	Результат.Вставить("СтрокиДляЗаполненияОбеспечения", ИнициализироватьТаблицуСтрокиДляЗаполненияОбеспечения());
	
	Возврат Результат
	
КонецФункции

Функция ИнициализироватьТаблицуПФВыпуск()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("КлючСвязиПолучатель", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("ЭтапПолучательИзделия", Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства,УникальныйИдентификатор"));
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	Результат.Колонки.Добавить("ИндексСтроки", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	Результат.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Результат.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("ФиксированнаяСтоимость", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("ОбработатьПоСпецификации", Новый ОписаниеТипов("Булево"));
	
	Результат.Индексы.Добавить("ЭтапПроизводства, ФиксированнаяСтоимость, ИндексСтроки");
	
	Возврат Результат;
	
КонецФункции

Функция ИнициализироватьТаблицуПФПотребность()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	Результат.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	Результат.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	Результат.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Результат.Колонки.Добавить("Получатель",
		Новый ОписаниеТипов("СправочникСсылка.Склады, СправочникСсылка.СтруктураПредприятия"));
	Результат.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("КоличествоОбеспеченоТекущимЭтапом", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("ОбеспеченаТекущимЭтапом", Новый ОписаниеТипов("Булево"));
	
	Результат.Индексы.Добавить("ЭтапПроизводства, Номенклатура, Характеристика, Спецификация");
	Результат.Индексы.Добавить("ЭтапПроизводства, Номенклатура, Характеристика");
	Результат.Индексы.Добавить("ОбеспеченаТекущимЭтапом");
	
	Возврат Результат;
	
КонецФункции

Функция ИнициализироватьТаблицуПФСвязи()

	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("КлючСвязиПолучатель", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("ЭтапПолучательИзделия", Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства,УникальныйИдентификатор"));
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	
	Результат.Индексы.Добавить("КлючСвязиПолучатель, ЭтапПолучательИзделия");
	
	Возврат Результат;
	
КонецФункции

Функция ИнициализироватьТаблицуКлючиЭтапов()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("КлючСвязи", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	
	Результат.Индексы.Добавить("КлючСвязи");
	
	Возврат Результат;
	
КонецФункции

Функция ИнициализироватьТаблицуСтрокиДляЗаполненияОбеспечения()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	Результат.Колонки.Добавить("ИндексыСтрок", Новый ОписаниеТипов("Массив"));
	Результат.Колонки.Добавить("КодыСтрок", Новый ОписаниеТипов("Массив"));
	
	Результат.Индексы.Добавить("ЭтапПроизводства");
	
	Возврат Результат;
	
КонецФункции

Процедура СоздатьЦепочкуЭтапов(ЗначенияЗаполнения, ДанныеСпецификации, ТаблицыСвязей, ВариантыОбеспечения, РезультатФормирования)
	
	ЭтапыЦепочки = ТаблицаЭтапыЦепочки(ДанныеСпецификации.Этапы);
	
	Для Индекс = 0 По ДанныеСпецификации.Этапы.Количество()-1 Цикл
		
		ДанныеЭтапа = ДанныеСпецификации.Этапы[Индекс];
		
		СоздатьИЗаполнитьЭтапПоСпецификации(
			ЗначенияЗаполнения,
			ДанныеСпецификации,
			ДанныеЭтапа,
			ТаблицыСвязей,
			ЭтапыЦепочки,
			ВариантыОбеспечения,
			Истина);
		
		РезультатФормирования.СформированоДокументов = РезультатФормирования.СформированоДокументов + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьИЗаполнитьЭтапПоСпецификации(ЗначенияЗаполнения, ДанныеСпецификации, ДанныеЭтапа, ТаблицыСвязей, ЭтапыЦепочки, ВариантыОбеспечения, ПерваяПопытка)
	
	НачатьТранзакцию();
	
	Попытка
		
		ДанныеЗаполнения = Новый Структура("СпособЗаполнения", "ЗаполнитьПоСпецификации");
		ДанныеЗаполнения.Вставить("РеквизитыШапки", ЗначенияЗаполнения);
		ДанныеЗаполнения.Вставить("ДанныеСпецификации", ДанныеСпецификации);
		ДанныеЗаполнения.Вставить("ДанныеЭтапа", ДанныеЭтапа);
		ДанныеЗаполнения.Вставить("ТаблицыСвязей", ТаблицыСвязей);
		ДанныеЗаполнения.Вставить("ЭтапыЦепочки", ЭтапыЦепочки);
		ДанныеЗаполнения.Вставить("ВариантыОбеспечения", ВариантыОбеспечения);
		
		ДокументОбъект = Документы.ЭтапПроизводства2_2.СоздатьДокумент();
		
		ДокументОбъект.УстановитьРежимПакетногоФормирования();
		ДокументОбъект.УстановитьФлагЗаполненоАвтоматически(Истина);
		
		ДокументОбъект.ОтключитьЗаполнениеНормативногоГрафикаПриЗаписи();
		
		ДокументОбъект.Заполнить(ДанныеЗаполнения);
		
		ЗаписатьСформированныйДокумент(ДокументОбъект, ПерваяПопытка);
		ПрименитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ОтменитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
		
		Если ПерваяПопытка Тогда
			
			ПерваяПопытка = Ложь;
			
			СоздатьИЗаполнитьЭтапПоСпецификации(
				ЗначенияЗаполнения,
				ДанныеСпецификации, 
				ДанныеЭтапа, 
				ТаблицыСвязей, 
				ЭтапыЦепочки, 
				ВариантыОбеспечения, 
				ПерваяПопытка);
			
		Иначе
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Формирование этапов';
					|en = 'Production stage. Stage generation'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецЕсли;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ДополнитьЦепочкуЭтапов(Источник, ТаблицыСвязей, ВариантыОбеспечения, РезультатФормирования)
	
	ДанныеПоНоменклатуре = Справочники.РесурсныеСпецификации.ДанныеПоНоменклатуреРасширенный();
	
	ДанныеПоНоменклатуре.Распоряжение = Источник.Распоряжение;
	ДанныеПоНоменклатуре.Спецификация = Источник.Спецификация;
	
	ДанныеПоНоменклатуре.Номенклатура   = Источник.ОсновноеИзделие.Номенклатура;
	ДанныеПоНоменклатуре.Характеристика = Источник.ОсновноеИзделие.Характеристика;
	
	ПартияВыпуска = Источник.ОбщаяПартияВыпуска;
	ДанныеСпецификации = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Источник);
	
	ПараметрыРасчета = Справочники.РесурсныеСпецификации.ПараметрыРасчетаКоличества(
		ДанныеПоНоменклатуре,
		,
		,
		"ВыходныеИзделия,ВозвратныеОтходы");
	
	Справочники.РесурсныеСпецификации.РассчитатьКоличествоНаПартиюВыпуска(ПартияВыпуска, ДанныеСпецификации, ПараметрыРасчета);
	
	ДанныеСпецификации.Вставить("ПартияВыпуска",           ПартияВыпуска);
	ДанныеСпецификации.Вставить("КоличествоПартийВыпуска", ПартияВыпуска.Значение);
	
	Для Индекс = 0 По ДанныеСпецификации.Этапы.Количество()-1 Цикл
		
		ДанныеЭтапа = ДанныеСпецификации.Этапы[Индекс];
		
		ДополнитьЭтапПроизводства(
			ДанныеСпецификации,
			ДанныеЭтапа,
			ТаблицыСвязей,
			ВариантыОбеспечения,
			Истина);
		
		РезультатФормирования.СформированоДокументов = РезультатФормирования.СформированоДокументов + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьЭтапПроизводства(ДанныеСпецификации, ДанныеЭтапа, ТаблицыСвязей, ВариантыОбеспечения, ПерваяПопытка)
	
	НачатьТранзакцию();
	
	Попытка
		
		ДокументОбъект = ДанныеЭтапа.ЭтапПроизводства.ПолучитьОбъект();
		ДокументОбъект.Заблокировать();
		
		ДанныеЭтапа.ЭтапПроизводства = ДокументОбъект.Ссылка;
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ДанныеСпецификации", ДанныеСпецификации);
		ДанныеЗаполнения.Вставить("ДанныеЭтапа", ДанныеЭтапа);
		ДанныеЗаполнения.Вставить("ТаблицыСвязей", ТаблицыСвязей);
		ДанныеЗаполнения.Вставить("ПартияПроизводства", ДанныеСпецификации.ПартияПроизводства);
		ДанныеЗаполнения.Вставить("ВариантыОбеспечения", ВариантыОбеспечения);
		
		ДокументОбъект.УстановитьРежимПакетногоФормирования();
		ДокументОбъект.УстановитьФлагЗаполненоАвтоматически(Истина);
		ДокументОбъект.ОтключитьЗаполнениеНормативногоГрафикаПриЗаписи();
		
		ДокументОбъект.ДополнитьПоСпецификации(ДанныеЗаполнения);
		
		ЗаписатьСформированныйДокумент(ДокументОбъект, ПерваяПопытка);
		ПрименитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ОтменитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
		
		Если ПерваяПопытка Тогда
			
			ПерваяПопытка = Ложь;
			
			ДополнитьЭтапПроизводства(
				ДанныеСпецификации, 
				ДанныеЭтапа, 
				ТаблицыСвязей, 
				ВариантыОбеспечения, 
				ПерваяПопытка);
			
		Иначе
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Формирование этапов';
					|en = 'Production stage. Stage generation'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецЕсли;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаписатьСформированныйДокумент(ДокументОбъект, ПерваяПопытка)
	
	СтатусФормируется = Перечисления.СтатусыЭтаповПроизводства2_2.Формируется;
	
	Если ДокументОбъект.Статус <> СтатусФормируется Тогда
		
		Если ПерваяПопытка Тогда
			
			Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
				ДокументОбъект.Статус = СтатусФормируется;
				ПерваяПопытка = Ложь;
			КонецЕсли;
			
		Иначе
			
			ДокументОбъект.Статус = СтатусФормируется;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура ЗаполнитьПФПотребность(ПФПотребность, ДанныеСпецификации, ДанныеЭтапа)
	
	Для Сч = 1 По 2 Цикл
		
		Если Сч = 1 Тогда
			Таблица = "ВходящиеИзделия";
			СтруктураПоиска = Новый Структура("Этап", ДанныеЭтапа.Этап);
		Иначе
			Таблица = "МатериалыИУслуги";
			СтруктураПоиска = Новый Структура("Этап, Производится", ДанныеЭтапа.Этап, Истина);
		КонецЕсли;
		
		Если НЕ ДанныеСпецификации.Свойство(Таблица) Тогда
			Продолжить;
		КонецЕсли;
		
		НайденныеСтроки = ДанныеСпецификации[Таблица].НайтиСтроки(СтруктураПоиска);
		
		Для каждого Строка Из НайденныеСтроки Цикл
		
			НоваяСтрока = ПФПотребность.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЭтапа, "Подразделение, ЭтапПроизводства");
			НоваяСтрока.Получатель = ?(Строка.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа,
				ДанныеЭтапа.Подразделение, Строка.Склад);
			
			ВыпускНаЭтапе = (Строка.СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
				И НЕ ЗначениеЗаполнено(Строка.СпецификацияРемонта);
			
			Если Таблица = "ВходящиеИзделия" ИЛИ ВыпускНаЭтапе Тогда
				
				НоваяСтрока.Спецификация = ДанныеСпецификации.Спецификация;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьНормативныйГрафик(Распоряжения, РассчитатьВФоне = Истина)
	
	Распоряжения = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(Распоряжения);
	
	Для каждого Распоряжение Из Распоряжения Цикл
		Если РассчитатьВФоне Тогда
			РегистрыСведений.НормативныйГрафикЭтаповПроизводства.РассчитатьГрафикВФоне(Распоряжение);
		Иначе
			РегистрыСведений.НормативныйГрафикЭтаповПроизводства.РассчитатьГрафик(Распоряжение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПартииПроизводстваДляДополнения(МассивРаспоряжений)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЭтапыПроизводства22.Распоряжение            КАК Распоряжение,
	|	ЭтапыПроизводства22.ПартияПроизводства      КАК ПартияПроизводства,
	|	МАКСИМУМ(ЭтапыПроизводства22.Запланировано) КАК Запланировано,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ГрафикЭтаповПроизводства22.ОкончаниеЭтапа ЕСТЬ НЕ NULL 
	|				ТОГДА ГрафикЭтаповПроизводства22.ОкончаниеЭтапа
	|			КОГДА НормативныйГрафикЭтаповПроизводства.ДлительностьДоВыпуска ЕСТЬ НЕ NULL 
	|				ТОГДА ВЫБОР
	|						КОГДА ЗаказыНаПроизводство22.РазмещениеВыпуска = &РазмещениеКНачалу
	|							ТОГДА ДОБАВИТЬКДАТЕ(ВЫБОР
	|										КОГДА ЗаказыНаПроизводство22.НачатьНеРанее > &ТекущаяДата
	|											ТОГДА ЗаказыНаПроизводство22.НачатьНеРанее
	|										ИНАЧЕ НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|									КОНЕЦ, СЕКУНДА, НормативныйГрафикЭтаповПроизводства.ДлительностьДоЗапуска + НормативныйГрафикЭтаповПроизводства.Ресурсоемкость)
	|						ИНАЧЕ ДОБАВИТЬКДАТЕ(ЗаказыНаПроизводство22.ДатаПотребности, СЕКУНДА, -НормативныйГрафикЭтаповПроизводства.ДлительностьДоВыпуска)
	|					КОНЕЦ
	|			ИНАЧЕ ЗаказыНаПроизводство22.ДатаПотребности
	|		КОНЕЦ) КАК ДатаВыпуска
	|ПОМЕСТИТЬ ВТЦепочки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапыПроизводства22
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства22
	|		ПО ЭтапыПроизводства22.Ссылка = ГрафикЭтаповПроизводства22.ЭтапПроизводства
	|			И (ГрафикЭтаповПроизводства22.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафикЭтаповПроизводства
	|		ПО ЭтапыПроизводства22.Ссылка = НормативныйГрафикЭтаповПроизводства.ЭтапПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2 КАК ЗаказыНаПроизводство22
	|		ПО ЭтапыПроизводства22.Распоряжение = ЗаказыНаПроизводство22.Ссылка
	|ГДЕ
	|	ЭтапыПроизводства22.Распоряжение В(&МассивРаспоряжений)
	|	И ЭтапыПроизводства22.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭтапыПроизводства22.Распоряжение,
	|	ЭтапыПроизводства22.ПартияПроизводства
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ЭтапыПроизводства22.ЗаполненоАвтоматически) = ИСТИНА И
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ЭтапыПроизводства22.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется), ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЦепочки.Распоряжение КАК Распоряжение,
	|	ВТЦепочки.ПартияПроизводства КАК ПартияПроизводства,
	|
	|	ВТЦепочки.ДатаВыпуска        КАК ДатаВыпуска,
	|	ВТЦепочки.Запланировано      КАК КоличествоПартийВыпуска,
	|
	|	ВТЦепочки.ПартияПроизводства.Спецификация                  КАК Спецификация,
	|	ВТЦепочки.ПартияПроизводства.Назначение                    КАК НазначениеПродукция,
	|	ВТЦепочки.ПартияПроизводства.ОсновноеИзделиеНоменклатура   КАК Номенклатура,
	|	ВТЦепочки.ПартияПроизводства.ОсновноеИзделиеХарактеристика КАК Характеристика
	|ИЗ
	|	ВТЦепочки КАК ВТЦепочки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВыпуска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭтапыПроизводства22.ПартияПроизводства КАК ПартияПроизводства,
	|	ЭтапыПроизводства22.Ссылка             КАК ЭтапПроизводства,
	|	ЭтапыПроизводства22.Этап               КАК Этап
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапыПроизводства22
	|ГДЕ
	|	ЭтапыПроизводства22.ПартияПроизводства В
	|			(ВЫБРАТЬ
	|				ВТЦепочки.ПартияПроизводства
	|			ИЗ
	|				ВТЦепочки)");
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("МассивРаспоряжений", МассивРаспоряжений);
	
	Запрос.УстановитьПараметр("РазмещениеКНачалу", Перечисления.СпособыПривязкиОперацийПроизводства.КНачалу);
	Запрос.УстановитьПараметр("РабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	МаксИндекс = РезультатыЗапроса.ВГраница();
	
	Результат = Новый Структура;
	
	Цепочки = РезультатыЗапроса[МаксИндекс-1].Выгрузить();
	Цепочки.Индексы.Добавить("Распоряжение, Спецификация, НазначениеПродукция");
	Результат.Вставить("Цепочки", Цепочки);
	
	ЭтапыЦепочек = РезультатыЗапроса[МаксИндекс].Выгрузить();
	ЭтапыЦепочек.Индексы.Добавить("ПартияПроизводства, Этап");
	Результат.Вставить("ЭтапыЦепочек", ЭтапыЦепочек);
	
	Возврат Результат;
	
КонецФункции

Функция ПодобратьПартиюПроизводстваДляДополнения(ДанныеСпецификации, ДанныеЦепочек)
	
	Результат = Неопределено;
	
	Если ДанныеСпецификации.МинимальнаяПартияВыпуска > 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Отбор = Новый Структура("Распоряжение, НазначениеПродукция, Спецификация");
	Отбор.Распоряжение        = ДанныеСпецификации.Распоряжение;
	Отбор.НазначениеПродукция = ДанныеСпецификации.НазначениеПродукция;
	Отбор.Спецификация        = ДанныеСпецификации.Спецификация;
	
	НайденныеСтроки = ДанныеЦепочек.Цепочки.НайтиСтроки(Отбор);
	Для каждого Цепочка Из НайденныеСтроки Цикл
		
		СоответствуетДатеВыпуска = ДанныеСпецификации.Окончание >= Цепочка.ДатаВыпуска;
		
		СоответствуетОптимальномуВыпуску = НЕ ЗначениеЗаполнено(ДанныеСпецификации.ОптимальнаяПартияВыпуска)
			ИЛИ (Цепочка.КоличествоПартийВыпуска + ДанныеСпецификации.КоличествоПартийВыпуска) <= ДанныеСпецификации.ОптимальнаяПартияВыпуска;
		
		МаксСрокПролеживания = ДанныеСпецификации.МаксимальныйСрокПролеживанияВДнях * 86400;
		СрокПролеживания = Цепочка.ДатаВыпуска + МаксСрокПролеживания;
		
		СоответствуетСрокуПролеживания = НЕ ДанныеСпецификации.ОграниченСрокПролеживания
			ИЛИ ДанныеСпецификации.Окончание <= СрокПролеживания;
			
		СоответствуетСоставу = НЕ ДанныеСпецификации.Параметрическая
			ИЛИ (Цепочка.Номенклатура = ДанныеСпецификации.ОсновноеИзделие.Номенклатура
				И Цепочка.Характеристика = ДанныеСпецификации.ОсновноеИзделие.Характеристика);
		
		Если СоответствуетДатеВыпуска
			И СоответствуетОптимальномуВыпуску
			И СоответствуетСрокуПролеживания
			И СоответствуетСоставу Тогда
			
			ДанныеСпецификации.ОбщаяПартияВыпуска = ПроизводствоКлиентСервер.Дробь(
				(Цепочка.КоличествоПартийВыпуска
					+ ДанныеСпецификации.КоличествоПартийВыпуска
				) * ДанныеСпецификации.ПартияВыпуска.Знаменатель, ДанныеСпецификации.ПартияВыпуска.Знаменатель);
			
			Результат = Цепочка.ПартияПроизводства;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ПодготовитьДанныеСпецификацииДляОбработки(ДанныеСпецификации)

	#Область ТипизацияПолей
	
	ОписаниеТипов = Новый ОписаниеТипов("ДокументСсылка.ЗаказНаПроизводство2_2");
	ДанныеСпецификации.Распоряжение = ОписаниеТипов.ПривестиЗначение(ДанныеСпецификации.Распоряжение);
	
	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.Назначения");
	ДанныеСпецификации.Назначение = ОписаниеТипов.ПривестиЗначение(ДанныеСпецификации.Назначение);
	
	#КонецОбласти

	#Область ДобавлениеСлужебныхПолей
	
	ДанныеСпецификации.Вставить("СхемаОбособления");
	ДанныеСпецификации.Вставить("ПартияПроизводства");
	
	ОписаниеТипов = Новый ОписаниеТипов("ДокументСсылка.ЗаказНаПроизводство2_2");
	ДанныеСпецификации.Этапы.Колонки.Добавить("Распоряжение", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.ПартииПроизводства");
	ДанныеСпецификации.Этапы.Колонки.Добавить("ПартияПроизводства", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("Булево");
	ДанныеСпецификации.Этапы.Колонки.Добавить("ЭтоНовый", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2");
	ДанныеСпецификации.Этапы.Колонки.Добавить("ЭтапПроизводства", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.Назначения");
	ДанныеСпецификации.Этапы.Колонки.Добавить("Назначение", ОписаниеТипов);
	ДанныеСпецификации.Этапы.Колонки.Добавить("НазначениеПродукция", ОписаниеТипов);
	ДанныеСпецификации.Этапы.Колонки.Добавить("НазначениеМатериалы", ОписаниеТипов);
	ДанныеСпецификации.Этапы.Колонки.Добавить("НазначениеПолуфабрикаты", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла);
	ДанныеСпецификации.Этапы.Колонки.Добавить("НомерПартииЗапуска", ОписаниеТипов);
	ДанныеСпецификации.Этапы.Колонки.Добавить("НомерЭтапаВПартииЗапуска", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("Булево");
	ДанныеСпецификации.Этапы.Колонки.Добавить("ЕстьМаркируемаяПродукцияГИСМ", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2, Дата",,, Новый КвалификаторыДаты);
	ДанныеСпецификации.Этапы.Колонки.Добавить("ПланироватьНеРанее", ОписаниеТипов);
	
	ДанныеСпецификации.Вставить("ДополнитьЦепочку", Ложь);
	ДанныеСпецификации.Вставить("ОбщаяПартияВыпуска");
	
	#КонецОбласти
	
КонецПроцедуры

Функция ПолучитьЭтапДляДополнения(ДанныеЦепочек, ПартияПроизводства, Этап)
	
	Отбор = Новый Структура("ПартияПроизводства, Этап", ПартияПроизводства, Этап);
	НайденныеСтроки = ДанныеЦепочек.ЭтапыЦепочек.НайтиСтроки(Отбор);
	
	Если НайденныеСтроки.ВГраница() = -1 Тогда
		
		ВызватьИсключение НСтр("ru = 'Созданная последовательность этапов не соответствует ресурсной спецификации';
								|en = 'Created stage sequence does not match the bill of resources'");
		
	КонецЕсли;
	
	Возврат НайденныеСтроки[0].ЭтапПроизводства;
	
КонецФункции

Процедура ЗаполнитьИЗаписатьНормативныйГрафикПослеФормированияЭтапов(Распоряжения, НормативныйГрафик, КлючиЭтапов)
	
	Если НормативныйГрафик.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Распоряжения = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(Распоряжения);
	
	Для каждого Строка Из НормативныйГрафик Цикл
		
		Если ТипЗнч(Строка.ЭтапПроизводства) = Тип("Число") Тогда
			
			НайденнаяСтрока = КлючиЭтапов.Найти(Строка.ЭтапПроизводства, "КлючСвязи");
			Если НЕ НайденнаяСтрока = Неопределено Тогда
				Строка.ЭтапПроизводства = НайденнаяСтрока.ЭтапПроизводства;
			Иначе
				ВызватьИсключение НСтр("ru = 'Ошибка заполнения нормативного графика';
										|en = 'An error occurred when filling in the target plan'"); 
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Распоряжения.Количество() = 1 Тогда
		
		РегистрыСведений.НормативныйГрафикЭтаповПроизводства.ЗаписатьРезультатыРасчетаГрафика(
				Распоряжения[0], НормативныйГрафик);
		
	Иначе
		
		НормативныйГрафик.Индексы.Добавить("Распоряжение");
		СтруктураПоиска = Новый Структура("Распоряжение");
	
		Для каждого Распоряжение Из Распоряжения Цикл
			
			СтруктураПоиска.Распоряжение = Распоряжение;
			ЭтапыГрафика = НормативныйГрафик.Скопировать(СтруктураПоиска);
			
			РегистрыСведений.НормативныйГрафикЭтаповПроизводства.ЗаписатьРезультатыРасчетаГрафика(
				Распоряжение, ЭтапыГрафика);
				
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьПризнакЕстьМаркируемаяПродукция(ДанныеСпецификаций)
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетМаркировкиПродукцииВГИСМ") Тогда
		Возврат
	КонецЕсли;
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	
	ОписаниеТипов = ОбщегоНазначения.ОписаниеТипаЧисло(10,0);
	ТаблицаДанных.Колонки.Добавить("КодСтроки", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	ТаблицаДанных.Колонки.Добавить("Номенклатура", ОписаниеТипов);
	
	КодСтроки = 0;
	СоответствиеКлючей = Новый Соответствие;
	СоответствиеДанных = Новый Соответствие;
	
	ИменаТЧ = Новый Массив;
	ИменаТЧ.Добавить("ВыходныеИзделия");
	ИменаТЧ.Добавить("ВозвратныеОтходы");

	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		Для каждого ДанныеЭтапа Из ДанныеСпецификации.Этапы Цикл
			СоответствиеКлючей.Вставить(ДанныеЭтапа.Этап,КодСтроки);
			СоответствиеДанных.Вставить(КодСтроки,ДанныеЭтапа);
			КодСтроки = КодСтроки + 1;
		КонецЦикла;
		Для каждого ИмяТЧ Из ИменаТЧ Цикл
			Для каждого Строка Из ДанныеСпецификации[ИмяТЧ] Цикл
				НоваяСтрока = ТаблицаДанных.Добавить();
				НоваяСтрока.КодСтроки    = СоответствиеКлючей[Строка.Этап];
				НоваяСтрока.Номенклатура = Строка.Номенклатура;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДанных.КодСтроки КАК КодСтроки,
	|	ТаблицаДанных.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТаблица
	|ИЗ
	|	&ТаблицаДанных КАК ТаблицаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.КодСтроки КАК КодСтроки
	|ИЗ
	|	ВТаблица КАК Таблица
	|ГДЕ
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).ПродукцияМаркируемаяДляГИСМ";
	
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеДанных[Выборка.КодСтроки].ЕстьМаркируемаяПродукцияГИСМ = Истина;
	КонецЦикла;
	
КонецПроцедуры

Функция НормативныйГрафикПоДаннымСпецификаций(ДанныеСпецификаций, Распоряжения, ВходящиеПотребности)
	
	ЭтапыИЗависимости = Справочники.РесурсныеСпецификации.ТаблицыДляРасчетаНормативногоГрафикаПроизводства(Распоряжения);
	Этапы             = ЭтапыИЗависимости.Этапы;
	Зависимости       = ЭтапыИЗависимости.Зависимости;
	
	СвязиКлючей = Новый ТаблицаЗначений;
	ИндексыКлючей = Новый Соответствие;
	
	ЗаполнитьСвязиИндексыКлючей(ДанныеСпецификаций, СвязиКлючей, ИндексыКлючей);
	
	ЗаполнитьЭтапыПоДаннымСпецификаций(ДанныеСпецификаций, Этапы, СвязиКлючей);
	
	Справочники.РесурсныеСпецификации.ДобавитьИндексыВТаблицуЭтаповДляРасчетаНормативногоГрафика(Этапы);
	
	ЗаполнитьЗависимостиПоДаннымСпецификаций(ДанныеСпецификаций, Этапы, Зависимости, ИндексыКлючей);
	
	РегистрыСведений.НормативныйГрафикЭтаповПроизводства.РассчитатьДлительностьДоЗапускаВыпуска(
		Этапы, Зависимости);
	
	Возврат Этапы;
	
КонецФункции

Процедура ЗаполнитьЭтапыПоДаннымСпецификаций(ДанныеСпецификаций, Этапы, СвязиКлючей)
	
	КлючСвязи = 1;
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		Для каждого Этап Из ДанныеСпецификации.Этапы Цикл
			
			Этап.КлючСвязи = КлючСвязи;
			
			НоваяСтрока = Этапы.Добавить();
			НоваяСтрока.ЭтапПроизводства = КлючСвязи;
			НоваяСтрока.Распоряжение     = ДанныеСпецификации.Распоряжение;
			НоваяСтрока.Ресурсоемкость = Этап.ДлительностьЭтапаВСекундах;
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Этап, "НомерЭтапа, НомерСледующегоЭтапа");
			
			Если (
					Этап.НомерЭтапа = 1
					ИЛИ ДанныеСпецификации.Этапы.Найти(Этап.НомерЭтапа, "НомерСледующегоЭтапа") = Неопределено
				  )
				И ДанныеСпецификации.ПланироватьНеРанее.Пустая()
				И ДанныеСпецификации.ЭтапыОбособитьВыпуск.Количество() = 0 Тогда
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("КлючСвязиПолучатель", ДанныеСпецификации.КлючСвязи);
				СтруктураПоиска.Вставить("ЭтапПолучатель", Этап.Этап);
				СтруктураПоиска.Вставить("ПланироватьНеРанееПолучателя", Ложь);
				НайденныеСтроки = СвязиКлючей.НайтиСтроки(СтруктураПоиска);
				
				НоваяСтрока.ПервыйЭтап = НайденныеСтроки.Количество() = 0;
				
			КонецЕсли;
			
			Если Этап.НомерСледующегоЭтапа = 0 Тогда
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("КлючСвязи", ДанныеСпецификации.КлючСвязи);
				СтруктураПоиска.Вставить("Этап", Этап.Этап);
				НайденныеСтроки = СвязиКлючей.НайтиСтроки(СтруктураПоиска);
				
				НоваяСтрока.ПоследнийЭтап = НайденныеСтроки.Количество() = 0;
				
			КонецЕсли;
			
			КлючСвязи = КлючСвязи + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСвязиИндексыКлючей(ДанныеСпецификаций, СвязиКлючей, ИндексыКлючей)
	
	СвязиКлючей.Колонки.Добавить("КлючСвязи", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	СвязиКлючей.Колонки.Добавить("Этап", Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства"));
	СвязиКлючей.Колонки.Добавить("КлючСвязиПолучатель", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	СвязиКлючей.Колонки.Добавить("ЭтапПолучатель", Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства"));
	СвязиКлючей.Колонки.Добавить("ПланироватьНеРанееПолучателя", Новый ОписаниеТипов("Булево"));
	
	// Значения соответствия: -1 (индекс неизвестен), -2 (связь добавлена),
	//	остальные значения - индекс в данных спецификации, связь не добавлена
	Ремонты = Новый Соответствие;
	
	Для Индекс = 0 По ДанныеСпецификаций.ВГраница() Цикл
		
		ДанныеСпецификации = ДанныеСпецификаций[Индекс];
		
		Если ИндексыКлючей[ДанныеСпецификации.КлючСвязи] = Неопределено Тогда
			
			ИндексыКлючей.Вставить(ДанныеСпецификации.КлючСвязи, Индекс);
			
		ИначеЕсли ТипЗнч(ИндексыКлючей[ДанныеСпецификации.КлючСвязи]) = Тип("Число") Тогда
			
			Массив = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИндексыКлючей[ДанныеСпецификации.КлючСвязи]);
			Массив.Добавить(Индекс);
			ИндексыКлючей[ДанныеСпецификации.КлючСвязи] = Массив;
			
		Иначе
			
			ИндексыКлючей[ДанныеСпецификации.КлючСвязи].Добавить(Индекс);
			
		КонецЕсли;
		
		Если ДанныеСпецификации.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Ремонт Тогда
			
			Если Ремонты[ДанныеСпецификации.Спецификация] = Неопределено Тогда
				
				Ремонты.Вставить(ДанныеСпецификации.Спецификация, Индекс);
				
			ИначеЕсли Ремонты[ДанныеСпецификации.Спецификация] = -1 Тогда
				
				Ремонты[ДанныеСпецификации.Спецификация] = -2;
				
				// Связь ремонт
				НоваяСтрока = СвязиКлючей.Добавить();
				НоваяСтрока.КлючСвязи           = ДанныеСпецификации.КлючСвязи;
				НоваяСтрока.КлючСвязиПолучатель = ДанныеСпецификации.КлючСвязи;
				НоваяСтрока.Этап                = ДанныеСпецификации.Этапы.Найти(1, "НомерЭтапа").Этап;
				НоваяСтрока.ЭтапПолучатель      = ДанныеСпецификации.Этапы.Найти(0, "НомерСледующегоЭтапа").Этап;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Для Сч = 1 По 2 Цикл
			
			Таблица = ?(Сч = 1, ДанныеСпецификации.ВыходныеИзделия, ДанныеСпецификации.ВозвратныеОтходы);
			
			Для каждого Строка Из Таблица Цикл
				
				Если ЗначениеЗаполнено(Строка.КлючСвязиПолучатель) Тогда
					
					Если Сч = 1 И ДанныеСпецификации.ТипПроизводственногоПроцесса
						= Перечисления.ТипыПроизводственныхПроцессов.Ремонт Тогда
						Продолжить;
					КонецЕсли;
					
					Если Сч = 2 И НЕ Строка.СпецификацияРемонта.Пустая() Тогда
						
						Если Ремонты[Строка.СпецификацияРемонта] = Неопределено Тогда
							
							Ремонты.Вставить(Строка.СпецификацияРемонта, -1);
							
						ИначеЕсли Ремонты[Строка.СпецификацияРемонта] >= 0 Тогда
							
							ЗначенияЗаполнения = ДанныеСпецификаций[Ремонты[Строка.СпецификацияРемонта]];
							
							// Связь ремонт
							НоваяСтрока = СвязиКлючей.Добавить();
							НоваяСтрока.КлючСвязи           = ЗначенияЗаполнения.КлючСвязи;
							НоваяСтрока.КлючСвязиПолучатель = ЗначенияЗаполнения.КлючСвязи;
							НоваяСтрока.Этап                = ЗначенияЗаполнения.Этапы.Найти(1, "НомерЭтапа").Этап;
							НоваяСтрока.ЭтапПолучатель      = ЗначенияЗаполнения.Этапы.Найти(0, "НомерСледующегоЭтапа").Этап;
							
							Ремонты[Строка.СпецификацияРемонта] = -2;
							
						КонецЕсли;
						
					Иначе
						
						НоваяСтрока = СвязиКлючей.Добавить();
						НоваяСтрока.КлючСвязи = ДанныеСпецификации.КлючСвязи;
						НоваяСтрока.Этап = Строка.Этап;
						НоваяСтрока.КлючСвязиПолучатель = Строка.КлючСвязиПолучатель;
						НоваяСтрока.ЭтапПолучатель = Строка.ЭтапПолучательИзделия;
						НоваяСтрока.ПланироватьНеРанееПолучателя = НЕ ДанныеСпецификации.ПланироватьНеРанее.Пустая();
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Строка.ЭтапПотребитель) Тогда
					
					НоваяСтрока = СвязиКлючей.Добавить();
					НоваяСтрока.КлючСвязи = ДанныеСпецификации.КлючСвязи;
					НоваяСтрока.Этап = Строка.Этап;
					НоваяСтрока.КлючСвязиПолучатель = -1;
					
				КонецЕсли;
				
			КонецЦикла;
		
		КонецЦикла;
		
	КонецЦикла;
	
	СвязиКлючей.Свернуть("КлючСвязи, Этап, КлючСвязиПолучатель, ЭтапПолучатель, ПланироватьНеРанееПолучателя");
	
	СвязиКлючей.Индексы.Добавить("КлючСвязи, Этап");
	СвязиКлючей.Индексы.Добавить("КлючСвязиПолучатель, ЭтапПолучатель, ПланироватьНеРанееПолучателя");
	
КонецПроцедуры

Процедура ЗаполнитьЗависимостиПоДаннымСпецификаций(ДанныеСпецификаций, Этапы, Зависимости, ИндексыКлючей)
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		Справочники.РесурсныеСпецификации.ЗаполнитьВнутренниеЗависимостиЭтапов(
			ДанныеСпецификации.Этапы,
			Зависимости);
		
		Для Сч = 1 По 2 Цикл
			
			Таблица = ?(Сч = 1, ДанныеСпецификации.ВыходныеИзделия, ДанныеСпецификации.ВозвратныеОтходы);
			
			Для каждого Строка Из Таблица Цикл
				
				Если ЗначениеЗаполнено(Строка.КлючСвязиПолучатель) Тогда
					
					Если ТипЗнч(ИндексыКлючей[Строка.КлючСвязиПолучатель]) = Тип("Число") Тогда
						
						НоваяСтрока = Зависимости.Добавить();
						НоваяСтрока.Этап          = ДанныеСпецификации.Этапы.Найти(Строка.Этап, "Этап").КлючСвязи;
						НоваяСтрока.СледующийЭтап = ДанныеСпецификаций[ИндексыКлючей[Строка.КлючСвязиПолучатель]].
							Этапы.Найти(Строка.ЭтапПолучательИзделия, "Этап").КлючСвязи;
						
					Иначе
						
						Для каждого Индекс Из ИндексыКлючей[Строка.КлючСвязиПолучатель] Цикл
							
							НоваяСтрока = Зависимости.Добавить();
							НоваяСтрока.Этап          = ДанныеСпецификации.Этапы.Найти(Строка.Этап, "Этап").КлючСвязи;
							НоваяСтрока.СледующийЭтап = ДанныеСпецификаций[Индекс].
								Этапы.Найти(Строка.ЭтапПолучательИзделия, "Этап").КлючСвязи;
							
						КонецЦикла;
						
					КонецЕсли;
					
				ИначеЕсли ЗначениеЗаполнено(Строка.ЭтапПотребитель) Тогда
					
					НоваяСтрока = Зависимости.Добавить();
					НоваяСтрока.Этап          = ДанныеСпецификации.Этапы.Найти(Строка.Этап, "Этап").КлючСвязи;
					НоваяСтрока.СледующийЭтап = Строка.ЭтапПотребитель;
					
					СтрокаЭтап = Этапы.Найти(Строка.ЭтапПотребитель, "ЭтапПроизводства");
					Если НЕ СтрокаЭтап = Неопределено Тогда
						СтрокаЭтап.ПервыйЭтап = Ложь;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если НЕ ДанныеСпецификации.ПланироватьНеРанее.Пустая() Тогда
			
			Последователь = ДанныеСпецификации.Этапы.Найти(1, "НомерЭтапа");
				
			Если Последователь <> Неопределено Тогда
				
				Если ТипЗнч(ИндексыКлючей[ДанныеСпецификации.КлючСвязиПланироватьНеРанее]) = Тип("Число") Тогда
					
					Предшественник = ДанныеСпецификаций[ИндексыКлючей[ДанныеСпецификации.КлючСвязиПланироватьНеРанее]].
						Этапы.Найти(ДанныеСпецификации.ПланироватьНеРанее, "Этап");
			
			 		НоваяСтрока = Зависимости.Добавить();
					НоваяСтрока.Этап = Предшественник.КлючСвязи;
					НоваяСтрока.СледующийЭтап = Последователь.КлючСвязи;
					
				Иначе
					
					Для каждого Индекс Из ИндексыКлючей[ДанныеСпецификации.КлючСвязиПланироватьНеРанее] Цикл
						
						Предшественник = ДанныеСпецификаций[Индекс].Этапы.Найти(ДанныеСпецификации.ПланироватьНеРанее, "Этап");
						
			 			НоваяСтрока = Зависимости.Добавить();
						НоваяСтрока.Этап = Предшественник.КлючСвязи;
						НоваяСтрока.СледующийЭтап = Последователь.КлючСвязи;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Для каждого Этап Из ДанныеСпецификации.ЭтапыОбособитьВыпуск Цикл
			
			НоваяСтрока = Зависимости.Добавить();
			НоваяСтрока.Этап = Этап;
			НоваяСтрока.СледующийЭтап = ДанныеСпецификации.Этапы.Найти(1, "НомерЭтапа").КлючСвязи;
			
			СтрокаЭтап = Этапы.Найти(Этап, "ЭтапПроизводства");
			Если НЕ СтрокаЭтап = Неопределено Тогда
				СтрокаЭтап.ПоследнийЭтап = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСрокиИУпорядочитьДанныеСпецификаций(ДанныеСпецификаций, НормативныйГрафик)
	
	ТаблицаСортировки = Новый ТаблицаЗначений;
	ТаблицаСортировки.Колонки.Добавить("Начало", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты));
	ТаблицаСортировки.Колонки.Добавить("Окончание", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты));
	ТаблицаСортировки.Колонки.Добавить("ДанныеСпецификации");
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		ДанныеСпецификации.Вставить("Начало", '39991231');
		ДанныеСпецификации.Вставить("Окончание", '00010101');
		
		Границы = Справочники.РесурсныеСпецификации.ГраницыОтсчетаДатПоНормативномуГрафику(ДанныеСпецификации);
		
		Для каждого Этап Из ДанныеСпецификации.Этапы Цикл
			
			ЗаписьГрафика = НормативныйГрафик.Найти(Этап.КлючСвязи, "ЭтапПроизводства");
			Если ЗаписьГрафика = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Этап.ЖелаемаяДатаОбеспечения = Границы.КНачалу + ЗаписьГрафика.ДлительностьДоЗапуска;
			
			Если ДанныеСпецификации.РазмещениеВыпуска = Перечисления.СпособыПривязкиОперацийПроизводства.КНачалу Тогда
				Начало = Границы.КНачалу + ЗаписьГрафика.ДлительностьДоЗапуска;
				Окончание = Начало + ЗаписьГрафика.Ресурсоемкость;
			Иначе
				Окончание = Границы.КОкончанию - ЗаписьГрафика.ДлительностьДоВыпуска;
				Начало = Окончание - ЗаписьГрафика.Ресурсоемкость;
			КонецЕсли;
			
			ДанныеСпецификации.Начало = Мин(ДанныеСпецификации.Начало, Начало);
			ДанныеСпецификации.Окончание = Макс(ДанныеСпецификации.Окончание, Окончание);
			
		КонецЦикла;
		
		НоваяСтрока = ТаблицаСортировки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСпецификации, "Начало, Окончание");
		НоваяСтрока.ДанныеСпецификации = ДанныеСпецификации;
		
	КонецЦикла;
	
	ТаблицаСортировки.Сортировать("Начало, Окончание");
	
	ДанныеСпецификаций.Очистить();
	
	Для Индекс = 0 По ТаблицаСортировки.Количество()-1 Цикл
		
		ДанныеСпецификаций.Добавить(ТаблицаСортировки[Индекс].ДанныеСпецификации);
		
	КонецЦикла;
	
	ТаблицаСортировки = Неопределено;
	
КонецПроцедуры

Процедура ОбособитьВыпускПодРазборку(ДанныеСпецификации, ТаблицыСвязей)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", ДанныеСпецификации.ОсновноеИзделие.Номенклатура);
	СтруктураПоиска.Вставить("Характеристика", ДанныеСпецификации.ОсновноеИзделие.Характеристика);
	
	НайденныеСтроки = ДанныеСпецификации.ВходящиеИзделия.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.ВГРаница() = -1 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Изделия.Ссылка                   КАК Ссылка,
		|	Изделия.Номенклатура             КАК Номенклатура,
		|	Изделия.Характеристика           КАК Характеристика,
		|	Изделия.Количество               КАК Количество,
		|	Изделия.Спецификация             КАК Спецификация,
		|	Изделия.ОбработатьПоСпецификации КАК ОбработатьПоСпецификации,
		|	ЛОЖЬ                             КАК ФиксированнаяСтоимость,
		|	Изделия.НомерСтроки - 1          КАК ИндексСтроки,
		|	&КлючСвязи                       КАК КлючСвязиПолучатель,
		|	&ЭтапПолучатель                  КАК ЭтапПолучательИзделия
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Изделия
		|ГДЕ
		|	Изделия.Ссылка В(&Этапы)
		|	И Изделия.Номенклатура = &Номенклатура
		|	И Изделия.Характеристика = &Характеристика
		|	И Изделия.ОбработатьПоСпецификации
		|	И Изделия.ЭтапПотребитель = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	И НЕ Изделия.Произведено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Изделия.Ссылка,
		|	Изделия.Номенклатура,
		|	Изделия.Характеристика,
		|	Изделия.Количество,
		|	Изделия.Спецификация,
		|	Изделия.ОбработатьПоСпецификации,
		|	ИСТИНА,
		|	Изделия.НомерСтроки - 1,
		|	&КлючСвязи,
		|	&ЭтапПолучатель
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Изделия
		|ГДЕ
		|	Изделия.Ссылка В(&Этапы)
		|	И Изделия.Номенклатура = &Номенклатура
		|	И Изделия.Характеристика = &Характеристика
		|	И Изделия.ОбработатьПоСпецификации
		|	И Изделия.ЭтапПотребитель = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	И НЕ Изделия.Произведено
		|ИТОГИ ПО
		|	Ссылка");
	
	Запрос.УстановитьПараметр("Этапы", ДанныеСпецификации.ЭтапыОбособитьВыпуск);
	Запрос.УстановитьПараметр("Номенклатура", ДанныеСпецификации.ОсновноеИзделие.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", ДанныеСпецификации.ОсновноеИзделие.Характеристика);
	Запрос.УстановитьПараметр("КлючСвязи", ДанныеСпецификации.КлючСвязи);
	Запрос.УстановитьПараметр("ЭтапПолучатель", НайденныеСтроки[0].Этап);
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИтоги.Следующий() Цикл
		
		ТаблицыСвязей.ПФВыпуск.Очистить();
		
		Выборка = ВыборкаИтоги.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ТаблицыСвязей.ПФВыпуск.Добавить(), Выборка);
		КонецЦикла;
		
		Попытка
		
			ДокументОбъект = ВыборкаИтоги.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Заблокировать();
			
			ДокументОбъект.ОбособитьВыпускПодРазборку(ТаблицыСвязей);
			
			ДокументОбъект.ОтключитьЗаполнениеНормативногоГрафикаПриЗаписи();
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
			ПрименитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
			
		Исключение
			
			ОтменитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
		
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Формирование этапов';
					|en = 'Production stage. Stage generation'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПартиюПроизводства(ПартииПроизводства, Документ, Код, Ссылка, ПоляПартии)
	
	Партия = ПартииПроизводства.Добавить();
	
	Партия.Код = Код;
	Партия.Документ = Документ;
	Партия.Ссылка = Ссылка;
	
	ЗаполнитьЗначенияСвойств(Партия, ПоляПартии);
	
КонецПроцедуры

#КонецОбласти

#Область Заполнение

Процедура ЗаполнитьРасходМатериаловИРаботПоДаннымОбеспечения(Объект, Дополнить = Ложь) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Ссылка                                             КАК Ссылка,
	|	&Подразделение                                      КАК Подразделение,
	|	ОбеспечениеМатериаламиИРаботами.НомерСтроки         КАК НомерСтроки,
	|	ОбеспечениеМатериаламиИРаботами.Номенклатура        КАК Номенклатура,
	|	ОбеспечениеМатериаламиИРаботами.Характеристика      КАК Характеристика,
	|	ОбеспечениеМатериаламиИРаботами.Склад               КАК Склад,
	|	ОбеспечениеМатериаламиИРаботами.Серия               КАК Серия,
	|	ОбеспечениеМатериаламиИРаботами.ВариантОбеспечения  КАК ВариантОбеспечения,
	|	ОбеспечениеМатериаламиИРаботами.СтатьяКалькуляции   КАК СтатьяКалькуляции,
	|	ОбеспечениеМатериаламиИРаботами.Упаковка            КАК Упаковка,
	|	ОбеспечениеМатериаламиИРаботами.Количество          КАК Количество,
	|	ОбеспечениеМатериаламиИРаботами.КоличествоУпаковок  КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Обеспечение
	|ИЗ
	|	&ОбеспечениеМатериаламиИРаботами КАК ОбеспечениеМатериаламиИРаботами
	|ГДЕ
	|	ОбеспечениеМатериаламиИРаботами.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ОбеспечениеМатериаламиИРаботами.Количество <> 0
	|	И ОбеспечениеМатериаламиИРаботами.ВариантОбеспечения В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка                                    КАК Ссылка,
	|	&Подразделение                             КАК Подразделение,
	|	РасходМатериаловИРабот.НомерСтроки         КАК НомерСтроки,
	|	РасходМатериаловИРабот.Номенклатура        КАК Номенклатура,
	|	РасходМатериаловИРабот.Характеристика      КАК Характеристика,
	|	РасходМатериаловИРабот.Серия               КАК Серия,
	|	РасходМатериаловИРабот.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	РасходМатериаловИРабот.СтатьяКалькуляции   КАК СтатьяКалькуляции,
	|	РасходМатериаловИРабот.Упаковка            КАК Упаковка,
	|	РасходМатериаловИРабот.ДатаРасхода         КАК ДатаРасхода,
	|	РасходМатериаловИРабот.Количество          КАК Количество,
	|	РасходМатериаловИРабот.КоличествоУпаковок  КАК КоличествоУпаковок
	|ПОМЕСТИТЬ РасходЗаполненныеСерии
	|ИЗ
	|	&РасходМатериаловИРабот КАК РасходМатериаловИРабот
	|ГДЕ
	|	РасходМатериаловИРабот.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И РасходМатериаловИРабот.Количество <> 0
	// Выбираем только правильно заполненные серии
	|	И РасходМатериаловИРабот.СтатусУказанияСерий В (0, 2, 14)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка                           КАК Ссылка,
	|	ЭкономияМатериалов.Номенклатура   КАК Номенклатура,
	|	ЭкономияМатериалов.Характеристика КАК Характеристика,
	|	ЭкономияМатериалов.Серия          КАК Серия,
	|	ЭкономияМатериалов.Количество     КАК Количество
	|ПОМЕСТИТЬ Экономия
	|ИЗ
	|	&ЭкономияМатериалов КАК ЭкономияМатериалов
	|ГДЕ
	|	ЭкономияМатериалов.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ЭкономияМатериалов.Количество <> 0");
	
	Запрос.УстановитьПараметр("Ссылка"                          , Объект.Ссылка);
	Запрос.УстановитьПараметр("Подразделение"                   , Объект.Подразделение);
	Запрос.УстановитьПараметр("ОбеспечениеМатериаламиИРаботами" , Объект.ОбеспечениеМатериаламиИРаботами.Выгрузить());
	Запрос.УстановитьПараметр("РасходМатериаловИРабот"          , 
		Объект.РасходМатериаловИРабот.Выгрузить(?(Дополнить, Неопределено, Новый Массив)));
	Запрос.УстановитьПараметр("ЭкономияМатериалов"              , Объект.ЭкономияМатериалов.Выгрузить());
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Если Объект.РасходОднойДатой Тогда
		ДатаОперации = Объект.ДатаРасхода;
	ИначеЕсли Объект.ФактическоеОкончаниеЭтапа <> '000101010000'
		И Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЭтаповПроизводства2_2.Завершен") Тогда
		ДатаОперации = Объект.ФактическоеОкончаниеЭтапа;
	Иначе
		ДатаОперации = НачалоДня(ТекущаяДатаСеанса());
	КонецЕсли;
	ПараметрыУказанияСерий = ПараметрыУказанияСерий(Объект).РасходМатериаловИРабот;
	
	Результат = РассчитатьРасходМатериалов(МенеджерВременныхТаблиц, ДатаОперации);
	
	Объект.РасходМатериаловИРабот.Загрузить(Результат);
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(Объект, ПараметрыУказанияСерий);
	
КонецПроцедуры

Процедура ЗаполнитьНеизрасходованныеМатериалы(Объект) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&Ссылка                                             КАК Ссылка,
	|	&Подразделение                                      КАК Подразделение,
	|	ОбеспечениеМатериаламиИРаботами.НомерСтроки         КАК НомерСтроки,
	|	ОбеспечениеМатериаламиИРаботами.Номенклатура        КАК Номенклатура,
	|	ОбеспечениеМатериаламиИРаботами.Характеристика      КАК Характеристика,
	|	ОбеспечениеМатериаламиИРаботами.Склад               КАК Склад,
	|	ОбеспечениеМатериаламиИРаботами.Серия               КАК Серия,
	|	ОбеспечениеМатериаламиИРаботами.ВариантОбеспечения  КАК ВариантОбеспечения,
	|	ОбеспечениеМатериаламиИРаботами.СтатьяКалькуляции   КАК СтатьяКалькуляции,
	|	ОбеспечениеМатериаламиИРаботами.Упаковка            КАК Упаковка,
	|	ОбеспечениеМатериаламиИРаботами.Количество          КАК Количество,
	|	ОбеспечениеМатериаламиИРаботами.КоличествоУпаковок  КАК КоличествоУпаковок
	|	
	|ПОМЕСТИТЬ Обеспечение
	|ИЗ
	|	&ОбеспечениеМатериаламиИРаботами КАК ОбеспечениеМатериаламиИРаботами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	РасходМатериаловИРабот.НомерСтроки    КАК НомерСтроки,
	|	РасходМатериаловИРабот.Номенклатура   КАК Номенклатура,
	|	РасходМатериаловИРабот.Характеристика КАК Характеристика,
	|	РасходМатериаловИРабот.Количество     КАК Количество
	|	
	|ПОМЕСТИТЬ Расход
	|ИЗ
	|	&РасходМатериаловИРабот КАК РасходМатериаловИРабот
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("ОбеспечениеМатериаламиИРаботами", Объект.ОбеспечениеМатериаламиИРаботами.Выгрузить());
	Запрос.УстановитьПараметр("РасходМатериаловИРабот", Объект.РасходМатериаловИРабот.Выгрузить());
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Если Объект.РасходОднойДатой Тогда
		ДатаОперации = Объект.ДатаРасхода;
	ИначеЕсли Объект.ФактическоеОкончаниеЭтапа <> '000101010000'
		И Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЭтаповПроизводства2_2.Завершен") Тогда
		ДатаОперации = Объект.ФактическоеОкончаниеЭтапа;
	Иначе
		ДатаОперации = НачалоДня(ТекущаяДатаСеанса());
	КонецЕсли;
	
	Результат = РассчитатьЭкономиюМатериалов(МенеджерВременныхТаблиц, ДатаОперации);
	Объект.ЭкономияМатериалов.Загрузить(Результат);
	
КонецПроцедуры

Процедура УстановитьДействиеОтгрузить(Объект) Экспорт
	
	Если Объект.НеОтгружатьЧастями Тогда
		ДатаОперации = Объект.ДатаОтгрузки;
	Иначе
		ДатаОперации = НачалоДня(ТекущаяДатаСеанса());
	КонецЕсли;
	
	СтрокиСПустымСкладом = Новый Массив;
	
	Для каждого ДанныеСтроки Из Объект.ОбеспечениеМатериаламиИРаботами Цикл
		
		Если ДанныеСтроки.Производится 
			И ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно Тогда
			
			ДанныеСтроки.ДатаОтгрузки = ДатаОперации;
			ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно;
			
		ИначеЕсли НЕ ДанныеСтроки.Производится 
			И ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.Отгрузить
			И ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно Тогда
			
			ДанныеСтроки.ДатаОтгрузки = ДатаОперации;
			ДанныеСтроки.ВариантОбеспечения = ?(ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно, 
													Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно, 
													Перечисления.ВариантыОбеспечения.Отгрузить);
													
			Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Склад) Тогда
				// Склад может быть не заполнен если не было запланировано обеспечение
				// Нужно его заполнить значением по умолчанию.
				СтрокиСПустымСкладом.Добавить(ДанныеСтроки);
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	Если СтрокиСПустымСкладом.Количество() <> 0 Тогда
		
		// Заполнение пустых складов
		
		ТаблицаМатериалов = Новый ТаблицаЗначений;
		ТаблицаМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаМатериалов.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		
		Для каждого ДанныеСтроки Из СтрокиСПустымСкладом Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаМатериалов.Добавить(), ДанныеСтроки);
		КонецЦикла;
		
		ПараметрыОбеспечения = ОбеспечениеПроизводства.ПараметрыОбеспеченияСпискаНоменклатуры(
									ТаблицаМатериалов,
									Объект.Подразделение);
		ПараметрыОбеспечения.Индексы.Добавить("Номенклатура,Характеристика");
		
		СтруктураПоиска = Новый Структура("Номенклатура,Характеристика");
		Для каждого ДанныеСтроки Из СтрокиСПустымСкладом Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ДанныеСтроки);
			СписокСтрок = ПараметрыОбеспечения.НайтиСтроки(СтруктураПоиска);
			ДанныеСтроки.Склад = СписокСтрок[0].Склад;
			
			Если ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.Отгрузить
				И ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно Тогда
				
				ДанныеСтроки.ВариантОбеспечения = ?(ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно,
														Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно,
														Перечисления.ВариантыОбеспечения.Отгрузить);
			КонецЕсли; 
			
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОтменитьДействиеОтгрузить(Объект) Экспорт
	
	Для каждого ДанныеСтроки Из Объект.ОбеспечениеМатериаламиИРаботами Цикл
		
		Если ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно Тогда
			
			ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно;
			
		ИначеЕсли ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить Тогда
			
			ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Требуется;
													
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОтменитьДействиеРезервировать(Объект) Экспорт
	
	Для каждого ДанныеСтроки Из Объект.ОбеспечениеМатериаламиИРаботами Цикл
		
		Если ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.СоСклада
			ИЛИ ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ИзЗаказов Тогда
			
			ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Требуется;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция РассчитатьРасходМатериалов(МенеджерВременныхТаблиц, ДатаРасхода = '00010101') Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Обеспечение.Ссылка                КАК Ссылка,
	|	Обеспечение.Подразделение         КАК Подразделение,
	|	Обеспечение.Номенклатура          КАК Номенклатура,
	|	Обеспечение.Характеристика        КАК Характеристика,
	|	Обеспечение.Серия                 КАК Серия,
	|	Обеспечение.СтатьяКалькуляции     КАК СтатьяКалькуляции,
	|	Обеспечение.Упаковка              КАК Упаковка,
	|	СУММА(Обеспечение.Количество)     КАК Количество
	|ИЗ
	|	Обеспечение КАК Обеспечение
	|ГДЕ
	|	Обеспечение.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИЛИ ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик =
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Подразделение,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	СтатьяКалькуляции,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Экономия.Ссылка            КАК Ссылка,
	|	Экономия.Номенклатура      КАК Номенклатура,
	|	Экономия.Характеристика    КАК Характеристика,
	|	Экономия.Серия             КАК Серия,
	|	СУММА(Экономия.Количество) КАК Количество
	|ИЗ
	|	Экономия КАК Экономия
	|ГДЕ
	|	Экономия.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИЛИ ВЫРАЗИТЬ(Экономия.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик =
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|		
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходЗаполненныеСерии.Ссылка              КАК Ссылка,
	|	РасходЗаполненныеСерии.Подразделение       КАК Подразделение,
	|	РасходЗаполненныеСерии.НомерСтроки         КАК НомерСтроки,
	|	РасходЗаполненныеСерии.Номенклатура        КАК Номенклатура,
	|	РасходЗаполненныеСерии.Характеристика      КАК Характеристика,
	|	РасходЗаполненныеСерии.Серия               КАК Серия,
	|	РасходЗаполненныеСерии.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	РасходЗаполненныеСерии.СтатьяКалькуляции   КАК СтатьяКалькуляции,
	|	РасходЗаполненныеСерии.Упаковка            КАК Упаковка,
	|	РасходЗаполненныеСерии.ДатаРасхода         КАК ДатаРасхода,
	|	РасходЗаполненныеСерии.Количество          КАК Количество
	|ИЗ
	|	РасходЗаполненныеСерии КАК РасходЗаполненныеСерии
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасходЗаполненныеСерии.Ссылка,
	|	РасходЗаполненныеСерии.НомерСтроки
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	КоличествоПакетов = Результат.Количество();
	
	ОтгруженныеМатериалы				= Результат[КоличествоПакетов - 3].Выгрузить();
	ОтгруженныеМатериалы.Индексы.Добавить("Ссылка, Номенклатура, Характеристика, Серия, СтатьяКалькуляции");
	ОтгруженныеМатериалы.Индексы.Добавить("Ссылка, Номенклатура, Характеристика, Серия");
	ОтгруженныеМатериалы.Индексы.Добавить("Ссылка, Номенклатура, Характеристика");
	
	ЭкономияМатериалов					= Результат[КоличествоПакетов - 2].Выгрузить();
	РасходМатериаловИРаботКОбеспечению	= Результат[КоличествоПакетов - 1].Выгрузить();
	
	РасходМатериаловИРабот = УправлениеПроизводством.ТабличнаяЧастьДокументаЭтапПроизводства("РасходМатериаловИРабот");
	ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(РасходМатериаловИРабот, РасходМатериаловИРаботКОбеспечению); 
	
	// Обеспечим расход в разрезе серий и статей калькуляции
	СтруктураОтбора = Новый Структура("Ссылка, Номенклатура, Характеристика, Серия, СтатьяКалькуляции");	
	СкорректироватьТаблицы(ОтгруженныеМатериалы, РасходМатериаловИРаботКОбеспечению, СтруктураОтбора);
	
	// Обеспечим экономию в разрезе серий
	СтруктураОтбора = Новый Структура("Ссылка, Номенклатура, Характеристика, Серия");	
	СкорректироватьТаблицы(ОтгруженныеМатериалы, ЭкономияМатериалов, СтруктураОтбора);
	
	// Обеспечим остаток расхода из пустых серий
	ПоляОтбора      = "Ссылка, Номенклатура, Характеристика";
	СтруктураОтбора = Новый Структура(ПоляОтбора);
	СтруктураОтбора.Вставить("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	СкорректироватьТаблицы(ОтгруженныеМатериалы, РасходМатериаловИРаботКОбеспечению, СтруктураОтбора, ПоляОтбора);
	
	// Обеспечим остатки экономии без учета серий
	СтруктураОтбора = Новый Структура("Ссылка, Номенклатура, Характеристика");
	СкорректироватьТаблицы(ОтгруженныеМатериалы, ЭкономияМатериалов, СтруктураОтбора);
	
	// Обеспечим остатки расхода без учета серий
	СтруктураОтбора = Новый Структура("Ссылка, Номенклатура, Характеристика");
	СкорректироватьТаблицы(ОтгруженныеМатериалы, РасходМатериаловИРаботКОбеспечению, СтруктураОтбора);
	
	// Перенесем остатки обеспечения в расход и перезаполним серии
	Для Каждого Строка Из ОтгруженныеМатериалы Цикл
		
		Если Строка.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = РасходМатериаловИРабот.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.ДатаРасхода = ДатаРасхода;
		НоваяСтрока.НомерСтроки = РасходМатериаловИРабот.Количество();
		
	КонецЦикла;
	
	// Пересчитаем количество упаковок в расходе
	СтруктураДейтсвий = Новый Структура;
	СтруктураДейтсвий.Вставить(
		"ПересчитатьКоличествоУпаковок",
		ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаКоличестваУпаковок());
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(РасходМатериаловИРабот, СтруктураДейтсвий, КэшированныеЗначения);
	
	Возврат РасходМатериаловИРабот;
	
КонецФункции

Функция РассчитатьЭкономиюМатериалов(МенеджерВременныхТаблиц, ДатаОперации = '00010101') Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Обеспечение.Ссылка               КАК Ссылка,
	|	Обеспечение.Номенклатура         КАК Номенклатура,
	|	Обеспечение.Характеристика       КАК Характеристика,
	|	МАКСИМУМ(Обеспечение.Склад)      КАК Склад,
	|	МАКСИМУМ(Обеспечение.Упаковка)   КАК Упаковка,
	|	МАКСИМУМ(ВЫБОР
	|				КОГДА Обеспечение.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|														ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ)                       КАК Обособить,
	|	МИНИМУМ(Обеспечение.НомерСтроки) КАК НомерСтроки,
	|	СУММА(Обеспечение.Количество)    КАК Количество
	|ПОМЕСТИТЬ ОбеспечениеИтого
	|ИЗ
	|	Обеспечение КАК Обеспечение
	|ГДЕ
	|	Обеспечение.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И Обеспечение.Количество <> 0
	|	И ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Обеспечение.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ИЛИ ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать))
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расход.Ссылка            КАК Ссылка,
	|	Расход.Номенклатура      КАК Номенклатура,
	|	Расход.Характеристика    КАК Характеристика,
	|	СУММА(Расход.Количество) КАК Количество
	|ПОМЕСТИТЬ РасходИтого
	|ИЗ
	|	Расход КАК Расход
	|ГДЕ
	|	Расход.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И Расход.Количество <> 0
	|	И ВЫРАЗИТЬ(Расход.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Расход.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				ИЛИ ВЫРАЗИТЬ(Расход.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать))
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Обеспечение.Ссылка              КАК Ссылка,
	|	&ДатаОперации                   КАК ДатаОперации,
	|	Обеспечение.Номенклатура        КАК Номенклатура,
	|	Обеспечение.Характеристика      КАК Характеристика,
	|	Обеспечение.Склад               КАК Получатель,
	|	Обеспечение.Обособить           КАК Обособить,
	|	Обеспечение.Упаковка            КАК Упаковка,
	|	Обеспечение.Количество - ЕСТЬNULL(Расход.Количество, 0) КАК Количество,
	|	(Обеспечение.Количество - ЕСТЬNULL(Расход.Количество, 0)) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоУпаковок
	|ИЗ
	|	ОбеспечениеИтого КАК Обеспечение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходИтого КАК Расход
	|		ПО Расход.Ссылка = Обеспечение.Ссылка
	|			И (Расход.Номенклатура = Обеспечение.Номенклатура)
	|			И (Расход.Характеристика = Обеспечение.Характеристика)
	|ГДЕ
	|	Обеспечение.Количество - ЕСТЬNULL(Расход.Количество, 0) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Обеспечение.Ссылка,
	|	Обеспечение.НомерСтроки");
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОперации);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ВЫРАЗИТЬ(Обеспечение.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения)",
		"ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура)"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область Назначения

// Возврашает шаблон для генерации назначения товаров в документе.
//
// Параметры:
// 		Объект - ДокументОбъект.ЭтапПроизводства2_2, ДанныеФормыСтруктура - Этап производства, по которому необходимо получить шаблон назначения.
//
// Возвращаемое значение:
// 		Структура - (см. функцию Справочники.Назначения.ШаблонНового).
//
Функция ШаблонНазначения(Объект) Экспорт
	
	ШаблонНазначения = Справочники.Назначения.ШаблонНового();
	
	Если НаправленияДеятельностиСервер.ЭтоНаправлениеДеятельностиСОбособлениемТоваровИРабот(Объект.НаправлениеДеятельности) Тогда
		ШаблонНазначения.НаправлениеДеятельности = Объект.НаправлениеДеятельности;
	КонецЕсли;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья Тогда
		
		ШаблонНазначения.Партнер = Объект.Партнер;
		ШаблонНазначения.Договор = Объект.Договор;
		
		ШаблонНазначения.ТипНазначения = Перечисления.ТипыНазначений.ДавальческоеМатериалыПодЭтап22;
		
	КонецЕсли;
	
	ШаблонНазначения.Заказ = Объект.Ссылка;
	
	Возврат ШаблонНазначения;
	
КонецФункции

#КонецОбласти

#Область ПартияПроизводства

Функция ПоляПартии(РеквизитыШапки, ОсновноеИзделие) Экспорт
	
	ДанныеЗаполнения = УправлениеПроизводствомПовтИсп.ДанныеЗаполненияНовойПартииПроизводства(
		РеквизитыШапки.Распоряжение,
		РеквизитыШапки.НазначениеПродукция); // ревизиты не меняются в процессе работы, наследуются из заказа на производство
	
	ПоляПартии = Справочники.ПартииПроизводства.ОписаниеПартииПроизводства();
	
	ПоляПартии.Документ = РеквизитыШапки.Распоряжение;
	ПоляПартии.ГруппировкаЗатрат = Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоСпецификациямИНазначениям;
	
	ПоляПартии.ТипПроцесса = РеквизитыШапки.ТипПроизводственногоПроцесса;
	ПоляПартии.Спецификация = РеквизитыШапки.Спецификация;
	
	ПоляПартии.Организация = ДанныеЗаполнения.Организация;
	ПоляПартии.ВидДеятельностиНДС = ДанныеЗаполнения.ВидДеятельностиНДС;
	
	ПоляПартии.Назначение = ДанныеЗаполнения.Назначение;
	ПоляПартии.НаправлениеДеятельности = ДанныеЗаполнения.НаправлениеДеятельности;
	
	ПоляПартии.ОсновноеИзделиеНоменклатура = ОсновноеИзделие.Номенклатура;
	ПоляПартии.ОсновноеИзделиеХарактеристика = ОсновноеИзделие.Характеристика;
	
	Если НЕ (ОсновноеИзделие.Свойство("ГруппаПродукции", ПоляПартии.ГруппаПродукции)
				ИЛИ ОсновноеИзделие.Свойство("ГруппаАналитическогоУчета", ПоляПартии.ГруппаПродукции)
			) И ЗначениеЗаполнено(ОсновноеИзделие.Номенклатура)
		Тогда
		ПоляПартии.ГруппаПродукции = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновноеИзделие.Номенклатура, "ГруппаАналитическогоУчета");
	КонецЕсли;
	
	Возврат ПоляПартии;
	
КонецФункции

#КонецОбласти

#Область ЦепочкаЭтапов

// Формирует граф цепочки этапов по идентификатору цепочки
//  в качестве идентификатора может быть передан заказ на производство
//  или партия производства.
//
// Параметры:
//  Идентификатор		 - ДокументСсылка.ЗаказНаПроизводство2_2, СправочникСсылка.ПартииПроизводства - Идентификатор цепочки.
//  НаправлениеОбхода	 - Число - Направление обхода графа (1 - вперед, -1 - назад).
//
// Возвращаемое значение:
//  Граф - ТаблицаЗначений	 - см. описание функции Граф().
//
Функция ГрафЦепочкиЭтапов(Идентификатор, Знач НаправлениеОбхода = Неопределено) Экспорт
	
	// Схема запроса для получения связи этапов.
	// По умолчанию используется обход вперед по цепочке этапов заказа.
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Вершина,
		|	Таблица.Этап КАК СмежнаяВершина
		|ПОМЕСТИТЬ Ребра
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка.Распоряжение = &Идентификатор
		|	И Таблица.Ссылка.Проведен
		|	И Таблица.Этап.Распоряжение = &Идентификатор
		|	И Таблица.Этап.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2),
		|	Таблица.Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Распоряжение = &Идентификатор
		|	И Таблица.Проведен
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2) <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Распоряжение = &Идентификатор
		|	И ВЫРАЗИТЬ(Таблица.ПланироватьНеРанее КАК Документ.ЭтапПроизводства2_2).Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Вершина
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вершины.Ссылка КАК Вершина,
		|	Ребра.СмежнаяВершина КАК СмежнаяВершина
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Вершины
		|		ЛЕВОЕ СОЕДИНЕНИЕ Ребра КАК Ребра
		|		ПО Вершины.Ссылка = Ребра.Вершина
		|ГДЕ
		|	Вершины.Распоряжение = &Идентификатор
		|	И Вершины.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Вершина");
	
	// Заменим идентификатор цепочки в зависимости от переданного параметра
	Если ТипЗнч(Идентификатор) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		
		Для каждого ПакетЗапроса Из СхемаЗапроса.ПакетЗапросов Цикл
		
			Для каждого Оператор Из ПакетЗапроса.Операторы Цикл
				
				Для Индекс = 0 По Оператор.Отбор.Количество()-1 Цикл
					
					Если Найти(Оператор.Отбор[Индекс], ".Распоряжение") > 0 Тогда
						
						ТекстВыражения = СтрЗаменить(Оператор.Отбор[Индекс], 
								".Распоряжение", 
								".ПартияПроизводства");
								
						Оператор.Отбор[Индекс] = Новый ВыражениеСхемыЗапроса(ТекстВыражения);
						
					КонецЕсли;
					
				КонецЦикла;
				
				Для каждого Источник Из Оператор.Источники Цикл
					
					Для каждого Соединение Из Источник.Соединения Цикл
						
						Если Найти(Соединение.Условие, ".Распоряжение") > 0 Тогда
							
							ТекстВыражения = СтрЗаменить(Соединение.Условие, 
									".Распоряжение", 
									".ПартияПроизводства");
									
							Соединение.Условие = Новый ВыражениеСхемыЗапроса(ТекстВыражения);
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЦикла;
			
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// По направлению обхода настроим поля связи
	Если НаправлениеОбхода = УправлениеПроизводством.НаправлениеОбходаГрафаНазад() Тогда
		
		ПоляВершина = СхемаЗапроса.ПакетЗапросов[0].Колонки.Найти("Вершина").Поля;
		ПоляСмежнаяВершина = СхемаЗапроса.ПакетЗапросов[0].Колонки.Найти("СмежнаяВершина").Поля;
		
		ПоляВершина[0] = ПоляСмежнаяВершина[0];
		ПоляВершина[1] = ПоляСмежнаяВершина[1];
		
	КонецЕсли;

	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат УправлениеПроизводством.Граф(РезультатЗапроса);
	
КонецФункции

Функция ТекстЗапросаСписокДоступныхДляУдаленияЭтаповПроизводства() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Т.Ссылка КАК Ссылка,
	|	Т.ПартияПроизводства КАК ПартияПроизводства
	|ПОМЕСТИТЬ ВТЭтапы
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Т
	|ГДЕ
	|	Т.Ссылка В(&МассивСсылок)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ПартияПроизводства КАК ПартияПроизводства
	|ПОМЕСТИТЬ ВТИсключаемыеЦепочки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Т
	|ГДЕ
	|	Т.ПартияПроизводства В
	|			(ВЫБРАТЬ
	|				ВТЭтапы.ПартияПроизводства КАК ПартияПроизводства
	|			ИЗ
	|				ВТЭтапы КАК ВТЭтапы)
	|	И НЕ Т.Ссылка В (&МассивСсылок)
	|	И Т.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЭтапы.Ссылка КАК Ссылка
	|ИЗ
	|	ВТЭтапы КАК ВТЭтапы
	|ГДЕ
	|	НЕ ВТЭтапы.ПартияПроизводства В
	|				(ВЫБРАТЬ
	|					ВТИсключаемыеЦепочки.ПартияПроизводства
	|				ИЗ
	|					ВТИсключаемыеЦепочки)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СхемыОбособления

Функция ПроверитьЗаполнитьНазначения(Объект, СхемаОбособленияКешированноеЗначение = Неопределено, ТолькоВРеквизитах = Ложь) Экспорт
	
	ОбновленоНазначение = Ложь;
	
	Если (СхемаОбособленияКешированноеЗначение = Неопределено
		ИЛИ Объект.Распоряжение <> СхемаОбособленияКешированноеЗначение.Распоряжение
		ИЛИ Объект.НазначениеПродукция <> СхемаОбособленияКешированноеЗначение.НазначениеПродукция) Тогда
		
		СхемаОбособления = Документы.ЗаказНаПроизводство2_2.СхемаОбособления(
										Объект.Распоряжение,
										Объект.НазначениеПродукция);
		
	Иначе
		СхемаОбособления = СхемаОбособленияКешированноеЗначение;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СхемаОбособления.НазначениеМатериалы) Тогда
		НазначениеМатериалы = СхемаОбособления.НазначениеМатериалы;
	Иначе
		НазначениеМатериалы = Объект.Назначение;
	КонецЕсли;
	
	Если СхемаОбособления.ОбособлениеПолуфабрикатовПоНазначениюЭтаповНеИспользуется Тогда
		НазначениеПолуфабрикаты = НазначениеМатериалы;
	Иначе
		НазначениеПолуфабрикаты = Объект.Назначение;
	КонецЕсли;
		
	Если Объект.НазначениеМатериалы <> НазначениеМатериалы Тогда
		Объект.НазначениеМатериалы = НазначениеМатериалы;
		ОбновленоНазначение = Истина;
	КонецЕсли;
	
	Если Объект.НазначениеПолуфабрикаты <> НазначениеПолуфабрикаты Тогда
		Объект.НазначениеПолуфабрикаты = НазначениеПолуфабрикаты;
		ОбновленоНазначение = Истина;
	КонецЕсли;
	
	Если ОбновленоНазначение И (НЕ ТолькоВРеквизитах) Тогда
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		СтруктураДействий = Новый Структура();
		ПараметрыДействия = ОбеспечениеПроизводстваКлиентСервер.ПараметрыДействияПроверитьЗаполнитьНазначениеОбеспеченияВЭтапеПроизводства(
			Объект);
		СтруктураДействий.Вставить("ПроверитьЗаполнитьНазначениеОбеспеченияВЭтапеПроизводства", ПараметрыДействия);
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.ОбеспечениеМатериаламиИРаботами, СтруктураДействий, КэшированныеЗначения);
	КонецЕсли;
	
	Возврат ОбновленоНазначение;
	
КонецФункции

Процедура ЗаполнитьНазначениеПобочногоВыпуска(Объект, ИмяТЧ = "", СхемаОбособленияКешированноеЗначение = Неопределено) Экспорт
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	СтруктураДействий = Новый Структура();
	
	ПараметрыДействия = ОбеспечениеПроизводства.ПараметрыДействияПроверитьЗаполнитьНазначениеПобочногоВыхода(
		Объект,
		СхемаОбособленияКешированноеЗначение);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьНазначениеПобочногоВыхода", ПараметрыДействия);
	
	Если ПустаяСтрока(ИмяТЧ) Тогда
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.ВыходныеИзделия, СтруктураДействий, КэшированныеЗначения);
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.ПобочныеИзделия, СтруктураДействий, КэшированныеЗначения);
	Иначе
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект[ИмяТЧ], СтруктураДействий, КэшированныеЗначения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КорректировкаЗаказа

// Возвращает таблицу допустимых отклонений мерных товаров по списку распоряжений.
//
//	Параметры:
//		СписокРаспоряжений - СписокЗначений, ДокументСсылка.ЗаказНаВнутреннееПотребление - список заказов для определения допустимых отклонений
//		ТипДвиженияЗапасов - ПеречислениеСсылка.ТипыДвиженияЗапасов -
//	Возвращаемое значение:
//		ТаблицаЗначений - таблица допустимых отклонений
//		* Заказ                - ДокументСсылка.ЗаказНаВнутреннееПотребление
//		* Номенклатура         - СправоникСсылка.Номенклатура
//		* Характеристика       - СправоникСсылка.ХарактеристикиНоменклатуры
//		* Склад                - СправоникСсылка.Склады
//		* Серия                - СправоникСсылка.СерииНоменклатуры
//		* ДопустимоеОтклонение - Число
//
Функция ДопустимыеОтклоненияМерныхТоваров(СписокРаспоряжений, ТипДвиженияЗапасов) Экспорт
	
	ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
	
	Если Не ЗначениеЗаполнено(СписокРаспоряжений) Или ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
		Таблица = Новый ТаблицаЗначений;
		Таблица.Колонки.Таблица = Новый ТаблицаЗначений;
		Таблица.Колонки.Добавить("Заказ");
		Таблица.Колонки.Добавить("Номенклатура");
		Таблица.Колонки.Добавить("Характеристика");
		Таблица.Колонки.Добавить("Склад");
		Таблица.Колонки.Добавить("Серия");
		Таблица.Колонки.Добавить("ДопустимоеОтклонение");
		Возврат Таблица;
	КонецЕсли;
	
	Если ТипЗнч(СписокРаспоряжений) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		МассивРаспоряжений = Новый Массив();
		МассивРаспоряжений.Добавить(СписокРаспоряжений);
	Иначе
		МассивРаспоряжений = СписокРаспоряжений;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТоварыКПоступлению.Распоряжение   КАК Заказ,
		|	ТоварыКПоступлению.Номенклатура   КАК Номенклатура,
		|	ТоварыКПоступлению.Характеристика КАК Характеристика,
		|	ТоварыКПоступлению.Склад          КАК Склад,
		|	ТоварыКПоступлению.Серия          КАК Серия,
		|	СУММА(ТоварыКПоступлению.КОформлениюПриход
		|		* (&ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100)) КАК ДопустимоеОтклонение
		|ИЗ
		|	РегистрНакопления.ЗаказыМатериаловВПроизводство.Обороты(&НачПериод,&КонПериод,,
		|		Распоряжение В (&МассивРаспоряжений)) КАК ТоварыКПоступлению
		|ГДЕ
		|	ТоварыКПоступлению.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКПоступлению.Распоряжение,
		|	ТоварыКПоступлению.Номенклатура,
		|	ТоварыКПоступлению.Характеристика,
		|	ТоварыКПоступлению.Склад,
		|	ТоварыКПоступлению.Серия");
	
	Запрос.УстановитьПараметр("МассивРаспоряжений", МассивРаспоряжений);
	Запрос.УстановитьПараметр("МерныеТипыЕдиницИзмерений",
		Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
	Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",
		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
	
	ГраницыОборотов = ОбщегоНазначенияУТ.ГраницыОборотовРегистра("ЗаказыМатериаловВПроизводство",
		"Распоряжение В (&МассивРаспоряжений)", Запрос.Параметры);
	
	Запрос.УстановитьПараметр("НачПериод", ГраницыОборотов.МинимальнаяДата);
	Запрос.УстановитьПараметр("КонПериод", ГраницыОборотов.МаксимальнаяДата);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область ПередачаВПереработку

Функция ТабличныеЧастиДляОформленияОтчетаПереработчика() Экспорт
	
	Результат = Новый Структура("ВыходныеИзделия,ПобочныеИзделия,ОбеспечениеМатериаламиИРаботами");
	
	Результат.ВыходныеИзделия =
		"ВЫБРАТЬ
		|	ВыходныеИзделияЭтапа.НомерСтроки                             КАК НомерСтроки,
		|	ВыходныеИзделияЭтапа.Ссылка                                  КАК Ссылка,
		|	ВыходныеИзделияЭтапа.КодСтроки                               КАК КодСтроки,
		|	ВыходныеИзделияЭтапа.Ссылка.НомерСледующегоЭтапа = 0         КАК ЭтоВыпускающийЭтап,
		|	ВыходныеИзделияЭтапа.Номенклатура                            КАК Номенклатура,
		|	ВыходныеИзделияЭтапа.Характеристика                          КАК Характеристика,
		|	ВыходныеИзделияЭтапа.Назначение                              КАК Назначение,
		|	ВыходныеИзделияЭтапа.Получатель                              КАК Получатель,
		|	ВыходныеИзделияЭтапа.СписатьНаРасходы                        КАК СписатьНаРасходы,
		|	ВыходныеИзделияЭтапа.СтатьяРасходов                          КАК СтатьяРасходов,
		|	ВыходныеИзделияЭтапа.АналитикаРасходов                       КАК АналитикаРасходов,
		|	ВыходныеИзделияЭтапа.АналитикаАктивовПассивов                КАК АналитикаАктивовПассивов,
		|	ВыходныеИзделияЭтапа.СчетУчета                               КАК СчетУчета,
		|	ВыходныеИзделияЭтапа.Субконто1                               КАК Субконто1,
		|	ВыходныеИзделияЭтапа.Субконто2                               КАК Субконто2,
		|	ВыходныеИзделияЭтапа.Субконто3                               КАК Субконто3,
		|	ВыходныеИзделияЭтапа.Упаковка                                КАК Упаковка,
		|	ВыходныеИзделияЭтапа.ДоляСтоимости                           КАК ДоляСтоимости,
		|	ВыходныеИзделияЭтапа.ДоляСтоимостиНаЕдиницу                  КАК ДоляСтоимостиНаЕдиницу,
		|	ВыходныеИзделияЭтапа.Количество                              КАК Количество,
		|	ВыходныеИзделияЭтапа.КоличествоУпаковок                      КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ВыходныеИзделияЭтапа
		|ГДЕ
		|	ВыходныеИзделияЭтапа.Ссылка В(&Этапы)
		|		И НЕ ВыходныеИзделияЭтапа.Отменено";
	
	Результат.ПобочныеИзделия =
		"ВЫБРАТЬ
		|	ПобочныеИзделияЭтапа.НомерСтроки                             КАК НомерСтроки,
		|	ПобочныеИзделияЭтапа.Ссылка                                  КАК Ссылка,
		|	ПобочныеИзделияЭтапа.КодСтроки                               КАК КодСтроки,
		|	ПобочныеИзделияЭтапа.Ссылка.НомерСледующегоЭтапа = 0         КАК ЭтоВыпускающийЭтап,
		|	ПобочныеИзделияЭтапа.Номенклатура                            КАК Номенклатура,
		|	ПобочныеИзделияЭтапа.Характеристика                          КАК Характеристика,
		|	ПобочныеИзделияЭтапа.Назначение                              КАК Назначение,
		|	ПобочныеИзделияЭтапа.Получатель                              КАК Получатель,
		|	ПобочныеИзделияЭтапа.СписатьНаРасходы                        КАК СписатьНаРасходы,
		|	ПобочныеИзделияЭтапа.СтатьяРасходов                          КАК СтатьяРасходов,
		|	ПобочныеИзделияЭтапа.АналитикаРасходов                       КАК АналитикаРасходов,
		|	ПобочныеИзделияЭтапа.АналитикаАктивовПассивов                КАК АналитикаАктивовПассивов,
		|	ПобочныеИзделияЭтапа.СчетУчета                               КАК СчетУчета,
		|	ПобочныеИзделияЭтапа.Субконто1                               КАК Субконто1,
		|	ПобочныеИзделияЭтапа.Субконто2                               КАК Субконто2,
		|	ПобочныеИзделияЭтапа.Субконто3                               КАК Субконто3,
		|	ПобочныеИзделияЭтапа.Упаковка                                КАК Упаковка,
		|	ПобочныеИзделияЭтапа.СтатьяКалькуляции                       КАК СтатьяКалькуляции,
		|	ПобочныеИзделияЭтапа.Цена                                    КАК Цена,
		|	ПобочныеИзделияЭтапа.Количество                              КАК Количество,
		|	ПобочныеИзделияЭтапа.КоличествоУпаковок                      КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ПобочныеИзделияЭтапа
		|ГДЕ
		|	ПобочныеИзделияЭтапа.Ссылка В(&Этапы)
		|		И НЕ ПобочныеИзделияЭтапа.Отменено";
	
	Результат.ОбеспечениеМатериаламиИРаботами =
		"ВЫБРАТЬ
		|	Обеспечение.НомерСтроки                КАК НомерСтроки,
		|	Обеспечение.Ссылка                     КАК Ссылка,
		|	Обеспечение.Номенклатура               КАК Номенклатура,
		|	Обеспечение.Характеристика             КАК Характеристика,
		|	
		|	ВЫБОР КОГДА Обеспечение.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|				Обеспечение.Назначение
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ                              КАК Назначение,
		|	
		|	Обеспечение.Упаковка                   КАК Упаковка,
		|	Обеспечение.СтатьяКалькуляции          КАК СтатьяКалькуляции,
		|	Обеспечение.Количество                 КАК Количество,
		|	Обеспечение.КоличествоУпаковок         КАК КоличествоУпаковок
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Обеспечение
		|ГДЕ
		|	Обеспечение.Ссылка В(&Этапы)";
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ЖурналДокументовПроизводства

// Возвращает таблицу используемых статусов документа учитывая зависимости от функциональных опций и иных параметров.
//
// Возвращаемое значение:
//  ТаблицаЗначений - см. ОбщегоНазначенияУТ.ТаблицаСтатусовИзменяемыхИзСписка().
//
Функция СтатусыДокументаИзменяемыеИзСписка() Экспорт
		
	Таблица = ОбщегоНазначенияУТ.ТаблицаСтатусовИзменяемыхИзСписка();
	
	ОбщегоНазначенияУТ.ДобавитьСтрокуВТаблицуСтатусовИзменяемыхИзСписка(Таблица, Перечисления.СтатусыЭтаповПроизводства2_2.Формируется);
	ОбщегоНазначенияУТ.ДобавитьСтрокуВТаблицуСтатусовИзменяемыхИзСписка(Таблица, Перечисления.СтатусыЭтаповПроизводства2_2.Сформирован);
	ОбщегоНазначенияУТ.ДобавитьСтрокуВТаблицуСтатусовИзменяемыхИзСписка(Таблица, Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению);
	ОбщегоНазначенияУТ.ДобавитьСтрокуВТаблицуСтатусовИзменяемыхИзСписка(Таблица, Перечисления.СтатусыЭтаповПроизводства2_2.Начат);
	ОбщегоНазначенияУТ.ДобавитьСтрокуВТаблицуСтатусовИзменяемыхИзСписка(Таблица, Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	
	Возврат Таблица;
	
КонецФункции

Функция СформироватьГиперссылкуСмТакжеВРаботе(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.ЭтапПроизводства2_2) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ЭтапПроизводства2_2.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|ГДЕ
		|	НЕ ЭтапПроизводства2_2.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
		|	И (ЭтапПроизводства2_2.Организация = &Организация
		|		ИЛИ &ВсеОрганизации)
		|	И (ЭтапПроизводства2_2.Подразделение = &Подразделение
		|		ИЛИ &ВсеПодразделения)";
	
	Запрос.УстановитьПараметр("ВсеОрганизации", Не ЗначениеЗаполнено(Параметры.Организация));
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("ВсеПодразделения", Не ЗначениеЗаполнено(Параметры.Подразделение));
	Запрос.УстановитьПараметр("Подразделение", Параметры.Подразделение);
	
	ТекстГиперссылки = НСтр("ru = 'Этапы производства';
							|en = 'Production stages'");
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			"Документ.ЭтапПроизводства2_2.Форма.Диспетчирование");
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			"Документ.ЭтапПроизводства2_2.Форма.Диспетчирование");
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Перезапись с ответственным чтением РС "График этапов производства".
// Подходит для проведения по регистрам "Обеспечение заказов" и "Движение товаров" версии 2.2.1.
//
Функция ПерезаписатьДвиженияИзОчередиСОтветственнымЧтениемГрафикаЭтаповПроизводства(Очередь, ПолноеИмяРегистра) Экспорт
	
	// 1. Аналог "ВыбратьРегистраторыРегистраДляОбработки". Дополнительно проверяет обработку РС График этапов производства.
	// 1.1. Временная таблица необработанных данных регистра.
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	ДополнительныеПараметрыСозданияВТ = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыСозданияВТ.ИмяВременнойТаблицы = "ВТНеЗаблокированныеДокументыРегистраторы";
	ДополнительныеПараметрыСозданияВТ.ВыбиратьПорциями = Ложь;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Очередь,
	                                                                                      "Документ.ЭтапПроизводства2_2",
	                                                                                      ПолноеИмяРегистра,
	                                                                                      МенеджерВременныхТаблиц,
	                                                                                      ДополнительныеПараметрыСозданияВТ);
	
	// 1.2. Временная таблица необработанных данных РС "График этапов производства".
	ДополнительныеПараметрыСозданияВТ = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыСозданияВТ.ИмяВременнойТаблицы = "ВТЗаблокированоГрафикЭтаповПроизводства";
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Очередь,
	                                                                                             "РегистрСведений.ГрафикЭтаповПроизводства2_2",
	                                                                                             МенеджерВременныхТаблиц,
	                                                                                             ДополнительныеПараметрыСозданияВТ);
	
	// Фильтрация регистраторов. Отсечение регистраторов, для которых не обрабтаны данные РС "График этапов производства".
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 500
		|	ТаблицаРегистраторов.Регистратор КАК Регистратор
		|ИЗ
		|	ВТНеЗаблокированныеДокументыРегистраторы КАК ТаблицаРегистраторов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ТаблицаДокумента
		|		ПО ТаблицаРегистраторов.Регистратор = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоГрафикЭтаповПроизводства КАК ВТЗаблокированоГрафикЭтаповПроизводства
		|		ПО ТаблицаРегистраторов.Регистратор = ВТЗаблокированоГрафикЭтаповПроизводства.ЭтапПроизводства
		|		 И ТаблицаДокумента.Распоряжение = ВТЗаблокированоГрафикЭтаповПроизводства.Распоряжение
		|		 И &СтатусГрафика = ВТЗаблокированоГрафикЭтаповПроизводства.СтатусГрафика
		|
		|ГДЕ
		|	ВТЗаблокированоГрафикЭтаповПроизводства.Распоряжение ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаДокумента.Дата УБЫВ";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СтатусГрафика", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	ВыборкаПоРегистраторам = Запрос.Выполнить().Выбрать();
	
	// 2. Аналог "ПерезаписатьДвиженияИзОчереди". Дополнительно устанавливает блокировку РС График этапов производства.
	ИмяПоляРегистратор = "Регистратор";
	МенеджерДокумента = Документы.ЭтапПроизводства2_2;
	МенеджерРегистра = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяРегистра);
	ИмяРегистра = СтрРазделить(ПолноеИмяРегистра,".",Ложь)[1];
	Пока ВыборкаПоРегистраторам.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта.
			ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоРегистраторам[ИмяПоляРегистратор]);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение регистра "График этапов производства".
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ГрафикЭтаповПроизводства2_2");
			ЭлементБлокировки.УстановитьЗначение("ЭтапПроизводства", ВыборкаПоРегистраторам[ИмяПоляРегистратор]);
			ЭлементБлокировки.УстановитьЗначение("СтатусГрафика",    РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор[ИмяПоляРегистратор].Установить(ВыборкаПоРегистраторам[ИмяПоляРегистратор]);
			
			ЗаписатьДвижения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоРегистраторам[ИмяПоляРегистратор], "Проведен");
			
			Если ЗаписатьДвижения Тогда
				
				ДопСвойства = Новый Структура;
				ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(ВыборкаПоРегистраторам[ИмяПоляРегистратор], ДопСвойства);
				МенеджерДокумента.ИнициализироватьДанныеДокумента(ВыборкаПоРегистраторам[ИмяПоляРегистратор], ДопСвойства, ИмяРегистра);
			
				НаборЗаписей.Загрузить(ДопСвойства.ТаблицыДляДвижений["Таблица" + ИмяРегистра]);
				
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось перезаписать движения в регистр %ИмяРегистра% по документу %Ссылка% по причине: %Причина%';
									|en = 'Cannot rewrite records to register %ИмяРегистра% using document %Ссылка% due to: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаПоРегистраторам[ИмяПоляРегистратор]);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра);
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				ВыборкаПоРегистраторам[ИмяПоляРегистратор].Метаданные(), ВыборкаПоРегистраторам[ИмяПоляРегистратор], ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
		
	ВсеСделано = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Очередь, ПолноеИмяРегистра);
	Возврат ВсеСделано;
	
КонецФункции

// Возвращает текст запроса движений по распоряжению - Заказ на производство.
Функция ТекстЗапросаТаблицаДвижениеТоваровПоЗаказуНаПроизводство() Экспорт
	
	ТекстЗапроса =
	// Закрытие графика поступления выходных изделий по заказу на производство.
	// Текст запроса должен быть синхронным тексту запроса графика поступления выходных изделий по этапу, отличие только в
	// знаке движения и Распоряжении.
	"ВЫБРАТЬ
	|	&Распоряжение                  КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	-ТабличнаяЧасть.Количество     КАК ПланируемоеПоступлениеПодЗаказ,
	|	-ТабличнаяЧасть.Количество     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.Ссылка.Проведен
	|	И НЕ ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ ТабличнаяЧасть.Отменено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления побочных изделий по заказу на производство.
	// Текст запроса должен быть синхронным тексту запроса графика поступления побочных изделий по этапу, отличие только в
	// знаке движения и Распоряжении.
	|ВЫБРАТЬ
	|	&Распоряжение                  КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	0,
	|	-ТабличнаяЧасть.Количество     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) // фактически эти движения появляются начиная со статуса ""Начат"", до этого момента табличная часть ""Экономия материалов пуста"".
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.Ссылка.Проведен
	|	И НЕ ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ ТабличнаяЧасть.Отменено";
	
	СинонимТаблицыДокумента = "ТабличнаяЧасть";
	ПереопределениеРасчетаПараметров = ПереопределениеРасчетаПараметров(СинонимТаблицыДокумента + ".Ссылка");
	ПереопределениеРасчетаПараметров.Вставить("РабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Статус",                "ТабличнаяЧасть.Ссылка.Статус");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПроизводствоНаСтороне", "ТабличнаяЧасть.Ссылка.ПроизводствоНаСтороне");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Распоряжение",          "ТабличнаяЧасть.Ссылка.Распоряжение");
	Для Каждого Параметр Из ПереопределениеРасчетаПараметров Цикл
		
		ТекстЗамены = ПереопределениеРасчетаПараметров[Параметр.Ключ];
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&" + Параметр.Ключ, ТекстЗамены);
		
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ТекстЗапросаТоварыДокумента(Отбор, ХозяйственнаяОперация) Экспорт

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда 
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка                                          КАК Распоряжение,
		|	Таблица.Номенклатура                                    КАК Номенклатура,
		|	Таблица.Характеристика                                  КАК Характеристика,
		|	ДанныеУчета.Назначение                                  КАК Назначение,
		|	ДанныеУчета.НазначениеОтправителя                       КАК НазначениеОтправителя,
		|	Таблица.КодСтроки                                       КАК КодСтроки,
		|	ДанныеУчета.Серия                                       КАК Серия,
		|	Таблица.Количество                                      КАК Количество,
		|	Таблица.Упаковка                                        КАК Упаковка,
		|	ДАТАВРЕМЯ(1,1,1)                                        КАК ДатаОтгрузки,
		|	Таблица.Отменено                                        КАК Отменено,
		|	Таблица.СтатусУказанияСерий                             КАК СтатусУказанияСерий,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) КАК ВариантОбеспечения,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                КАК Склад,
		|	ЕСТЬNULL(ДанныеУчета.КОформлению, 0)                    КАК КОформлению,
		|	ЕСТЬNULL(ДанныеУчета.Заказано, 0)                       КАК Заказано
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеУчета КАК ДанныеУчета
		|	ПО Таблица.Ссылка         = ДанныеУчета.Распоряжение
		|		И Таблица.КодСтроки      = ДанныеУчета.КодСтроки
		|	
		|ГДЕ
		|	НЕ ДанныеУчета.Распоряжение ЕСТЬ NULL
		|	И НЕ Таблица.Отменено
		|//&Отбор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                          КАК Распоряжение,
		|	Таблица.Номенклатура                                    КАК Номенклатура,
		|	Таблица.Характеристика                                  КАК Характеристика,
		|	ДанныеУчета.Назначение                                  КАК Назначение,
		|	ДанныеУчета.НазначениеОтправителя                       КАК НазначениеОтправителя,
		|	Таблица.КодСтроки                                       КАК КодСтроки,
		|	ДанныеУчета.Серия                                       КАК Серия,
		|	Таблица.Количество                                      КАК Количество,
		|	Таблица.Упаковка                                        КАК Упаковка,
		|	ДАТАВРЕМЯ(1,1,1)                                        КАК ДатаОтгрузки,
		|	Таблица.Отменено                                        КАК Отменено,
		|	Таблица.СтатусУказанияСерий                             КАК СтатусУказанияСерий,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) КАК ВариантОбеспечения,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                КАК Склад,
		|	ЕСТЬNULL(ДанныеУчета.КОформлению, 0)                    КАК КОформлению,
		|	ЕСТЬNULL(ДанныеУчета.Заказано, 0)                       КАК Заказано
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеУчета КАК ДанныеУчета
		|	ПО Таблица.Ссылка         = ДанныеУчета.Распоряжение
		|		И Таблица.КодСтроки      = ДанныеУчета.КодСтроки
		|	
		|ГДЕ
		|	НЕ ДанныеУчета.Распоряжение ЕСТЬ NULL
		|	И НЕ Таблица.Отменено
		|//&Отбор";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка                       КАК Распоряжение,
		|	Таблица.Номенклатура                 КАК Номенклатура,
		|	Таблица.Характеристика               КАК Характеристика,
		|	ДанныеУчета.Назначение               КАК Назначение,
		|	ДанныеУчета.НазначениеОтправителя    КАК НазначениеОтправителя,
		|	Таблица.КодСтроки                    КАК КодСтроки,
		|	Таблица.Серия                        КАК Серия,
		|	Таблица.Количество                   КАК Количество,
		|	Таблица.Упаковка                     КАК Упаковка,
		|	Таблица.ДатаОтгрузки                 КАК ДатаОтгрузки,
		|	ЛОЖЬ                                 КАК Отменено,
		|	Таблица.СтатусУказанияСерий          КАК СтатусУказанияСерий,
		|	Таблица.ВариантОбеспечения           КАК ВариантОбеспечения,
		|	ЕСТЬNULL(Таблица.Ссылка.ПартияПроизводства.ГруппаПродукции,
		|				ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)) КАК ГруппаПродукции,
		|	Таблица.Склад                        КАК Склад,
		|	ЕСТЬNULL(ДанныеУчета.КОформлению, 0) КАК КОформлению,
		|	ЕСТЬNULL(ДанныеУчета.Заказано, 0)    КАК Заказано
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеУчета КАК ДанныеУчета
		|	ПО Таблица.Ссылка         = ДанныеУчета.Распоряжение
		|		И Таблица.КодСтроки      = ДанныеУчета.КодСтроки
		|		И Таблица.Номенклатура   = ДанныеУчета.Номенклатура
		|		И Таблица.Характеристика = ДанныеУчета.Характеристика
		|		И Таблица.Серия          = ДанныеУчета.Серия
		|	
		|ГДЕ
		|	НЕ ДанныеУчета.Распоряжение ЕСТЬ NULL
		|//&Отбор";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка                       КАК Распоряжение,
		|	Таблица.Номенклатура                 КАК Номенклатура,
		|	Таблица.Характеристика               КАК Характеристика,
		|	ДанныеУчета.Назначение               КАК Назначение,
		|	ДанныеУчета.НазначениеОтправителя    КАК НазначениеОтправителя,
		|	Таблица.КодСтроки                    КАК КодСтроки,
		|	ДанныеУчета.Серия                    КАК Серия,
		|	Таблица.Количество                   КАК Количество,
		|	Таблица.Упаковка                     КАК Упаковка,
		|	Таблица.ДатаОперации                 КАК ДатаОтгрузки,
		|	ЛОЖЬ                                 КАК Отменено,
		|	Таблица.СтатусУказанияСерий          КАК СтатусУказанияСерий,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) КАК ВариантОбеспечения,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	Таблица.Получатель                   КАК Склад,
		|	ЕСТЬNULL(ДанныеУчета.КОформлению, 0) КАК КОформлению,
		|	ЕСТЬNULL(ДанныеУчета.Заказано, 0)    КАК Заказано
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеУчета КАК ДанныеУчета
		|	ПО Таблица.Ссылка         = ДанныеУчета.Распоряжение
		|		И Таблица.КодСтроки      = ДанныеУчета.КодСтроки
		|	
		|ГДЕ
		|	НЕ ДанныеУчета.Распоряжение ЕСТЬ NULL
		|//&Отбор";
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Ошибка в процедуре ЭтапПроизводства2_2.ТекстЗапросаТоварыДокумента. Обратитесь к администратору.';
								|en = 'An error occurred in the ЭтапПроизводства2_2.ТекстЗапросаТоварыДокумента procedure. Contact your administrator. '");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отбор) Тогда
		
		ТекстОтбора = "";
		
		Для каждого КлючЗначение Из Отбор Цикл
			
			Ключ = КлючЗначение.Ключ;
			
			Если Ключ = "Ссылка" Тогда
				Ключ = "Таблица.Ссылка";
			КонецЕсли;
			
			ТекстОтбора = 
				ТекстОтбора
				+ " И "
				+ Ключ
				+ " В(&"
				+ КлючЗначение.Значение
				+ ")";
			
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&Отбор", ТекстОтбора);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция МаксимальнаяДатаВТЧ(КоллекцияСтрок, ПолеДата) Экспорт
	
	МаксимальнаяДата = '000101010000';
	
	Для каждого Строка Из КоллекцияСтрок Цикл 
		МаксимальнаяДата = Макс(МаксимальнаяДата, Строка[ПолеДата]);
	КонецЦикла;
	
	Возврат МаксимальнаяДата
	
КонецФункции

Процедура ДополнитьДанныеСпецификации(Распоряжения, ДанныеСпецификаций, ПартииПроизводства)
	
	ЗаполнитьПланироватьНеРанее = Новый Массив;
	
	ДанныеЦепочек       = ПартииПроизводстваДляДополнения(Распоряжения);
	НомераПартийЗапуска = Документы.ЗаказНаПроизводство2_2.НомераПартийЗапуска(Распоряжения);
	
	СхемыОбособления = Документы.ЗаказНаПроизводство2_2.СхемыОбособленияЗаказов(Распоряжения);
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		Распоряжение = ДанныеСпецификации.Распоряжение;
		НазначениеПродукция = ДанныеСпецификации.НазначениеПродукция;
		
		ПодготовитьДанныеСпецификацииДляОбработки(ДанныеСпецификации);
		
		СхемаОбособления = СхемыОбособления[Распоряжение][НазначениеПродукция];
		ДанныеСпецификации.СхемаОбособления = СхемаОбособления;
		
		ПартияПроизводства = ПодобратьПартиюПроизводстваДляДополнения(ДанныеСпецификации, ДанныеЦепочек);
		
		НомерПартииЗапуска = НомераПартийЗапуска.Получить(Распоряжение);
		НомераПартийЗапуска.Вставить(Распоряжение, НомерПартииЗапуска + 1);
		
		Если ПартияПроизводства = Неопределено Тогда
			ДополнитьЦепочку = Ложь;
			ПартияПроизводства = Справочники.ПартииПроизводства.ПолучитьСсылку();
			ПоляПартии = Документы.ЭтапПроизводства2_2.ПоляПартии(
				ДанныеСпецификации,
				ДанныеСпецификации.ОсновноеИзделие);
			ДобавитьПартиюПроизводства(ПартииПроизводства, Распоряжение, НомерПартииЗапуска, ПартияПроизводства, ПоляПартии);
		Иначе
			ДополнитьЦепочку = Истина;
		КонецЕсли;
		
		НомерЭтапаВПартииЗапуска = 1;
		
		Для каждого ДанныеЭтапа Из ДанныеСпецификации.Этапы Цикл
		
			ДанныеЭтапа.Распоряжение = Распоряжение;
			ДанныеЭтапа.НазначениеПродукция = НазначениеПродукция;
			ДанныеЭтапа.ПартияПроизводства = ПартияПроизводства;
			
			Если НЕ ДополнитьЦепочку Тогда
				
				ЭтапПроизводства = Документы.ЭтапПроизводства2_2.ПолучитьСсылку();
				НазначениеЭтапа = Справочники.Назначения.ПолучитьСсылку();
				
			Иначе
				
				ЭтапПроизводства = ПолучитьЭтапДляДополнения(ДанныеЦепочек, ПартияПроизводства, ДанныеЭтапа.Этап);
				НазначениеЭтапа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтапПроизводства, "Назначение");
				
			КонецЕсли;
			
			ДанныеЭтапа.ЭтапПроизводства = ЭтапПроизводства;
			ДанныеЭтапа.Назначение       = НазначениеЭтапа;
			ДанныеЭтапа.ЭтоНовый         = НЕ ДополнитьЦепочку;
			
			Документы.ЭтапПроизводства2_2.ПроверитьЗаполнитьНазначения(
				ДанныеЭтапа,
				СхемаОбособления,
				Истина);
	
			ДанныеЭтапа.НомерПартииЗапуска       = НомерПартииЗапуска;
			ДанныеЭтапа.НомерЭтапаВПартииЗапуска = НомерЭтапаВПартииЗапуска;
			
			НомерЭтапаВПартииЗапуска = НомерЭтапаВПартииЗапуска + 1;
			
		КонецЦикла;
		
		ДанныеСпецификации.ДополнитьЦепочку = ДополнитьЦепочку;
		ДанныеСпецификации.ПартияПроизводства = ПартияПроизводства;
		
		Если НЕ ДанныеСпецификации.ПланироватьНеРанее.Пустая() Тогда
			ЗаполнитьПланироватьНеРанее.Добавить(ДанныеСпецификации);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗаполнитьПланироватьНеРанее.Количество() > 0 Тогда
		ЗаполнитьПланироватьНеРанее(ДанныеСпецификаций, ЗаполнитьПланироватьНеРанее);
	КонецЕсли;
	
	ЗаполнитьПризнакЕстьМаркируемаяПродукция(ДанныеСпецификаций);
	
КонецПроцедуры

Функция ТаблицыСвязейДляФормированияЭтапов(ДанныеСпецификаций)
	
	ТаблицыСвязей = ИнициализироватьТаблицыСвязейДляФормированияЭтапов();
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		Для каждого ДанныеЭтапа Из ДанныеСпецификации.Этапы Цикл
			
			ЗаполнитьПФПотребность(
				ТаблицыСвязей.ПФПотребность,
				ДанныеСпецификации,
				ДанныеЭтапа);
				
			НоваяСтрока = ТаблицыСвязей.ПФСвязи.Добавить();
			НоваяСтрока.КлючСвязиПолучатель = ДанныеСпецификации.КлючСвязи;
			НоваяСтрока.ЭтапПолучательИзделия = ДанныеЭтапа.Этап;
			НоваяСтрока.ЭтапПроизводства = ДанныеЭтапа.ЭтапПроизводства;
			
			ЗаполнитьЗначенияСвойств(ТаблицыСвязей.КлючиЭтапов.Добавить(),
				ДанныеЭтапа,
				"КлючСвязи, ЭтапПроизводства");
			
			ТаблицыСвязей.НазначенияПолуфабрикатов.Вставить(
				ДанныеЭтапа.ЭтапПроизводства,
				ДанныеЭтапа.НазначениеПолуфабрикаты);
			
			Если НЕ ДанныеЭтапа.ЭтоНовый Тогда
				
				ТаблицыСвязей.НеНовыеЭтапы.Добавить(
					ДанныеЭтапа.ЭтапПроизводства);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицыСвязей;
	
КонецФункции

Функция ТаблицаЭтапыЦепочки(ЭтапыСпецификации)

	ЭтапыЦепочки = Новый ТаблицаЗначений;
	ЭтапыЦепочки.Колонки.Добавить("НомерЭтапа");
	ЭтапыЦепочки.Колонки.Добавить("Этап");
	
	ЭтапыЦепочки.Индексы.Добавить("НомерЭтапа");
	
	Для каждого ДанныеЭтапа Из ЭтапыСпецификации Цикл
		
		НоваяСтрока = ЭтапыЦепочки.Добавить();
		НоваяСтрока.НомерЭтапа = ДанныеЭтапа.НомерЭтапа;
		НоваяСтрока.Этап = ДанныеЭтапа.ЭтапПроизводства;
		
	КонецЦикла;
	
	Возврат ЭтапыЦепочки;
	
КонецФункции

Процедура ПрименитьИзмененияВТаблицахСвязей(ТаблицыСвязей)
	
	СтруктураПоиска = Новый Структура("ОбеспеченаТекущимЭтапом", Истина);
	Потребности = ТаблицыСвязей.ПФПотребность.НайтиСтроки(СтруктураПоиска);
	
	Для каждого Потребность Из Потребности Цикл
		
		Потребность.Количество = Потребность.Количество - Потребность.КоличествоОбеспеченоТекущимЭтапом;
		Потребность.КоличествоОбеспеченоТекущимЭтапом = 0;
		Потребность.ОбеспеченаТекущимЭтапом = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтменитьИзмененияВТаблицахСвязей(ТаблицыСвязей)
	
	ТаблицыСвязей.ПФПотребность.ЗаполнитьЗначения(0, "КоличествоОбеспеченоТекущимЭтапом");
	ТаблицыСвязей.ПФПотребность.ЗаполнитьЗначения(Ложь, "ОбеспеченаТекущимЭтапом");
	
КонецПроцедуры

Процедура ЗаблокироватьРегистрыОбеспеченияПотребностей(Материалы) Экспорт
	
	Если НЕ ТранзакцияАктивна() Тогда
		Возврат;
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СвободныеОстатки");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОбеспечениеЗаказов");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОбеспечениеЗаказовРаботами");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ГрафикОтгрузкиТоваров");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ГрафикПоступленияТоваров");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаблокироватьЭтап(Ссылка)
	
	Блокировка = Новый БлокировкаДанных;
		
	ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаблокироватьЭтапы(Этапы)
	
	ЗначенияДляБлокировки = Новый ТаблицаЗначений;
	
	ОписаниеТипов = Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2");
	ЗначенияДляБлокировки.Колонки.Добавить("Ссылка", ОписаниеТипов);
	
	Для каждого Ссылка Из Этапы Цикл
		ЗначенияДляБлокировки.Добавить().Ссылка = Ссылка;
	КонецЦикла;
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	
	ЭлементБлокировки.ИсточникДанных = ЗначенияДляБлокировки;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Ссылка");
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаполнитьПланироватьНеРанее(ДанныеСпецификаций, ЭлементыДляОбработки)
	
	ИндексыКлючей = Новый Соответствие;
	
	Для Индекс = 0 По ДанныеСпецификаций.ВГраница() Цикл
		
		ИндексыКлючей.Вставить(ДанныеСпецификаций[Индекс].КлючСвязи, Индекс);
		
	КонецЦикла;
	
	Для каждого ДанныеСпецификации Из ЭлементыДляОбработки Цикл
		
		Индекс = ИндексыКлючей[ДанныеСпецификации.КлючСвязиПланироватьНеРанее];
		
		Предшественник = ДанныеСпецификаций[Индекс].Этапы.Найти(ДанныеСпецификации.ПланироватьНеРанее, "Этап");
		
		Последователь = ДанныеСпецификации.Этапы.Найти(1, "НомерЭтапа");
			
		Если Последователь <> Неопределено Тогда
				
			Последователь.ПланироватьНеРанее = Предшественник.ЭтапПроизводства;
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает номер этапа на производство, который должен быть присвоен новому этапу.
//
// Параметры:
//  ПартияПроизводства	- ДокументСсылка.ЭтапПроизводства2_2 - идентификатор цепочки этапов.
// 
// Возвращаемое значение:
//   - Число - номер этапа.
//
Функция НовыйНомерЭтапаВПартииЗапуска(ПартияПроизводства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ЦепочкаЭтапов.НомерЭтапаВПартииЗапуска), 0) + 1 КАК СледующийНомерЭтапаВПартииЗапуска
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЦепочкаЭтапов
	|ГДЕ
	|	ЦепочкаЭтапов.ПартияПроизводства = &ПартияПроизводства
	|");
	Запрос.УстановитьПараметр("ПартияПроизводства", ПартияПроизводства);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.СледующийНомерЭтапаВПартииЗапуска;
	
КонецФункции

Функция ПараметрыРедактированияЭтапа() Экспорт
	
	ПараметрыРедактированияЭтапа = УправлениеПроизводством.ПараметрыРедактированияЭтапа("Объект");
	Возврат ПараметрыРедактированияЭтапа;
	
КонецФункции

Функция ПолучитьНормативыПоСпецификации(ПартияПроизводства, ПереченьДанных, ПолучатьМатериалыПоТребованию, Отбор = Неопределено) Экспорт
	
	Результат = Новый Структура;
	
	Если ПартияПроизводства.Количество > 0
		И Не ПартияПроизводства.Номенклатура.Пустая()
		И Не ПартияПроизводства.Спецификация.Пустая() Тогда
		
		ДанныеПоНоменклатуре = Справочники.РесурсныеСпецификации.ДанныеПоНоменклатуреРасширенный();
		
		ЗаполнитьЗначенияСвойств(ДанныеПоНоменклатуре, ПартияПроизводства,
			"Распоряжение, Спецификация, Номенклатура, Характеристика, Количество");
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Документы.ЗаказНаПроизводство2_2.СоздатьВтСпособыПолученияМатериалов2_2(
			МенеджерВременныхТаблиц,
			ПартияПроизводства.Распоряжение);
		
		ПараметрыВыборки = Справочники.РесурсныеСпецификации.ПараметрыВыборкиДанных(ПереченьДанных, МенеджерВременныхТаблиц);
		
		ПараметрыВыборки.ОбъединитьМатериалыИВходящиеИзделия = Истина;
		ПараметрыВыборки.УчитыватьВероятностьБрака           = Ложь;
		ПараметрыВыборки.СпособРасчетаМатериалов             = ?(ПолучатьМатериалыПоТребованию,
			Перечисления.СпособыРасчетаМатериалов.МаксимальноеПотребление,
			Перечисления.СпособыРасчетаМатериалов.МинимальноеПотребление);
			
		ДанныеСпецификации = Справочники.РесурсныеСпецификации.ДанныеСпецификацииПоНоменклатуре(
			ДанныеПоНоменклатуре,
			ПараметрыВыборки,
			Отбор);
			
		Для каждого ИмяТаблицы Из ПараметрыВыборки.ПереченьДанных Цикл
			Результат.Вставить(ИмяТаблицы, ДанныеСпецификации[ИмяТаблицы]);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура СкорректироватьТаблицы(ТаблицаИсходная, ТаблицаКорректировки, СтруктураОтбора, ПоляОтбора = Неопределено)
	
	ТекущийИндексКорректировки      = 0;
	МаксимальныйИндексКорректировки = ТаблицаКорректировки.Количество() - 1;
	Пока МаксимальныйИндексКорректировки > -1 Цикл
		
		Корректировка = ТаблицаКорректировки[ТекущийИндексКорректировки];
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, Корректировка, ПоляОтбора);
		
		ИсходныеСтроки          = ТаблицаИсходная.НайтиСтроки(СтруктураОтбора);
		МаксимальныйИндексСтрок = ИсходныеСтроки.ВГраница();
		Пока МаксимальныйИндексСтрок > -1 Цикл
			
			ИсходнаяСтрока = ИсходныеСтроки[0];
			
			Количество = Мин(ИсходнаяСтрока.Количество, Корректировка.Количество);
			
			Корректировка.Количество  = Корректировка.Количество  - Количество;
			ИсходнаяСтрока.Количество = ИсходнаяСтрока.Количество - Количество;
						
			Если ИсходнаяСтрока.Количество > 0 Тогда
				Прервать;	
			Иначе
				ТаблицаИсходная.Удалить(ИсходнаяСтрока);	
			КонецЕсли;
			
			Если Корректировка.Количество = 0 Тогда
				Прервать;
			КонецЕсли;	
			
			МаксимальныйИндексСтрок = МаксимальныйИндексСтрок - 1;
			
		КонецЦикла;
		
		Если Корректировка.Количество > 0 Тогда
			ТекущийИндексКорректировки = ТекущийИндексКорректировки + 1;	
		Иначе
			ТаблицаКорректировки.Удалить(Корректировка);	
		КонецЕсли;	
		
		МаксимальныйИндексКорректировки = МаксимальныйИндексКорректировки - 1;
			
	КонецЦикла;	
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти

#КонецЕсли
