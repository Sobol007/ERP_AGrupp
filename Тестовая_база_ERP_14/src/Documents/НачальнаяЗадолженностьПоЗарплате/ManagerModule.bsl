#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(ФизическиеЛица.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаДокумента.
Функция ОписаниеСоставаДокумента() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.НачальнаяЗадолженностьПоЗарплате;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаДокументаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

// Заполняет реквизит СпособВводаЗадолженности при обновлении ИБ.
//
// Параметры:
//  ПараметрыОбновления	 - Структура - Стандартная структура для обработчика обновления с режимом выполнения "Отложенно".
//
Процедура ЗаполнитьСпособВводаЗадолженности(ПараметрыОбновления) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	НачальнаяЗадолженностьПоЗарплате.Ссылка КАК Ссылка,
	|	НачальнаяЗадолженностьПоЗарплате.СпособВводаЗадолженности КАК СпособВводаЗадолженности
	|ИЗ
	|	Документ.НачальнаяЗадолженностьПоЗарплате КАК НачальнаяЗадолженностьПоЗарплате
	|ГДЕ
	|	НачальнаяЗадолженностьПоЗарплате.СпособВводаЗадолженности = ЗНАЧЕНИЕ(Перечисление.СпособВводаЗадолженностиПоЗарплате.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыОбновления.ОбработкаЗавершена = Истина;
	Иначе 
		ПараметрыОбновления.ОбработкаЗавершена = Ложь;
		Результат = РезультатЗапроса.Выгрузить();
		Для Каждого ТекущийДокумент Из Результат Цикл 
			ДокументОбъект = ТекущийДокумент.Ссылка.ПолучитьОбъект();
			ДокументОбъект.СпособВводаЗадолженности = Перечисления.СпособВводаЗадолженностиПоЗарплате.ОстатокНевыплаченнойЗарплаты;
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли