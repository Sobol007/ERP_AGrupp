#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	СтатусДокумента = Неопределено;
	РеестрСоставил = Неопределено;
	ТелефонСоставителя = Неопределено;
	АдресЭлектроннойПочтыСоставителя = Неопределено;
	НомерЗапросаЗаДень = Неопределено;
	ДанныеЭЛН.Очистить();
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЛисткиНетрудоспособности", ДанныеЭЛН.Выгрузить(,"НомерСтроки, ЛистокНетрудоспособности"));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЛисткиНетрудоспособности.НомерСтроки,
	|	ЛисткиНетрудоспособности.ЛистокНетрудоспособности
	|ПОМЕСТИТЬ ВТЛисткиНетрудоспособности
	|ИЗ
	|	&ЛисткиНетрудоспособности КАК ЛисткиНетрудоспособности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТЛисткиНетрудоспособности.НомерСтроки) КАК НомерСтроки,
	|	ЛисткиНетрудоспособностиПовторы.НомерСтроки КАК НомерСтрокиПовтора,
	|	ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности КАК ЛистокНетрудоспособности
	|ИЗ
	|	ВТЛисткиНетрудоспособности КАК ВТЛисткиНетрудоспособности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЛисткиНетрудоспособности КАК ЛисткиНетрудоспособностиПовторы
	|		ПО ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности = ЛисткиНетрудоспособностиПовторы.ЛистокНетрудоспособности
	|			И ВТЛисткиНетрудоспособности.НомерСтроки < ЛисткиНетрудоспособностиПовторы.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности,
	|	ЛисткиНетрудоспособностиПовторы.НомерСтроки
	|ИТОГИ ПО
	|	ЛистокНетрудоспособности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности,
	|	ВТЛисткиНетрудоспособности.НомерСтроки
	|ИЗ
	|	ВТЛисткиНетрудоспособности КАК ВТЛисткиНетрудоспособности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныеЛисты
	|		ПО ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности = БольничныеЛисты.Ссылка
	|ГДЕ
	|	НЕ БольничныеЛисты.Проведен";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ПовторяющиесяЛН = МассивРезультатов[1];
	НепроведенныеЛН = МассивРезультатов[2];
	
	ИмяТаблицы = "ДанныеЭЛН";
	
	Если Не ПовторяющиесяЛН.Пустой() Тогда
		Выборка = ПовторяющиесяЛН.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Текст = НСтр("ru = '%1 использован в нескольких строках: %2.';
						|en = '%1 is used in several lines: %2.'");
			ВыборкаПоЛН = Выборка.Выбрать();
			Если ВыборкаПоЛН.Следующий() Тогда
				ТекстПовторныеСтроки = "" + ВыборкаПоЛН.НомерСтроки + ", " + ВыборкаПоЛН.НомерСтрокиПовтора;
				Пока ВыборкаПоЛН.Следующий() Цикл
					ТекстПовторныеСтроки  = ТекстПовторныеСтроки + ", " + ВыборкаПоЛН.НомерСтрокиПовтора;
				КонецЦикла;
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.ЛистокНетрудоспособности, ТекстПовторныеСтроки);
				СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Выборка.НомерСтроки, "ЛистокНетрудоспособности");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не НепроведенныеЛН.Пустой() Тогда
		Выборка = НепроведенныеЛН.Выбрать();
		Пока Выборка.Следующий() Цикл
			Текст = НСтр("ru = 'Листок нетрудоспособности в строке %1 непроведен.';
						|en = 'Sick leave record in line %1 is not posted.'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.НомерСтроки);
			СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Выборка.НомерСтроки, "ЛистокНетрудоспособности");
		КонецЦикла;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из ДанныеЭЛН Цикл
		Если Не ЗначениеЗаполнено(Строка.НомерЛисткаНетрудоспособности) Тогда
			Текст = НСтр("ru = 'Номер листка нетрудоспособности обязателен к заполнению!';
						|en = 'It is required to fill in sick leave record No.'");
			СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "НомерЛисткаНетрудоспособности");
		КонецЕсли;
		Если Найти("," + Строка.УсловияИсчисленияКод1 + "," + Строка.УсловияИсчисленияКод2 + "," + Строка.УсловияИсчисленияКод3 + ",", ",43,") > 0
			И Не ЗначениеЗаполнено(Строка.ФинансированиеФедеральнымБюджетом) Тогда
			Текст = НСтр("ru = 'Для лица, подвергшегося воздействию радиации, не указана причина этого воздействия';
						|en = 'Impact reason is not specified for a person exposed to radiation '");
			СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "ВыплатаЗаСчетФедеральногоБюджета");
		КонецЕсли;
		Если Строка.Исправление И Не ЗначениеЗаполнено(Строка.КодПричиныИсправления) И Не ЗначениеЗаполнено(Строка.ОписаниеПричиныИсправления) Тогда
			Текст = НСтр("ru = 'Не указана причина исправления';
						|en = 'Reason for correction is not specified'");
			СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, Строка.НомерСтроки, "КодПричиныИсправления");
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДанныеЭЛН.НомерЛисткаНетрудоспособности");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроверкиЗаполненияПоРегламентуФСС

Функция ПроверитьЗаполнениеПоРегламентуФСС() Экспорт
	Отказ = Ложь;
	
	Для Каждого СтрокаТаблицы Из ДанныеЭЛН Цикл
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.СНИЛС) Тогда
			СообщитьОбОшибке(Отказ, Неопределено, "ДанныеЭЛН", СтрокаТаблицы.НомерСтроки, "СНИЛС");
		КонецЕсли;
		
		Если СтрокаТаблицы.Исправление Тогда
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.КодПричиныИсправления) Тогда
				СообщитьОбОшибке(Отказ, Неопределено, "ДанныеЭЛН", СтрокаТаблицы.НомерСтроки, "КодПричиныИсправления");
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.ОписаниеПричиныИсправления) Тогда
				СообщитьОбОшибке(Отказ, Неопределено, "ДанныеЭЛН", СтрокаТаблицы.НомерСтроки, "ОписаниеПричиныИсправления");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Не Отказ;
КонецФункции

#КонецОбласти

#Область БазоваяФункциональностьПроверокЗаполнения

Процедура СообщитьОбОшибке(Отказ, Текст, ИмяТаблицы, НомерСтроки, ИмяРеквизита)
	Если Текст = Неопределено Тогда
		Текст = НСтр("ru = 'Не заполнено поле ""%1"".';
					|en = 'The ""%1"" field is not filled in.'");
		Если ИмяТаблицы = Неопределено Тогда
			Текст = СтрШаблон(Текст, Метаданные().Реквизиты[ИмяРеквизита].Представление());
		Иначе
			Текст = СтрШаблон(Текст, Метаданные().ТабличныеЧасти[ИмяТаблицы].Реквизиты[ИмяРеквизита].Представление());
		КонецЕсли;
	КонецЕсли;
	
	Отказ = Истина;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	Если ИмяТаблицы = Неопределено Тогда
		Сообщение.Поле = ИмяРеквизита;
	Иначе
		Сообщение.Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТаблицы, НомерСтроки, ИмяРеквизита);
	КонецЕсли;
	Сообщение.Сообщить();
КонецПроцедуры

#КонецОбласти

#Область МеханизмФиксацииИзменений

Процедура ОбновитьВторичныеДанныеДокумента(ДанныеОрганизации = Истина, ДанныеОПособиях = Истина, ДанныеФизическогоЛица = Истина) Экспорт
	
	Если ОбъектЗафиксирован() Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеОрганизации Тогда
		ОбновитьДанныеСтрахователя();
	КонецЕсли;
	
	Если ДанныеОПособиях Тогда
		ОбновитьДанныеЭЛН();
	КонецЕсли;
	
	Если ДанныеФизическогоЛица Тогда
		ОбновитьДанныеФизическогоЛица();
	КонецЕсли;
	
КонецПроцедуры

Функция ОбъектЗафиксирован() Экспорт
	
	Возврат Не ПрямыеВыплатыПособийСоциальногоСтрахования.СтатусПозволяетРедактироватьДокумент(СтатусДокумента);
	
КонецФункции

Процедура ОбновитьДанныеСтрахователя()
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыДокумента = Новый Структура;
	
	ИменаРеквизитовОрганизации = "РегистрационныйНомерФСС, КодПодчиненностиФСС, ДополнительныйКодФСС, НаименованиеТерриториальногоОрганаФСС, ОГРН";
	ЗначенияРеквизитовОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, ИменаРеквизитовОрганизации);
	ДополнитьСтруктуруЕслиЗначенияЗаполнены(РеквизитыДокумента, ЗначенияРеквизитовОрганизации);
	
	ДатаПолученияСведений = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПолученияСведений, "ТелОрганизации,АдресЭлектроннойПочтыОрганизации,ИННЮЛ,КППЮЛ");
	ВставитьЗначениеЕслиЗаполнено(РеквизитыДокумента, "ТелефонОрганизации", СведенияОбОрганизации.ТелОрганизации);
	ВставитьЗначениеЕслиЗаполнено(РеквизитыДокумента, "ИНН", СведенияОбОрганизации.ИННЮЛ);
	ВставитьЗначениеЕслиЗаполнено(РеквизитыДокумента, "КПП", СведенияОбОрганизации.КППЮЛ);
	ВставитьЗначениеЕслиЗаполнено(РеквизитыДокумента, "ТелефонСоставителя", СведенияОбОрганизации.ТелОрганизации);
	ВставитьЗначениеЕслиЗаполнено(РеквизитыДокумента, "АдресЭлектроннойПочтыСоставителя", СведенияОбОрганизации.АдресЭлектроннойПочтыОрганизации);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыДокумента);
КонецПроцедуры

Процедура ДополнитьСтруктуруЕслиЗначенияЗаполнены(Приемник, Источник)
	Для Каждого Элемент Из Источник Цикл
		ВставитьЗначениеЕслиЗаполнено(Приемник, Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
КонецПроцедуры

Процедура ВставитьЗначениеЕслиЗаполнено(Структура, Ключ, Значение)
	Если ЗначениеЗаполнено(Значение) Тогда
		Структура.Вставить(Ключ, Значение);
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьДанныеЭЛН()
	ДанныеБольничных = Документы.БольничныйЛист.ДанныеДляРеестраЭЛН(, ЭтотОбъект);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДанныеБольничных", ДанныеБольничных);
	Запрос.УстановитьПараметр("Больничные", ДанныеЭЛН.Выгрузить().ВыгрузитьКолонку("ЛистокНетрудоспособности"));
	Запрос.Текст =
	"ВЫБРАТЬ *
	|ПОМЕСТИТЬ ВторичныеДанные
	|ИЗ
	|	&ДанныеБольничных КАК ДанныеБольничных
	|ГДЕ
	|	ДанныеБольничных.ЛистокНетрудоспособности В(&Больничные)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ * 
	|ИЗ ВторичныеДанные";
	ВторичныеДанные = Запрос.Выполнить().Выгрузить();
	
	ДанныеЭЛН.Загрузить(ВторичныеДанные);
КонецПроцедуры

Процедура ОбновитьДанныеФизическогоЛица()
	РеестрСоставил = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ответственный, "ФизическоеЛицо");
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли