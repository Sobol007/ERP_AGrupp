
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформациейЗарплатаКадры.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Объект.Ссылка = Документы.АГ_ЗаявкаНаСозданиеИзменениеПользователя.ПустаяСсылка() Тогда
		Объект.Статус = Перечисления.АГ_СтатусыЗаявок.ПодготовкаКПодачеЗаявки;
		Объект.ТипЗаявки = Перечисления.АГ_ТипыЗаявокСозданияИзмененияПользователя.Новый;
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		КоманднаяПанель.ПодчиненныеЭлементы.ФормаСоздатьЗаявкуОПереводе.Видимость =  Элементы.СПоследующимПереводом;
	КонецЕсли; 
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	Если Не Объект.CRM_Фотография.Пустая() Тогда
		АдресКартинки = НавигационнаяСсылкаКартинки(Объект.CRM_Фотография, УникальныйИдентификатор);
		Если ПустаяСтрока(АдресКартинки) Тогда
			ВывестиНедоступностьКартинки();
		КонецЕсли;	
	ИначеЕсли ЗначениеЗаполнено(Объект.Пользователь) и Не Объект.Пользователь.CRM_Фотография.Пустая() Тогда
		АдресКартинки = НавигационнаяСсылкаКартинки(Объект.Пользователь.CRM_Фотография, УникальныйИдентификатор);
		Если ПустаяСтрока(АдресКартинки) Тогда
			ВывестиНедоступностьКартинки();
		КонецЕсли;	
	Иначе
		АдресКартинки = "";
	КонецЕсли;
	CRM_УправлениеВидимостьюРамкиКартинки();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьСостояниеРабочегоМеста();
	Элементы.Замещаемый.ТолькоПросмотр = Не Замещение;
	Элементы.ПереадресацияПочтыЗвонков.ТолькоПросмотр = Не Переадресация;
	Элементы.ДоступКРабочимМатериалам.ТолькоПросмотр = Не НеобходимДоступКРабочимМатериалам;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
		
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Сохранить файл фотографии в справочнике Пользователь
	Если ЗначениеЗаполнено(ТекущийОбъект.Пользователь) и Не ТекущийОбъект.CRM_Фотография.Пустая() и ТекущийОбъект.CRM_Фотография<>ТекущийОбъект.Пользователь.CRM_Фотография Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПользователиПрисоединенныеФайлы.Ссылка КАК Ссылка,
		|	ПользователиПрисоединенныеФайлы.ДатаСоздания КАК ДатаСоздания
		|ИЗ
		|	Справочник.ПользователиПрисоединенныеФайлы КАК ПользователиПрисоединенныеФайлы
		|ГДЕ
		|	ПользователиПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСоздания УБЫВ";
		
		Запрос.УстановитьПараметр("ВладелецФайла", ТекущийОбъект.Пользователь);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ВыборкаДетальныеЗаписи.Следующий(); 

		
		Если ВыборкаДетальныеЗаписи.Ссылка <> ТекущийОбъект.Пользователь.CRM_Фотография Тогда
			ПользовательОбъект=ТекущийОбъект.Пользователь.ПолучитьОбъект();
			ПользовательОбъект.CRM_Фотография=ВыборкаДетальныеЗаписи.Ссылка;
			ПользовательОбъект.Записать();
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл"
		И Параметр.Свойство("ВладелецФайла") Тогда
			
		Модифицированность = Истина;
		СсылкаНаФайл = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
		
		Если ВыборИзображения Тогда
			
			Объект.CRM_Фотография = СсылкаНаФайл;
			АдресКартинки = НавигационнаяСсылкаКартинки(Объект.CRM_Фотография, УникальныйИдентификатор);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаСервере
Функция Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)
	
	РезультатОбновления = УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	УправлениеКонтактнойИнформациейЗарплатаКадры.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Результат, СотрудникиКлиентСервер.ЗависимостиВидовАдресов());
	
	Возврат РезультатОбновления;
	
КонецФункции


//////////////////////////////////////////////////////////////////////////////////
// Редактирование данных ФизическогоЛица.

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РабочееМестоУкомплектованоПриИзменении(Элемент)
	Если РабочееМестоУкомплектовано Тогда
		Объект.ИБП = Ложь;
		Объект.РабочийПК = Ложь;
		Объект.СтандартныйПакетПО = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура РабочийПКПриИзменении(Элемент)
	УстановитьСостояниеРабочегоМеста()
КонецПроцедуры

&НаКлиенте
Процедура ИБППриИзменении(Элемент)
	УстановитьСостояниеРабочегоМеста()
КонецПроцедуры

&НаКлиенте
Процедура СтандартныйПакетПОПриИзменении(Элемент)
	УстановитьСостояниеРабочегоМеста()
КонецПроцедуры

&НаСервере
Процедура ПользовательПриИзмененииНаСервере()
	
	Если Объект.Пользователь.Пустая() Тогда
		ОчиститьДанныеПользователя();
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПользователиКонтактнаяИнформация.Ссылка.Подразделение КАК Подразделение,
		|	ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Фамилия, """") КАК Фамилия,
		|	ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Имя, """") КАК Имя,
		|	ЕСТЬNULL(ФИОФизическихЛицСрезПоследних.Отчество, """") КАК Отчество,
		|	ПользователиКонтактнаяИнформация.Ссылка.CRM_ДолжностнаяПозиция КАК Должность,
		|	ПользователиКонтактнаяИнформация.Ссылка.Подразделение.ТекущийРуководитель КАК Руководитель,
		|	ПользователиКонтактнаяИнформация.Тип КАК Тип,
		|	ПользователиКонтактнаяИнформация.Вид КАК Вид,
		|	ПользователиКонтактнаяИнформация.Представление КАК Представление,
		|	ПользователиКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей,
		|	ПользователиКонтактнаяИнформация.АдресЭП КАК АдресЭП,
		|	ПользователиКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
		|	ПользователиКонтактнаяИнформация.ВидДляСписка КАК ВидДляСписка,
		|	ПользователиКонтактнаяИнформация.Значение КАК Значение,
		|	ПользователиКонтактнаяИнформация.Ссылка КАК Ссылка,
		|	ПользователиКонтактнаяИнформация.НомерТелефонаБезКодов КАК НомерТелефонаБезКодов,
		|	ФИОФизическихЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	CRM_НастройкиПользователей.Значение КАК Организация
		|ИЗ
		|	Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
		|		ПО ПользователиКонтактнаяИнформация.Ссылка.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.CRM_НастройкиПользователей КАК CRM_НастройкиПользователей
		|		ПО ПользователиКонтактнаяИнформация.Ссылка = CRM_НастройкиПользователей.Пользователь
		|ГДЕ
		|	ПользователиКонтактнаяИнформация.Ссылка = &Ссылка
		|	И CRM_НастройкиПользователей.Настройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.CRM_НастройкиПользователей.ОсновнаяОрганизация)";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	ТабКИДопРеквизитов=ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.Выгрузить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Объект, Выборка);
	
	Объект.КонтактнаяИнформация.Очистить();
	ЗаполнитьКонтактнуюИнформацию(Выборка,ТабКИДопРеквизитов);
		
	Пока Выборка.Следующий() Цикл
		ЗаполнитьКонтактнуюИнформацию(Выборка,ТабКИДопРеквизитов);
	КонецЦикла; 
	ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.Загрузить(ТабКИДопРеквизитов);
	УправлениеКонтактнойИнформацией.АГ_ПриОбновленииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	
	// Файл Фотография
	Если ЗначениеЗаполнено(Объект.Пользователь) и Не Объект.Пользователь.CRM_Фотография.Пустая() Тогда
		АдресКартинки = НавигационнаяСсылкаКартинки(Объект.Пользователь.CRM_Фотография, УникальныйИдентификатор);
		Если ПустаяСтрока(АдресКартинки) Тогда
			ВывестиНедоступностьКартинки();
		КонецЕсли;	
	Иначе
		АдресКартинки = "";
		Объект.CRM_Фотография = ПредопределенноеЗначение("Справочник.ПартнерыПрисоединенныеФайлы.ПустаяСсылка");
	КонецЕсли;
	CRM_УправлениеВидимостьюРамкиКартинки();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ПользовательПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗапуститьПроцессСогласования(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭтаФорма.Команды.ПодменюСоздатьНаОснованииОбычное_ИнтеграцияС1СДокументооборотСоздатьБизнесПроцесс, Объект);
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаявкуОПереводеНаСервере()


КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкуОПереводе(Команда)
	СоздатьЗаявкуОПереводеНаСервере();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКонтактнуюИнформацию(Выборка,ТабКИДопРеквизитов)

	НоваяСтрока = Объект.КонтактнаяИнформация.Добавить();
	НоваяСтрока.Тип	= Выборка.Тип;
	Если  Выборка.Вид = Справочники.ВидыКонтактнойИнформации.CRM_ТелефонПользователяРабочий Тогда
		НоваяСтрока.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонРабочийПользователь;
	ИначеЕсли Выборка.Вид = Справочники.ВидыКонтактнойИнформации.CRM_МобильныйТелефонПользователя Тогда
		НоваяСтрока.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйПользователь;
	ИначеЕсли Выборка.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонПользователя	Тогда
		НоваяСтрока.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонПользователь;
	ИначеЕсли Выборка.Вид = Справочники.ВидыКонтактнойИнформации.EmailПользователя	Тогда
		НоваяСтрока.Вид = Справочники.ВидыКонтактнойИнформации.EmailПользователяЗаявка;
	КонецЕсли; 
	НоваяСтрока.Представление 	= Выборка.Представление;
	НоваяСтрока.ЗначенияПолей	= Выборка.ЗначенияПолей;
	НоваяСтрока.АдресЭП			= Выборка.АдресЭП;
	НоваяСтрока.НомерТелефона	= Выборка.НомерТелефона;
	НоваяСтрока.НомерТелефонаБезКодов	= Выборка.НомерТелефонаБезКодов;
	НоваяСтрока.ВидДляСписка	= Выборка.ВидДляСписка;
	НоваяСтрока.Значение		= Выборка.Значение; 
	
	Если ТабКИДопРеквизитов.Количество()>0 Тогда
		СтрокаТЗ = ТабКИДопРеквизитов.Найти(НоваяСтрока.Вид, "Вид");
		СтрокаТЗ.Представление = Выборка.Представление;
		СтрокаТЗ.Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(СтрокаТЗ.Представление, СтрокаТЗ.Тип);
	КонецЕсли;

КонецПроцедуры // ()


&НаКлиенте
Процедура УстановитьСостояниеРабочегоМеста()
	Если Объект.ИБП Или Объект.РабочийПК Или Объект.СтандартныйПакетПО Тогда
		РабочееМестоУкомплектовано = Ложь;
	Иначе	
		РабочееМестоУкомплектовано = Истина;
	КонецЕсли; 	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы()

	Если Объект.ТипЗаявки =  Перечисления.АГ_ТипыЗаявокСозданияИзмененияПользователя.Новый Тогда
		
		Если Не Объект.Пользователь.Пустая() Тогда
		    Объект.Пользователь=Справочники.Пользователи.ПустаяСсылка();
			ОчиститьДанныеПользователя();
		КонецЕсли; 
		
		Элементы.Пользователь.ТолькоПросмотр = Истина;
		Элементы.ГруппаЗамещение.Видимость = Истина;
		Элементы.ГруппаФИО.Видимость = Истина;
		Элементы.ГруппаСтруктураПредприятия.Видимость = Истина;
		Элементы.ДатаВыходаСотрудника.Видимость = Истина;
		Элементы.ТребуетсяПодготовкаРабочегоМеста.Видимость = Истина;
		Элементы.ГруппаИмяиКартинка.Доступность=Ложь;
		Элементы.СПоследующимПереводом.Видимость = Ложь;
	
	ИначеЕсли Объект.ТипЗаявки =  Перечисления.АГ_ТипыЗаявокСозданияИзмененияПользователя.Перевод Тогда
		
		Элементы.Пользователь.ТолькоПросмотр = Ложь;
		Элементы.ГруппаЗамещение.Видимость = Ложь;
		Элементы.ГруппаФИО.Видимость = Ложь;
		Элементы.ГруппаСтруктураПредприятия.Видимость = Истина;
		Элементы.ДатаВыходаСотрудника.Видимость = Ложь;
		Элементы.ТребуетсяПодготовкаРабочегоМеста.Видимость = Истина;
		Элементы.ГруппаИмяиКартинка.Доступность=Истина;
		Элементы.СПоследующимПереводом.Видимость = Ложь;
		
	ИначеЕсли Объект.ТипЗаявки =  Перечисления.АГ_ТипыЗаявокСозданияИзмененияПользователя.Восстановление Тогда
		
		Элементы.Пользователь.ТолькоПросмотр = Ложь;
		Элементы.ГруппаЗамещение.Видимость = Ложь;
		Элементы.ГруппаФИО.Видимость = Ложь;
		Элементы.ГруппаСтруктураПредприятия.Видимость = Истина;
		Элементы.ДатаВыходаСотрудника.Видимость = Ложь;
		Элементы.ТребуетсяПодготовкаРабочегоМеста.Видимость = Истина;
		Элементы.ГруппаИмяиКартинка.Доступность=Истина;
		Элементы.СПоследующимПереводом.Видимость = Ложь;
		
	ИначеЕсли Объект.ТипЗаявки =  Перечисления.АГ_ТипыЗаявокСозданияИзмененияПользователя.ИзменениеЛичныхДанных Тогда
		
		Элементы.Пользователь.ТолькоПросмотр = Ложь;
		Элементы.ГруппаЗамещение.Видимость = Ложь;
		Элементы.ГруппаФИО.Видимость = Истина;
		Элементы.ГруппаСтруктураПредприятия.Видимость = Ложь;
		Элементы.ДатаВыходаСотрудника.Видимость = Ложь;
		Элементы.ТребуетсяПодготовкаРабочегоМеста.Видимость = Ложь;
		Элементы.ГруппаИмяиКартинка.Доступность=Истина;
		Элементы.СПоследующимПереводом.Видимость = Ложь;
		
	ИначеЕсли Объект.ТипЗаявки =  Перечисления.АГ_ТипыЗаявокСозданияИзмененияПользователя.Увольнение Тогда
		
		Элементы.Пользователь.ТолькоПросмотр = Ложь;
		Элементы.ГруппаЗамещение.Видимость = Ложь;
		Элементы.ГруппаФИО.Видимость = Ложь;
		Элементы.ГруппаСтруктураПредприятия.Видимость = Истина;
		Элементы.ДатаВыходаСотрудника.Видимость = Ложь;
		Элементы.ТребуетсяПодготовкаРабочегоМеста.Видимость = Ложь;
		Элементы.ГруппаИмяиКартинка.Доступность=Истина;
		Элементы.СПоследующимПереводом.Видимость = Истина;
		
	ИначеЕсли Объект.ТипЗаявки =  Перечисления.АГ_ТипыЗаявокСозданияИзмененияПользователя.ИзменениеПравДоступа Тогда
		
		Элементы.Пользователь.ТолькоПросмотр = Ложь;
		Элементы.ГруппаЗамещение.Видимость = Ложь;
		Элементы.ГруппаФИО.Видимость = Ложь;
		Элементы.ГруппаСтруктураПредприятия.Видимость = Ложь;
		Элементы.ДатаВыходаСотрудника.Видимость = Ложь;
		Элементы.ТребуетсяПодготовкаРабочегоМеста.Видимость = Ложь;
		Элементы.ГруппаИмяиКартинка.Доступность=Истина;
		Элементы.СПоследующимПереводом.Видимость = Ложь;
		
	ИначеЕсли Объект.ТипЗаявки =  Перечисления.АГ_ТипыЗаявокСозданияИзмененияПользователя.ПеренаправлениеПочтыЗвонков Тогда
		
		Элементы.Пользователь.ТолькоПросмотр = Ложь;
		Элементы.ГруппаЗамещение.Видимость = Ложь;
		Элементы.ГруппаФИО.Видимость = Ложь;
		Элементы.ГруппаСтруктураПредприятия.Видимость = Ложь; 
		Элементы.ДатаВыходаСотрудника.Видимость = Ложь;
		Элементы.ТребуетсяПодготовкаРабочегоМеста.Видимость = Ложь;
		Элементы.ГруппаИмяиКартинка.Доступность=Истина;
		Элементы.СПоследующимПереводом.Видимость = Ложь;
		
	КонецЕсли; 
	

КонецПроцедуры // ()

&НаСервере
Процедура ТипЗаявкиПриИзмененииНаСервере()
	 НастроитьЭлементыФормы();
КонецПроцедуры

&НаКлиенте
Процедура ТипЗаявкиПриИзменении(Элемент)
	ТипЗаявкиПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗамещениеПриИзменении(Элемент)
	Элементы.Замещаемый.ТолькоПросмотр = Не Замещение;
КонецПроцедуры

&НаКлиенте
Процедура ПереадрисацияПриИзменении(Элемент)
	Элементы.ПереадресацияПочтыЗвонков.ТолькоПросмотр = Не Переадресация;
КонецПроцедуры

&НаКлиенте
Процедура НеобходимДоступКРабочимМатериаламПриИзменении(Элемент)
	Элементы.ДоступКРабочимМатериалам.ТолькоПросмотр = Не НеобходимДоступКРабочимМатериалам;
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеПользователя()
	
	Объект.Фамилия="";
	Объект.Имя="";
	Объект.Отчество="";
	Объект.Организация=Справочники.Организации.ПустаяСсылка();
	Объект.Подразделение=Справочники.СтруктураПредприятия.ПустаяСсылка();
	Объект.Должность=Справочники.CRM_ДолжностныеПозиции.ПустаяСсылка();
	Объект.Руководитель=Справочники.ФизическиеЛица.ПустаяСсылка();
	Объект.КонтактнаяИнформация.Очистить();
	
	ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.Загрузить(Объект.КонтактнаяИнформация.Выгрузить());
	УправлениеКонтактнойИнформацией.АГ_ПриОбновленииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	
КонецПроцедуры // ()

&НаСервереБезКонтекста
Процедура ПодразделениеПриИзмененииНаСервере(Подразделение, Руководитель)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктураПредприятия.ТекущийРуководитель КАК ТекущийРуководитель
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.Ссылка = &Подразделение";
	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	Руководитель=ВыборкаДетальныеЗаписи.ТекущийРуководитель;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ПодразделениеПриИзмененииНаСервере(Объект.Подразделение, Объект.Руководитель);
КонецПроцедуры

#КонецОбласти

// Механизм картинок
#Область МеханизмКартинок

&НаСервере
Процедура CRM_УправлениеВидимостьюРамкиКартинки()
	Если ЗначениеЗаполнено(АдресКартинки) Тогда
		Элементы.АдресКартинки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);		
	Иначе
		Элементы.АдресКартинки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная);		
	КонецЕсли;		
КонецПроцедуры

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат РаботаСФайлами.ДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

&НаСервере
Процедура ВывестиНедоступностьКартинки()
	АдресКартинки = "";
	Элементы.АдресКартинки.ТекстНевыбраннойКартинки
		= НСтр("ru='Картинка не доступна (не доступен том) обратитесь к администратору.';en='Picture unavailable (volume unavailable) of contact the administrator.'");
	Объект.CRM_Фотография = Справочники.ПартнерыПрисоединенныеФайлы.ПустаяСсылка();
	CRM_УправлениеВидимостьюРамкиКартинки();	
КонецПроцедуры // ВывестиНедоступностьКартинки()

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаблокироватьДанныеФормыДляРедактирования();
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?';en='Select an image, you need to record the object. Write down?'");
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьИзображениеНаКлиентеЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
        Возврат;
		
	КонецЕсли;
	
	ДобавитьИзображениеНаКлиентеФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Если Не Записать() Тогда
            Возврат;
        КонецЕсли;
    Иначе
        Возврат;
    КонецЕсли;
    
    
    ДобавитьИзображениеНаКлиентеФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеФрагмент()
    
    Перем ИдентификаторФайла;
    
    ВыборИзображения   = Истина;
    ИдентификаторФайла = Новый УникальныйИдентификатор;
    
    //РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, CRM_ОбщегоНазначенияКлиент.ФильтрФайловИзображений());
    РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Пользователь, ИдентификаторФайла, CRM_ОбщегоНазначенияКлиент.ФильтрФайловИзображений());
	// +CRM_УТ
	#Если НЕ ВебКлиент Тогда
	// -CRM_УТ
	ВыборИзображения   = Ложь;
	// +CRM_УТ
	#КонецЕсли
	// -CRM_УТ
	
	CRM_УправлениеВидимостьюРамкиКартинки();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	Если ПустаяСтрока(АдресКартинки) Тогда Возврат; КонецЕсли;
	АдресКартинки = "";
	Объект.CRM_Фотография = ПредопределенноеЗначение("Справочник.ПартнерыПрисоединенныеФайлы.ПустаяСсылка");
	Модифицированность = Истина;
	CRM_УправлениеВидимостьюРамкиКартинки();	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?';en='Select an image, you need to record the object. Write down?'");
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьИзображениеЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
        Возврат;
		
	КонецЕсли;
	
	ДобавитьИзображениеФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Записать();
    Иначе 
        Возврат
    КонецЕсли;
    
    
    ДобавитьИзображениеФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеФрагмент()
    
    ВыборИзображения = Истина;
    ИдентификаторФайла = Новый УникальныйИдентификатор;
    
    РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла);
    ВыборИзображения = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзображение(Команда)
	
	ОчиститьСообщения();
	
	Если ЗначениеЗаполнено(Объект.CRM_Фотография) Тогда
		
		РаботаСФайламиКлиент.ОткрытьФормуФайла(Объект.CRM_Фотография);
		
	Иначе
		
		ТекстСообщения = НСтр("ru='Отсутствует изображение для редактирования';en='No image to edit'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	ПросмотретьПрисоединенныйФайл("CRM_Фотография", "АдресКартинки",
		НСтр("ru='Отсутствует изображение для просмотра';en='No image to view'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл(ИмяРеквизитаОбъекта, ИмяРеквизитаФормы, ТекстСообщенияОбОшибке)
	
	ОчиститьСообщения();
	
	Если ЗначениеЗаполнено(Объект[ИмяРеквизитаОбъекта]) Тогда
		РаботаСФайламиКлиент.ОткрытьФайл(
			РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайла(
				Объект[ИмяРеквизитаОбъекта],
				УникальныйИдентификатор));
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке,, ИмяРеквизитаФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайлов(Команда)
	
	СтруктураПараметрыВыбора =
		Новый Структура("ВладелецФайла, ЗакрыватьПриВыборе, РежимВыбора", Объект.Ссылка, Истина, Истина);

	ОткрытьФорму(
		"Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
		СтруктураПараметрыВыбора,,,,,
		Новый ОписаниеОповещения("ВыбратьКартинкуИзПрисоединенныхФайловЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайловЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если ЗначениеЗаполнено(Результат) Тогда
        Объект.CRM_Фотография = Результат;
        АдресКартинки = НавигационнаяСсылкаКартинки(Объект.CRM_Фотография, УникальныйИдентификатор)
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура CRM_ОткрытьПерсональныеНастройки(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Перед открытием формы настроек необходимо записать данные!';en='Before opening the configuration form, you need to write down the data!'"));
	Иначе
		ПараметрыФормы = Новый Структура("Пользователь", Объект.Ссылка);
		ОткрытьФорму("ОбщаяФорма.CRM_ПерсональныеНастройки", ПараметрыФормы, ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыходаСотрудникаПриИзменении(Элемент)
	
	Если Объект.ДатаВыходаСотрудника < НачалоДня(ТекущаяДата()+(3*24*60*60)) Тогда
		Объект.ДатаВыходаСотрудника = НачалоДня(ТекущаяДата()+(3*24*60*60));
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СПоследующимПереводомПриИзменении(Элемент)
	
	 КоманднаяПанель.ПодчиненныеЭлементы.ФормаСоздатьЗаявкуОПереводе.Видимость = Объект.СПоследующимПереводом;
	
КонецПроцедуры

#КонецОбласти
  