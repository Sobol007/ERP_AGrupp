#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	СтатусЗадачаВЭДСоздана();
	
	ПроведениеПоРегиструСправкиВалютногоКонтроля();
	
	РЭЙ_ЗадачиСервер.ОбработкаЗадачПоКонтролюОжидаемыхСроков();
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Для Каждого СтрокаТаб Из ПодтверждающиеДокументы Цикл
		//Имя = СокрЛП(ВРег(СтрокаТаб.Документ.Метаданные().Имя));
		//Если Имя = ВРег("ПоступлениеТоваровУслуг") Или Имя = ВРег("ПоступлениеДопРасходов") Тогда
			РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(СтрокаТаб.Документ, "ПодлежитСозданию")
		//КонецЕсли;
	КонецЦикла; 
	
	РЭЙ_ЗадачиСервер.ОбработкаЗадачПоКонтролюОжидаемыхСроков(Ссылка);
	
	// {!!! Перенести в модуль формы
	#Если Клиент Тогда
		Оповестить("ИзмененСтатусЗадачиВЭД");
	#КонецЕсли
	// }!!!
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПрефиксацияОбъектовСобытия.ПроверитьНомерДокументаПоДатеИОрганизации(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	Если Константы.РЭЙ_ИспользоватьПрефиксыВНумерацииДокументовВЭД.Получить() Тогда		
		ПрефиксацияОбъектовСобытия.УстановитьПрефиксИнформационнойБазыИОрганизации(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	//Проверка соответствия сумм указаных в СПД с суммами в документах
	Если Константы.РЭЙ_НеКонтролироватьСуммыВСправкахВалютногоКонтроля.Получить() = Ложь Тогда
		ТаблицаДокументов = ПодтверждающиеДокументы.Выгрузить(, "Документ, НомерГТД, ВалютаДокумента, ВалютаКонтракта, СуммаВВалютеДокумента, СуммаВВалютеКонтракта");
		ТаблицаДокументов.Свернуть("Документ, НомерГТД, ВалютаДокумента, ВалютаКонтракта", "СуммаВВалютеДокумента, СуммаВВалютеКонтракта");
		Для Каждого СтрокаТЧ Из ТаблицаДокументов Цикл
			Если ЗначениеЗаполнено(СтрокаТЧ.Документ) Тогда
				текСуммаДокумента = РЭЙ_СлужебныйСервер.ПолучитьСуммуДокументаДляСПД(СтрокаТЧ.Документ, КонтрактВЭД, СтрокаТЧ.НомерГТД);
				Если СтрокаТЧ.Документ.Валюта = СтрокаТЧ.ВалютаДокумента Тогда
					Если текСуммаДокумента <> СтрокаТЧ.СуммаВВалютеДокумента Тогда
						текТекстОшибки = РЭЙ_СлужебныйСервер.ПостроительСтроки("Сумма {0}{1} документа {2} отличается от суммы {3}{4} , указанной в СПД.",
						СтрокаТЧ.ВалютаДокумента, 
						Формат(текСуммаДокумента, "ЧДЦ=2; ЧН=0,00"),
						РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.Документ),
						СтрокаТЧ.ВалютаДокумента,
						Формат(СтрокаТЧ.СуммаВВалютеДокумента, "ЧДЦ=2; ЧН=0,00"));
						
						СтрокиСОшибками = ПодтверждающиеДокументы.НайтиСтроки(Новый Структура("Документ", СтрокаТЧ.Документ));
						Для Каждого СтрокаСОшибкой Из СтрокиСОшибками Цикл
							Сообщение = Новый СообщениеПользователю();
							Сообщение.Текст = текТекстОшибки;
							Сообщение.Поле = "ПодтверждающиеДокументы[" + ПодтверждающиеДокументы.Индекс(СтрокаСОшибкой) + "].Документ";
							Сообщение.УстановитьДанные(ЭтотОбъект);
							Сообщение.Сообщить();
							
							Отказ = Истина;
						КонецЦикла;
					КонецЕсли;
				Иначе
					Если текСуммаДокумента <> СтрокаТЧ.СуммаВВалютеКонтракта Тогда
						текТекстОшибки = РЭЙ_СлужебныйСервер.ПостроительСтроки("Сумма {0}{1} документа {2} отличается от суммы {3}{4} , указанной в СПД.",
						СтрокаТЧ.ВалютаКонтракта, 
						Формат(текСуммаДокумента, "ЧДЦ=2; ЧН=0,00"),
						РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.Документ),
						СтрокаТЧ.ВалютаКонтракта,
						Формат(СтрокаТЧ.СуммаВВалютеКонтракта, "ЧДЦ=2; ЧН=0,00"));
						
						СтрокиСОшибками = ПодтверждающиеДокументы.НайтиСтроки(Новый Структура("Документ", СтрокаТЧ.Документ));
						Для Каждого СтрокаСОшибкой Из СтрокиСОшибками Цикл
							Сообщение = Новый СообщениеПользователю();
							Сообщение.Текст = текТекстОшибки;
							Сообщение.Поле = "ПодтверждающиеДокументы[" + ПодтверждающиеДокументы.Индекс(СтрокаСОшибкой) + "].Документ";
							Сообщение.УстановитьДанные(ЭтотОбъект);
							Сообщение.Сообщить();
							
							Отказ = Истина;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Печать

Функция ПолучитьДанныеДляПечати() Экспорт
	Возврат ДанныеДляПечати_2018();
КонецФункции

#Область ПечатьАктуальнаяВерсия

Функция ДанныеДляПечати_2018()
	ДанныеДляПечати = Новый Структура;
	ШапкаДанных = Новый Структура;
	ДанныеДляПечати.Вставить("Шапка", ШапкаДанных);
	
	// банк
	ШапкаДанных.Вставить("БанкНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеБанкаДляПечати(Банк));
	ШапкаДанных.Вставить("БанкКод", Банк.Код);
	
	// организация
	Если Не ПустаяСтрока(Организация.НаименованиеПолное) Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.НаименованиеПолное);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.Наименование);
	КонецЕсли;
	СтрокиНаименованияДляКлиентБанка = Организация.РЭЙ_НаименованияДляКлиентБанка.НайтиСтроки(Новый Структура("ТипКлиентБанка", Банк.РЭЙ_ТипКлиентБанка));
	Если СтрокиНаименованияДляКлиентБанка.Количество() > 0 Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименованиеДляКлиентБанка", СтрокиНаименованияДляКлиентБанка[0].Наименование);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименованиеДляКлиентБанка", ШапкаДанных.ОрганизацияНаименование);
	КонецЕсли;
	
	// дата
	Если Не Корректировка Тогда
		ШапкаДанных.Вставить("Дата", Дата);
	Иначе
		ШапкаДанных.Вставить("Дата", Основание.Дата);
	КонецЕсли;
	ШапкаДанных.Вставить("Дата_Представление", Формат(ШапкаДанных.Дата, "ДФ=dd.MM.yyyy"));
	
	// номер паспорта сделки
	ШапкаДанных.Вставить("НомерПаспортаСделки", КонтрактВЭД.ПаспортСделки.НомерПаспортаСделки);
	Для Счетчик = 1 По 22 Цикл
		ШапкаДанных.Вставить("НПС_" + Счетчик, Сред(ШапкаДанных.НомерПаспортаСделки, Счетчик ,1));
	КонецЦикла;
	
	// признак корректировки
	ШапкаДанных.Вставить("Корректировка", Корректировка);
	ШапкаДанных.Вставить("НомерКорректировки", НомерКорректировки);
	Если Корректировка Тогда
		ШапкаДанных.Вставить("ПризнакКорректировки", "*(" + НомерКорректировки + ")");	
		ШапкаДанных.Вставить("Корректировка_1_0", 1);
		
		ЗапросДатаКорректируемогоДокумента = Новый Запрос;
		ЗапросДатаКорректируемогоДокумента.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(СПД.Дата) КАК Дата
		|ИЗ
		|	Документ.РЭЙ_СправкаОПодтверждающихДокументах КАК СПД
		|ГДЕ
		|	СПД.Дата < &ДатаТекущегоДокумента
		|	И СПД.Проведен
		|	И (СПД.Основание = &Основание
		|			ИЛИ СПД.Ссылка = &Основание)";
		
		ЗапросДатаКорректируемогоДокумента.УстановитьПараметр("ДатаТекущегоДокумента", Дата);
		ЗапросДатаКорректируемогоДокумента.УстановитьПараметр("Основание", Основание);
		
		ВыборкаДатаКорректируемогоДокумента = ЗапросДатаКорректируемогоДокумента.Выполнить().Выбрать();
		ВыборкаДатаКорректируемогоДокумента.Следующий();
		ШапкаДанных.Вставить("ДатаКорректируемогоДокумента", ВыборкаДатаКорректируемогоДокумента.Дата);
	Иначе
		ШапкаДанных.Вставить("ПризнакКорректировки", "");
		ШапкаДанных.Вставить("Корректировка_1_0", 0);
		ШапкаДанных.Вставить("ДатаКорректируемогоДокумента", Дата(1,1,1));
	КонецЕсли;
	
	// ответственные лица
	ШапкаДанных.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(Руководитель, ШапкаДанных.Дата));
	ШапкаДанных.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ГлавныйБухгалтер, ШапкаДанных.Дата));
	
	// комментарий
	ШапкаДанных.Вставить("Комментарий", Комментарий);
	
	ДанныеДляПечати.Вставить("Таблица1", Новый Массив);
	ДанныеДляПечати.Вставить("Таблица2", Новый Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧ.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ТЧ.НомерСтроки КАК НомерСтроки,
	|	ТЧ.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ТЧ.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента,
	|	ТЧ.СуммаАвансаВВалютеКонтракта КАК СуммаАвансаВВалютеКонтракта,
	|	ТЧ.СуммаАвансаВВалютеДокумента КАК СуммаАвансаВВалютеДокумента
	|ИЗ
	|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК ТЧ
	|ГДЕ
	|	ТЧ.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДляПечати,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаВВалютеКонтракта),
	|	СУММА(СуммаВВалютеДокумента),
	|	СУММА(СуммаАвансаВВалютеКонтракта),
	|	СУММА(СуммаАвансаВВалютеДокумента)
	|ПО
	|	НомерСтрокиДляПечати";
	
	Если РучноеЗаполнение Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы", "Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументыРучные");
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Пока ВыборкаИтоги.Следующий() Цикл
		СтрокаТаблицы1 = Новый Структура;
		
		ВыборкаСтроки = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаСтроки.Следующий();
		
		Если Не РучноеЗаполнение Тогда
			ИмяТЧ = "ПодтверждающиеДокументы";
			СтрокаТЧ = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
			текДокумент = СтрокаТЧ.Документ;
		Иначе
			ИмяТЧ = "ПодтверждающиеДокументыРучные";
			СтрокаТЧ = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
			текДокумент = Неопределено;
		КонецЕсли;
		
		// Таблица 1
		// номер строки
		СтрокаТаблицы1.Вставить("НомерСтроки", ВыборкаИтоги.НомерСтрокиДляПечати);
		
		// подтверждающий документ
		СтрокаТаблицы1.Вставить("НомерПодтверждающегоДокумента_Представление", РЭЙ_СлужебныйСервер.ПолучитьНомерПодтверждающегоДокумента(СтрокаТЧ, РучноеЗаполнение));
		Если ЗначениеЗаполнено(СтрокаТЧ.НомерГТД) Тогда
			СтрокаТаблицы1.Вставить("НомерГТД", Строка(СтрокаТЧ.НомерГТД));
			СтрокаТаблицы1.Вставить("НомерПодтверждающегоДокумента", "");
		Иначе
			СтрокаТаблицы1.Вставить("НомерГТД", "");                 
			СтрокаТаблицы1.Вставить("НомерПодтверждающегоДокумента", СтрокаТаблицы1.НомерПодтверждающегоДокумента_Представление);
		КонецЕсли;
		
		текДатаПодтверджающегоДокумента = РЭЙ_СлужебныйСервер.ПолучитьДатуПодтверждающегоДокумента(СтрокаТЧ, РучноеЗаполнение);
		СтрокаТаблицы1.Вставить("ДатаПодтверждающегоДокумента_ВсегдаЗаполнено", текДатаПодтверджающегоДокумента);
		Если ЗначениеЗаполнено(СтрокаТЧ.НомерГТД) Тогда
			текДатаПодтверджающегоДокумента = Дата(1,1,1);
		КонецЕсли;
		СтрокаТаблицы1.Вставить("ДатаПодтверждающегоДокумента", текДатаПодтверджающегоДокумента);
		СтрокаТаблицы1.Вставить("ДатаПодтверждающегоДокумента_Представление", Формат(СтрокаТаблицы1.ДатаПодтверждающегоДокумента, "ДФ=dd.MM.yyyy"));
		
		// вид документа
		СтрокаТаблицы1.Вставить("ВидДокумента", СтрокаТЧ.ВидДокумента.Код);
		
		// код валюты документа
		СтрокаТаблицы1.Вставить("ВалютаДокументаКод", СтрокаТЧ.ВалютаДокумента.Код);

		// сумма в валюте документа
		СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента", ВыборкаИтоги.СуммаВВалютеДокумента);
		Если ВыборкаИтоги.СуммаАвансаВВалютеДокумента = 0 Или ВыборкаИтоги.СуммаВВалютеДокумента = ВыборкаИтоги.СуммаАвансаВВалютеДокумента Тогда
			СтрокаТаблицы1.Вставить("СуммаАвансаВВалютеДокумента", 0);
			СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеДокумента, "ЧДЦ=2"));
		Иначе	
			СтрокаТаблицы1.Вставить("СуммаАвансаВВалютеДокумента", ВыборкаИтоги.СуммаАвансаВВалютеДокумента);
			СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеДокумента, "ЧДЦ=2") + "/" + Формат(СтрокаТаблицы1.СуммаАвансаВВалютеДокумента, "ЧДЦ=2"));
		КонецЕсли;
		
		// код валюты контракта
		СтрокаТаблицы1.Вставить("ВалютаКонтрактаКод", СтрокаТЧ.ВалютаКонтракта.Код);

		// сумма в валюте контракта
		СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта", ВыборкаИтоги.СуммаВВалютеКонтракта);
		Если ВыборкаИтоги.СуммаАвансаВВалютеКонтракта = 0 Или ВыборкаИтоги.СуммаВВалютеКонтракта = ВыборкаИтоги.СуммаАвансаВВалютеКонтракта Тогда
			СтрокаТаблицы1.Вставить("СуммаАвансаВВалютеКонтракта", 0);
			СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеКонтракта, "ЧДЦ=2"));
		Иначе	
			СтрокаТаблицы1.Вставить("СуммаАвансаВВалютеКонтракта", ВыборкаИтоги.СуммаАвансаВВалютеКонтракта);
			СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеКонтракта, "ЧДЦ=2") + "/" + Формат(СтрокаТаблицы1.СуммаАвансаВВалютеКонтракта, "ЧДЦ=2"));
		КонецЕсли;
		
		// признак поставки
		СтрокаТаблицы1.Вставить("ПризнакПоставки", Сред(Строка(СтрокаТЧ.ПризнакПоставки), 1, 1));
		
		// ожидаемый срок
		СтрокаТаблицы1.Вставить("ОжидаемыйСрок", СтрокаТЧ.ОжидаемыйСрок);
		СтрокаТаблицы1.Вставить("ОжидаемыйСрок_Представление", Формат(СтрокаТаблицы1.ОжидаемыйСрок, "ДФ=dd.MM.yyyy"));
		
		// код страны грузоотправителя/грузополучателя
		СтрокаТаблицы1.Вставить("КодСтраныГрузоотправителя", СтрокаТЧ.СтранаГрузоотправителяГрузополучателя.Код);
		
		// признак корректировки
		Если СтрокаТЧ.Корректировка Тогда
			СтрокаТаблицы1.Вставить("ПризнакКорректировки", Формат(ШапкаДанных.ДатаКорректируемогоДокумента, "ДФ=dd.MM.yyyy"));
		Иначе
			СтрокаТаблицы1.Вставить("ПризнакКорректировки", "");
		КонецЕсли;
		
		ДанныеДляПечати.Таблица1.Добавить(СтрокаТаблицы1);
		
		//Таблица 2
		ВыборкаСтроки.Сбросить();
		ТекстПримечания = "";
		Пока ВыборкаСтроки.Следующий() Цикл
			СтрокаТЧ_Примечание = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
			Если Не ПустаяСтрока(СтрокаТЧ_Примечание.Примечание) Тогда
				ТекстПримечания = ТекстПримечания + ?(ТекстПримечания = "", "", "; ") + СокрЛП(СтрокаТЧ_Примечание.Примечание);
			КонецЕсли;
		КонецЦикла;
		Если Не ПустаяСтрока(ТекстПримечания) Тогда
			СтрокаТаблицы2 = Новый Структура;
			СтрокаТаблицы2.Вставить("НомерСтроки", ВыборкаИтоги.НомерСтрокиДляПечати);
			СтрокаТаблицы2.Вставить("Содержание", ТекстПримечания);
			ДанныеДляПечати.Таблица2.Добавить(СтрокаТаблицы2);
		КонецЕсли;
	КонецЦикла; 
		
	Возврат ДанныеДляПечати;
КонецФункции

Функция ПечатьСПД_2018() Экспорт
	ДанныеДляПечати = ДанныеДляПечати_2018();
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СправкаОПодтверждающихДокументах2018";
	
	Макет = ПолучитьМакет("СправкаОПодтверждающихДокументах_2018");
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица1.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Строка");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица1 Цикл
			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("ШапкаПримечание");
	ТабДокумент.Вывести(Область);
	
	Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица2 Цикл
		Область = Макет.ПолучитьОбласть("Примечание");
		Область.Параметры.Заполнить(СтрокаТЧ);
		ТабДокумент.Вывести(Область);
	КонецЦикла; 
	
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	УстановитьСтатусЗадачРаспечатана(1);
	
	Возврат ТабДокумент;
КонецФункции

#КонецОбласти

#Область ПечатьУстаревшиеВерсии

Функция ДанныеДляПечати_2015()
	ДанныеДляПечати = Новый Структура;
	ШапкаДанных = Новый Структура;
	ДанныеДляПечати.Вставить("Шапка", ШапкаДанных);
	
	// банк
	ШапкаДанных.Вставить("БанкНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеБанкаДляПечати(Банк));
	ШапкаДанных.Вставить("БанкКод", Банк.Код);
	
	// организация
	Если Не ПустаяСтрока(Организация.НаименованиеПолное) Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.НаименованиеПолное);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.Наименование);
	КонецЕсли;
	СтрокиНаименованияДляКлиентБанка = Организация.РЭЙ_НаименованияДляКлиентБанка.НайтиСтроки(Новый Структура("ТипКлиентБанка", Банк.РЭЙ_ТипКлиентБанка));
	Если СтрокиНаименованияДляКлиентБанка.Количество() > 0 Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименованиеДляКлиентБанка", СтрокиНаименованияДляКлиентБанка[0].Наименование);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименованиеДляКлиентБанка", ШапкаДанных.ОрганизацияНаименование);
	КонецЕсли;
	
	// дата
	Если Не Корректировка Тогда
		ШапкаДанных.Вставить("Дата", Дата);
	Иначе
		ШапкаДанных.Вставить("Дата", Основание.Дата);
	КонецЕсли;
	ШапкаДанных.Вставить("Дата_Представление", Формат(ШапкаДанных.Дата, "ДФ=dd.MM.yyyy"));
	
	// номер паспорта сделки
	ШапкаДанных.Вставить("НомерПаспортаСделки", КонтрактВЭД.ПаспортСделки.НомерПаспортаСделки);
	Для Счетчик = 1 По 22 Цикл
		ШапкаДанных.Вставить("НПС_" + Счетчик, Сред(ШапкаДанных.НомерПаспортаСделки, Счетчик ,1));
	КонецЦикла;
	
	// признак корректировки
	ШапкаДанных.Вставить("Корректировка", Корректировка);
	ШапкаДанных.Вставить("НомерКорректировки", НомерКорректировки);
	Если Корректировка Тогда
		ШапкаДанных.Вставить("ПризнакКорректировки", "*(" + НомерКорректировки + ")");	
		ШапкаДанных.Вставить("Корректировка_1_0", 1);
	Иначе
		ШапкаДанных.Вставить("ПризнакКорректировки", "");
		ШапкаДанных.Вставить("Корректировка_1_0", 0);
	КонецЕсли;
	
	// ответственные лица
	ШапкаДанных.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(Руководитель, ШапкаДанных.Дата));
	ШапкаДанных.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ГлавныйБухгалтер, ШапкаДанных.Дата));
	
	// комментарий
	ШапкаДанных.Вставить("Комментарий", Комментарий);
	
	ДанныеДляПечати.Вставить("Таблица1", Новый Массив);
	ДанныеДляПечати.Вставить("Таблица2", Новый Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧ.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ТЧ.НомерСтроки КАК НомерСтроки,
	|	ТЧ.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ТЧ.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента,
	|	ТЧ.СуммаАвансаВВалютеКонтракта КАК СуммаАвансаВВалютеКонтракта,
	|	ТЧ.СуммаАвансаВВалютеДокумента КАК СуммаАвансаВВалютеДокумента
	|ИЗ
	|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК ТЧ
	|ГДЕ
	|	ТЧ.Ссылка = &Ссылка
	|	И (ТЧ.Ссылка.Первичное
	|			ИЛИ ТЧ.Ссылка.Корректировка
	|				И ТЧ.Корректировка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДляПечати,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаВВалютеКонтракта),
	|	СУММА(СуммаВВалютеДокумента),
	|	СУММА(СуммаАвансаВВалютеКонтракта),
	|	СУММА(СуммаАвансаВВалютеДокумента)
	|ПО
	|	НомерСтрокиДляПечати";
	
	Если РучноеЗаполнение Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы", "Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументыРучные");
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Пока ВыборкаИтоги.Следующий() Цикл
		СтрокаТаблицы1 = Новый Структура;
		
		ВыборкаСтроки = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаСтроки.Следующий();
		
		Если Не РучноеЗаполнение Тогда
			ИмяТЧ = "ПодтверждающиеДокументы";
			СтрокаТЧ = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
			текДокумент = СтрокаТЧ.Документ;
		Иначе
			ИмяТЧ = "ПодтверждающиеДокументыРучные";
			СтрокаТЧ = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
			текДокумент = Неопределено;
		КонецЕсли;
		
		// Таблица 1
		// номер строки
		СтрокаТаблицы1.Вставить("НомерСтроки", ВыборкаИтоги.НомерСтрокиДляПечати);
		
		// подтверждающий документ
		СтрокаТаблицы1.Вставить("НомерПодтверждающегоДокумента_Представление", РЭЙ_СлужебныйСервер.ПолучитьНомерПодтверждающегоДокумента(СтрокаТЧ, РучноеЗаполнение));
		Если ЗначениеЗаполнено(СтрокаТЧ.НомерГТД) Тогда
			СтрокаТаблицы1.Вставить("НомерГТД", Строка(СтрокаТЧ.НомерГТД));
			СтрокаТаблицы1.Вставить("НомерПодтверждающегоДокумента", "");
		Иначе
			СтрокаТаблицы1.Вставить("НомерГТД", "");                 
			СтрокаТаблицы1.Вставить("НомерПодтверждающегоДокумента", СтрокаТаблицы1.НомерПодтверждающегоДокумента_Представление);
		КонецЕсли;
		
		текДатаПодтверджающегоДокумента = РЭЙ_СлужебныйСервер.ПолучитьДатуПодтверждающегоДокумента(СтрокаТЧ, РучноеЗаполнение);
		СтрокаТаблицы1.Вставить("ДатаПодтверждающегоДокумента_ВсегдаЗаполнено", текДатаПодтверджающегоДокумента);
		Если ЗначениеЗаполнено(СтрокаТЧ.НомерГТД) Тогда
			текДатаПодтверджающегоДокумента = Дата(1,1,1);
		КонецЕсли;
		СтрокаТаблицы1.Вставить("ДатаПодтверждающегоДокумента", текДатаПодтверджающегоДокумента);
		СтрокаТаблицы1.Вставить("ДатаПодтверждающегоДокумента_Представление", Формат(СтрокаТаблицы1.ДатаПодтверждающегоДокумента, "ДФ=dd.MM.yyyy"));
		
		// вид документа
		СтрокаТаблицы1.Вставить("ВидДокумента", СтрокаТЧ.ВидДокумента.Код);
		
		// код валюты документа
		СтрокаТаблицы1.Вставить("ВалютаДокументаКод", СтрокаТЧ.ВалютаДокумента.Код);

		// сумма в валюте документа
		СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента", ВыборкаИтоги.СуммаВВалютеДокумента);
		Если ВыборкаИтоги.СуммаАвансаВВалютеДокумента = 0 Или ВыборкаИтоги.СуммаВВалютеДокумента = ВыборкаИтоги.СуммаАвансаВВалютеДокумента Тогда
			СтрокаТаблицы1.Вставить("СуммаАвансаВВалютеДокумента", 0);
			СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеДокумента, "ЧДЦ=2"));
		Иначе	
			СтрокаТаблицы1.Вставить("СуммаАвансаВВалютеДокумента", ВыборкаИтоги.СуммаАвансаВВалютеДокумента);
			СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеДокумента, "ЧДЦ=2") + "/" + Формат(СтрокаТаблицы1.СуммаАвансаВВалютеДокумента, "ЧДЦ=2"));
		КонецЕсли;
		
		// код валюты контракта
		СтрокаТаблицы1.Вставить("ВалютаКонтрактаКод", СтрокаТЧ.ВалютаКонтракта.Код);

		// сумма в валюте контракта
		СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта", ВыборкаИтоги.СуммаВВалютеКонтракта);
		Если ВыборкаИтоги.СуммаАвансаВВалютеКонтракта = 0 Или ВыборкаИтоги.СуммаВВалютеКонтракта = ВыборкаИтоги.СуммаАвансаВВалютеКонтракта Тогда
			СтрокаТаблицы1.Вставить("СуммаАвансаВВалютеКонтракта", 0);
			СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеКонтракта, "ЧДЦ=2"));
		Иначе	
			СтрокаТаблицы1.Вставить("СуммаАвансаВВалютеКонтракта", ВыборкаИтоги.СуммаАвансаВВалютеКонтракта);
			СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеКонтракта, "ЧДЦ=2") + "/" + Формат(СтрокаТаблицы1.СуммаАвансаВВалютеКонтракта, "ЧДЦ=2"));
		КонецЕсли;
		
		// признак поставки
		СтрокаТаблицы1.Вставить("ПризнакПоставки", Сред(Строка(СтрокаТЧ.ПризнакПоставки), 1, 1));
		
		// ожидаемый срок
		СтрокаТаблицы1.Вставить("ОжидаемыйСрок", СтрокаТЧ.ОжидаемыйСрок);
		СтрокаТаблицы1.Вставить("ОжидаемыйСрок_Представление", Формат(СтрокаТаблицы1.ОжидаемыйСрок, "ДФ=dd.MM.yyyy"));
		
		// код страны грузоотправителя/грузополучателя
		СтрокаТаблицы1.Вставить("КодСтраныГрузоотправителя", СтрокаТЧ.СтранаГрузоотправителяГрузополучателя.Код);
		
		ДанныеДляПечати.Таблица1.Добавить(СтрокаТаблицы1);
		
		//Таблица 2
		ВыборкаСтроки.Сбросить();
		ТекстПримечания = "";
		Пока ВыборкаСтроки.Следующий() Цикл
			СтрокаТЧ_Примечание = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
			Если Не ПустаяСтрока(СтрокаТЧ_Примечание.Примечание) Тогда
				ТекстПримечания = ТекстПримечания + ?(ТекстПримечания = "", "", "; ") + СокрЛП(СтрокаТЧ_Примечание.Примечание);
			КонецЕсли;
		КонецЦикла;
		Если Не ПустаяСтрока(ТекстПримечания) Тогда
			СтрокаТаблицы2 = Новый Структура;
			СтрокаТаблицы2.Вставить("НомерСтроки", ВыборкаИтоги.НомерСтрокиДляПечати);
			СтрокаТаблицы2.Вставить("Содержание", ТекстПримечания);
			ДанныеДляПечати.Таблица2.Добавить(СтрокаТаблицы2);
		КонецЕсли;
	КонецЦикла; 
		
	Возврат ДанныеДляПечати;
КонецФункции

Функция ПечатьСПД_2015() Экспорт
	ДанныеДляПечати = ДанныеДляПечати_2015();
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СправкаОПодтверждающихДокументах2015";
	
	Макет = ПолучитьМакет("СправкаОПодтверждающихДокументах_2015");
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица1.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Строка");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица1 Цикл
			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("ШапкаПримечание");
	ТабДокумент.Вывести(Область);
	
	Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица2 Цикл
		Область = Макет.ПолучитьОбласть("Примечание");
		Область.Параметры.Заполнить(СтрокаТЧ);
		ТабДокумент.Вывести(Область);
	КонецЦикла; 
	
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	УстановитьСтатусЗадачРаспечатана(1);
	
	Возврат ТабДокумент;
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ВспомогательныеПроцедуры

Процедура ПроведениеПоРегиструСправкиВалютногоКонтроля()
	ПодтверждающиеДокументыСвернуто = ПодтверждающиеДокументы.Выгрузить();
	Для Каждого СтрокаТЧ Из ПодтверждающиеДокументыСвернуто Цикл
		СтрокаТЧ.ДопСоглашение = ?(КонтрактВЭД.РамочныйКонтракт, СтрокаТЧ.ДопСоглашение, Неопределено);
	КонецЦикла;	
	ПодтверждающиеДокументыСвернуто.Свернуть("Документ, ДопСоглашение, ВалютаДокумента", "СуммаВВалютеДокумента, СуммаВВалютеКонтракта");
	Для Каждого СтрокаТЧ Из ПодтверждающиеДокументыСвернуто Цикл
		Запись = Движения.РЭЙ_СправкиВалютногоКонтроля.Добавить();
		Запись.Период = Дата;
		Запись.КонтрактВЭД = КонтрактВЭД;
		Запись.ПаспортСделки = КонтрактВЭД.ПаспортСделки;
		Запись.РасчетныйДокумент = СтрокаТЧ.Документ;
		Запись.ДопСоглашение = СтрокаТЧ.ДопСоглашение;
		Запись.Справка = Ссылка;
		Запись.ВалютаДокумента = СтрокаТЧ.ВалютаДокумента;
		Запись.СуммаВВалютеДокумента = СтрокаТЧ.СуммаВВалютеДокумента;
		Запись.СуммаВВалютеКонтракта = СтрокаТЧ.СуммаВВалютеКонтракта;

		Имя = СокрЛП(ВРег(Запись.РасчетныйДокумент.Метаданные().Имя));
		Запись.ЭтоДебет = Не (Имя = ВРег("ПоступлениеТоваровУслуг") 
		Или Имя = ВРег("ПриобретениеТоваровУслуг") 
		Или Имя = ВРег("ПриобретениеУслугПрочихАктивов") 
		Или Имя = ВРег("ПоступлениеДопРасходов") 
		Или Имя = ВРег("ОтчетКомиссионераОПродажах"));
	КонецЦикла;
	
	
	ПодтверждающиеДокументыСвернуто = ПодтверждающиеДокументыРучные.Выгрузить();
	Для Каждого СтрокаТЧ Из ПодтверждающиеДокументыСвернуто Цикл
		СтрокаТЧ.ДопСоглашение = ?(КонтрактВЭД.РамочныйКонтракт, СтрокаТЧ.ДопСоглашение, Неопределено);
	КонецЦикла;	
	ПодтверждающиеДокументыСвернуто.Свернуть("ДопСоглашение, ВалютаДокумента", "СуммаВВалютеДокумента, СуммаВВалютеКонтракта");
	Для Каждого СтрокаТЧ Из ПодтверждающиеДокументыСвернуто Цикл
		Запись = Движения.РЭЙ_СправкиВалютногоКонтроля.Добавить();
		Запись.Период = Дата;
		Запись.КонтрактВЭД = КонтрактВЭД;
		Запись.ПаспортСделки = КонтрактВЭД.ПаспортСделки;
		Запись.ИдентификаторРучнойОперации = Новый УникальныйИдентификатор;
		Запись.ДопСоглашение = СтрокаТЧ.ДопСоглашение;
		Запись.Справка = Ссылка;
		Запись.ВалютаДокумента = СтрокаТЧ.ВалютаДокумента;
		Запись.СуммаВВалютеДокумента = СтрокаТЧ.СуммаВВалютеДокумента;
		Запись.СуммаВВалютеКонтракта = СтрокаТЧ.СуммаВВалютеКонтракта;
		Если Истина Тогда
			Запись.ЭтоДебет = Ложь;
		Иначе
			Запись.ЭтоДебет = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СтатусЗадачаВЭДСоздана()
	ИзменилиСтатус = Ложь;
	Для Каждого СтрокаТаб Из ПодтверждающиеДокументы Цикл
		СтатусЗадачи =  РЭЙ_ЗадачиСервер.ПолучитьСтатусЗадачиЗадачи(СтрокаТаб.Документ);
		ТД = СтрокаТаб.Документ;
		Если СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСозданию 
			ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСдачеЗавтра
			ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСдачеПослеЗавтра
			ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСдачеСегодня
			ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПросрочена
			Тогда
			
			РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(ТД, "Создана");	
			ИзменилиСтатус = Истина;
			
		КонецЕсли;
	КонецЦикла; 
	
	Если ИзменилиСтатус Тогда
		#Если Клиент Тогда
		Оповестить("ИзмененСтатусЗадачиВЭД");
		#КонецЕсли
	КонецЕсли; 
	
КонецПроцедуры

Процедура УстановитьСтатусЗадачРаспечатана(текВидПредоставленияДокументовПоСделке) Экспорт
	Если Банк.РЭЙ_ВидПредоставленияДокументовПоСделке = текВидПредоставленияДокументовПоСделке Или ФТСПередалаГТДвЦБР Тогда
		Если Не РучноеЗаполнение Тогда
			ТаблицаДокументов = ПодтверждающиеДокументы.Выгрузить(, "Документ");
			ТаблицаДокументов.Свернуть("Документ", "");
			Для Каждого СтрокаТЧ Из ТаблицаДокументов Цикл
				Если ЗначениеЗаполнено(СтрокаТЧ.Документ) Тогда
					РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(СтрокаТЧ.Документ, "Распечатана");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

