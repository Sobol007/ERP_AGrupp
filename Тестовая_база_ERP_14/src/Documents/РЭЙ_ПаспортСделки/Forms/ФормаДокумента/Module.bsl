#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если Параметры.Ключ.Пустая() Тогда
		Если ЗначениеЗаполнено(Параметры.Основание) Тогда
			ЗаполнитьДокументНаОсновании(Параметры.Основание);
		Иначе
			Если Не ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
				ЗаполнитьДокументПоУмолчанию();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СтароеЗначение_Дата = Объект.Дата;
	СтароеЗначение_Контрагент = Объект.Контрагент;

	ПрочитатьДополнительныеРеквизиты_Контрагент();
	ПрочитатьДополнительныеРеквизиты_КонтрактВЭД();
	ПрочитатьДополнительныеРеквизиты_НомерПаспортаСделки();
	ПрочитатьДополнительныеРеквизиты_Организация();
	ПрочитатьДополнительныеРеквизиты_ПереводВДругойБанк();
	ПрочитатьДополнительныеРеквизиты_ПереоформлениеПС();
	
	ПрочитатьНаборЗаписей_РазрешенияВалютногоКонтроля();
	
	ЗаполнитьСписокОперацийЗакрытия();
	ЗаполнитьСписокДосье();
	
	УстановитьОтображение_БанковскийСчет();
	УстановитьОтображение_ВидПредоставленияДокументовПоСделке();
	УстановитьОтображение_ДополнительныеРеквизитыКонтрактаВЭД();
	УстановитьОтображение_КартинкаСтатус();
	УстановитьОтображение_КППОбособленногоПодразделения();
	УстановитьОтображение_ПереводВДругойБанк();
	
	ДобавитьУсловноеОформление_ПереводВДругойБанк();
	ДобавитьУсловноеОформление_ПереоформлениеПС();
	ДобавитьУсловноеОформление_СписокДосье();
	
	ЗапретитьРедактированиеЗакрытогоПаспортаСделки();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Если ЗначениеЗаполнено(Объект.КонтрактВЭД) Тогда
			Если РЭЙ_СлужебныйСервер.ЕстьДублированиеПаспортаСделкиПоКонтракту(Объект.КонтрактВЭД, Объект.Ссылка) Тогда
				ПоказатьПредупреждение(, "По данному контракту ВЭД уже создано Заявление о постановке на учет.");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "РЭЙ_ЗаписанЭлементКонтрактыВЭД" Тогда
		ПрочитатьДополнительныеРеквизиты_КонтрактВЭД();
		ПрочитатьНаборЗаписей_РазрешенияВалютногоКонтроля();
		УстановитьОтображение_ДополнительныеРеквизитыКонтрактаВЭД();
	КонецЕсли;
	
	Если ИмяСобытия = "ИзмененСправочник_РЭЙ_Файлы" Тогда
		Если Элементы.СписокДосье.ТекущаяСтрока <> Неопределено Тогда
			текСсылка = СписокДосье.НайтиПоИдентификатору(Элементы.СписокДосье.ТекущаяСтрока).Ссылка;
		Иначе
			текСсылка = Неопределено;
		КонецЕсли;
		
		ЗаполнитьСписокДосье();
		Если текСсылка <> Неопределено Тогда
			СтрокиДосье = СписокДосье.НайтиСтроки(Новый Структура("Ссылка", текСсылка));
			Если СтрокиДосье.Количество() > 0 Тогда
				Элементы.СписокДосье.ТекущаяСтрока = СтрокиДосье[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)	
	Если РЭЙ_СлужебныйСервер.ЕстьДублированиеПаспортаСделкиПоКонтракту(Объект.КонтрактВЭД, Объект.Ссылка) Тогда
		ПоказатьПредупреждение(, "По данному контракту ВЭД уже создано Заявление о постановке на учет.");
		Отказ = Истина;
	КонецЕсли;
	
	ЗаполнитьНомерПаспортаСделки();
	
	Объект.НомерПСДо18062004 = 
	ДополнитьПробелами(НомерПСДо18062004_1_1, 1) + "/"
	+ ДополнитьПробелами(НомерПСДо18062004_3_10, 8) + "/" 
	+ ДополнитьПробелами(НомерПСДо18062004_12_14, 3) + "/"
	+ ДополнитьПробелами(НомерПСДо18062004_16_20, 5);
	
	Объект.НомерПСДругойБанк_1_8 = 
	ДополнитьПробелами(НомерПСДругойБанк_1_2, 2)
	+ ДополнитьПробелами(НомерПСДругойБанк_3_4, 2) 
	+ ДополнитьПробелами(НомерПСДругойБанк_5_8, 4);
	
	Объект.НомерПСДругойБанк = 
	ДополнитьПробелами(Объект.НомерПСДругойБанк_1_8, 8) + "/"
	+ ДополнитьПробелами(Объект.НомерПСДругойБанк_10_13, 4) + "/"
	+ ДополнитьПробелами(Объект.НомерПСДругойБанк_15_18, 4) + "/"
	+ ДополнитьПробелами(Объект.НомерПСДругойБанк_20, 1) + "/"
	+ ДополнитьПробелами(Объект.НомерПСДругойБанк_22, 1);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьСписокДосье();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("РЭЙ_ОбновитьФормуЗадач");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Файлы(Команда)
	Если Параметры.Ключ.Пустая() Тогда
		ТекстВопроса = "Документ еще не записан. Записать?";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ФайлыВопросОЗаписи", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ОткрытьФормуФайлы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыВопросОЗаписи(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Если Записать() Тогда
			ОткрытьФормуФайлы();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуФайлы()
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОбъектВладелец", Объект.Ссылка);
	ОткрытьФорму("Справочник.РЭЙ_Файлы.ФормаСписка", ПараметрыОткрытия,, Новый УникальныйИдентификатор(),,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Если Объект.ДатаПаспортаСделки = НачалоДня(СтароеЗначение_Дата) Тогда
		Объект.ДатаПаспортаСделки = Объект.Дата;
		ДатаПаспортаСделкиПриИзмененииНаСервере();
	КонецЕсли;
	
	Объект.ДатаПредоставленияДокументовПоСделке = Объект.Дата;
	
	СтароеЗначение_Дата = Объект.Дата;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПаспортаСделкиПриИзменении(Элемент)
	ДатаПаспортаСделкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаПаспортаСделкиПриИзмененииНаСервере()
	НомерПаспортаСделки_1_2 = Формат(Объект.ДатаПаспортаСделки, "ДФ=yy");
	НомерПаспортаСделки_3_4 = Формат(Объект.ДатаПаспортаСделки, "ДФ=MM");
	ЗаполнитьНомерПаспортаСделки();
	
	Объект.ДатаОформленияЛиста2 = Объект.ДатаПаспортаСделки;
КонецПроцедуры

&НаКлиенте
Процедура НеПечататьНомерИДатуПСПриИзменении(Элемент)
	УстановитьОтображение_КартинкаСтатус();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	Если Объект.КонтрактВЭД.Организация <> Объект.Организация Тогда
		Объект.КонтрактВЭД = Справочники.РЭЙ_КонтрактыВЭД.ПустаяСсылка();
		КонтрактВЭДПриИзмененииНаСервере();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.БанковскийСчет) И Объект.БанковскийСчет.Владелец <> Объект.Организация Тогда
		Объект.БанковскийСчет = Неопределено;
		БанковскийСчетПриИзмененииНаСервере();
	КонецЕсли;
		
	Объект.НомерПаспортаСделки_22 = Сред(Строка(Объект.Организация.РЭЙ_ПризнакРезидента), 1);
	ЗаполнитьНомерПаспортаСделки();
	
	Если Объект.УказыватьКППОбособленногоПодразделения Тогда
		Если Объект.ОбособленноеПодразделение.Владелец <> Объект.Организация Тогда
			Объект.ОбособленноеПодразделение = Неопределено;
			ОбособленноеПодразделениеПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
	
	РЭЙ_СлужебныйСервер.УстановитьРуководителей(Объект);
	
	ПрочитатьДополнительныеРеквизиты_Организация();
КонецПроцедуры

&НаКлиенте
Процедура ОбособленноеПодразделениеПриИзменении(Элемент)
	ОбособленноеПодразделениеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбособленноеПодразделениеПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.ОбособленноеПодразделение) Тогда
		Объект.КППОбособленногоПодразделения = Объект.ОбособленноеПодразделение.КПП;
	Иначе
		Объект.КППОбособленногоПодразделения = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УказыватьКППОбособленногоПодразделенияПриИзменении(Элемент)
	УказыватьКППОбособленногоПодразделенияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура УказыватьКППОбособленногоПодразделенияПриИзмененииНаСервере()
	Если Объект.УказыватьКППОбособленногоПодразделения Тогда
		Объект.ОбособленноеПодразделение = НайтиОбособленноеПодразделение();  
	Иначе
		Объект.ОбособленноеПодразделение = "";
	КонецЕсли;
	ОбособленноеПодразделениеПриИзмененииНаСервере();
	
	УстановитьОтображение_КППОбособленногоПодразделения();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Контрагент_НеЯвляетсяРезидентом = РЭЙ_СлужебныйСервер.ПолучитьЗначениеРеквизита(Объект.Контрагент, "РЭЙ_НеЯвляетсяРезидентом");
		
		Если Контрагент_НеЯвляетсяРезидентом = Ложь Тогда
			ПоказатьПредупреждение(, "Контрагент не может быть выбран, т.к. он является резидентом РФ!", 60);
			Объект.Контрагент = СтароеЗначение_Контрагент;
		КонецЕсли;
	КонецЕсли;
	
	КонтрагентПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	СтароеЗначение_Контрагент = Объект.Контрагент;
	
	Если ЗначениеЗаполнено(Объект.КонтрактВЭД) И Объект.КонтрактВЭД.Контрагент <> Объект.Контрагент Тогда
		Объект.КонтрактВЭД = Неопределено;
		КонтрактВЭДПриИзмененииНаСервере();
	КонецЕсли;
	
	ПрочитатьДополнительныеРеквизиты_Контрагент();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	Отбор.Вставить("РЭЙ_НеЯвляетсяРезидентом", Истина);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отбор", Отбор);
	ПараметрыОткрытия.Вставить("ТекущаяСтрока", Объект.Контрагент); 
	
    ФормаВыбора = ПолучитьФорму("Справочник.Контрагенты.ФормаВыбора", ПараметрыОткрытия, Элемент);
    ФормаВыбора.Элементы.Список.Отображение	= ОтображениеТаблицы.Список;
	ФормаВыбора.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактВЭДПриИзменении(Элемент)
	Если РЭЙ_СлужебныйСервер.ЕстьДублированиеПаспортаСделкиПоКонтракту(Объект.КонтрактВЭД, Объект.Ссылка) Тогда
		ПоказатьПредупреждение(, "По данному контракту ВЭД уже создано Заявление о постановке на учет.");
		Объект.КонтрактВЭД = Неопределено;
	КонецЕсли;
	
	КонтрактВЭДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрактВЭДПриИзмененииНаСервере()
	Если Не ЗначениеЗаполнено(Объект.КонтрактВЭД) Тогда
		Объект.БанковскийСчет = Неопределено;
	Иначе
		Объект.БанковскийСчет = РЭЙ_СлужебныйСервер.ПолучитьБанковскийСчетПоКонтрактуВЭД(Объект.КонтрактВЭД);
	КонецЕсли; 
	БанковскийСчетПриИзмененииНаСервере();
	
	Если ЗначениеЗаполнено(Объект.КонтрактВЭД) Тогда
		Если Объект.Организация <> Объект.КонтрактВЭД.Организация Тогда 
			Объект.Организация = Объект.КонтрактВЭД.Организация;
			ОрганизацияПриИзмененииНаСервере();
		КонецЕсли;
		Если Объект.Контрагент <> Объект.КонтрактВЭД.Контрагент Тогда
			Объект.Контрагент = Объект.КонтрактВЭД.Контрагент;
			КонтрагентПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
	Объект.ВалютаДокумента = Объект.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	
	Объект.НомерПаспортаСделки_20 = Сред(Строка(Объект.КонтрактВЭД.ВидКонтрактаВЭД), 1);
	ЗаполнитьНомерПаспортаСделки();
	
	ПрочитатьДополнительныеРеквизиты_КонтрактВЭД();
	ПрочитатьНаборЗаписей_РазрешенияВалютногоКонтроля();
	
	УстановитьОтображение_БанковскийСчет();
	УстановитьОтображение_ДополнительныеРеквизитыКонтрактаВЭД();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Организация", Объект.Организация);
	Отбор.Вставить("Контрагент", Объект.Контрагент);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отбор", Отбор);
	ПараметрыОткрытия.Вставить("ТекущаяСтрока", Объект.КонтрактВЭД);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.РЭЙ_КонтрактыВЭД.ФормаВыбора", ПараметрыОткрытия, Элементы.КонтрактВЭД,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	БанковскийСчетПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура БанковскийСчетПриИзмененииНаСервере()
	Объект.Банк = Объект.БанковскийСчет.Банк;
	Если ЗначениеЗаполнено(Объект.БанковскийСчет) Тогда
		Объект.ВалютаДенежныхСредств = Объект.БанковскийСчет.ВалютаДенежныхСредств;
		Объект.НомерПаспортаСделки_10_13 = Объект.Банк.РЭЙ_НомерПаспортаСделки_10_13;
		Объект.НомерПаспортаСделки_15_18 = Объект.Банк.РЭЙ_НомерПаспортаСделки_15_18;
		
		Если РЭЙ_СлужебныйСервер.ЕстьОбработкаКлиентБанкВЭД() Тогда
			Если Объект.Банк.РЭЙ_ВидПредоставленияДокументовПоСделке <> 0 Тогда
				Объект.ВидПредоставленияДокументовПоСделке = Объект.Банк.РЭЙ_ВидПредоставленияДокументовПоСделке;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	ПрочитатьНаборЗаписей_РазрешенияВалютногоКонтроля();
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КонтрактВЭД", Объект.КонтрактВЭД);
	ПараметрыОткрытия.Вставить("БанковскийСчет", Объект.БанковскийСчет);
	
	ОткрытьФорму("Документ.РЭЙ_ПаспортСделки.Форма.ФормаВыбораБанка", ПараметрыОткрытия, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДатаЗакрытияПСПриИзменении(Элемент)
	УстановитьОтображение_КартинкаСтатус();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСтраницыЛист2

&НаКлиенте
Процедура СписокГрафикФинансированияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СписокГрафикПогашенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СписокКредитныйСиндикатВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСтраницыДосье

&НаКлиенте
Процедура СписокДосьеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	текСсылка = СписокДосье.НайтиПоИдентификатору(ВыбраннаяСтрока).Ссылка;
	Если Поле.Имя = "СписокДосьеФайлы" Тогда
		Если ТипЗнч(текСсылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("ВладелецФайла", текСсылка);
			ОткрытьФорму("Справочник.ДоговорыКонтрагентовПрисоединенныеФайлы.ФормаСписка", ПараметрыОткрытия,, Новый УникальныйИдентификатор());
		Иначе
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("ОбъектВладелец", текСсылка);
			ОткрытьФорму("Справочник.РЭЙ_Файлы.ФормаСписка", ПараметрыОткрытия,, Новый УникальныйИдентификатор());
		КонецЕсли;
	Иначе
		ПоказатьЗначение(, текСсылка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСтраницыПереоформлениеПС

&НаКлиенте
Процедура ПереоформлениеПСДокументОснованиеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПереоформлениеПС.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ДокументОснование) Тогда
		ПереоформлениеПСДокументОснованиеПриИзмененииНаСервере(Элементы.ПереоформлениеПС.ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПереоформлениеПСДокументОснованиеПриИзмененииНаСервере(ИдентификаторСтроки)
	СтрокаТЧ = Объект.ПереоформлениеПС.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	СтрокаТЧ.Дата = СтрокаТЧ.ДокументОснование.ДатаПереоформленияПС;
	СтрокаТЧ.ОснованиеНомер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(СтрокаТЧ.ДокументОснование.Номер, Истина, Истина);
	СтрокаТЧ.ОснованиеДата = СтрокаТЧ.ДокументОснование.Дата;
	СтрокаТЧ.ДокументОснованиеПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.ДокументОснование);
КонецПроцедуры

&НаКлиенте
Процедура ДокументЗакрытияПСОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ДокументЗакрытияПС) Тогда
		ПоказатьЗначение(, Объект.ДокументЗакрытияПС);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСтраницыПереводВДругойБанк

&НаКлиенте
Процедура ПереводВДругойБанкВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СтрокаТЧ = Элементы.ПереводВДругойБанк.ТекущиеДанные;
	Если Поле = Элементы.ПереводВДругойБанкЗаявление Тогда
		Если ЗначениеЗаполнено(СтрокаТЧ.Заявление) Тогда
			ПоказатьЗначение(, СтрокаТЧ.Заявление);
		КонецЕсли;
	ИначеЕсли Поле = Элементы.ПереводВДругойБанкБанк Тогда
		ПоказатьЗначение(, СтрокаТЧ.Банк);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСтраницыРазрешенияВалютногоКонтроля

&НаКлиенте
Процедура СписокРазрешенияВалютногоКонтроляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСтраницыОтветственныеЛица

&НаКлиенте
Процедура УполномоченныйПСПриИзменении(Элемент)
	УстановитьТелефонУполномоченногоПС();
КонецПроцедуры

#КонецОбласти

#Область Отображение

&НаСервере
Процедура ДобавитьУсловноеОформление_ПереводВДругойБанк()
	// Краткое наименование документа
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПереводВДругойБанкЗаявление");
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ПереводВДругойБанк.ЗаявлениеПредставление"));
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформление_ПереоформлениеПС()
	// Краткое наименование документа
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ПереоформлениеПСДокументОснование");
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("Объект.ПереоформлениеПС.ДокументОснованиеПредставление"));
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформление_СписокДосье()
	// Выделение серым текущего документа
	ЭлементУсловногоОформленияЦвет = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформленияЦвет.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СписокДосье");
	
	ПолеОтбора = ЭлементУсловногоОформленияЦвет.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Ссылка");
	ПолеОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("СписокДосье.Ссылка");;
	ПолеОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементУсловногоОформленияЦвет.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Серый);
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_БанковскийСчет()	
	Элементы.БанковскийСчет.Доступность = ЗначениеЗаполнено(Объект.КонтрактВЭД);
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ВидПредоставленияДокументовПоСделке()
	Если Не РЭЙ_СлужебныйСервер.ЕстьОбработкаКлиентБанкВЭД() Тогда
		Элементы.ВидПредоставленияДокументовПоСделке.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ДополнительныеРеквизитыКонтрактаВЭД()
	Если ВидДоговора = 1 Тогда // контракт
		Элементы.ГруппаСтраницаКонтракт.Видимость = Истина;
		Элементы.ГруппаСтраницаКредитныйДоговор.Видимость = Ложь;
		Элементы.СтраницыФлагиПоКонтракту.ТекущаяСтраница = Элементы.ГруппаЛист1Контракт;
		Элементы.ГруппаЛист2.Видимость = Ложь;
	ИначеЕсли ВидДоговора = 2 Тогда // кредитный договор
		Элементы.ГруппаСтраницаКонтракт.Видимость = Ложь;
		Элементы.ГруппаСтраницаКредитныйДоговор.Видимость = Истина;
		Элементы.СтраницыФлагиПоКонтракту.ТекущаяСтраница = Элементы.ГруппаЛист1КредитныйДоговор;
		Элементы.ГруппаЛист2.Видимость = Истина;
	КонецЕсли;
	
	Элементы.БанковскийСчет.Доступность	= ЗначениеЗаполнено(Объект.КонтрактВЭД);
	Элементы.ГруппаРазрешения.Видимость	= Объект.КонтрактВЭД.РазрешенияВалКонтроля;
	
	Элементы.ГруппаСтраницыВидДокументаКоличествоДней.ТекущаяСтраница = ?(ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.nnnn, 
		Элементы.ГруппаСтраницаКоличествоДней, Элементы.ГруппаСтраницаВидДокумента);
		
	Элементы.ГруппаСтраницыВидДокументаКоличествоДнейЗаголовки.ТекущаяСтраница = ?(ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.nnnn, 
		Элементы.ГруппаСтраницаЗагловокКоличествоДней, Элементы.ГруппаСтраницаЗаголовокКодПодтверждающегоДокумента);	
	
	Элементы.СтавкаЛИБОР.Видимость = (ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ЛИБОР);
	
	Если ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ФиксированнаяСтавка Тогда 
		Элементы.ГруппаСтраницыМетодыОпределенияПроцентнойСтавки.ТекущаяСтраница = Элементы.ГруппаСтраницаФиксированнаяСтавкаГодовыхПроцентов;	
	ИначеЕсли ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ДругиеСтавки Тогда 
		Элементы.ГруппаСтраницыМетодыОпределенияПроцентнойСтавки.ТекущаяСтраница = Элементы.ГруппаСтраницаДругиеМетодыОпредененияПроцентнойСтавки;
	ИначеЕсли ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ЛИБОР Тогда
		Элементы.ГруппаСтраницыМетодыОпределенияПроцентнойСтавки.ТекущаяСтраница = Элементы.ГруппаСтраницаЛИБОР;
	Иначе	
		Элементы.ГруппаСтраницыМетодыОпределенияПроцентнойСтавки.ТекущаяСтраница = Элементы.ГруппаСтраницаМетодыОпределенияПроцентнойСтавкиПусто;
	КонецЕсли;	
	
	Элементы.ГруппаСтраницаСиндикат.Видимость = Объект.КонтрактВЭД.КредитныйСиндикат;	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_КартинкаСтатус()
	Если Не ЗначениеЗаполнено(Объект.ДатаЗакрытияПС) И Объект.НеПечататьНомерИДатуПС Тогда
		Элементы.КартинкаСтатус.Картинка = БиблиотекаКартинок.РЭЙ_СветофорЖелтый;
	ИначеЕсли Не ЗначениеЗаполнено(Объект.ДатаЗакрытияПС) И Объект.НеПечататьНомерИДатуПС = Ложь Тогда
		Элементы.КартинкаСтатус.Картинка = БиблиотекаКартинок.РЭЙ_СветофорЗеленый;
	ИначеЕсли ЗначениеЗаполнено(Объект.ДатаЗакрытияПС) Тогда
		Элементы.КартинкаСтатус.Картинка = БиблиотекаКартинок.РЭЙ_СветофорКрасный;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_КППОбособленногоПодразделения()
	Элементы.ОбособленноеПодразделение.Доступность = Объект.УказыватьКППОбособленногоПодразделения;
	Элементы.КППОбособленногоПодразделения.Доступность = Объект.УказыватьКППОбособленногоПодразделения;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ПереводВДругойБанк()
	Если Объект.ПереводВДругойБанк.Количество() >= 2 Тогда
		Элементы.Страница_ПереводВДругойБанк.Видимость = Истина;
	Иначе
		Элементы.Страница_ПереводВДругойБанк.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДокументНаОсновании(ДанныеЗаполнения)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.РЭЙ_КонтрактыВЭД") Тогда
		ЗаполнитьДокументПоУмолчанию();
		Объект.КонтрактВЭД = ДанныеЗаполнения;
		Объект.Организация = Объект.КонтрактВЭД.Организация;
		ОрганизацияПриИзмененииНаСервере();
		Объект.Контрагент = Объект.КонтрактВЭД.Контрагент;
		КонтрагентПриИзмененииНаСервере();
		КонтрактВЭДПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументПоУмолчанию()
	Объект.Дата = ТекущаяДатаСеанса();
	Объект.ДатаПаспортаСделки = Объект.Дата;
	ДатаПаспортаСделкиПриИзмененииНаСервере();
	Объект.ДатаПредоставленияДокументовПоСделке = Объект.Дата;
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = РЭЙ_Универсализация.ПолучитьОсновнуюОрганизацию();
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;	
	
	Объект.Ответственный = Пользователи.ТекущийПользователь();
	Объект.УполномоченныйПС = РЭЙ_СлужебныйСервер.ФизЛицоПользователя(Объект.Ответственный);
	УстановитьТелефонУполномоченногоПС();
	
	Объект.НеПечататьНомерИДатуПС = Истина;
		
	Если Не РЭЙ_СлужебныйСервер.ЕстьОбработкаКлиентБанкВЭД() Тогда
		Объект.ВидПредоставленияДокументовПоСделке = 1;
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьНомерПаспортаСделки()
	Объект.НомерПаспортаСделки_1_8 = 
	ДополнитьПробелами(НомерПаспортаСделки_1_2, 2)
	+ ДополнитьПробелами(НомерПаспортаСделки_3_4, 2)
	+ ДополнитьПробелами(НомерПаспортаСделки_5_8, 4);
	
	Объект.НомерПаспортаСделки = 
	ДополнитьПробелами(Объект.НомерПаспортаСделки_1_8, 8) + "/"
	+ ДополнитьПробелами(Объект.НомерПаспортаСделки_10_13, 4) + "/"
	+ ДополнитьПробелами(Объект.НомерПаспортаСделки_15_18, 4) + "/"
	+ ДополнитьПробелами(Объект.НомерПаспортаСделки_20, 1) + "/"
	+ ДополнитьПробелами(Объект.НомерПаспортаСделки_22, 1);
	
	Объект.НомерПаспортаСделки_10_18 = Сред(Объект.НомерПаспортаСделки, 10, 9);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДосье()
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Возврат;
	КонецЕсли;
	
	СписокДосье.Очистить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПаспортСделки", Объект.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РЭЙ_Файлы.ОбъектВладелец,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РЭЙ_Файлы.Ссылка) КАК КоличествоФайлов
	|ПОМЕСТИТЬ ВТ_Файлы_Количество
	|ИЗ
	|	Справочник.РЭЙ_Файлы КАК РЭЙ_Файлы
	|
	|СГРУППИРОВАТЬ ПО
	|	РЭЙ_Файлы.ОбъектВладелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Файлы_Количество.ОбъектВладелец,
	|	ЕСТЬNULL(РЭЙ_Файлы.ПолноеНаименование, ""Несколько файлов"") КАК Файлы,
	|	ЕСТЬNULL(РЭЙ_Файлы.ИндексКартинки, 2) КАК ИндексКартинки
	|ПОМЕСТИТЬ ВТ_Файлы
	|ИЗ
	|	ВТ_Файлы_Количество КАК Файлы_Количество
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РЭЙ_Файлы КАК РЭЙ_Файлы
	|		ПО Файлы_Количество.ОбъектВладелец = РЭЙ_Файлы.ОбъектВладелец
	|			И (Файлы_Количество.КоличествоФайлов = 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&ПаспортСделки КАК Ссылка,
	|	NULL КАК СсылкаМоментВремени,
	|	1 КАК Порядок
	|ПОМЕСТИТЬ ВТ_Документы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыПоПС.Ссылка,
	|	ДокументыПоПС.Ссылка.МоментВремени,
	|	2
	|ИЗ
	|	КритерийОтбора.РЭЙ_ДокументыПоПС(&ПаспортСделки) КАК ДокументыПоПС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Документы.Ссылка,
	|	ВТ_Документы.СсылкаМоментВремени КАК СсылкаМоментВремени,
	|	ВТ_Документы.Порядок КАК Порядок,
	|	ВТ_Файлы.Файлы,
	|	ЕСТЬNULL(ВТ_Файлы.ИндексКартинки, -1) КАК ИндексКартинки
	|ИЗ
	|	ВТ_Документы КАК ВТ_Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Файлы КАК ВТ_Файлы
	|		ПО ВТ_Документы.Ссылка = ВТ_Файлы.ОбъектВладелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	СсылкаМоментВремени";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаДосье = СписокДосье.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДосье, Выборка);
		НоваяСтрокаДосье.ПредставлениеСсылки = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(НоваяСтрокаДосье.Ссылка);
	КонецЦикла;

	// Файлы из договора 
	Если Метаданные.Справочники.Найти("ДоговорыКонтрагентовПрисоединенныеФайлы") <> Неопределено Тогда		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовПрисоединенныеФайлы.Ссылка,
		|	ДоговорыКонтрагентовПрисоединенныеФайлы.Наименование,
		|	ДоговорыКонтрагентовПрисоединенныеФайлы.Расширение
		|ИЗ
		|	Справочник.ДоговорыКонтрагентовПрисоединенныеФайлы КАК ДоговорыКонтрагентовПрисоединенныеФайлы
		|ГДЕ
		|	ДоговорыКонтрагентовПрисоединенныеФайлы.ВладелецФайла = &Объект";
		
		Запрос.УстановитьПараметр("Объект", Объект.КонтрактВЭД.ДоговорКонтрагента);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			НоваяСтрокаДосье = СписокДосье.Вставить(0);
			НоваяСтрокаДосье.Ссылка = Объект.КонтрактВЭД.ДоговорКонтрагента;
			НоваяСтрокаДосье.ПредставлениеСсылки = Объект.КонтрактВЭД.ДоговорКонтрагента;
			НоваяСтрокаДосье.Файлы = Выборка.Наименование + "." + Выборка.Расширение;
			НоваяСтрокаДосье.ИндексКартинки = РЭЙ_СлужебныйСервер.ПолучитьИндексПиктограммыФайла(Выборка.Расширение);
		ИначеЕсли Выборка.Количество() > 1 Тогда
			НоваяСтрокаДосье = СписокДосье.Вставить(0);
			НоваяСтрокаДосье.Ссылка = Объект.КонтрактВЭД.ДоговорКонтрагента;
			НоваяСтрокаДосье.ПредставлениеСсылки = Объект.КонтрактВЭД.ДоговорКонтрагента;
			НоваяСтрокаДосье.Файлы = "Несколько файлов";
			НоваяСтрокаДосье.ИндексКартинки = 2;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокОперацийЗакрытия()
	СписокВыбора = Элементы.ОснованиеЗакрытияПС.СписокВыбора;
	
	СписокВыбора.Добавить(Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_1);
	СписокВыбора.Добавить(Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_2);
	СписокВыбора.Добавить(Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_3);
	СписокВыбора.Добавить(Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_4);
	СписокВыбора.Добавить(Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_5);
	СписокВыбора.Добавить(Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_6);
	СписокВыбора.Добавить(Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_7);
	
КонецПроцедуры

&НаСервере
Процедура ЗапретитьРедактированиеЗакрытогоПаспортаСделки()
	Если Не Параметры.Ключ.Пустая() Тогда
		Если ЗначениеЗаполнено(Объект.ДокументЗакрытияПС) Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
			ДокументЗакрытияПСПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(Объект.ДокументЗакрытияПС);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДополнительныеРеквизиты_Контрагент()
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Если ПустаяСтрока(Объект.Контрагент.РЭЙ_НаименованиеАнгл) Тогда
			КонтрагентИнфо = "не введено англ. наименование";
		Иначе
			КонтрагентИнфо = СокрЛП(Объект.Контрагент.РЭЙ_НаименованиеАнгл);
		КонецЕсли;
	Иначе
		КонтрагентИнфо = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДополнительныеРеквизиты_КонтрактВЭД()
	Если ЗначениеЗаполнено(Объект.КонтрактВЭД) Тогда
		ВидДоговора = ?(Объект.КонтрактВЭД.КредитныйДоговор, 2, 1);
	Иначе
		ВидДоговора = 0;
	КонецЕсли;
	
	ДатаПодписанияКонтракта = РЭЙ_СлужебныйСервер.ПолучитьДатуКонтракта(Объект.КонтрактВЭД);
	
	СписокКредитныйСиндикат.Отбор.Элементы.Очистить();
	ЭлементОтбора = СписокКредитныйСиндикат.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Договор");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Объект.КонтрактВЭД;
	ЭлементОтбора.Использование = Истина;
	
	СписокГрафикФинансирования.Отбор.Элементы.Очистить();
	ЭлементОтбора = СписокГрафикФинансирования.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Договор");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Объект.КонтрактВЭД;
	ЭлементОтбора.Использование = Истина;     
	
	СписокГрафикПогашения.Отбор.Элементы.Очистить();
	ЭлементОтбора = СписокГрафикПогашения.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Договор");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Объект.КонтрактВЭД;
	ЭлементОтбора.Использование = Истина;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДополнительныеРеквизиты_НомерПаспортаСделки()
	НомерПСДо18062004_1_1   = Сред(Объект.НомерПСДо18062004, 1, 1);
	НомерПСДо18062004_3_10  = Сред(Объект.НомерПСДо18062004, 3, 8);
	НомерПСДо18062004_12_14 = Сред(Объект.НомерПСДо18062004, 12, 3);
	НомерПСДо18062004_16_20 = Сред(Объект.НомерПСДо18062004, 16, 5);
	
	НомерПСДругойБанк_1_2 = Сред(Объект.НомерПСДругойБанк, 1, 2);
	НомерПСДругойБанк_3_4 = Сред(Объект.НомерПСДругойБанк, 3, 2);
	НомерПСДругойБанк_5_8 = Сред(Объект.НомерПСДругойБанк, 5, 4);
	
	НомерПаспортаСделки_1_2 = Сред(Объект.НомерПаспортаСделки, 1, 2);
	НомерПаспортаСделки_3_4 = Сред(Объект.НомерПаспортаСделки, 3, 2);
	НомерПаспортаСделки_5_8 = Сред(Объект.НомерПаспортаСделки, 5, 4);
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДополнительныеРеквизиты_Организация()
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		Если ПустаяСтрока(Объект.Организация.РЭЙ_НаименованиеАнгл) Тогда
			ОрганизацияИнфо = "не введено англ. наименование";
		Иначе
			ОрганизацияИнфо = СокрЛП(Объект.Организация.РЭЙ_НаименованиеАнгл);
		КонецЕсли;
	Иначе
		ОрганизацияИнфо = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДополнительныеРеквизиты_ПереводВДругойБанк()
	Для Каждого СтрокаТЧ Из Объект.ПереводВДругойБанк Цикл 
		СтрокаТЧ.ЗаявлениеПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.Заявление);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДополнительныеРеквизиты_ПереоформлениеПС()
	Для Каждого СтрокаТЧ Из Объект.ПереоформлениеПС Цикл 
		СтрокаТЧ.ДокументОснованиеПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.ДокументОснование);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписей_РазрешенияВалютногоКонтроля()
	ОтборСписок = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Объект.КонтрактВЭД) Тогда
		ОтборСписок.Добавить(Объект.КонтрактВЭД);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.БанковскийСчет) Тогда
		ОтборСписок.Добавить(Объект.БанковскийСчет);
	КонецЕсли;
	
	СписокРазрешенияВалютногоКонтроля.Отбор.Элементы.Очистить();
	
	ЭлементОтбора = СписокРазрешенияВалютногоКонтроля.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение	= Новый ПолеКомпоновкиДанных("Объект");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ПравоеЗначение = ОтборСписок;
	ЭлементОтбора.Использование = Истина;
КонецПроцедуры

&НаСервере
Процедура УстановитьТелефонУполномоченногоПС()
	Если НЕ Объект.УполномоченныйПС.Пустая() Тогда
		Объект.ТелефонУполномоченногоПС = РЭЙ_СлужебныйСервер.ПолучитьСлужебныйТелефонФизЛица(Объект.УполномоченныйПС);
		Если ПустаяСтрока(Объект.ТелефонУполномоченногоПС) Тогда
			Сообщить("У выбранного физ.лица не заполнен служебный телефон! Заполните телефон в карточке физ.лица и перевыберите физ.лицо.");
		КонецЕсли;
	Иначе
		Объект.ТелефонУполномоченногоПС = "";
	КонецЕсли; 
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДополнитьПробелами(Знач текСтрока, Знач Длина)
	текСтрока = Лев(СокрЛП(текСтрока), Длина);
	
	Пока СтрДлина(текСтрока) < Длина Цикл
		текСтрока = текСтрока + " ";
	КонецЦикла;
	
	Возврат текСтрока;
КонецФункции

&НаСервере
Функция НайтиОбособленноеПодразделение()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РЭЙ_ОбособленныеПодразделения.Ссылка
	|ИЗ
	|	Справочник.РЭЙ_ОбособленныеПодразделения КАК РЭЙ_ОбособленныеПодразделения
	|ГДЕ
	|	РЭЙ_ОбособленныеПодразделения.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Объект.Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.РЭЙ_ОбособленныеПодразделения.ПустаяСсылка();
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
