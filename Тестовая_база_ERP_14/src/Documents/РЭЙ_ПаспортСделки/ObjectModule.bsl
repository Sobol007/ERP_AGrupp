#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления = Ложь И Ссылка.ПометкаУдаления = Истина Тогда
		ОбработкаСнятияПометкиНаУдаление(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПрефиксацияОбъектовСобытия.ПроверитьНомерДокументаПоДатеИОрганизации(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	Если ПереводВДругойБанк.Количество() = 0 Тогда
		НоваяСтрока = ПереводВДругойБанк.Добавить();
	КонецЕсли;
	ПереводВДругойБанк[0].ДатаПринятияБанком = ДатаПаспортаСделки;
	ПереводВДругойБанк[0].Банк = Банк;
	
	ТекущийБанк = ПереводВДругойБанк[ПереводВДругойБанк.Количество() - 1].Банк;
	
	текНомерПеревода = 0;
	Для Каждого СтрокаТЧ Из ПереводВДругойБанк Цикл
		СтрокаТЧ.НомерПеревода = текНомерПеревода;
		текНомерПеревода = текНомерПеревода + 1;
	КонецЦикла;
	
	Если ПечататьОрганизациюПрописными <> Организация.РЭЙ_ПечататьАдресПрописными тогда
		ПечататьОрганизациюПрописными = Организация.РЭЙ_ПечататьАдресПрописными
	КонецЕсли;	
	
	НомерПаспортаСделкиКраткий = СтрЗаменить(НомерПаспортаСделки, "/", "");
	
	Если КонтрактВЭД.КредитныйДоговор = Ложь Тогда
		ПечатнаяФорма = "Контракт";
	Иначе
		ПечатнаяФорма = "Кредитный договор";
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	СтатусЗадачаВЭДСоздана();
	ЗаполнитьПаспортСделкиВКонтрактеВЭД(Истина);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(КонтрактВЭД, "ПодлежитСозданию");
	ЗаполнитьПаспортСделкиВКонтрактеВЭД(Ложь);
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	Если Константы.РЭЙ_ИспользоватьПрефиксыВНумерацииДокументовВЭД.Получить() Тогда		
		ПрефиксацияОбъектовСобытия.УстановитьПрефиксИнформационнойБазыИОрганизации(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаСнятияПометкиНаУдаление(Отказ)
	Если РЭЙ_СлужебныйСервер.ЕстьДублированиеПаспортаСделкиПоКонтракту(КонтрактВЭД, Ссылка) Тогда
		Отказ = Истина;
		Сообщить("Данный контракт ВЭД уже поставлен на учет в банке УК.");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Печать

Функция ПолучитьДанныеДляПечати() Экспорт
	Возврат ДанныеДляПечати_2018();
КонецФункции

#Область ПечатьАктуальнаяВерсия

Функция ДанныеДляПечати_2018()
	ВалютаДоговора = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	ДанныеДляПечати = Новый Структура;
	ШапкаДанных = Новый Структура;
	ДанныеДляПечати.Вставить("Шапка", ШапкаДанных);
	
	// банк
	ШапкаДанных.Вставить("БанкНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеБанкаДляПечати(Банк));
	ШапкаДанных.Вставить("БанкКод", Банк.Код);
	ШапкаДанных.Вставить("ТекущийБанкНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеБанкаДляПечати(ТекущийБанк));
	ШапкаДанных.Вставить("ТекущийБанкКод", ТекущийБанк.Код);
	
	// номер паспорта сделки
	ШапкаДанных.Вставить("НомерПаспортаСделки", НомерПаспортаСделки);
	Для Счетчик = 1 По 22 Цикл
		Если Не НеПечататьНомерИДатуПС Тогда
			ШапкаДанных.Вставить("НПС_" + Счетчик, Сред(ШапкаДанных.НомерПаспортаСделки, Счетчик ,1));
		Иначе
			ШапкаДанных.Вставить("НПС_" + Счетчик, "");
		КонецЕсли;
	КонецЦикла;
	
	// дата паспорта сделки
	ШапкаДанных.Вставить("ДатаПаспортаСделки", ДатаПаспортаСделки);
	ШапкаДанных.Вставить("ДатаЧисло", "");
	ШапкаДанных.Вставить("МесяцСтрока", "");
	ШапкаДанных.Вставить("Год2ПослЦифры", "");
	Если НеПечататьНомерИДатуПС = Ложь Тогда
		Если ЗначениеЗаполнено(ШапкаДанных.ДатаПаспортаСделки) Тогда 
			ШапкаДанных.Вставить("ДатаЧисло", Формат(ШапкаДанных.ДатаПаспортаСделки, "ДФ=dd"));
			ШапкаДанных.Вставить("МесяцСтрока", Сред(Формат(ШапкаДанных.ДатаПаспортаСделки, "ДФ=dd.MMMM"), 4));
			ШапкаДанных.Вставить("Год2ПослЦифры", Формат(ШапкаДанных.ДатаПаспортаСделки, "ДФ=yy"));
		КонецЕсли;	
	КонецЕсли;	
	
	// организация
	Если Не ПустаяСтрока(Организация.НаименованиеПолное) Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.НаименованиеПолное);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.Наименование);
	КонецЕсли;
	
	// адрес
	ШапкаДанных.Вставить("Регион", ?(СокрЛП(Организация.РЭЙ_Регион) = "нет", "", СокрЛП(Организация.РЭЙ_Регион)));
	ШапкаДанных.Вставить("Район", ?(СокрЛП(Организация.РЭЙ_Район) = "нет", "", СокрЛП(Организация.РЭЙ_Район)));
	ШапкаДанных.Вставить("Город", ?(СокрЛП(Организация.РЭЙ_Город) = "нет", "", СокрЛП(Организация.РЭЙ_Город)));
	ШапкаДанных.Вставить("НаселенныйПункт", ?(СокрЛП(Организация.РЭЙ_НаселенныйПункт) = "нет", "", СокрЛП(Организация.РЭЙ_НаселенныйПункт)));
	ШапкаДанных.Вставить("Улица", ?(СокрЛП(Организация.РЭЙ_Улица) = "нет", "", СокрЛП(Организация.РЭЙ_Улица)));
	ШапкаДанных.Вставить("Дом", Организация.РЭЙ_Дом);
	ШапкаДанных.Вставить("Корпус", Организация.РЭЙ_Корпус);
	ШапкаДанных.Вставить("Квартира", Организация.РЭЙ_Квартира);
	
	// ОГРН
	ШапкаДанных.Вставить("ОГРН", Организация.ОГРН);
	Для Счетчик = 1 По 15 Цикл
		ШапкаДанных.Вставить("ОГРН_" + счетчик, Сред(ШапкаДанных.ОГРН, Счетчик, 1));
	КонецЦикла;
	
	// Дата внесения в гос. реестр
	Если Организация.РЭЙ_ДатаВнесенияВГосРеестр >= Дата(2002,07,01) Тогда
		текДатаВнесенияВГосРеестр = Организация.РЭЙ_ДатаВнесенияВГосРеестр;
	Иначе
		текДатаВнесенияВГосРеестр = Дата(2002,07,01);
	КонецЕсли;
	печДатаВнесенияВГосРеестр = Формат(текДатаВнесенияВГосРеестр, "ДФ=dd.MM.yyyy");
	Для Счетчик = 1 По 10 Цикл
		ШапкаДанных.Вставить("ДатаВнесенияВГосРеестр_" + Счетчик, Сред(печДатаВнесенияВГосРеестр, Счетчик, 1));
	КонецЦикла;
	
	// ИНН
	ШапкаДанных.Вставить("ИНН", Организация.ИНН);
	печИНН = Лев(СокрЛП(Организация.ИНН) + "            ", 12);
	Для Счетчик = 1 По 12 Цикл
		ШапкаДанных.Вставить("ИНН_" + Счетчик, Сред(печИНН, Счетчик, 1));
	КонецЦикла;
	
	// КПП
	Если Не ПустаяСтрока(КППОбособленногоПодразделения) Тогда
		текКПП = КППОбособленногоПодразделения;
	Иначе
		текКПП = Организация.КПП;
	КонецЕсли;
	ШапкаДанных.Вставить("КПП", текКПП);
	печКПП = Лев(СокрЛП(текКПП) + "            ", 9);
	Для счетчик = 1 По 9 Цикл
		ШапкаДанных.Вставить("КПП_" + Счетчик, Сред(печКПП, Счетчик, 1));
	КонецЦикла;
	
	// Раздел 2
	ШапкаДанных.Вставить("КонтрагентНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеКонтрагентаДляПечати(Контрагент));
	ДанныеДляПечати.Вставить("Таблица2", Новый Массив);
	Если КонтрактВЭД.Многосторонний Тогда	
		Для Каждого СторонаПоКонтракту ИЗ КонтрактВЭД.СтороныПоКонтракту Цикл
			ДанныеДляПечати.Таблица2.Добавить(ПолучитьСтрокуДляТаблицы2_2015_02_23(СторонаПоКонтракту.Контрагент));
		КонецЦикла;
	Иначе		
		ДанныеДляПечати.Таблица2.Добавить(ПолучитьСтрокуДляТаблицы2_2015_02_23(Контрагент));
	КонецЕсли;	
	
	
	// Раздел 3 (форма 1) 3.1 (форма 2)
	Если Не ПустаяСтрока(КонтрактВЭД.КонтрактНомер) Тогда
		ШапкаДанных.Вставить("КонтрактНомер", КонтрактВЭД.КонтрактНомер);
	Иначе
		ШапкаДанных.Вставить("КонтрактНомер", "БН");
	КонецЕсли;
	ШапкаДанных.Вставить("ДатаКонтракта", Формат(РЭЙ_СлужебныйСервер.ПолучитьДатуКонтракта(КонтрактВЭД), "ДФ=dd.MM.yyyy"));
	Если Не ПустаяСтрока(ВалютаДоговора.НаименованиеПолное) Тогда
		ШапкаДанных.Вставить("КонтрактВалютаНаименование", ВалютаДоговора.НаименованиеПолное);
	Иначе
		ШапкаДанных.Вставить("КонтрактВалютаНаименование", ВалютаДоговора.Наименование);
	КонецЕсли;
	ШапкаДанных.Вставить("КонтрактВалютаКод", ВалютаДоговора.Код);
	Если КонтрактВЭД.КонтрактБезСуммы Тогда
		ШапкаДанных.Вставить("КонтрактСумма", "БС");
	Иначе
		ШапкаДанных.Вставить("КонтрактСумма", Формат(КонтрактВЭД.КонтрактСумма, "ЧДЦ=2; ЧН="));
	КонецЕсли;
	ШапкаДанных.Вставить("КонтрактСумма_Значение", КонтрактВЭД.КонтрактСумма);
	ШапкаДанных.Вставить("ДатаЗавершенияОбязательствПоКонтракту", Формат(КонтрактВЭД.ДатаЗавершенияОбязательствПоКонтракту, "ДФ=dd.MM.yyyy"));
	ШапкаДанных.Вставить("СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте", Формат(КонтрактВЭД.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте, "ЧДЦ=2"));
	ШапкаДанных.Вставить("СуммаВалВыручкиПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте", Формат(КонтрактВЭД.СуммаВалВыручкиПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте, "ЧДЦ=2"));
	ШапкаДанных.Вставить("СрокиПогашенияКредитовВЭД", Сред(Строка(КонтрактВЭД.СрокиПогашенияКредитовВЭД), 1, 1));
	
	// Раздел 3.2 (форма 2)
	ДанныеДляПечати.Вставить("Таблица3_2", Новый Массив);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РЭЙ_ГрафикФинансирования.Период КАК Дата,
	|	РЭЙ_ГрафикФинансирования.Сумма,
	|	РЭЙ_ГрафикФинансирования.ОсобоеУсловие,
	|	РЭЙ_ГрафикФинансирования.СрокТранша
	|ИЗ
	|	РегистрСведений.РЭЙ_ГрафикФинансирования КАК РЭЙ_ГрафикФинансирования
	|ГДЕ
	|	РЭЙ_ГрафикФинансирования.Договор = &Договор
	|
	|УПОРЯДОЧИТЬ ПО
	|	РЭЙ_ГрафикФинансирования.Период";
	
	Запрос.УстановитьПараметр("Договор", КонтрактВЭД);
	Выборка = Запрос.Выполнить().Выбрать();
	текНомерСтроки = 0;
	текДатаДляАнализа = ?(ЗначениеЗаполнено(ДатаПредоставленияДокументовПоСделке), ДатаПредоставленияДокументовПоСделке, ТекущаяДата());	
	Пока Выборка.Следующий() Цикл
		текНомерСтроки = текНомерСтроки + 1;
		
		СтрокаТаблицы3_2 = Новый Структура;
		СтрокаТаблицы3_2.Вставить("НомерСтроки", текНомерСтроки);
		Если Не ПустаяСтрока(ВалютаДоговора.НаименованиеПолное) Тогда
			СтрокаТаблицы3_2.Вставить("КонтрактВалютаНаименование", ВалютаДоговора.НаименованиеПолное);
		Иначе
			СтрокаТаблицы3_2.Вставить("КонтрактВалютаНаименование", ВалютаДоговора.Наименование);
		КонецЕсли;
		СтрокаТаблицы3_2.Вставить("КонтрактВалютаКод", ВалютаДоговора.Код);
		СтрокаТаблицы3_2.Вставить("Сумма", Выборка.Сумма);
		СтрокаТаблицы3_2.Вставить("КодСрокаТранша", Сред(Строка(Выборка.СрокТранша), 1, 1));
		СтрокаТаблицы3_2.Вставить("Дата", Выборка.Дата);
		ДанныеДляПечати.Таблица3_2.Добавить(СтрокаТаблицы3_2);
	КонецЦикла;


	// Раздел 4
	ДанныеДляПечати.Вставить("Таблица4", Новый Массив);	
	Для Каждого СтрокаТЧ Из ПереводВДругойБанк Цикл
		Если СтрокаТЧ.НомерСтроки < ПереводВДругойБанк.Количество() Тогда
			текДокументЗакрытия = ПереводВДругойБанк[СтрокаТЧ.НомерСтроки].Заявление;
		Иначе
			текДокументЗакрытия = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(текДокументЗакрытия) Или (ПереводВДругойБанк.Количество() >= 2) Тогда
			СтрокаТаблицы4 = Новый Структура;
			СтрокаТаблицы4.Вставить("НомерСтроки", СтрокаТЧ.НомерСтроки);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС", СтрокаТЧ.Банк.НомерПаспортаСделки_10_13 + "/" + СтрокаТЧ.Банк.НомерПаспортаСделки_15_18);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС_Основной", СтрокаТЧ.Банк.НомерПаспортаСделки_10_13);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС_Филиал", СтрокаТЧ.Банк.НомерПаспортаСделки_15_18);
			Если СтрокаТЧ.НомерСтроки = 1 Тогда
				СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе", "Х");
				СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе_Значение", Дата(1,1,1));
			Иначе
				СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе", Формат(СтрокаТЧ.ДатаПринятияБанком, "ДФ=dd.MM.yyyy"));
				СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе_Значение", СтрокаТЧ.ДатаПринятияБанком);
			КонецЕсли;
			Если ЗначениеЗаполнено(текДокументЗакрытия) Тогда
				СтрокаТаблицы4.Вставить("ДатаЗакрытияПС", Формат(текДокументЗакрытия.ДатаЗакрытияПС, "ДФ=dd.MM.yyyy"));
				СтрокаТаблицы4.Вставить("ДатаЗакрытияПС_Значение", текДокументЗакрытия.ДатаЗакрытияПС);
				СтрокаТаблицы4.Вставить("ОснованиеЗакрытияПС", Перечисления.РЭЙ_ОснованияЗакрытияПС.ПолучитьНомерПункта(текДокументЗакрытия.ОснованиеЗакрытияПС));
			Иначе
				СтрокаТаблицы4.Вставить("ДатаЗакрытияПС", "");
				СтрокаТаблицы4.Вставить("ДатаЗакрытияПС_Значение", Дата(1,1,1));
				СтрокаТаблицы4.Вставить("ОснованиеЗакрытияПС", "");
			КонецЕсли;
			ДанныеДляПечати.Таблица4.Добавить(СтрокаТаблицы4);
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(ДатаЗакрытияПС) Тогда
		Если ДанныеДляПечати.Таблица4.Количество() = 0 Тогда
			СтрокаТаблицы4 = Новый Структура;
			СтрокаТаблицы4.Вставить("НомерСтроки", 1);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС", ТекущийБанк.РЭЙ_НомерПаспортаСделки_10_13 + "/" + ТекущийБанк.РЭЙ_НомерПаспортаСделки_15_18);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС_Основной", ТекущийБанк.РЭЙ_НомерПаспортаСделки_10_13);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС_Филиал", ТекущийБанк.РЭЙ_НомерПаспортаСделки_15_18);
			СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе", "Х");
			СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе_Значение", Дата(1,1,1));
			ДанныеДляПечати.Таблица4.Добавить(СтрокаТаблицы4);
		КонецЕсли;
		
		СтрокаТаблицы4.Вставить("ДатаЗакрытияПС", Формат(ДатаЗакрытияПС, "ДФ=dd.MM.yyyy"));
		СтрокаТаблицы4.Вставить("ДатаЗакрытияПС_Значение", ДатаЗакрытияПС);
		СтрокаТаблицы4.Вставить("ОснованиеЗакрытияПС", Перечисления.РЭЙ_ОснованияЗакрытияПС.ПолучитьНомерПункта(ОснованиеЗакрытияПС));
	КонецЕсли;
	
	// Раздел 5
	ДанныеДляПечати.Вставить("Таблица5", Новый Массив);	
	Для Каждого СтрокаТЧ Из ПереоформлениеПС Цикл
		СтрокаТаблицы5 = Новый Структура;
		СтрокаТаблицы5.Вставить("НомерСтроки", СтрокаТЧ.НомерСтроки);
		СтрокаТаблицы5.Вставить("Дата", Формат(СтрокаТЧ.Дата, "ДФ=dd.MM.yyyy"));
		СтрокаТаблицы5.Вставить("Дата_Значение", СтрокаТЧ.Дата);
		Если Не ПустаяСтрока(СтрокаТЧ.ОснованиеНомер)  Тогда
			СтрокаТаблицы5.Вставить("ОснованиеНомер", СтрокаТЧ.ОснованиеНомер);
		Иначе
			СтрокаТаблицы5.Вставить("ОснованиеНомер", "БН");
		КонецЕсли; 
		СтрокаТаблицы5.Вставить("ОснованиеДата", Формат(СтрокаТЧ.ОснованиеДата, "ДФ=dd.MM.yyyy"));
		СтрокаТаблицы5.Вставить("ОснованиеДата_Значение", СтрокаТЧ.ОснованиеДата);
		ДанныеДляПечати.Таблица5.Добавить(СтрокаТаблицы5);
	КонецЦикла; 
	
	// номер паспорта сделки в другом банке
	Для Счетчик = 1 По 22 Цикл
		ШапкаДанных.Вставить("НПСДБ_" + Счетчик, Сред(НомерПСДругойБанк, Счетчик, 1));
	КонецЦикла;
	
	// предоставление документов по сделке
	ШапкаДанных.Вставить("ВидПредоставленияДокументовПоСделке", ВидПредоставленияДокументовПоСделке);
	ШапкаДанных.Вставить("ДатаПредоставленияДокументовПоСделке", ДатаПредоставленияДокументовПоСделке);
	
	// ответственные лица
	ШапкаДанных.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(Руководитель, Дата));
	ШапкаДанных.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ГлавныйБухгалтер, Дата));
	
	Если КонтрактВЭД.КредитныйДоговор Тогда
		// Раздел 8.1 (форма 2)
		ШапкаДанных.Вставить("ФиксированнаяСтавкаГодовыхПроцентов", "");
		ШапкаДанных.Вставить("СтавкаЛИБОР", "");
		ШапкаДанных.Вставить("ДругиеМетодыОпределенияПроцентнойСтавки", "");
		ШапкаДанных.Вставить("РазмерПроцентнойНадбавки", "");
		Если КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ФиксированнаяСтавка Тогда
			ШапкаДанных.Вставить("ФиксированнаяСтавкаГодовыхПроцентов", КонтрактВЭД.ФиксированнаяСтавкаГодовыхПроцентов);
		ИначеЕсли КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ЛИБОР Тогда
			ШапкаДанных.Вставить("СтавкаЛИБОР", КонтрактВЭД.СтавкаЛИБОР);
			ШапкаДанных.Вставить("РазмерПроцентнойНадбавки", КонтрактВЭД.РазмерПроцентнойНадбавки);
		ИначеЕсли КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ДругиеСтавки Тогда
			ШапкаДанных.Вставить("ДругиеМетодыОпределенияПроцентнойСтавки", КонтрактВЭД.ДругиеМетодыОпределенияПроцентнойСтавки);
			ШапкаДанных.Вставить("РазмерПроцентнойНадбавки", КонтрактВЭД.РазмерПроцентнойНадбавки);
		КонецЕсли;
		
		// Раздел 8.2 (форма 2)
		ШапкаДанных.Вставить("ИныеПлатежиПредусмотренныеКредитнымДоговором", КонтрактВЭД.ИныеПлатежиПредусмотренныеКредитнымДоговором);
		
		// Раздел 8.3 (форма 2)
		ШапкаДанных.Вставить("СуммаОсновногоДолга", СуммаОсновногоДолга);
		Если СуммаОсновногоДолга <> 0 Тогда
			ШапкаДанных.Вставить("СуммаОсновногоДолгаВалютаКод", ВалютаДоговора.Код);
		Иначе
			ШапкаДанных.Вставить("СуммаОсновногоДолгаВалютаКод", "");
		КонецЕсли;
		
		// Раздел 9.1 (форма 2)
		Если КонтрактВЭД.ОснованиеЗаполненияГрафикаПогашения = 0 Тогда
			ШапкаДанных.Вставить("ОснованиеЗаполненияГрафикаПогашения0", "*");
		Иначе
			ШапкаДанных.Вставить("ОснованиеЗаполненияГрафикаПогашения0", "");
		КонецЕсли;
		Если КонтрактВЭД.ОснованиеЗаполненияГрафикаПогашения = 1 Тогда
			ШапкаДанных.Вставить("ОснованиеЗаполненияГрафикаПогашения1", "*");
		Иначе
			ШапкаДанных.Вставить("ОснованиеЗаполненияГрафикаПогашения1", "");
		КонецЕсли;
		
		// Раздел 9.2 (форма 2)
		ДанныеДляПечати.Вставить("Таблица9_2", РегистрыСведений.РЭЙ_ГрафикПогашения.ПолучитьДанныеДляПечати(КонтрактВЭД));
		
		// Раздел 9.3 (форма 2)
		ДанныеДляПечати.Вставить("ПрямоеИнвестирование", КонтрактВЭД.ПрямоеИнвестирование);
		
		// Раздел 9.4 (форма 2)
		ДанныеДляПечати.Вставить("СуммаОбеспечения", КонтрактВЭД.СуммаОбеспечения);
		
		// Раздел 9.5 (форма 2)
		ДанныеДляПечати.Вставить("Таблица9_5", РегистрыСведений.РЭЙ_КредитныйСиндикат.ПолучитьДанныеДляПечати(КонтрактВЭД));
	КонецЕсли;
	
	Возврат ДанныеДляПечати;
КонецФункции

Функция ПечатьПоставновкаНаУчетКонтракта_2018() Экспорт
	ДанныеДляПечати = ДанныеДляПечати_2018();
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПостановкаНаУчет_2018_Контракт";
	Макет = ПолучитьМакет("ПостановкаНаУчет_2018_Контракт");
	
	Область = Макет.ПолучитьОбласть("Лист1_Шапка1");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	Для Каждого СтрокаПоКонтрагенту Из ДанныеДляПечати.Таблица2 Цикл	
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ2");
		Область.Параметры.Заполнить(СтрокаПоКонтрагенту);
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Лист1_Шапка12");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица4.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица4 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Лист1_Шапка2");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);

	Если ДанныеДляПечати.Таблица5.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица5 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;

	Область = Макет.ПолучитьОбласть("Лист1_Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// TODO Необходимо перенести в общую процедуру печати
	УстановитьСтатусЗадачРаспечатана(1);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьПоставновкаНаУчетКредитногоДоговора_2018() Экспорт
	ДанныеДляПечати = ДанныеДляПечати_2018();
	
	ТабДокумент = Новый ТабличныйДокумент;

	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПостановкаНаУчет_2018_КредитныйДоговор";
	Макет = ПолучитьМакет("ПостановкаНаУчет_2018_КредитныйДоговор");
	
	// Раздел 1
	Область = Макет.ПолучитьОбласть("Лист1_Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 2
	Для Каждого СтрокаТЧ ИЗ ДанныеДляПечати.Таблица2 Цикл	
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ2");
		Область.Параметры.Заполнить(СтрокаТЧ);
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	// Раздел 3
	Область = Макет.ПолучитьОбласть("Лист1_ШапкаТ3");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 3.2
	Если ДанныеДляПечати.Таблица3_2.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ3_2");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица3_2 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ3_2");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	// Раздел 4
	Область = Макет.ПолучитьОбласть("Лист1_ШапкаТ4");
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица4.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица4 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	// Раздел 5
	Область = Макет.ПолучитьОбласть("Лист1_ШапкаТ5");
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица5.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица5 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	// Подвал
	Область = Макет.ПолучитьОбласть("Лист1_Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// =====================
	// ЛИСТ 2
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Раздел 8
	Область = Макет.ПолучитьОбласть("Лист2_ШапкаТ8");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 9.1
	Область = Макет.ПолучитьОбласть("Лист2_ШапкаТ9");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 9.2
	Если ДанныеДляПечати.Таблица9_2.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_2");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица9_2 Цикл
			Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_2");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;

	// Раздел 9.3, 9.4
	Область = Макет.ПолучитьОбласть("Лист2_ШапкаТ9_3");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 9.5
	Если ДанныеДляПечати.Таблица9_5.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_5");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица9_5 Цикл
			Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_5");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	// Подвал
	Область = Макет.ПолучитьОбласть("Лист2_Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);

	// TODO Необходимо перенести в общую процедуру печати
	УстановитьСтатусЗадачРаспечатана(1);
	
	Возврат ТабДокумент;
КонецФункции

#КонецОбласти

#Область ПечатьУстаревшиеВерсии

#Область ПечатьУстаревшиеВерсии_2015_02_23

Функция ДанныеДляПечати_2015_02_23()
	ВалютаДоговора = КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	ДанныеДляПечати = Новый Структура;
	ШапкаДанных = Новый Структура;
	ДанныеДляПечати.Вставить("Шапка", ШапкаДанных);
	
	// банк
	ШапкаДанных.Вставить("БанкНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеБанкаДляПечати(Банк));
	ШапкаДанных.Вставить("БанкКод", Банк.Код);
	ШапкаДанных.Вставить("ТекущийБанкНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеБанкаДляПечати(ТекущийБанк));
	ШапкаДанных.Вставить("ТекущийБанкКод", ТекущийБанк.Код);
	
	// номер паспорта сделки
	ШапкаДанных.Вставить("НомерПаспортаСделки", НомерПаспортаСделки);
	Для Счетчик = 1 По 22 Цикл
		Если Не НеПечататьНомерИДатуПС Тогда
			ШапкаДанных.Вставить("НПС_" + Счетчик, Сред(ШапкаДанных.НомерПаспортаСделки, Счетчик ,1));
		Иначе
			ШапкаДанных.Вставить("НПС_" + Счетчик, "");
		КонецЕсли;
	КонецЦикла;
	
	// дата паспорта сделки
	ШапкаДанных.Вставить("ДатаПаспортаСделки", ДатаПаспортаСделки);
	ШапкаДанных.Вставить("ДатаЧисло", "");
	ШапкаДанных.Вставить("МесяцСтрока", "");
	ШапкаДанных.Вставить("Год2ПослЦифры", "");
	Если НеПечататьНомерИДатуПС = Ложь Тогда
		Если ЗначениеЗаполнено(ШапкаДанных.ДатаПаспортаСделки) Тогда 
			ШапкаДанных.Вставить("ДатаЧисло", Формат(ШапкаДанных.ДатаПаспортаСделки, "ДФ=dd"));
			ШапкаДанных.Вставить("МесяцСтрока", Сред(Формат(ШапкаДанных.ДатаПаспортаСделки, "ДФ=dd.MMMM"), 4));
			ШапкаДанных.Вставить("Год2ПослЦифры", Формат(ШапкаДанных.ДатаПаспортаСделки, "ДФ=yy"));
		КонецЕсли;	
	КонецЕсли;	
	
	// организация
	Если Не ПустаяСтрока(Организация.НаименованиеПолное) Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.НаименованиеПолное);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.Наименование);
	КонецЕсли;
	
	// адрес
	ШапкаДанных.Вставить("Регион", ?(СокрЛП(Организация.РЭЙ_Регион) = "нет", "", СокрЛП(Организация.РЭЙ_Регион)));
	ШапкаДанных.Вставить("Район", ?(СокрЛП(Организация.РЭЙ_Район) = "нет", "", СокрЛП(Организация.РЭЙ_Район)));
	ШапкаДанных.Вставить("Город", ?(СокрЛП(Организация.РЭЙ_Город) = "нет", "", СокрЛП(Организация.РЭЙ_Город)));
	ШапкаДанных.Вставить("НаселенныйПункт", ?(СокрЛП(Организация.РЭЙ_НаселенныйПункт) = "нет", "", СокрЛП(Организация.РЭЙ_НаселенныйПункт)));
	ШапкаДанных.Вставить("Улица", ?(СокрЛП(Организация.РЭЙ_Улица) = "нет", "", СокрЛП(Организация.РЭЙ_Улица)));
	ШапкаДанных.Вставить("Дом", Организация.РЭЙ_Дом);
	ШапкаДанных.Вставить("Корпус", Организация.РЭЙ_Корпус);
	ШапкаДанных.Вставить("Квартира", Организация.РЭЙ_Квартира);
	
	// ОГРН
	ШапкаДанных.Вставить("ОГРН", Организация.ОГРН);
	Для Счетчик = 1 По 15 Цикл
		ШапкаДанных.Вставить("ОГРН_" + счетчик, Сред(ШапкаДанных.ОГРН, Счетчик, 1));
	КонецЦикла;
	
	// Дата внесения в гос. реестр
	Если Организация.РЭЙ_ДатаВнесенияВГосРеестр >= Дата(2002,07,01) Тогда
		текДатаВнесенияВГосРеестр = Организация.РЭЙ_ДатаВнесенияВГосРеестр;
	Иначе
		текДатаВнесенияВГосРеестр = Дата(2002,07,01);
	КонецЕсли;
	печДатаРегистрации = Формат(текДатаВнесенияВГосРеестр, "ДФ=dd.MM.yyyy");
	Для Счетчик = 1 По 10 Цикл
		ШапкаДанных.Вставить("ДатаВнесенияВГосРеестр_" + Счетчик, Сред(печДатаРегистрации, Счетчик, 1));
	КонецЦикла;
	
	// ИНН
	ШапкаДанных.Вставить("ИНН", Организация.ИНН);
	печИНН = Лев(СокрЛП(Организация.ИНН) + "            ", 12);
	Для Счетчик = 1 По 12 Цикл
		ШапкаДанных.Вставить("ИНН_" + Счетчик, Сред(печИНН, Счетчик, 1));
	КонецЦикла;
	
	// КПП
	Если Не ПустаяСтрока(КППОбособленногоПодразделения) Тогда
		текКПП = КППОбособленногоПодразделения;
	Иначе
		текКПП = Организация.КПП;
	КонецЕсли;
	ШапкаДанных.Вставить("КПП", текКПП);
	печКПП = Лев(СокрЛП(текКПП) + "            ", 9);
	Для счетчик = 1 По 9 Цикл
		ШапкаДанных.Вставить("КПП_" + Счетчик, Сред(печКПП, Счетчик, 1));
	КонецЦикла;
	
	// Раздел 2
	ШапкаДанных.Вставить("КонтрагентНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеКонтрагентаДляПечати(Контрагент));
	ДанныеДляПечати.Вставить("Таблица2", Новый Массив);
	Если КонтрактВЭД.Многосторонний Тогда	
		Для Каждого СторонаПоКонтракту ИЗ КонтрактВЭД.СтороныПоКонтракту Цикл
			ДанныеДляПечати.Таблица2.Добавить(ПолучитьСтрокуДляТаблицы2_2015_02_23(СторонаПоКонтракту.Контрагент));
		КонецЦикла;
	Иначе		
		ДанныеДляПечати.Таблица2.Добавить(ПолучитьСтрокуДляТаблицы2_2015_02_23(Контрагент));
	КонецЕсли;	
	
	
	// Раздел 3 (форма 1) 3.1 (форма 2)
	Если Не ПустаяСтрока(КонтрактВЭД.КонтрактНомер) Тогда
		ШапкаДанных.Вставить("КонтрактНомер", КонтрактВЭД.КонтрактНомер);
	Иначе
		ШапкаДанных.Вставить("КонтрактНомер", "БН");
	КонецЕсли;
	ШапкаДанных.Вставить("КонтрактДатаПодписания", Формат(КонтрактВЭД.КонтрактДатаПодписания, "ДФ=dd.MM.yyyy"));
	Если Не ПустаяСтрока(ВалютаДоговора.НаименованиеПолное) Тогда
		ШапкаДанных.Вставить("КонтрактВалютаНаименование", ВалютаДоговора.НаименованиеПолное);
	Иначе
		ШапкаДанных.Вставить("КонтрактВалютаНаименование", ВалютаДоговора.Наименование);
	КонецЕсли;
	ШапкаДанных.Вставить("КонтрактВалютаКод", ВалютаДоговора.Код);
	Если КонтрактВЭД.КонтрактБезСуммы Тогда
		ШапкаДанных.Вставить("КонтрактСумма", "БС");
	Иначе
		ШапкаДанных.Вставить("КонтрактСумма", Формат(КонтрактВЭД.КонтрактСумма, "ЧДЦ=2; ЧН="));
	КонецЕсли;
	ШапкаДанных.Вставить("КонтрактСумма_Значение", КонтрактВЭД.КонтрактСумма);
	ШапкаДанных.Вставить("ДатаЗавершенияОбязательствПоКонтракту", Формат(КонтрактВЭД.ДатаЗавершенияОбязательствПоКонтракту, "ДФ=dd.MM.yyyy"));
	ШапкаДанных.Вставить("СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте", Формат(КонтрактВЭД.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте, "ЧДЦ=2"));
	ШапкаДанных.Вставить("СуммаВалВыручкиПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте", Формат(КонтрактВЭД.СуммаВалВыручкиПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте, "ЧДЦ=2"));
	ШапкаДанных.Вставить("СрокиПогашенияКредитовВЭД", Сред(Строка(КонтрактВЭД.СрокиПогашенияКредитовВЭД), 1, 1));
	
	// Раздел 3.2 (форма 2)
	ДанныеДляПечати.Вставить("Таблица3_2", Новый Массив);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РЭЙ_ГрафикФинансирования.Период КАК Дата,
	|	РЭЙ_ГрафикФинансирования.Сумма,
	|	РЭЙ_ГрафикФинансирования.ОсобоеУсловие,
	|	РЭЙ_ГрафикФинансирования.СрокТранша
	|ИЗ
	|	РегистрСведений.РЭЙ_ГрафикФинансирования КАК РЭЙ_ГрафикФинансирования
	|ГДЕ
	|	РЭЙ_ГрафикФинансирования.Договор = &Договор
	|
	|УПОРЯДОЧИТЬ ПО
	|	РЭЙ_ГрафикФинансирования.Период";
	
	Запрос.УстановитьПараметр("Договор", КонтрактВЭД);
	Выборка = Запрос.Выполнить().Выбрать();
	текНомерСтроки = 0;
	текДатаДляАнализа = ?(ЗначениеЗаполнено(ДатаПредоставленияДокументовПоСделке), ДатаПредоставленияДокументовПоСделке, ТекущаяДата());	
	Пока Выборка.Следующий() Цикл
		текНомерСтроки = текНомерСтроки + 1;
		
		СтрокаТаблицы3_2 = Новый Структура;
		СтрокаТаблицы3_2.Вставить("НомерСтроки", текНомерСтроки);
		Если Не ПустаяСтрока(ВалютаДоговора.НаименованиеПолное) Тогда
			СтрокаТаблицы3_2.Вставить("КонтрактВалютаНаименование", ВалютаДоговора.НаименованиеПолное);
		Иначе
			СтрокаТаблицы3_2.Вставить("КонтрактВалютаНаименование", ВалютаДоговора.Наименование);
		КонецЕсли;
		СтрокаТаблицы3_2.Вставить("КонтрактВалютаКод", ВалютаДоговора.Код);
		СтрокаТаблицы3_2.Вставить("Сумма", Выборка.Сумма);
		СтрокаТаблицы3_2.Вставить("КодСрокаТранша", Сред(Строка(Выборка.СрокТранша), 1, 1));
		СтрокаТаблицы3_2.Вставить("Дата", Выборка.Дата);
		ДанныеДляПечати.Таблица3_2.Добавить(СтрокаТаблицы3_2);
	КонецЦикла;


	// Раздел 4
	ДанныеДляПечати.Вставить("Таблица4", Новый Массив);	
	Для Каждого СтрокаТЧ Из ПереводВДругойБанк Цикл
		Если СтрокаТЧ.НомерСтроки < ПереводВДругойБанк.Количество() Тогда
			текДокументЗакрытия = ПереводВДругойБанк[СтрокаТЧ.НомерСтроки].Заявление;
		Иначе
			текДокументЗакрытия = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(текДокументЗакрытия) Или (ПереводВДругойБанк.Количество() >= 2) Тогда
			СтрокаТаблицы4 = Новый Структура;
			СтрокаТаблицы4.Вставить("НомерСтроки", СтрокаТЧ.НомерСтроки);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС", СтрокаТЧ.Банк.НомерПаспортаСделки_10_13 + "/" + СтрокаТЧ.Банк.НомерПаспортаСделки_15_18);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС_Основной", СтрокаТЧ.Банк.НомерПаспортаСделки_10_13);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС_Филиал", СтрокаТЧ.Банк.НомерПаспортаСделки_15_18);
			Если СтрокаТЧ.НомерСтроки = 1 Тогда
				СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе", "Х");
				СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе_Значение", Дата(1,1,1));
			Иначе
				СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе", Формат(СтрокаТЧ.ДатаПринятияБанком, "ДФ=dd.MM.yyyy"));
				СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе_Значение", СтрокаТЧ.ДатаПринятияБанком);
			КонецЕсли;
			Если ЗначениеЗаполнено(текДокументЗакрытия) Тогда
				СтрокаТаблицы4.Вставить("ДатаЗакрытияПС", Формат(текДокументЗакрытия.ДатаЗакрытияПС, "ДФ=dd.MM.yyyy"));
				СтрокаТаблицы4.Вставить("ДатаЗакрытияПС_Значение", текДокументЗакрытия.ДатаЗакрытияПС);
				СтрокаТаблицы4.Вставить("ОснованиеЗакрытияПС", Перечисления.РЭЙ_ОснованияЗакрытияПС.ПолучитьНомерПункта(текДокументЗакрытия.ОснованиеЗакрытияПС));
			Иначе
				СтрокаТаблицы4.Вставить("ДатаЗакрытияПС", "");
				СтрокаТаблицы4.Вставить("ДатаЗакрытияПС_Значение", Дата(1,1,1));
				СтрокаТаблицы4.Вставить("ОснованиеЗакрытияПС", "");
			КонецЕсли;
			ДанныеДляПечати.Таблица4.Добавить(СтрокаТаблицы4);
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(ДатаЗакрытияПС) Тогда
		Если ДанныеДляПечати.Таблица4.Количество() = 0 Тогда
			СтрокаТаблицы4 = Новый Структура;
			СтрокаТаблицы4.Вставить("НомерСтроки", 1);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС", ТекущийБанк.РЭЙ_НомерПаспортаСделки_10_13 + "/" + ТекущийБанк.РЭЙ_НомерПаспортаСделки_15_18);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС_Основной", ТекущийБанк.РЭЙ_НомерПаспортаСделки_10_13);
			СтрокаТаблицы4.Вставить("РегНомерБанкаПС_Филиал", ТекущийБанк.РЭЙ_НомерПаспортаСделки_15_18);
			СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе", "Х");
			СтрокаТаблицы4.Вставить("ДатаПринятияПСПриПереводе_Значение", Дата(1,1,1));
			ДанныеДляПечати.Таблица4.Добавить(СтрокаТаблицы4);
		КонецЕсли;
		
		СтрокаТаблицы4.Вставить("ДатаЗакрытияПС", Формат(ДатаЗакрытияПС, "ДФ=dd.MM.yyyy"));
		СтрокаТаблицы4.Вставить("ДатаЗакрытияПС_Значение", ДатаЗакрытияПС);
		СтрокаТаблицы4.Вставить("ОснованиеЗакрытияПС", Перечисления.РЭЙ_ОснованияЗакрытияПС.ПолучитьНомерПункта(ОснованиеЗакрытияПС));
	КонецЕсли;
	
	// Раздел 5
	ДанныеДляПечати.Вставить("Таблица5", Новый Массив);	
	Для Каждого СтрокаТЧ Из ПереоформлениеПС Цикл
		СтрокаТаблицы5 = Новый Структура;
		СтрокаТаблицы5.Вставить("НомерСтроки", СтрокаТЧ.НомерСтроки);
		СтрокаТаблицы5.Вставить("Дата", Формат(СтрокаТЧ.Дата, "ДФ=dd.MM.yyyy"));
		СтрокаТаблицы5.Вставить("Дата_Значение", СтрокаТЧ.Дата);
		Если Не ПустаяСтрока(СтрокаТЧ.ОснованиеНомер)  Тогда
			СтрокаТаблицы5.Вставить("ОснованиеНомер", СтрокаТЧ.ОснованиеНомер);
		Иначе
			СтрокаТаблицы5.Вставить("ОснованиеНомер", "БН");
		КонецЕсли; 
		СтрокаТаблицы5.Вставить("ОснованиеДата", Формат(СтрокаТЧ.ОснованиеДата, "ДФ=dd.MM.yyyy"));
		СтрокаТаблицы5.Вставить("ОснованиеДата_Значение", СтрокаТЧ.ОснованиеДата);
		ДанныеДляПечати.Таблица5.Добавить(СтрокаТаблицы5);
	КонецЦикла; 
	
	// номер паспорта сделки в другом банке
	Для Счетчик = 1 По 22 Цикл
		ШапкаДанных.Вставить("НПСДБ_" + Счетчик, Сред(НомерПСДругойБанк, Счетчик, 1));
	КонецЦикла;
	
	// предоставление документов по сделке
	ШапкаДанных.Вставить("ВидПредоставленияДокументовПоСделке", ВидПредоставленияДокументовПоСделке);
	ШапкаДанных.Вставить("ДатаПредоставленияДокументовПоСделке", ДатаПредоставленияДокументовПоСделке);
	
	// ответственные лица
	ШапкаДанных.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(Руководитель, Дата));
	ШапкаДанных.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ГлавныйБухгалтер, Дата));
	
	Если КонтрактВЭД.КредитныйДоговор Тогда
		// Раздел 8.1 (форма 2)
		ШапкаДанных.Вставить("ФиксированнаяСтавкаГодовыхПроцентов", "");
		ШапкаДанных.Вставить("СтавкаЛИБОР", "");
		ШапкаДанных.Вставить("ДругиеМетодыОпределенияПроцентнойСтавки", "");
		ШапкаДанных.Вставить("РазмерПроцентнойНадбавки", "");
		Если КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ФиксированнаяСтавка Тогда
			ШапкаДанных.Вставить("ФиксированнаяСтавкаГодовыхПроцентов", КонтрактВЭД.ФиксированнаяСтавкаГодовыхПроцентов);
		ИначеЕсли КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ЛИБОР Тогда
			ШапкаДанных.Вставить("СтавкаЛИБОР", КонтрактВЭД.СтавкаЛИБОР);
			ШапкаДанных.Вставить("РазмерПроцентнойНадбавки", КонтрактВЭД.РазмерПроцентнойНадбавки);
		ИначеЕсли КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ДругиеСтавки Тогда
			ШапкаДанных.Вставить("ДругиеМетодыОпределенияПроцентнойСтавки", КонтрактВЭД.ДругиеМетодыОпределенияПроцентнойСтавки);
			ШапкаДанных.Вставить("РазмерПроцентнойНадбавки", КонтрактВЭД.РазмерПроцентнойНадбавки);
		КонецЕсли;
		
		// Раздел 8.2 (форма 2)
		ШапкаДанных.Вставить("ИныеПлатежиПредусмотренныеКредитнымДоговором", КонтрактВЭД.ИныеПлатежиПредусмотренныеКредитнымДоговором);
		
		// Раздел 8.3 (форма 2)
		ШапкаДанных.Вставить("СуммаОсновногоДолга", СуммаОсновногоДолга);
		Если СуммаОсновногоДолга <> 0 Тогда
			ШапкаДанных.Вставить("СуммаОсновногоДолгаВалютаКод", ВалютаДоговора.Код);
		Иначе
			ШапкаДанных.Вставить("СуммаОсновногоДолгаВалютаКод", "");
		КонецЕсли;
		
		// Раздел 9.1 (форма 2)
		Если КонтрактВЭД.ОснованиеЗаполненияГрафикаПогашения = 0 Тогда
			ШапкаДанных.Вставить("ОснованиеЗаполненияГрафикаПогашения0", "*");
		Иначе
			ШапкаДанных.Вставить("ОснованиеЗаполненияГрафикаПогашения0", "");
		КонецЕсли;
		Если КонтрактВЭД.ОснованиеЗаполненияГрафикаПогашения = 1 Тогда
			ШапкаДанных.Вставить("ОснованиеЗаполненияГрафикаПогашения1", "*");
		Иначе
			ШапкаДанных.Вставить("ОснованиеЗаполненияГрафикаПогашения1", "");
		КонецЕсли;
		
		// Раздел 9.2 (форма 2)
		ДанныеДляПечати.Вставить("Таблица9_2", Новый Массив);	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_ГрафикПогашения.Период КАК Дата,
		|	РЭЙ_ГрафикПогашения.Сумма КАК Сумма,
		|	РЭЙ_ГрафикПогашения.ОсобоеУсловие КАК ОсобоеУсловие
		|ПОМЕСТИТЬ Тело
		|ИЗ
		|	РегистрСведений.РЭЙ_ГрафикПогашения КАК РЭЙ_ГрафикПогашения
		|ГДЕ
		|	РЭЙ_ГрафикПогашения.Договор = &Договор
		|	И РЭЙ_ГрафикПогашения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.РЭЙ_КредитыЗаймы.Тело)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РЭЙ_ГрафикПогашения.Период КАК Дата,
		|	РЭЙ_ГрафикПогашения.Сумма КАК Сумма,
		|	РЭЙ_ГрафикПогашения.ОсобоеУсловие КАК ОсобоеУсловие
		|ПОМЕСТИТЬ Проценты
		|ИЗ
		|	РегистрСведений.РЭЙ_ГрафикПогашения КАК РЭЙ_ГрафикПогашения
		|ГДЕ
		|	РЭЙ_ГрафикПогашения.Договор = &Договор
		|	И РЭЙ_ГрафикПогашения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.РЭЙ_КредитыЗаймы.Проценты)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(Тело.Дата, Проценты.Дата) КАК Период,
		|	ЕСТЬNULL(Тело.ОсобоеУсловие, Проценты.ОсобоеУсловие) КАК ОсобоеУсловие,
		|	Тело.Дата КАК ТелоДата,
		|	Тело.Сумма КАК ТелоСумма,
		|	Проценты.Дата КАК ПроцентыДата,
		|	Проценты.Сумма КАК ПроцентыСумма
		|ИЗ
		|	Тело КАК Тело
		|		ПОЛНОЕ СОЕДИНЕНИЕ Проценты КАК Проценты
		|		ПО Тело.Дата = Проценты.Дата
		|			И Тело.ОсобоеУсловие = Проценты.ОсобоеУсловие
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
		Запрос.УстановитьПараметр("Договор", КонтрактВЭД);
		Выборка = Запрос.Выполнить().Выбрать();
		ТаблицаПустая = Истина;
		текНомерСтроки = 0;
		Пока Выборка.Следующий() Цикл
			текНомерСтроки = текНомерСтроки + 1;
			
			СтрокаТаблицы9_2 = Новый Структура;
			СтрокаТаблицы9_2.Вставить("НомерСтроки", текНомерСтроки);
			СтрокаТаблицы9_2.Вставить("ТелоКонтрактВалютаКод", ВалютаДоговора.Код);
			СтрокаТаблицы9_2.Вставить("ТелоДата", Выборка.ТелоДата);
			СтрокаТаблицы9_2.Вставить("ТелоСумма", Выборка.ТелоСумма);
			СтрокаТаблицы9_2.Вставить("ПроцентыДата", Выборка.ПроцентыДата);
			СтрокаТаблицы9_2.Вставить("ПроцентыСумма", Выборка.ПроцентыСумма);
			СтрокаТаблицы9_2.Вставить("ОсобоеУсловие", Выборка.ОсобоеУсловие);
			ДанныеДляПечати.Таблица9_2.Добавить(СтрокаТаблицы9_2);
		КонецЦикла;
		
		// Раздел 9.3 (форма 2)
		ДанныеДляПечати.Вставить("ПрямоеИнвестирование", КонтрактВЭД.ПрямоеИнвестирование);
		
		// Раздел 9.4 (форма 2)
		ДанныеДляПечати.Вставить("СуммаОбеспечения", КонтрактВЭД.СуммаОбеспечения);
		
		// Раздел 9.5 (форма 2)
		ДанныеДляПечати.Вставить("Таблица9_5", Новый Массив);	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_КредитныйСиндикат.Контрагент,
		|	РЭЙ_КредитныйСиндикат.СтранаКонтрагента,
		|	РЭЙ_КредитныйСиндикат.Сумма,
		|	РЭЙ_КредитныйСиндикат.Доля,
		|	РЭЙ_КредитныйСиндикат.СтранаКонтрагента.Код
		|ИЗ
		|	РегистрСведений.РЭЙ_КредитныйСиндикат КАК РЭЙ_КредитныйСиндикат
		|ГДЕ
		|	РЭЙ_КредитныйСиндикат.Договор = &КонтрактВЭД";
		
		Запрос.УстановитьПараметр("КонтрактВЭД", КонтрактВЭД);
		Выборка = Запрос.Выполнить().Выбрать();
		
		текНомерСтроки = 0;
		Пока Выборка.Следующий() Цикл
			текНомерСтроки = текНомерСтроки + 1;
			
			СтрокаТаблицы9_5 = Новый Структура;
			СтрокаТаблицы9_5.Вставить("НомерСтроки", текНомерСтроки);
			Если Не ПустаяСтрока(Выборка.Контрагент.РЭЙ_НаименованиеАнгл) Тогда
				СтрокаТаблицы9_5.Вставить("КонтрагентНаименование", Выборка.Контрагент.РЭЙ_НаименованиеАнгл);
			ИначеЕсли Не ПустаяСтрока(Выборка.Контрагент.НаименованиеПолное) Тогда
				СтрокаТаблицы9_5.Вставить("КонтрагентНаименование", Выборка.Контрагент.НаименованиеПолное);
			Иначе
				СтрокаТаблицы9_5.Вставить("КонтрагентНаименование", Выборка.Контрагент.Наименование);
			КонецЕсли;
			СтрокаТаблицы9_5.Вставить("СтранаКонтрагентаКод", Выборка.СтранаКонтрагентаКод);
			СтрокаТаблицы9_5.Вставить("Сумма", Выборка.Сумма);
			СтрокаТаблицы9_5.Вставить("Доля", Выборка.Доля);
			ДанныеДляПечати.Таблица9_5.Добавить(СтрокаТаблицы9_5);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДанныеДляПечати;
КонецФункции

Функция ПечатьПС_Форма1_2015_02_23() Экспорт
	ДанныеДляПечати = ДанныеДляПечати_2015_02_23();
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПаспортСделкиФорма1_2015_02_23";
	Макет = ЭтотОбъект.ПолучитьМакет("ПаспортСделкиФорма1_2015_02_23");
	
	Область = Макет.ПолучитьОбласть("Лист1_Шапка1");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	Для Каждого СтрокаПоКонтрагенту Из ДанныеДляПечати.Таблица2 Цикл	
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ2");
		Область.Параметры.Заполнить(СтрокаПоКонтрагенту);
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Лист1_Шапка12");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица4.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица4 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Лист1_Шапка2");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);

	Если ДанныеДляПечати.Таблица5.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица5 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;

	Область = Макет.ПолучитьОбласть("Лист1_Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// TODO Необходимо перенести в общую процедуру печати
	УстановитьСтатусЗадачРаспечатана(1);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьПС_Форма2_2015_02_23() Экспорт
	ДанныеДляПечати = ДанныеДляПечати_2015_02_23();
	
	ТабДокумент = Новый ТабличныйДокумент;

	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПаспортСделкиФорма2_2015_02_23";
	Макет = ЭтотОбъект.ПолучитьМакет("ПаспортСделкиФорма2_2015_02_23");
	
	// Раздел 1
	Область = Макет.ПолучитьОбласть("Лист1_Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 2
	Для Каждого СтрокаТЧ ИЗ ДанныеДляПечати.Таблица2 Цикл	
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ2");
		Область.Параметры.Заполнить(СтрокаТЧ);
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	// Раздел 3
	Область = Макет.ПолучитьОбласть("Лист1_ШапкаТ3");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 3.2
	Если ДанныеДляПечати.Таблица3_2.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ3_2");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица3_2 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ3_2");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	// Раздел 4
	Область = Макет.ПолучитьОбласть("Лист1_ШапкаТ4");
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица4.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица4 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	// Раздел 5
	Область = Макет.ПолучитьОбласть("Лист1_ШапкаТ5");
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица5.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица5 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	// Подвал
	Область = Макет.ПолучитьОбласть("Лист1_Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// =====================
	// ЛИСТ 2
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// Раздел 8
	Область = Макет.ПолучитьОбласть("Лист2_ШапкаТ8");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 9.1
	Область = Макет.ПолучитьОбласть("Лист2_ШапкаТ9");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 9.2
	Если ДанныеДляПечати.Таблица9_2.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_2");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица9_2 Цикл
			Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_2");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;

	// Раздел 9.3, 9.4
	Область = Макет.ПолучитьОбласть("Лист2_ШапкаТ9_3");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	// Раздел 9.5
	Если ДанныеДляПечати.Таблица9_5.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_5");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица9_5 Цикл
			Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_5");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	// Подвал
	Область = Макет.ПолучитьОбласть("Лист2_Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);

	// TODO Необходимо перенести в общую процедуру печати
	УстановитьСтатусЗадачРаспечатана(1);
	
	Возврат ТабДокумент;
КонецФункции

#КонецОбласти

#Область ПечатьУстаревшиеВерсии_2012

Функция ПолучитьДанныеДляПечатиПС(ВидПечФормы = "") Экспорт

	ДанныеДляПечати = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПаспортСделки.Номер,
	|	ПаспортСделки.Дата,
	|	ПаспортСделки.Организация,
	|	ВЫБОР
	|		КОГДА ПаспортСделки.КППОбособленногоПодразделения = """"
	|			ТОГДА ПаспортСделки.Организация.КПП
	|		ИНАЧЕ ПаспортСделки.КППОбособленногоПодразделения
	|	КОНЕЦ КАК КПП,
	|	ПаспортСделки.Контрагент,
	|	ПаспортСделки.КонтрактВЭД,
	|	ПаспортСделки.ДатаПаспортаСделки,
	|	ПаспортСделки.НомерПаспортаСделки,
	|	ПаспортСделки.БанковскийСчет.Банк КАК Банк,
	|	ПаспортСделки.ДатаОформленияЛиста2,
	|	ПаспортСделки.Руководитель,
	|	ПаспортСделки.ГлавныйБухгалтер,
	|	ПаспортСделки.КонтрактУсловия,
	|	ПаспортСделки.КонтрактВЭД.ВидКонтрактаВЭД КАК ВидКонтрактаВЭД,
	|	ЕСТЬNULL(ПаспортСделки.КонтрактВЭД.ВалютнаяОговорка, ЛОЖЬ) КАК ВалютнаяОговорка,
	|	ПаспортСделки.КонтрактВЭД.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте КАК СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте,
	|	ПаспортСделки.КонтрактВЭД.ОтсрочкаПлатежаПредоплаты КАК ОтсрочкаПлатежаПредоплаты,
	|	ЕСТЬNULL(ПаспортСделки.КонтрактВЭД.КредитныйДоговор, ЛОЖЬ) КАК КредитныйДоговор,
	|	ПаспортСделки.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ПаспортСделки.КонтрактВЭД.КонтрактНомер КАК КонтрактНомер,
	|	ЕСТЬNULL(ПаспортСделки.КонтрактВЭД.КонтрактДатаПодписания, ДАТАВРЕМЯ(1, 1, 1)) КАК КонтрактДатаПодписания,
	|	ЕСТЬNULL(ПаспортСделки.КонтрактВЭД.КонтрактДатаНачала, ДАТАВРЕМЯ(1, 1, 1)) КАК КонтрактДатаНачала,
	|	ЕСТЬNULL(ПаспортСделки.КонтрактВЭД.КонтрактДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) КАК КонтрактДатаОкончания,
	|	ЕСТЬNULL(ПаспортСделки.КонтрактВЭД.КонтрактСумма, 0) КАК КонтрактСумма,
	|	ЕСТЬNULL(ПаспортСделки.КонтрактВЭД.КонтрактБезСуммы, 0) КАК КонтрактБезСуммы,
	|	ПаспортСделки.БанковскийСчет,
	|	ПаспортСделки.НомерПСДо18062004,
	|	ПаспортСделки.НомерПСДругойБанк,
	|	ПаспортСделки.КонтрактВЭД.КоличествоДней КАК КоличествоДней,
	|	ПаспортСделки.КонтрактВЭД.ПериодическиеФиксированныеПлатежи КАК ПериодическиеФиксированныеПлатежи,
	|	ПаспортСделки.КонтрактВЭД.ПериодФиксированныхПлатежей КАК ПериодФиксированныхПлатежей,
	|	ПаспортСделки.КонтрактВЭД.ПроцентныеПлатежиПоКредитамВЭД КАК ПроцентныеПлатежиПоКредитамВЭД,
	|	ПаспортСделки.КонтрактВЭД.ДругиеМетодыОпределенияПроцентнойСтавки КАК ДругиеМетодыОпределенияПроцентнойСтавки,
	|	ПаспортСделки.КонтрактВЭД.ФиксированнаяСтавкаГодовыхПроцентов КАК ФиксированнаяСтавкаГодовыхПроцентов,
	|	ПаспортСделки.КонтрактВЭД.СтавкаЛИБОР КАК СтавкаЛИБОР,
	|	ПаспортСделки.КонтрактВЭД.РазмерПроцентнойНадбавки КАК РазмерПроцентнойНадбавки,
	|	ПаспортСделки.СуммаОсновногоДолга,
	|	ПаспортСделки.КонтрактВЭД.МеждународныеФинОрганизации КАК МеждународныеФинОрганизации,
	|	ПаспортСделки.КонтрактВЭД.СуммаОбеспечения КАК СуммаОбеспечения,
	|	ПаспортСделки.КонтрактВЭД.ПрямоеИнвестирование КАК ПрямоеИнвестирование,
	|	ПаспортСделки.ВидПредоставленияДокументовПоСделке,
	|	ПаспортСделки.ДатаПредоставленияДокументовПоСделке,
	|	ПаспортСделки.КонтрактВЭД.СуммаВалВыручкиПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте КАК СуммаВалВыручкиПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте,
	|	ПаспортСделки.КонтрактВЭД.СрокиПогашенияКредитовВЭД КАК СрокиПогашенияКредитовВЭДЗначение,
	|	ПаспортСделки.КонтрактВЭД.ИныеПлатежиПредусмотренныеКредитнымДоговором КАК ИныеПлатежиПредусмотренныеКредитнымДоговором,
	|	ПаспортСделки.ДатаЗакрытияПС,
	|	ПаспортСделки.ОснованиеЗакрытияПС
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки КАК ПаспортСделки
	|ГДЕ
	|	ПаспортСделки.Ссылка = &ТекущийДокумент";
				  
	ТЗДанныеДляПечати = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ТекКолонка Из ТЗДанныеДляПечати.Колонки Цикл
		ДанныеДляПечати.Вставить(ТекКолонка.Имя, ТЗДанныеДляПечати[0][ТекКолонка.Имя]);	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.НомерСтроки КАК НомерСтроки,
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.Дата
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки.ПереоформлениеПС КАК РЭЙ_ПаспортСделкиПереоформлениеПС
	|ГДЕ
	|	РЭЙ_ПаспортСделкиПереоформлениеПС.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки УБЫВ";
	
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ДанныеДляПечати.Вставить("ПереоформлениеНомер", Формат(Выборка.НомерСтроки, "ЧЦ=2; ЧВН="));
	Если НЕ НеПечататьДатуПереоформленияПС Тогда
		ДанныеДляПечати.Вставить("ПереоформлениеДата", Выборка.Дата);
	Иначе
		ДанныеДляПечати.Вставить("ПереоформлениеДата", "");
	КонецЕсли;
	
	Если ДанныеДляПечати.КредитныйДоговор Тогда
		
		//***Вершинина 08.10.2013 н
		//ДанныеДляПечати.Вставить("СтавкаЛИБОР", ДанныеДляПечати.СтавкаЛИБОР.Метаданные().ЗначенияПеречисления.Получить(Перечисления.РЭЙ_СтавкаЛИБОР.Индекс(ДанныеДляПечати.СтавкаЛИБОР)).Имя +ДанныеДляПечати.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код);
		Если ДанныеДляПечати.СтавкаЛИБОР = Перечисления.РЭЙ_СтавкаЛИБОР.ПустаяСсылка() Тогда
			ДанныеДляПечати.Вставить("СтавкаЛИБОР", Перечисления.РЭЙ_СтавкаЛИБОР.ПустаяСсылка())
		Иначе
			ДанныеДляПечати.Вставить("СтавкаЛИБОР", ДанныеДляПечати.СтавкаЛИБОР.Метаданные().ЗначенияПеречисления.Получить(Перечисления.РЭЙ_СтавкаЛИБОР.Индекс(ДанныеДляПечати.СтавкаЛИБОР)).Имя +ДанныеДляПечати.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов.Код);
		КонецЕсли;
		//***Вершинина 08.10.2013 к

		Если ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ФиксированнаяСтавка Тогда
			ДанныеДляПечати.Удалить("СтавкаЛИБОР");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		ИначеЕсли ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ЛИБОР Тогда
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
		ИначеЕсли ДанныеДляПечати.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ДругиеСтавки Тогда
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("СтавкаЛИБОР");
		Иначе
			ДанныеДляПечати.Удалить("ФиксированнаяСтавкаГодовыхПроцентов");
			ДанныеДляПечати.Удалить("СтавкаЛИБОР");
			ДанныеДляПечати.Удалить("ДругиеМетодыОпределенияПроцентнойСтавки");
			ДанныеДляПечати.Удалить("РазмерПроцентнойНадбавки");
		КонецЕсли;
		
	КонецЕсли;
	
	//********************************************************************
	ДанныеДляПечати.Вставить("ПечБанк", "");
	Если ЗначениеЗаполнено(ДанныеДляПечати.Банк) Тогда
		ДанныеДляПечати.Вставить("ПечБанк", ?(ПустаяСтрока(ДанныеДляПечати.Банк.Наименование), ДанныеДляПечати.Банк.НаименованиеПолное, ДанныеДляПечати.Банк.Наименование));
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ДатаЧисло", "");
	ДанныеДляПечати.Вставить("МесяцСтрока", "");
	ДанныеДляПечати.Вставить("Год2ПослЦифры", "");
	Если Не НеПечататьНомерИДатуПС Тогда
		Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаПаспортаСделки) Тогда 
			ДанныеДляПечати.Вставить("ДатаЧисло", Формат(ДанныеДляПечати.ДатаПаспортаСделки, "ДФ=dd"));
					стрДата = Формат(ДанныеДляПечати.ДатаПаспортаСделки,"ДЛФ=DD") ;          // Получим - "5 Августа 2005 г."  
					чПервыйПробел=Найти(стрДата," ");                       // Получим - 2  
					стрДатаБезЧисла=Сред(стрДата,чПервыйПробел+1);       // Получим - "Августа 2005 г."  
					чВторойПробел=Найти(стрДатаБезЧисла," ");              // Получим - 8  
					стрМесяц=НРег(СокрЛП(Лев(стрДатаБезЧисла,чВторойПробел))); // Получим - "Августа"
			ДанныеДляПечати.Вставить("МесяцСтрока", стрМесяц);
			ДанныеДляПечати.Вставить("Год2ПослЦифры", Формат(ДанныеДляПечати.ДатаПаспортаСделки, "ДФ=yy"));
		КонецЕсли;	
	КонецЕсли;	
	
	//вывод номера паспорта сделки
	Для счетчик = 1 По 22 Цикл
		Если (счетчик = 9) или (счетчик = 14) или (счетчик = 19) или (счетчик = 21) Тогда
			ДанныеДляПечати.Вставить("НПС_"+счетчик, "/");
		Иначе
			Если Не НеПечататьНомерИДатуПС Тогда
				ДанныеДляПечати.Вставить("НПС_"+счетчик, Сред(ДанныеДляПечати.НомерПаспортаСделки, счетчик ,1));
			Иначе
				ДанныеДляПечати.Вставить("НПС_"+счетчик, "");
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла; 
	
	//вывод данных об организации
	ДанныеДляПечати.Вставить("ОрганизацияНаименование", ?(ПустаяСтрока(ДанныеДляПечати.Организация.НаименованиеПолное),?(ПустаяСтрока(ДанныеДляПечати.Организация.НаименованиеПолное),ДанныеДляПечати.Организация.Наименование,ДанныеДляПечати.Организация.НаименованиеПолное),ДанныеДляПечати.Организация.НаименованиеПолное));

	//вывод ИНН
	ПечИНН = Лев(СокрЛП(Организация.ИНН)+"            ",12);
	Для счетчик = 1 По 12 Цикл
		ДанныеДляПечати.Вставить("ИНН_"+счетчик, Сред(ПечИНН, счетчик ,1));
	КонецЦикла;
	
	//вывод КПП
	ПечКПП = СокрЛП(ДанныеДляПечати.КПП);
	Если ПечКПП = "" Тогда
		ПечКПП = Лев(СокрЛП(Организация.КПП)+"            ",9);
	КонецЕсли;
	Для счетчик = 1 По 9 Цикл
		ДанныеДляПечати.Вставить("КПП_"+счетчик, Сред(ПечКПП, счетчик ,1));
	КонецЦикла;
	
	//вывод ОГРН
	ПечОГРН = ДанныеДляПечати.Организация.ОГРН;
	Для счетчик = 1 По 15 Цикл
		ДанныеДляПечати.Вставить("ОГРН_"+счетчик, Сред(ПечОГРН, счетчик ,1));
	КонецЦикла;
	
	ПечДатаРегистрации = Формат(ДанныеДляПечати.Организация.РЭЙ_ДатаВнесенияВГосРеестр, "ДФ=dd.MM.yyyy");
	Если ПустаяСтрока(ПечДатаРегистрации) Тогда
		ПечДатаРегистрации = "  .  .    ";
	КонецЕсли;
	Для счетчик = 1 По 10 Цикл
		ДанныеДляПечати.Вставить("ДатаРегистрации_"+счетчик, Сред(ПечДатаРегистрации, счетчик ,1));
	КонецЦикла;
	
	Если Дата >= Дата(2012,10,01) Тогда
		ДанныеДляПечати.Вставить("Регион", ?(СокрЛП(Организация.РЭЙ_Регион) = "нет", "", СокрЛП(Организация.РЭЙ_Регион)));
		ДанныеДляПечати.Вставить("Район", ?(СокрЛП(Организация.РЭЙ_Район) = "нет", "", СокрЛП(Организация.РЭЙ_Район)));
		ДанныеДляПечати.Вставить("Город", ?(СокрЛП(Организация.РЭЙ_Город) = "нет", "", СокрЛП(Организация.РЭЙ_Город)));
		ДанныеДляПечати.Вставить("НаселенныйПункт", ?(СокрЛП(Организация.РЭЙ_НаселенныйПункт) = "нет", "", СокрЛП(Организация.РЭЙ_НаселенныйПункт)));
		ДанныеДляПечати.Вставить("Улица", ?(СокрЛП(Организация.РЭЙ_Улица) = "нет", "", СокрЛП(Организация.РЭЙ_Улица)));
	Иначе
		ДанныеДляПечати.Вставить("Регион", Организация.РЭЙ_Регион);
		ДанныеДляПечати.Вставить("Район", Организация.РЭЙ_Район);
		ДанныеДляПечати.Вставить("Город", Организация.РЭЙ_Город);
		ДанныеДляПечати.Вставить("НаселенныйПункт", Организация.РЭЙ_НаселенныйПункт);
		ДанныеДляПечати.Вставить("Улица", Организация.РЭЙ_Улица);
	КонецЕсли;
	Если ПечататьОрганизациюПрописными Тогда
		ДанныеДляПечати.Вставить("Дом", ВРег(Организация.РЭЙ_Дом));
		ДанныеДляПечати.Вставить("Корпус", ВРег(Организация.РЭЙ_Корпус));
		ДанныеДляПечати.Вставить("Квартира", ВРег(Организация.РЭЙ_Квартира));
	Иначе
		ДанныеДляПечати.Вставить("Дом", Организация.РЭЙ_Дом);
		ДанныеДляПечати.Вставить("Корпус", Организация.РЭЙ_Корпус);
		ДанныеДляПечати.Вставить("Квартира", Организация.РЭЙ_Квартира);
	КонецЕсли;
	
	//2. Реквизиты иностранного контрагента
	//*************************************************************************
	
	ТаблицаКонтрагентов = Новый ТаблицаЗначений;
	ТаблицаКонтрагентов.Колонки.Добавить("КонтрагентНаименование");
	ТаблицаКонтрагентов.Колонки.Добавить("КонтрагентСтранаНаименование");
	ТаблицаКонтрагентов.Колонки.Добавить("КонтрагентСтранаКод");
	
	Если ДанныеДляПечати.КонтрактВЭД.Многосторонний И Дата >= Дата(2012,10,01) Тогда	
		
		Для Каждого СтрокаПоКонтрагенту ИЗ ДанныеДляПечати.КонтрактВЭД.СтороныПоКонтракту Цикл
			НовСтрока = ТаблицаКонтрагентов.Добавить(); 
			ТекКонтрагент = СтрокаПоКонтрагенту.Контрагент;
			
			Если (ТекКонтрагент.Метаданные().Реквизиты.Найти("РЭЙ_НаименованиеАнгл")<>Неопределено) и (НЕ ПустаяСтрока(ТекКонтрагент.РЭЙ_НаименованиеАнгл)) Тогда
				НовСтрока["КонтрагентНаименование"]  = ТекКонтрагент.РЭЙ_НаименованиеАнгл;
			ИначеЕсли НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.НаименованиеПолное) Тогда 
				НовСтрока["КонтрагентНаименование"] =  ТекКонтрагент.НаименованиеПолное;
			Иначе
				НовСтрока["КонтрагентНаименование"] = ТекКонтрагент.Наименование;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекКонтрагент) Тогда
				Если  ТекКонтрагент.РЭЙ_НеЯвляетсяРезидентом Тогда	
					тСтрана = ТекКонтрагент.РЭЙ_Страна;
					Если ЗначениеЗаполнено(тСтрана) Тогда
						НовСтрока["КонтрагентСтранаНаименование"] = СокрЛП(тСтрана.Наименование);
						НовСтрока["КонтрагентСтранаКод"] =  тСтрана.Код;
					КонецЕсли;
				Иначе
					//Россия
					НовСтрока["КонтрагентСтранаНаименование"] = Справочники.СтраныМира.Россия.Наименование;
					НовСтрока["КонтрагентСтранаКод"] =  Справочники.СтраныМира.Россия.Код;		
				КонецЕсли;
			КонецЕсли; 			
		КонецЦикла;
	Иначе		
		НовСтрока = ТаблицаКонтрагентов.Добавить(); 
		
		Если (ДанныеДляПечати.Контрагент.Метаданные().Реквизиты.Найти("РЭЙ_НаименованиеАнгл")<>Неопределено) и (НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.РЭЙ_НаименованиеАнгл)) Тогда
			НовСтрока["КонтрагентНаименование"]  = ДанныеДляПечати.Контрагент.РЭЙ_НаименованиеАнгл;
		ИначеЕсли НЕ ПустаяСтрока(ДанныеДляПечати.Контрагент.НаименованиеПолное) Тогда 
			НовСтрока["КонтрагентНаименование"] =  ДанныеДляПечати.Контрагент.НаименованиеПолное;
		Иначе
			НовСтрока["КонтрагентНаименование"] = ДанныеДляПечати.Контрагент.Наименование;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеДляПечати.Контрагент) Тогда
			
			Если  ДанныеДляПечати.Контрагент.РЭЙ_НеЯвляетсяРезидентом Тогда	
				тСтрана = ДанныеДляПечати.Контрагент.РЭЙ_Страна;
				Если ЗначениеЗаполнено(тСтрана) Тогда
					НовСтрока["КонтрагентСтранаНаименование"] = СокрЛП(тСтрана.Наименование);
					НовСтрока["КонтрагентСтранаКод"] =  тСтрана.Код;
				КонецЕсли;
			Иначе
				//Россия
				НовСтрока["КонтрагентСтранаНаименование"] = Справочники.СтраныМира.Россия.Наименование;
				НовСтрока["КонтрагентСтранаКод"] =  Справочники.СтраныМира.Россия.Код;		
			КонецЕсли;
			//КонецЕсли;
		КонецЕсли; 
		
		ДанныеДляПечати.Вставить("КонтрагентНаименование", НовСтрока["КонтрагентНаименование"]);
		ДанныеДляПечати.Вставить("КонтрагентСтранаНаименование", НовСтрока["КонтрагентСтранаНаименование"]);
		ДанныеДляПечати.Вставить("КонтрагентСтранаКод", НовСтрока["КонтрагентСтранаКод"]);		
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ТаблицаКонтрагентов", ТаблицаКонтрагентов);

	Если ПустаяСтрока(ДанныеДляПечати.КонтрактНомер) Тогда 
		Если ВидПечФормы = "ПС2012" Тогда
			ДанныеДляПечати.Вставить("КонтрактНомер", "БН");
		Иначе
			ДанныеДляПечати.Вставить("КонтрактНомер", "б/н");
		КонецЕсли;
	КонецЕсли;
	
	Если ВидПечФормы = "ПС2012" Тогда
		ДанныеДляПечати.Вставить("КонтрактДатаПодписания", Формат(Макс(ДанныеДляПечати.КонтрактДатаПодписания, ДанныеДляПечати.КонтрактДатаНачала), "ДФ=dd.MM.yyyy"));
	Иначе
		ДанныеДляПечати.Вставить("КонтрактДатаПодписания", Формат(ДанныеДляПечати.КонтрактДатаПодписания, "ДФ=dd.MM.yyyy"));
	КонецЕсли;

	ВалютаДоговора = ДанныеДляПечати.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	ДанныеДляПечати.Вставить("КонтрактВалютаНаименование", ?(ПустаяСтрока(ВалютаДоговора.НаименованиеПолное), ВалютаДоговора.Наименование, ВалютаДоговора.НаименованиеПолное));
	ДанныеДляПечати.Вставить("КонтрактВалютаНаименованиеСокр", ВалютаДоговора.Наименование);

	ДанныеДляПечати.Вставить("КонтрактВалютаКод", ВалютаДоговора.Код);
	ДанныеДляПечати.Вставить("КонтрактДатаОкончания", Формат(ДанныеДляПечати.КонтрактДатаОкончания, "ДФ=dd.MM.yyyy"));
	ДанныеДляПечати.Вставить("ВалютнаяОговорка", ?(ДанныеДляПечати.ВалютнаяОговорка, "Х",""));

	Если ДанныеДляПечати.КонтрактБезСуммы Тогда
		Если ВидПечФормы = "ПС2012" Тогда
			ДанныеДляПечати.Вставить("КонтрактСумма", "БС");
		Иначе
			ДанныеДляПечати.Вставить("КонтрактСумма", "б/с");
		КонецЕсли;
	Иначе
		ДанныеДляПечати.Вставить("КонтрактСумма", Формат(ДанныеДляПечати.КонтрактСумма, "ЧДЦ=2; ЧН="));
	КонецЕсли;
	ДанныеДляПечати.Вставить("СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте", Формат(ДанныеДляПечати.СуммаПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте, "ЧДЦ=2; ЧН=' '"));
	ДанныеДляПечати.Вставить("СуммаВалВыручкиПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте", Формат(ДанныеДляПечати.СуммаВалВыручкиПодлежащаяЗачислениюНаСчетаВБанкеНерезиденте, "ЧДЦ=2; ЧН=' '"));
	
	Если ПустаяСтрока(СтрЗаменить(СтрЗаменить(ДанныеДляПечати.НомерПСДо18062004, " ",""), "/", "")) Тогда
		ДанныеДляПечати.Вставить("НомерПСДо18062004", "");
	КонецЕсли;
	
	Для счетчик = 1 По 22 Цикл
		Если (счетчик = 9) или (счетчик = 14) или (счетчик = 19) или (счетчик = 21) Тогда
		Иначе
			ДанныеДляПечати.Вставить("НПСДБ_"+счетчик, Сред(ДанныеДляПечати.НомерПСДругойБанк, счетчик ,1));
		КонецЕсли; 
	КонецЦикла;
	
	Для счетчик = 1 По 2 Цикл
		ДанныеДляПечати.Вставить("ПереоформлениеНомер_"+счетчик, Сред(ДанныеДляПечати.ПереоформлениеНомер, счетчик ,1));
	КонецЦикла;
		
	ПечПереоформлениеДата = Формат(ДанныеДляПечати.ПереоформлениеДата, "ДФ=dd.MM.yyyy; ДП='  .  .    '");
	Для счетчик = 1 По 10 Цикл
		Если Найти(".3.6.", "."+счетчик+".")>0 Тогда 
			Продолжить;
		КонецЕсли;
		ДанныеДляПечати.Вставить("ПереоформлениеДата_"+счетчик, Сред(ПечПереоформлениеДата, счетчик ,1)); 
	КонецЦикла;
		
	Если ЗначениеЗаполнено(ДанныеДляПечати.ДатаЗакрытияПС) Тогда
		ДанныеДляПечати.Вставить("ДатаЗакрытияПС", Формат(ДанныеДляПечати.ДатаЗакрытияПС, "ДФ=dd.MM.yyyy"));	
		ДанныеДляПечати.Вставить("ОснованиеЗакрытияПС", ДанныеДляПечати.ОснованиеЗакрытияПС);	
	Иначе
		ДанныеДляПечати.Вставить("ДатаЗакрытияПС", "");
		ДанныеДляПечати.Вставить("ОснованиеЗакрытияПС", "");
	КонецЕсли;

	ДанныеДляПечати.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ДанныеДляПечати.Руководитель, ДанныеДляПечати.Дата));
	ДанныеДляПечати.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ДанныеДляПечати.ГлавныйБухгалтер, ДанныеДляПечати.Дата));
	
	Если ЗначениеЗаполнено(ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты) Тогда
		
		Если ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.nnnn Тогда       
			КодОтсрочки = "0000"+ДанныеДляПечати.КоличествоДней;
		Иначе
			КодОтсрочки = ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты.Метаданные().ЗначенияПеречисления.Получить(Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.Индекс(ДанныеДляПечати.ОтсрочкаПлатежаПредоплаты)).Имя;
		КонецЕсли;
		
		КодОтсрочки = Прав(КодОтсрочки, 4);
		
	Иначе
		КодОтсрочки = "    ";
	КонецЕсли;
	
	Для счетчик = 1 По 4 Цикл
		ДанныеДляПечати.Вставить("Отсрочка_"+счетчик, Сред(КодОтсрочки, счетчик ,1));
	КонецЦикла; 
	
	Если Не НеПечататьДатуОформленияЛиста2 Тогда
		ПечДатаОформленияЛиста2 = Формат(ДанныеДляПечати.ДатаОформленияЛиста2, "ДФ=dd.MM.yyyy");
		Если ПустаяСтрока(ПечДатаОформленияЛиста2) Тогда
			ПечДатаОформленияЛиста2 = "  .  .    ";
		КонецЕсли;
		Для счетчик = 1 По 10 Цикл
			Если Найти(".3.6.", "."+счетчик+".")>0 Тогда 
				Продолжить;
			КонецЕсли;
			ДанныеДляПечати.Вставить("ДатаОформленияЛиста2_"+счетчик, Сред(ПечДатаОформленияЛиста2, счетчик ,1));
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеДляПечати.СуммаОсновногоДолга <> 0 Тогда
		ДанныеДляПечати.Вставить("СуммаОсновногоДолгаВалютаКод", ДанныеДляПечати.КонтрактВалютаКод);
	КонецЕсли;
	
	//разрешения валютного контроля
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект,
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Номер КАК РазрешениеНомер,
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Дата КАК РазрешениеДата,
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Сумма КАК РазрешениеСумма,
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.СрокОкончания КАК РазрешениеСрокОкончания
	|ИЗ
	|	РегистрСведений.РЭЙ_ИнформацияОРазрешенияхВалКонтроля КАК РЭЙ_ИнформацияОРазрешенияхВалКонтроля
	|ГДЕ
	|	РЭЙ_ИнформацияОРазрешенияхВалКонтроля.Объект В(&СписокОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РазрешениеДата";
	
	ОтборСписок = Новый СписокЗначений;
	Если ЗначениеЗаполнено(КонтрактВЭД) Тогда
		ОтборСписок.Добавить(КонтрактВЭД);

		ЗапросВалютныхСчетовКонтракта = Новый Запрос;
		ЗапросВалютныхСчетовКонтракта.Текст = "ВЫБРАТЬ
		|	РЭЙ_КонтрактыВЭДБанковскиеСчета.БанковскийСчет.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ СчетаОбычные
		|ИЗ
		|	Справочник.РЭЙ_КонтрактыВЭД.БанковскиеСчета КАК РЭЙ_КонтрактыВЭДБанковскиеСчета
		|ГДЕ
		|	РЭЙ_КонтрактыВЭДБанковскиеСчета.БанковскийСчет.Банк.РЭЙ_НеЯвляетсяРезидентом
		|	И РЭЙ_КонтрактыВЭДБанковскиеСчета.Ссылка = &СсылкаНаКонтракт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РЭЙ_БанковскиеСчетаВалютные.Ссылка,
		|	РЭЙ_БанковскиеСчетаВалютные.БанковскийСчет
		|ПОМЕСТИТЬ СчетаВалютные
		|ИЗ
		|	Справочник.РЭЙ_БанковскиеСчетаВалютные КАК РЭЙ_БанковскиеСчетаВалютные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаВалютные.Ссылка
		|ИЗ
		|	СчетаОбычные КАК СчетаОбычные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаВалютные КАК СчетаВалютные
		|		ПО СчетаОбычные.Ссылка = СчетаВалютные.БанковскийСчет";
		
		ЗапросВалютныхСчетовКонтракта.УстановитьПараметр("СсылкаНаКонтракт",КонтрактВЭД);					  
		ВыборкаЗапросаВалютныхСчетов= ЗапросВалютныхСчетовКонтракта.Выполнить().Выбрать();
		Пока ВыборкаЗапросаВалютныхСчетов.Следующий() Цикл
			ОтборСписок.Добавить(ВыборкаЗапросаВалютныхСчетов.Ссылка);		
		КонецЦикла;
		
	КонецЕсли;
	Если ЗначениеЗаполнено(БанковскийСчет) Тогда
		ОтборСписок.Добавить(БанковскийСчет);
	КонецЕсли;
	Если ОтборСписок.Количество()>0 Тогда
		Запрос.УстановитьПараметр("СписокОбъектов", ОтборСписок);
	Иначе
		Запрос.УстановитьПараметр("СписокОбъектов", Неопределено);
	КонецЕсли;
	
	ТЗРазрешенияВалютногоКонтроля = Запрос.Выполнить().Выгрузить();
	ДанныеДляПечати.Вставить("ТЗРазрешенияВалютногоКонтроля", ТЗРазрешенияВалютногоКонтроля);

	Если ВидПечФормы = "ПС2012" Тогда
		//В графе 2 указываются символы 10-18 номера ПС.
		//В графе 3 в формате ДД.ММ.ГГГГ указывается дата принятия ПС на обслуживание новым уполномоченным банком при переводе ПС на обслуживание в другой уполномоченный банк. В иных случаях графа 3 не заполняется.
		//В графе 4 указывается дата закрытия ПС в формате ДД.ММ.ГГГГ, указанная в документе "Заявление в уполномоченный банк паспорта сделки", или же вручную устанавливается пользователем.
		//В графе 5 указывается основание закрытия ПС, указанный в документе "Заявление в уполномоченный банк паспорта сделки" - перечисление РЭЙ_ОснованияЗакрытияПС. До 01.10.2012 указываются подпункты 3.18.Х пункта 3.18 Инструкции №117-И, с 01.10.2012 указываются подпункты 7.1.Х пункта 7.1 Инструкции №138-И. Значения перечислений согласно подпунктая 7.1.Х пункта 7.1 Инструкции №138-И я добавил 23.09.2012.
		
		ПС2012_Таблица4 = Новый ТаблицаЗначений;
		ПС2012_Таблица4.Колонки.Добавить("НомерСтроки");
		ПС2012_Таблица4.Колонки.Добавить("РегНомерБанкаПС");
		ПС2012_Таблица4.Колонки.Добавить("ДатаПринятияПСПриПереводе");
		ПС2012_Таблица4.Колонки.Добавить("ДатаЗакрытияПС");
		ПС2012_Таблица4.Колонки.Добавить("ОснованиеЗакрытияПС");
		
		Для Каждого СтрокаТЧ Из ПереводВДругойБанк Цикл
			Если СтрокаТЧ.НомерСтроки < ПереводВДругойБанк.Количество() Тогда
				текДокументЗакрытия = ПереводВДругойБанк[СтрокаТЧ.НомерСтроки].Заявление;
			Иначе
				текДокументЗакрытия = ДокументЗакрытияПС;
			КонецЕсли;
			Если ЗначениеЗаполнено(текДокументЗакрытия) Или (ПереводВДругойБанк.Количество() >= 2) Тогда
				НоваяСтрока = ПС2012_Таблица4.Добавить();
				НоваяСтрока.НомерСтроки = СтрокаТЧ.НомерСтроки;
				НоваяСтрока.РегНомерБанкаПС = СтрокаТЧ.Банк.РЭЙ_НомерПаспортаСделки_10_13 + "/" + СтрокаТЧ.Банк.РЭЙ_НомерПаспортаСделки_15_18;
				Если СтрокаТЧ.НомерСтроки = 1 Тогда
					НоваяСтрока.ДатаПринятияПСПриПереводе = "Х";
				Иначе
					НоваяСтрока.ДатаПринятияПСПриПереводе = СтрокаТЧ.ДатаПринятияБанком;
				КонецЕсли;
				Если ЗначениеЗаполнено(текДокументЗакрытия) Тогда
					НоваяСтрока.ДатаЗакрытияПС = Формат(текДокументЗакрытия.ДатаЗакрытияПС, "ДФ=dd.MM.yyyy");
					НоваяСтрока.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.ПолучитьНомерПункта(текДокументЗакрытия.ОснованиеЗакрытияПС);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если ПС2012_Таблица4.Количество() = 0 Тогда
			ПС2012_Таблица4.Добавить();
		КонецЕсли;		
		ДанныеДляПечати.Вставить("ПС2012_Таблица4", ПС2012_Таблица4);
		
		ПС2012_Таблица5 = ПереоформлениеПС.Выгрузить();
		Для каждого СтрПС2012_Таблица5 Из ПС2012_Таблица5 Цикл
			Если ПустаяСтрока(СтрПС2012_Таблица5.ОснованиеНомер)  Тогда
				СтрПС2012_Таблица5.ОснованиеНомер = "БН";
			КонецЕсли; 
		КонецЦикла; 
		ДанныеДляПечати.Вставить("ПС2012_Таблица5", ПС2012_Таблица5);
		
	КонецЕсли; 
	
	Возврат ДанныеДляПечати;
	
КонецФункции
 
Функция ПечатьПаспортаСделки(ДанныеДляПечати) Экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПаспортСделкиФорма1";
	Макет = ЭтотОбъект.ПолучитьМакет("ПаспортСделкиФорма1");
	
	ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка1");
	ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьЛист1_Шапка);
	
	Для Каждого СтрокаПоКонтрагенту ИЗ ДанныеДляПечати.ТаблицаКонтрагентов Цикл	
		ОбластьЛист1_Строка11 = Макет.ПолучитьОбласть("Лист1_Строка11");
		ОбластьЛист1_Строка11.Параметры.Заполнить(СтрокаПоКонтрагенту);
		ТабДокумент.Вывести(ОбластьЛист1_Строка11);
	КонецЦикла;
	
	ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка12");
	ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьЛист1_Шапка);
	
	ПС2012_Таблица4 = ДанныеДляПечати.ПС2012_Таблица4;
	Если ПС2012_Таблица4.Количество() = 0 Тогда
		ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_Строка1");
		ТабДокумент.Вывести(ОбластьЛист1_Строка);
	Иначе
		Для каждого СтрПС2012_Таблица4 Из ПС2012_Таблица4 Цикл
			ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_Строка1");
			ОбластьЛист1_Строка.Параметры.Заполнить(СтрПС2012_Таблица4);
			ТабДокумент.Вывести(ОбластьЛист1_Строка);
		КонецЦикла; 
	КонецЕсли;
	
	ОбластьЛист1_Шапка = Макет.ПолучитьОбласть("Лист1_Шапка2");
	ОбластьЛист1_Шапка.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьЛист1_Шапка);
	
	ПС2012_Таблица5 = ДанныеДляПечати.ПС2012_Таблица5;
	Если ПС2012_Таблица5.Количество() = 0 Тогда
		ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_Строка2");
		ТабДокумент.Вывести(ОбластьЛист1_Строка);
	Иначе
		Для каждого СтрПС2012_Таблица5 Из ПС2012_Таблица5 Цикл
			ОбластьЛист1_Строка = Макет.ПолучитьОбласть("Лист1_Строка2");
			ОбластьЛист1_Строка.Параметры.Заполнить(СтрПС2012_Таблица5);
			ТабДокумент.Вывести(ОбластьЛист1_Строка);
		КонецЦикла; 
	КонецЕсли;
	
	ОбластьЛист1_Подвал = Макет.ПолучитьОбласть("Лист1_Подвал");
	ОбластьЛист1_Подвал.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьЛист1_Подвал);
	
	Если Банк.РЭЙ_ВидПредоставленияДокументовПоСделке = 1 Тогда
		РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(КонтрактВЭД, "Распечатана");
	КонецЕсли;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьПаспортаСделки()

Функция ПечатьПаспортаСделкиКредитныйДоговор(ДанныеДляПечати) Экспорт 
	
	ТабДокумент = Новый ТабличныйДокумент;

	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПаспортСделкиФорма2_2012";
	Макет = ЭтотОбъект.ПолучитьМакет("ПаспортСделкиФорма2");
	
	Область = Макет.ПолучитьОбласть("Лист1_Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(Область);
	
	Для Каждого СтрокаПоКонтрагенту ИЗ ДанныеДляПечати.ТаблицаКонтрагентов Цикл	
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ2");
		Область.Параметры.Заполнить(СтрокаПоКонтрагенту);
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	//Раздел 3
	Область = Макет.ПолучитьОбласть("Лист1_ШапкаТ3");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	Область.Параметры.СрокиПогашенияКредитовВЭД = Сред(Строка(ДанныеДляПечати.СрокиПогашенияКредитовВЭДЗначение), 1, 1);
	ТабДокумент.Вывести(Область);
	
	//Раздел 3.2
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РЭЙ_ГрафикФинансирования.Период КАК Дата,
	|	РЭЙ_ГрафикФинансирования.Сумма,
	|	РЭЙ_ГрафикФинансирования.ОсобоеУсловие,
	|	РЭЙ_ГрафикФинансирования.СрокТранша
	|ИЗ
	|	РегистрСведений.РЭЙ_ГрафикФинансирования КАК РЭЙ_ГрафикФинансирования
	|ГДЕ
	|	РЭЙ_ГрафикФинансирования.Договор = &Договор
	|
	|УПОРЯДОЧИТЬ ПО
	|	РЭЙ_ГрафикФинансирования.Период";
	Запрос.УстановитьПараметр("Договор", КонтрактВЭД);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	НомерСтроки = 0;
	ТаблицаПустая = Истина;
		
	Пока Выборка.Следующий() Цикл
		НомерСтроки = НомерСтроки+1;
		Если ТипЗнч(Выборка.Дата)=Тип("Дата") и Выборка.Дата<?(ЗначениеЗаполнено(ДатаПредоставленияДокументовПоСделке),ДатаПредоставленияДокументовПоСделке,ТекущаяДата()) Тогда
			Сообщить("Согласно Инструкции ЦБ РФ №117-И от 15.06.2004 платеж с номером "+НомерСтроки+" в сумме "+Выборка.Сумма +" "+ДанныеДляПечати.КонтрактВалютаНаименованиеСокр+" не выведен в печатную форму, т.к. его дата ("+Формат(Выборка.Дата,"ДФ=dd.MM.yyyy")+") более ранняя, чем "+?(ЗначениеЗаполнено(ДатаПредоставленияДокументовПоСделке),"дата представления ПС в банк.","текущая дата."));
			Продолжить;
		КонецЕсли; 
		
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ3_2");
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.КонтрактВалютаКод = ДанныеДляПечати.КонтрактВалютаКод;
		Область.Параметры.КонтрактВалютаНаименование = ДанныеДляПечати.КонтрактВалютаНаименование;
		Область.Параметры.КодСрокаТранша = Сред(Выборка.СрокТранша, 1, 1);
		ТабДокумент.Вывести(Область);
		
		ТаблицаПустая = Ложь;
	КонецЦикла;

	Если ТаблицаПустая Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ3_2");
		ТабДокумент.Вывести(Область);
	КонецЕсли; 
	
	//Раздел 4
	Область = Макет.ПолучитьОбласть("Лист1_ШапкаТ4");
	ТабДокумент.Вывести(Область);
	
	ПС2012_Таблица4 = ДанныеДляПечати.ПС2012_Таблица4;
	Если ПС2012_Таблица4.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
		ТабДокумент.Вывести(Область);
	Иначе
		НомерСтроки = 0;
		Для Каждого СтрПС2012_Таблица4 Из ПС2012_Таблица4 Цикл
			НомерСтроки = НомерСтроки + 1;
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ4");
			Область.Параметры.Заполнить(СтрПС2012_Таблица4);
			Область.Параметры.НомерСтроки = НомерСтроки;
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	//Раздел 5
	Область = Макет.ПолучитьОбласть("Лист1_ШапкаТ5");
	ТабДокумент.Вывести(Область);
	
	ПС2012_Таблица5 = ДанныеДляПечати.ПС2012_Таблица5;
	Если ПС2012_Таблица5.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрПС2012_Таблица5 Из ПС2012_Таблица5 Цикл
			Область = Макет.ПолучитьОбласть("Лист1_СтрокаТ5");
			Область.Параметры.Заполнить(СтрПС2012_Таблица5);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	//Подвал
	Область = Макет.ПолучитьОбласть("Лист1_Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(Область);
	
	//=====================
	//ЛИСТ 2
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//Раздел 8
	Область = Макет.ПолучитьОбласть("Лист2_ШапкаТ8");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(Область);
	
	//Раздел 9.2
	Область = Макет.ПолучитьОбласть("Лист2_ШапкаТ9");
	Если КонтрактВЭД.ОснованиеЗаполненияГрафикаПогашения = 0 Тогда
		Область.Параметры.ОснованиеЗаполненияГрафикаПогашения0 = "*";
	ИначеЕсли КонтрактВЭД.ОснованиеЗаполненияГрафикаПогашения = 1 Тогда
		Область.Параметры.ОснованиеЗаполненияГрафикаПогашения1 = "*";
	КонецЕсли;
	ТабДокумент.Вывести(Область);
	
	//Раздел 9
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Проценты.Дата КАК ПроцентыДата,
	|	Проценты.Сумма КАК ПроцентыСумма,
	|	Проценты.ОсобоеУсловие КАК ПроцентыОсобоеУсловие,
	|	Тело.Дата КАК ТелоДата,
	|	Тело.Сумма КАК ТелоСумма,
	|	Тело.ОсобоеУсловие КАК ТелоОсобоеУсловие,
	|	ВЫБОР
	|		КОГДА (НЕ Тело.ОсобоеУсловие ЕСТЬ NULL )
	|			ТОГДА Тело.ОсобоеУсловие
	|		ИНАЧЕ Проценты.ОсобоеУсловие
	|	КОНЕЦ КАК ОсобоеУсловие,
	|	ВЫБОР
	|		КОГДА (НЕ Тело.Дата ЕСТЬ NULL )
	|			ТОГДА Тело.Дата
	|		ИНАЧЕ Проценты.Дата
	|	КОНЕЦ КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		РЭЙ_ГрафикПогашения.Период КАК Дата,
	|		РЭЙ_ГрафикПогашения.Сумма КАК Сумма,
	|		РЭЙ_ГрафикПогашения.ОсобоеУсловие КАК ОсобоеУсловие
	|	ИЗ
	|		РегистрСведений.РЭЙ_ГрафикПогашения КАК РЭЙ_ГрафикПогашения
	|	ГДЕ
	|		РЭЙ_ГрафикПогашения.Договор = &Договор
	|		И РЭЙ_ГрафикПогашения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.РЭЙ_КредитыЗаймы.Тело)) КАК Тело
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РЭЙ_ГрафикПогашения.Период КАК Дата,
	|			РЭЙ_ГрафикПогашения.Сумма КАК Сумма,
	|			РЭЙ_ГрафикПогашения.ОсобоеУсловие КАК ОсобоеУсловие
	|		ИЗ
	|			РегистрСведений.РЭЙ_ГрафикПогашения КАК РЭЙ_ГрафикПогашения
	|		ГДЕ
	|			РЭЙ_ГрафикПогашения.Договор = &Договор
	|			И РЭЙ_ГрафикПогашения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.РЭЙ_КредитыЗаймы.Проценты)) КАК Проценты
	|		ПО Тело.Дата = Проценты.Дата
	|			И Тело.ОсобоеУсловие = Проценты.ОсобоеУсловие
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Запрос.УстановитьПараметр("Договор", КонтрактВЭД);
	Выборка = Запрос.Выполнить().Выбрать();
	ТаблицаПустая = Истина;
	НомерСтроки = 0;
	Пока Выборка.Следующий() Цикл
		НомерСтроки = НомерСтроки+1;
		Если ТипЗнч(Выборка.ТелоДата)=Тип("Дата") и Выборка.ТелоДата<?(ЗначениеЗаполнено(ДатаПредоставленияДокументовПоСделке),ДатаПредоставленияДокументовПоСделке,ТекущаяДата()) Тогда
			Сообщить("Согласно Инструкции ЦБ РФ №117-И от 15.06.2004 платеж с номером "+НомерСтроки+" и назначением ""Тело кредита"" в сумме "+Выборка.ТелоСумма +" "+ДанныеДляПечати.КонтрактВалютаНаименованиеСокр+" не выведен в печатную форму, т.к. его дата ("+Формат(Выборка.Период,"ДФ=dd.MM.yyyy")+") более ранняя, чем "+?(ЗначениеЗаполнено(ДатаПредоставленияДокументовПоСделке),"дата представления ПС в банк.","текущая дата."));
			Продолжить;
		КонецЕсли; 
		
		Если ТипЗнч(Выборка.ПроцентыДата)=Тип("Дата") и Выборка.ПроцентыДата<?(ЗначениеЗаполнено(ДатаПредоставленияДокументовПоСделке),ДатаПредоставленияДокументовПоСделке,ТекущаяДата()) Тогда
			Сообщить("Согласно Инструкции ЦБ РФ №117-И от 15.06.2004 платеж с номером "+НомерСтроки+" и назначением ""Проценты по кредиту"" в сумме "+Выборка.ПроцентыСумма +" "+ДанныеДляПечати.КонтрактВалютаНаименованиеСокр+" не выведен в печатную форму, т.к. его дата ("+Формат(Выборка.Период,"ДФ=dd.MM.yyyy")+") более ранняя, чем "+?(ЗначениеЗаполнено(ДатаПредоставленияДокументовПоСделке),"дата представления ПС в банк.","текущая дата."));
			Продолжить;
		КонецЕсли; 
		
		Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_2");
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.НомерСтроки = НомерСтроки;
		Область.Параметры.ТелоКонтрактВалютаКод = ДанныеДляПечати.КонтрактВалютаКод;
		ТабДокумент.Вывести(Область);
		
		ТаблицаПустая = Ложь;
	КонецЦикла;

	Если ТаблицаПустая Тогда
		Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_2");
		ТабДокумент.Вывести(Область);
	КонецЕсли; 

	//Раздел 9.3
	Область = Макет.ПолучитьОбласть("Лист2_ШапкаТ9_3");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(Область);
	
	//Раздел 9.5
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РЭЙ_КредитныйСиндикат.Договор,
	|	РЭЙ_КредитныйСиндикат.Контрагент,
	|	РЭЙ_КредитныйСиндикат.СтранаКонтрагента,
	|	РЭЙ_КредитныйСиндикат.Сумма,
	|	РЭЙ_КредитныйСиндикат.Доля,
	|	&КонтрактВалютаКод,
	|	РЭЙ_КредитныйСиндикат.СтранаКонтрагента.Код,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(РЭЙ_КредитныйСиндикат.Контрагент.РЭЙ_НаименованиеАнгл, 1, 250) <> """"
	|			ТОГДА РЭЙ_КредитныйСиндикат.Контрагент.РЭЙ_НаименованиеАнгл
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(РЭЙ_КредитныйСиндикат.Контрагент.НаименованиеПолное, 1, 250) <> """"
	|					ТОГДА РЭЙ_КредитныйСиндикат.Контрагент.НаименованиеПолное
	|				ИНАЧЕ РЭЙ_КредитныйСиндикат.Контрагент.Наименование
	|			КОНЕЦ
	|	КОНЕЦ КАК КонтрагентНаименование
	|ИЗ
	|	РегистрСведений.РЭЙ_КредитныйСиндикат КАК РЭЙ_КредитныйСиндикат
	|ГДЕ
	|	РЭЙ_КредитныйСиндикат.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Договор", КонтрактВЭД);
	Запрос.УстановитьПараметр("КонтрактВалютаКод", ДанныеДляПечати.КонтрактВалютаКод);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество()=0 Тогда
		Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_5");
		ТабДокумент.Вывести(Область);
	Иначе
		НомерСтроки = 0;
		Пока Выборка.Следующий() Цикл
			НомерСтроки = НомерСтроки+1;
			Область = Макет.ПолучитьОбласть("Лист2_СтрокаТ9_5");
			Область.Параметры.Заполнить(Выборка);
			Область.Параметры.НомерСтроки = НомерСтроки;
			ТабДокумент.Вывести(Область);
		КонецЦикла;
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Лист2_Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(Область);

	Если Банк.РЭЙ_ВидПредоставленияДокументовПоСделке = 1 Тогда
		РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(КонтрактВЭД, "Распечатана");
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПаспортСделкиВКонтрактеВЭД(ПризнакПроведения) Экспорт
	Если ПризнакПроведения Тогда
		текПаспортСделки = ПолучитьПаспортСделкиПоКонтрактуВЭД(КонтрактВЭД, Истина);
		Если текПаспортСделки <> КонтрактВЭД.ПаспортСделки Тогда
			КонтрактВЭДОбъект = КонтрактВЭД.ПолучитьОбъект();
			КонтрактВЭДОбъект.ПаспортСделки = текПаспортСделки;
			КонтрактВЭДОбъект.Записать();
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РЭЙ_КонтрактыВЭД.Ссылка
	|ИЗ
	|	Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
	|ГДЕ
	|	РЭЙ_КонтрактыВЭД.ПаспортСделки = &ПаспортСделки
	|	И (РЭЙ_КонтрактыВЭД.Ссылка <> &КонтрактВЭД
	|			ИЛИ &ПризнакПроведения = ЛОЖЬ)";
	
	Запрос.УстановитьПараметр("ПаспортСделки", Ссылка);
	Запрос.УстановитьПараметр("КонтрактВЭД", КонтрактВЭД);
	Запрос.УстановитьПараметр("ПризнакПроведения", ПризнакПроведения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КонтрактВЭДОбъект = Выборка.Ссылка.ПолучитьОбъект();
		КонтрактВЭДОбъект.ПаспортСделки = ПолучитьПаспортСделкиПоКонтрактуВЭД(Выборка.Ссылка, ПризнакПроведения);
		КонтрактВЭДОбъект.Записать();
	КонецЦикла;
КонецПроцедуры

Процедура СтатусЗадачаВЭДСоздана()
	СтатусЗадачи = РЭЙ_ЗадачиСервер.ПолучитьСтатусЗадачиЗадачи(КонтрактВЭД);
	
	Если СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСозданию 
		ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСдачеЗавтра
		ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСдачеПослеЗавтра
		ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСдачеСегодня
		ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПросрочена Тогда
		
		РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(КонтрактВЭД, "Создана");	
	КонецЕсли;
КонецПроцедуры
 
Процедура УстановитьСтатусЗадачРаспечатана(текВидПредоставленияДокументовПоСделке) Экспорт
	Если Банк.РЭЙ_ВидПредоставленияДокументовПоСделке = текВидПредоставленияДокументовПоСделке Тогда
		РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(КонтрактВЭД, "Распечатана");
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПаспортСделкиПоКонтрактуВЭД(текКонтрактВЭД, ВключатьТекущийДокумент)
	Если Не ЗначениеЗаполнено(текКонтрактВЭД) Тогда
		Возврат Документы.РЭЙ_ПаспортСделки.ПустаяСсылка();
	КонецЕсли;
	Если текКонтрактВЭД.НеЯвляетсяОбъектомВалютногоКонтроля Тогда
		Возврат Документы.РЭЙ_ПаспортСделки.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РЭЙ_ПаспортСделки.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки КАК РЭЙ_ПаспортСделки
	|ГДЕ
	|	РЭЙ_ПаспортСделки.Проведен
	|	И РЭЙ_ПаспортСделки.КонтрактВЭД = &КонтрактВЭД
	|	И (&ВключатьТекущийДокумент
	|			ИЛИ РЭЙ_ПаспортСделки.Ссылка <> &ПаспортСделки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РЭЙ_ПаспортСделки.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("ПаспортСделки", Ссылка);
	Запрос.УстановитьПараметр("КонтрактВЭД", текКонтрактВЭД);
	Запрос.УстановитьПараметр("ВключатьТекущийДокумент", ВключатьТекущийДокумент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Документы.РЭЙ_ПаспортСделки.ПустаяСсылка();
	КонецЕсли;
КонецФункции

Функция ПолучитьСтрокуДляТаблицы2_2015_02_23(текКонтрагент)
	СтрокаТаблицы2 = Новый Структура;
	СтрокаТаблицы2.Вставить("КонтрагентНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеКонтрагентаДляПечати(текКонтрагент));
	
	Если текКонтрагент.РЭЙ_НеЯвляетсяРезидентом Тогда	
		текСтрана = текКонтрагент.РЭЙ_Страна;
	Иначе
		текСтрана = Справочники.СтраныМира.Россия;
	КонецЕсли;
	СтрокаТаблицы2.Вставить("КонтрагентСтранаНаименование", текСтрана.Наименование);
	СтрокаТаблицы2.Вставить("КонтрагентСтранаКод", текСтрана.Код);
	
	Возврат СтрокаТаблицы2;
КонецФункции

#КонецОбласти
