
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтатусПакета = Объект.СтатусПакета;
	ЗаполнитьСписокВыбораСтатусовПакета();
	
	ОбновитьВидимостьДоступность();
	
	ИспользуетсяНесколькоОрганизацийЭД = ЭлектронноеВзаимодействиеСлужебный.ИспользуетсяНесколькоОрганизаций();
	
	Если ИспользуетсяНесколькоОрганизацийЭД Тогда
		Элементы.ПустаяДекорация.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СтатусПакета = Объект.СтатусПакета;
	Элементы.КомандаРаспаковатьПакетЭД.Видимость = Объект.СтатусПакета = Перечисления.СтатусыПакетовЭД.КРаспаковке;
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ТекущийОбъект.СтатусПакета = СтатусПакета Тогда
		ТекущийОбъект.СтатусПакета = СтатусПакета;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораСтатусовПакета();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		Прочитать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭлектронныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ЭлектронныеДокументыОбъектВладелец" Тогда
		ПоказатьЗначение(,Элемент.ТекущиеДанные.ОбъектВладелец);
		
	ИначеЕсли ТипЗнч(Элемент.ТекущиеДанные.ЭлектронныйДокумент) = Тип("СправочникСсылка.ЭДПрисоединенныеФайлы") Тогда
		СтандартнаяОбработка = Ложь;
		ОбменСКонтрагентамиСлужебныйКлиент.ОткрытьЭДДляПросмотра(Элемент.ТекущиеДанные.ЭлектронныйДокумент);
	
	Иначе
		ПоказатьЗначение(,Элемент.ТекущиеДанные.ЭлектронныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаЭДОПриИзменении(Элемент)
	
	Если Не ЭтоДействующаяНастройкаЭДО(Объект.НастройкаЭДО) Тогда
		
		Шаблон = НСтр("ru = 'Выбрана не действующая настройка ЭДО.
			|Необходимо выбрать настройку ЭДО со статусом подключения ""%1"".';
			|en = 'Invalid EDI setting is selected. 
			|Select EDI setting with the %1 connection status.'");
		
		ТекстСообщения = СтрШаблон(Шаблон, ПредопределенноеЗначение("Перечисление.СтатусыУчастниковОбменаЭД.Присоединен"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Объект.НастройкаЭДО = Неопределено;
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьРеквизитыНастройкаЭДОПриИзменении();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РаспаковатьПакетЭД(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.НастройкаЭДО) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", НСтр("ru = 'Настройка ЭДО';
																							|en = 'EDI setup'")),
			,
			"НастройкаЭДО");
		Возврат;
	КонецЕсли;
	
	МассивПЭД = Новый Массив;
	МассивПЭД.Добавить(Объект.Ссылка);
	ОбменСКонтрагентамиСлужебныйКлиент.РаспаковатьПакетыЭДНаКлиенте(МассивПЭД);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ЭтоДействующаяНастройкаЭДО(Настройка)
	
	СтатусПодключения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Настройка, "СтатусПодключения");
	Возврат СтатусПодключения = Перечисления.СтатусыУчастниковОбменаЭД.Присоединен;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораСтатусовПакета()
	
	Если Объект.Направление = Перечисления.НаправленияЭД.Входящий Тогда
		Элементы.СтатусПакета.СписокВыбора.ЗагрузитьЗначения(СписокСтатусовВходящий());
	Иначе
		Элементы.СтатусПакета.СписокВыбора.ЗагрузитьЗначения(СписокСтатусовИсходящий());
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокСтатусовВходящий()
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.КРаспаковке);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Распакован);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.РаспакованДокументыНеОбработаны);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Неизвестный);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Отменен);
	
	Возврат МассивСтатусов;
	
КонецФункции

&НаСервереБезКонтекста
Функция СписокСтатусовИсходящий()
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Доставлен);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Отправлен);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.ПодготовленКОтправке);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Отменен);
	
	Возврат МассивСтатусов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыНастройкаЭДОПриИзменении()
	
	Объект.Отправитель = Объект.НастройкаЭДО.ИдентификаторКонтрагента;
	Объект.Получатель = Объект.НастройкаЭДО.ИдентификаторОрганизации;
	Объект.Контрагент = Объект.НастройкаЭДО.Контрагент;
	СтатусПакета = Перечисления.СтатусыПакетовЭД.КРаспаковке;
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	
	Если Не ЗначениеЗаполнено(Объект.НастройкаЭДО) Тогда
		Элементы.НастройкаЭДО.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	ЭтоИсходящийПакет = (Объект.Направление = Перечисления.НаправленияЭД.Исходящий);
	ЭтоВходящийПакет = (Объект.Направление = Перечисления.НаправленияЭД.Входящий);
	Элементы.ГруппаИсторияОбработкиВходящий.Видимость = Не ЭтоИсходящийПакет;
	Элементы.ГруппаИсторияОбработкиИсходящий.Видимость = Не ЭтоВходящийПакет;
	
КонецПроцедуры

#КонецОбласти


