
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.CRM_Интерес") Тогда
		ДокументОснование	= ДанныеЗаполнения.Ссылка;
		КонтактноеЛицо		= ДанныеЗаполнения.КонтактноеЛицо;
		// ОжидаемаяВыручка	= ДанныеЗаполнения.ОжидаемаяВыручка;
		Описание			= ДанныеЗаполнения.Описание;
		Партнер				= ДанныеЗаполнения.Партнер;
		ПотенциальныйКлиент	= ДанныеЗаполнения.ПотенциальныйКлиент;
		ТипУслуги			= ДанныеЗаполнения.ТипУслуги;
		Тема				= ДанныеЗаполнения.Тема;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Партнеры") Тогда
		Если ДанныеЗаполнения.Ссылка.ЭтоГруппа Тогда
			СтандартнаяОбработка = Ложь;	
			Возврат;
		КонецЕсли;	
		Партнер				= ДанныеЗаполнения.Ссылка;		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Автор") Тогда
			Автор = ДанныеЗаполнения.Автор;
		КонецЕсли;
		Дата = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
		Если ДанныеЗаполнения.Свойство("Партнер") Тогда
			Партнер = ДанныеЗаполнения.Партнер;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("КонтактноеЛицо") Тогда
			Если ЗначениеЗаполнено(ДанныеЗаполнения.КонтактноеЛицо) Тогда
				КонтактноеЛицо = ДанныеЗаполнения.КонтактноеЛицо;
			ИначеЕсли ЗначениеЗаполнено(Партнер) Тогда
				Если  ЗначениеЗаполнено(Партнер.CRM_ОсновноеКонтактноеЛицо) Тогда
					КонтактноеЛицо = Партнер.CRM_ОсновноеКонтактноеЛицо; 
				Иначе
					КонтактноеЛицо = CRM_МетодыМодулейМенеджеровДокументов.ВернутьКЛПартнера(Партнер);;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ПотенциальныйКлиент") Тогда
			ПотенциальныйКлиент = ДанныеЗаполнения.ПотенциальныйКлиент;
		КонецЕсли;		
		Если ДанныеЗаполнения.Свойство("Описание") Тогда
			Описание = ДанныеЗаполнения.Описание;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("Организация") Тогда
			Организация = ДанныеЗаполнения.Организация;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("Ответственный") Тогда
			Ответственный = ДанныеЗаполнения.Ответственный;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("Подразделение") Тогда
			Подразделение = ДанныеЗаполнения.Подразделение;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("Офис") Тогда
			Офис = ДанныеЗаполнения.Офис;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СостояниеИнтереса") Тогда
			СостояниеИнтереса = ДанныеЗаполнения.СостояниеИнтереса;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("СостояниеИнтереса") Тогда
			СостояниеИнтереса = ДанныеЗаполнения.СостояниеИнтереса;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("Тема") Тогда
			Тема = ДанныеЗаполнения.Тема;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ТипУслуги") Тогда
			ТипУслуги = ДанныеЗаполнения.ТипУслуги;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		Если ЗначениеЗаполнено(ДанныеЗаполнения.БизнесПроцесс) Тогда
			Партнер			= ДанныеЗаполнения.БизнесПроцесс.Партнер;
			КонтактноеЛицо	= ДанныеЗаполнения.БизнесПроцесс.КонтактноеЛицо;
			Организация		= ДанныеЗаполнения.БизнесПроцесс.Организация;
			Ответственный	= ДанныеЗаполнения.БизнесПроцесс.Ответственный;
			Подразделение	= ДанныеЗаполнения.БизнесПроцесс.Подразделение;
		КонецЕсли;
		
		Дата = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
		Тема = ДанныеЗаполнения.Наименование;
		Описание = ДанныеЗаполнения.Описание;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СостояниеИнтереса) И ВероятностьСделки <> СостояниеИнтереса.ВероятностьСделки Тогда
		ВероятностьСделки = СостояниеИнтереса.ВероятностьСделки;
		Завершен = СостояниеИнтереса.Завершено;
	КонецЕсли;
	
	Если Завершен И Не ЗначениеЗаполнено(ДатаЗакрытия) Тогда
		ДатаЗакрытия = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если СостояниеИнтереса.Родитель<>Ссылка.СостояниеИнтереса.Родитель Тогда
		ДополнительныеСвойства.Вставить("ОчиститьСостоянияВоронкиПродаж", ЭтоНовый());
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ПредыдущееСостояниеИнтереса", Ссылка.СостояниеИнтереса);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = Ложь;
	Если ДополнительныеСвойства.Свойство("ЭтоНовый", ЭтоНовый) И ЭтоНовый И Автор <> Ответственный Тогда
		CRM_НапоминанияСервер.СоздатьНапоминаниеОНовомИнтересе(Ссылка);
	КонецЕсли; 
	
	Если ПометкаУдаления Тогда
		РегистрыСведений.CRM_ЗапланированныеАктивности.ОтменитьАктивности(Ссылка, НСтр("ru='Интерес помечен на удаление.';en='Lead is marked for deletion.'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Вызов закомментирован.

//// Процедура проставляет пометку удаления всем связанным с Интересом Взаимодействиям при ее изменении у Интереса.
////
//Процедура ИзменитьПометкуУдаленияВзаимодействий()
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//		|	CRM_Взаимодействие.Ссылка
//		|ИЗ
//		|	Документ.CRM_Взаимодействие КАК CRM_Взаимодействие
//		|ГДЕ
//		|	CRM_Взаимодействие.ДокументОснование = &ДокументОснование";
//	Запрос.УстановитьПараметр("ДокументОснование", Ссылка);
//	
//	
//	СписокВзаимодействий = Запрос.Выполнить().Выбрать();
//	
//	Пока СписокВзаимодействий.Следующий() Цикл
//		ВзаимодействиеОбъект = СписокВзаимодействий.Ссылка.ПолучитьОбъект();
//		ВзаимодействиеОбъект.ПометкаУдаления = ПометкаУдаления;
//		ВзаимодействиеОбъект.Записать();
//	КонецЦикла;
//	
//КонецПроцедуры

// Процедура - обработчик при копировании Интереса.
Процедура ПриКопировании(ОбъектКопирования)
	
	Пользователь 					= ПараметрыСеанса.ТекущийПользователь;
 
 	Ответственный 					= CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ОсновнойОтветственный");  	
	Ответственный 					= ?(ЗначениеЗаполнено(Ответственный), Ответственный, Пользователь);
	 
	Автор 							= Пользователь;
	
	ВероятностьСделки 				= 0;
	ОжидаемаяВыручка   				= 0;
	// ДатаСледующегоДействия 			= Дата(1, 1, 1);
	// СледующееДействиеПредставление 	= "";
	ДатаЗакрытия  					= Дата(1, 1, 1);

	ДокументОснование 				= Неопределено;		
	ПричинаОтказа  					= Неопределено;
	СостояниеИнтереса  				= Неопределено;
	
	Завершен     					= Ложь;
	
	CRM_Теги.Очистить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли