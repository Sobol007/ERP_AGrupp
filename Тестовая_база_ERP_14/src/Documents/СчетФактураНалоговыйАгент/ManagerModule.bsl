#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура налогового агента".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураНалоговыйАгент) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураНалоговыйАгент.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураНалоговыйАгент);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
КонецПроцедуры

// Возвращает структуру параметров для отбора данных по оплатам
// 
// Возвращаемое значение:
//	Структура - параметры отбора.
//
Функция ОтборРасчетов() Экспорт
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("НачалоПериода");
	СтруктураОтбора.Вставить("КонецПериода");
	СтруктураОтбора.Вставить("СтавкаНДС");
	СтруктураОтбора.Вставить("Организация");
	СтруктураОтбора.Вставить("РасчетныйДокумент");
	
	Возврат СтруктураОтбора;
	
КонецФункции

// Заполняет таблицу ОплатыПоставщику данными для формирования счетов-фактур налогового агента.
//
// Параметры:
//	ОтборРасчетов - Структура - Параметры отбора оплат
//	ОплатыПоставщику - ТаблицаЗначений - таблица, которую необходимо заполнить
//	РасчетныеДокументыБезСчетаФактуры - Массив - Заполняется списком документов, по которым не сформировались счета-фактуры.
//
Процедура ЗаполнитьОплатыПоставщикам(ОтборРасчетов, ОплатыПоставщику) Экспорт
	
	НачалоПериода		= НачалоДня(ОтборРасчетов.НачалоПериода);
	КонецПериода		= КонецДня(ОтборРасчетов.КонецПериода);
	Организация			= ОтборРасчетов.Организация;
	РасчетныйДокумент	= ОтборРасчетов.РасчетныйДокумент;
	
	СтавкаНДС = ?(ЗначениеЗаполнено(ОтборРасчетов.СтавкаНДС), ОтборРасчетов.СтавкаНДС, УчетНДСУП.СтавкаНДСПоУмолчанию(НачалоПериода));
	
	ВозможныйТипДокументаОснования = Метаданные.Документы.СчетФактураНалоговыйАгент.Реквизиты.ДокументОснование.Тип;
	
	Результат = РезультатЗапросаПоОплатамНалоговыйАгент(НачалоПериода, КонецПериода, Организация, РасчетныйДокумент);
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		// Добавим в табличную часть
		Если ВозможныйТипДокументаОснования.СодержитТип(ТипЗнч(Выборка.ДокументОснование)) Тогда
			
			НоваяСтрока = ОплатыПоставщику.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если ЗначениеЗаполнено(НоваяСтрока.СчетФактура) Тогда
				НоваяСтрока.СФсформирован = Истина;
			Иначе
				НоваяСтрока.СФсформирован = Ложь;
			КонецЕсли;
				
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтавкаНДС) Тогда
				НоваяСтрока.СтавкаНДС = СтавкаНДС;
			КонецЕсли; 
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.ВидАгентскогоДоговора) 
				 И НоваяСтрока.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
				НоваяСтрока.ВидАгентскогоДоговора = Перечисления.ВидыАгентскихДоговоров.Нерезидент;
			КонецЕсли;
			
			НоваяСтрока.СуммаНДС  = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(НоваяСтрока.Сумма, НоваяСтрока.СтавкаНДС, Ложь);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
	
	ОплатыПоставщикам = Новый ТаблицаЗначений;
	ОплатыПоставщикам.Колонки.Добавить("СчетФактура");
	ОплатыПоставщикам.Колонки.Добавить("СФСформирован");
	ОплатыПоставщикам.Колонки.Добавить("СтавкаНДС");
	ОплатыПоставщикам.Колонки.Добавить("ВидАгентскогоДоговора");
	ОплатыПоставщикам.Колонки.Добавить("ЮрФизЛицо");
	ОплатыПоставщикам.Колонки.Добавить("СуммаНДС");
	ОплатыПоставщикам.Колонки.Добавить("Сумма");
	
	ОтборРасчетов = ОтборРасчетов();
	ОтборРасчетов.НачалоПериода = Параметры.НачалоПериода;
	ОтборРасчетов.КонецПериода = Параметры.КонецПериода;
	ОтборРасчетов.Организация = Параметры.МассивОрганизаций;
	
	ЗаполнитьОплатыПоставщикам(ОтборРасчетов, ОплатыПоставщикам);
	
	Возврат ОплатыПоставщикам.НайтиСтроки(Новый Структура("СФСформирован", Ложь)).Количество();
	
КонецФункции

//++ НЕ УТ

#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса отражения в регл. учете.
//   
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстНачислениеНДС = 
	"ВЫБРАТЬ // Начисление НДС налогового агента <Дт 76.НА :: Кт 68.32>
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Строки.СуммаНДС,0) КАК Сумма,
	|	ЕСТЬNULL(Строки.СуммаНДС,0) / КурсВалютыУпрУчета.Курс КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыНДСНалоговогоАгента) КАК СчетДт,
	|
	|	Операция.Поставщик КАК СубконтоДт1,
	|	Операция.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	&ВалютаРеглУчета КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Операция.ДокументОснование ССЫЛКА Документ.ПервичныйДокумент ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгента)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Операция.Поставщик КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	Операция.ДокументОснование КАК СубконтоКт3,
	|	
	|	ЕСТЬNULL(Строки.СуммаНДС,0) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДС налогового агента"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|
	|";
	
	ТекстВходящийНДС = "
	|ВЫБРАТЬ // НДС, уплачиваемый налоговым агентом <Дт 19.11 :: Кт 76.НА>
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаНДС КАК Сумма,
	|	Строки.СуммаНДС / КурсВалютыУпрУчета.Курс КАК СуммаУУ,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ВЫБОР 
	|		КОГДА Операция.Дата >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Строки.НаправлениеДеятельности
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСУплачиваемыйНалоговымАгентом) КАК СчетДт,
	|
	|	Операция.Поставщик КАК СубконтоДт1,
	|	Операция.Ссылка КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыНДСНалоговогоАгента) КАК СчетКт,
	|
	|	Операция.Поставщик КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""НДС, уплачиваемый налоговым агентом"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсВалютыУпрУчета
	|	ПО
	|		КурсВалютыУпрУчета.Валюта = &ВалютаУпрУчета
	|		И КурсВалютыУпрУчета.Дата = НАЧАЛОПЕРИОДА(Операция.Дата, День)
	|";
	
	ТекстВключениеНДСВРасходы = "
	|ВЫБРАТЬ // Включение НДС в расходы <Дт 26,44,91 :: Кт 19.11>
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	Строки.СуммаУпр КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.АналитикаРасходов КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ВЫБОР 
	|		КОГДА Операция.Дата >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Строки.НаправлениеДеятельности
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСУплачиваемыйНалоговымАгентом) КАК СчетКт,
	|
	|	Операция.Поставщик КАК СубконтоКт1,
	|	Операция.Ссылка КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение НДС в расходы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПрочиеРасходы КАК Строки
	|
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|		И (Строки.СуммаРегл <> 0 ИЛИ Строки.СуммаУпр <> 0)
	|		И НЕ Строки.РасчетСебестоимости
	|		И Строки.РасчетПартий
	|	
	|";

	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстНачислениеНДС);
	ТекстыОтражения.Добавить(ТекстВходящийНДС);
	ТекстыОтражения.Добавить(ТекстВключениеНДСВРасходы);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

//-- НЕ УТ

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.СчетФактураНалоговыйАгент";
	
	ВЗапросеЕстьИсточник = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ЗначенияПараметров = ЗначенияПараметровПроведения();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ВЗапросеЕстьИсточник,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	Иначе	
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
										ТекстЗапроса,
										ПолноеИмяДокумента,
										СинонимТаблицыДокумента,
										ПереопределениеРасчетаПараметров,
										ТекстыЗапросаВременныхТаблиц);
	КонецЕсли; 

	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
 
	ИсточникиДанных = Новый Соответствие;
 
	Возврат ИсточникиДанных; 
 
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК НалогПеречислен
	|ПОМЕСТИТЬ втПолученоПодтверждение
	|ИЗ
	|	РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
	|ГДЕ
	|	ПодтверждениеОплатыНДСВБюджет.СчетФактура = &Ссылка
	|	И ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.ПолученоПодтверждение)
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	ДанныеДокумента.Комментарий         				  КАК Комментарий,
	|	ДанныеДокумента.Проведен                              КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления                       КАК ПометкаУдаления,
	|	ДанныеДокумента.Дата                                  КАК Период,
	|	ДанныеДокумента.Организация                           КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ОбособленноеПодразделение, ЛОЖЬ)
	|	                                                      КАК ОбособленноеПодразделение,
	|	ЕСТЬNULL(ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения, 0)
	|	                                                      КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.Подразделение                         КАК Подразделение,
	|	ДанныеДокумента.Партнер                               КАК Партнер,
	|	ДанныеДокумента.Поставщик                             КАК Поставщик,
	|	ДанныеДокумента.ДокументОснование                     КАК ДокументОснование,
	|	ДанныеДокумента.НаправлениеДеятельности               КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Ответственный       				  КАК Ответственный,
	|	
	|	ВЫБОР 
	|		КОГДА НЕ СписаниеБезналичныхДенежныхСредств.Ссылка ЕСТЬ NULL И СписаниеБезналичныхДенежныхСредств.ПроведеноБанком
	|		ТОГДА
	|			СписаниеБезналичныхДенежныхСредств.ДатаПроведенияБанком
	|		ИНАЧЕ
	|			ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Дата, ДанныеДокумента.Дата)
	|	КОНЕЦ                                                 КАК ДатаОснования,
	|	
	|	ВЫБОР 
	|		КОГДА
	|			ДанныеДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|		КОГДА
	|			ДанныеДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|		КОГДА
	|			ДанныеДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|		КОГДА
	|			ДанныеДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|	КОНЕЦ                                                 КАК ВидЦенности,
	|	ДанныеДокумента.Номер                                 КАК Номер,
	|	ДанныеДокумента.Дата                                  КАК Дата,
	|	ДанныеДокумента.ВидАгентскогоДоговора                 КАК ВидАгентскогоДоговора,
	|	ДанныеДокумента.КодВидаОперации                       КАК КодВидаОперации,
	|	ДанныеДокумента.Договор                               КАК Договор,
	|	ДанныеДокумента.СуммаНДС                     		  КАК СуммаНДС,
	|	ДанныеДокумента.Сумма                     		  	  КАК Сумма,
	|	ЕСТЬNULL(ПолученоПодтверждение.НалогПеречислен,ЛОЖЬ)  КАК НалогПеречислен
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|	ПО
	|		ДанныеДокумента.ДокументОснование = СписаниеБезналичныхДенежныхСредств.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		втПолученоПодтверждение КАК ПолученоПодтверждение
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
		
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Номер = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
				Реквизиты.Номер, 
				Истина,
				Реквизиты.ОбособленноеПодразделение, 
				Реквизиты.ЦифровойИндексОбособленногоПодразделения);
	
	Запрос.УстановитьПараметр("Организация",                      Реквизиты.Организация);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",            Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",          Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("Подразделение",                    Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Партнер",                          Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Поставщик",                        Реквизиты.Поставщик);
	Запрос.УстановитьПараметр("ДокументОплаты",                   Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ДатаОснования",                    Реквизиты.ДатаОснования);
	Запрос.УстановитьПараметр("НомерНаПечать",                    Номер);
	Запрос.УстановитьПараметр("Номер",                            Реквизиты.Номер);
	Запрос.УстановитьПараметр("Период",                           Реквизиты.Период);
	Запрос.УстановитьПараметр("Дата",                             Реквизиты.Дата);
	Запрос.УстановитьПараметр("ВидАгентскогоДоговора",            Реквизиты.ВидАгентскогоДоговора);
	Запрос.УстановитьПараметр("КодВидаОперации",                  Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("Валюта",                           Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("СтатьяРасходов",                   ПланыВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента);
	Запрос.УстановитьПараметр("НалогПеречислен",                  Реквизиты.НалогПеречислен);
	Запрос.УстановитьПараметр("ВидЦенности",                      Реквизиты.ВидЦенности);
	Запрос.УстановитьПараметр("Договор",                          Реквизиты.Договор);
	Запрос.УстановитьПараметр("Ответственный",                    Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("СуммаНДС",                         Реквизиты.СуммаНДС);
	Запрос.УстановитьПараметр("Сумма",                            Реквизиты.Сумма);
	Запрос.УстановитьПараметр("Комментарий",                      Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Проведен",                         Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",                  Реквизиты.ПометкаУдаления);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
	ЗначенияПараметровПроведения = ЗначенияПараметровПроведения(Реквизиты);
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла; 
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)

	ЗначенияПараметровПроведения = Новый Структура;
	ЗначенияПараметровПроведения.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураНалоговыйАгент"));

	Возврат ЗначенияПараметровПроведения;
	
КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	&Организация                        КАК Контрагент,
	|	ТаблицаРасшифровка.Ссылка           КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&Период                             КАК ДатаВыставленияПолучения,
	|	1                                   КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                    КАК КодВидаОперации,
	|	&НомерНаПечать                      КАК НомерСчетаФактуры,
	|	&Период                             КАК ДатаСчетаФактуры,
	|	&Валюта                             КАК Валюта,
	|	СУММА(ТаблицаРасшифровка.СуммаСНДС) КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаРасшифровка.СуммаНДС)  КАК СуммаНДС,
	|	0                                   КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                   КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                   КАК СуммаНДСРазницаУменьшение,
	|	0                                   КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                КАК ПоСтавкеБезНДС,
	|	ИСТИНА                              КАК СчетФактураНеВыставляется,
	|	
	|	0                                   КАК СуммаПоСчетуФактуреКомиссия,
	|	0                                   КАК СуммаНДСКомиссия,
	|	0                                   КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                   КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                   КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                   КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	""""                                КАК КодВидаОперацииКомиссия
	|	
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК ТаблицаРасшифровка
	|ГДЕ
	|	ТаблицаРасшифровка.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасшифровка.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтНДСЗаписиКнигиПродажИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросНДСЗаписиКнигиПродаж = Новый Запрос;
	ЗапросНДСЗаписиКнигиПродаж.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("Ссылка",                Запрос.Параметры.Ссылка);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("ДатаОснования",         Запрос.Параметры.ДатаОснования);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("Организация",           Запрос.Параметры.Организация);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("ВидАгентскогоДоговора", Запрос.Параметры.ВидАгентскогоДоговора);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("ДокументОплаты",        Запрос.Параметры.ДокументОплаты);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("Поставщик",             Запрос.Параметры.Поставщик);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("ВидЦенности",           Запрос.Параметры.ВидЦенности);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("Период",                Запрос.Параметры.Период);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("УправленческийУчетОрганизаций", Запрос.Параметры.УправленческийУчетОрганизаций);
	
	УстановитьПараметрКоэффициентПересчетаВВалютуУпр(ЗапросНДСЗаписиКнигиПродаж);
	
	ЗапросНДСЗаписиКнигиПродаж.Текст = 
	"ВЫБРАТЬ
	|	&ДатаОснования                                                КАК Период,
	|	&Организация                                                  КАК Организация,
	|	&ВидЦенности                                                  КАК ВидЦенности,
	|	&ДокументОплаты                                               КАК СчетФактура,
	|	&Поставщик                                                    КАК Покупатель,
	|	&ДокументОплаты                                               КАК ДокументОплаты,
	|	&ДатаОснования                                                КАК ДатаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НДСНачисленКУплате) КАК Событие,
	|	&ДатаОснования                                                КАК ДатаСобытия,
	|	ВЫБОР 
	|		КОГДА Суммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|		КОГДА Суммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА Суммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		ИНАЧЕ Суммы.СтавкаНДС
	|	КОНЕЦ                                                         КАК СтавкаНДС,
	|	Суммы.НаправлениеДеятельности                                 КАК НаправлениеДеятельности,
	|	СУММА(Суммы.СуммаНДС)                                         КАК НДС,
	|	СУММА(ВЫБОР 
	|		КОГДА &УправленческийУчетОрганизаций 
	|			ТОГДА Суммы.СуммаНДС * &КоэффициентПересчетаВВалютуУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                                        КАК НДСУпр,
	|	СУММА(Суммы.Сумма)                                            КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО					                              КАК НомерДокументаОплаты,
	|	НЕОПРЕДЕЛЕНО                                				  КАК ДатаДокументаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом) КАК ХозяйственнаяОперация,
	|	СчетФактураНалоговыйАгент.Договор                             КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ВтНДСЗаписиКнигиПродаж
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК Суммы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|		ПО Суммы.Ссылка = СчетФактураНалоговыйАгент.Ссылка
	|	
	|ГДЕ
	|	Суммы.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Суммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|		КОГДА Суммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА Суммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		ИНАЧЕ Суммы.СтавкаНДС
	|	КОНЕЦ,
	|	Суммы.НаправлениеДеятельности,
	|	СчетФактураНалоговыйАгент.Договор";
	
	ЗапросНДСЗаписиКнигиПродаж.Выполнить();
	
	Запрос.УстановитьПараметр("ВтНДСЗаписиКнигиПродажИнициализирована", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтНДСЗаписиКнигиПродаж.Период,
	|	ВтНДСЗаписиКнигиПродаж.Организация,
	|	ВтНДСЗаписиКнигиПродаж.ВидЦенности,
	|	ВтНДСЗаписиКнигиПродаж.СчетФактура,
	|	ВтНДСЗаписиКнигиПродаж.Покупатель,
	|	ВтНДСЗаписиКнигиПродаж.ДокументОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.Событие,
	|	ВтНДСЗаписиКнигиПродаж.ДатаСобытия,
	|	ВтНДСЗаписиКнигиПродаж.СтавкаНДС,
	|	ВтНДСЗаписиКнигиПродаж.НДС,
	|	ВтНДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	ВтНДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.НаправлениеДеятельности,
	|	ВтНДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	ВтНДСЗаписиКнигиПродаж.ДоговорКонтрагента
	|ИЗ
	|	ВтНДСЗаписиКнигиПродаж";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтДокументыПоступления(Запрос);
	ИнициализироватьВтПартииПрочихРасходов(Запрос);
	
	УстановитьПараметрКоэффициентПересчетаВВалютуУпр(Запрос);
	
	УчетНДСУПСлужебный.УстановитьПараметрТипыНалогообложенияНДСПоступления(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Операция.Дата                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Поставщик                     КАК Поставщик,
	|	&ВидЦенности                           КАК ВидЦенности,
	|	ВЫБОР 
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		ИНАЧЕ Строки.СтавкаНДС
	|	КОНЕЦ                                  КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	Строки.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	0                                      КАК СуммаБезНДС,
	|	СУММА(Строки.СуммаНДС)                 КАК НДС,
	|	СУММА(ВЫБОР 
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА Строки.СуммаНДС * &КоэффициентПересчетаВВалютуУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ)                             КАК НДСУпр,
	|	НЕОПРЕДЕЛЕНО                           КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                           КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                           КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                           КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаРасходов
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.Поставщик,
	|	Операция.ВидАгентскогоДоговора,
	|	Строки.НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		ИНАЧЕ Строки.СтавкаНДС
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Строки.Период                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Поставщик                     КАК Поставщик,
	|	&ВидЦенности                           КАК ВидЦенности,
	|	Строки.АналитикаУчетаПартий.СтавкаНДС  КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	Строки.КорНаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	0                                      КАК СуммаБезНДС,
	|	СУММА(Строки.НДСРегл)                  КАК НДС,
	|	СУММА(ВЫБОР 
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА Строки.НДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ)                             КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС) КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	Строки.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	Строки.ВидДеятельностиНДС              КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                           КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаРасходов
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтПартииПрочихРасходов КАК Строки
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Строки.ВидДеятельностиНДС В (&ТипыНалогообложенияНДСПоступления)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Строки.Период,
	|	Операция.Организация,
	|	Операция.Поставщик,
	|	Операция.ВидАгентскогоДоговора,
	|	Строки.АналитикаУчетаПартий.СтавкаНДС,
	|	Строки.НаправлениеДеятельности,
	|	Строки.КорНаправлениеДеятельности,
	|	Строки.ВидДеятельностиНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Строки.Период                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Поставщик                     КАК Поставщик,
	|	&ВидЦенности                           КАК ВидЦенности,
	|	Строки.АналитикаУчетаПартий.СтавкаНДС  КАК СтавкаНДС,
	|	Строки.ВидДеятельностиНДС              КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	Строки.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	0                                      КАК СуммаБезНДС,
	|	СУММА(Строки.НДСРегл)                  КАК НДС,
	|	СУММА(ВЫБОР 
	|			КОГДА &УправленческийУчетОрганизаций
	|				ТОГДА Строки.НДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ)                             КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС) КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	Строки.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                           КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                           КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаРасходов
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтПартииПрочихРасходов КАК Строки
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Строки.ВидДеятельностиНДС В (&ТипыНалогообложенияНДСПоступления)
	|
	|СГРУППИРОВАТЬ ПО
	|	Строки.Период,
	|	Операция.Организация,
	|	Операция.Поставщик,
	|	Операция.ВидАгентскогоДоговора,
	|	Строки.АналитикаУчетаПартий.СтавкаНДС,
	|	Строки.НаправлениеДеятельности,
	|	Строки.КорНаправлениеДеятельности,
	|	Строки.ВидДеятельностиНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Период                     КАК Период,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                        КАК НДС,
	|	НДСПредъявленный.НДСУпр                     КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.РегламентнаяОперация       КАК РегламентнаяОперация,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	
	|ГДЕ
	|	НДСПредъявленный.Регистратор = &Ссылка
	|	И НДСПредъявленный.РегламентнаяОперация
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьВтДокументыПоступления(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтДокументыПоступленияИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросДокументыПоступления = Новый Запрос;
	ЗапросДокументыПоступления.УстановитьПараметр("Ссылка",            Запрос.Параметры.Ссылка);
	ЗапросДокументыПоступления.УстановитьПараметр("Поставщик",         Запрос.Параметры.Поставщик);
	ЗапросДокументыПоступления.УстановитьПараметр("Организация",       Запрос.Параметры.Организация);
	ЗапросДокументыПоступления.УстановитьПараметр("Договор",           Запрос.Параметры.Договор);
	ЗапросДокументыПоступления.УстановитьПараметр("ДокументОснование", Запрос.Параметры.ДокументОплаты);
	
	Если ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		
		ЗапросДокументыПоступления.Текст = 
		"ВЫБРАТЬ
		|	КлючиАналитикиУчетаПоПартнерам.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ АналитикаУчетаПартнеров
		|ИЗ
		|	Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
		|ГДЕ
		|	КлючиАналитикиУчетаПоПартнерам.Организация = &Организация
		|	И КлючиАналитикиУчетаПоПартнерам.Контрагент = &Поставщик
		|	И (КлючиАналитикиУчетаПоПартнерам.Договор = &Договор 
		|		ИЛИ &Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыПоступления.Документ КАК Документ,
		|	СУММА(ДокументыПоступления.СуммаОплаты) КАК СуммаОплаты
		|ИЗ
		|	(ВЫБРАТЬ
		|		Расчеты.ДокументРегистратор КАК Документ,
		|		Расчеты.ПредоплатаРегл КАК СуммаОплаты
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Расчеты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаУчетаПартнеров КАК АналитикаУчетаПартнеров
		|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПартнеров.Ссылка
		|	ГДЕ
		|		(Расчеты.ДокументРегистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|				ИЛИ Расчеты.ДокументРегистратор ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)
		|		И Расчеты.ДокументРегистратор <> Расчеты.ОбъектРасчетов
		|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Расчеты.РасчетныйДокумент = &ДокументОснование
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Расчеты.ОбъектРасчетов,
		|		Расчеты.ПредоплатаРегл
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Расчеты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаУчетаПартнеров КАК АналитикаУчетаПартнеров
		|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПартнеров.Ссылка
		|	ГДЕ
		|		Расчеты.ДокументРегистратор = &ДокументОснование
		|		И Расчеты.РасчетныйДокумент = &ДокументОснование
		|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И (Расчеты.ОбъектРасчетов ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|				ИЛИ Расчеты.ОбъектРасчетов ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Расчеты.ОбъектРасчетов,
		|		Расчеты.ДолгРегл
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Расчеты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаУчетаПартнеров КАК АналитикаУчетаПартнеров
		|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПартнеров.Ссылка
		|	ГДЕ
		|		Расчеты.ДокументРегистратор = &ДокументОснование
		|		И Расчеты.РасчетныйДокумент <> &ДокументОснование
		|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И (Расчеты.ОбъектРасчетов ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|				ИЛИ Расчеты.ОбъектРасчетов ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Расчеты.РасчетныйДокумент,
		|		Расчеты.ДолгРегл
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК Расчеты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаУчетаПартнеров КАК АналитикаУчетаПартнеров
		|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПартнеров.Ссылка
		|	ГДЕ
		|		Расчеты.ДокументРегистратор = &ДокументОснование
		|		И Расчеты.РасчетныйДокумент <> Расчеты.ОбъектРасчетов
		|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И (Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|				ИЛИ Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)) КАК ДокументыПоступления
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыПоступления.Документ
		|
		|";
	Иначе
		ЗапросДокументыПоступления.Текст = 
		"ВЫБРАТЬ
		|	КлючиАналитикиУчетаПоПартнерам.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ АналитикаУчетаПартнеров
		|ИЗ
		|	Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
		|ГДЕ
		|	КлючиАналитикиУчетаПоПартнерам.Организация = &Организация
		|	И КлючиАналитикиУчетаПоПартнерам.Контрагент = &Поставщик
		|	И (КлючиАналитикиУчетаПоПартнерам.Договор = &Договор 
		|		ИЛИ &Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыПоступления.Документ КАК Документ,
		|	СУММА(ДокументыПоступления.СуммаОплаты) КАК СуммаОплаты
		|ИЗ
		|	(ВЫБРАТЬ
		|		Расчеты.Регистратор КАК Документ,
		|		Расчеты.ПредоплатаРегл КАК СуммаОплаты
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаУчетаПартнеров КАК АналитикаУчетаПартнеров
		|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПартнеров.Ссылка
		|	ГДЕ
		|		(Расчеты.Регистратор ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|				ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)
		|		И Расчеты.Регистратор <> Расчеты.ЗаказПоставщику
		|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Расчеты.РасчетныйДокумент = &ДокументОснование
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Расчеты.ЗаказПоставщику,
		|		Расчеты.ПредоплатаРегл
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаУчетаПартнеров КАК АналитикаУчетаПартнеров
		|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПартнеров.Ссылка
		|	ГДЕ
		|		Расчеты.Регистратор = &ДокументОснование
		|		И Расчеты.РасчетныйДокумент = &ДокументОснование
		|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И (Расчеты.ЗаказПоставщику ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|				ИЛИ Расчеты.ЗаказПоставщику ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Расчеты.ЗаказПоставщику,
		|		Расчеты.ДолгРегл
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаУчетаПартнеров КАК АналитикаУчетаПартнеров
		|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПартнеров.Ссылка
		|	ГДЕ
		|		Расчеты.Регистратор = &ДокументОснование
		|		И Расчеты.РасчетныйДокумент <> &ДокументОснование
		|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И (Расчеты.ЗаказПоставщику ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|				ИЛИ Расчеты.ЗаказПоставщику ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Расчеты.РасчетныйДокумент,
		|		Расчеты.ДолгРегл
		|	ИЗ
		|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаУчетаПартнеров КАК АналитикаУчетаПартнеров
		|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПартнеров.Ссылка
		|	ГДЕ
		|		Расчеты.Регистратор = &ДокументОснование
		|		И Расчеты.РасчетныйДокумент <> Расчеты.ЗаказПоставщику
		|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И (Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|				ИЛИ Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПриобретениеУслугПрочихАктивов)) КАК ДокументыПоступления
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыПоступления.Документ
		|
		|";
	КонецЕсли;
	
	ТаблицаДокументовПоступления = ЗапросДокументыПоступления.Выполнить().Выгрузить();
	ТаблицаДокументовПоступления.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	Для Каждого СтрокаТаблицы Из ТаблицаДокументовПоступления Цикл
		СтрокаТаблицы.НомерСтроки = ТаблицаДокументовПоступления.Индекс(СтрокаТаблицы) + 1;
	КонецЦикла;
	
	ЗапросДокументыПоступления.Текст = 
	"ВЫБРАТЬ
	|	ДокументыПоступления.НомерСтроки 	КАК НомерСтроки,
	|	ДокументыПоступления.Документ 		КАК Документ,
	|	ДокументыПоступления.СуммаОплаты 	КАК СуммаОплаты
	|ПОМЕСТИТЬ ТаблицаДокументовПоступления
	|ИЗ
	|	&ДокументыПоступления КАК ДокументыПоступления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка				 						КАК Ссылка,
	|	Приобретение.Ссылка 						КАК Документ,
	|	ТаблицаДокументовПоступления.НомерСтроки 	КАК НомерСтроки,
	|	ТаблицаДокументовПоступления.СуммаОплаты 	КАК СуммаОплаты,
	|	Приобретение.НалогообложениеНДС 			КАК НалогообложениеНДС,
	|	Приобретение.ЗакупкаПодДеятельность 		КАК ЗакупкаПодДеятельность,
	|	Приобретение.Дата 							КАК Дата,
	|	Приобретение.Подразделение 					КАК Подразделение,
	|	Приобретение.НаправлениеДеятельности 		КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втДокументыПоступления
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК Приобретение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументовПоступления КАК ТаблицаДокументовПоступления
	|		ПО Приобретение.Ссылка = ТаблицаДокументовПоступления.Документ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка				 						КАК Ссылка,
	|	Приобретение.Ссылка 						КАК Документ,
	|	ТаблицаДокументовПоступления.НомерСтроки 	КАК НомерСтроки,
	|	ТаблицаДокументовПоступления.СуммаОплаты 	КАК СуммаОплаты,
	|	Приобретение.НалогообложениеНДС 			КАК НалогообложениеНДС,
	|	Приобретение.ЗакупкаПодДеятельность 		КАК ЗакупкаПодДеятельность,
	|	Приобретение.Дата 							КАК Дата,
	|	Приобретение.Подразделение 					КАК Подразделение,
	|	Приобретение.НаправлениеДеятельности 		КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК Приобретение,
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументовПоступления КАК ТаблицаДокументовПоступления
	|		ПО Приобретение.Ссылка = ТаблицаДокументовПоступления.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДокументовПоступления
	|";
	
	ЗапросДокументыПоступления.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросДокументыПоступления.УстановитьПараметр("ДокументыПоступления", ТаблицаДокументовПоступления); 
	
	ЗапросДокументыПоступления.Выполнить();
	
	Запрос.УстановитьПараметр("СуммаКПоступлению", Макс(Запрос.Параметры.Сумма - ТаблицаДокументовПоступления.Итог("СуммаОплаты"),0));
	Запрос.УстановитьПараметр("ВтДокументыПоступленияИнициализирована", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьВтПартииПрочихРасходов(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтПартииПрочихРасходовИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтДокументыПоступления(Запрос);
	ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос);
	ИнициализироватьКлючиАналитикиУчетаПартийДокумента(Запрос);
	
	ЗапросПартииПрочихРасходов = Новый Запрос;
	ЗапросПартииПрочихРасходов.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросПартииПрочихРасходов.УстановитьПараметр("Ссылка",                 Запрос.Параметры.Ссылка);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("Организация",            Запрос.Параметры.Организация);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("СтатьяРасходов",         Запрос.Параметры.СтатьяРасходов);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("НалогПеречислен",        Запрос.Параметры.НалогПеречислен);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("СуммаКПоступлению",      Запрос.Параметры.СуммаКПоступлению);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("Период",                 Запрос.Параметры.Период);
	
	ЗапросПартииПрочихРасходов.Текст = 
	"ВЫБРАТЬ
	|	ВтНДСЗаписиКнигиПродаж.Период,
	|	ВтНДСЗаписиКнигиПродаж.Организация,
	|	ВтНДСЗаписиКнигиПродаж.ВидЦенности,
	|	ВтНДСЗаписиКнигиПродаж.СчетФактура,
	|	ВтНДСЗаписиКнигиПродаж.Покупатель,
	|	ВтНДСЗаписиКнигиПродаж.ДокументОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.Событие,
	|	ВтНДСЗаписиКнигиПродаж.ДатаСобытия,
	|	ВтНДСЗаписиКнигиПродаж.СтавкаНДС,
	|	ВтНДСЗаписиКнигиПродаж.НДС,
	|	ВтНДСЗаписиКнигиПродаж.НДСУпр,
	|	ВтНДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	ВтНДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВтНДСЗаписиКнигиПродаж.ХозяйственнаяОперация
	|ИЗ
	|	ВтНДСЗаписиКнигиПродаж КАК ВтНДСЗаписиКнигиПродаж
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                КАК ВидДвижения,
	|	ВЫБОР 
	|		КОГДА ДокументыПоступления.Дата > &Период 
	|			ТОГДА ДокументыПоступления.Дата 
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                                 КАК Период,
	|	&Организация                                          КАК Организация,
	|	ДокументыПоступления.Подразделение                    КАК Подразделение,
	|	ДокументыПоступления.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА Аналитика.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Аналитика.НалогообложениеНДС 
	|		ИНАЧЕ Аналитика.АналитикаУчетаПартий.НалогообложениеНДС 
	|	КОНЕЦ                                                 КАК ВидДеятельностиНДС,
	|	&СтатьяРасходов                                       КАК СтатьяРасходов,
	|	ДокументыПоступления.Документ                         КАК АналитикаРасходов,
	|	&Ссылка                                               КАК ДокументПоступленияРасходов,
	|	Аналитика.АналитикаУчетаПартий                        КАК АналитикаУчетаПартий,
	|	Аналитика.АналитикаУчетаПартий.СтавкаНДС              КАК СтавкаНДС,
	|	ДокументыПоступления.СуммаОплаты                      КАК СуммаОплаты
	|ИЗ
	|	втДокументыПоступления КАК ДокументыПоступления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК Аналитика
	|	ПО
	|		(Аналитика.НомерСтроки - ДокументыПоступления.НомерСтроки) >= 0
	|		И (Аналитика.НомерСтроки - ДокументыПоступления.НомерСтроки) < 1
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	Аналитика.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
	|	&СуммаКПоступлению
	|ИЗ
	|	ВтТаблицаАналитикУчетаПартий КАК Аналитика
	|";
	
	Результат = ЗапросПартииПрочихРасходов.ВыполнитьПакет();
	
	НДСПартииПрочихРасходов = ВключитьНДСВПартииПрочихРасходов(Результат[0].Выгрузить(), Результат[1].Выгрузить(), Запрос.Параметры);
	
	ЗапросПартииПрочихРасходов.УстановитьПараметр("НДСПартииПрочихРасходов", НДСПартииПрочихРасходов);
	ЗапросПартииПрочихРасходов.Текст = 
	"ВЫБРАТЬ
	|	ПартииПрочихРасходов.АналитикаРасходов,
	|	ПартииПрочихРасходов.АналитикаУчетаНоменклатуры,
	|	ПартииПрочихРасходов.АналитикаУчетаПартий,
	|	ПартииПрочихРасходов.ВидДвижения,
	|	ПартииПрочихРасходов.ВременнаяРазница,
	|	ПартииПрочихРасходов.ДокументПоступленияРасходов,
	|	ПартииПрочихРасходов.ДокументРеализации,
	|	ПартииПрочихРасходов.ВидДеятельностиНДС,
	|	ПартииПрочихРасходов.НДСРегл,
	|	ПартииПрочихРасходов.НДСУпр,
	|	ПартииПрочихРасходов.НалогообложениеНДС,
	|	ПартииПрочихРасходов.НомерСтроки,
	|	ПартииПрочихРасходов.Организация,
	|	ПартииПрочихРасходов.Период,
	|	ПартииПрочихРасходов.Подразделение,
	|	ПартииПрочихРасходов.НаправлениеДеятельности,
	|	ПартииПрочихРасходов.КорНаправлениеДеятельности,
	|	ПартииПрочихРасходов.ПостояннаяРазница,
	|	ПартииПрочихРасходов.Регистратор,
	|	ПартииПрочихРасходов.СтатьяОтраженияРасходов,
	|	ПартииПрочихРасходов.СтатьяРасходов,
	|	ПартииПрочихРасходов.Стоимость,
	|	ПартииПрочихРасходов.СтоимостьБезНДС,
	|	ПартииПрочихРасходов.СтоимостьРегл
	|ПОМЕСТИТЬ ВтПартииПрочихРасходов
	|ИЗ
	|	&НДСПартииПрочихРасходов КАК ПартииПрочихРасходов";
	
	ЗапросПартииПрочихРасходов.Выполнить();
	
	Запрос.УстановитьПараметр("ВтПартииПрочихРасходовИнициализирована", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтПартииПрочихРасходов(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПартииПрочихРасходов.АналитикаРасходов,
	|	ПартииПрочихРасходов.АналитикаУчетаНоменклатуры,
	|	ПартииПрочихРасходов.АналитикаУчетаПартий,
	|	ПартииПрочихРасходов.ВидДвижения,
	|	ПартииПрочихРасходов.ВременнаяРазница,
	|	ПартииПрочихРасходов.ДокументПоступленияРасходов,
	|	ПартииПрочихРасходов.ДокументРеализации,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ПартииПрочихРасходов.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ПартииПрочихРасходов.НДСРегл,
	|	ПартииПрочихРасходов.НДСУпр,
	|	ПартииПрочихРасходов.НалогообложениеНДС,
	|	ПартииПрочихРасходов.НомерСтроки,
	|	ПартииПрочихРасходов.Организация,
	|	ПартииПрочихРасходов.Период,
	|	ПартииПрочихРасходов.Подразделение,
	|	ПартииПрочихРасходов.НаправлениеДеятельности,
	|	ПартииПрочихРасходов.ПостояннаяРазница,
	|	ПартииПрочихРасходов.Регистратор,
	|	ПартииПрочихРасходов.СтатьяОтраженияРасходов,
	|	ПартииПрочихРасходов.СтатьяРасходов,
	|	ПартииПрочихРасходов.Стоимость,
	|	ПартииПрочихРасходов.СтоимостьБезНДС,
	|	ПартииПрочихРасходов.СтоимостьРегл
	|ИЗ
	|	ВтПартииПрочихРасходов КАК ПартииПрочихРасходов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрКоэффициентПересчетаВВалютуУпр(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр") Тогда
		Возврат;
	КонецЕсли;
	
	КоэффициентПересчетаВВалютуУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
										Константы.ВалютаРегламентированногоУчета.Получить(),
										Константы.ВалютаУправленческогоУчета.Получить(),
										Запрос.Параметры.Период);
										
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", КоэффициентПересчетаВВалютуУпр);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                        КАК Ссылка,
	|	&Период                        КАК ДатаДокументаИБ,
	|	&Номер                         КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных       КАК ТипСсылки,
	|	&Организация                   КАК Организация,
	|	&ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	&Партнер                       КАК Партнер,
	|	&Поставщик                     КАК Контрагент,
	|	&Договор                       КАК Договор,
	|	&НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                   КАК МестоХранения,
	|	&Подразделение                 КАК Подразделение,
	|	&Ответственный                 КАК Ответственный,
	|	&Комментарий                   КАК Комментарий,
	|	&Валюта                        КАК Валюта,
	|	&СуммаНДС                      КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                   КАК Статус,
	|	&Проведен                      КАК Проведен,
	|	&ПометкаУдаления               КАК ПометкаУдаления,
	|	ЛОЖЬ                           КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО                   КАК РазделительЗаписи,
	|	НЕОПРЕДЕЛЕНО                   КАК Дополнительно,
	|	&Период                        КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать                 КАК НомерПервичногоДокумента,
	|	&Период   КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтДокументыПоступления(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&Организация                      КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)      КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК Организация,
	|	ВЫБОР 
	|		КОГДА НАЧАЛОПЕРИОДА(ДокументыПоступления.Дата, ДЕНЬ) > НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|			ТОГДА НАЧАЛОПЕРИОДА(ДокументыПоступления.Дата, ДЕНЬ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	КОНЕЦ                                          КАК ДатаОтражения
	|ИЗ
	|	втДокументыПоступления КАК ДокументыПоступления
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

// Переформировывает движения в НДС предъявленный и в Партии прочих расходов без перепроведения документа.
// Формирует задание на отражение в книге покупок.
// Сбрасывает статус отражения в регл. учете.
//
// Параметры:
//	ТаблицаИзменений - ТаблицаЗначений - см УчетНДСУП.НоваяТаблицаИзмененийРасчетов.
//
Процедура СформироватьДвиженияНДС(ТаблицаИзменений) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИзменений.Период КАК ДатаОтражения,
	|	ТаблицаИзменений.Документ КАК РасчетныйДокумент,
	|	ТаблицаИзменений.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВтРасчеты
	|ИЗ
	|	&ТаблицаИзменений КАК ТаблицаИзменений
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент,
	|	Контрагент
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактура.Ссылка КАК СчетФактура,
	|	СчетФактура.Дата КАК Дата,
	|	СчетФактура.Организация КАК Организация,
	|	Расчеты.ДатаОтражения КАК ДатаОтражения
	|ИЗ
	|	ВтРасчеты КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент КАК СчетФактура
	|		ПО Расчеты.РасчетныйДокумент = СчетФактура.ДокументОснование
	|			И Расчеты.Контрагент = СчетФактура.Поставщик
	|ГДЕ
	|	СчетФактура.Проведен
	|ИТОГИ ПО
	|	СчетФактура";
	
	Запрос.УстановитьПараметр("ТаблицаИзменений", ТаблицаИзменений);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.НДСПредъявленный.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.СчетФактура);
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииПрочихРасходов.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.СчетФактура);
			//++ НЕ УТ
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ОтражениеДокументовВРеглУчете.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.СчетФактура);
			ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Хозрасчетный.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.СчетФактура);
			//-- НЕ УТ
			
			Блокировка.Заблокировать();
			
			ДополнительныеСвойства = Новый Структура;
			ДополнительныеСвойства.Вставить("ЭтоНовый", Ложь);
			ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
			ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Выборка.СчетФактура, 
																				   ДополнительныеСвойства, 
																				   РежимПроведенияДокумента.Неоперативный);
			
			Движения = Новый Структура;
			
			НДСПредъявленный = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей();
			НДСПредъявленный.Отбор.Регистратор.Установить(Выборка.СчетФактура);
			Движения.Вставить("НДСПредъявленный", НДСПредъявленный);
			
			ПартииПрочихРасходов = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей();
			ПартииПрочихРасходов.Отбор.Регистратор.Установить(Выборка.СчетФактура);
			Движения.Вставить("ПартииПрочихРасходов", ПартииПрочихРасходов);
			
			//++ НЕ УТ
			ОтражениеДокументовВРеглУчете = РегистрыСведений.ОтражениеДокументовВРеглУчете.СоздатьНаборЗаписей();
			ОтражениеДокументовВРеглУчете.Отбор.Регистратор.Установить(Выборка.СчетФактура);
			Движения.Вставить("ОтражениеДокументовВРеглУчете", ОтражениеДокументовВРеглУчете);
			
			Хозрасчетный = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
			Хозрасчетный.Отбор.Регистратор.Установить(Выборка.СчетФактура);
			Движения.Вставить("Хозрасчетный", Хозрасчетный);
			//-- НЕ УТ
			
			Регистры = Новый Структура;
			Регистры.Вставить("НДСПредъявленный");
			Регистры.Вставить("ПартииПрочихРасходов");
			//++ НЕ УТ
			Регистры.Вставить("ОтражениеДокументовВРеглУчете");
			//-- НЕ УТ
			
			ИнициализироватьДанныеДокумента(Выборка.СчетФактура, ДополнительныеСвойства, Регистры); 
			УчетНДСУП.СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Ложь);
			ДоходыИРасходыСервер.ОтразитьПартииПрочихРасходов(ДополнительныеСвойства, Движения, Ложь);
			
			Движения.НДСПредъявленный.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
			Движения.ПартииПрочихРасходов.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);

			//++ НЕ УТ
			ВыборкаДатыОтражения = Выборка.Выбрать();
			Пока ВыборкаДатыОтражения.Следующий() Цикл
				РеглУчетПроведениеСервер.ДобавитьПараметрыВыборочнойРегистрацииКОтражениюВРеглУчете(
					ДополнительныеСвойства, 
					ВыборкаДатыОтражения.Организация,
					ВыборкаДатыОтражения.ДатаОтражения);
			КонецЦикла;
			//-- НЕ УТ
		
			Документ = Новый Структура("Ссылка, Движения, Дата, ДополнительныеСвойства", Выборка.СчетФактура, Движения, Выборка.Дата, ДополнительныеСвойства);
			//++ НЕ УТ
			РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(Документ, ДополнительныеСвойства, Движения, Ложь);
			//-- НЕ УТ
			
			Для каждого Движение Из Движения Цикл
				ПроведениеСерверУТ.ЗаполнитьДополнительныеСвойстваНабораПоДокументу(Документ, Движение.Значение);
				РегистрыНакопления.СебестоимостьТоваров.ИнициализироватьСохранениеДвиженийНабораЗаписейЗаПериод(
					Движение.Значение,
					ДополнительныеСвойства);
				Движение.Значение.Записать();
			КонецЦикла;
			//++ НЕ УТКА
			МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(Документ, ДополнительныеСвойства, Движения, Ложь);
			//-- НЕ УТКА
			
			ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(Документ);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = СтрШаблон(
					НСтр("ru = 'Не удалось выполнить отражение в учете НДС документа ""%1"" по причине: %2';
						|en = 'Cannot record VAT document ""%1"" in accounting due to: %2'"),
					Выборка.СчетФактура,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ВызватьИсключение ТекстСообщения;
		КонецПопытки
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура';
										|en = 'Tax invoice'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодтверждениеОплатыНДСВБюджет.СчетФактура КАК Документ,
	|	МАКСИМУМ(ПодтверждениеОплатыНДСВБюджет.СтрокаПлатежноРасчетныеДокументы) КАК СтрокаПлатежноРасчетныеДокументы
	|ПОМЕСТИТЬ ОплатаВБюджет
	|ИЗ
	|	РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
	|ГДЕ
	|	ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.Оплачено)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодтверждениеОплатыНДСВБюджет.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	СчетФактура.Номер КАК Номер,
	|	СчетФактура.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	ВЫБОР СчетФактура.ВидАгентскогоДоговора
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
	|			ТОГДА ЕСТЬNULL(ОплатаВБюджет.СтрокаПлатежноРасчетныеДокументы, """")
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
	|			ТОГДА ЕСТЬNULL(ОплатаВБюджет.СтрокаПлатежноРасчетныеДокументы, """")
	|		ИНАЧЕ СчетФактура.СтрокаПлатежноРасчетныеДокументы
	|	КОНЕЦ КАК СтрокаПоДокументу,
	|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактура.Поставщик.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Поставщик.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Поставщик
	|	КОНЕЦ КАК Организация,
	|	СчетФактура.Организация КАК Контрагент,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	СчетФактура.Организация.Префикс КАК Префикс,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИндексПодразделения,
	|	СчетФактура.Поставщик КАК Грузополучатель,
	|	СчетФактура.ДокументОснование.Номер КАК НомерПлатежноРасчетногоДокумента,
	|	СчетФактура.ДокументОснование.Дата КАК ДатаПлатежноРасчетногоДокумента,
	|	СчетФактура.Организация КАК Грузоотправитель,
	|	СчетФактура.Поставщик.КПП КАК КПППоставщика,
	|	СчетФактура.Организация.КПП КАК КПППокупателя,
	|	СчетФактура.Организация.ИНН КАК ИННПокупателя,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	&ВалютаРеглУчета КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаНаименованиеПолное,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКод,
	|	ЛОЖЬ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО СчетФактура.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОплатаВБюджет КАК ОплатаВБюджет
	|		ПО СчетФактура.Ссылка = ОплатаВБюджет.Документ
	|ГДЕ
	|	СчетФактура.Ссылка В(&МассивДокументов)
	|	И СчетФактура.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НоменклатураНаименование КАК НоменклатураНаименование,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	"""" КАК ХарактеристикаНаименование,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	"""" КАК НомерГТД,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК СтранаПроисхожденияКод,
	|	0 КАК Количество,
	|	0 КАК Цена,
	|	СУММА(ВложенныйЗапрос.Сумма - ВложенныйЗапрос.СуммаНДС) КАК СуммаБезНДС,
	|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК СуммаСНДС,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка КАК Ссылка,
	|		НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Содержание КАК СТРОКА(1))) <> """"
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Содержание КАК СТРОКА(100))
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Ссылка.ВидАгентскогоДоговора)
	|		КОНЕЦ КАК НоменклатураНаименование,
	|		ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТовары.СуммаСНДС КАК Сумма,
	|		ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И ТаблицаТовары.Ссылка.Проведен) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.НоменклатураНаименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru = 'счет-фактура';
																|en = 'tax invoice'"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатПоШапке          = МассивРезультатов[1];
	РезультатПоТабличнойЧасти = МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, СчетФактураНалоговыйАгент",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти, Истина);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

#КонецОбласти

#Область Прочее

Функция ВключитьНДСВПартииПрочихРасходов(ТаблицаОплаты, ТаблицаПоступления, Реквизиты)
	
	ТаблицаПартииПрочихРасходов = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаПартииПрочихРасходов.Колонки.Удалить("Активность");
	ТаблицаПартииПрочихРасходов.Колонки.Добавить("КорНаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	
	Если ТаблицаОплаты.Количество() = 0 Тогда
		Возврат ТаблицаПартииПрочихРасходов;
	КонецЕсли;
	
	Для Каждого СтрокаОплаты Из ТаблицаОплаты Цикл
		
		Если СтрокаОплаты.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
			СтавкаНДС = Перечисления.СтавкиНДС.НДС20;
		ИначеЕсли СтрокаОплаты.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
			СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
		ИначеЕсли СтрокаОплаты.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
			СтавкаНДС = Перечисления.СтавкиНДС.НДС10;
		Иначе
			СтавкаНДС = СтрокаОплаты.СтавкаНДС;
		КонецЕсли;
		
		СтрокиПоступления = ТаблицаПоступления.НайтиСтроки(Новый Структура("СтавкаНДС", СтавкаНДС));
		
		МассивСуммаОплаты = Новый Массив();
		Для Каждого СтрокаПоступления Из СтрокиПоступления Цикл
			МассивСуммаОплаты.Добавить(СтрокаПоступления.СуммаОплаты);
		КонецЦикла; 
		
		МассивНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СтрокаОплаты.НДС, МассивСуммаОплаты);
		МассивНДСУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СтрокаОплаты.НДСУпр, МассивСуммаОплаты);
		
		Индекс = 0;
		Для Каждого СтрокаПоступления Из СтрокиПоступления Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаПоступления.ДокументПоступленияРасходов) Тогда
				Индекс = Индекс + 1;
				Продолжить;
			КонецЕсли; 
			
			СтрокаРезультата = ТаблицаПартииПрочихРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаПоступления);
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаОплаты, "КорНаправлениеДеятельности");
			
			Если СтрокаПоступления.ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением Тогда
				// НДС не требуется привязывать к партии поступления, его необходимо распределить
				СтрокаРезультата.НДСРегл  = 0; 
				СтрокаРезультата.НДСУпр  = 0; 
			Иначе
				Если СтрокаОплаты.НДС <> 0 Тогда
					СтрокаРезультата.НДСРегл  = МассивНДС[Индекс]; 
				КонецЕсли;
				Если СтрокаОплаты.НДСУпр <> 0 Тогда
					СтрокаРезультата.НДСУпр  = МассивНДСУпр[Индекс]; 
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокаПоступления.ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением Тогда
				// Сформируем дополнительное движение по отправке НДС к распределению
				СтрокаРезультата = ТаблицаПартииПрочихРасходов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаПоступления, , "СтатьяРасходов, АналитикаРасходов");
				ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаОплаты, "КорНаправлениеДеятельности");
				Если СтрокаОплаты.НДС <> 0 Тогда
					СтрокаРезультата.НДСРегл  = МассивНДС[Индекс]; 
				КонецЕсли;
				Если СтрокаОплаты.НДСУпр <> 0 Тогда
					СтрокаРезультата.НДСУпр  = МассивНДСУпр[Индекс];
				КонецЕсли;
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла; 
		
	КонецЦикла;
	
	Возврат ТаблицаПартииПрочихРасходов;
	
КонецФункции

Функция РезультатЗапросаПоОплатамНалоговыйАгент(НачалоПериода, КонецПериода, Организация, РасчетныйДокумент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	ВЫБОР КОГДА Расчеты.Регистратор ССЫЛКА Документ.ВводОстатков ТОГДА
	|		Расчеты.РасчетныйДокумент
	|	ИНАЧЕ
	|		Расчеты.Регистратор
	|	КОНЕЦ КАК ДокументОснование,
	|	Расчеты.Период КАК ДатаДокументаОснования,
	|	Расчеты.ЗаказПоставщику КАК ОбъектРасчетов,
	|	ВЫРАЗИТЬ(АналитикаУчетаПоПартнерамДанные.Контрагент КАК Справочник.Контрагенты) КАК Контрагент,
	|	ВЫРАЗИТЬ(АналитикаУчетаПоПартнерамДанные.Договор КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	|	АналитикаУчетаПоПартнерамДанные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.Сумма КАК СуммаОплаты,
	|	Расчеты.СуммаРегл КАК Сумма
	|ПОМЕСТИТЬ Расчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерамДанные
	|		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПоПартнерамДанные.КлючАналитики
	|		  И АналитикаУчетаПоПартнерамДанные.Организация В (&МассивОрганизаций)
	|ГДЕ
	|	Расчеты.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (Расчеты.Регистратор = &РасчетныйДокумент
	|		ИЛИ &РасчетныйДокумент = НЕОПРЕДЕЛЕНО)
	|	И (Расчеты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|		ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ВводОстатков
	//++ НЕ УТ
	|		ИЛИ Расчеты.Регистратор ССЫЛКА Документ.АвансовыйОтчет
	|		ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	//-- НЕ УТ
	|		ИЛИ Расчеты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер)
	|	И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Контрагент,
	|	ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ДокументОснование,
	|	ВложенныйЗапрос.ДатаДокументаОснования,
	|	ВложенныйЗапрос.Договор,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.НаправлениеДеятельности,
	|	ВложенныйЗапрос.Валюта,
	|	СУММА(ВложенныйЗапрос.СуммаОплаты) КАК СуммаОплаты,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
	|ПОМЕСТИТЬ РасчетыНалоговогоАгента
	|ИЗ
	|	(ВЫБРАТЬ
	|		Расчеты.Период КАК Период,
	|		Расчеты.ДокументОснование КАК ДокументОснование,
	|		Расчеты.ДатаДокументаОснования КАК ДатаДокументаОснования,
	|		ЗаказПоставщику.Договор КАК Договор,
	|		Расчеты.Контрагент КАК Контрагент,
	|		Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		Расчеты.Валюта КАК Валюта,
	|		Расчеты.СуммаОплаты КАК СуммаОплаты,
	|		Расчеты.Сумма КАК Сумма
	|	ИЗ
	|		Расчеты КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|			ПО Расчеты.ОбъектРасчетов = ЗаказПоставщику.Ссылка
	|				И (ЗаказПоставщику.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.Период,
	|		Расчеты.ДокументОснование,
	|		Расчеты.ДатаДокументаОснования,
	|		ПриобретениеТоваровУслуг.Договор,
	|		Расчеты.Контрагент,
	|		Расчеты.НаправлениеДеятельности,
	|		Расчеты.Валюта,
	|		Расчеты.СуммаОплаты,
	|		Расчеты.Сумма
	|	ИЗ
	|		Расчеты КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|			ПО Расчеты.ОбъектРасчетов = ПриобретениеТоваровУслуг.Ссылка
	|				И (ПриобретениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.Период,
	|		Расчеты.ДокументОснование,
	|		Расчеты.ДатаДокументаОснования,
	|		ПриобретениеУслугПрочихАктивов.Договор,
	|		Расчеты.Контрагент,
	|		Расчеты.НаправлениеДеятельности,
	|		Расчеты.Валюта,
	|		Расчеты.СуммаОплаты,
	|		Расчеты.Сумма
	|	ИЗ
	|		Расчеты КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПрочихАктивов КАК ПриобретениеУслугПрочихАктивов
	|			ПО Расчеты.ОбъектРасчетов = ПриобретениеУслугПрочихАктивов.Ссылка
	|				И (ПриобретениеУслугПрочихАктивов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.Период,
	|		Расчеты.ДокументОснование,
	|		Расчеты.ДатаДокументаОснования,
	|		ДоговорыКонтрагентов.Ссылка,
	|		Расчеты.Контрагент,
	|		Расчеты.НаправлениеДеятельности,
	|		Расчеты.Валюта,
	|		Расчеты.СуммаОплаты,
	|		Расчеты.Сумма
	|	ИЗ
	|		Расчеты КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ПО Расчеты.ОбъектРасчетов = ДоговорыКонтрагентов.Ссылка
	|				И (ДоговорыКонтрагентов.УчетАгентскогоНДС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.Период,
	|		Расчеты.ДокументОснование,
	|		Расчеты.ДатаДокументаОснования,
	|		Расчеты.Договор,
	|		Расчеты.Контрагент,
	|		Расчеты.НаправлениеДеятельности,
	|		Расчеты.Валюта,
	|		Расчеты.СуммаОплаты,
	|		Расчеты.Сумма
	|	ИЗ
	|		Расчеты КАК Расчеты
	|	ГДЕ
	|		Расчеты.Договор.УчетАгентскогоНДС
	|		И ТИПЗНАЧЕНИЯ(Расчеты.ОбъектРасчетов) В (
	|				ТИП(Документ.СписаниеБезналичныхДенежныхСредств),
	|				ТИП(Документ.РасходныйКассовыйОрдер),
	|				ТИП(Документ.ПервичныйДокумент))
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ДокументОснование,
	|	ВложенныйЗапрос.ДатаДокументаОснования,
	|	ВложенныйЗапрос.Договор,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.НаправлениеДеятельности,
	|	ВложенныйЗапрос.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.СуммаОплаты) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК ДатаОплаты,
	|	Расчеты.ДокументОснование КАК ДокументОснование,
	|	Расчеты.ДатаДокументаОснования КАК ДатаДокументаОснования,
	|	Расчеты.Контрагент КАК Поставщик,
	|	Расчеты.Контрагент.ЮрФизЛицо КАК ЮрФизЛицо,
	|	Расчеты.Договор КАК Договор,
	|	ЕСТЬNULL(Расчеты.Договор.ВидАгентскогоДоговора, НЕОПРЕДЕЛЕНО) КАК ВидАгентскогоДоговора,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.СуммаОплаты КАК СуммаОплаты,
	|	Расчеты.Сумма КАК Сумма,
	|	ЕСТЬNULL(СчетФактураНалоговыйАгент.Ссылка, НЕОПРЕДЕЛЕНО) КАК СчетФактура,
	|	ЕСТЬNULL(СчетФактураНалоговыйАгент.Сумма, 0) КАК СуммаСчетаФактуры
	|ИЗ
	|	РасчетыНалоговогоАгента КАК Расчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|		ПО Расчеты.ДокументОснование = СчетФактураНалоговыйАгент.ДокументОснование
	|			И Расчеты.Контрагент = СчетФактураНалоговыйАгент.Поставщик
	|			И (Расчеты.Договор = СчетФактураНалоговыйАгент.Договор
	|				ИЛИ СчетФактураНалоговыйАгент.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|			И (СчетФактураНалоговыйАгент.Проведен)
	|ГДЕ
	|	Расчеты.Сумма - ЕСТЬNULL(СчетФактураНалоговыйАгент.Сумма, 0) <> 0";
	
	ОписаниеТиповД = Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("ПериодДень",ОписаниеТиповД);
	
	КонецПериода = ?(КонецПериода = '00010101', НачалоПериода, КонецПериода);
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      КонецПериода);
	Запрос.УстановитьПараметр("РасчетныйДокумент", РасчетныйДокумент);
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("МассивОрганизаций", Справочники.Организации.ДоступныеОрганизации());
	Иначе
		Запрос.УстановитьПараметр("МассивОрганизаций", ОбщегоНазначенияУТКлиентСервер.Массив(Организация));
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаПартийДокумента(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартийДокументаИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	УстановитьПараметрЗапросаНалогообложениеОрганизации(Запрос);
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ДокументыПоступления"" КАК ИмяТабличнойЧасти,
	|	ТаблицаДокументыПоступления.НомерСтроки	+ 1 / (ТаблицаРасшифровкаСуммы.НомерСтроки + 1) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Поставщик,
	|	РеквизитыДокумента.Поставщик КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументыПоступления.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			И ТаблицаДокументыПоступления.ЗакупкаПодДеятельность В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию),
	|																	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|																	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА &НалогообложениеОрганизации
	|		ИНАЧЕ ТаблицаДокументыПоступления.ЗакупкаПодДеятельность
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаРасшифровкаСуммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|		КОГДА ТаблицаРасшифровкаСуммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА ТаблицаРасшифровкаСуммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		ИНАЧЕ ТаблицаРасшифровкаСуммы.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА РеквизитыДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|		КОГДА РеквизитыДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|		КОГДА РеквизитыДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|	КОНЕЦ КАК ВидЦенности,
	|	0 КАК КодСтроки
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	втДокументыПоступления КАК ТаблицаДокументыПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК ТаблицаРасшифровкаСуммы
	|		ПО ТаблицаРасшифровкаСуммы.Ссылка = ТаблицаДокументыПоступления.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент КАК РеквизитыДокумента
	|		ПО РеквизитыДокумента.Ссылка = ТаблицаДокументыПоступления.Ссылка";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПартийДокументаИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаНалогообложениеОрганизации(Запрос)
	
	Если Запрос.Параметры.Свойство("НалогообложениеОрганизации") Тогда
		Возврат;
	КонецЕсли;
	
	НалогообложениеОрганизации = Справочники.Организации.НалогообложениеНДС(Запрос.Параметры.Организация, Запрос.Параметры.Период);
	Запрос.УстановитьПараметр("НалогообложениеОрганизации", НалогообложениеОрганизации);
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеДокументовНДС 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.СчетФактураНалоговыйАгент) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ налогового агента';
								|en = 'Tax invoice of tax agent'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры налогового агента';
								|en = 'Tax invoices of tax agent'");
	КонецЕсли;	
	
	КоличествоДокументов = ЕстьСчетаФактурыКОформлению(Параметры);
	
	Если КоличествоДокументов = 0 Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураНалоговыйАгент());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураНалоговыйАгент());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураНалоговыйАгент() Экспорт
	
	Возврат "Документ.СчетФактураНалоговыйАгент.Форма.ФормаРабочееМесто";
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.СчетФактураНалоговыйАгент";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Ссылка");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураНалоговыйАгент.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|ГДЕ
	|	СчетФактураНалоговыйАгент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)"
	);
	
	Данные = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.СчетФактураНалоговыйАгент";
	
	НовыеРеквизиты = Новый Массив;
	НовыеРеквизиты.Добавить("Партнер");
	НовыеРеквизиты.Добавить("Подразделение");
	НовыеРеквизиты.Добавить("ХозяйственнаяОперация");
	НовыеРеквизиты.Добавить("НаправлениеДеятельности");
	РеквизитыСтрокой = СтрСоединить(НовыеРеквизиты, ",");
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбновляемыхДанных", ОбновляемыеДанные);
	
	Запрос.Текст =
	"ВЫБРАТЬ ТаблицаДанных.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТОбъектыДляОбработки
	|ИЗ &ТаблицаОбновляемыхДанных КАК ТаблицаДанных;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом) КАК ХозяйственнаяОперация,
	|	ЕСТЬNULL(ДанныеРеестра.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ДанныеРеестра.Подразделение, НЕОПРЕДЕЛЕНО) КАК Подразделение,
	|	ЕСТЬNULL(ДанныеРеестра.Партнер, НЕОПРЕДЕЛЕНО) КАК Партнер
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент КАК ДанныеДокумента
	|	ПО ОбъектыДляОбработки.Ссылка = ДанныеДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|	ПО ДанныеДокумента.ДокументОснование = ДанныеРеестра.Ссылка
	|		И НЕ ДанныеРеестра.ДополнительнаяЗапись
	|";
	
	ОтборОснования = Новый Структура("ДокументОснование");
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДокументов = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокументов.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(
				ВыборкаДокументов.Ссылка, ВыборкаДокументов.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаДокументов, РеквизитыСтрокой);
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект,,, РежимЗаписиДокумента.Запись);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), ВыборкаДокументов.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
