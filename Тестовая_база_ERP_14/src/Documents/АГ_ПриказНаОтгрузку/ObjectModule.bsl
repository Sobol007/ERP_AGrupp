#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#Область ПрограммныйИнтерфейс

	

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.АГ_ПриказНаОтгрузку.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ОтразитьТоварыКДоставке(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтразитьТоварыКДоставке(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаАГ_ТоварыКДоставке;

	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	НаборЗаписей = Движения.АГ_ТоварыКДоставке;
	НаборЗаписей.Записывать = Истина;
	НаборЗаписей.Загрузить(Таблица);

КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;

	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда

		Массив.Добавить(Движения.АГ_ТоварыКДоставке);
	
	КонецЕсли;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

Процедура ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.ПараметрыОбработчикаОбновления.РежимВыполнения) Тогда 
		Возврат;
	КонецЕсли;
	
	ЕстьРегистрыСКонтролемИзменений = Ложь;
	
	Если Объект.ДополнительныеСвойства.ДляПроведения.РегистрыДляКонтроля.Количество() > 0 Тогда
		ЕстьРегистрыСКонтролемИзменений = Истина;
	Иначе
		Для Каждого ДвигаемыйРегистр Из Объект.Движения Цикл
			Если ДвигаемыйРегистр.ДополнительныеСвойства.Свойство("РассчитыватьИзменения")
				И ДвигаемыйРегистр.ДополнительныеСвойства.РассчитыватьИзменения Тогда
				ЕстьРегистрыСКонтролемИзменений = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ЕстьРегистрыСКонтролемИзменений Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеТаблиц    = Объект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	ПакетЗапросов   = Новый Запрос;
	МассивКонтролей = Новый Массив;
	ТекстЗапроса    = "";
	
	МассивКонтролей.Добавить(Врег("АГ_ТоварыКДоставке"));
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ТоварыКОтгрузкеОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыКОтгрузкеОстатки.Номенклатура.ЕдиницаИзмерения	КАК ЕдиницаИзмерения,
	|	ТоварыКОтгрузкеОстатки.Характеристика КАК Характеристика,
	|	ТоварыКОтгрузкеОстатки.Склад КАК Склад,
	|	ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток-ЕСТЬNULL(АГ_ТоварыКДоставкеОбороты.КоличествоПриход,0) КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(, 
	|			(ДокументОтгрузки, Склад, Номенклатура, Характеристика) В
	|				(ВЫБРАТЬ
	|					Таблица.Ссылка.Заказ,
	|					Таблица.Ссылка.Склад,
	|					Таблица.Номенклатура,
	|					Таблица.Характеристика
	|				ИЗ
	|					Документ.АГ_ПриказНаОтгрузку.Товары КАК Таблица ГДЕ Таблица.Ссылка=&Ссылка)
	|			) КАК ТоварыКОтгрузкеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АГ_ТоварыКДоставке.Обороты(, , , 
	|			(ЗаказНаДоставку.Заказ,Склад,Номенклатура,Характеристика) В
	|				(ВЫБРАТЬ
	|					Таблица.Ссылка.Заказ,
	|					Таблица.Ссылка.Склад,
	|					Таблица.Номенклатура,
	|					Таблица.Характеристика
	|				ИЗ
	|					Документ.АГ_ПриказНаОтгрузку.Товары КАК Таблица ГДЕ Таблица.Ссылка=&Ссылка)
	|			) КАК АГ_ТоварыКДоставкеОбороты
	|		ПО (АГ_ТоварыКДоставкеОбороты.Номенклатура = ТоварыКОтгрузкеОстатки.Номенклатура
	|				И ТоварыКОтгрузкеОстатки.Характеристика = АГ_ТоварыКДоставкеОбороты.Характеристика
	|				И ТоварыКОтгрузкеОстатки.Склад = АГ_ТоварыКДоставкеОбороты.Склад)
	|ГДЕ
	|	ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток-ЕСТЬNULL(АГ_ТоварыКДоставкеОбороты.КоличествоПриход,0) < 0;
	|///////////////////////////////////////////////////////////////////
	|";
	
	Если МассивКонтролей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ПакетЗапросов.УстановитьПараметр("Ссылка",Ссылка);
	ПакетЗапросов.Текст = ТекстЗапроса;
	ПакетЗапросов.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	МассивРезультатов = ПакетЗапросов.ВыполнитьПакет();
	
	Итератор = -1;
	Для Каждого Результат Из МассивРезультатов Цикл
		
		Итератор = Итератор + 1;
		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяКонтроля = МассивКонтролей[Итератор];
		
		Если ИмяКонтроля = Врег("АГ_ТоварыКДоставке") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструАГ_ТоварыКДоставке(Объект, Отказ, Результат);
			
		Иначе
			
			ВызватьИсключение НСтр("ru = 'Ошибка контроля проведения!'");
			
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		
		Если Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ТекстСообщения = НСтр("ru = 'Проведение не выполнено %ПредставлениеОбъекта%'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Отмена проведения не выполнена %ПредставлениеОбъекта%'");
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеОбъекта%", Строка(Объект));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструАГ_ТоварыКДоставке(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%
	|Превышение товаров в приказах над товарами к доставке по заказу  %Заказ% со склада %Склад% на %Количество% %Единица%'");
		
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
									НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Заказ%", Строка(Выборка.ДокументОтгрузки));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",      Строка(Выборка.Склад));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры


#КонецОбласти	

#КонецЕсли


