#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ПриЧтенииСозданииНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьСлужебныеРеквизитыПоНоменклатуре();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	АГ_ОбновитьПредставленияТаблицТоваров();
	
	УстановитьВидимостьДоступность();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НеВыполнятьПроверкуПередЗаписью Тогда
		НеВыполнятьПроверкуПередЗаписью = Ложь;
		Возврат;
	КонецЕсли;

	ОбщегоНазначенияУТКлиент.ОбработатьЗаписьОбъектаВФорме(ЭтотОбъект, ПараметрыЗаписи, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ПринудительноЗакрытьФорму = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
	ОбщегоНазначенияУТКлиент.ВыполнитьДействияПослеЗаписи(ЭтаФорма, Объект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура АГ_ВариантТолерансаПриИзменении(Элемент)
	Элементы.АГ_Толеранс.Доступность = (Объект.АГ_ВариантТолеранса = 1);
	Если Объект.АГ_ВариантТолеранса = 0 Тогда
		Объект.АГ_Толеранс = 0;
		АГ_ПересчитатьКоличествоСТолерансомВТЧ();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АГ_ТолерансПриИзменении(Элемент)
	АГ_ПересчитатьКоличествоСТолерансомВТЧ();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоУпаковокПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("АГ_ПересчитатьКоличествоСТолерансом", Объект.АГ_Толеранс);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ОстатокПоЗаказу	= 0;
	СтрокиОстатков	= АГ_ОстаткиТоваровКОтгрузке.НайтиСтроки(Новый Структура("Номенклатура,Характеристика",ТекущаяСтрока.Номенклатура,ТекущаяСтрока.Характеристика));
	Если СтрокиОстатков.Количество()>0 Тогда
		ОстатокПоЗаказу	= СтрокиОстатков[0].Количество;
	КонецЕсли;	
	
	ТекущаяСтрока.АГ_ОсталосьОтгрузить	= ОстатокПоЗаказу-ТекущаяСтрока.КоличествоУпаковок;
	
КонецПроцедуры

&НаКлиенте
Процедура АГ_УслугиКоличествоУпаковокПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.АГ_Услуги.ТекущиеДанные;
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма, Истина);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ОчиститьСообщения();
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	ЗаполнитьСлужебныеРеквизитыПоНоменклатуре();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();

	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуре()
	
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",
											Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.Товары,ПараметрыЗаполненияРеквизитов);
	
	Для Каждого СтрокаТовары ИЗ Объект.Товары Цикл
		
		ОстатокПоЗаказу	= 0;
		СтрокиОстатков	= АГ_ОстаткиТоваровКОтгрузке.НайтиСтроки(Новый Структура("Номенклатура,Характеристика",СтрокаТовары.Номенклатура,СтрокаТовары.Характеристика));
		Если СтрокиОстатков.Количество()>0 Тогда
			ОстатокПоЗаказу	= СтрокиОстатков[0].Количество;
		КонецЕсли;	
		
		СтрокаТовары.АГ_ОсталосьОтгрузить	= ОстатокПоЗаказу-СтрокаТовары.КоличествоУпаковок;

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗакрытьФорму()
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура АГ_ПересчитатьКоличествоСТолерансомВТЧ()
	
	Для Каждого ТекущаяСтрока Из Объект.Товары Цикл
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("АГ_ПересчитатьКоличествоСТолерансом", Объект.АГ_Толеранс);
		ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура АГ_ЗаполнитьСлужебныеРеквизитыТаблицыТовары()
	
	АГ_КоличествоТоваров = 0;
	АГ_КоличествоУслуг = 0;	
	
	Для Каждого ТекущаяСтрокаТоваров Из Объект.Товары Цикл
		Если ТекущаяСтрокаТоваров.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга")
			Или ТекущаяСтрокаТоваров.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа")
			Или ТекущаяСтрокаТоваров.АГ_ВариантРазмещенияВТЧ = 2 Тогда
			АГ_КоличествоУслуг = АГ_КоличествоУслуг + 1;
			ТекущаяСтрокаТоваров.АГ_НомерСтроки = АГ_КоличествоУслуг;
			ТекущаяСтрокаТоваров.АГ_ВариантРазмещенияВТЧ = 2;
		Иначе 
			АГ_КоличествоТоваров = АГ_КоличествоТоваров + 1;
			ТекущаяСтрокаТоваров.АГ_НомерСтроки = АГ_КоличествоТоваров;
			ТекущаяСтрокаТоваров.АГ_ВариантРазмещенияВТЧ = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура АГ_ОбновитьПредставленияТаблицТоваров()
	АГ_ЗаполнитьОстаткиТоваровКОтгрузке();
	ЗаполнитьСлужебныеРеквизитыПоНоменклатуре();
	АГ_ЗаполнитьСлужебныеРеквизитыТаблицыТовары();
	АГ_УстановитьЗаголовкиСтраницТоваров();
	АГ_УстановитьОтборыТаблицТоваров();
	
КонецПроцедуры

&НаСервере
Процедура АГ_ЗаполнитьОстаткиТоваровКОтгрузке()
	
	АГ_ОстаткиТоваровКОтгрузке.Очистить();
	
	Запрос   = Новый Запрос;
	ТекстЗапроса	= 
	"ВЫБРАТЬ
	|	ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ТоварыКОтгрузкеОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыКОтгрузкеОстатки.Номенклатура.ЕдиницаИзмерения	КАК ЕдиницаИзмерения,
	|	ТоварыКОтгрузкеОстатки.Характеристика КАК Характеристика,
	|	ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток-ЕСТЬNULL(АГ_ТоварыКДоставкеОбороты.КоличествоПриход,0) КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(, 
	|			ДокументОтгрузки = &Заказ И Склад=&Склад) КАК ТоварыКОтгрузкеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АГ_ТоварыКДоставке.Обороты(, , , 
	|			ЗаказНаДоставку.Заказ= &Заказ И Склад=&Склад И ЗаказНаДоставку<>&Ссылка) КАК АГ_ТоварыКДоставкеОбороты
	|		ПО (АГ_ТоварыКДоставкеОбороты.Номенклатура = ТоварыКОтгрузкеОстатки.Номенклатура
	|				И ТоварыКОтгрузкеОстатки.Характеристика = АГ_ТоварыКДоставкеОбороты.Характеристика
	|				И ТоварыКОтгрузкеОстатки.Склад = АГ_ТоварыКДоставкеОбороты.Склад)";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Заказ",Объект.Заказ);
	Запрос.УстановитьПараметр("Склад",Объект.Склад);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	
	АГ_ОстаткиТоваровКОтгрузке.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

&НаКлиенте
Процедура АГ_УстановитьЗаголовкиСтраницТоваров()
	
	Если АГ_КоличествоТоваров > 0 Тогда
		Элементы.ГруппаТовары.Заголовок = "Товары (" + АГ_КоличествоТоваров + ")";
	Иначе
		Элементы.ГруппаТовары.Заголовок = "Товары";
	КонецЕсли;
	
	Если АГ_КоличествоУслуг > 0 Тогда
		Элементы.ГруппаУслуги.Заголовок = "Услуги (" + АГ_КоличествоУслуг + ")";
	Иначе
		Элементы.ГруппаУслуги.Заголовок = "Услуги";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АГ_УстановитьОтборыТаблицТоваров()
	
	Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("АГ_ВариантРазмещенияВТЧ", 0);
	Элементы.АГ_Услуги.ОтборСтрок = Новый ФиксированнаяСтруктура("АГ_ВариантРазмещенияВТЧ", 2);
	
КонецПроцедуры

#КонецОбласти



