
&НаКлиенте
Процедура ПрикрепитьФайлДанных(Команда)

	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выбор файла";
	
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ПрикрепитьФайлДанныхЗавершение", ЭтотОбъект, Новый Структура("ДиалогОткрытияФайла", ДиалогОткрытияФайла)));
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьФайлДанныхЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДиалогОткрытияФайла = ДополнительныеПараметры.ДиалогОткрытияФайла;
		
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		
		ВыбФайл = ДиалогОткрытияФайла.ПолноеИмяФайла;
		Файл = Новый ДвоичныеДанные(ВыбФайл);
		Адрес = ПоместитьВоВременноеХранилище(Файл, ЭтаФорма.УникальныйИдентификатор);
		
		ПрикрепитьФайлДанныхНаСервере(Адрес);
		
		ИмяФайла = Прав(ВыбФайл, СтрДлина(ВыбФайл) - СтрДлина(ДиалогОткрытияФайла.Каталог));	
		Объект.ФайлДанных = ИмяФайла;
		Объект.ДатаФайлаДанных = ТекущаяДата();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПрикрепитьФайлДанныхНаСервере(Адрес)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДокОбъект.ХранилищеФайла = Новый ХранилищеЗначения(ДвоичныеДанные);
	ДокОбъект.Записать();	
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДанных(Команда)
	
	ФайлПолученный = ОткрытьФайлДанныхНаСервере();
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлПолученный);
	АдресФайла = Неопределено;

	НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ОткрытьФайлДанныхЗавершение", ЭтотОбъект, Новый Структура("ДвоичныеДанные", ДвоичныеДанные)));

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДанныхЗавершение(ИмяКаталогаВременныхФайлов, ДополнительныеПараметры) Экспорт
	
	ДвоичныеДанные = ДополнительныеПараметры.ДвоичныеДанные;

	АдресФайла = ИмяКаталогаВременныхФайлов + Объект.ФайлДанных;
	ДвоичныеДанные.Записать(АдресФайла);
	ЗапуститьПриложение(АдресФайла);

КонецПроцедуры

&НаСервере
Функция ОткрытьФайлДанныхНаСервере()
	
	АдресФайла = КаталогВременныхФайлов() + Объект.ФайлДанных;
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДвоичныеДанные = ДокОбъект.ХранилищеФайла.получить();
	текФайл = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
	Возврат текФайл;
КонецФункции

&НаКлиенте
Процедура ДобавитьФайл(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Для добавление файлов необходимо записать объект. Записать?'");
		Ответ = Неопределено;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьФайлЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ДобавитьФайлПроцедура();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлПроцедура()
    
    ИдентификаторФайла = Новый УникальныйИдентификатор;
     
    РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайлЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Записать();
    Иначе
        Возврат
    КонецЕсли;
    
    
    ДобавитьФайлПроцедура();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_Файл" Тогда
		
		Модифицированность = Истина;
		Если ТипЗнч(Источник) = Тип("Массив") Тогда
			Для Каждого СтрокаФайла из Источник цикл
				НоваяСтрокаТЧ = Объект.ПрикрепленныеДокументы.Добавить(); 
				НоваяСтрокаТЧ.НаименованиеФайла = СтрокаФайла;				
			КонецЦикла;
		иначе
			НоваяСтрокаТЧ = Объект.ПрикрепленныеДокументы.Добавить(); 
			НоваяСтрокаТЧ.НаименованиеФайла = Источник;
		КонецЕсли;		
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	ПолученныйФайл = ПолучитьСтруктуруКлиент();
	РаботаСФайламиКлиент.ОткрытьФайл(ПолученныйФайл,Истина);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруКлиент()
	
	ПолученныйФайл =  РаботаСФайламиКлиент.ДанныеФайла(Элементы.ПрикрепленныеДокументы.ТекущиеДанные.НаименованиеФайла,Объект.Ссылка.УникальныйИдентификатор());
	
	Возврат ПолученныйФайл;
	
КонецФункции

&НаКлиенте
Процедура СохранитьФайл(Команда)
	
	ПолученныйФайл = ПолучитьСтруктуруКлиент();

	РаботаСФайламиКлиент.СохранитьФайлКак(ПолученныйФайл);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	УдалитьФайлСервер(Элементы.ПрикрепленныеДокументы.ТекущиеДанные.НаименованиеФайла);

	Объект.ПрикрепленныеДокументы.Удалить(Элементы.ПрикрепленныеДокументы.ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура УдалитьФайлСервер(ФайлУдаления)
	
	ПолученныйФайл = ФайлУдаления.ПолучитьОбъект();
	ПолученныйФайл.Удалить();
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#Область ОбработчикиКомандФормы
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
