
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	ВнеоборотныеАктивы.ПроверитьСоответствиеДатыВерсииУчета(ЭтотОбъект, Ложь, Отказ);
	
	СтруктураИзменяемыхРеквизитов = СтруктураИзменяемыхРеквизитов();
	Для Каждого КлючИЗначение Из СтруктураИзменяемыхРеквизитов Цикл
		Если Не ЭтотОбъект[КлючИЗначение.Ключ+"Флаг"] Тогда
			НепроверяемыеРеквизиты.Добавить(КлючИЗначение.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	НачислятьАмортизацию = (ПорядокУчета=Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию);
	АмортизацияПоНаработке = (МетодНачисленияАмортизации=Перечисления.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции);
	
	Если НачислятьАмортизацию И Не АмортизацияПоНаработке Тогда
		НепроверяемыеРеквизиты.Добавить("ОбъемНаработки");
	КонецЕсли;
	
	Если Не НачислятьАмортизацию Тогда
		НепроверяемыеРеквизиты.Добавить("МетодНачисленияАмортизации");
		НепроверяемыеРеквизиты.Добавить("СчетАмортизации");
		НепроверяемыеРеквизиты.Добавить("СтатьяРасходов");
		НепроверяемыеРеквизиты.Добавить("АналитикаРасходов");
		НепроверяемыеРеквизиты.Добавить("ПоказательНаработки");
		НепроверяемыеРеквизиты.Добавить("ОбъемНаработки");
	КонецЕсли;
	
	Если Не НачислятьАмортизацию Или АмортизацияПоНаработке Тогда
		НепроверяемыеРеквизиты.Добавить("СрокИспользования");
	КонецЕсли;
	
	Если Не НачислятьАмортизацию Или МетодНачисленияАмортизации<>Перечисления.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка Тогда
		НепроверяемыеРеквизиты.Добавить("КоэффициентУскорения");
	КонецЕсли;
	
	Если НачислятьАмортизацию Тогда
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			ЭтотОбъект, , НепроверяемыеРеквизиты, Отказ);
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	Если ТипОснования = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
		ЗаполнитьПоНематериальномуАктиву(ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТекущиеЗначения.ПорядокУчета КАК ПорядокУчета,
		|	ТекущиеЗначения.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ТекущиеЗначения.ЛиквидационнаяСтоимостьПредставления КАК ЛиквидационнаяСтоимостьПредставления,
		|	ТекущиеЗначения.СчетУчета КАК СчетУчета,
		|	ТекущиеЗначения.СчетАмортизации КАК СчетАмортизации,
		|	ТекущиеЗначения.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
		|	ТекущиеЗначения.СрокИспользования КАК СрокИспользования,
		|	ТекущиеЗначения.ОбъемНаработки КАК ОбъемНаработки,
		|	ТекущиеЗначения.КоэффициентУскорения КАК КоэффициентУскорения,
		|	ТекущиеЗначения.СтатьяРасходов КАК СтатьяРасходов,
		|	ТекущиеЗначения.АналитикаРасходов КАК АналитикаРасходов
		|ИЗ
		|	РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(
		|			&Дата,
		|			НематериальныйАктив = &НематериальныйАктив
		|				И Регистратор <> &ТекущийРегистратор) КАК ТекущиеЗначения"
	);
	Запрос.УстановитьПараметр("Дата", Новый Граница(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("НематериальныйАктив", НематериальныйАктив);
	Запрос.УстановитьПараметр("ТекущийРегистратор", Ссылка);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		СтруктураИзменяемыхРеквизитов = СтруктураИзменяемыхРеквизитов();
		Для Каждого КлючИЗначение Из СтруктураИзменяемыхРеквизитов Цикл
			Если Не ЭтотОбъект[КлючИЗначение.Ключ+"Флаг"] Тогда
				ЭтотОбъект[КлючИЗначение.Ключ] = Выборка[КлючИЗначение.Ключ];
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
		Документы.ИзменениеПараметровНМАМеждународныйУчет.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства, "РеестрДокументов,ДокументыПоНМА");
		РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
		РегистрыСведений.ДокументыПоНМА.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ОчиститьЗаписатьДвижения(Движения, "Международный, НематериальныеАктивыМеждународныйУчет");
	
	ПроверитьВозможностьИзмененияПараметров(Отказ);
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ИзменениеПараметровНМАМеждународныйУчет.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСерверУТ.ЗагрузитьТаблицыДвижений(ДополнительныеСвойства, Движения);
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	РегистрыСведений.ДокументыПоНМА.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СтруктураИзменяемыхРеквизитов()
	
	Возврат Новый Структура(
		"ПорядокУчета, ЛиквидационнаяСтоимость, ЛиквидационнаяСтоимостьПредставления,
		|СчетУчета, СчетАмортизации,
		|МетодНачисленияАмортизации, СрокИспользования, ОбъемНаработки, КоэффициентУскорения,
		|СтатьяРасходов, АналитикаРасходов"
	);
	
КонецФункции

Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

Процедура ПроверитьВозможностьИзмененияПараметров(Отказ=Ложь)
	
	ТребуемоеСостояние = Новый Структура("Организация, Состояние", Организация, Перечисления.ВидыСостоянийНМА.ПринятКУчету);
	ПараметрыПроверки = Новый Структура("ДатаСведений, ИсключаемыйРегистратор", Дата, Ссылка);
	Ошибки = МеждународныйУчетВнеоборотныеАктивы.ПроверитьСостояниеВнеоборотныхАктивов(
		НематериальныйАктив, ТребуемоеСостояние, ПараметрыПроверки);
	Если Ошибки=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из Ошибки Цикл
		Объект = КлючИЗначение.Ключ;
		Данные = КлючИЗначение.Значение;
		
		ТекстОшибки = НСтр("ru = 'Учетные данные нематериального актива ""%1"" не могут быть изменены.';
							|en = 'Accounting data of the ""%1"" intangible asset cannot be changed.'") + Символы.ПС;
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%1", Объект);
		Если Данные.Состояние <> Перечисления.ВидыСостоянийНМА.ПринятКУчету Тогда
			ТекстОшибки = ТекстОшибки
				+ НСтр("ru = 'Объект не принят к учету';
						|en = 'The object is not entered in the books'");
		Иначе
			ТекстОшибки = ТекстОшибки
				+ СтрЗаменить(НСтр("ru = 'Объект принят к учету в организации ""%1""';
									|en = 'The object is entered in the books in company ""%1""'"), "%1", Данные.Организация);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			"НематериальныйАктив",
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоНематериальномуАктиву(Основание)
	
	Организация = МеждународныйУчетВнеоборотныеАктивы.ОрганизацияВКоторойНМАПринятКУчету(Основание);
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Нематериальный актив ""%1"" не принят к учету.';
										|en = 'The ""%1"" intangible asset is not entered in the books.'"), Строка(Основание));
		ВызватьИсключение ТекстСообщения;
	КонецЕсли; 
	
	НематериальныйАктив = Основание;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли