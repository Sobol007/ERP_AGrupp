#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЧтениеИзВременногоХранилища();
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ТекущийДоговорКонтрагента = РЭЙ_СлужебныйСервер.ПолучитьДоговорКонтрагентаПоРасчетномуДокументу(ДокументОбъект);
	
	ВладелецТолькоПросмотр = Ложь;
	Если ЭтаФорма.Параметры.Свойство("ВладелецТолькоПросмотр") Тогда 
		ВладелецТолькоПросмотр = ЭтаФорма.Параметры.ВладелецТолькоПросмотр;		
	КонецЕсли;	
	
	Если Не ВладелецТолькоПросмотр Тогда 
		 
		новСчетОрганизацииВЭД = РЭЙ_СлужебныйСервер.ПолучитьБанковскийСчетВалютныйПоТиповому(Объект.БанковскийСчет);
		Если Объект.РЭЙ_СчетОрганизацииВЭД <> новСчетОрганизацииВЭД Тогда
			Объект.РЭЙ_СчетОрганизацииВЭД = новСчетОрганизацииВЭД;
			ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_СчетОрганизацииВЭД);
		КонецЕсли;
		
		новСчетКонтрагентаВЭД = РЭЙ_СлужебныйСервер.ПолучитьБанковскийСчетВалютныйПоТиповому(Объект.БанковскийСчетКонтрагента);
		Если Объект.РЭЙ_СчетКонтрагентаВЭД <> новСчетКонтрагентаВЭД Тогда
			Объект.РЭЙ_СчетКонтрагентаВЭД = новСчетКонтрагентаВЭД;
			ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_СчетКонтрагентаВЭД);
		КонецЕсли;
		
		Если Объект.РЭЙ_КорСчетБанкаКонтрагента.Пустая() Тогда
			Если ЗначениеЗаполнено(Объект.РЭЙ_СчетКонтрагентаВЭД) Тогда
				новКорСчетБанкаКонтрагента = ПолучитьКорСчетБанкаПосредника();
				Если ЗначениеЗаполнено(новКорСчетБанкаКонтрагента) Тогда
					Объект.РЭЙ_КорСчетБанкаКонтрагента = новКорСчетБанкаКонтрагента;
				КонецЕсли;
			КонецЕСли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.РЭЙ_ВидПлатежаВЭД) Тогда
			ВидПлатежаПоУмолчанию = ХранилищеОбщихНастроек.Загрузить("ркЗПВВидПлатежа");
			ВидПлатежаБылСохранен = ВидПлатежаПоУмолчанию = "" Или Элементы.РЭЙ_ВидПлатежаВЭД.СписокВыбора.НайтиПоЗначению(ВидПлатежаПоУмолчанию) <> Неопределено;
			
			Если ВидПлатежаБылСохранен Тогда
				Объект.РЭЙ_ВидПлатежаВЭД = ВидПлатежаПоУмолчанию;
			Иначе
				Объект.РЭЙ_ВидПлатежаВЭД = "SWIFT";
			КонецЕсли;
			
			ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_ВидПлатежаВЭД);
		КонецЕсли;
		
		Если Объект.Свойство("Ответственный") Тогда
			Если Объект["Ответственный"].Пустая() Тогда
				Объект["Ответственный"] = Пользователи.ТекущийПользователь();
				ИзменениеМодифицированостиПриСозданииНаСервере(Объект["Ответственный"]);	
			КонецЕсли;
		КонецЕсли;

		Руководители = РЭЙ_Универсализация.ПолучитьРуководителей(Объект.Организация, Объект.Дата);
		
		Если Объект.РЭЙ_Руководитель.Пустая() Тогда
			Объект.РЭЙ_Руководитель = Руководители.Руководитель;
			ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_Руководитель);
		КонецЕсли; 
		
		Если Объект.РЭЙ_ГлавныйБухгалтер.Пустая() Тогда
			Объект.РЭЙ_ГлавныйБухгалтер = Руководители.ГлавныйБухгалтер;
			ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_ГлавныйБухгалтер);
		КонецЕсли;
		
		Если Объект.РЭЙ_УполномоченныйПоПереводу.Пустая() Тогда
			Если Объект.Свойство("Ответственный") Тогда
				Объект.РЭЙ_УполномоченныйПоПереводу = РЭЙ_СлужебныйСервер.ФизЛицоПользователя(Объект.Ответственный);
			Иначе
				Объект.РЭЙ_УполномоченныйПоПереводу = РЭЙ_СлужебныйСервер.ФизЛицоПользователя(Пользователи.ТекущийПользователь());
			КонецЕсли;
			
			Если Не Объект.РЭЙ_УполномоченныйПоПереводу.Пустая() Тогда
				УполномоченныйПоПереводуПриИзмененииНаСервере();
			КонецЕсли;
			
			ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_УполномоченныйПоПереводу);
		КонецЕсли;
		
		старыйКонтрактВЭД = Объект.РЭЙ_КонтрактВЭД;
		новКонтрактВЭД = РЭЙ_СлужебныйСервер.ПолучитьКонтрактВЭДПоДоговоруКонтрагента(ТекущийДоговорКонтрагента);
		Если Объект.РЭЙ_КонтрактВЭД <> новКонтрактВЭД Тогда
			Объект.РЭЙ_КонтрактВЭД = новКонтрактВЭД;
			ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_КонтрактВЭД);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.РЭЙ_КонтрактВЭД) Тогда
			Если Не ЗначениеЗаполнено(Объект.РЭЙ_ПаспортСделки) Или Объект.РЭЙ_ПаспортСделки.КонтрактВЭД <> Объект.РЭЙ_КонтрактВЭД  Тогда
				Объект.РЭЙ_ПаспортСделки = РЭЙ_СлужебныйСервер.ПолучитьПаспортСделкиПоКонтрактуВЭД(Объект.РЭЙ_КонтрактВЭД);
				ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_ПаспортСделки);
			КонецЕсли;
		КонецЕсли;
		
		Если ПустаяСтрока(Объект.РЭЙ_НазначениеПлатежаАнгл) Тогда
			Объект.РЭЙ_НазначениеПлатежаАнгл = "Payment for " + СформироватьНаименованиеКонтрактаВЭДНаАнглийском(Объект.РЭЙ_КонтрактВЭД);
			ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_НазначениеПлатежаАнгл);
		Иначе
			Если ЗначениеЗаполнено(старыйКонтрактВЭД) 
				И ЗначениеЗаполнено(Объект.РЭЙ_КонтрактВЭД)
				И старыйКонтрактВЭД <> Объект.РЭЙ_КонтрактВЭД Тогда
				
				староеНаименованиеКонтрактаВЭД = СформироватьНаименованиеКонтрактаВЭДНаАнглийском(старыйКонтрактВЭД);
				новоеНаименованиеКонтрактаВЭД = СформироватьНаименованиеКонтрактаВЭДНаАнглийском(Объект.РЭЙ_КонтрактВЭД);
				
				Если Не ПустаяСтрока(староеНаименованиеКонтрактаВЭД) И Не ПустаяСтрока(новоеНаименованиеКонтрактаВЭД) Тогда
					Объект.РЭЙ_НазначениеПлатежаАнгл = СтрЗаменить(Объект.РЭЙ_НазначениеПлатежаАнгл, староеНаименованиеКонтрактаВЭД, новоеНаименованиеКонтрактаВЭД);
					ИзменениеМодифицированостиПриСозданииНаСервере(Объект.РЭЙ_НазначениеПлатежаАнгл);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтруктураКурсаЦБ = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Объект.Дата, Новый Структура("Валюта", Объект.Валюта));
		КурсЦБ = СтруктураКурсаЦБ.Курс / СтруктураКурсаЦБ.Кратность;
		Если КурсЦБ <> 0 И КурсЦБ <> Объект.РЭЙ_КурсВЭД Тогда
			Объект.РЭЙ_КурсВЭД = КурсЦБ;
		КонецЕсли;
	КонецЕсли;
		
	УстановитьВидимостьНаСервере();
	
	// Установить доступность формы с учетом даты запрета редактирования	
	ТолькоПросмотр = ВладелецТолькоПросмотр;
		
	АвтоЗаголовок = Ложь;
	Заголовок = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(ДокументОбъект, "Заявление на перевод валюты");
	
	УстановитьПараметрыВыбора_КорСчетБанкаКонтрагента();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Объект.РЭЙ_СчетРасходовОрганизации) Тогда
		Объект.РЭЙ_СчетРасходовОрганизации = Объект.РЭЙ_СчетОрганизацииВЭД;
	ИначеЕсли ЗначениеЗаполнено(Объект.РЭЙ_СчетОрганизацииВЭД) И Объект.РЭЙ_СчетОрганизацииВЭД <> Объект.РЭЙ_СчетРасходовОрганизации Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросОбИзменениСчетаРасходовОрганизации", ЭтотОбъект);
		ТекстВопроса = "Установить банковский счет организации-плательщика (тег 52) в качестве источника денежных средств для списания с него расходов по валютному переводу (тег 71)?";
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопросОбИзменениСчетаРасходовОрганизации(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.РЭЙ_СчетРасходовОрганизации = Объект.РЭЙ_СчетОрганизацииВЭД;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда 
		Если Модифицированность Тогда
			Отказ = Истина;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("Модифицированность", Модифицированность);
	ПараметрыЗакрытия.Вставить("ПроизвестиЧтениеРеквизитовПриВыборе", ПроизвестиЧтениеРеквизитовПриВыборе);
	
	Если Модифицированность Тогда 
		АдресХранилища = ВременноеХранилищеРеквизитов();
		ПараметрыЗакрытия.Вставить("АдресХранилища", АдресХранилища);
	КонецЕсли;	
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗакрытии, ПараметрыЗакрытия); 
	ОписаниеОповещенияОЗакрытии = Неопределено;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПечатьЗаявления(Команда)
	Если Модифицированность Тогда 
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ОбработкаОтветаНаВопросОЗаписиДокументаПриПечати", ЭтотОбъект);
		
		ТекстВопроса = "Документ изменен. Для печати его необходимо записать.
					   |Записать?";
		Заголовок = "Документ изменен";			   
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.Отмена, Заголовок);  
		
	Иначе
		НапечататьДокумент();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопросОЗаписиДокументаПриПечати(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда 
		
		ОбъектЗаписан = Ложь;
		
		Попытка
			ЗаписатьНаСервере();
			ОбъектЗаписан = Истина; 
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Операция не выполнена!");
		КонецПопытки;
		
		Если ОбъектЗаписан Тогда 
			НапечататьДокумент();
		КонецЕсли;	
		
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура НапечататьДокумент()
	МассивОбъектовДляПечати = Новый Массив;
	МассивОбъектовДляПечати.Добавить(Ссылка);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Обработка.РЭЙ_ПечатьЗаявленияНаПереводИностраннойВалюты", "ЗаявлениеНаПереводВалюты", МассивОбъектовДляПечати, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	ДокументОбъект = Ссылка.ПолучитьОбъект();
	
	МетаданныеДокумента = Ссылка.Метаданные();
    Для Каждого текРеквизит Из МетаданныеДокумента.Реквизиты Цикл
		Если Сред(текРеквизит.Имя, 1, 4) = "РЭЙ_" Тогда
			ДокументОбъект[текРеквизит.Имя] = Объект[текРеквизит.Имя];
		КонецЕсли;
    КонецЦикла;
	ДокументОбъект.Записать();
	
	ПроизвестиЧтениеРеквизитовПриВыборе	= Истина;
	Модифицированность = Ложь;
КонецПроцедуры	

&НаКлиенте
Процедура СправкаОВалютныхОперацияхПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.РЭЙ_СправкаОВалютныхОперациях) Тогда
		ПоказатьЗначение(, Объект.РЭЙ_СправкаОВалютныхОперациях);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПаспортСделкиНаименованиеПриИзменении(Элемент)
	ОбновитьЗаголовкиНадписейНаСервере();
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПаспортСделкиНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Отбор = Новый Структура;
	Отбор.Вставить("КонтрактВЭД", Объект.РЭЙ_КонтрактВЭД);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отбор", Отбор);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Документ.РЭЙ_ПаспортСделки.ФормаВыбора", ПараметрыОткрытия, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПаспортСделкиНаименованиеОчистка(Элемент, СтандартнаяОбработка)
	Объект.РЭЙ_ПаспортСделки = ПредопределенноеЗначение("Документ.РЭЙ_ПаспортСделки.ПустаяСсылка");
КонецПроцедуры

&НаКлиенте
Процедура ПаспортСделкиНаименованиеОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.РЭЙ_ПаспортСделки) Тогда
		ПоказатьЗначение(, Объект.РЭЙ_ПаспортСделки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПаспортСделкиНаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Объект.РЭЙ_ПаспортСделки = ВыбранноеЗначение;
КонецПроцедуры

&НаКлиенте
Процедура СчетРасходовОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура;
	
	Отбор.Вставить("Владелец", Объект.Организация);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Отбор", Отбор);
	ПараметрыОткрытия.Вставить("НачальноеЗначениеВыбора", Объект.РЭЙ_СчетРасходовОрганизации);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.РЭЙ_БанковскиеСчетаВалютные.ФормаВыбора", ПараметрыОткрытия, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры

&НаКлиенте
Процедура УполномоченныйПоПереводуПриИзменении(Элемент)
	УполномоченныйПоПереводуПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура УполномоченныйПоПереводуПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.РЭЙ_УполномоченныйПоПереводу) Тогда
		Объект.РЭЙ_ТелефонУполномоченногоПоПереводу = РЭЙ_СлужебныйСервер.ПолучитьСлужебныйТелефонФизЛица(Объект.РЭЙ_УполномоченныйПоПереводу);
		
		Если ПустаяСтрока(Объект.РЭЙ_ТелефонУполномоченногоПоПереводу) Тогда
			ТекстСообщения = "У выбранного физ.лица не заполнен служебный телефон! Заполните телефон в карточке физ.лица и перевыберите физ.лицо.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВидПлатежаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВыбранныйВидПлатежа = Элемент.СписокВыбора.НайтиПоЗначению(Объект.РЭЙ_ВидПлатежаВЭД);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВидПлатежаНачалоВыбораЗавершение", ЭтотОбъект);
	ПоказатьВыборИзСписка(ОписаниеОповещения, Элемент.СписокВыбора, Элемент, ВыбранныйВидПлатежа);
КонецПроцедуры

&НаКлиенте
Процедура ВидПлатежаНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.РЭЙ_ВидПлатежаВЭД = ВыбранныйЭлемент.Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФлагСрочноПриИзменении(Элемент)
	Если Объект.РЭЙ_ФлагСрочно Тогда 
		Объект.РЭЙ_СрочностьОплаты = ПредопределенноеЗначение("Перечисление.РЭЙ_СрочностьОплаты.Срочный");
	Иначе
		Объект.РЭЙ_СрочностьОплаты = ПредопределенноеЗначение("Перечисление.РЭЙ_СрочностьОплаты.Обычный");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура НомерГТДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВходящиеДанные", Объект.РЭЙ_НомерГТД);
	
	ОткрытьФорму("Документ." + РЭЙ_Универсализация.ИмяДокумента_ПлатежноеПоручение() + ".Форма.РЭЙ_ПодборНомеровГТД", ПараметрыОткрытия, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВидВалютнойОперацииНаименованиеПриИзменении(Элемент)
	ОбновитьЗаголовкиНадписейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидВалютнойОперацииНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("ТекущаяСтрока", Объект.РЭЙ_ВидВалютнойОперации);
	ОткрытьФорму("Справочник.РЭЙ_ВидыВалютныхОпераций.ФормаВыбора", ПараметрыОткрытия, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВидВалютнойОперацииНаименованиеОчистка(Элемент, СтандартнаяОбработка)
	Объект.РЭЙ_ВидВалютнойОперации = Неопределено;
	ОбновитьЗаголовкиНадписейНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидВалютнойОперацииНаименованиеОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.РЭЙ_ВидВалютнойОперации) Тогда
		ПоказатьЗначение(, Объект.РЭЙ_ВидВалютнойОперации);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидВалютнойОперацииНаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Объект.РЭЙ_ВидВалютнойОперации = ВыбранноеЗначение;
КонецПроцедуры

&НаКлиенте
Процедура ВидВалютнойОперацииНаименованиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(Текст) Тогда
		ВидВалютнойОперацииНаименованиеОчистка(Элемент, Истина);
	Иначе
		ДанныеВыбора = ПолучитьДанныеВыбора_ВидВалютнойОперации(Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасходыПоПереводуПриИзменении(Элемент)
	ОбновитьЗаголовкиНадписейНаСервере();
КонецПроцедуры

#КонецОбласти

#Область Отображение

Процедура УстановитьПараметрыВыбора_КорСчетБанкаКонтрагента()
	МассивПараметровВыбора = Новый Массив;
	
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", Объект.РЭЙ_СчетКонтрагентаВЭД.Банк));
	МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.ВалютаДенежныхСредств", Объект.РЭЙ_СчетКонтрагентаВЭД.ВалютаДенежныхСредств));
	
	Элементы.КорСчетБанкаКонтрагента.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЧтениеИзВременногоХранилища()
	
	Если Параметры.Свойство("АдресВременногоХранилища")  Тогда 
		
		ИменаРеквизитовФормы = Новый Массив;
		ИменаРеквизитовФормы.Добавить("Ссылка");
		
		РЭЙ_СлужебныйСервер.ЗаполнитьСвойстваОбъектаИзВременногоХранилища(Объект, Параметры.АдресВременногоХранилища, ЭтотОбъект, ИменаРеквизитовФормы);
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	БанкНеРезидент = Объект.РЭЙ_СчетОрганизацииВЭД.Банк.РЭЙ_НеЯвляетсяРезидентом;
	
	Если БанкНеРезидент Тогда
		
		Элементы.ГруппаСтраницыДекорацияНадпись56.ТекущаяСтраница 				= Элементы.ГруппаСтраницаДекорацияНадпись56Нет;
		Элементы.ГруппаСтраницыКорСчетБанкаКонтрагента.ТекущаяСтраница			= Элементы.ГруппаСтраницаКорСчетБанкаКонтрагентаНет;
		Элементы.ГруппаСтраницыНадписьКорСчетБанкаКонтрагента.ТекущаяСтраница	= Элементы.ГруппаСтраницаНадписьКорСчетБанкаКонтрагентаНет;
		
	Иначе 
		
		Элементы.ГруппаСтраницыДекорацияНадпись56.ТекущаяСтраница 				= Элементы.ГруппаСтраницаДекорацияНадпись56Есть;
		Элементы.ГруппаСтраницыКорСчетБанкаКонтрагента.ТекущаяСтраница			= Элементы.ГруппаСтраницаКорСчетБанкаКонтрагентаЕсть;
		Элементы.ГруппаСтраницыНадписьКорСчетБанкаКонтрагента.ТекущаяСтраница	= Элементы.ГруппаСтраницаНадписьКорСчетБанкаКонтрагентаЕсть;
		
	КонецЕсли;	
	
	ОбновитьЗаголовкиНадписейНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ОбновитьЗаголовкиНадписейНаСервере()
	ВидВалютнойОперацииНаименование = Объект.РЭЙ_ВидВалютнойОперации.НаименованиеПолное;
	
	Если Объект.РЭЙ_ПаспортСделки.Пустая() Тогда
		НомерПаспортаСделки = "";
		ПаспортСделкиНаименование = "";
	Иначе	
		ПаспортСделки = Объект.РЭЙ_ПаспортСделки;
		НомерПаспортаСделки = ПаспортСделки.НомерПаспортаСделки;
		ПаспортСделкиНаименование = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(ПаспортСделки);
	КонецеСли;
	
	ДоступностьГТД = Объект.РЭЙ_КонтрактВЭД.КонтрактТоварный;
	Элементы.РЭЙ_НомерГТД.Доступность = ДоступностьГТД;
	Элементы.ДекорацияНадписьВК_НомерГТД.Доступность = ДоступностьГТД;
	Элементы.ДекорацияНомерГТД.Доступность = ДоступностьГТД;
	
	Если Не Объект.РЭЙ_РасходыПоПереводу.Пустая() Тогда
		Индекс = Перечисления.РЭЙ_РасходыПоВалютномуПереводу.Индекс(Объект.РЭЙ_РасходыПоПереводу);
		Идентификатор = Метаданные.Перечисления.РЭЙ_РасходыПоВалютномуПереводу.ЗначенияПеречисления[Индекс].Имя;
		
		РасходыПоПереводуЗначение = Идентификатор;
	Иначе
		РасходыПоПереводуЗначение = "";
	КонецЕсли;
		
	Если Не Объект.РЭЙ_СправкаОВалютныхОперациях.Пустая() Тогда
		СправкаОВалютныхОперацияхПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(Объект.РЭЙ_СправкаОВалютныхОперациях);
	Иначе
		СправкаОВалютныхОперацияхПредставление = "";
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура ИзменениеМодифицированостиПриСозданииНаСервере(Реквизит)
	Если ЗначениеЗаполнено(Реквизит) Тогда 
		Модифицированность = Истина;
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Функция ВременноеХранилищеРеквизитов()
	
	МетаданныеОбъекта = РеквизитФормыВЗначение("Объект").Метаданные();
	АдресХранилища = РЭЙ_СлужебныйСервер.ВременноеХранилищеРеквизитов(Объект, МетаданныеОбъекта, УникальныйИдентификатор);
	
	Возврат АдресХранилища;
	
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьДанныеВыбора_ВидВалютнойОперации(Текст)
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("Отбор", Новый Структура);
	СтруктураВыбора.Вставить("СтрокаПоиска", Текст);
	СтруктураВыбора.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
	
	Возврат Справочники.РЭЙ_ВидыВалютныхОпераций.ПолучитьДанныеВыбора(СтруктураВыбора);
КонецФункции

&НаСервере
Функция ПолучитьКорСчетБанкаПосредника() 
	Если ЗначениеЗаполнено(Объект.РЭЙ_СчетКонтрагентаВЭД.ОсновнойКоррСчет) Тогда
		Возврат Объект.РЭЙ_СчетКонтрагентаВЭД.ОсновнойКоррСчет;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_БанковскиеСчетаВалютные.Ссылка
		|ИЗ
		|	Справочник.РЭЙ_БанковскиеСчетаВалютные КАК РЭЙ_БанковскиеСчетаВалютные
		|ГДЕ
		|	РЭЙ_БанковскиеСчетаВалютные.Владелец = &Банк
		|	И РЭЙ_БанковскиеСчетаВалютные.ВидСчета = &ВидСчета
		|	И РЭЙ_БанковскиеСчетаВалютные.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
		|	И НЕ РЭЙ_БанковскиеСчетаВалютные.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("Банк", Объект.РЭЙ_СчетКонтрагентаВЭД.Банк);
		Запрос.УстановитьПараметр("ВидСчета", "Корреспондентский");
		Запрос.УстановитьПараметр("ВалютаДенежныхСредств", Объект.РЭЙ_СчетКонтрагентаВЭД.ВалютаДенежныхСредств);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если Выборка.Количество() = 1 Тогда
				Возврат Выборка.Ссылка;
			КонецЕсли;
		КонецЕСли;
		
		Возврат Справочники.РЭЙ_БанковскиеСчетаВалютные.ПустаяСсылка();
	КонецЕсли;
КонецФункции

&НаСервере
Функция СформироватьНаименованиеКонтрактаВЭДНаАнглийском(парКонтрактВЭД)
	Возврат Справочники.РЭЙ_КонтрактыВЭД.СформироватьНаименованиеКонтрактаАнгл(парКонтрактВЭД.КонтрактНомер, парКонтрактВЭД.КонтрактДатаПодписания, "", Не ЗначениеЗаполнено(парКонтрактВЭД.КонтрактНомер));
КонецФункции

#КонецОбласти

