//<--АГ:[Казначейство][24.04.2019 18:05][Дядюра С.С.]

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Объект.Проведен Тогда
		ЗаполнитьОстаткиЛимита();
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Заголовок = "Корректировка экземпляра бюджета (Создание)";
	ИначеЕсли Объект.Проведен Тогда
		Заголовок = "Корректировка экземпляра бюджета " + Объект.Номер + " от " + Объект.Дата + " (Проведен)";  	
	Иначе
		Заголовок = "Корректировка экземпляра бюджета " + Объект.Номер + " от " + Объект.Дата + " (Не проведен)";  	
	КонецЕсли;	
	
	//Здесь тоже определяется Заголовок на (Создание), (Проведен), (Не проведен) - т.к. массово используется в конфигурации 
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) И Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.АГ_НаСогласованииДО = "";
	КонецЕсли;	
	
	Если Параметры.Свойство("ТекущаяСтрокаЗадачи") Тогда
		АГ_ТекущаяСтрокаЗадачи = Параметры.ТекущаяСтрокаЗадачи;
		Элементы.АГ_ГруппаИсполнениеТри.Видимость = Истина;
	Иначе
		АГ_ТекущаяСтрокаЗадачи = 9999999999;
		Элементы.АГ_ГруппаИсполнениеТри.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиЛимита()
	ЗапросЛимит = Новый Запрос;
	ЗапросЛимит.Текст = "ВЫБРАТЬ
	                    |	СУММА(ОборотыБюджетовОбороты.СуммаУпрОборот) КАК СуммаУпр,
	                    |	СУММА(ОборотыБюджетовОбороты.СуммаВВалютеОборот) КАК СуммаВВалюте
	                    |ИЗ
	                    |	РегистрНакопления.ОборотыБюджетов.Обороты(, , Авто, ) КАК ОборотыБюджетовОбороты
	                    |ГДЕ
	                    |	ОборотыБюджетовОбороты.Аналитика1 = &Аналитика1
	                    |	И ОборотыБюджетовОбороты.ПериодПланирования МЕЖДУ &ДатаНП И &ДатаКП
	                    |	И ОборотыБюджетовОбороты.Аналитика2 = &Аналитика2
	                    |	И ОборотыБюджетовОбороты.Аналитика3 = &Аналитика3
	                    |	И ОборотыБюджетовОбороты.Валюта = &Валюта
	                    |	И ОборотыБюджетовОбороты.Подразделение = &Подразделение
	                    |	И ОборотыБюджетовОбороты.Регистратор = &Регистратор";
	
	Запрос = Новый Запрос;
	Для Каждого Стр Из Объект.ДанныеКорректировкиБюджета Цикл
		Условие = "";	
		ЗапросЛимит.УстановитьПараметр("ДатаНП",Объект.НачалоПериода);
		Запрос.УстановитьПараметр("ДатаНП",Объект.НачалоПериода);
		
		Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
			ЗапросЛимит.УстановитьПараметр("ДатаКП",ТекущаяДата());
			Запрос.УстановитьПараметр("ДатаКП",ТекущаяДата());
		Иначе
			ЗапросЛимит.УстановитьПараметр("ДатаКП",Объект.Дата);
			Запрос.УстановитьПараметр("ДатаКП",Объект.Дата);
		КонецЕсли;
		ЗапросЛимит.УстановитьПараметр("Подразделение",Объект.Подразделение);
		ЗапросЛимит.УстановитьПараметр("Аналитика1",Стр.Аналитика1); 
		
		Запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
		Запрос.УстановитьПараметр("Аналитика1",Стр.Аналитика1); 
		
		ЗапросЛимит.УстановитьПараметр("Валюта",Стр.Валюта);
		Запрос.УстановитьПараметр("Валюта",Стр.Валюта);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЛимитыДСПоЗаявкамОбороты.СуммаОплатыОборот КАК СуммаОплаты
		               |ИЗ
		               |	РегистрНакопления.АГ_ЛимитыДСПоЗаявкам.Обороты(
		               |			&ДатаНП,
		               |			&ДатаКП,
		               |			Авто,
		               |				Подразделение = &Подразделение
		               |				И ВалютаПлатежа = &Валюта) КАК ЛимитыДСПоЗаявкамОбороты
		               |ГДЕ
		               |	ЛимитыДСПоЗаявкамОбороты.Аналитика1 = &Аналитика1
		               |	И ЛимитыДСПоЗаявкамОбороты.Аналитика1Использование = ИСТИНА
					   |	#Условие#";

			Если ЗначениеЗаполнено(Стр.Аналитика2) Тогда
				Условие = Условие + "	И ЛимитыДСПоЗаявкамОбороты.Аналитика2 = &Аналитика2 И ЛимитыДСПоЗаявкамОбороты.Аналитика2Использование = ИСТИНА"; 
				Запрос.УстановитьПараметр("Аналитика2",Стр.Аналитика2); 
				ЗапросЛимит.УстановитьПараметр("Аналитика2",Стр.Аналитика2); 
			Иначе
				Условие = Условие + "	И ЛимитыДСПоЗаявкамОбороты.Аналитика2Использование = Ложь"; 	
				ЗапросЛимит.УстановитьПараметр("Аналитика2",Неопределено); 
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Аналитика3) Тогда
				Условие = Условие + "	И ЛимитыДСПоЗаявкамОбороты.Аналитика3 = &Аналитика3 И ЛимитыДСПоЗаявкамОбороты.Аналитика3Использование = ИСТИНА"; 
				Запрос.УстановитьПараметр("Аналитика3",Стр.Аналитика3); 
				ЗапросЛимит.УстановитьПараметр("Аналитика3",Стр.Аналитика3);
			Иначе
				Условие = Условие + "	И ЛимитыДСПоЗаявкамОбороты.Аналитика3Использование = Ложь"; 	
				ЗапросЛимит.УстановитьПараметр("Аналитика3",Неопределено);
			КонецЕсли;		
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"#Условие#", Условие);
			
			
			ЗапросЛимит.УстановитьПараметр("Регистратор",Объект.Основание);
			
			
			РезЛимит = ЗапросЛимит.Выполнить().Выгрузить();
			Если РезЛимит.Количество() > 0 Тогда
				Рез = Запрос.Выполнить().Выгрузить();		
				Если Рез.Количество() > 0 Тогда
					Стр.ОстатокЛимита = ?(РезЛимит[0].СуммаУпр = Null,0, РезЛимит[0].СуммаУпр - Рез.Итог("СуммаОплаты"));
				Иначе
					Стр.ОстатокЛимита = РезЛимит[0].СуммаУпр;
				КонецЕсли;
				Стр.ОстатокЛимита = Стр.ОстатокЛимита + Стр.СуммаУпр;
			КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ДанныеКорректировкиБюджетаСуммаПриИзменении(Элемент)
	ЗаполнитьОстаткиЛимита();
	Объект.ЧДП = Строка(Объект.ДанныеКорректировкиБюджета.Итог("СуммаУпр"));
	Объект.Сумма = Объект.ДанныеКорректировкиБюджета.Итог("СуммаУпр");
	//Для Каждого Стр Из Объект.ДанныеКорректировкиБюджета Цикл
	//	Если Стр.ОстатокЛимита = 0 Тогда
	//		Стр.ОстатокЛимита =	Стр.СуммаУпр;
	//	Иначе
	//		Стр.ОстатокЛимита = Стр.ОстатокЛимита - Стр.СуммаУпр;
	//	КонецЕсли;
	//КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьЛимиты(Команда)
	ЗаполнитьОстаткиЛимита();
КонецПроцедуры


&НаКлиенте
Процедура ДанныеКорректировкиБюджетаПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Валюта) Тогда
		Элемент.ТекущиеДанные.Валюта = ПолучитьВалютуПоУмолчанию();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВалютуПоУмолчанию()
	Возврат Справочники.Валюты.НайтиПоКоду("643");
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УправлениеСвойствамиКлиент.АвтоОбновлениеЗаголовкаФормы(ЭтаФорма);
КонецПроцедуры
//<--АГ:[Казначейство][24.04.2019 18:05][Дядюра С.С.]

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменитьСогласующегоДО_ДокументооборотБизнесПроцесс" Тогда
		Если Параметр.Свойство("ОсновнойПредмет") И Параметр.Свойство("ИмяРеквизита") И Объект.Ссылка = Параметр.ОсновнойПредмет Тогда
			ИзменитьСогласующегоДОНаСервере(Параметр);
			Если Параметр.Свойство("ЗакрыватьПриСтарте") Тогда
				ЭтаФорма.Закрыть();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСогласующегоДОНаСервере(СтруктураПараметров)
	
	Если СтруктураПараметров.Свойство("СогласующийДО") Тогда
		Изменен = Ложь;
		ЭтотОбъект.Прочитать();
		ДокументОбъект = РеквизитформыВЗначение("Объект");
		Если СтруктураПараметров.Свойство("СтатусНеСогласовано") И ДокументОбъект.Статус <> Перечисления.СтатусыПланов.Отменен Тогда
			Изменен = Истина;
			ДокументОбъект.Статус = Перечисления.СтатусыПланов.Отменен;
		ИначеЕсли СтруктураПараметров.Свойство("СтатусНаСогласовании") И ДокументОбъект.Статус <> Перечисления.СтатусыПланов.НаУтверждении Тогда
			Изменен = Истина;
			ДокументОбъект.Статус = Перечисления.СтатусыПланов.НаУтверждении;
		ИначеЕсли СтруктураПараметров.Свойство("СтатусСогласовано") И ДокументОбъект.Статус <> Перечисления.СтатусыПланов.Утвержден Тогда
			Изменен = Истина;
			ДокументОбъект.Статус = Перечисления.СтатусыПланов.Утвержден;
		КонецЕсли;
		Если ДокументОбъект[СтруктураПараметров.ИмяРеквизита] <> СтруктураПараметров.СогласующийДО Тогда
			Изменен = Истина;
			ДокументОбъект[СтруктураПараметров.ИмяРеквизита] = СтруктураПараметров.СогласующийДО;
		КонецЕсли;
		Если Изменен Тогда
			Попытка
				ДокументОбъект.ОбменДанными.Загрузка = Истина;
				Если ДокументОбъект.Проведен Тогда
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					ДокументОбъект.Записать();
				КонецЕсли;
				ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Оповестить("ОбновитьФормуСпискаКорректировкиБюджета");
	
КонецПроцедуры

&НаКлиенте
Процедура АГ_ВыполнитьЗадачуПервая(Команда)

	ЭтаФорма.Закрыть();
	Оповестить("ДокументСогласован", АГ_ТекущаяСтрокаЗадачи);
	
КонецПроцедуры	

&НаКлиенте
Процедура АГ_ВыполнитьЗадачуВторая(Команда)
	
	ЭтаФорма.Закрыть();
	Оповестить("ДокументСогласованСЗамечаниями", АГ_ТекущаяСтрокаЗадачи);
	
КонецПроцедуры	

&НаКлиенте
Процедура АГ_ВыполнитьЗадачуТретья(Команда)
	
	ЭтаФорма.Закрыть();
	Оповестить("ДокументНеСогласован", АГ_ТекущаяСтрокаЗадачи);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.Сумма = Объект.ДанныеКорректировкиБюджета.Итог("СуммаУпр");
КонецПроцедуры
