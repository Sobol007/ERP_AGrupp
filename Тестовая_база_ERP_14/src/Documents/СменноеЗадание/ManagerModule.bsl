#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Конструктор структуры, которая используется для заполнения новых документов.
// 
// Возвращаемое значение:
//  Структура - структура с ключами:
//		* Дата - Дата.
//		* Подразделение - СправочникСсылка.СтруктураПредприятия.
//		* Смена - СправочникСсылка.Календари.
//		* ЗаполнитьИсполнителейИзПрошлойСмены - Булево.
//
Функция ДанныеЗаполнения() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("Дата");
	Результат.Вставить("Подразделение");
	Результат.Вставить("Смена");
	Результат.Вставить("Участок");
	Результат.Вставить("ЗаполнитьИсполнителейИзПрошлойСмены", Ложь);
	
	Возврат Результат;
	
КонецФункции

// Создает и заполняет новые документы.
//
// Параметры:
//  МассивДанныхЗаполнения - Массив - массив с данными заполнения (см. функцию ДанныеЗаполнения).
// 
// Возвращаемое значение:
//  Ссылки - Массив - ссылки на созданные документы.
//
Функция СоздатьЗадания(МассивДанныхЗаполнения) Экспорт
	
	Ссылки = Новый Массив;
		
	НачатьТранзакцию();
	
	Попытка
		
		Для каждого ДанныеЗаполнения Из МассивДанныхЗаполнения Цикл
			
			Объект = Документы.СменноеЗадание.СоздатьДокумент();
			
			Объект.Заполнить(ДанныеЗаполнения);
			
			Объект.Записать(РежимЗаписиДокумента.Проведение);
			
			Ссылки.Добавить(Объект.Ссылка);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Сменные задания';
				|en = 'Shift jobs'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Документы.СменноеЗадание,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение НСтр("ru = 'Не удалось создать сменные задания';
								|en = 'Cannot create shift jobs'");
		
	КонецПопытки;
	
	Возврат Ссылки;
	
КонецФункции

// Добавляет нового исполнителя в документ.
//
// Параметры:
//  Ссылка		 - ДокументСсылка.СменноеЗадание - ссылка на документ.
//  Исполнители	 - Массив - значения с типом СправочникСсылка.Бригады, СправочникСсылка.ФизическиеЛица.
//
Процедура ДобавитьИсполнителей(Ссылка, Исполнители) Экспорт
	
	Попытка
		
		Объект = Ссылка.ПолучитьОбъект();
		Объект.Заблокировать();
		
		Для каждого Исполнитель Из Исполнители Цикл
			Объект.Исполнители.Добавить().Исполнитель = Исполнитель;
		КонецЦикла;
		
		Объект.Записать(РежимЗаписиДокумента.Запись);
		
	Исключение
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Сменные задания';
				|en = 'Shift jobs'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Ссылка.Метаданные(),
			Ссылка,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не удалось добавить исполнителей в документ %1';
										|en = 'Cannot add assignees to the %1 document'"), Ссылка);
		
	КонецПопытки;
	
КонецПроцедуры

// Удаляет исполнителя из документа.
//
// Параметры:
//  Ссылка		 - ДокументСсылка.СменноеЗадание - ссылка на документ.
//  Исполнитель	 - СправочникСсылка.Бригады, СправочникСсылка.ФизическиеЛица - исполнитель.
//
Процедура УдалитьИсполнителя(Ссылка, Исполнитель) Экспорт
	
	Попытка
		
		Объект = Ссылка.ПолучитьОбъект();
		Объект.Заблокировать();
		
		Строка = Объект.Исполнители.Найти(Исполнитель, "Исполнитель");
		
		Если Строка <> Неопределено Тогда
			
			Объект.Исполнители.Удалить(Строка);
			Объект.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЕсли;
		
	Исключение
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Сменные задания';
				|en = 'Shift jobs'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Ссылка.Метаданные(),
			Ссылка,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не удалось удалить исполнителя из документа %1';
										|en = 'Cannot delete an assignee from the %1 document'"), Ссылка);
		
	КонецПопытки;
	
КонецПроцедуры

// Устанавливает статус документу
//
// Параметры:
//		Ссылка - ДокументСсылка.СменноеЗадание - ссылка на документ
//		Статус - ПеречислениеСсылка.СтатусыСменныхЗаданий - статус
//
Процедура УстановитьСтатус(Ссылка, Статус) Экспорт
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("Документ.СменноеЗадание.УстановитьСтатус");
	
	УстановитьСтатусВнутриЗамераВремени(Ссылка, Статус);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоОпераций(Ссылка, Статус));
	
КонецПроцедуры

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Сменное задание
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СменноеЗадание";
	КомандаПечати.Представление = НСтр("ru = 'Сменное задание';
										|en = 'Shift job'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 1;
	
	// Сменное задание по исполнителям
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СменноеЗаданиеПоИсполнителям";
	КомандаПечати.Представление = НСтр("ru = 'Сменное задание (по исполнителям)';
										|en = 'Shift job (by assignees)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 2;
	
	// Сменное задание по рабочим центрам
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СменноеЗаданиеПоРабочимЦентрам";
	КомандаПечати.Представление = НСтр("ru = 'Сменное задание (по рабочим центрам)';
										|en = 'Shift job (by work centers)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 3;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// Входящие:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// Исходящие:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СменноеЗадание") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СменноеЗадание",
			НСтр("ru = 'Сменное задание';
				|en = 'Shift job'"),
			СформироватьПечатнуюФормуСменноеЗадание(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СменноеЗаданиеПоИсполнителям") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СменноеЗаданиеПоИсполнителям",
			НСтр("ru = 'Сменное задание (по исполнителям)';
				|en = 'Shift job (by assignees)'"),
			СформироватьПечатнуюФормуСменноеЗадание(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, "Исполнитель"));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СменноеЗаданиеПоРабочимЦентрам") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СменноеЗаданиеПоРабочимЦентрам",
			НСтр("ru = 'Сменное задание (по рабочим центрам)';
				|en = 'Shift job (by work centers)'"),
			СформироватьПечатнуюФормуСменноеЗадание(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, "РабочийЦентр"));
		
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(
		ПараметрыВывода.ПараметрыОтправки,
		МассивОбъектов,
		КоллекцияПечатныхФорм);	
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуСменноеЗадание(МассивОбъектов, 
												ОбъектыПечати, 
												ПараметрыПечати, 
												ВариантГруппировки = "")
												
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СменноеЗадание"+ВариантГруппировки;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СменноеЗадание.ПФ_MXL_СменноеЗадание");
	ПервыйДокумент = Истина;
	
	ДанныеДляПечати = СменноеЗаданиеПолучитьДанныеПечатнойФормы(МассивОбъектов, ВариантГруппировки);
	
	ВыборкаДокумент = ДанныеДляПечати.ВыборкаДокумент;
	ВыборкаОперации = ДанныеДляПечати.ВыборкаОперации;
	
	Пока ВыборкаДокумент.Следующий() Цикл
	
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		СменноеЗаданиеВывестиЗаголовок(ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		СменноеЗаданиеВывестиШапку(ТабличныйДокумент, Макет, ВыборкаДокумент, ВариантГруппировки);
		
		СменноеЗаданиеВывестиТаблицуОпераций(ТабличныйДокумент, Макет, ВыборкаДокумент, ВыборкаОперации, ВариантГруппировки);
		
		СменноеЗаданиеВывестиПодвал(ТабличныйДокумент, Макет);
		
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
		
	Возврат ТабличныйДокумент;
		
КонецФункции

Функция СменноеЗаданиеПолучитьДанныеПечатнойФормы(МассивОбъектов, ВариантГруппировки = "")
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СменноеЗаданиеДокумент.Ссылка КАК Ссылка,
	               |	СменноеЗаданиеДокумент.Номер КАК Номер,
	               |	СменноеЗаданиеДокумент.Дата КАК Дата,
	               |	СменноеЗаданиеДокумент.Статус КАК Статус,
	               |	СменноеЗаданиеДокумент.Подразделение КАК Подразделение,
	               |	СменноеЗаданиеДокумент.Смена КАК Смена,
	               |	ЕСТЬNULL(ПроизводственнаяОперация2_2.РабочийЦентр, ЗНАЧЕНИЕ(Справочник.РабочиеЦентры.ПустаяСсылка)) КАК РабочийЦентр,
	               |	ЕСТЬNULL(ПроизводственнаяОперация2_2.Исполнитель, НЕОПРЕДЕЛЕНО) КАК Исполнитель,
	               |	ПроизводственнаяОперация2_2.Операция КАК Операция,
	               |	ПроизводственнаяОперация2_2.ВремяВыполнения КАК ВремяВыполнения,
	               |	ПроизводственнаяОперация2_2.ВремяВыполненияЕдИзм КАК ВремяВыполненияЕдИзм,
	               |	ПроизводственнаяОперация2_2.Количество КАК КоличествоПлан,
				   |	ПроизводственнаяОперация2_2.КоличествоФакт КАК КоличествоФакт,
	               |	ПроизводственнаяОперация2_2.Ссылка КАК ПроизводственнаяОперацияСсылка,
	               |	ПроизводственнаяОперация2_2.Номер КАК ПроизводственнаяОперацияНомер
	               |ПОМЕСТИТЬ ВТДанныеПоОперациям
	               |ИЗ
	               |	Документ.СменноеЗадание КАК СменноеЗаданиеДокумент
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводственнаяОперация2_2 КАК ПроизводственнаяОперация2_2
	               |		ПО СменноеЗаданиеДокумент.Ссылка = ПроизводственнаяОперация2_2.СменноеЗадание
	               |			И (НЕ ПроизводственнаяОперация2_2.ПометкаУдаления)
	               |ГДЕ
	               |	СменноеЗаданиеДокумент.Ссылка В(&МассивОбъектов)
	               |	И СменноеЗаданиеДокумент.Статус <> &СтатусФормируется
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СменноеЗаданиеДокумент.Ссылка,
	               |	СменноеЗаданиеДокумент.Номер,
	               |	СменноеЗаданиеДокумент.Дата,
	               |	СменноеЗаданиеДокумент.Статус,
	               |	СменноеЗаданиеДокумент.Подразделение,
	               |	СменноеЗаданиеДокумент.Смена,
	               |	ЕСТЬNULL(ОперацииКСозданиюСменныхЗаданий.РабочийЦентр, ЗНАЧЕНИЕ(Справочник.РабочиеЦентры.ПустаяСсылка)),
	               |	ЕСТЬNULL(ОперацииКСозданиюСменныхЗаданий.Исполнитель, НЕОПРЕДЕЛЕНО),
	               |	ОперацииКСозданиюСменныхЗаданий.Операция,
	               |	ОперацииКСозданиюСменныхЗаданий.ВремяВыполнения,
	               |	ОперацииКСозданиюСменныхЗаданий.ВремяВыполненияЕдИзм,
	               |	ОперацииКСозданиюСменныхЗаданий.Количество,
				   |	NULL,
	               |	NULL,
	               |	NULL
	               |ИЗ
	               |	Документ.СменноеЗадание КАК СменноеЗаданиеДокумент
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОперацииКСозданиюСменныхЗаданий КАК ОперацииКСозданиюСменныхЗаданий
	               |		ПО СменноеЗаданиеДокумент.Ссылка = ОперацииКСозданиюСменныхЗаданий.СменноеЗадание
	               |ГДЕ
	               |	СменноеЗаданиеДокумент.Ссылка В(&МассивОбъектов)
	               |	И СменноеЗаданиеДокумент.Статус = &СтатусФормируется
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТДанныеПоОперациям.Ссылка КАК Ссылка,
	               |	ВТДанныеПоОперациям.Дата КАК Дата,
	               |	ВТДанныеПоОперациям.Номер КАК Номер,
	               |	ВТДанныеПоОперациям.Подразделение КАК Подразделение,
	               |	ВТДанныеПоОперациям.Подразделение.Представление КАК ПодразделениеПредставление,
	               |	ВТДанныеПоОперациям.Смена КАК Смена,
	               |	ВТДанныеПоОперациям.Смена.Представление КАК СменаПредставление,
	               |	ВТДанныеПоОперациям.Статус КАК Статус,
	               |	&ВариантГруппировки КАК ВариантГруппировки,
	               |	ПРЕДСТАВЛЕНИЕ(&ВариантГруппировки) КАК ВариантГруппировкиПредставление
	               |ИЗ
	               |	ВТДанныеПоОперациям КАК ВТДанныеПоОперациям
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Ссылка,
	               |	ВариантГруппировки
	               |АВТОУПОРЯДОЧИВАНИЕ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТДанныеПоОперациям.Ссылка КАК Ссылка,
	               |	&ВариантГруппировки КАК ВариантГруппировки,
	               |	ПРЕДСТАВЛЕНИЕ(&ВариантГруппировки) КАК ВариантГруппировкиПредставление,
	               |	ВТДанныеПоОперациям.РабочийЦентр КАК РабочийЦентр,
	               |	ВТДанныеПоОперациям.РабочийЦентр.Представление КАК РабочийЦентрПредставление,
	               |	ВТДанныеПоОперациям.Исполнитель КАК Исполнитель,
	               |	ВТДанныеПоОперациям.Исполнитель.Представление КАК ИсполнительПредставление,
	               |	ВТДанныеПоОперациям.Операция КАК Операция,
	               |	ВТДанныеПоОперациям.Операция.Представление КАК ОперацияПредставление,
	               |	ВТДанныеПоОперациям.ВремяВыполнения КАК Время,
	               |	ВТДанныеПоОперациям.ВремяВыполненияЕдИзм КАК ВремяЕдиницаИзмерения,
	               |	ВТДанныеПоОперациям.КоличествоПлан КАК КоличествоПлан,
				   |	ВТДанныеПоОперациям.КоличествоФакт КАК КоличествоФакт,
	               |	ВТДанныеПоОперациям.ПроизводственнаяОперацияСсылка КАК ПроизводственнаяОперацияСсылка,
	               |	ВТДанныеПоОперациям.ПроизводственнаяОперацияНомер КАК ПроизводственнаяОперацияНомер
	               |ИЗ
	               |	ВТДанныеПоОперациям КАК ВТДанныеПоОперациям
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Ссылка,
	               |	ВариантГруппировки,
	               |	Операция
	               |ИТОГИ ПО
	               |	Ссылка,
	               |	ВариантГруппировки
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("СтатусФормируется", Перечисления.СтатусыСменныхЗаданий.Формируется);	
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВариантГруппировки", ?(ЗначениеЗаполнено(ВариантГруппировки), "ВТДанныеПоОперациям."+ВариантГруппировки, """"""));
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();

	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("ВыборкаДокумент", РезультатыЗапроса[1].Выбрать());
	ДанныеДляПечати.Вставить("ВыборкаОперации", РезультатыЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам));
		
	Возврат ДанныеДляПечати;
	
КонецФункции

Процедура СменноеЗаданиеВывестиЗаголовок(ТабличныйДокумент, Макет, ВыборкаДокумент)
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	
	Область.Параметры.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокумент.Номер, Ложь, Истина);
	Область.Параметры.Дата	= Формат(ВыборкаДокумент.Дата, "ДЛФ=D");
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
		ТабличныйДокумент,
		Макет,
		Область,
		ВыборкаДокумент.Ссылка);
	
	ТабличныйДокумент.Вывести(Область);
		
КонецПроцедуры

Процедура СменноеЗаданиеВывестиШапку(ТабличныйДокумент, Макет, ВыборкаДокумент, ВариантГруппировки)
	
	Если ЗначениеЗаполнено(ВариантГруппировки) Тогда
		Область = Макет.ПолучитьОбласть("ШапкаСГруппировкой");
		Область.Параметры.Группировка = СменноеЗаданиеПредставлениеПоВариантуГруппировки(ВариантГруппировки).Представление+":";
		Область.Параметры.ЗначениеГруппировкиПредставление = ВыборкаДокумент.ВариантГруппировкиПредставление;
		Область.Параметры.ЗначениеГруппировки = ВыборкаДокумент.ВариантГруппировки;
	Иначе
		Область = Макет.ПолучитьОбласть("Шапка");
	КонецЕсли;
	
	Область.Параметры.Заполнить(ВыборкаДокумент);
	
	ТабличныйДокумент.Вывести(Область);
		
КонецПроцедуры

Процедура СменноеЗаданиеВывестиТаблицуОпераций(ТабличныйДокумент, Макет, ВыборкаДокумент, ВыборкаОперации, ВариантГруппировки)
	
	ИмяОбласти = "";
	Если ЗначениеЗаполнено(ВариантГруппировки) Тогда
		ВариантГруппировкиПолеОбратное = СменноеЗаданиеПредставлениеПоВариантуГруппировки(ВариантГруппировки, Истина);
		ИмяОбласти = ИмяОбласти + "Группировка";
	КонецЕсли;
	Если ВыборкаДокумент.Статус = Перечисления.СтатусыСменныхЗаданий.Формируется Тогда
		ИмяОбласти = ИмяОбласти + "Формируется";
	КонецЕсли;
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы"+ИмяОбласти);
	Если ЗначениеЗаполнено(ВариантГруппировки) Тогда
		ОбластьШапкаТаблицы.Параметры.Группировка = ВариантГруппировкиПолеОбратное.Представление;
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	ВыборкаОперации.Сбросить();
	Если НЕ ВыборкаОперации.НайтиСледующий(Новый Структура("Ссылка", ВыборкаДокумент.Ссылка)) Тогда
		Возврат;
	Иначе
		ВыборкаВариантГруппировки = ВыборкаОперации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если НЕ ВыборкаВариантГруппировки.НайтиСледующий(Новый Структура("ВариантГруппировки", ВыборкаДокумент.ВариантГруппировки)) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НомерСтроки = 0;
	
	Выборка = ВыборкаВариантГруппировки.Выбрать();
	Пока Выборка.Следующий() И ЗначениеЗаполнено(Выборка.Операция) Цикл
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы"+ИмяОбласти);
		ОбластьСтрокаТаблицы.Параметры.Заполнить(Выборка);
		ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;
		Если ЗначениеЗаполнено(ВариантГруппировки) Тогда
			ОбластьСтрокаТаблицы.Параметры.ЗначениеГруппировки = Выборка[ВариантГруппировкиПолеОбратное.Значение];
			ОбластьСтрокаТаблицы.Параметры.ЗначениеГруппировкиПредставление = Выборка[ВариантГруппировкиПолеОбратное.Значение+"Представление"];
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура СменноеЗаданиеВывестиПодвал(ТабличныйДокумент, Макет)
	
	Область = Макет.ПолучитьОбласть("ПодвалТаблицы");
	
	ТабличныйДокумент.Вывести(Область);
	
КонецПроцедуры

Функция СменноеЗаданиеПредставлениеПоВариантуГруппировки(ВариантГруппировки, Обратное = Ложь)
	
	СписокВариантовГруппировки = Новый СписокЗначений;
	СписокВариантовГруппировки.Добавить("Исполнитель", НСтр("ru = 'Исполнитель';
															|en = 'Assignee'"));
	СписокВариантовГруппировки.Добавить("РабочийЦентр", НСтр("ru = 'Рабочий центр';
															|en = 'Work center'"));
	
	ЭлементСписка = СписокВариантовГруппировки.НайтиПоЗначению(ВариантГруппировки);
	Если Обратное Тогда
		СписокВариантовГруппировки.Удалить(ЭлементСписка);
		ЭлементСписка = СписокВариантовГруппировки[0];
	КонецЕсли;
	
	Возврат ЭлементСписка;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура УстановитьСтатусВФоне(Параметры, АдресХранилища) Экспорт
	
	Попытка
		
		УстановитьСтатус(Параметры.Ссылка, Параметры.Статус);
		
	Исключение
		
		ПоместитьВоВременноеХранилище(
			Новый Структура("Сообщения", ПолучитьСообщенияПользователю()),
			АдресХранилища);
		
		ВызватьИсключение КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры

Процедура УстановитьСтатусВнутриЗамераВремени(Ссылка, Статус)
	
	НачатьТранзакцию();
	
	Попытка
		
		БлокировкаДанных = Новый БлокировкаДанных;
		
		ЭлементБлокировки = БлокировкаДанных.Добавить("Документ.СменноеЗадание");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
		
		ЭлементБлокировки = БлокировкаДанных.Добавить("Документ.ПроизводственнаяОперация2_2");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("СменноеЗадание", Ссылка);
		
		БлокировкаДанных.Заблокировать();
		
		// Установка статуса
		Объект = Ссылка.ПолучитьОбъект();
		Объект.Заблокировать();
		Объект.Статус = Статус;
		Объект.Записать();
		
		// Изменение регистра и производственных операций
		Если Статус = Перечисления.СтатусыСменныхЗаданий.Формируется Тогда
			
			РегистрыСведений.ОперацииКСозданиюСменныхЗаданий.ДокументыВРегистр(
				Ссылка);
			
		ИначеЕсли Статус = Перечисления.СтатусыСменныхЗаданий.Сформировано Тогда
			
			РегистрыСведений.ОперацииКСозданиюСменныхЗаданий.РегистрВДокументы(
				Ссылка,
				Перечисления.СтатусыПроизводственныхОпераций.Создана);
			
		ИначеЕсли Статус = Перечисления.СтатусыСменныхЗаданий.Закрыто Тогда
			
			РегистрыСведений.ОперацииКСозданиюСменныхЗаданий.РегистрВДокументы(
				Ссылка,
				Перечисления.СтатусыПроизводственныхОпераций.Выполнена);
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Сменные задания';
				|en = 'Shift jobs'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Ссылка.Метаданные(),
			Ссылка,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Не удалось установить статус %1 документу %2';
										|en = 'Cannot set status %1 to document %2'"), Статус, Ссылка);
		
	КонецПопытки;
	
КонецПроцедуры

Функция КоличествоОпераций(Ссылка, Статус)
	
	Запрос = Новый Запрос;
	
	Если Статус = Перечисления.СтатусыСменныхЗаданий.Формируется Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СУММА(1) КАК КоличествоОпераций
			|ИЗ
			|	РегистрСведений.ОперацииКСозданиюСменныхЗаданий КАК Операции
			|ГДЕ
			|	Операции.СменноеЗадание = &Ссылка
			|
			|ИМЕЮЩИЕ
			|	СУММА(1) ЕСТЬ НЕ NULL";
		
	Иначе
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	СУММА(1) КАК КоличествоОпераций
			|ИЗ
			|	Документ.ПроизводственнаяОперация2_2 КАК Операции
			|ГДЕ
			|	Операции.СменноеЗадание = &Ссылка
			|
			|ИМЕЮЩИЕ
			|	СУММА(1) ЕСТЬ НЕ NULL";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.КоличествоОпераций;
		
	Иначе
		
		Возврат 0;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
