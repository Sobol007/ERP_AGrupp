#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
	
	РаспределениеПрочихЗатратЛокализация.ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры);

КонецПроцедуры

// Добавляет команду создания документа "Распределение расходов на себестоимость продукции".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.РаспределениеПрочихЗатрат) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РаспределениеПрочихЗатрат.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.РаспределениеПрочихЗатрат);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводство,ИспользоватьУчетПрочихДоходовРасходов";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Отчеты.БазаРаспределенияПроизводственныхРасходов.ДобавитьКомандуОтчета(КомандыОтчетов);
	
	Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии21(ТекущаяДатаСеанса()) Тогда
		
		Если ПравоДоступа("Просмотр", Метаданные.Отчеты.ДанныеДляБазыРаспределенияРасходов) Тогда
			
			КомандаОтчет = КомандыОтчетов.Добавить();
			
			КомандаОтчет.ВидимостьВФормах	= "ФормаДокумента";
			КомандаОтчет.Идентификатор		= Метаданные.Отчеты.ДанныеДляБазыРаспределенияРасходов.ПолноеИмя();
			КомандаОтчет.Менеджер			= "Отчет.ДанныеДляБазыРаспределенияРасходов";
			КомандаОтчет.Представление		= НСтр("ru = 'Данные базы распределения';
													|en = 'Allocation base data'");
			
			КомандаОтчет.МножественныйВыбор = Ложь;
			КомандаОтчет.Важность			= "Обычное";
			
		КонецЕсли;
		
	КонецЕсли;
	
	РаспределениеПрочихЗатратЛокализация.ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры);

КонецПроцедуры

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//   Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт

	Возврат РаспределениеПрочихЗатратЛокализация.ТекстОтраженияВРеглУчете();

КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//   Строка - Текст запроса временной таблицы.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт

	Возврат РаспределениеПрочихЗатратЛокализация.ТекстЗапросаВТОтраженияВРеглУчете();

КонецФункции

// Функция возвращает список статей, по которым необходимо выполнить распределение.
//
// Параметры;
//		Период - Дата - Период выборки.
//		МассивОрганизаций - Массив - Список организаций по которым анализируются статьи.
//		СписокПодразделений - Массив - Список подразделений по которым анализируются статьи.
//		Состояние - ПеречислениеСсылка.СостоянияРаспределенияРасходов - Фильтр по состоянию.
//		ТолькоПостоянныеРазницы - Булево - Отбор только постоянных разниц.
//
//	Возвращаемое значение:
//		ТаблицаЗначений - Таблица статей к распределению.
//
Функция СтатьиКРаспределению(Период, МассивОрганизаций, СписокПодразделений, Состояние, ТолькоПостоянныеРазницы = Ложь) Экспорт

	ПараметрыЗакрытия = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ЗначенияТехнологическихПараметров();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаДанныеДляРаспределения();
	Запрос.УстановитьПараметр("НачалоПериода",        НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",         КонецМесяца(Период));
	Запрос.УстановитьПараметр("ГраницаКонецПериода", Новый Граница(КонецМесяца(Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СписокПодразделений",  СписокПодразделений);
	Запрос.УстановитьПараметр("МассивОрганизаций",    МассивОрганизаций);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям",   Ложь);
	Запрос.УстановитьПараметр("ПоВсемПодразделениям", НЕ ЗначениеЗаполнено(СписокПодразделений));
	Запрос.УстановитьПараметр("ФильтрПоСостоянию",    Состояние);
	Запрос.УстановитьПараметр("ТолькоПостоянныеРазницыПрошлыхПериодов", ТолькоПостоянныеРазницы);
	Запрос.УстановитьПараметр("НормируемыеРасходы",   Перечисления.ВидыРасходовНУ.НормируемыеРасходы());
	Запрос.УстановитьПараметр("ЗначениеПогрешностиУпр",  ПараметрыЗакрытия.ЗначениеПогрешностиРасходыУпр);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиРегл",  ПараметрыЗакрытия.ЗначениеПогрешностиРасходыРегл);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Функция возвращает все поля статьи расходов.
// Параметры:
//	СтатьяРасходов - ПланВидовХарактеристик.СтатьиРасходов - Статья, у которой необходимо получить поля.
// Возвращаемое значение:
//	ВыборкаИзРезультатаЗапроса - Поля статьи расходов.
Функция ПоляСтатьиРасходов(Знач СтатьяРасходов) Экспорт

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СтатьиРасходов.СпособРаспределенияНаПроизводственныеЗатраты КАК ВариантРаспределения,
	|	СтатьиРасходов.ПравилоРаспределенияПоЭтапамПроизводства КАК ПравилоРаспределенияПоЭтапам,
	|	СтатьиРасходов.ПравилоРаспределенияПоПодразделениям КАК ПравилоРаспределенияПоПодразделениям,
	|	СтатьиРасходов.СтатьяКалькуляции КАК СтатьяКалькуляции
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.Ссылка = &СтатьяРасходов
	|");

	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
КонецФункции

// Формирует документ "Распределение прочих затрат" по заданным условиям.
// Параметры:
//	 ПараметрыЗаполнения - Структура - Параметры заполнения документа.
// Возвращаемое значение:
//	Структура - Содержит сведения о документе и состоянии распределения.
//
Функция СформироватьДокумент(ПараметрыЗаполнения) Экспорт
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru = 'Распределение прочих затрат';
															|en = 'Allocation of other costs'"));
	
	ПараметрыПередачи = Новый Структура();
	
	Если Не ЗначениеЗаполнено(ПараметрыЗаполнения.Документ) Тогда
		Док = Документы.РаспределениеПрочихЗатрат.СоздатьДокумент();
	Иначе
		Док = ПараметрыЗаполнения.Документ.ПолучитьОбъект();
	КонецЕсли;
	
	Док.Заполнить(ПараметрыЗаполнения);
	Если Не Док.ПроверитьЗаполнение() Тогда
		
		ТекстыОшибок = Новый Массив;
		Ошибки = ПолучитьСообщенияПользователю(Истина);
		Для Индекс = 0 По Ошибки.Количество() - 1 Цикл
			ТекстыОшибок.Добавить(Ошибки[Индекс].Текст);
		КонецЦикла;
		
		СкомпонованныеОшибки = Символы.Таб + СтрСоединить(ТекстыОшибок, Символы.ПС + Символы.Таб);
		
		ПараметрыПередачи.Вставить("Состояние", Перечисления.СостоянияРаспределенияРасходов.ТребуетсяНастройкаРаспределения);
		ПараметрыПередачи.Вставить("ОписаниеОшибки", СкомпонованныеОшибки);
		
		Возврат ПараметрыПередачи;
		
	КонецЕсли;
	
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ЗаписьЖурналаРегистрации(Док.Метаданные().Имя, 
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ПараметрыПередачи.Вставить("ОписаниеОшибки", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат ПараметрыПередачи;
		
	КонецПопытки;
	
	ПараметрыПередачи.Вставить("Состояние", Перечисления.СостоянияРаспределенияРасходов.ГотовоКРаспределениюПоБазе);
	ПараметрыПередачи.Вставить("Документ", Док.Ссылка);
		
	Возврат ПараметрыПередачи;
	
КонецФункции

// Возвращает текст запроса для получения данных о прочих расходах.
//
// Возвращаемое значение:
//	Строка - Текст запроса.
//
Функция ТекстЗапросаПоступилоПрочихРасходов() Экспорт
	
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПрочиеРасходыОбороты.Организация КАК Организация,
		|	ПрочиеРасходыОбороты.Подразделение КАК Подразделение,
		|	ПрочиеРасходыОбороты.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПрочиеРасходыОбороты.СтатьяРасходов КАК СтатьяРасходов,
		|	ПрочиеРасходыОбороты.АналитикаРасходов КАК АналитикаРасходов,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.Сумма
		|		ИНАЧЕ ПрочиеРасходыОбороты.Сумма КОНЕЦ) КАК СуммаУпрПриход,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.СуммаБезНДС
		|		ИНАЧЕ ПрочиеРасходыОбороты.СуммаБезНДС КОНЕЦ) КАК СуммаУпрБезНДСПриход,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.СуммаРегл
		|		ИНАЧЕ ПрочиеРасходыОбороты.СуммаРегл КОНЕЦ) КАК СуммаРеглПриход,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.ПостояннаяРазница
		|		ИНАЧЕ ПрочиеРасходыОбороты.ПостояннаяРазница КОНЕЦ) КАК ПостояннаяРазницаПриход,
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.ВременнаяРазница
		|		ИНАЧЕ ПрочиеРасходыОбороты.ВременнаяРазница	КОНЕЦ) КАК ВременнаяРазницаПриход
		|ПОМЕСТИТЬ ВТПриход
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходыОбороты
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ПрочиеРасходыОбороты.СтатьяРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегламентнаяОперация КАК РегламентныеОперации
		|	ПО РегламентныеОперации.Ссылка = ПрочиеРасходыОбороты.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеРасходовБудущихПериодов КАК РаспределениеРБП
		|	ПО РаспределениеРБП.Ссылка = ПрочиеРасходыОбороты.Регистратор
		|ГДЕ
		|	ПрочиеРасходыОбороты.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПрочиеРасходыОбороты.Активность
		|	И (НЕ ПрочиеРасходыОбороты.РасчетСебестоимости
		|		ИЛИ (ПрочиеРасходыОбороты.РасчетСебестоимости И ТИПЗНАЧЕНИЯ(ПрочиеРасходыОбороты.Регистратор) = ТИП(Документ.РаспределениеРасходовБудущихПериодов)
		|			И РаспределениеРБП.Дата < &НачалоПериода))
		|	И (Статьи.ВариантРаспределенияРасходовУпр
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|		ИЛИ Статьи.ВариантРаспределенияРасходовРегл
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
		|	И (&ПоВсемОрганизациям ИЛИ ПрочиеРасходыОбороты.Организация В (&МассивОрганизаций))
		|	И (&ПоВсемПодразделениям ИЛИ ПрочиеРасходыОбороты.Подразделение В (&СписокПодразделений))
		|	И НЕ(ПрочиеРасходыОбороты.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
		|				ИЛИ ПрочиеРасходыОбороты.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
		|				ИЛИ ВЫБОР
		|					КОГДА ПрочиеРасходыОбороты.Регистратор ССЫЛКА Документ.РегламентнаяОперация
		|						ТОГДА РегламентныеОперации.ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаНаИмущество)
		|								И РегламентныеОперации.ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетТранспортногоНалога)
		|								И РегламентныеОперации.ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетЗемельногоНалога)
		|								И РегламентныеОперации.ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ПризнаниеВНУЛизинговыхПлатежей)
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПрочиеРасходыОбороты.Организация,
		|	ПрочиеРасходыОбороты.Подразделение,
		|	ПрочиеРасходыОбороты.НаправлениеДеятельности,
		|	ПрочиеРасходыОбороты.СтатьяРасходов,
		|	ПрочиеРасходыОбороты.АналитикаРасходов
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.Сумма
		|		ИНАЧЕ ПрочиеРасходыОбороты.Сумма КОНЕЦ) <> 0
		|	ИЛИ СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.СуммаБезНДС
		|		ИНАЧЕ ПрочиеРасходыОбороты.СуммаБезНДС КОНЕЦ) <> 0
		|	ИЛИ СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.СуммаРегл
		|		ИНАЧЕ ПрочиеРасходыОбороты.СуммаРегл КОНЕЦ) <> 0
		|	ИЛИ СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.ПостояннаяРазница
		|		ИНАЧЕ ПрочиеРасходыОбороты.ПостояннаяРазница КОНЕЦ) <> 0
		|	ИЛИ СУММА(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл <>
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА 0
		|		КОГДА ПрочиеРасходыОбороты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА - ПрочиеРасходыОбороты.ВременнаяРазница
		|		ИНАЧЕ ПрочиеРасходыОбороты.ВременнаяРазница	КОНЕЦ) <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПрочиеРасходыОстатки.Организация,
		|	ПрочиеРасходыОстатки.Подразделение,
		|	ПрочиеРасходыОстатки.НаправлениеДеятельности,
		|	ПрочиеРасходыОстатки.СтатьяРасходов,
		|	ПрочиеРасходыОстатки.АналитикаРасходов,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА ПрочиеРасходыОстатки.СуммаОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпрПриход,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовУпр =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА ПрочиеРасходыОстатки.СуммаБезНДСОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпрБезНДСПриход,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА ПрочиеРасходыОстатки.СуммаРеглОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРеглПриход,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА ПрочиеРасходыОстатки.ПостояннаяРазницаОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазницаПриход,
		|	(ВЫБОР
		|		КОГДА Статьи.ВариантРаспределенияРасходовРегл =
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ТОГДА ПрочиеРасходыОстатки.ВременнаяРазницаОстаток
		|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазницаПриход
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы.Остатки(
		|			&НачалоПериода,
		|			(&ПоВсемПодразделениям ИЛИ Подразделение В (&СписокПодразделений))
		|           И (&ПоВсемОрганизациям ИЛИ Организация В (&МассивОрганизаций))
		|			И (СтатьяРасходов.ВариантРаспределенияРасходовУпр
		|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|			ИЛИ СтатьяРасходов.ВариантРаспределенияРасходовРегл
		|				= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
		|	) КАК ПрочиеРасходыОстатки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ПрочиеРасходыОстатки.СтатьяРасходов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СебестоимостьТоваров.Организация,
		|	СебестоимостьТоваров.Подразделение,
		|	СебестоимостьТоваров.КорНаправлениеДеятельности,
		|	СебестоимостьТоваров.СтатьяРасходовСписания,
		|	СебестоимостьТоваров.АналитикаРасходов,
		|	0 КАК СуммаУпрПриход,
		|	0 КАК СуммаУпрБезНДСПриход,
		|	0 КАК СуммаРеглПриход,
		|	0 КАК ПостояннаяРазницаПриход,
		|	0 КАК ВременнаяРазницаПриход
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = СебестоимостьТоваров.СтатьяРасходовСписания
		|ГДЕ
		|	СебестоимостьТоваров.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И СебестоимостьТоваров.Активность
		|	И (СебестоимостьТоваров.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|		ИЛИ СебестоимостьТоваров.КорОрганизация = СебестоимостьТоваров.Организация)
		|	И (Статьи.ВариантРаспределенияРасходовУпр
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|		ИЛИ Статьи.ВариантРаспределенияРасходовРегл
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
		|	И (ТИПЗНАЧЕНИЯ(СебестоимостьТоваров.Регистратор) В
		|			(ТИП(Документ.ВнутреннееПотреблениеТоваров),
		|			ТИП(Документ.ВыпускПродукции),
		|			ТИП(Документ.РаспределениеПроизводственныхЗатрат),
		|			ТИП(Документ.ПроизводствоБезЗаказа),
		|			ТИП(Документ.ОтчетПереработчика),
		//++ НЕ УТКА
		|			ТИП(Документ.ЭтапПроизводства2_2),
		//-- НЕ УТКА
		|			ТИП(Документ.ПрочееОприходованиеТоваров),
		|			ТИП(Документ.СписаниеНедостачТоваров)))
		|	И (&ПоВсемОрганизациям ИЛИ СебестоимостьТоваров.Организация В (&МассивОрганизаций))
		|	И (&ПоВсемПодразделениям ИЛИ СебестоимостьТоваров.Подразделение В (&СписокПодразделений))
		|	И НЕ СебестоимостьТоваров.РасчетСебестоимости
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СебестоимостьТоваров.КорОрганизация КАК Организация,
		|	СебестоимостьТоваров.Подразделение,
		|	СебестоимостьТоваров.КорНаправлениеДеятельности,
		|	СебестоимостьТоваров.СтатьяРасходовСписания,
		|	СебестоимостьТоваров.АналитикаРасходов,
		|	0 КАК СуммаУпрПриход,
		|	0 КАК СуммаУпрБезНДСПриход,
		|	0 КАК СуммаРеглПриход,
		|	0 КАК ПостояннаяРазницаПриход,
		|	0 КАК ВременнаяРазницаПриход
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = СебестоимостьТоваров.СтатьяРасходовСписания
		|ГДЕ
		|	СебестоимостьТоваров.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И СебестоимостьТоваров.Активность
		|	И СебестоимостьТоваров.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И СебестоимостьТоваров.КорОрганизация <> СебестоимостьТоваров.Организация
		|	И Статьи.ВариантРаспределенияРасходовУпр
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|	И (ТИПЗНАЧЕНИЯ(СебестоимостьТоваров.Регистратор) В
		|			(ТИП(Документ.ВнутреннееПотреблениеТоваров),
		|			ТИП(Документ.ВыпускПродукции),
		|			ТИП(Документ.РаспределениеПроизводственныхЗатрат),
		|			ТИП(Документ.ПроизводствоБезЗаказа),
		|			ТИП(Документ.ОтчетПереработчика),
		//++ НЕ УТКА
		|			ТИП(Документ.ЭтапПроизводства2_2),
		//-- НЕ УТКА
		|			ТИП(Документ.ПрочееОприходованиеТоваров),
		|			ТИП(Документ.СписаниеНедостачТоваров)))
		|	И (&ПоВсемОрганизациям ИЛИ СебестоимостьТоваров.Организация В (&МассивОрганизаций))
		|	И (&ПоВсемПодразделениям ИЛИ СебестоимостьТоваров.Подразделение В (&СписокПодразделений))
		|	И НЕ СебестоимостьТоваров.РасчетСебестоимости
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Затраты.Организация,
		|	Затраты.Подразделение,
		|	ЕСТЬNULL(Затраты.Назначение.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|	Затраты.СтатьяРасходов,
		|	Затраты.АналитикаРасходов,
		|	0 КАК СуммаУпрПриход,
		|	0 КАК СуммаУпрБезНДСПриход,
		|	0 КАК СуммаРеглПриход,
		|	0 КАК ПостояннаяРазницаПриход,
		|	0 КАК ВременнаяРазницаПриход
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК Затраты
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = Затраты.СтатьяРасходов
		|ГДЕ
		|	Затраты.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И Затраты.Активность
		|	И (Статьи.ВариантРаспределенияРасходовУпр
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|		ИЛИ Статьи.ВариантРаспределенияРасходовРегл
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
		|	И Затраты.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|	И (&ПоВсемОрганизациям ИЛИ Затраты.Организация В (&МассивОрганизаций))
		|	И (&ПоВсемПодразделениям ИЛИ Затраты.Подразделение В (&СписокПодразделений))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПриход.Организация,
		|	ВТПриход.Подразделение,
		|	ВТПриход.НаправлениеДеятельности,
		|	ВТПриход.СтатьяРасходов,
		|	ВТПриход.АналитикаРасходов,
		|	СУММА(ВТПриход.СуммаУпрПриход) КАК ПоступилоУпр,
		|	СУММА(ВТПриход.СуммаУпрБезНДСПриход) КАК ПоступилоУпрБезНДС,
		|	СУММА(ВТПриход.СуммаРеглПриход) КАК ПоступилоРегл,
		|	СУММА(ВТПриход.ПостояннаяРазницаПриход) КАК ПоступилоПостояннаяРазница,
		|	СУММА(ВТПриход.ВременнаяРазницаПриход) КАК ПоступилоВременнаяРазница
		|ПОМЕСТИТЬ ВТПоступило
		|ИЗ
		|	ВТПриход КАК ВТПриход
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТПриход.Организация,
		|	ВТПриход.Подразделение,
		|	ВТПриход.НаправлениеДеятельности,
		|	ВТПриход.СтатьяРасходов,
		|	ВТПриход.АналитикаРасходов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса для получения данных для рабочего места по распределению расходов.
//
// Возвращаемое значение:
//	Строка - Текст запроса.
//
Функция ТекстЗапросаДанныеДляРаспределения(ВыбиратьПервые = 0) Экспорт
	
	// Распределяемые документы.
	ТекстЗапроса = ТекстЗапросаПоступилоПрочихРасходов() + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ДД.Регистратор
		|ПОМЕСТИТЬ ВТРегистраторыРаспределения
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Док
		|		ПО ДД.Регистратор = Док.Ссылка
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И (&ПоВсемОрганизациям ИЛИ ДД.Организация В (&МассивОрганизаций))
		|	И (&ПоВсемПодразделениям ИЛИ ДД.Подразделение В (&СписокПодразделений))
		|	И ДД.Активность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаспределениеПрочихЗатрат.Ссылка КАК Документ,
		|	ВЫБОР
		|		КОГДА ВТРегистраторыРаспределения.Регистратор ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьДвиженияРаспределения,
		|	РаспределениеПрочихЗатрат.Организация КАК Организация,
		|	РаспределениеПрочихЗатрат.Подразделение КАК Подразделение,
		|	РаспределениеПрочихЗатрат.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	РаспределениеПрочихЗатрат.СтатьяРасходов КАК СтатьяРасходов,
		|	РаспределениеПрочихЗатрат.АналитикаРасходов КАК АналитикаРасходов,
		|	РаспределениеПрочихЗатрат.ОставитьВНЗП,
		|	РаспределениеПрочихЗатрат.ДоляСтоимостиНаНЗП,
		|	РаспределениеПрочихЗатрат.ВсегоДолейСтоимости
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.РаспределениеПрочихЗатрат КАК РаспределениеПрочихЗатрат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторыРаспределения КАК ВТРегистраторыРаспределения
		|		ПО РаспределениеПрочихЗатрат.Ссылка = ВТРегистраторыРаспределения.Регистратор
		|ГДЕ
		|	РаспределениеПрочихЗатрат.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И (&ПоВсемОрганизациям ИЛИ РаспределениеПрочихЗатрат.Организация В (&МассивОрганизаций))
		|	И (&ПоВсемПодразделениям ИЛИ РаспределениеПрочихЗатрат.Подразделение В (&СписокПодразделений))
		|	И РаспределениеПрочихЗатрат.Проведен
		|	И (РаспределениеПрочихЗатрат.СтатьяРасходов.ВариантРаспределенияРасходовУпр
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|		ИЛИ РаспределениеПрочихЗатрат.СтатьяРасходов.ВариантРаспределенияРасходовРегл
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|
		|Организация,
		|Подразделение,
		|НаправлениеДеятельности,
		|СтатьяРасходов,
		|АналитикаРасходов,
		|ОставитьВНЗП
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	
	// Данные для таблиц к распределению.
	ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НеРаспределенные.Организация КАК Организация,
		|	НеРаспределенные.Подразделение КАК Подразделение,
		|	НеРаспределенные.СтатьяРасходов КАК СтатьяРасходов,
		|	НеРаспределенные.АналитикаРасходов КАК АналитикаРасходов,
		|	НеРаспределенные.НаправлениеДеятельности КАК НаправлениеДеятельности
		|ПОМЕСТИТЬ НеРаспределенные
		|ИЗ
		|	(ВЫБРАТЬ
		|		НеРаспределенные.Организация КАК Организация,
		|		НеРаспределенные.Подразделение КАК Подразделение,
		|		НеРаспределенные.СтатьяРасходов КАК СтатьяРасходов,
		|		НеРаспределенные.АналитикаРасходов КАК АналитикаРасходов,
		|		НеРаспределенные.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|		НеРаспределенные.СуммаОстаток КАК СуммаОстаток,
		|		НеРаспределенные.СуммаБезНДСОстаток КАК СуммаБезНДСОстаток,
		|		НеРаспределенные.СуммаУпрОстаток КАК СуммаУпрОстаток,
		|		0 КАК СуммаРеглОстаток,
		|		0 КАК ВременнаяРазницаОстаток,
		|		0 КАК ПостояннаяРазницаОстаток
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходы.Остатки(
		|				&ГраницаКонецПериода,
		|				СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|				И (&ПоВсемОрганизациям ИЛИ Организация В (&МассивОрганизаций))
		|				И (&ПоВсемПодразделениям ИЛИ Подразделение В (&СписокПодразделений))) КАК НеРаспределенные
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НеРаспределенные.Организация,
		|		НеРаспределенные.Подразделение,
		|		НеРаспределенные.СтатьяРасходов,
		|		НеРаспределенные.АналитикаРасходов,
		|		НеРаспределенные.НаправлениеДеятельности,
		|		0,
		|		0,
		|		0,
		|		НеРаспределенные.СуммаРеглОстаток,
		|		ВЫБОР 
		|			КОГДА НеРаспределенные.СтатьяРасходов.ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ТранспортныеРасходы) И НЕ СтатьяРасходов.КосвенныеЗатратыНУ
		|				ТОГДА НеРаспределенные.ВременнаяРазницаОстаток
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ КАК ВременнаяРазницаОстаток,
		|		ВЫБОР
		|			КОГДА НЕ НеРаспределенные.СтатьяРасходов.ВидРасходов В (&НормируемыеРасходы)
		|				И НеРаспределенные.СтатьяРасходов.ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ТранспортныеРасходы)
		|				ТОГДА НеРаспределенные.ПостояннаяРазницаОстаток
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ КАК ПостояннаяРазницаОстаток
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходы.Остатки(
		|				&ГраницаКонецПериода,
		|				СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|				И (&ПоВсемОрганизациям ИЛИ Организация В (&МассивОрганизаций))
		|				И (&ПоВсемПодразделениям ИЛИ Подразделение В (&СписокПодразделений))) КАК НеРаспределенные
		|	ГДЕ
		|		НеРаспределенные.СуммаРеглОстаток <> 0
		|		ИЛИ (НеРаспределенные.ПостояннаяРазницаОстаток <> 0
		|				И НЕ НеРаспределенные.СтатьяРасходов.ВидРасходов В (&НормируемыеРасходы)
		|				И НеРаспределенные.СтатьяРасходов.ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ТранспортныеРасходы))
		// возможны остатки ВР для транспортных или косвенных расходов.
		|		ИЛИ (НеРаспределенные.ВременнаяРазницаОстаток <> 0 И 
		|			(НеРаспределенные.СтатьяРасходов.ВидРасходов <> ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ТранспортныеРасходы)) И НЕ СтатьяРасходов.КосвенныеЗатратыНУ)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПрочиеРасходыОстаткиИОбороты.Организация,
		|		ПрочиеРасходыОстаткиИОбороты.Подразделение,
		|		ПрочиеРасходыОстаткиИОбороты.СтатьяРасходов,
		|		ПрочиеРасходыОстаткиИОбороты.АналитикаРасходов,
		|		ПрочиеРасходыОстаткиИОбороты.НаправлениеДеятельности,
		|		ВЫБОР
		|			КОГДА ПрочиеРасходыОстаткиИОбороты.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|				ТОГДА -(ПрочиеРасходыОстаткиИОбороты.СуммаНачальныйОстаток + ПрочиеРасходыОстаткиИОбороты.СуммаПриход) * РаспределениеПрочихЗатрат.ДоляСтоимостиНаНЗП / РаспределениеПрочихЗатрат.ВсегоДолейСтоимости
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ПрочиеРасходыОстаткиИОбороты.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|				ТОГДА -(ПрочиеРасходыОстаткиИОбороты.СуммаБезНДСНачальныйОстаток + ПрочиеРасходыОстаткиИОбороты.СуммаБезНДСПриход) * РаспределениеПрочихЗатрат.ДоляСтоимостиНаНЗП / РаспределениеПрочихЗатрат.ВсегоДолейСтоимости
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ПрочиеРасходыОстаткиИОбороты.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|				ТОГДА -(ПрочиеРасходыОстаткиИОбороты.СуммаУпрНачальныйОстаток + ПрочиеРасходыОстаткиИОбороты.СуммаУпрПриход) * РаспределениеПрочихЗатрат.ДоляСтоимостиНаНЗП / РаспределениеПрочихЗатрат.ВсегоДолейСтоимости
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ПрочиеРасходыОстаткиИОбороты.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|				ТОГДА -(ПрочиеРасходыОстаткиИОбороты.СуммаРеглНачальныйОстаток + ПрочиеРасходыОстаткиИОбороты.СуммаРеглПриход) * РаспределениеПрочихЗатрат.ДоляСтоимостиНаНЗП / РаспределениеПрочихЗатрат.ВсегоДолейСтоимости
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ПрочиеРасходыОстаткиИОбороты.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|				ТОГДА -(ПрочиеРасходыОстаткиИОбороты.ВременнаяРазницаНачальныйОстаток + ПрочиеРасходыОстаткиИОбороты.ВременнаяРазницаПриход) * РаспределениеПрочихЗатрат.ДоляСтоимостиНаНЗП / РаспределениеПрочихЗатрат.ВсегоДолейСтоимости
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ПрочиеРасходыОстаткиИОбороты.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|				ТОГДА -(ПрочиеРасходыОстаткиИОбороты.ПостояннаяРазницаНачальныйОстаток + ПрочиеРасходыОстаткиИОбороты.ПостояннаяРазницаПриход) * РаспределениеПрочихЗатрат.ДоляСтоимостиНаНЗП / РаспределениеПрочихЗатрат.ВсегоДолейСтоимости
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходы.ОстаткиИОбороты(&НачалоПериода, &ГраницаКонецПериода, , , 
		|				(&ПоВсемОрганизациям ИЛИ Организация В (&МассивОрганизаций))
		|				И (&ПоВсемПодразделениям ИЛИ Подразделение В (&СписокПодразделений))) КАК ПрочиеРасходыОстаткиИОбороты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК РаспределениеПрочихЗатрат
		|			ПО ПрочиеРасходыОстаткиИОбороты.Организация = РаспределениеПрочихЗатрат.Организация
		|				И ПрочиеРасходыОстаткиИОбороты.Подразделение = РаспределениеПрочихЗатрат.Подразделение
		|				И ПрочиеРасходыОстаткиИОбороты.НаправлениеДеятельности = РаспределениеПрочихЗатрат.НаправлениеДеятельности
		|				И ПрочиеРасходыОстаткиИОбороты.СтатьяРасходов = РаспределениеПрочихЗатрат.СтатьяРасходов
		|				И ПрочиеРасходыОстаткиИОбороты.АналитикаРасходов = РаспределениеПрочихЗатрат.АналитикаРасходов
		|				И (РаспределениеПрочихЗатрат.ОставитьВНЗП)) КАК НеРаспределенные
		|
		|СГРУППИРОВАТЬ ПО
		|	НеРаспределенные.Организация,
		|	НеРаспределенные.Подразделение,
		|	НеРаспределенные.НаправлениеДеятельности,
		|	НеРаспределенные.СтатьяРасходов,
		|	НеРаспределенные.АналитикаРасходов
		|
		|ИМЕЮЩИЕ
		|	НЕ (СУММА(НеРаспределенные.СуммаРеглОстаток) МЕЖДУ -&ЗначениеПогрешностиРегл И &ЗначениеПогрешностиРегл
		|		И СУММА(НеРаспределенные.СуммаОстаток) МЕЖДУ -&ЗначениеПогрешностиУпр И &ЗначениеПогрешностиУпр
		|		И СУММА(НеРаспределенные.СуммаБезНДСОстаток) МЕЖДУ -&ЗначениеПогрешностиУпр И &ЗначениеПогрешностиУпр
		|		И СУММА(НеРаспределенные.СуммаУпрОстаток) МЕЖДУ -&ЗначениеПогрешностиУпр И &ЗначениеПогрешностиУпр
		|		И СУММА(НеРаспределенные.ВременнаяРазницаОстаток) МЕЖДУ -&ЗначениеПогрешностиРегл И &ЗначениеПогрешностиРегл)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Задания.Организация,
		|	МИНИМУМ(НАЧАЛОПЕРИОДА(Задания.Месяц, МЕСЯЦ)) КАК Месяц
		|ПОМЕСТИТЬ Задания
		|ИЗ
		|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК Задания
		|ГДЕ
		|	&ПоВсемОрганизациям ИЛИ Задания.Организация В (&МассивОрганизаций)
		|СГРУППИРОВАТЬ ПО
		|	Задания.Организация
		|;
		|
		|ВЫБРАТЬ
		|	ВТПоступило.Организация КАК Организация,
		|	ВТПоступило.Подразделение КАК Подразделение,
		|	ВТПоступило.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ВТПоступило.СтатьяРасходов КАК СтатьяРасходов,
		|	ВТПоступило.АналитикаРасходов КАК АналитикаРасходов,
		|	ВТДокументы.Документ КАК Документ,
		|	ВТПоступило.ПоступилоУпр КАК ПоступилоУпр,
		|	ВТПоступило.ПоступилоУпрБезНДС КАК ПоступилоУпрБезНДС,
		|	ВТПоступило.ПоступилоРегл КАК ПоступилоРегл,
		|	ВТПоступило.ПоступилоПостояннаяРазница КАК ПоступилоПостояннаяРазница,
		|	ВТПоступило.ПоступилоВременнаяРазница КАК ПоступилоВременнаяРазница,
		|	ВЫБОР
		// если месяц закрыт и расходов нет, то состояние Распределено 
		|		КОГДА (Задания.Месяц > &КонецПериода ИЛИ Задания.Месяц ЕСТЬ NULL) И НеРаспределенные.СтатьяРасходов ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияРасходов.Распределено)
		// Если не настроено распределение долей, и есть остаток к распределению, то требуется настройка.
		|		КОГДА ВТДокументы.Документ ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияРасходов.ТребуетсяНастройкаРаспределения)
		// Если распределение долей есть, документ распределения сделал движения, но есть остаток к распределеню, то есть ошибка.
		|		КОГДА НЕ ВТДокументы.Документ ЕСТЬ NULL И ЕСТЬNULL(ВТДокументы.ЕстьДвиженияРаспределения, ЛОЖЬ) И НЕ НеРаспределенные.СтатьяРасходов ЕСТЬ NULL
		|			И Задания.Месяц > &КонецПериода
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияРасходов.ОшибкаРаспределения)
		// Если распределение долей есть, документ распределения сделал движения и статья полностью распределена то расходы распределены.
		|		КОГДА НЕ ВТДокументы.Документ ЕСТЬ NULL И ЕСТЬNULL(ВТДокументы.ЕстьДвиженияРаспределения, ЛОЖЬ) И НеРаспределенные.СтатьяРасходов ЕСТЬ NULL 
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияРасходов.Распределено)
		// Если распределение долей есть, документ распределения не сделал движения, то расходы готовы к распределению.
		|		КОГДА НЕ ВТДокументы.Документ ЕСТЬ NULL И НЕ ЕСТЬNULL(ВТДокументы.ЕстьДвиженияРаспределения, ЛОЖЬ)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияРасходов.ГотовоКРаспределениюПоБазе)
		// не классифицированный случай
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияРасходов.ОшибкаРаспределения)
		|	КОНЕЦ КАК Состояние
		|ПОМЕСТИТЬ ВТДанныеДляРаспределения
		|ИЗ
		|	ВТПоступило КАК ВТПоступило
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
		|		ПО	ВТПоступило.СтатьяРасходов = ВТДокументы.СтатьяРасходов
		|			И ВТПоступило.АналитикаРасходов = ВТДокументы.АналитикаРасходов
		|			И ВТПоступило.Подразделение		= ВТДокументы.Подразделение
		|			И ВТПоступило.НаправлениеДеятельности	= ВТДокументы.НаправлениеДеятельности
		|			И ВТПоступило.Организация		= ВТДокументы.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ НеРаспределенные КАК НеРаспределенные
		|		ПО	ВТПоступило.СтатьяРасходов = НеРаспределенные.СтатьяРасходов
		|			И ВТПоступило.АналитикаРасходов = НеРаспределенные.АналитикаРасходов
		|			И ВТПоступило.Подразделение		= НеРаспределенные.Подразделение
		|			И ВТПоступило.Организация		= НеРаспределенные.Организация
		|			И ВТПоступило.НаправлениеДеятельности		= НеРаспределенные.НаправлениеДеятельности
		|		ЛЕВОЕ СОЕДИНЕНИЕ Задания КАК Задания
		|		ПО ВТПоступило.Организация = Задания.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ &ВыбиратьПервые,
		|	ВТДанныеДляЗагрузки.Организация КАК Организация,
		|	ВТДанныеДляЗагрузки.Подразделение КАК Подразделение,
		|	ВТДанныеДляЗагрузки.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ВТДанныеДляЗагрузки.СтатьяРасходов КАК СтатьяРасходов,
		|	СтатьиРасходов.Родитель КАК ГруппаСтатей,
		|	ВТДанныеДляЗагрузки.АналитикаРасходов КАК АналитикаРасходов,
		|	ВТДанныеДляЗагрузки.Документ КАК Ссылка,
		|	ВТДанныеДляЗагрузки.Состояние
		|ИЗ
		|	ВТДанныеДляРаспределения КАК ВТДанныеДляЗагрузки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|		ПО ВТДанныеДляЗагрузки.СтатьяРасходов = СтатьиРасходов.Ссылка
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ФильтрПоСостоянию = ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияРасходов.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|			ИНАЧЕ ВТДанныеДляЗагрузки.Состояние = &ФильтрПоСостоянию
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Подразделение,
		|	НаправлениеДеятельности,
		|	СтатьяРасходов,
		|	АналитикаРасходов
		|;
		|";
	
	Если ВыбиратьПервые > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыбиратьПервые,", "ПЕРВЫЕ " + Строка(ВыбиратьПервые));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВыбиратьПервые,", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает статью калькуляции для документа распределения по данным правила распределения по этапам
// и распределяемой статьи расходов.
//
//	Параметры:
//		СтатьяРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов - статья расходов,
//		ПравилоРаспределенияПоЭтапам - СправочникСсылка.ПравилаРаспределенияРасходов - Правило распределения по этапам.
//
//	Возвращаемое значение:
//		СправочникСсылка.СтатьиКалькуляции - статья калькуляции.
//
Функция ПолучитьСтатьюКалькуляцииДляДокумента(СтатьяРасходов) Экспорт
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Статья.СтатьяКалькуляции
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|ГДЕ
		|	Статья.Ссылка = &Статья
		|	И Статья.СтатьяКалькуляции <> ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|");
	
	Запрос.УстановитьПараметр("Статья", СтатьяРасходов);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.СтатьяКалькуляции;
	
КонецФункции

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;
	РаспределениеПрочихЗатратЛокализация.ДобавитьКомандыПечати(КомандыПечати);

КонецПроцедуры

// Получает и помещает таблицу статей расходов для настройки распределения во временное хранилище.
// Параметры:
//	Параметры - Структура - параметры получения статей расходов.
//		* Период - Дата - месяц распределения.
//		* Организации - СправочникСсылка.Организация - организация расходов.
//		* Подразделения - Массив - подразделения расходов.
//		* Состояние - ПеречислениеСсылка.СостоянияРаспределенияРасходов - состояние распределения расхода.
//		* ТолькоПостоянныеРазницы - Булево - определяет получение только постоянных разниц.
//	АдресХранилища - Строка - адрес во временном хранилище, куда следует поместить результат работы.
//
Процедура СтатьиКРаспределениюВФоне(Параметры, АдресХранилища) Экспорт
	
	Статьи = СтатьиКРаспределению(Параметры.Период, Параметры.Организации, 
		Параметры.Подразделения, Параметры.Состояние, Параметры.ТолькоПостоянныеРазницы);
		
	ПоместитьВоВременноеХранилище(Статьи, АдресХранилища);
	
КонецПроцедуры

// Возвращает настройки распределения для набора параметров.
// Параметры:
//	ПараметрыРасходов - Массив/Таблица значений - содержит структуру со свойствами или таблицу с колонками:
//		* Дата - Дата - дата документа
//		* ИДСтроки - Число - идентификатор строки в ТЧ
//		* Документ - ДокументСсылка.РаспределениеПрочихЗатрат - созданный документ
//		* СтатьяРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов - статья расходов
//		* АналитикаРасходов - Характеристика.СтатьиРасходов - аналитика расходов статьи
//		* Организация - СправочникСсылка.Организации - организация, в которой возник расход
//		* Подразделение - СправочникСсылка.СтруктураПредприятия - подразделение, в котором возник расход
//		* НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - направление деятельности.
//
// Возвращаемое значение:
//	Массив - Массив параметров распределения.
//
Функция ПолучитьНастройкиРаспределенияСтатейРасходов(ПараметрыРасходов) Экспорт

	Если ТипЗнч(ПараметрыРасходов) = Тип("Массив") Тогда
		ТаблицаДанных = КонвертироватьДанные(ПараметрыРасходов);
	Иначе
		ТаблицаДанных = ПараметрыРасходов;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеПоРасходам.Дата КАК Дата,
		|	ДанныеПоРасходам.ИДСтроки КАК ИДСтроки,
		|	ДанныеПоРасходам.Ссылка КАК Документ,
		|	ДанныеПоРасходам.СтатьяРасходов КАК СтатьяРасходов,
		|	ДанныеПоРасходам.АналитикаРасходов КАК АналитикаРасходов,
		|	ДанныеПоРасходам.Организация КАК Организация,
		|	ДанныеПоРасходам.Подразделение КАК Подразделение,
		|	ДанныеПоРасходам.НаправлениеДеятельности КАК НаправлениеДеятельности
		|ПОМЕСТИТЬ ДанныеПоРасходам
		|ИЗ
		|	&ДанныеПоРасходам КАК ДанныеПоРасходам
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеПоРасходам.Дата КАК Дата,
		|	ДанныеПоРасходам.ИДСтроки КАК ИДСтроки,
		|	ДанныеПоРасходам.Документ КАК Документ,
		|	ДанныеПоРасходам.СтатьяРасходов КАК СтатьяРасходов,
		|	ДанныеПоРасходам.АналитикаРасходов КАК АналитикаРасходов,
		|	СтатьиРасходов.СтатьяКалькуляции КАК СтатьяКалькуляции,
		|	ДанныеПоРасходам.Организация КАК Организация,
		|	ДанныеПоРасходам.Подразделение КАК Подразделение,
		|	ДанныеПоРасходам.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ЕСТЬNULL(НастройкиРаспределенияПоОрганизацииИПодразделению.Настройка, 
		|		ЕСТЬNULL(НастройкиРаспределенияПоОрганизации.Настройка, 
		|			ЕСТЬNULL(НастройкиРаспределенияСтатьи.Ссылка, ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)))) КАК НастройкаРаспределения
		|ИЗ
		|	ДанныеПоРасходам КАК ДанныеПоРасходам
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|		ПО ДанныеПоРасходам.СтатьяРасходов = СтатьиРасходов.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиРаспределения КАК НастройкиРаспределенияПоОрганизации
		|		ПО ДанныеПоРасходам.СтатьяРасходов = НастройкиРаспределенияПоОрганизации.СтатьяРасходов
		|			И ДанныеПоРасходам.Организация = НастройкиРаспределенияПоОрганизации.Организация
		| 			И (НастройкиРаспределенияПоОрганизации.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиРаспределения КАК НастройкиРаспределенияПоОрганизацииИПодразделению
		|		ПО ДанныеПоРасходам.СтатьяРасходов = НастройкиРаспределенияПоОрганизацииИПодразделению.СтатьяРасходов
		|			И ДанныеПоРасходам.Организация = НастройкиРаспределенияПоОрганизацииИПодразделению.Организация
		|			И ДанныеПоРасходам.Подразделение = НастройкиРаспределенияПоОрганизацииИПодразделению.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК НастройкиРаспределенияСтатьи
		|		ПО СтатьиРасходов.ПравилоРаспределенияРасходов = НастройкиРаспределенияСтатьи.Ссылка";		
	
	Запрос.УстановитьПараметр("ДанныеПоРасходам", ТаблицаДанных);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	МассивНастроек = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		ФорматДанныхРаспределенияСтатьиРасходов = ФорматДанныхРаспределенияСтатьиРасходов();
		ЗаполнитьЗначенияСвойств(ФорматДанныхРаспределенияСтатьиРасходов, Выборка);
		
		МассивНастроек.Добавить(ФорматДанныхРаспределенияСтатьиРасходов);
		
	КонецЦикла;
		
	Возврат МассивНастроек;
	
КонецФункции

// Формирует документы распределения расходов по переданным параметрам
// и помещает результат создания документов во временное хранилище.
// Параметры:
//	Параметры - Структура - см. Документ.РаспределениеПрочихЗатрат.ФормаРабочееМесто.ПолучитьПараметрыРасходов().
//	АдресХранилища - Строка - адрес во временном хранилище, куда следует поместить результат создания документов.
//
Процедура СформироватьДокументы(Параметры, АдресХранилища) Экспорт
	
	Перем ПараметрыРасходов;
	
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Документ.РаспределениеПрочихЗатрат.МодульМенеджера.СформироватьДокументы");
	
	Параметры.Свойство("ПараметрыРасходов", ПараметрыРасходов);
	
	ОбновленныеДанные = Новый Массив;
	ТекстыОшибок = Новый Массив;
	СформированоДокументов = 0;
	ШаблонСообщения = НСтр("ru = 'Невозможно создать документ распределения для статьи %1 с аналитикой %2 по причине: %3 %4.';
							|en = 'Cannot create allocation document for the %1 item with the %2 dimension due to: %3 %4.'");
	
	НастройкиРаспределенияСтатьиРасходов = 
		ПолучитьНастройкиРаспределенияСтатейРасходов(ПараметрыРасходов);

	Для Каждого НастройкаРаспределения Из НастройкиРаспределенияСтатьиРасходов Цикл
		
		Результат = СформироватьДокумент(НастройкаРаспределения);
		Если Результат.Свойство("ОписаниеОшибки") Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения,
				НастройкаРаспределения.СтатьяРасходов,
				НастройкаРаспределения.АналитикаРасходов,
				Символы.ПС,
				Результат.ОписаниеОшибки);

			ТекстыОшибок.Добавить(ТекстСообщения);
			
		Иначе
			
			НовыеЗначения = Новый Структура("Документ, СтатьяРасходов, АналитикаРасходов, Организация, Подразделение, НаправлениеДеятельности, ИдСтроки, Состояние");
			ЗаполнитьЗначенияСвойств(НовыеЗначения, НастройкаРаспределения);
			ЗаполнитьЗначенияСвойств(НовыеЗначения, Результат);
			ОбновленныеДанные.Добавить(НовыеЗначения);
			
			СформированоДокументов = СформированоДокументов + 1;
			
		КонецЕсли;

	КонецЦикла;
	
	РезультатСоздания = Новый Структура("СформированоДокументов, ОбновленныеДанные, ТекстыОшибок",
		СформированоДокументов, ОбновленныеДанные, ТекстыОшибок);
		
	ПоместитьВоВременноеХранилище(РезультатСоздания, АдресХранилища);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, СформированоДокументов);
	
КонецПроцедуры

// Возвращает список подразделений по направлению распределения.
// Параметры:
//	Подразделение - СправочникСсылка.СтруктураПредприятия - подразделение от которого требуется получить подразделения по направлению распределения.
//	НаправлениеРаспределения - ПеречислениеСсылка.НаправлениеРаспределенияПоПодразделениям - направление распределения.
// Возвращаемое значение:
//	Массив - подразделения по направлению.
//
Функция ПодразделенияПоНаправлению(Подразделение, НаправлениеРаспределения) Экспорт
	
	Если Не ЗначениеЗаполнено(НаправлениеРаспределения) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Если НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.Текущее Тогда
		
		МассивПодразделений = Новый Массив;
		МассивПодразделений.Добавить(Подразделение);
		
		Возврат МассивПодразделений;
		
	КонецЕсли;
		
	Если НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.Вышестоящее Тогда
		
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	СтруктураПредприятия.Родитель КАК Подразделение
			|ИЗ
			|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
			|ГДЕ
			|	СтруктураПредприятия.Ссылка = &Подразделение";
		
		
	ИначеЕсли НаправлениеРаспределения = Перечисления.НаправлениеРаспределенияПоПодразделениям.Нижестоящие Тогда
	
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	СтруктураПредприятия.Ссылка КАК Подразделение
			|ИЗ
			|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
			|ГДЕ
			|	СтруктураПредприятия.Ссылка В ИЕРАРХИИ(&Подразделение)
			|	И СтруктураПредприятия.Ссылка <> &Подразделение";
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Подразделение");
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства)

	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Ответственный КАК Ответственный,
	|	ДанныеДокумента.Комментарий КАК Комментарий,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",
								ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.РаспределениеПрочихЗатрат")));
								
	Запрос.УстановитьПараметр("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка						КАК Ссылка,
	|	НЕОПРЕДЕЛЕНО				КАК РазделительЗаписи,
	|	&Дата						КАК ДатаДокументаИБ,
	|	&Номер						КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных	КАК ТипСсылки,
	|	&Организация				КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|	&НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	&Подразделение				КАК Подразделение,
	|	&Ответственный				КАК Ответственный,
	|	&Комментарий				КАК Комментарий,
	|	0							КАК Сумма,
	|	&Проведен					КАК Проведен,
	|	&ПометкаУдаления			КАК ПометкаУдаления,
	|	ЛОЖЬ						КАК ДополнительнаяЗапись,
	|	""""						КАК Дополнительно,
	|	&Дата						КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать				КАК НомерПервичногоДокумента,
	|	&Подразделение				КАК МестоХранения,
	|	&Дата						КАК ДатаОтраженияВУчете
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.РаспределениеПрочихЗатрат";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать", """""");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ВЗапросеЕстьИсточник = Ложь;
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеПроизводства

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Изменение", Метаданные.Документы.РаспределениеПрочихЗатрат) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыЗакрытия = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ЗначенияТехнологическихПараметров();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеДляРаспределения(1);
	Запрос.УстановитьПараметр("НачалоПериода",        '00010101');
	Запрос.УстановитьПараметр("КонецПериода",         КонецМесяца(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("ГраницаКонецПериода", Новый Граница(КонецМесяца(ТекущаяДатаСеанса()), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СписокПодразделений",  Параметры.Подразделение);
	Запрос.УстановитьПараметр("МассивОрганизаций",    Параметры.Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям",   Не ЗначениеЗаполнено(Параметры.Организация));
	Запрос.УстановитьПараметр("ПоВсемПодразделениям", Не ЗначениеЗаполнено(Параметры.Подразделение));
	Запрос.УстановитьПараметр("ФильтрПоСостоянию",    Перечисления.СостоянияРаспределенияРасходов.ТребуетсяНастройкаРаспределения);
	Запрос.УстановитьПараметр("ТолькоПостоянныеРазницыПрошлыхПериодов", Ложь);
	Запрос.УстановитьПараметр("НормируемыеРасходы",   Перечисления.ВидыРасходовНУ.НормируемыеРасходы());
	Запрос.УстановитьПараметр("ЗначениеПогрешностиУпр",  ПараметрыЗакрытия.ЗначениеПогрешностиРасходыУпр);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиРегл",  ПараметрыЗакрытия.ЗначениеПогрешностиРасходыРегл);
	
	ТекстГиперссылки = НСтр("ru = 'Распределение расходов';
							|en = 'Expense allocation'");
	
	УстановитьПривилегированныйРежим(Истина);
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			"Документ.РаспределениеПрочихЗатрат.Форма.ФормаРабочееМесто");
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			"Документ.РаспределениеПрочихЗатрат.Форма.ФормаРабочееМесто");
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Заполнение

Функция КонвертироватьДанные(ДанныеПоРасходам)
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ИДСтроки", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.РаспределениеПрочихЗатрат"));
	ТаблицаДанных.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаДанных.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	ТаблицаДанных.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДанных.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ТаблицаДанных.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));

	Для Каждого ДанныеПоРасходу Из ДанныеПоРасходам Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДанных.Добавить(), ДанныеПоРасходу);
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции

Функция ФорматДанныхРаспределенияСтатьиРасходов()
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Дата");
	СтруктураЗаполнения.Вставить("ИДСтроки");
	СтруктураЗаполнения.Вставить("Документ");
	СтруктураЗаполнения.Вставить("СтатьяРасходов");
	СтруктураЗаполнения.Вставить("АналитикаРасходов");
	СтруктураЗаполнения.Вставить("СтатьяКалькуляции");
	СтруктураЗаполнения.Вставить("Организация");
	СтруктураЗаполнения.Вставить("Подразделение");
	СтруктураЗаполнения.Вставить("НаправлениеДеятельности");
	СтруктураЗаполнения.Вставить("НастройкаРаспределения");
	
	Возврат СтруктураЗаполнения;
	
КонецФункции

#КонецОбласти

#Область БлокировкаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.Документы.РаспределениеПрочихЗатрат);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.МатериалыИРаботыВПроизводстве);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходыНезавершенногоПроизводства);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	
	ЗакрытиеМесяцаСервер.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
