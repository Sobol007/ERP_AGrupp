#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.СчетФактураПолученный.ДобавитьКомандуСоздатьНаОснованииКорректировочныйСчетФактура(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Счет-фактура полученный".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииКорректировочныйСчетФактура(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураПолученный) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "УчетНДСУПСлужебныйКлиент.КорректировочныйСчетФактура";
		КомандаСоздатьНаОсновании.Идентификатор = "КорректировочныйСчетФактура";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Корректировочный/исправительный счет-фактура';
														|en = 'Corrective/replacement tax invoice'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
			
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Добавляет команду создания документа "Счет-фактура полученный".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураПолученный) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СчетФактураПолученный.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураПолученный);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
	Отчеты.КарточкаПартииПоВидамНалогообложения.ДобавитьКомандуОтчета(КомандыОтчетов);
	
КонецПроцедуры

// Возвращает представление счета-фактуры с учетом состояния проведения.
//
// Параметры:
// 	Номер - Строка - Номер счета-фактуры.
// 	Дата - Дата - Дата счета-фактуры.
// 	Проведен - Булево - Признак проведения документа.
//
Функция ПредставлениеСчетаФактуры(Номер, Дата, Проведен) Экспорт
	
	МассивПодстрок = Новый Массив;
	МассивПодстрок.Добавить(СтрШаблон(НСтр("ru = 'Счет-фактура № %1 от %2';
											|en = 'Tax invoice No. %1, %2'"), СокрЛП(Номер), Формат(Дата, "ДЛФ=DD")));
	Если Не Проведен Тогда
		МассивПодстрок.Добавить(НСтр("ru = '(не проведен)';
									|en = '(not posted)'"));
	КонецЕсли;
	
	Возврат СтрСоединить(МассивПодстрок, " ");
	
КонецФункции

// Функция находит счета-фактуры заданного документа.
//
// Параметры:
//	Основание - ДокументСсылка - Документ, для которого необходимо найти счет-фактуру;
//	Организация - СправочникСсылка.Организации - Организация, для которой формируется счет-фактура;
//	РеквизитыСчетФактуры - Структура - Возвращаемый. Данные счета-фактуры (Ссылка, Номер, ДатаСоставления, ВИностраннойВалюте);
//	Проведен - Булево - Поиск только проведенных счетов-фактур..
//
// Возвращаемое значение:
//	ТаблицаСчетовФактур - ТаблицаЗначений - Таблица найденных счетов-фактур.
//
Функция СчетаФактурыПоОснованию(Основание, Организация = Неопределено, РеквизитыСчетаФактуры = Неопределено, Проведен = Истина) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.Номер КАК Номер,
	|	ТаблицаОснований.Ссылка.Дата КАК Дата,
	|	ТаблицаОснований.Ссылка.ДатаСоставления КАК ДатаСоставления,
	|	ТаблицаОснований.Ссылка.НомерИсправления КАК НомерИсправления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаОснований.Ссылка.Валюта КАК Валюта,
	|	ТаблицаОснований.Ссылка.Проведен КАК Проведен,
	|	ТаблицаОснований.Ссылка.Исправление КАК Исправление,
	|	ТаблицаОснований.Ссылка.Корректировочный КАК Корректировочный
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ТаблицаОснований.ДокументОснование = &Основание
	|	И (ТаблицаОснований.Ссылка.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОснований.Ссылка.НомерИсправления УБЫВ
	|");
	Запрос.УстановитьПараметр("Основание",   Основание);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если Проведен Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПометкаУдаления = ЛОЖЬ", "Проведен");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыСчетаФактуры = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		РеквизитыСчетаФактуры.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ТаблицаСчетовФактур = Новый ТаблицаЗначений;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ТаблицаСчетовФактур.Колонки.Добавить(Колонка.Имя);
	КонецЦикла;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТаблицаСчетовФактур = РезультатЗапроса.Выгрузить();
		ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, ТаблицаСчетовФактур[0]);
	КонецЕсли;
	
	Возврат ТаблицаСчетовФактур;
	
КонецФункции

// Помечает на удаление счет-фактуру, если:
// - организация счета-фактуры не соответствует указанной 
// - или если документ-основание помечен на удаление.
//
// Параметры:
//	Основание		- Документ - документ-основание счета-фактуры
//	ПометкаУдаления - Булево - пометка удаления документа-основания
//	Организация		- СправочникСсылка.Организации - Организация, для которой формируется счет-фактура.
//
Процедура ПроверитьРеквизитыСчетФактуры(Основание, ПометкаУдаления, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	КОЛИЧЕСТВО(ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|		ПО СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка
	|");
	Запрос.УстановитьПараметр("Основание", Основание);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если (Организация <> Неопределено И Выборка.Организация <> Организация)
		 ИЛИ ПометкаУдаления Тогда
			Если Выборка.КоличествоОснований = 1 Тогда			 
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			Иначе
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(Основание);
				ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает реквизиты исправляемого счета-фактуры.
//
// Параметры:
//	Основание		 - ДокументСсылка - документ-основание счета-фактуры
//	Организация		 - СправочникСсылка.Организации - Организация, для которой формируется счет-фактура.
//
// Возвращаемое значение:
//	Структура - Реквизиты счета-фактуры.
//
Функция ИсправляемыйСчетФактураПоОснованию(Ссылка, Основание, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	&ДокументОснование КАК Ссылка
	|ПОМЕСТИТЬ ОснованияСчетаФактуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеКорректировок.ДокументОснование КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаПриобретения КАК ДанныеКорректировок
	|ГДЕ
	|	ДанныеКорректировок.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеКорректировок.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаПриобретения КАК ДанныеОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК ДанныеКорректировок
	|	ПО
	|		ДанныеКорректировок.ДокументОснование = ДанныеОснования.ДокументОснование
	|
	|ГДЕ
	|	ДанныеОснования.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОснований.Ссылка КАК ДокументОснование,
	|	ЕСТЬNULL(ДанныеРеестра.ХозяйственнаяОперация,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)) КАК ХозяйственнаяОперация
	|ИЗ
	|	ОснованияСчетаФактуры КАК ДанныеОснований
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|	ПО ДанныеОснований.Ссылка = ДанныеРеестра.Ссылка
	|		И НЕ ДанныеРеестра.ДополнительнаяЗапись
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка                        КАК Ссылка,
	|	СчетФактураПолученный.Валюта                        КАК Валюта,
	|	СчетФактураПолученный.Организация                   КАК Организация,
	|	СчетФактураПолученный.Контрагент                    КАК Контрагент,
	|	СчетФактураПолученный.КодВидаОперации               КАК КодВидаОперации,
	|	СчетФактураПолученный.Корректировочный              КАК Корректировочный,
	|	СчетФактураПолученный.Номер                         КАК НомерИсходногоДокумента,
	|	СчетФактураПолученный.Номер                         КАК Номер,
	|	СчетФактураПолученный.Подразделение                 КАК Подразделение,
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		ЕСТЬNULL(СчетФактураПолученный.СчетФактураОснование.ДатаСоставления, Неопределено)
	|	ИНАЧЕ
	|		СчетФактураПолученный.ДатаСоставления
	|	КОНЕЦ                                             КАК ДатаИсходногоДокумента,
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		ЕСТЬNULL(СчетФактураПолученный.СчетФактураОснование.ДатаСоставления, Неопределено)
	|	ИНАЧЕ
	|		СчетФактураПолученный.ДатаСоставления
	|	КОНЕЦ                                             КАК ДатаСоставления,
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		СчетФактураПолученный.НомерИсправления
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                             КАК НомерИсправленияИсходногоДокумента,
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		СчетФактураПолученный.Дата
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                             КАК ДатаИсправленияИсходногоДокумента,
	|	
	|	СчетФактураПолученный.ДокументыОснования.(
	|		ДокументОснование,
	|		ХозяйственнаяОперация,
	|		ИсходныйДокумент,
	|		НомерИсходногоДокумента,
	|		ДатаИсходногоДокумента,
	|		НомерИсправленияИсходногоДокумента,
	|		ДатаИсправленияИсходногоДокумента
	|	) КАК ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйОснования
	|	ПО СчетФактураПолученный.Ссылка = СчетФактураПолученныйОснования.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияСчетаФактуры КАК ОснованияСчетаФактуры
	|		ПО ОснованияСчетаФактуры.Ссылка = СчетФактураПолученныйОснования.ДокументОснование
	|
	|ГДЕ
	|	СчетФактураПолученный.Ссылка <> &Ссылка
	|	И (СчетФактураПолученный.Организация = &Организация
	|	ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И СчетФактураПолученный.Проведен
	|	И НЕ СчетФактураПолученный.ПометкаУдаления
	|	И НЕ СчетФактураПолученный.Исправление
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураПолученный.Корректировочный УБЫВ,
	|	СчетФактураПолученный.МоментВремени УБЫВ
	|");
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = МассивРезультатов[2];
	
	РеквизитыСчетаФактуры = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		РеквизитыСчетаФактуры.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ВидыОпераций = Новый Соответствие;
	ВыборкаОпераций = МассивРезультатов[1].Выбрать();
	Пока ВыборкаОпераций.Следующий() Цикл
		ВидыОпераций.Вставить(ВыборкаОпераций.ДокументОснование, ВыборкаОпераций.ХозяйственнаяОперация);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, Выборка);
		ТаблицаОснований = Выборка.ДокументыОснования.Выгрузить();
		Если ТаблицаОснований.Найти(Основание,"ДокументОснование")=Неопределено Тогда
			
			ТаблицаОснований.Очистить();
			
			СтрокаОснования = ТаблицаОснований.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОснования, Выборка);
			СтрокаОснования.ДокументОснование = Основание;
			СтрокаОснования.ХозяйственнаяОперация = ВидыОпераций[Основание];
			Если Выборка.Корректировочный Тогда
				СтрокаОснования.ИсходныйДокумент = Выборка.Ссылка;
				РеквизитыСчетаФактурыОснования = Документы.СчетФактураПолученный.ДанныеСчетаФактуры(Выборка.Ссылка);
				ИсходныеДанныеСчетаФактуры = РеквизитыСчетаФактурыОснования.ДокументыОснования;
				Для Каждого СтрокаТаблицы Из ИсходныеДанныеСчетаФактуры Цикл
					ЗаполнитьЗначенияСвойств(СтрокаОснования, СтрокаТаблицы, "НомерИсходногоДокумента,ДатаИсходногоДокумента");
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		РеквизитыСчетаФактуры.Вставить("ДокументыОснования", ТаблицаОснований);
		
	КонецЕсли;
	
	Возврат РеквизитыСчетаФактуры;
	
КонецФункции

// Получает реквизиты счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураПолученный - Счет-фактура, данные которого необходимо получить.
//
// Возвращаемое значение:
//	Структура - Реквизиты счета-фактуры.
//
Функция ДанныеСчетаФактуры(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		СчетФактураПолученный.СчетФактураОснование
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                               КАК СчетФактураОснование,
	|	СчетФактураПолученный.Валюта                        КАК Валюта,
	|	СчетФактураПолученный.Организация                   КАК Организация,
	|	СчетФактураПолученный.Контрагент                    КАК Контрагент,
	|	СчетФактураПолученный.ИННКонтрагента                КАК ИННКонтрагента,
	|	СчетФактураПолученный.КППКонтрагента                КАК КППКонтрагента,
	|	СчетФактураПолученный.КодВидаОперации               КАК КодВидаОперации,
	|	СчетФактураПолученный.Корректировочный              КАК Корректировочный,
	|	СчетФактураПолученный.Номер                         КАК Номер,
	|	СчетФактураПолученный.Дата                          КАК Дата,
	|	СчетФактураПолученный.ДатаСоставления               КАК ДатаСоставления,
	|	СчетФактураПолученный.Подразделение                 КАК Подразделение,
	|	СчетФактураПолученный.ДокументыОснования.(
	|		ДокументОснование,
	|		ХозяйственнаяОперация,
	|		ИсходныйДокумент,
	|		НомерИсходногоДокумента,
	|		ДатаИсходногоДокумента,
	|		НомерИсправленияИсходногоДокумента,
	|		ДатаИсправленияИсходногоДокумента
	|	)                                                 КАК ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДанных = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		СтруктураДанных.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка);
		СтруктураДанных.Вставить("ДокументыОснования", Выборка.ДокументыОснования.Выгрузить());
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

// Приводит состояние проведения счета-фактуры в соответствие с документом-основанием.
//
// Параметры:
//	Основание				- Документ - документ-основание счета-фактуры
//	Проведен 				- Булево - Состояние проведения документа-основания
//	ТребуетсяСчетФактура	- Булево - Потребность в наличии счета-фактуры для документа-основания.
//
Процедура АктуализироватьСчетФактуру(Основание, Проведен, ТребуетсяСчетФактура = Истина, ТребуетсяСчетФактураНалоговыйАгент = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	НАЧАЛОПЕРИОДА(ТаблицаОснований.Ссылка.ДатаСоставления, ДЕНЬ) КАК ДатаСоставления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления КАК ДатаИсправления
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	СчетаФактуры.Ссылка.Проведен КАК Проведен,
	|	КОЛИЧЕСТВО(ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|		ПО СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка,
	|	СчетаФактуры.ДатаСоставления,
	|	СчетаФактуры.ДатаИсправления
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетаФактуры.ДатаСоставления,
	|	СчетаФактуры.ДатаИсправления
	|"
	;
	
	Запрос.УстановитьПараметр("Основание", Основание);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ДополнительныеСвойства.Вставить("АктуализацияДвижений", Истина);
		
		Если НЕ Проведен ИЛИ НЕ ТребуетсяСчетФактура ИЛИ ТребуетсяСчетФактураНалоговыйАгент Тогда
			Если Выборка.КоличествоОснований = 1 Тогда
				РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;
			Иначе
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(Основание);
				ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				РежимЗаписи = РежимЗаписиДокумента.Проведение;
			КонецЕсли;
		Иначе
			Если Выборка.Проведен Тогда
				РежимЗаписи = РежимЗаписиДокумента.Проведение;
			Иначе
				РежимЗаписи = РежимЗаписиДокумента.Запись;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписи);
		Исключение
			ТекстОшибки = НСтр("ru = 'Не удалось записать %Документ%. %ОписаниеОшибки%';
								|en = 'Failed to write %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       ДокументОбъект);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

//Возвращает количество счетов-фактур к оформлению.
//
// Параметры:
//	Параметры - структура со следующими свойствами:
//	* МассивОрганизаций - Массив - массив организаций.
//	* НачалоПериода - Дата - ограничение снизу на дату документа-основания.
//	* КонецПериода - Дата - ограничение сверху на дату документа-основания.
//	* БезОграниченияПериода - Булево - не ограничивать по дате документа-основания 
//
// Возвращаемое значение:
//	Число - количество счетов-фактур к оформлению.
//
Функция ЕстьСчетаФактурыКОформлению(Параметры) Экспорт
	
	ПараметрыПоискаСчетовФактур = УчетНДС.НовыйПараметрыПоискаСчетовФактур();

	ПараметрыПоискаСчетовФактур.НачалоПериода 		= Параметры.НачалоПериода;
	ПараметрыПоискаСчетовФактур.КонецПериода 		= Параметры.КонецПериода;
	ПараметрыПоискаСчетовФактур.Организация			= Параметры.МассивОрганизаций;
	ПараметрыПоискаСчетовФактур.Фильтр				= Неопределено;
	ПараметрыПоискаСчетовФактур.ВсеКромеФильтра		= Истина;
	ПараметрыПоискаСчетовФактур.НаличиеСчетаФактуры = Ложь;
	ПараметрыПоискаСчетовФактур.СчетФактураПроведен = Неопределено;
	ПараметрыПоискаСчетовФактур.ДатаСФНеБолее		= Неопределено;
	ПараметрыПоискаСчетовФактур.ИскатьПоОборотам	= Ложь;

	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДокументов = УчетНДСПереопределяемый.ОпределитьНаличиеСчетовФактурПолученных(ПараметрыПоискаСчетовФактур);
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТаблицаДокументов.Количество();
	
КонецФункции

//++ НЕ УТ

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

//-- НЕ УТ

// Определяет параметры заполнения нового счета-фактуры, вводимого на основании существующего счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураПолученный - Счет-фактура, на основании которого вводится счет-фактура.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* Основания - Массив - Документы-основания "Корректировка поступления" нового счета-фактуры
//	* ДатаКорректировки - Дата - Дата нового корректировочного счета-фактуры
//	* Корректировочный - Булево - Истина, указывает на необходимость создания корректировочного счета-фактуры.
//	* Исправление - Булево - Истина, указывает на необходимость создания исправительного счета-фактуры.
//
Функция ПараметрыЗаполненияПоСчетуФактуре(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыЗаполнения = Новый Структура("Основания, ДатаКорректировки");
	ПараметрыЗаполнения.Вставить("Корректировочный", Ложь);
	ПараметрыЗаполнения.Вставить("Исправление", Ложь);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованийКоррективочныхСФ
	|		ПО СчетФактураПолученный.Ссылка = ОснованийКоррективочныхСФ.ИсходныйДокумент
	|			И НЕ СчетФактураПолученный.Исправление
	|			И (ОснованийКоррективочныхСФ.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураПолученный.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованийКоррективочныхСФ
	|		ПО СчетФактураПолученный.СчетФактураОснование = ОснованийКоррективочныхСФ.ИсходныйДокумент
	|			И СчетФактураПолученный.Исправление
	|			И (ОснованийКоррективочныхСФ.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураПолученный.Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыЗаполнения.Исправление = Истина;
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Определяет необходимость ввода корректировочного счета-фактуры для документов-оснований счета-фактуры.
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураПолученный - Счет-фактура, для которого определяется необходимость корректировки.
//	Исходный - Булево - Ложь - Исходный счет-фактура будет вычислен на основании переданного.
//
// Возвращаемое значение:
//	Булево - Истина - требуется создание корректировочного счета-фактуры.
//
Функция ТребуетсяСозданиеКорректировочного(СчетФактура, Исходный = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Исходный Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаПриобретения.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
		|			ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаПриобретения.ДокументОснование
		|			И КорректировкаПриобретения.ВидКорректировки В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
		|ГДЕ
		|	ОснованияСчетаФактуры.Ссылка = &Ссылка";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(КорректировкаПриобретения.ДокументОснование, ОснованияСчетаФактуры.ДокументОснование) КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДокументыОснования
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
		|		ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаПриобретения.Ссылка
		|ГДЕ
		|	ОснованияСчетаФактуры.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОснованияСчетаФактуры.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ИсходныеСчетаФактуры
		|ИЗ
		|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ПО ВТ_ДокументыОснования.ДокументОснование = ОснованияСчетаФактуры.ДокументОснование
		|			И ОснованияСчетаФактуры.Ссылка.Проведен
		|			И (НЕ ОснованияСчетаФактуры.Ссылка.Исправление)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОснованияСчетаФактуры.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ОснованияИсходныхСФ
		|ИЗ
		|	ВТ_ИсходныеСчетаФактуры КАК ИсходныеСчетаФактуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ПО ИсходныеСчетаФактуры.Ссылка = ОснованияСчетаФактуры.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаПриобретения.Ссылка                КАК Ссылка
		|ИЗ
		|	ВТ_ОснованияИсходныхСФ КАК ВТ_ОснованияИсходныхСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
		|		ПО ВТ_ОснованияИсходныхСФ.ДокументОснование = КорректировкаПриобретения.ДокументОснование
		|			И (КорректировкаПриобретения.ВидКорректировки В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)))
		|";
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой()
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Контрагент.Партнер)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.ДатаСоставления         КАК Период,
	|	ДанныеДокумента.Дата                    КАК ДатаПолучения,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|			ДанныеДокумента.Дата
	|		ИНАЧЕ
	|			ДанныеДокумента.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ                                   КАК ПериодЗаписи,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Контрагент              КАК Контрагент,
	|	ДанныеДокумента.ИННКонтрагента          КАК ИННКонтрагента,
	|	ДанныеДокумента.КППКонтрагента          КАК КППКонтрагента,
	|	ДанныеДокумента.Партнер                 КАК Партнер,
	|	ДанныеДокумента.Договор                 КАК Договор,
	|	ДанныеДокумента.Склад                   КАК Склад,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Корректировочный        КАК Корректировочный,
	|	ДанныеДокумента.Исправление             КАК Исправление,
	|	ДанныеДокумента.ПолученВЭлектронномВиде КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.КодВидаОперации         КАК КодВидаОперации,
	|	ДанныеДокумента.КодВидаОперацииНаУменьшение КАК КодВидаОперацииНаУменьшение,
	|	ДанныеДокумента.Номер                   КАК Номер,
	|	ДанныеДокумента.НомерИсправления        КАК НомерИсправления,
	|	ДанныеДокумента.ДатаИсправления         КАК ДатаИсправления,
	|	ДанныеДокумента.Валюта                  КАК Валюта,
	|	ДанныеДокумента.СчетФактураОснование    КАК СчетФактураОснование,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	ДанныеДокумента.Ответственный           КАК Ответственный,
	|	ДанныеДокумента.СоставленКомиссионеромОтИмениПродавца    КАК СоставленКомиссионеромОтИмениПродавца,
	|	ДанныеДокумента.СводныйКомиссионный     КАК СводныйКомиссионный,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления
	|ИЗ
	|	Документ.СчетФактураПолученный КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Дата",                           Реквизиты.ДатаПолучения);
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("ДатаСоставления",                Реквизиты.Период);
	Запрос.УстановитьПараметр("ПериодЗаписи",                   Реквизиты.ПериодЗаписи);
	Запрос.УстановитьПараметр("Организация",                    Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",                     Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ИННКонтрагента",                 Реквизиты.ИННКонтрагента);
	Запрос.УстановитьПараметр("КППКонтрагента",                 Реквизиты.КППКонтрагента);
	Запрос.УстановитьПараметр("Партнер",                        Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Договор",                        Реквизиты.Договор);
	Запрос.УстановитьПараметр("Склад",                          Реквизиты.Склад);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",        Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("Корректировочный",               Реквизиты.Корректировочный);
	Запрос.УстановитьПараметр("Исправление",                    Реквизиты.Исправление);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",      ?(Реквизиты.ПолученВЭлектронномВиде, 2, 1));
	Запрос.УстановитьПараметр("КодВидаОперации",                Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("КодВидаОперацииНаУменьшение",    Реквизиты.КодВидаОперацииНаУменьшение);
	Запрос.УстановитьПараметр("Номер",                          Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерНаПечать",                  Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерИсправления",               Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("ДатаИсправления",                Реквизиты.ДатаИсправления);
	Запрос.УстановитьПараметр("Валюта",                         Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаСчетаФактуры",             Реквизиты.Валюта);
	Запрос.УстановитьПараметр("СчетФактураОснование",           Реквизиты.СчетФактураОснование);
	Запрос.УстановитьПараметр("Подразделение",                  Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Ответственный",                  Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("СоставленКомиссионеромОтИмениПродавца", Реквизиты.СоставленКомиссионеромОтИмениПродавца);
	Запрос.УстановитьПараметр("СводныйКомиссионный",            Реквизиты.СводныйКомиссионный);
	Запрос.УстановитьПараметр("Проведен",                       Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",                Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",        ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураПолученный"));
	
	УчетНДСУПСлужебный.УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыПолученного(Реквизиты, Запрос);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	
	ИнформацияПоИсправлению = "";
	Если ЗначениеЗаполнено(Реквизиты.ДатаИсправления)
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		Если Реквизиты.Исправление Тогда
			ИнформацияПоИсправлению = НСтр("ru = 'Исправление %НомерИсправления% от %ДатаИсправления%';
											|en = 'Correction %НомерИсправления% dated %ДатаИсправления%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		КонецЕсли;
		Если Реквизиты.Корректировочный Тогда
			ИнформацияПоИсправлению = НСтр("ru = 'Исправление %НомерИсправления% от %ДатаИсправления% (корректировочный)';
											|en = 'Correction %НомерИсправления% dated %ДатаИсправления% (corrective)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		КонецЕсли;
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления%", СокрЛП(Реквизиты.НомерИсправления));
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления%", Формат(Реквизиты.ДатаИсправления,"ДЛФ=D"));
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
КонецПроцедуры

Функция ТекстЗапросаВтСторнируемыеКорректировки(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтСторнируемыеКорректировки";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документы.ДокументОснование КАК СторнируемаяКорректировка
	|ПОМЕСТИТЬ ВтСторнируемыеКорректировки
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактура
	|			ПО Документы.Ссылка = СчетФактура.Ссылка
	|ГДЕ
	|	&Исправление
	|	И &Корректировочный
	|	И СчетФактура.Ссылка <> &Ссылка
	|	И СчетФактура.Номер ПОДОБНО &Номер
	|	И Документы.ДокументОснование ССЫЛКА Документ.КорректировкаПриобретения
	|	И НАЧАЛОПЕРИОДА(СчетФактура.ДатаСоставления, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	И СчетФактура.Корректировочный
	|	И НЕ СчетФактура.Исправление
	|	И СчетФактура.Проведен";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтВозвратыТоваровПоставщику(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтВозвратыТоваровПоставщику";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК ВозвратТоваровПоставщику,
	|	ВозвратыТоваровПоставщику.ДокументПоступления КАК ДокументПоступления,
	|	ДокументыОснования.ИсходныйДокумент КАК ИсходныйСчетФактура
	|ПОМЕСТИТЬ ВтВозвратыТоваровПоставщику
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.ВидыЗапасов КАК ВозвратыТоваровПоставщику
	|		ПО ДокументыОснования.ДокументОснование = ВозвратыТоваровПоставщику.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ИсходныеСчетаФактуры
	|		ПО ДокументыОснования.ИсходныйДокумент = ИсходныеСчетаФактуры.Ссылка
	|			И ВозвратыТоваровПоставщику.ДокументПоступления = ИсходныеСчетаФактуры.ДокументОснование
	|ГДЕ
	|	ДокументыОснования.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДокументыОснования";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСторнируемыеКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСторнируемыеКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВозвратыТоваровПоставщику", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВозвратыТоваровПоставщику(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.НомерСтроки - 1                                 КАК ИндексСтроки,
	|	ВЫБОР
	|		КОГДА &Корректировочный И &Исправление
	|			ТОГДА ВложенныйЗапрос.ДокументОснование
	|		КОГДА &Корректировочный И НЕ &Исправление
	|			ТОГДА ДокументыОснования.ДокументОснование
	|		ИНАЧЕ
	|			ЕСТЬNULL(КорректировкаПриобретения.ДокументОснование,ДокументыОснования.ДокументОснование)
	|	КОНЕЦ                                                              КАК КорректируемыйДокумент,
	|	ДокументыОснования.ДокументОснование                               КАК ДокументОснование,
	|	ДокументыОснования.ДокументОснование.Дата                          КАК ДатаДокументаОснования,
	|	КорректировкаПриобретения.ДокументОснование.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ДокументыОснования.НомерИсходногоДокумента                         КАК НомерИсходногоДокумента,
	|	ДокументыОснования.ДатаИсходногоДокумента                          КАК ДатаИсходногоДокумента,
	|	ДокументыОснования.НомерИсправленияИсходногоДокумента              КАК НомерИсправленияИсходногоДокумента,
	|	ДокументыОснования.ДатаИсправленияИсходногоДокумента               КАК ДатаИсправленияИсходногоДокумента
	|ПОМЕСТИТЬ ВтДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|			ПО ДокументыОснования.ДокументОснование = КорректировкаПриобретения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				СторнируемыеКорректировки.СторнируемаяКорректировка КАК ДокументОснование
	|			ИЗ
	|				ВтСторнируемыеКорректировки КАК СторнируемыеКорректировки
	|			) КАК ВложенныйЗапрос
	|				ПО (ИСТИНА)
	|ГДЕ
	|	ДокументыОснования.Ссылка = &Ссылка
	|	И &ПериодЗаписи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ ДокументыОснования.ДокументОснование ССЫЛКА Документ.ВозвратТоваровПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОснования.НомерСтроки - 1                    КАК ИндексСтроки,
	|	ВозвратыТоваровПоставщику.ДокументПоступления         КАК КорректируемыйДокумент,
	|	ДокументыОснования.ДокументОснование                  КАК ДокументОснование,
	|	ДокументыОснования.ДокументОснование.Дата             КАК ДатаДокументаОснования,
	|	НЕОПРЕДЕЛЕНО                                          КАК ЗакупкаПодДеятельность,
	|	ДокументыОснования.НомерИсходногоДокумента            КАК НомерИсходногоДокумента,
	|	ДокументыОснования.ДатаИсходногоДокумента             КАК ДатаИсходногоДокумента,
	|	ДокументыОснования.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|	ДокументыОснования.ДатаИсправленияИсходногоДокумента  КАК ДатаИсправленияИсходногоДокумента
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВозвратыТоваровПоставщику КАК ВозвратыТоваровПоставщику
	|			ПО ДокументыОснования.ДокументОснование = ВозвратыТоваровПоставщику.ВозвратТоваровПоставщику
	|			И ДокументыОснования.ИсходныйДокумент = ВозвратыТоваровПоставщику.ИсходныйСчетФактура
	|ГДЕ
	|	ДокументыОснования.Ссылка = &Ссылка
	|	И &ПериодЗаписи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|   NULL,
	|	ДокументВозврата.Ссылка КАК КорректируемыйДокумент,
	|	ДокументВозврата.Ссылка КАК ДокументОснование,
	|	ДокументВозврата.Дата   КАК ДатаДокументаОснования,
	|	NULL                    КАК ЗакупкаПодДеятельность,
	|   NULL,
	|   NULL,
	|   NULL,
	|   NULL
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДокументВозврата
	|ГДЕ
	|	ДокументВозврата.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСуммДокументов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстДанныеДокументовОснований =
	"ВЫБРАТЬ
	|	ДанныеОснований.ВидЦенности  КАК ВидЦенности,
	|	ДанныеОснований.СтавкаНДС    КАК СтавкаНДС,
	|	ДанныеОснований.БазаНДСРегл  КАК СуммаБезНДС,
	|	ДанныеОснований.СуммаНДСРегл КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаБезНДС + ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.БазаНДСРегл + ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ                        КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ                                КАК СуммаНДСЖурнал,
	|	ДокументыОснования.ДокументОснование КАК Основание,
	|	ДанныеОснований.НалогообложениеНДС   КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеОснований.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                КАК Комиссия
	|ПОМЕСТИТЬ ВтТаблицаСуммДокументов
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|		ПО ДанныеОснований.Регистратор = ДокументыОснования.ДокументОснование
	|ГДЕ
	|	ДанныеОснований.ТипСчетаФактуры = &ИдентификаторМетаданных
	|	И НЕ ДанныеОснований.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику";
	
	ТекстВозвратТоваровПоставщику =
	"ВЫБРАТЬ
	|	ДанныеОснований.ВидЦенности  КАК ВидЦенности,
	|	ДанныеОснований.СтавкаНДС    КАК СтавкаНДС,
	|	ДанныеОснований.БазаНДСРегл  КАК СуммаБезНДС,
	|	ДанныеОснований.СуммаНДСРегл КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаБезНДС + ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.БазаНДСРегл + ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ                        КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ                                КАК СуммаНДСЖурнал,
	|	ДокументыОснования.ДокументОснование КАК Основание,
	|	ДанныеОснований.НалогообложениеНДС   КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеОснований.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                КАК Комиссия
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|		ПО ДанныеОснований.Регистратор = ДокументыОснования.ДокументОснование
	|			И ДанныеОснований.КорректируемыйДокумент = ДокументыОснования.КорректируемыйДокумент
	|ГДЕ
	|	ДанныеОснований.ТипСчетаФактуры = &ИдентификаторМетаданных
	|	И ДанныеОснований.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику";
	
	ТекстПервичныйДокумент ="
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК ВидЦенности,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаНДС,
	|	Операция.СуммаРегл КАК СуммаПоСчетуФактуреЖурнал,
	|	0 КАК СуммаНДСЖурнал,
	|	ДокументыОснования.ДокументОснование,
	|	НЕОПРЕДЕЛЕНО КАК НалогообложениеНДС,
	|	ЛОЖЬ КАК Комиссия
	|ИЗ
	|	Документ.ПервичныйДокумент КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтДокументыОснования КАК ДокументыОснования
	|	ПО
	|		Операция.Ссылка = ДокументыОснования.ДокументОснование
	|";

	МассивЗапросов = Новый Массив();
	МассивЗапросов.Добавить(ТекстДанныеДокументовОснований);
	МассивЗапросов.Добавить(ТекстВозвратТоваровПоставщику);
	МассивЗапросов.Добавить(ТекстПервичныйДокумент);

	ТекстЗапроса = СтрСоединить(МассивЗапросов, " ОБЪЕДИНИТЬ ВСЕ ");
	
	Если Запрос.Параметры.Исправление Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументыОснования.ДокументОснование", "ДокументыОснования.КорректируемыйДокумент");
		ТекстЗапроса = ТекстЗапроса
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса, Истина)
	КонецЕсли;
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаВтПрошлыеКорректировки(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтПрошлыеКорректировки";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.КорректируемыйДокумент   КАК КорректируемыйДокумент,
	|	ДокументыОснования.ЗакупкаПодДеятельность   КАК ЗакупкаПодДеятельность,
	|	КорректировкаПриобретения.Ссылка             КАК ДокументОснование
	|ПОМЕСТИТЬ ВтПрошлыеКорректировки
	|ИЗ
	|	ВтДокументыОснования КАК ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|		ПО ДокументыОснования.КорректируемыйДокумент = КорректировкаПриобретения.ДокументОснование
	|ГДЕ
	|	&Исправление
	|	И КорректировкаПриобретения.Проведен
	|	И КорректировкаПриобретения.Дата < ДокументыОснования.ДатаДокументаОснования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОснования.КорректируемыйДокумент,
	|	ПриобретениеТоваровУслуг.ЗакупкаПодДеятельность,
	|	ПриобретениеТоваровУслуг.Ссылка
	|ИЗ
	|	ВтДокументыОснования КАК ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО ДокументыОснования.КорректируемыйДокумент = ПриобретениеТоваровУслуг.Ссылка
	|ГДЕ
	|	&Исправление
	|	И ДокументыОснования.КорректируемыйДокумент <> ДокументыОснования.ДокументОснование";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтПрошлыеИсправленияКорректировки(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтПрошлыеИсправленияКорректировки";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСторнируемыеКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСторнируемыеКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеТабличнойЧасти.ДокументОснование  КАК ДокументКорректировки,
	|	ВложенныйЗапрос.ДокументОснование       КАК ДокументОснование
	|ПОМЕСТИТЬ ВтПрошлыеИсправленияКорректировки
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДанныеТабличнойЧасти
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|			ПО ДанныеТабличнойЧасти.Ссылка = СчетФактураПолученный.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				СторнируемыеКорректировки.СторнируемаяКорректировка КАК ДокументОснование
	|			ИЗ
	|				ВтСторнируемыеКорректировки КАК СторнируемыеКорректировки
	|			) КАК ВложенныйЗапрос
	|				ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК Основания
	|			ПО (ИСТИНА)
	|ГДЕ
	|	&Исправление
	|	И &Корректировочный
	|	И СчетФактураПолученный.Ссылка <> &Ссылка
	|	И ДанныеТабличнойЧасти.ДокументОснование ССЫЛКА Документ.КорректировкаПриобретения
	|	И СчетФактураПолученный.Номер ПОДОБНО &Номер
	|	И НАЧАЛОПЕРИОДА(СчетФактураПолученный.ДатаСоставления, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	И НАЧАЛОПЕРИОДА(СчетФактураПолученный.ДатаИсправления,ДЕНЬ) < НАЧАЛОПЕРИОДА(&ДатаИсправления, ДЕНЬ)
	|	И СчетФактураПолученный.Корректировочный
	|	И СчетФактураПолученный.Проведен
	|	И ДанныеТабличнойЧасти.ДокументОснование <> Основания.ДокументОснование";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса, ПрошлыеКорректировки = Ложь)
	
	ИмяРегистра = "ВтТаблицаКорректировки";
	
	ТекстКорректировкаПриобретенияРасхождения =
	"ВЫБРАТЬ
	|	ДанныеОснований.ВидЦенности  КАК ВидЦенности,
	|	ДанныеОснований.СтавкаНДС    КАК СтавкаНДС,
	|	ДанныеОснований.БазаНДСРегл  КАК СуммаБезНДС,
	|	ДанныеОснований.СуммаНДСРегл КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаБезНДС + ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.БазаНДСРегл + ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ                        КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ                                КАК СуммаНДСЖурнал,
	|	ДокументыОснования.ДокументОснование КАК Основание,
	|	ДанныеОснований.НалогообложениеНДС   КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеОснований.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                КАК Комиссия
	|ПОМЕСТИТЬ ВтТаблицаКорректировки
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|		ПО ДанныеОснований.Регистратор = ДокументыОснования.ДокументОснование
	|ГДЕ
	|	(ДанныеОснований.ИсправлениеОшибок
	|		ИЛИ ДанныеОснований.КорректировкаПоСогласованиюСторон)	
	|	И ДанныеОснований.ТипСчетаФактуры = &ИдентификаторМетаданных
	|	И ТИПЗНАЧЕНИЯ(ДанныеОснований.Регистратор)  = ТИП(Документ.КорректировкаПриобретения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеОснований.ВидЦенности            КАК ВидЦенности,
	|	ДанныеОснований.СтавкаНДС              КАК СтавкаНДС,
	|	СУММА(ДанныеОснований.БазаНДСРегл)     КАК СуммаБезНДС,
	|	СУММА(ДанныеОснований.СуммаНДСРегл)    КАК СуммаНДС,
	|	СУММА(ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаБезНДС + ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.БазаНДСРегл + ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ)                                 КАК СуммаПоСчетуФактуреЖурнал,
	|	СУММА(ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ)                                 КАК СуммаНДСЖурнал,
	|	ДанныеОснований.КорректируемыйДокумент КАК Основание,
	|	ДанныеОснований.НалогообложениеНДС     КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеОснований.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ                                  КАК Комиссия
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|		ПО ДанныеОснований.Регистратор = ДокументыОснования.ДокументОснование
	|			И ДанныеОснований.КорректируемыйДокумент = ДокументыОснования.КорректируемыйДокумент
	|ГДЕ
	|	ДанныеОснований.КорректировкаПоСогласованиюСторон
	|	И ДанныеОснований.ТипСчетаФактуры = &ИдентификаторМетаданных
	|	И ТИПЗНАЧЕНИЯ(ДанныеОснований.Регистратор)  = ТИП(Документ.ВозвратТоваровПоставщику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснований.ВидЦенности,
	|	ДанныеОснований.СтавкаНДС,
	|	ДанныеОснований.ВидЦенности,
	|	ДанныеОснований.КорректируемыйДокумент,
	|	ДанныеОснований.НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеОснований.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|";
	
	ТекстПрошлыеИсправленияКорректировки =
	"ВЫБРАТЬ
	|	ДанныеОснований.ВидЦенности  КАК ВидЦенности,
	|	ДанныеОснований.СтавкаНДС    КАК СтавкаНДС,
	|	ДанныеОснований.БазаНДСРегл  КАК СуммаБезНДС,
	|	ДанныеОснований.СуммаНДСРегл КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаБезНДС + ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.БазаНДСРегл + ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = ДанныеОснований.Валюта
	|			ТОГДА ДанныеОснований.СуммаНДС
	|		ИНАЧЕ ДанныеОснований.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	ПрошлыеИсправленияКорректировки.ДокументОснование КАК Основание,
	|	ДанныеОснований.НалогообложениеНДС                КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеОснований.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Комиссия
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПрошлыеИсправленияКорректировки КАК ПрошлыеИсправленияКорректировки
	|			ПО ДанныеОснований.Регистратор = ПрошлыеИсправленияКорректировки.ДокументКорректировки
	|ГДЕ
	|	ДанныеОснований.ТипСчетаФактуры = &ИдентификаторМетаданных
	|	И ТИПЗНАЧЕНИЯ(ДанныеОснований.Регистратор) = ТИП(Документ.КорректировкаПриобретения)";

	Если ПрошлыеКорректировки Тогда
		
		Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрошлыеКорректировки", ТекстыЗапроса) Тогда
			ТекстЗапросаВтПрошлыеКорректировки(Запрос, ТекстыЗапроса);
		КонецЕсли; 
		
		ТекстЗапроса = ТекстКорректировкаПриобретенияРасхождения;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВтДокументыОснования","ВтПрошлыеКорректировки");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ПОМЕСТИТЬ ВтТаблицаКорректировки","");
		
	Иначе
		
		Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыОснования", ТекстыЗапроса) Тогда
			ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
		КонецЕсли; 

		Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрошлыеИсправленияКорректировки", ТекстыЗапроса) Тогда
			ТекстЗапросаВтПрошлыеИсправленияКорректировки(Запрос, ТекстыЗапроса);
		КонецЕсли; 
		
		ТекстЗапроса = ТекстКорректировкаПриобретенияРасхождения
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПрошлыеИсправленияКорректировки;
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса

КонецФункции

Функция ТекстЗапросаВтТаблицаДокументовДляКоррСФ(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхДляЖурнала";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|    ТаблицаДокументов.НалогообложениеНДС,
	|    ТаблицаДокументов.ДокументОснование КАК ДокументОснование,
	|    ТаблицаДокументов.СуммаПоСчетуФактуреУменьшение,
	|    ТаблицаДокументов.СуммаНДСУменьшение,
	|    ТаблицаДокументов.СуммаПоСчетуФактуреУвеличение,
	|    ТаблицаДокументов.СуммаНДСУвеличение,
	|    ТаблицаДокументов.СуммаПоСчетуФактуреУменьшениеКомиссия,
	|    ТаблицаДокументов.СуммаНДСУменьшениеКомиссия,
	|    ТаблицаДокументов.СуммаПоСчетуФактуреУвеличениеКомиссия,
	|    ТаблицаДокументов.СуммаНДСУвеличениеКомиссия,
	|    ТаблицаДокументов.Комиссия
	|
	|ПОМЕСТИТЬ ВтТаблицаДокументовДляКоррСФ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаКорректировки.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ТаблицаКорректировки.Основание КАК ДокументОснование,
	|		ВЫБОР
	|			КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал < 0 
	|				ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПоСчетуФактуреУменьшение,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаНДСЖурнал < 0 
	|				ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНДСУменьшение,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал > 0 
	|				ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПоСчетуФактуреУвеличение,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаНДСЖурнал > 0 
	|				ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНДСУвеличение,
	|		0 КАК СуммаПоСчетуФактуреУменьшениеКомиссия,
	|		0 КАК СуммаНДСУменьшениеКомиссия,
	|		0 КАК СуммаПоСчетуФактуреУвеличениеКомиссия,
	|		0 КАК СуммаНДСУвеличениеКомиссия,
	|		ЛОЖЬ КАК Комиссия
	|			
	|	ИЗ
	|		ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		ТаблицаКорректировки.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ТаблицаКорректировки.Основание КАК ДокументОснование,
	|	
	|		0 КАК СуммаПоСчетуФактуреУменьшение,
	|		0 КАК СуммаНДСУменьшение,
	|		0 КАК СуммаПоСчетуФактуреУвеличение,
	|		0 КАК СуммаНДСУвеличение,
	|			
	|		ВЫБОР
	|			КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал < 0 
	|				ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПоСчетуФактуреУменьшениеКомиссия,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаНДСЖурнал < 0 
	|				ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНДСУменьшениеКомиссия,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал > 0 
	|				ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПоСчетуФактуреУвеличениеКомиссия,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаНДСЖурнал > 0 
	|				ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНДСУвеличениеКомиссия,
	|		ИСТИНА КАК Комиссия
	|
	|	ИЗ
	|		ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|	ГДЕ
	|		ТаблицаКорректировки.Комиссия) КАК ТаблицаДокументов			
	|";
	 
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	 
КонецФункции

Функция ТекстЗапросаВтТаблицаДанныхДляЖурнала(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхДляЖурнала";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаСуммДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДокументовДляКоррСФ", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДокументовДляКоррСФ(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = " 	
	//ВТТаблицаДанныхДляЖурнала
	|ВЫБРАТЬ
	|   ТаблицаДанныхДляЖурнала.ИндексСтроки,
	|   ТаблицаДанныхДляЖурнала.НомерСчетаФактуры,
	|   ТаблицаДанныхДляЖурнала.ДатаСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.НомерКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаКорректировочногоСчетаФактуры,
	|   ТаблицаДанныхДляЖурнала.НомерИсправления,
	|   ТаблицаДанныхДляЖурнала.ДатаИсправления,
	|	ТаблицаДанныхДляЖурнала.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправленияКорректировочногоСчетаФактуры,
	|
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуре,
	|   ТаблицаДанныхДляЖурнала.СуммаНДС,
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУменьшение,
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУвеличение,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУменьшение,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУвеличение,
	|
	|   ТаблицаДанныхДляЖурнала.ПоСтавкеБезНДС,
	|   ТаблицаДанныхДляЖурнала.КодВидаСделки,
	|
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУменьшениеКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУвеличениеКомиссия,
	|
	|   ТаблицаДанныхДляЖурнала.КодВидаОперацииКомиссия
	|
	|ПОМЕСТИТЬ ВтТаблицаДанныхДляЖурнала
	| 
	|ИЗ
	| 
	// Данные счета-фактуры на поступление
	|	(ВЫБРАТЬ
	|  	 	NULL 	КАК ИндексСтроки,
	|   	&Номер 	КАК НомерСчетаФактуры,
	|  	 	&Период КАК ДатаСчетаФактуры,
	|		NULL 	КАК НомерКорректировочногоСчетаФактуры,
	|		NULL 	КАК ДатаКорректировочногоСчетаФактуры,
	|  	 	NULL 	КАК НомерИсправления,
	|   	NULL 	КАК ДатаИсправления,
	|		NULL 	КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|		NULL 	КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|
	|		ТаблицаДанных.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|		ТаблицаДанных.СуммаНДС 			  КАК СуммаНДС,
	|  	 	0 КАК 	СуммаПоСчетуФактуреРазницаУменьшение,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУвеличение,
	|   	0 КАК 	СуммаНДСРазницаУменьшение,
	|   	0 КАК 	СуммаНДСРазницаУвеличение,
	|
	|		ВЫБОР
	|			КОГДА ТаблицаДанных.НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПоСтавкеБезНДС,   
	|		ТаблицаДанных.КодВидаСделки КАК КодВидаСделки,
	|
	|		ТаблицаДанных.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|		ТаблицаДанных.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|   	0 КАК 	СуммаНДСРазницаУменьшениеКомиссия,
	|   	0 КАК 	СуммаНДСРазницаУвеличениеКомиссия,
	|
	|		ВЫБОР 
	|			КОГДА ТаблицаДанных.СуммаПоСчетуФактуреКомиссия <> 0 
	|				ТОГДА &КодВидаОперацииКомиссия
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК КодВидаОперацииКомиссия
	|
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ТаблицаДокументов.НалогообложениеНДС) КАК НалогообложениеНДС,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуре) КАК СуммаПоСчетуФактуре,
	|			СУММА(ТаблицаДокументов.СуммаНДС) КАК СуммаНДС,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреКомиссия) КАК СуммаПоСчетуФактуреКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаНДСКомиссия) КАК СуммаНДСКомиссия,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ТаблицаДокументов.Комиссия 
	|						ТОГДА ""4""
	|					ИНАЧЕ """"
	|				КОНЕЦ) КАК КодВидаСделки
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеНДС,
	|				ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал КАК СуммаПоСчетуФактуре,
	|				ТаблицаСуммДокументов.СуммаНДСЖурнал КАК СуммаНДС,
	|				0 КАК СуммаПоСчетуФактуреКомиссия,
	|				0 КАК СуммаНДСКомиссия,
	|				ТаблицаСуммДокументов.Комиссия КАК Комиссия
	|			ИЗ
	|				ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеНДС,
	|				0,
	|				0,
	|				ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал,
	|				ТаблицаСуммДокументов.СуммаНДСЖурнал,
	|				ИСТИНА КАК Комиссия
	|			ИЗ
	|				ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|			ГДЕ
	|				ТаблицаСуммДокументов.Комиссия
	|			
	|			) КАК ТаблицаДокументов
	|		) КАК ТаблицаДанных
	|	ГДЕ
	|		НЕ &Исправление
	|		И НЕ &Корректировочный 
	|
	|	ОБЪЕДИНИТЬ ВСЕ 
	|
	// Данные счета-фактуры исправления
	|	ВЫБРАТЬ
	|  	 	NULL 	            КАК ИндексСтроки,
	|   	&Номер 				КАК НомерСчетаФактуры,
	|  	 	&ДатаСоставления	КАК ДатаИсходногоДокумента,
	|		NULL 				КАК НомерКорректировочногоСчетаФактуры,
	|		NULL 				КАК ДатаКорректировочногоСчетаФактуры,
	|		&НомерИсправления 	КАК НомерИсправления,
	|		&ДатаИсправления 	КАК ДатаИсправления,
	|		NULL 				КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|		NULL 				КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|
	|		ТаблицаДанныхИсправление.СуммаПоСчетуФактуре,
	|		ТаблицаДанныхИсправление.СуммаНДС,
	|  	 	0 КАК 	СуммаПоСчетуФактуреРазницаУменьшение,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУвеличение,
	|   	0 КАК 	СуммаНДСРазницаУменьшение,
	|   	0 КАК 	СуммаНДСРазницаУвеличение,
	|
	|		ВЫБОР
	|			КОГДА ЕстьNULL(ТаблицаДанныхИсправление.НалогообложениеКорректировки, ТаблицаДанныхИсправление.НалогообложениеОснования)
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПоСтавкеБезНДС,
	|		ТаблицаДанныхИсправление.КодВидаСделки КАК КодВидаСделки,
	|
	|		ТаблицаДанныхИсправление.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|		ТаблицаДанныхИсправление.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|   	0 КАК 	СуммаНДСРазницаУменьшениеКомиссия,
	|   	0 КАК 	СуммаНДСРазницаУвеличениеКомиссия,
    |
	|		ВЫБОР 
	|			КОГДА ТаблицаДанныхИсправление.СуммаПоСчетуФактуреКомиссия <> 0 
	|				ТОГДА &КодВидаОперации
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК КодВидаОперацииКомиссия
	|		
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ТаблицаДокументов.НалогообложениеОснования) КАК НалогообложениеОснования,
	|			МАКСИМУМ(ТаблицаДокументов.НалогообложениеКорректировки) КАК НалогообложениеКорректировки,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуре) КАК СуммаПоСчетуФактуре,
	|			СУММА(ТаблицаДокументов.СуммаНДС) КАК СуммаНДС,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреКомиссия) КАК СуммаПоСчетуФактуреКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаНДСКомиссия) КАК СуммаНДСКомиссия,
	|			МАКСИМУМ(ВЫБОР
	|						КОГДА ТаблицаДокументов.Комиссия 
	|							ТОГДА ""4""
	|						ИНАЧЕ """"
	|					КОНЕЦ) КАК КодВидаСделки
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеОснования,
	|				NULL КАК НалогообложениеКорректировки,
	|				ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал КАК СуммаПоСчетуФактуре,
	|				ТаблицаСуммДокументов.СуммаНДСЖурнал КАК СуммаНДС,
	|				0 КАК СуммаПоСчетуФактуреКомиссия,
	|				0 КАК СуммаНДСКомиссия,
	|				ТаблицаСуммДокументов.Комиссия КАК Комиссия
	|			ИЗ
	|				ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	
	|			ОБЪЕДИНИТЬ ВСЕ
	|	
	|			ВЫБРАТЬ
	|				NULL,
	|				ТаблицаКорректировки.НалогообложениеНДС,
	|				ТаблицаКорректировки.СуммаПоСчетуфактуреЖурнал,
	|				ТаблицаКорректировки.СуммаНДСЖурнал,
	|				0,
	|				0,
	|				ТаблицаКорректировки.Комиссия КАК Комиссия
	|			ИЗ
	|				ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|	
	|			ОБЪЕДИНИТЬ ВСЕ
	|	
	|			ВЫБРАТЬ
	|				ТаблицаСуммДокументов.НалогообложениеНДС,
	|				NULL,
	|				0,
	|				0,
	|				ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал,
	|				ТаблицаСуммДокументов.СуммаНДСЖурнал,
	|				ТаблицаСуммДокументов.Комиссия КАК Комиссия
	|			ИЗ
	|				ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|			ГДЕ
	|				ТаблицаСуммДокументов.Комиссия
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				NULL,
	|				ТаблицаКорректировки.НалогообложениеНДС,
	|				0,
	|				0,
	|				ТаблицаКорректировки.СуммаПоСчетуфактуреЖурнал,
	|				ТаблицаКорректировки.СуммаНДСЖурнал,
	|				ТаблицаКорректировки.Комиссия КАК Комиссия
	|			ИЗ
	|				ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|			ГДЕ
	|				ТаблицаКорректировки.Комиссия
	|		
	|			) КАК ТаблицаДокументов
	|		) КАК ТаблицаДанныхИсправление
	|	ГДЕ
	|		&Исправление
	|		И НЕ &Корректировочный
	|
	|	ОБЪЕДИНИТЬ ВСЕ 
	|
	// Данные счета-фактуры корректировочного
	|	ВЫБРАТЬ
	|		ТаблицаДанныхКорректировка.ИндексСтроки,
	|		ТаблицаДанныхКорректировка.НомерИсходногоДокумента 				КАК НомерСчетаФактуры,
	|		ТаблицаДанныхКорректировка.ДатаИсходногоДокумента				КАК ДатаСчетаФактуры,
	|		&Номер 															КАК НомерКорректировочногоСчетаФактуры,
	|		&Период 														КАК ДатаКорректировочногоСчетаФактуры,
	|		ТаблицаДанныхКорректировка.НомерИсправленияИсходногоДокумента 	КАК НомерИсправления,
	|		ТаблицаДанныхКорректировка.ДатаИсправленияИсходногоДокумента 	КАК ДатаИсправления,
	|		&НомерИсправления 												КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|		ВЫБОР
	|			КОГДА &Исправление
	|				ТОГДА &ДатаИсправления
	|		КОНЕЦ 															КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|
	|		0 КАК СуммаПоСчетуФактуре,
	|		0 КАК СуммаНДС,
	|		-ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУменьшение 		КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|		ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУвеличение 		КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|		-ТаблицаДанныхКорректировка.СуммаНДСУменьшение КАК СуммаНДСРазницаУменьшение,
	|		ТаблицаДанныхКорректировка.СуммаНДСУвеличение  КАК СуммаНДСРазницаУвеличение,
	|
	|		ВЫБОР
	|			КОГДА ТаблицаДанныхКорректировка.НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПоСтавкеБезНДС,
	|		ТаблицаДанныхКорректировка.КодВидаСделки КАК КодВидаСделки,
	|
	|		0 КАК СуммаПоСчетуФактуреКомиссия,
	|		0 КАК СуммаНДСКомиссия,
	|		-ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|		ТаблицаДанныхКорректировка.СуммаНДСУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|		-ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУвеличениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|		ТаблицаДанныхКорректировка.СуммаНДСУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|
	|		ВЫБОР 
	|			КОГДА ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУменьшениеКомиссия <> 0 
	|			 	 ИЛИ ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУвеличениеКомиссия <> 0
	|				ТОГДА &КодВидаОперации
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК КодВидаОперацииКомиссия
	|
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ДанныеОснований.ИндексСтроки КАК ИндексСтроки,
	|			ДанныеОснований.НомерИсходногоДокумента КАК НомерИсходногоДокумента,
	|			ДанныеОснований.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента,
	|			ДанныеОснований.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|			ДанныеОснований.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента,
	|			МАКСИМУМ(ТаблицаДокументов.НалогообложениеНДС) КАК НалогообложениеНДС,
	|		
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУменьшение)         КАК СуммаПоСчетуФактуреУменьшение,
	|			СУММА(ТаблицаДокументов.СуммаНДСУменьшение)                    КАК СуммаНДСУменьшение,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУвеличение)         КАК СуммаПоСчетуФактуреУвеличение,
	|			СУММА(ТаблицаДокументов.СуммаНДСУвеличение)                    КАК СуммаНДСУвеличение,
	|		
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУменьшениеКомиссия) КАК СуммаПоСчетуФактуреУменьшениеКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаНДСУменьшениеКомиссия)            КАК СуммаНДСУменьшениеКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУвеличениеКомиссия) КАК СуммаПоСчетуФактуреУвеличениеКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаНДСУвеличениеКомиссия)            КАК СуммаНДСУвеличениеКомиссия,
	|			МАКСИМУМ(ВЫБОР
	|						КОГДА ТаблицаДокументов.Комиссия 
	|							ТОГДА ""4""
	|						ИНАЧЕ """"
	|					КОНЕЦ) КАК КодВидаСделки
	|		ИЗ
	|			ВтТаблицаДокументовДляКоррСФ КАК ТаблицаДокументов
	|		
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДанныеОснований
	|				ПО ТаблицаДокументов.ДокументОснование = ДанныеОснований.КорректируемыйДокумент
	|
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеОснований.ИндексСтроки,
	|			НомерИсходногоДокумента,
	|			ДатаИсходногоДокумента,
	|			НомерИсправленияИсходногоДокумента,
	|			ДатаИсправленияИсходногоДокумента
	|
	|		) КАК ТаблицаДанныхКорректировка
	|
	|	ГДЕ
	|		&Корректировочный) КАК ТаблицаДанныхДляЖурнала
	|
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДанныхДляЖурнала", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДанныхДляЖурнала(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос);
	
	ТекстЗапроса = " 
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец,
	|	ЖурналУчетаСчетовФактур.ИННПродавца КАК ИННПродавца,
	|	ЖурналУчетаСчетовФактур.КПППродавца КАК КПППродавца,
	|	ЖурналУчетаСчетовФактур.ИндексСтроки КАК ИндексСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	-ЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.Посредник КАК Посредник,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйПокупателю,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	-ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки КАК КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.Субкомиссионер КАК Субкомиссионер,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыПродавца КАК НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыПродавца КАК ДатаСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера КАК ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера КАК КППСубкомиссионера,
	|	ИСТИНА КАК Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|		&Период,
	|		НЕ Сторно
	|		И Регистратор <> &Ссылка
	|		И СчетФактура = &СчетФактураПредыдущееИсправление) КАК ЖурналУчетаСчетовФактур
	|
	|ГДЕ
	|	&Исправление
	|	И (ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеКомиссия > 0
	|		ИЛИ ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеКомиссия > 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	&Период																		КАК Период,
	|	&Организация 																КАК Организация,
	|	&Контрагент 																КАК Контрагент,
	|	&Ссылка                                                                     КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаПолучения												 				КАК ДатаВыставленияПолучения,
	|	&ПолученВЭлектронномВиде 													КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации 															КАК КодВидаОперации,
	|	ТаблицаДанныхДляЖурнала.НомерСчетаФактуры 									КАК НомерСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаСчетаФактуры 									КАК ДатаСчетаФактуры,
	|
	|	ТаблицаДанныхДляЖурнала.НомерКорректировочногоСчетаФактуры                  КАК НомерКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаКорректировочногоСчетаФактуры                   КАК ДатаКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.НомерИсправления                                    КАК НомерИсправления,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправления                                     КАК ДатаИсправления,
	|	ТаблицаДанныхДляЖурнала.НомерИсправленияКорректировочногоСчетаФактуры       КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправленияКорректировочногоСчетаФактуры        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЕСТЬNULL(Продавцы.Продавец, НЕОПРЕДЕЛЕНО)									КАК Продавец,
	|	Продавцы.ИННПродавца                                                        КАК ИННПродавца,
	|	Продавцы.КПППродавца                                                        КАК КПППродавца,
	|	ТаблицаДанныхДляЖурнала.ИндексСтроки                                        КАК ИндексСтроки,
	|	&ВалютаСчетаФактуры 														КАК Валюта,
	|	
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуре 								КАК СуммаПоСчетуФактуре,
	|	ТаблицаДанныхДляЖурнала.СуммаНДС 											КАК СуммаНДС,
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУменьшение				КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУвеличение                КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУменьшение                           КАК СуммаНДСРазницаУменьшение,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУвеличение                           КАК СуммаНДСРазницаУвеличение,
	|
	|	ТаблицаДанныхДляЖурнала.ПоСтавкеБезНДС                                      КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ 																		КАК СчетФактураНеВыставляется,     
	|	&ИННКонтрагента 															КАК ИННКонтрагента,
	|	&КППКонтрагента 															КАК КППКонтрагента,
	|	NULL                                                                        КАК Посредник,
	|	NULL                                                                        КАК СчетФактураВыданныйПокупателю,
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреКомиссия 						КАК СуммаПоСчетуФактуреКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСКомиссия 									КАК СуммаНДСКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия		КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия		КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУменьшениеКомиссия					КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУвеличениеКомиссия					КАК СуммаНДСРазницаУвеличениеКомиссия,
	|
	|	ТаблицаДанныхДляЖурнала.КодВидаОперацииКомиссия		                    	КАК КодВидаОперацииКомиссия,
	|	ТаблицаДанныхДляЖурнала.КодВидаСделки 										КАК КодВидаСделки,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки
	|
	|ИЗ 
	|	ВтТаблицаДанныхДляЖурнала КАК ТаблицаДанныхДляЖурнала	
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.Продавцы КАК Продавцы
	|	ПО
	|		Продавцы.Ссылка = &Ссылка
	|		И &СоставленКомиссионеромОтИмениПродавца
	|		И НЕ &СводныйКомиссионный
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	&Период																		КАК Период,
	|	&Организация 																КАК Организация,
	|	&Контрагент 																КАК Контрагент,
	|	&Ссылка										 								КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ДатаПолучения												 				КАК ДатаВыставленияПолучения,
	|	&ПолученВЭлектронномВиде 													КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации 															КАК КодВидаОперации,
	|	ТаблицаДанныхДляЖурнала.НомерСчетаФактуры 									КАК НомерСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаСчетаФактуры 									КАК ДатаСчетаФактуры,
	|
	|	ТаблицаДанныхДляЖурнала.НомерКорректировочногоСчетаФактуры                  КАК НомерКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаКорректировочногоСчетаФактуры                   КАК ДатаКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.НомерИсправления                                    КАК НомерИсправления,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправления                                     КАК ДатаИсправления,
	|	ТаблицаДанныхДляЖурнала.НомерИсправленияКорректировочногоСчетаФактуры       КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправленияКорректировочногоСчетаФактуры        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	Продавцы.Продавец															КАК Продавец,
	|	Продавцы.ИННПродавца														КАК ИННПродавца,
	|	Продавцы.КПППродавца														КАК КПППродавца,
	|	Продавцы.НомерСтроки														КАК ИндексСтроки,
	|	&ВалютаСчетаФактуры 														КАК Валюта,
	|	
	|	0													 						КАК СуммаПоСчетуФактуре,
	|	0													 						КАК СуммаНДС,
	|	0													 						КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0													 						КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0													 						КАК СуммаНДСРазницаУменьшение,
	|	0													 						КАК СуммаНДСРазницаУвеличение,
	|
	|	ТаблицаДанныхДляЖурнала.ПоСтавкеБезНДС                                      КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ 																		КАК СчетФактураНеВыставляется,
	|	&ИННКонтрагента 															КАК ИННКонтрагента,
	|	&КППКонтрагента 															КАК КППКонтрагента,
	|	NULL                                                                        КАК Посредник,
	|	NULL                                                                        КАК СчетФактураВыданныйПокупателю,
	|	0													 						КАК СуммаПоСчетуФактуреКомиссия,
	|	0										 									КАК СуммаНДСКомиссия,
	|	0																			КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0																			КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0																			КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0																			КАК СуммаНДСРазницаУвеличениеКомиссия,
	|
	|	ТаблицаДанныхДляЖурнала.КодВидаОперацииКомиссия		                    	КАК КодВидаОперацииКомиссия,
	|	ТаблицаДанныхДляЖурнала.КодВидаСделки 										КАК КодВидаСделки,
	|	NULL КАК Субкомиссионер,
	|	NULL КАК НомерСчетаФактурыПродавца,
	|	NULL КАК ДатаСчетаФактурыПродавца,
	|	NULL КАК ИННСубкомиссионера,
	|	NULL КАК КППСубкомиссионера,
	|	ЛОЖЬ КАК Сторно,
	|	NULL КАК ИсправленныйСчетФактура,
	|	NULL КАК СчетФактураПолученныйОтПродавца,
	|	NULL КАК ИсправлениеСобственнойОшибки
	|
	|ИЗ 
	|	ВтТаблицаДанныхДляЖурнала КАК ТаблицаДанныхДляЖурнала	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.Продавцы КАК Продавцы
	|	ПО
	|		Продавцы.Ссылка = &Ссылка
	|ГДЕ
	|	&СоставленКомиссионеромОтИмениПродавца
	|	И &СводныйКомиссионный
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
		
КонецФункции

Функция ПредыдущийСчетФактураИсправление(СчетФактураОснование, НомерИсправления)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка           КАК ИсправленныйСчетФактура,
	|	СчетФактура.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактура
	|ГДЕ
	|	СчетФактура.СчетФактураОснование = &СчетФактураОснование
	|	И СчетФактура.Проведен
	|	И СчетФактура.Исправление
	|	И СчетФактура.НомерИсправления <> &НомерИсправления
	|";
	Запрос.УстановитьПараметр("СчетФактураОснование", СчетФактураОснование);
	Запрос.УстановитьПараметр("НомерИсправления",     НомерИсправления);
	
	ПредыдущийНомер = 0;
	ИсправленныйСчетФактура = Неопределено;
	Если Не ЗначениеЗаполнено(НомерИсправления) Тогда
		НомерИсправленияЧислом = 0;
	Иначе
		НомерИсправленияЧислом = Число(НомерИсправления);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерИзВыборки = Число(Выборка.НомерИсправления);
		Если НомерИзВыборки < НомерИсправленияЧислом
			И НомерИзВыборки > ПредыдущийНомер Тогда
			ПредыдущийНомер = НомерИзВыборки;
			ИсправленныйСчетФактура = Выборка.ИсправленныйСчетФактура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИсправленныйСчетФактура;
	
КонецФункции

Процедура УстановитьПараметрСчетФактураПредыдущееИсправление(Запрос)
	
	Если Запрос.Параметры.Свойство("СчетФактураПредыдущееИсправление") Тогда
		Возврат;
	КонецЕсли;
	
	Если Запрос.Параметры.Исправление Тогда
		СчетФактураПредыдущееИсправление = 
			ПредыдущийСчетФактураИсправление(
				Запрос.Параметры.СчетФактураОснование, 
				Запрос.Параметры.НомерИсправления);
	Иначе
		СчетФактураПредыдущееИсправление = Неопределено;
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("СчетФактураПредыдущееИсправление", СчетФактураПредыдущееИсправление);
	
КонецПроцедуры

Функция ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтОснований";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                    КАК Ссылка,
	|	ДанныеДокумента.ХозяйственнаяОперация     КАК ХозяйственнаяОперация,
	|	МИНИМУМ(ДанныеДокумента.НомерСтроки <> 1) КАК ДополнительнаяЗапись
	|ПОМЕСТИТЬ ВтОснований
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                  КАК Ссылка,
	|	&Дата                    КАК ДатаДокументаИБ,
	|	&Номер                   КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&Организация             КАК Организация,
	|	&Контрагент              КАК Контрагент,
	|	&Подразделение           КАК Подразделение,
	|	&Ответственный           КАК Ответственный,
	|	""""                     КАК Комментарий,
	|	&Валюта                  КАК Валюта,
	|	0                        КАК Сумма,
	|	НЕОПРЕДЕЛЕНО             КАК Статус,
	|	&Проведен                КАК Проведен,
	|	&ПометкаУдаления         КАК ПометкаУдаления,
	|	&ИнформацияПоИсправлению КАК Дополнительно,
	|	&ДатаСоставления         КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать           КАК НомерПервичногоДокумента,
	|	&Склад                   КАК МестоХранения,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Партнер                 КАК Партнер,
	|	&Договор                 КАК Договор,
	|	&ДатаСоставления         КАК ДатаОтраженияВУчете,
	|	ЕСТЬNULL(ДанныеОснований.ДополнительнаяЗапись, ЛОЖЬ) КАК ДополнительнаяЗапись,
	|	ЕСТЬNULL(ДанныеОснований.ХозяйственнаяОперация, ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)) КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СчетФактураПолученный КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОснований КАК ДанныеОснований
	|		ПО ДанныеДокумента.Ссылка = ДанныеОснований.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ДатаПолучения                          КАК Период,
	|	&Организация                            КАК Организация,
	|	НАЧАЛОПЕРИОДА(&ПериодЗаписи, ДЕНЬ)      КАК ДатаОтражения
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента      = "Документ.СчетФактураПолученный";
	СинонимТаблицыДокумента = "";
	ВЗапросеЕстьИсточник    = Истина;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("НомерНаПечать",           """""");
	ПереопределениеРасчетаПараметров.Вставить("ИнформацияПоИсправлению", """""");
	ПереопределениеРасчетаПараметров.Вставить("ДатаПолучения", "ДанныеДокумента.Дата");
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтОснований", ТекстЗапросаВтОснований(Запрос, ТекстыЗапроса));
		СинонимТаблицыДокумента = "ДанныеДокумента";
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';
								|en = 'In document %ПолноеИмяДокумента%, adaptation of request for generating records of register %ИмяРегистра% is not implemented.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ВЗапросеЕстьИсточник,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса,
			ПолноеИмяДокумента,
			СинонимТаблицыДокумента,
			ПереопределениеРасчетаПараметров,
			ТекстыЗапросаВременныхТаблиц);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Определяет счета-фактуры выданные для печати по переданным документам-основаниям.
// 
// Параметры:
//	МассивОбъектов - Массив - Документ-основания, для которых необходимо найти счета-фактуры
//	ПечатьВВалюте - Булево - Признак печати счетов-фактуры в валюте.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* СчетаФактурыНаПечать - Массив - Найденные счета-фактуры для печати.
//	* ТаблицаОшибок - ТаблицаЗначений - Документы-основания, по которым счет-фактура не может быть напечатан.
//
Функция ПолучитьСчетаФактурыНаПечать(МассивОбъектов, ПечатьВВалюте = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаОснований = Новый ТаблицаЗначений;
	ТаблицаОснований.Колонки.Добавить("ДокументОснование",
		Метаданные.Документы.СчетФактураПолученный.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип);
	Для Каждого ДокументОснование Из МассивОбъектов Цикл
		СтрокаОснования = ТаблицаОснований.Добавить();
		СтрокаОснования.ДокументОснование = ДокументОснование;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ДокументыОснования
	|ИЗ
	|	&ТаблицаОснований КАК ДокументыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОснования.ДокументОснование КАК Ссылка,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ДанныеОснованийСчетовФактур.Валюта ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеТребуетсяСчетФактура,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ПечатьВВалюте
	|					И ЕСТЬNULL(ДанныеОснованийСчетовФактур.Валюта, &ВалютаРегламентированногоУчета) = &ВалютаРегламентированногоУчета
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НеТребуетсяПечатьВВалюте
	|ПОМЕСТИТЬ ТаблицаОснований
	|ИЗ
	|	ДокументыОснования КАК ДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|		ПО ДокументыОснования.ДокументОснование = ДанныеОснованийСчетовФактур.Регистратор
	|			И (ДанныеОснованийСчетовФактур.ТипСчетаФактуры = &ИдентификаторМетаданных)
	|			И (ДанныеОснованийСчетовФактур.Контрагент ССЫЛКА Справочник.Контрагенты)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОснования.ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка                 КАК ДокументОснование,
	|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
	|ПОМЕСТИТЬ НомераИсправлений
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетаФактурыОснования
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетаФактуры
	|			ПО СчетаФактурыОснования.Ссылка = СчетаФактуры.Ссылка
	|			И НЕ СчетаФактуры.ПометкаУдаления
	|		ПО ТаблицаОснований.Ссылка = СчетаФактурыОснования.ДокументОснование
	|			И НЕ ТаблицаОснований.НеТребуетсяСчетФактура
	|			И НЕ ТаблицаОснований.НеТребуетсяПечатьВВалюте
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОснований.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыОснования.ДокументОснование КАК Ссылка
	|
	|ПОМЕСТИТЬ ОснованияСоСчетФактурой
	|ИЗ
	|	НомераИсправлений КАК СчетаФактурыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|ИЗ
	|	НомераИсправлений КАК НомераИсправлений
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетаФактурыОснования
	|		ПО НомераИсправлений.ДокументОснование = СчетаФактурыОснования.ДокументОснование
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО СчетаФактурыОснования.Ссылка = СчетФактураПолученный.Ссылка
	|			И НЕ СчетФактураПолученный.ПометкаУдаления
	|			И НомераИсправлений.НомерИсправления = СчетФактураПолученный.НомерИсправления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка                   КАК ДокументОснование,
	|	ТаблицаОснований.НеТребуетсяСчетФактура   КАК НеТребуетсяСчетФактура,
	|	ТаблицаОснований.НеТребуетсяПечатьВВалюте КАК НеТребуетсяПечатьВВалюте,
	|	ВЫБОР
	|		КОГДА ОснованияСоСчетФактурой.Ссылка ЕСТЬ NULL ТОГДА
	|			ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                     КАК НеВыставленСчетФактура
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ОснованияСоСчетФактурой КАК ОснованияСоСчетФактурой
	|	ПО ТаблицаОснований.Ссылка = ОснованияСоСчетФактурой.Ссылка";
	
	Запрос.УстановитьПараметр("ТаблицаОснований", ТаблицаОснований);
	Запрос.УстановитьПараметр("ПечатьВВалюте", ПечатьВВалюте);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
		ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураПолученный"));
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	СчетаФактурыНаПечать = РезультатЗапроса[4].Выгрузить().ВыгрузитьКолонку("Ссылка");
	ТаблицаОшибок        = РезультатЗапроса[5].Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("СчетаФактурыНаПечать", СчетаФактурыНаПечать);
	Структура.Вставить("ТаблицаОшибок",        ТаблицаОшибок);
	
	Возврат Структура;
	
КонецФункции

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеСчетовФактур 

Функция СформироватьГиперссылкуКОформлению(Параметры) Экспорт
	
	Если Не ПравоДоступа("Просмотр", Метаданные.Отчеты.НаличиеСчетовФактур) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры.Вставить("МассивОрганизаций",?(ЗначениеЗаполнено(Параметры.Организация), 
											ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.Организация),
											Неопределено));
	
	Если Параметры.Свойство("КраткоеПредставление") Тогда
		ТекстГиперссылки = НСтр("ru = 'СФ полученные';
								|en = 'Received tax invoices'");
	Иначе
		ТекстГиперссылки = НСтр("ru = 'Счета-фактуры полученные';
								|en = 'Received tax invoices'");
	КонецЕсли;	
	
	КоличествоДокументов = ЕстьСчетаФактурыКОформлению(Параметры);
	
	Если КоличествоДокументов = 0 Тогда
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИмяФормыСчетФактураПолученный());
	Иначе
		Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыСчетФактураПолученный());
	КонецЕсли;
	
КонецФункции

Функция ИмяФормыСчетФактураПолученный() Экспорт
	
	Возврат "Отчет.НаличиеСчетовФактур.Форма.ФормаОтчета";
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = "Документ.СчетФактураПолученный";
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Дата УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Ссылка");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиСсылки();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснованияСчетаФактуры.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснованияСчетаФактуры
	|ГДЕ
	|	ДокументыОснованияСчетаФактуры.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)"
	);
	
	Данные = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.СчетФактураПолученный";
	
	НовыеРеквизиты = Новый Массив;
	НовыеРеквизиты.Добавить("Партнер");
	НовыеРеквизиты.Добавить("Договор");
	НовыеРеквизиты.Добавить("Склад");
	НовыеРеквизиты.Добавить("НаправлениеДеятельности");
	РеквизитыСтрокой = СтрСоединить(НовыеРеквизиты, ",");
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбновляемыхДанных", ОбновляемыеДанные);
	
	Запрос.Текст =
	"ВЫБРАТЬ ТаблицаДанных.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТОбъектыДляОбработки
	|ИЗ &ТаблицаОбновляемыхДанных КАК ТаблицаДанных;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	ДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|		КОГДА ТИП(Документ.ВводОстатков)
	|			ТОГДА ВводОстатков.Склад
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеРеестра.МестоХранения.Ключ КАК Справочник.Склады)
	|	КОНЕЦ КАК Склад,
	|
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|		КОГДА ТИП(Документ.ВводОстатков)
	|			ТОГДА ВводОстатков.НаправлениеДеятельности
	|		КОГДА ТИП(Документ.ПервичныйДокумент)
	|			ТОГДА ПервичныйДокумент.НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.НаправлениеДеятельности, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|		КОГДА ТИП(Документ.ВводОстатков)
	|			ТОГДА ВводОстатков.Партнер
	|		КОГДА ТИП(Документ.ПервичныйДокумент)
	|			ТОГДА ПервичныйДокумент.Партнер
	|		ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.Партнер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Партнер,
	|
	|	ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|		КОГДА ТИП(Документ.ПервичныйДокумент)
	|			ТОГДА ПервичныйДокумент.Договор
	|		ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.Договор, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Договор,
	|
	|	ВЫБОР
	|		КОГДА ДокументыОснования.ДокументОснование ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		ИНАЧЕ
	|			ВЫБОР ТИПЗНАЧЕНИЯ(ДокументыОснования.ДокументОснование)
	|				КОГДА ТИП(Документ.ВводОстатков)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|				КОГДА ТИП(Документ.ПервичныйДокумент)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|				КОГДА ТИП(Документ.ВыкупВозвратнойТарыУПоставщика)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|				КОГДА ТИП(Документ.КорректировкаРеализации)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНедопоставленногоТовара)
	|				КОГДА ТИП(Документ.ОтчетКомиссионера)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|				КОГДА ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУДругойОрганизации)
	|				КОГДА ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	//++ НЕ УТКА
	|				КОГДА ТИП(Документ.ПриобретениеУслугПоЛизингу)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеПоЛизинговомуДоговору)
	//-- НЕ УТКА
	|				ИНАЧЕ ЕСТЬNULL(ДанныеРеестра.ХозяйственнаяОперация,
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика))
	|			КОНЕЦ
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|	ПО ОбъектыДляОбработки.Ссылка = ДокументыОснования.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК ДанныеРеестра
	|	ПО ДокументыОснования.ДокументОснование = ДанныеРеестра.Ссылка
	|		И НЕ ДанныеРеестра.ДополнительнаяЗапись
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ВводОстатков
	|	ПО ДокументыОснования.ДокументОснование = ВводОстатков.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|	ПО ДокументыОснования.ДокументОснование = ПервичныйДокумент.Ссылка
	|
	|ИТОГИ ПО Ссылка
	|";
	
	ОтборОснования = Новый Структура("ДокументОснование");
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДокументов = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		ОбъектИзменен = Ложь;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокументов.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(
				ВыборкаДокументов.Ссылка, ВыборкаДокументов.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ЗначенияРеквизитов = Новый Структура(РеквизитыСтрокой);
			
			Для Каждого СтрокаТаблицы Из ДокументОбъект.ДокументыОснования Цикл
				
				ПерваяСтрока = Истина;
				
				ОтборОснования.ДокументОснование = СтрокаТаблицы.ДокументОснование;
				
				ВыборкаОснований = ВыборкаДокументов.Выбрать();
				Если ВыборкаОснований.НайтиСледующий(ОтборОснования) Тогда
					
					СтрокаТаблицы.ХозяйственнаяОперация = ВыборкаОснований.ХозяйственнаяОперация;
					ОбъектИзменен = Истина;
					
					Если ПерваяСтрока Тогда
						ПерваяСтрока = Ложь;
						ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, ВыборкаОснований);
						Продолжить;
					КонецЕсли;
					
					Для Каждого Реквизит Из НовыеРеквизиты Цикл
						
						Если ЗначенияРеквизитов.Свойство(Реквизит)
							И ЗначенияРеквизитов[Реквизит] <> ВыборкаОснований[Реквизит] Тогда
							ЗначенияРеквизитов.Удалить(Реквизит);
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ЗначенияРеквизитов.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(ДокументОбъект, ЗначенияРеквизитов);
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			ЗначенияРеквизитов = Неопределено;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект,,, РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаДокументов.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), ВыборкаДокументов.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли