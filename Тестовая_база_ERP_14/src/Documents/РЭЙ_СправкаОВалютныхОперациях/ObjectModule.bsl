
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	СтатусЗадачаВЭДСоздана();

	ПроведениеПоРегиструСправкиВалютногоКонтроля();

	ЗаполнениеСВОвПлатежныхПоручениях(Отказ);
	
	РЭЙ_ЗадачиСервер.ОбработкаЗадачПоКонтролюОжидаемыхСроков();
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Для Каждого СтрокаТаб Из ВалютныеОперации Цикл
		Если ЗначениеЗаполнено(СтрокаТаб.РасчетныйДокумент) Тогда
			РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(СтрокаТаб.РасчетныйДокумент, "ПодлежитСозданию");
		КонецЕсли;
	КонецЦикла; 
	
	РЭЙ_ЗадачиСервер.ОбработкаЗадачПоКонтролюОжидаемыхСроков(Ссылка);
	
	// {!!! Перенести в модуль формы
	//#Если Клиент Тогда
	//	Оповестить("ИзмененСтатусЗадачиВЭД");
	//#КонецЕсли
	// {!!!
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПрефиксацияОбъектовСобытия.ПроверитьНомерДокументаПоДатеИОрганизации(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	Для Каждого СтрокаВалютныеОперации Из ВалютныеОперации Цикл
		ВидВалютнойОперацииКод = Лев(СокрЛП(СтрокаВалютныеОперации.ВидВалютнойОперации.Код)+"     ", 5);
		СтрокаВалютныеОперации.ВидВалютнойОперации_1_2 = СокрЛП(Лев(ВидВалютнойОперацииКод, 2));
		СтрокаВалютныеОперации.ВидВалютнойОперации_3_5 = СокрЛП(Сред(ВидВалютнойОперацииКод, 3));
	КонецЦикла; 

	Для Каждого СтрокаВалютныеОперации Из ВалютныеОперацииРучные Цикл
		ВидВалютнойОперацииКод = Лев(СокрЛП(СтрокаВалютныеОперации.ВидВалютнойОперации.Код)+"     ", 5);
		СтрокаВалютныеОперации.ВидВалютнойОперации_1_2 = СокрЛП(Лев(ВидВалютнойОперацииКод, 2));
		СтрокаВалютныеОперации.ВидВалютнойОперации_3_5 = СокрЛП(Сред(ВидВалютнойОперацииКод, 3));
	КонецЦикла;
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	Если Константы.РЭЙ_ИспользоватьПрефиксыВНумерацииДокументовВЭД.Получить() Тогда		
		ПрефиксацияОбъектовСобытия.УстановитьПрефиксИнформационнойБазыИОрганизации(ЭтотОбъект, СтандартнаяОбработка, Префикс);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	//проверка заполнения таблицы "Валютные операции"
	Для Индекс = 0 По ВалютныеОперации.Количество() - 1 Цикл
		СтрокаТЧ = ВалютныеОперации.Получить(Индекс);
		Если ВидОперации = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОВалютныхОперациях Тогда
			Если ЗначениеЗаполнено(СтрокаТЧ.РасчетныйДокумент)
				и (СтрокаТЧ.НаправлениеПлатежа = 2)
				и (ПустаяСтрока(СтрокаТЧ.НомерРасчетногоДокумента)) Тогда
				
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Не заполнен номер уведомления в строке " + СтрокаТЧ.НомерСтроки + " списка ""Валютные операции""";
				Сообщение.Поле = "ВалютныеОперации[" + Индекс + "].НомерРасчетногоДокумента";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.КонтрактВЭД) Тогда
			Если Не ЗначениеЗаполнено(СтрокаТЧ.ПаспортСделки) И СтрокаТЧ.КонтрактВЭД.НеЯвляетсяОбъектомВалютногоКонтроля = Ложь Тогда
				
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Не заполнена колонка ""Уникальный номер контракта"" в строке " + СтрокаТЧ.НомерСтроки + " списка ""Валютные операции""";
				Сообщение.Поле = "ВалютныеОперации[" + Индекс + "].ПаспортСделки";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	//проверка заполнения таблицы "Валютные операции ручные"
	Для Индекс = 0 По ВалютныеОперацииРучные.Количество() - 1 Цикл
		СтрокаТЧ = ВалютныеОперацииРучные.Получить(Индекс);
		Если ЗначениеЗаполнено(СтрокаТЧ.КонтрактВЭД) Тогда
			Если Не ЗначениеЗаполнено(СтрокаТЧ.ПаспортСделки) И СтрокаТЧ.КонтрактВЭД.НеЯвляетсяОбъектомВалютногоКонтроля = Ложь Тогда
				
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Не заполнена колонка ""Уникальный номер контракта"" в строке " + СтрокаТЧ.НомерСтроки + " списка ""Валютные операции ручные""";
				Сообщение.Поле = "ВалютныеОперацииРучные[" + Индекс + "].ПаспортСделки";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	//Проверка соответствия сумме платежа при разбиении на несколько строк
	Если Константы.РЭЙ_НеКонтролироватьСуммыВСправкахВалютногоКонтроля.Получить() = Ложь Тогда
		ВалютныеОперацииСвернуто = ВалютныеОперации.Выгрузить();
		ВалютныеОперацииСвернуто.Свернуть("РасчетныйДокумент, КонтрактВЭД, ВалютаКонтракта, ВалютаДокумента", "СуммаВВалютеДокумента, СуммаВВалютеКонтракта");
		Для Каждого СтрокаТЧ Из ВалютныеОперацииСвернуто Цикл
			Если ЗначениеЗаполнено(СтрокаТЧ.РасчетныйДокумент) Тогда
				СтруктураСуммаРасчетногоДокумента = РЭЙ_СлужебныйСервер.ПолучитьСуммуДокументаДляСВО(СтрокаТЧ.РасчетныйДокумент, СтрокаТЧ.КонтрактВЭД);
				
				Если СтрокаТЧ.СуммаВВалютеДокумента <> СтруктураСуммаРасчетногоДокумента.СуммаВВалютеДокумента Тогда
					текТекстОшибки = РЭЙ_СлужебныйСервер.ПостроительСтроки("Для документа {0} не совпадает сумма в валюте документа {1}{2} по таблице ""Валютные операции"" с суммой в документе {3}{4}",
					РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.РасчетныйДокумент), 
					Формат(СтрокаТЧ.СуммаВВалютеДокумента, "ЧДЦ=2"), 
					СтрокаТЧ.ВалютаДокумента, 
					Формат(СтруктураСуммаРасчетногоДокумента.СуммаВВалютеДокумента, "ЧДЦ=2"), 
					СтрокаТЧ.ВалютаДокумента);
					
					
					СтрокиСОшибками = ВалютныеОперации.НайтиСтроки(Новый Структура("РасчетныйДокумент", СтрокаТЧ.РасчетныйДокумент));
					Для Каждого СтрокаСОшибкой Из СтрокиСОшибками Цикл
						Сообщение = Новый СообщениеПользователю();
						Сообщение.Текст = текТекстОшибки;
						Сообщение.Поле = "ВалютныеОперации[" + ВалютныеОперации.Индекс(СтрокаСОшибкой) + "].РасчетныйДокумент";
						Сообщение.УстановитьДанные(ЭтотОбъект);
						Сообщение.Сообщить();
						
						Отказ = Истина;
					КонецЦикла;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаТЧ.ВалютаКонтракта) Тогда
					Если СтруктураСуммаРасчетногоДокумента.СуммаВВалютеКонтрактаУказанаВДокументе Тогда
						Если СтрокаТЧ.СуммаВВалютеКонтракта <> СтруктураСуммаРасчетногоДокумента.СуммаВВалютеКонтракта Тогда
							текТекстОшибки = РЭЙ_СлужебныйСервер.ПостроительСтроки("для документа {0} не совпадает сумма в валюте контракта {1}{2} по таблице ""Валютные операции"" с суммой в документе {3}{4}",
							РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.РасчетныйДокумент), 
							Формат(СтрокаТЧ.СуммаВВалютеКонтракта, "ЧДЦ=2"), 
							СтрокаТЧ.ВалютаКонтракта, 
							Формат(СтруктураСуммаРасчетногоДокумента.СуммаВВалютеКонтракта, "ЧДЦ=2"), 
							СтрокаТЧ.ВалютаКонтракта);
							
							
							СтрокиСОшибками = ВалютныеОперации.НайтиСтроки(Новый Структура("РасчетныйДокумент", СтрокаТЧ.РасчетныйДокумент));
							Для Каждого СтрокаСОшибкой Из СтрокиСОшибками Цикл
								Сообщение = Новый СообщениеПользователю();
								Сообщение.Текст = текТекстОшибки;
								Сообщение.Поле = "ВалютныеОперации[" + ВалютныеОперации.Индекс(СтрокаСОшибкой) + "].РасчетныйДокумент";
								Сообщение.УстановитьДанные(ЭтотОбъект);
								Сообщение.Сообщить();
								
								Отказ = Истина;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Печать

Функция ПолучитьДанныеДляПечати() Экспорт
	Если Дата >= Дата(2018,03,01) Тогда
		Возврат ДанныеДляПечати_2018();
	Иначе
		Возврат ДанныеДляПечати_2015();
	КонецЕсли;
КонецФункции

#Область ПечатьАктуальнаяВерсия

Функция ДанныеДляПечати_2018()
	ДанныеДляПечати = Новый Структура;
	ШапкаДанных = Новый Структура;
	ДанныеДляПечати.Вставить("Шапка", ШапкаДанных);
	
	// банк
	ШапкаДанных.Вставить("БанкНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеБанкаДляПечати(Банк));
	ШапкаДанных.Вставить("БанкКод", Банк.Код);
	
	// организация
	Если Не ПустаяСтрока(Организация.НаименованиеПолное) Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.НаименованиеПолное);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.Наименование);
	КонецЕсли;
	СтрокиНаименованияДляКлиентБанка = Организация.РЭЙ_НаименованияДляКлиентБанка.НайтиСтроки(Новый Структура("ТипКлиентБанка", Банк.РЭЙ_ТипКлиентБанка));
	Если СтрокиНаименованияДляКлиентБанка.Количество() > 0 Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименованиеДляКлиентБанка", СтрокиНаименованияДляКлиентБанка[0].Наименование);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименованиеДляКлиентБанка", ШапкаДанных.ОрганизацияНаименование);
	КонецЕсли;
	
	// дата
	Если Не Корректировка Тогда
		ШапкаДанных.Вставить("Дата", Дата);
	Иначе
		ШапкаДанных.Вставить("Дата", Основание.Дата);
	КонецЕсли;
	ШапкаДанных.Вставить("Дата_Представление", Формат(ШапкаДанных.Дата, "ДФ=dd.MM.yyyy"));
	
	// номер счета
	текБанковскийСчетВалютный = РЭЙ_СлужебныйСервер.ПолучитьБанковскийСчетВалютныйПоТиповому(БанковскийСчет);
	Если ЗначениеЗаполнено(текБанковскийСчетВалютный) Тогда
		ШапкаДанных.Вставить("НомерСчетаОрганизации", текБанковскийСчетВалютный.НомерСчета);
	Иначе
		ШапкаДанных.Вставить("НомерСчетаОрганизации", БанковскийСчет.НомерСчета);
	КонецЕсли;

	// страна инобанка
	ШапкаДанных.Вставить("КодСтраныИнобанка", Инобанк.РЭЙ_Страна.Код);
	ШапкаДанных.Вставить("НаименованиеСтраныИнобанка", Инобанк.РЭЙ_Страна.Наименование);
	
	// признак корректировки
	ШапкаДанных.Вставить("Корректировка", Корректировка);
	ШапкаДанных.Вставить("НомерКорректировки", НомерКорректировки);
	Если Корректировка Тогда
		ШапкаДанных.Вставить("ПризнакКорректировки", "*(" + НомерКорректировки + ")");	
		ШапкаДанных.Вставить("Корректировка_1_0", 1);
	Иначе
		ШапкаДанных.Вставить("ПризнакКорректировки", "");
		ШапкаДанных.Вставить("Корректировка_1_0", 0);
	КонецЕсли;
	
	// ответственные лица
	ШапкаДанных.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(Руководитель, ШапкаДанных.Дата));
	ШапкаДанных.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ГлавныйБухгалтер, ШапкаДанных.Дата));
	
	// комментарий
	ШапкаДанных.Вставить("Комментарий", Комментарий);
	
	ДанныеДляПечати.Вставить("Таблица1", Новый Массив);
	ДанныеДляПечати.Вставить("Таблица2", Новый Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧ.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ТЧ.НомерСтроки КАК НомерСтроки,
	|	ТЧ.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ТЧ.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК ТЧ
	|ГДЕ
	|	ТЧ.Ссылка = &Ссылка
	|	И (ТЧ.Ссылка.Первичное
	|			ИЛИ ТЧ.Ссылка.Корректировка
	|				И ТЧ.Корректировка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДляПечати,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаВВалютеКонтракта),
	|	СУММА(СуммаВВалютеДокумента)
	|ПО
	|	НомерСтрокиДляПечати";
	
	Если РучноеЗаполнение Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации", "Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперацииРучные");
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		
	Пока ВыборкаИтоги.Следующий() Цикл
		СтрокаТаблицы1 = Новый Структура;
		
		ВыборкаСтроки = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаСтроки.Следующий();
		Если Не РучноеЗаполнение Тогда
			ИмяТЧ = "ВалютныеОперации";
		Иначе
			ИмяТЧ = "ВалютныеОперацииРучные";
		КонецЕсли;
		
		СтрокаТЧ = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
		текРасчетныйДокумент = СтрокаТЧ.РасчетныйДокумент;
		
		// Таблица 1
		// номер строки
		СтрокаТаблицы1.Вставить("НомерСтроки", ВыборкаИтоги.НомерСтрокиДляПечати);
		
		// расчетный документ
		Если ЗначениеЗаполнено(СтрокаТЧ.НомерРасчетногоДокумента) Тогда
			текНомерРасчетногоДокумента = СтрокаТЧ.НомерРасчетногоДокумента;
		Иначе
			текНомерРасчетногоДокумента = "БН";
		КонецЕсли;
		СтрокаТаблицы1.Вставить("НомерРасчетногоДокумента", СокрЛП(текНомерРасчетногоДокумента));
		СтрокаТаблицы1.Вставить("ДатаРасчетногоДокумента", СтрокаТЧ.ДатаРасчетногоДокумента);
		СтрокаТаблицы1.Вставить("ПредставлениеРасчетногоДокумента", СтрокаТаблицы1.НомерРасчетногоДокумента + "/" + Формат(СтрокаТаблицы1.ДатаРасчетногоДокумента, "ДФ=dd.MM.yyyy"));
		
		// дата операции
		Если РучноеЗаполнение Тогда
			Если ЗначениеЗаполнено(текРасчетныйДокумент) Тогда
				текДатаОперации = текРасчетныйДокумент.Дата;
			Иначе
				текДатаОперации = СтрокаТЧ.ДатаРасчетногоДокумента;
			КонецЕсли;
		Иначе
			текДатаОперации = текРасчетныйДокумент.Дата;
		КонецЕсли;
		СтрокаТаблицы1.Вставить("ДатаОперации", текДатаОперации);
		СтрокаТаблицы1.Вставить("ДатаОперации_Представление", Формат(СтрокаТаблицы1.ДатаОперации, "ДФ=dd.MM.yyyy"));
		
		// направление платежа
		СтрокаТаблицы1.Вставить("НаправлениеПлатежа", СтрокаТЧ.НаправлениеПлатежа);
		
		// код вида валютной операции
		СтрокаТаблицы1.Вставить("КодВидаВалютнойОперации", СтрокаТЧ.ВидВалютнойОперации.Код);
		СтрокаТаблицы1.Вставить("КодВидаВалютнойОперации_1_2", Сред(СтрокаТаблицы1.КодВидаВалютнойОперации, 1, 2));
		СтрокаТаблицы1.Вставить("КодВидаВалютнойОперации_3_5", Сред(СтрокаТаблицы1.КодВидаВалютнойОперации, 3, 3));
		
		// код валюты документа
		СтрокаТаблицы1.Вставить("ВалютаДокументаКод", СтрокаТЧ.ВалютаДокумента.Код);
		
		// сумма в валюте документа
		СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента", ВыборкаИтоги.СуммаВВалютеДокумента);
		СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеДокумента, "ЧДЦ=2"));
		
		// паспорт сделки или контракт
		текНомерКонтракта = "";
		текДатаКонтракта = Дата(1,1,1);
		текПаспортСделкиИлиКонтракт = СтрокаТЧ.ПаспортСделки.НомерПаспортаСделки;
		Если ПустаяСтрока(текПаспортСделкиИлиКонтракт) Тогда
			Если ЗначениеЗаполнено(СтрокаТЧ.КонтрактВЭД) Тогда
				текНомерКонтракта = СтрокаТЧ.КонтрактВЭД.КонтрактНомер;
				текДатаКонтракта = РЭЙ_СлужебныйСервер.ПолучитьДатуКонтракта(СтрокаТЧ.КонтрактВЭД);
			КонецЕсли;
			Если ПустаяСтрока(текНомерКонтракта) Тогда
				текНомерКонтракта = "БН";
			КонецЕсли;
			Если ЗначениеЗаполнено(текДатаКонтракта) Тогда
				текПаспортСделкиИлиКонтракт = текНомерКонтракта + "/" + Формат(текДатаКонтракта, "ДФ=dd.MM.yyyy");
			Иначе
				текПаспортСделкиИлиКонтракт = текНомерКонтракта;
			КонецЕсли;
		КонецЕсли; 
		СтрокаТаблицы1.Вставить("ПаспортСделкиИлиКонтракт", текПаспортСделкиИлиКонтракт);
		СтрокаТаблицы1.Вставить("НомерПаспортаСделки", СтрокаТЧ.ПаспортСделки.НомерПаспортаСделки);
		СтрокаТаблицы1.Вставить("Контракт_Номер", текНомерКонтракта);
		СтрокаТаблицы1.Вставить("Контракт_Дата", текДатаКонтракта);
		
		// код валюты контракта
		СтрокаТаблицы1.Вставить("ВалютаКонтрактаКод", СтрокаТЧ.ВалютаКонтракта.Код);
		
		// сумма в валюте документа
		СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта", ВыборкаИтоги.СуммаВВалютеКонтракта);
		СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеКонтракта, "ЧДЦ=2"));
		
		// срок возврата аванса
		Если СтрокаТЧ.ВидВалютнойОперации.СрокВозвратаАванса Тогда
			СтрокаТаблицы1.Вставить("СрокВозвратаАванса", СтрокаТЧ.СрокВозвратаАванса);
			СтрокаТаблицы1.Вставить("СрокВозвратаАванса_Представление", Формат(СтрокаТаблицы1.СрокВозвратаАванса, "ДФ=dd.MM.yyyy"));
		Иначе
			СтрокаТаблицы1.Вставить("СрокВозвратаАванса", Дата(1,1,1));
			СтрокаТаблицы1.Вставить("СрокВозвратаАванса_Представление", "");
		КонецЕсли;
		
		// ожидаемый срок
		Если СтрокаТЧ.ВидВалютнойОперации.ОжидаемыйСрок Тогда
			СтрокаТаблицы1.Вставить("ОжидаемыйСрок", СтрокаТЧ.ОжидаемыйСрок);
			СтрокаТаблицы1.Вставить("ОжидаемыйСрок_Представление", Формат(СтрокаТаблицы1.ОжидаемыйСрок, "ДФ=dd.MM.yyyy"));
		Иначе
			СтрокаТаблицы1.Вставить("ОжидаемыйСрок", Дата(1,1,1));
			СтрокаТаблицы1.Вставить("ОжидаемыйСрок_Представление", "");
		КонецЕсли;
		
		// Признак представления документов
		СтрокаТаблицы1.Вставить("ПризнакПредставленияДокументов", Сред(СтрокаТЧ.ПризнакПредставленияДокументов, 1, 1));
		
		ДанныеДляПечати.Таблица1.Добавить(СтрокаТаблицы1);
		
		//Таблица 2
		ВыборкаСтроки.Сбросить();
		ТекстПримечания = "";
		Пока ВыборкаСтроки.Следующий() Цикл
			СтрокаТЧ_Примечание = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
			Если Не ПустаяСтрока(СтрокаТЧ_Примечание.Примечание) Тогда
				ТекстПримечания = ТекстПримечания + ?(ТекстПримечания = "", "", "; ") + СокрЛП(СтрокаТЧ_Примечание.Примечание);
			КонецЕсли;
		КонецЦикла;
		Если Не ПустаяСтрока(ТекстПримечания) Тогда
			СтрокаТаблицы2 = Новый Структура;
			СтрокаТаблицы2.Вставить("НомерСтроки", ВыборкаИтоги.НомерСтрокиДляПечати);
			СтрокаТаблицы2.Вставить("Содержание", ТекстПримечания);
			ДанныеДляПечати.Таблица2.Добавить(СтрокаТаблицы2);
		КонецЕсли;
	КонецЦикла; 
		
	Возврат ДанныеДляПечати;
КонецФункции

Функция ПечатьСВО_2018() Экспорт
	ДанныеДляПечати = ДанныеДляПечати_2018();
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СправкаОВалютныхОперациях_2018";
	
	Макет = ПолучитьМакет("СправкаОВалютныхОперациях_2018");
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица1.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Строка");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица1 Цикл
			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("ШапкаПримечание");
	ТабДокумент.Вывести(Область);
	
	Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица2 Цикл
		Область = Макет.ПолучитьОбласть("Примечание");
		Область.Параметры.Заполнить(СтрокаТЧ);
		ТабДокумент.Вывести(Область);
	КонецЦикла; 
	
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	УстановитьСтатусЗадачРаспечатана(1);
	
	Возврат ТабДокумент;
КонецФункции

#КонецОбласти

#Область ПечатьУстаревшиеВерсии

Функция ДанныеДляПечати_2015()
	ДанныеДляПечати = Новый Структура;
	ШапкаДанных = Новый Структура;
	ДанныеДляПечати.Вставить("Шапка", ШапкаДанных);
	
	// банк
	ШапкаДанных.Вставить("БанкНаименование", РЭЙ_СлужебныйСервер.ПолучитьНаименованиеБанкаДляПечати(Банк));
	ШапкаДанных.Вставить("БанкКод", Банк.Код);
	
	// организация
	Если Не ПустаяСтрока(Организация.НаименованиеПолное) Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.НаименованиеПолное);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименование", Организация.Наименование);
	КонецЕсли;
	СтрокиНаименованияДляКлиентБанка = Организация.РЭЙ_НаименованияДляКлиентБанка.НайтиСтроки(Новый Структура("ТипКлиентБанка", Банк.РЭЙ_ТипКлиентБанка));
	Если СтрокиНаименованияДляКлиентБанка.Количество() > 0 Тогда
		ШапкаДанных.Вставить("ОрганизацияНаименованиеДляКлиентБанка", СтрокиНаименованияДляКлиентБанка[0].Наименование);
	Иначе
		ШапкаДанных.Вставить("ОрганизацияНаименованиеДляКлиентБанка", ШапкаДанных.ОрганизацияНаименование);
	КонецЕсли;
	
	// дата
	Если Не Корректировка Тогда
		ШапкаДанных.Вставить("Дата", Дата);
	Иначе
		ШапкаДанных.Вставить("Дата", Основание.Дата);
	КонецЕсли;
	ШапкаДанных.Вставить("Дата_Представление", Формат(ШапкаДанных.Дата, "ДФ=dd.MM.yyyy"));
	
	// номер счета
	текБанковскийСчетВалютный = РЭЙ_СлужебныйСервер.ПолучитьБанковскийСчетВалютныйПоТиповому(БанковскийСчет);
	Если ЗначениеЗаполнено(текБанковскийСчетВалютный) Тогда
		ШапкаДанных.Вставить("НомерСчетаОрганизации", текБанковскийСчетВалютный.НомерСчета);
	Иначе
		ШапкаДанных.Вставить("НомерСчетаОрганизации", БанковскийСчет.НомерСчета);
	КонецЕсли;

	// страна инобанка
	ШапкаДанных.Вставить("КодСтраныИнобанка", Инобанк.РЭЙ_Страна.Код);
	ШапкаДанных.Вставить("НаименованиеСтраныИнобанка", Инобанк.РЭЙ_Страна.Наименование);
	
	// признак корректировки
	ШапкаДанных.Вставить("Корректировка", Корректировка);
	ШапкаДанных.Вставить("НомерКорректировки", НомерКорректировки);
	Если Корректировка Тогда
		ШапкаДанных.Вставить("ПризнакКорректировки", "*(" + НомерКорректировки + ")");	
		ШапкаДанных.Вставить("Корректировка_1_0", 1);
	Иначе
		ШапкаДанных.Вставить("ПризнакКорректировки", "");
		ШапкаДанных.Вставить("Корректировка_1_0", 0);
	КонецЕсли;
	
	// ответственные лица
	ШапкаДанных.Вставить("ФИОРуководителя", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(Руководитель, ШапкаДанных.Дата));
	ШапкаДанных.Вставить("ФИОБухгалтера", РЭЙ_СлужебныйСервер.ПолучитьФИОФизлица(ГлавныйБухгалтер, ШапкаДанных.Дата));
	
	// комментарий
	ШапкаДанных.Вставить("Комментарий", Комментарий);
	
	ДанныеДляПечати.Вставить("Таблица1", Новый Массив);
	ДанныеДляПечати.Вставить("Таблица2", Новый Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧ.НомерСтрокиДляПечати КАК НомерСтрокиДляПечати,
	|	ТЧ.НомерСтроки КАК НомерСтроки,
	|	ТЧ.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	ТЧ.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК ТЧ
	|ГДЕ
	|	ТЧ.Ссылка = &Ссылка
	|	И (ТЧ.Ссылка.Первичное
	|			ИЛИ ТЧ.Ссылка.Корректировка
	|				И ТЧ.Корректировка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДляПечати,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаВВалютеКонтракта),
	|	СУММА(СуммаВВалютеДокумента)
	|ПО
	|	НомерСтрокиДляПечати";
	
	Если РучноеЗаполнение Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации", "Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперацииРучные");
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		
	Пока ВыборкаИтоги.Следующий() Цикл
		СтрокаТаблицы1 = Новый Структура;
		
		ВыборкаСтроки = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаСтроки.Следующий();
		Если Не РучноеЗаполнение Тогда
			ИмяТЧ = "ВалютныеОперации";
		Иначе
			ИмяТЧ = "ВалютныеОперацииРучные";
		КонецЕсли;
		
		СтрокаТЧ = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
		текРасчетныйДокумент = СтрокаТЧ.РасчетныйДокумент;
		
		// Таблица 1
		// номер строки
		СтрокаТаблицы1.Вставить("НомерСтроки", ВыборкаИтоги.НомерСтрокиДляПечати);
		
		// расчетный документ
		Если ЗначениеЗаполнено(СтрокаТЧ.НомерРасчетногоДокумента) Тогда
			текНомерРасчетногоДокумента = СтрокаТЧ.НомерРасчетногоДокумента;
		Иначе
			текНомерРасчетногоДокумента = "БН";
		КонецЕсли;
		СтрокаТаблицы1.Вставить("НомерРасчетногоДокумента", СокрЛП(текНомерРасчетногоДокумента));
		СтрокаТаблицы1.Вставить("ДатаРасчетногоДокумента", СтрокаТЧ.ДатаРасчетногоДокумента);
		СтрокаТаблицы1.Вставить("ПредставлениеРасчетногоДокумента", СтрокаТаблицы1.НомерРасчетногоДокумента + "/" + Формат(СтрокаТаблицы1.ДатаРасчетногоДокумента, "ДФ=dd.MM.yyyy"));
		
		// дата операции
		Если РучноеЗаполнение Тогда
			Если ЗначениеЗаполнено(текРасчетныйДокумент) Тогда
				текДатаОперации = текРасчетныйДокумент.Дата;
			Иначе
				текДатаОперации = СтрокаТЧ.ДатаРасчетногоДокумента;
			КонецЕсли;
		Иначе
			текДатаОперации = текРасчетныйДокумент.Дата;
		КонецЕсли;
		СтрокаТаблицы1.Вставить("ДатаОперации", текДатаОперации);
		СтрокаТаблицы1.Вставить("ДатаОперации_Представление", Формат(СтрокаТаблицы1.ДатаОперации, "ДФ=dd.MM.yyyy"));
		
		// направление платежа
		СтрокаТаблицы1.Вставить("НаправлениеПлатежа", СтрокаТЧ.НаправлениеПлатежа);
		
		// код вида валютной операции
		СтрокаТаблицы1.Вставить("КодВидаВалютнойОперации", СтрокаТЧ.ВидВалютнойОперации.Код);
		СтрокаТаблицы1.Вставить("КодВидаВалютнойОперации_1_2", Сред(СтрокаТаблицы1.КодВидаВалютнойОперации, 1, 2));
		СтрокаТаблицы1.Вставить("КодВидаВалютнойОперации_3_5", Сред(СтрокаТаблицы1.КодВидаВалютнойОперации, 3, 3));
		
		// код валюты документа
		СтрокаТаблицы1.Вставить("ВалютаДокументаКод", СтрокаТЧ.ВалютаДокумента.Код);
		
		// сумма в валюте документа
		СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента", ВыборкаИтоги.СуммаВВалютеДокумента);
		СтрокаТаблицы1.Вставить("СуммаВВалютеДокумента_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеДокумента, "ЧДЦ=2"));
		
		// паспорт сделки или контракт
		текНомерКонтракта = "";
		текДатаКонтракта = Дата(1,1,1);
		текПаспортСделкиИлиКонтракт = СтрокаТЧ.ПаспортСделки.НомерПаспортаСделки;
		Если ПустаяСтрока(текПаспортСделкиИлиКонтракт) Тогда
			Если ЗначениеЗаполнено(СтрокаТЧ.КонтрактВЭД) Тогда
				текНомерКонтракта = СтрокаТЧ.КонтрактВЭД.КонтрактНомер;
				текДатаКонтракта = РЭЙ_СлужебныйСервер.ПолучитьДатуКонтракта(СтрокаТЧ.КонтрактВЭД);
			КонецЕсли;
			Если ПустаяСтрока(текНомерКонтракта) Тогда
				текНомерКонтракта = "БН";
			КонецЕсли;
			Если ЗначениеЗаполнено(текДатаКонтракта) Тогда
				текПаспортСделкиИлиКонтракт = текНомерКонтракта + "/" + Формат(текДатаКонтракта, "ДФ=dd.MM.yyyy");
			Иначе
				текПаспортСделкиИлиКонтракт = текНомерКонтракта;
			КонецЕсли;
		КонецЕсли; 
		СтрокаТаблицы1.Вставить("ПаспортСделкиИлиКонтракт", текПаспортСделкиИлиКонтракт);
		СтрокаТаблицы1.Вставить("НомерПаспортаСделки", СтрокаТЧ.ПаспортСделки.НомерПаспортаСделки);
		СтрокаТаблицы1.Вставить("Контракт_Номер", текНомерКонтракта);
		СтрокаТаблицы1.Вставить("Контракт_Дата", текДатаКонтракта);
		
		// код валюты контракта
		СтрокаТаблицы1.Вставить("ВалютаКонтрактаКод", СтрокаТЧ.ВалютаКонтракта.Код);
		
		// сумма в валюте документа
		СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта", ВыборкаИтоги.СуммаВВалютеКонтракта);
		СтрокаТаблицы1.Вставить("СуммаВВалютеКонтракта_Представление", Формат(СтрокаТаблицы1.СуммаВВалютеКонтракта, "ЧДЦ=2"));
		
		// срок возврата аванса
		Если СтрокаТЧ.ВидВалютнойОперации.СрокВозвратаАванса Тогда
			СтрокаТаблицы1.Вставить("СрокВозвратаАванса", СтрокаТЧ.СрокВозвратаАванса);
			СтрокаТаблицы1.Вставить("СрокВозвратаАванса_Представление", Формат(СтрокаТаблицы1.СрокВозвратаАванса, "ДФ=dd.MM.yyyy"));
		Иначе
			СтрокаТаблицы1.Вставить("СрокВозвратаАванса", Дата(1,1,1));
			СтрокаТаблицы1.Вставить("СрокВозвратаАванса_Представление", "");
		КонецЕсли;
		
		// ожидаемый срок
		Если СтрокаТЧ.ВидВалютнойОперации.ОжидаемыйСрок Тогда
			СтрокаТаблицы1.Вставить("ОжидаемыйСрок", СтрокаТЧ.ОжидаемыйСрок);
			СтрокаТаблицы1.Вставить("ОжидаемыйСрок_Представление", Формат(СтрокаТаблицы1.ОжидаемыйСрок, "ДФ=dd.MM.yyyy"));
		Иначе
			СтрокаТаблицы1.Вставить("ОжидаемыйСрок", Дата(1,1,1));
			СтрокаТаблицы1.Вставить("ОжидаемыйСрок_Представление", "");
		КонецЕсли;
		
		ДанныеДляПечати.Таблица1.Добавить(СтрокаТаблицы1);
		
		//Таблица 2
		ВыборкаСтроки.Сбросить();
		ТекстПримечания = "";
		Пока ВыборкаСтроки.Следующий() Цикл
			СтрокаТЧ_Примечание = ЭтотОбъект[ИмяТЧ][ВыборкаСтроки.НомерСтроки - 1];
			Если Не ПустаяСтрока(СтрокаТЧ_Примечание.Примечание) Тогда
				ТекстПримечания = ТекстПримечания + ?(ТекстПримечания = "", "", "; ") + СокрЛП(СтрокаТЧ_Примечание.Примечание);
			КонецЕсли;
		КонецЦикла;
		Если Не ПустаяСтрока(ТекстПримечания) Тогда
			СтрокаТаблицы2 = Новый Структура;
			СтрокаТаблицы2.Вставить("НомерСтроки", ВыборкаИтоги.НомерСтрокиДляПечати);
			СтрокаТаблицы2.Вставить("Содержание", ТекстПримечания);
			ДанныеДляПечати.Таблица2.Добавить(СтрокаТаблицы2);
		КонецЕсли;
	КонецЦикла; 
		
	Возврат ДанныеДляПечати;
КонецФункции

Функция ПечатьСВО_2015() Экспорт
	ДанныеДляПечати = ДанныеДляПечати_2015();
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СправкаОВалютныхОперациях_2015";
	
	Макет = ПолучитьМакет("СправкаОВалютныхОперациях_2015");
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	Если ДанныеДляПечати.Таблица1.Количество() = 0 Тогда
		Область = Макет.ПолучитьОбласть("Строка");
		ТабДокумент.Вывести(Область);
	Иначе
		Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица1 Цикл
			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(СтрокаТЧ);
			ТабДокумент.Вывести(Область);
		КонецЦикла; 
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("ШапкаПримечание");
	ТабДокумент.Вывести(Область);
	
	Для Каждого СтрокаТЧ Из ДанныеДляПечати.Таблица2 Цикл
		Область = Макет.ПолучитьОбласть("Примечание");
		Область.Параметры.Заполнить(СтрокаТЧ);
		ТабДокумент.Вывести(Область);
	КонецЦикла; 
	
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ДанныеДляПечати.Шапка);
	ТабДокумент.Вывести(Область);
	
	УстановитьСтатусЗадачРаспечатана(1);
	
	Возврат ТабДокумент;
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ВспомогательныеПроцедуры

Процедура ЗаполнениеСВОвПлатежныхПоручениях(Отказ)
	Для Каждого СтрокаТЧ из ВалютныеОперации Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.РасчетныйДокумент) Тогда
			Если СтрокаТЧ.РасчетныйДокумент.Метаданные().Реквизиты.Найти("РЭЙ_СправкаОВалютныхОперациях") <> Неопределено Тогда
				Если Не ЗначениеЗаполнено(СтрокаТЧ.РасчетныйДокумент.РЭЙ_СправкаОВалютныхОперациях) Тогда
					Попытка
						РасчетныйДокументОбъект = СтрокаТЧ.РасчетныйДокумент.ПолучитьОбъект();
						РасчетныйДокументОбъект.Заблокировать();
						РасчетныйДокументОбъект.РЭЙ_СправкаОВалютныхОперациях = Ссылка;
						РасчетныйДокументОбъект.Записать();
						РасчетныйДокументОбъект.Разблокировать();
					Исключение
						ТекстСообщенияОбОшибке =
						"В документе " + РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.РасчетныйДокумент) + " не может быть заполнен реквизит ""Справка о кодах видов операций"" по причине:
						|" + ОписаниеОшибки();
						
						Сообщить(ТекстСообщенияОбОшибке);
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроведениеПоРегиструСправкиВалютногоКонтроля()
	ВалютныеОперацииСвернуто = ВалютныеОперации.Выгрузить();
	Для Каждого СтрокаТЧ Из ВалютныеОперацииСвернуто Цикл
		СтрокаТЧ.ДопСоглашение = ?(СтрокаТЧ.КонтрактВЭД.РамочныйКонтракт, СтрокаТЧ.ДопСоглашение, Неопределено);
	КонецЦикла;	
	ВалютныеОперацииСвернуто.Свернуть("КонтрактВЭД, ПаспортСделки, РасчетныйДокумент, ДопСоглашение, ВалютаДокумента, НаправлениеПлатежа", "СуммаВВалютеДокумента, СуммаВВалютеКонтракта");
	Для Каждого СтрокаТЧ Из ВалютныеОперацииСвернуто Цикл
		Запись = Движения.РЭЙ_СправкиВалютногоКонтроля.Добавить();
		Запись.Период = Дата;
		Запись.КонтрактВЭД = СтрокаТЧ.КонтрактВЭД;
		Запись.ПаспортСделки = СтрокаТЧ.ПаспортСделки;
		Запись.РасчетныйДокумент = СтрокаТЧ.РасчетныйДокумент;
		Запись.ДопСоглашение = ?(Запись.КонтрактВЭД.РамочныйКонтракт, СтрокаТЧ.ДопСоглашение, Неопределено);
		Запись.Справка = Ссылка;
		Запись.ВалютаДокумента = СтрокаТЧ.ВалютаДокумента;
		Запись.СуммаВВалютеДокумента = СтрокаТЧ.СуммаВВалютеДокумента;
		Запись.СуммаВВалютеКонтракта = СтрокаТЧ.СуммаВВалютеКонтракта;
		Если СтрокаТЧ.НаправлениеПлатежа = 1 Тогда
			Запись.ЭтоДебет = Ложь;
		Иначе
			Запись.ЭтоДебет = Истина;
		КонецЕсли;
	КонецЦикла;
	ВалютныеОперацииСвернуто = ВалютныеОперацииРучные.Выгрузить();
	Для Каждого СтрокаТЧ Из ВалютныеОперацииСвернуто Цикл
		СтрокаТЧ.ДопСоглашение = ?(СтрокаТЧ.КонтрактВЭД.РамочныйКонтракт, СтрокаТЧ.ДопСоглашение, Неопределено);
	КонецЦикла;	
	ВалютныеОперацииСвернуто.Свернуть("КонтрактВЭД, ПаспортСделки, РасчетныйДокумент, ДопСоглашение, ВалютаДокумента, НаправлениеПлатежа", "СуммаВВалютеДокумента, СуммаВВалютеКонтракта");
	Для Каждого СтрокаТЧ Из ВалютныеОперацииСвернуто Цикл
		Запись = Движения.РЭЙ_СправкиВалютногоКонтроля.Добавить();
		Запись.Период = Дата;
		Запись.КонтрактВЭД = СтрокаТЧ.КонтрактВЭД;
		Запись.ПаспортСделки = СтрокаТЧ.ПаспортСделки;
		Если ЗначениеЗаполнено(СтрокаТЧ.РасчетныйДокумент) Тогда
			Запись.РасчетныйДокумент = СтрокаТЧ.РасчетныйДокумент;
		Иначе
			Запись.ИдентификаторРучнойОперации = Новый УникальныйИдентификатор;
		КонецЕсли;
		Запись.ДопСоглашение = ?(Запись.КонтрактВЭД.РамочныйКонтракт, СтрокаТЧ.ДопСоглашение, Неопределено);
		Запись.Справка = Ссылка;
		Запись.ВалютаДокумента = СтрокаТЧ.ВалютаДокумента;
		Запись.СуммаВВалютеДокумента = СтрокаТЧ.СуммаВВалютеДокумента;
		Запись.СуммаВВалютеКонтракта = СтрокаТЧ.СуммаВВалютеКонтракта;
		Если СтрокаТЧ.НаправлениеПлатежа = 1 Тогда
			Запись.ЭтоДебет = Ложь;
		Иначе
			Запись.ЭтоДебет = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СтатусЗадачаВЭДСоздана()
	ИзменилиСтатус = Ложь;
	Для Каждого СтрокаТаб Из ВалютныеОперации Цикл
		Если ЗначениеЗаполнено(СтрокаТаб.РасчетныйДокумент) Тогда
			СтатусЗадачи = РЭЙ_ЗадачиСервер.ПолучитьСтатусЗадачиЗадачи(СтрокаТаб.РасчетныйДокумент);
			Если СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСозданию 
				ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСдачеЗавтра
				ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСдачеПослеЗавтра
				ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПодлежитСдачеСегодня
				ИЛИ СтатусЗадачи = Перечисления.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаПросрочена
				Тогда
				РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(СтрокаТаб.РасчетныйДокумент, "Создана");	
				ИзменилиСтатус = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла; 
	Если ИзменилиСтатус Тогда
		#Если Клиент Тогда
			Оповестить("ИзмененСтатусЗадачиВЭД");
		#КонецЕсли
	КонецЕсли; 
КонецПроцедуры
 
Процедура УстановитьСтатусЗадачРаспечатана(текВидПредоставленияДокументовПоСделке) Экспорт
	Если Банк.РЭЙ_ВидПредоставленияДокументовПоСделке = текВидПредоставленияДокументовПоСделке Тогда
		Если Не РучноеЗаполнение Тогда
			ТаблицаДокументов = ВалютныеОперации.Выгрузить(, "РасчетныйДокумент");
		Иначе
			ТаблицаДокументов = ВалютныеОперацииРучные.Выгрузить(, "РасчетныйДокумент");
		КонецЕсли;
		ТаблицаДокументов.Свернуть("РасчетныйДокумент", "");
		Для Каждого СтрокаТЧ Из ТаблицаДокументов Цикл
			Если ЗначениеЗаполнено(СтрокаТЧ.РасчетныйДокумент) Тогда
					РЭЙ_ЗадачиСервер.УстановитьСтатусЗадачиВЭД(СтрокаТЧ.РасчетныйДокумент, "Распечатана");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция ПроверитьКорректностьРасчетногоДокумента(текРасчетныйДокумент) Экспорт
	текКонтрактВЭД = РЭЙ_СлужебныйСервер.ПолучитьКонтрактВЭДПоРасчетномуДокументу(текРасчетныйДокумент);
	Если Не ЗначениеЗаполнено(текКонтрактВЭД) Тогда
		Сообщить("По договору, указанному в расчетном документе, не зарегистрирован контракт ВЭД.");
		Возврат Ложь;
	Иначе
		//Если текКонтрактВЭД.НеЯвляетсяОбъектомВалютногоКонтроля Тогда 
		//	Сообщить("Контракт ВЭД, указанный в расчетном документе, не требует оформления паспорта сделки и справок валютного контроля.");
		//	Возврат Ложь;
		//КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

#КонецОбласти
