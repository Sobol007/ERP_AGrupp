#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если Параметры.Ключ.Пустая() Тогда
		Если ЗначениеЗаполнено(Параметры.Основание) Тогда
			ДокументОбъект = РеквизитФормыВЗначение("Объект");
			ДокументОбъект.ЗаполнитьДляПереоформления(Параметры.Основание);
			ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
		КонецЕсли;
	КонецЕсли;
		
	Если Параметры.Ключ.Пустая() Тогда
		Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
			Объект.Дата = ТекущаяДатаСеанса();
		КонецЕсли;
		Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда 
			Объект.ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;			
		КонецЕсли;	
		
		Если Объект.ВидОперации.Пустая() Тогда 
			Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.ЗакрытиеПаспортаСделки;
		КонецЕсли;	
		
		Объект.Организация = РЭЙ_Универсализация.ПолучитьОсновнуюОрганизацию();
;
		УстановитьРуководителей();

		Объект.Ответственный = Пользователи.ТекущийПользователь();
		Объект.УполномоченныйПС = РЭЙ_СлужебныйСервер.ФизЛицоПользователя(Объект.Ответственный);
		УстановитьТелефонУполномоченногоПС();
	КонецЕсли;
	
	// Инициализация
	ЗаполнитьДополнительныеРеквизитыТабличныхЧастей();
	
	// Настройка отображения формы
	УправлениеВидимостью_ВидОперации();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьДополнительныеРеквизитыТабличныхЧастей();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьДополнительныеРеквизитыТабличныхЧастей();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	// Изменение суммы и/или даты действия контракта ВЭД
	Если (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.ПереоформлениеПаспортаСделки") И Объект.ОснованиеПереоформленияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт_7_10"))
		Или (Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_7_1_ВнесениеИзмененийВРаздел1ВБК") И Объект.ОснованиеПереоформленияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт181_6_9")) Тогда
		
		Если Объект.Проведен Тогда
			Если Объект.ПаспортаСделок.Количество() > 0 Тогда
				ИзменениеСуммыИСрокаДействияКонтрактаВЭД();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_6_1_СнятиеСУчетаКонтракта")
			И (Объект.ОснованиеЗакрытияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_3")
			Или Объект.ОснованиеЗакрытияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_4")) Тогда
			ЗаполнитьДанныеПоУступкеВКонтрактВЭД();
		КонецЕсли;
	КонецЕсли;
	
	Оповестить("РЭЙ_ОбновитьФормуЗадач");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	ВидОперацииПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВидОперацииПриИзмененииНаСервере()
	Объект.ОснованиеЗакрытияПС = Неопределено;
	ОснованиеЗакрытияПСПриИзмененииНаСервере();
	Объект.ОснованиеПереоформленияПС = Неопределено;
	ОснованиеПереоформленияПСПриИзмененииНаСервере();
	
	Если Объект.ВидОперации <> Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_2_25_ИзменениеКодовВидовОпераций Тогда
		Объект.ИзменениеКодовВидовОпераций.Очистить();
	КонецЕсли;
	
	УправлениеВидимостью_ВидОперации();
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		ДанныеВыбора = СписокВидовОпераций2018();
	Иначе
		ДанныеВыбора = СписокВидовОпераций2012();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		Если Объект.ВидОперации <> ВыбранноеЗначение Тогда
			Если Объект.ПаспортаСделок.Количество() > 0 Тогда
				
				ТекстВопроса = "При изменении вида операции документа табличная часть на вкладке 'Контракты' будет очищена." + Символы.ПС + "Продолжить?";
				ДополнительныеПараметры = Новый Структура("ВидОперации", ВыбранноеЗначение);
				ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ВидОперацииНачалоВыбораРезультаВопросаОбОчисткеПаспортовСделок", ЭтотОбъект, ДополнительныеПараметры);
				ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК); 
				
			Иначе 		
				Объект.ВидОперации = ВыбранноеЗначение;
				ВидОперацииПриИзменении(Элементы.ВидОперации);
				Модифицированность = Истина;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииНачалоВыбораРезультаВопросаОбОчисткеПаспортовСделок(Результат, ДополнительныеПараметры) Экспорт 
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Объект.ПаспортаСделок.Очистить();	
		Объект.ВидОперации = ДополнительныеПараметры.ВидОперации;	
		ВидОперацииПриИзменении(Элементы.ВидОперации);
		Модифицированность = Истина;
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		СписокВидовОпераций = СписокВидовОпераций2018();
	Иначе
		СписокВидовОпераций = СписокВидовОпераций2012();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		Если СписокВидовОпераций.НайтиПоЗначению(Объект.ВидОперации) = Неопределено Тогда
			// TODO Добавить вопрос пользователю
			ВидОперацииНачалоВыбораРезультаВопросаОбОчисткеПаспортовСделок(КодВозвратаДиалога.ОК, Новый Структура("ВидОперации", Неопределено));
		КонецЕсли;
	КонецЕсли;
	ДатаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	УправлениеВидимостью_ВидОперации();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьРуководителей();
	УстановитьПараметрыВыбора_ИзменениеКодовВидовОпераций_РасчетныйДокумент();
КонецПроцедуры

&НаКлиенте
Процедура БанкНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораДляБанка(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеЗакрытияПСПриИзменении(Элемент)
	ОснованиеЗакрытияПСПриИзмененииНаСервере();
	УправлениеВидимостью_ВидОперации();
КонецПроцедуры

&НаСервере
Процедура ОснованиеЗакрытияПСПриИзмененииНаСервере()
	Если Объект.ОснованиеЗакрытияПС <> Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_1 Тогда
		Объект.БанкНовый = Неопределено;
	КонецЕсли;
	
	// Очистка уступки
	Если Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_3 И Объект.УступкаТребованияКонтрагент.РЭЙ_НеЯвляетсяРезидентом <> Ложь Тогда
		Объект.УступкаТребованияКонтрагент = Неопределено;
		Объект.УступкаТребованияДоговор = Неопределено;
	КонецЕсли;
	Если Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_4 И Объект.УступкаТребованияКонтрагент.РЭЙ_НеЯвляетсяРезидентом <> Истина Тогда
		Объект.УступкаТребованияКонтрагент = Неопределено;
		Объект.УступкаТребованияДоговор = Неопределено;
	КонецЕсли;
	
	Если Объект.ОснованиеЗакрытияПС <> Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_3
		И Объект.ОснованиеЗакрытияПС <> Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_4 Тогда
		Объект.УступкаТребованияКонтрагент = Неопределено;
		Объект.УступкаТребованияДоговор = Неопределено;
		Объект.УступкаТребованияИнойДокументНомер = Неопределено;
		Объект.УступкаТребованияИнойДокументДата = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеЗакрытияПСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_1"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_2"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_3"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_4"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_5"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_6"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт181_6_7"));
	Иначе
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_7_1_1"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_7_1_2"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_7_1_3"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_7_1_4"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_7_1_5"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_7_1_6"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_7_9"));
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОснованиеЗакрытияПСНачалоВыбораЗавершение", ЭтотОбъект);
	НачальноеЗначениеВыбора = СписокВыбора.НайтиПоЗначению(Объект.ОснованиеЗакрытияПС);
	ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент, НачальноеЗначениеВыбора); 
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеЗакрытияПСНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.ОснованиеЗакрытияПС = ВыбранныйЭлемент.Значение;
		ОснованиеЗакрытияПСПриИзменении(Элементы.ОснованиеЗакрытияПС);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеПереоформленияПСПриИзменении(Элемент)
	ОснованиеПереоформленияПСПриИзмененииНаСервере();
	УправлениеВидимостью_ВидОперации();
КонецПроцедуры

&НаСервере
Процедура ОснованиеПереоформленияПСПриИзмененииНаСервере()
	Если Объект.ОснованиеПереоформленияПС <> Перечисления.РЭЙ_ОснованияПереоформленияПС.пункт181_6_9 Тогда
		Объект.ИзменениеСуммыКонтракта = Ложь;
		Объект.КонтрактСуммаНовая = 0;
		Объект.ПродлениеСрокаКонтракта = Ложь;
		Объект.КонтрактДатаОкончанияНовая = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеПереоформленияПСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт181_6_9"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт181_7_1"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт181_7_9"));
	Иначе
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт_7_10"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт_8_4"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт_8_8"));
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОснованиеПереоформленияПСНачалоВыбораЗавершение", ЭтотОбъект);
	НачальноеЗначениеВыбора = СписокВыбора.НайтиПоЗначению(Объект.ОснованиеПереоформленияПС);
	ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент, НачальноеЗначениеВыбора); 
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеПереоформленияПСНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.ОснованиеПереоформленияПС = ВыбранныйЭлемент.Значение;
		ОснованиеПереоформленияПСПриИзменении(Элементы.ОснованиеПереоформленияПС);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БанкНовыйНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораДляБанка(Элемент);	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСуммыКонтрактаПриИзменении(Элемент)
	Если Объект.ИзменениеСуммыКонтракта = Ложь Тогда
		Объект.КонтрактСуммаНовая = 0;
	КонецЕсли;
	
	Элементы.КонтрактСуммаНовая.Доступность = Объект.ИзменениеСуммыКонтракта;
КонецПроцедуры

&НаКлиенте
Процедура ПродлениеСрокаКонтрактаПриИзменении(Элемент)
	Если Объект.ПродлениеСрокаКонтракта = Ложь Тогда
		Объект.КонтрактДатаОкончанияНовая = Дата("00010101");
	КонецЕсли;

	Элементы.КонтрактДатаОкончанияНовая.Доступность = Объект.ПродлениеСрокаКонтракта;
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	Объект.УполномоченныйПС = РЭЙ_СлужебныйСервер.ФизЛицоПользователя(Объект.Ответственный);
	УстановитьТелефонУполномоченногоПС();
КонецПроцедуры

&НаКлиенте
Процедура УполномоченныйПСПриИзменении(Элемент)
	УстановитьТелефонУполномоченногоПС();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактВЭД_ИзменениеКодовВОПриИзменении(Элемент)
	УстановитьПараметрыВыбора_ИзменениеКодовВидовОпераций_РасчетныйДокумент();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Файлы(Команда)
	Если Параметры.Ключ.Пустая() Тогда
		ТекстВопроса = "Документ еще не записан. Записать?";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ФайлыВопросОЗаписи", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ОткрытьФормуФайлы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыВопросОЗаписи(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Если Записать() Тогда
			ОткрытьФормуФайлы();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуФайлы()
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОбъектВладелец", Объект.Ссылка);
	ОткрытьФорму("Справочник.РЭЙ_Файлы.ФормаСписка", ПараметрыОткрытия,, Новый УникальныйИдентификатор(),,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнхЧастей

&НаКлиенте
Процедура ПаспортаСделокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ПоказатьПредупреждение(, "Сначала необходимо выбрать организацию!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Банк) Тогда
		ПоказатьПредупреждение(, "Сначала необходимо выбрать банк!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_6_1_СнятиеСУчетаКонтракта")
		Или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.ЗакрытиеПаспортаСделки") Тогда
		
		Если Объект.ПаспортаСделок.Количество() > 0 Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_7_1_ВнесениеИзмененийВРаздел1ВБК")
		И Объект.ОснованиеПереоформленияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт181_6_9")
		И Объект.ПаспортаСделок.Количество() > 0 Тогда
		ПоказатьПредупреждение(, "Для подпункта 6.9 Инструкции Банка России от 16.08.2017 №181-И предусмотрено оформление заявления в банк только по одному заявлению о постановке на учет контракта.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.ПереоформлениеПаспортаСделки")
		И Объект.ОснованиеПереоформленияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт_7_10")
		И Объект.ПаспортаСделок.Количество() > 0 Тогда
		ПоказатьПредупреждение(, "Для подпункта 7.10 Инструкции Банка России от 04.06.2012 №138-И предусмотрено оформление заявления в банк только по одному паспорту сделки.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПаспортаСделокПаспортСделкиПриИзменении(Элемент)
	ПаспортаСделокПаспортСделкиПриИзмененииНаСервере(Элементы.ПаспортаСделок.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ПаспортаСделокПаспортСделкиПриИзмененииНаСервере(ТекущаяСтрока)
	ДанныеСтроки = Объект.ПаспортаСделок.НайтиПоИдентификатору(ТекущаяСтрока);
	
	Если ЗначениеЗаполнено(ДанныеСтроки.ПаспортСделки) И Объект.УполномоченныйПС.Пустая() Тогда
		Объект.УполномоченныйПС = ДанныеСтроки.ПаспортСделки.УполномоченныйПС;
		УстановитьТелефонУполномоченногоПС();
	КонецЕсли;
	
	ДанныеСтроки.ПаспортСделкиПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(ДанныеСтроки.ПаспортСделки);
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеКодовВидовОперацийРасчетныйДокументПриИзменении(Элемент)
	СтрокаТЧ = Элементы.ИзменениеКодовВидовОпераций.ТекущиеДанные;
	СтрокаТЧ.РасчетныйДокументПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.РасчетныйДокумент);
КонецПроцедуры

#КонецОбласти

#Область Отображение

&НаСервере
Процедура УправлениеВидимостью_ВидОперации()
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		УправлениеВидимостью_ВидОперации_2018();
	Иначе
		УправлениеВидимостью_ВидОперации_2012();
	КонецЕсли;
		
	УстановитьОтображение_Страница_Контракты();
	УстановитьОтображение_Страница_Уступка();
	УстановитьОтображение_Страница_ИзменениеКодовВидовОпераций();
	УстановитьОтображение_Страница_Документы();
	
	УстановитьОтображение_ДатаПринятияПС();
	
	УстановитьПараметрыВыбора_УступкаТребованияКонтрагент();
	УстановитьПараметрыВыбора_ИзменениеКодовВидовОпераций_РасчетныйДокумент();
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостью_ВидОперации_2012()
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.ЗакрытиеПаспортаСделки") Тогда
		Элементы.СтраницыВидОперации.ТекущаяСтраница = Элементы.СтраницаВидОперации_ЗакрытиеПС;
		Элементы.СтраницыДаты.ТекущаяСтраница = Элементы.СтраницаДаты_ЗакрытиеПС;
		
		ВидимаяГруппа = Неопределено;
		Если Объект.ОснованиеЗакрытияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_7_1_1")
			Или Объект.ОснованиеЗакрытияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_3_18_1") Тогда
			ВидимаяГруппа = Элементы.Группа_ПереводВДругойБанк;
		ИначеЕсли Объект.ОснованиеЗакрытияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_3_18_2") Тогда
			ВидимаяГруппа = Элементы.Группа_Пункт_3_18_2;
		КонецЕсли;
		УстановитьВидимостьТолькоТолькоДляОднойГруппы(Элементы.СтраницаВидОперации_ЗакрытиеПС, ВидимаяГруппа);
	ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.ПереоформлениеПаспортаСделки") Тогда
		Элементы.СтраницыВидОперации.ТекущаяСтраница = Элементы.СтраницаВидОперации_ПереоформлениеПС;
		Элементы.СтраницыДаты.ТекущаяСтраница = Элементы.СтраницаДаты_ПереоформленияПС;
		
		Если Объект.ОснованиеПереоформленияПС = ПредопределенноеЗначение("Перечисление.РЭЙ_ОснованияПереоформленияПС.пункт_7_10") Тогда
			Элементы.СтраницыПереоформлениеПС_Параметры.ТекущаяСтраница = Элементы.СтраницаПереоформлениеПС_Параметры_ПродлениеИзменениеСуммы;
			Элементы.КонтрактСуммаНовая.Доступность = Объект.ИзменениеСуммыКонтракта;
			Элементы.КонтрактДатаОкончанияНовая.Доступность = Объект.ПродлениеСрокаКонтракта;
		Иначе
			Элементы.СтраницыПереоформлениеПС_Параметры.ТекущаяСтраница = Элементы.СтраницаПереоформлениеПС_Параметры_Пусто;
		КонецЕсли;
		УстановитьВидимостьТолькоТолькоДляОднойГруппы(Элементы.СтраницыПереоформлениеПС_Параметры, Элементы.СтраницыПереоформлениеПС_Параметры.ТекущаяСтраница);
	Иначе
		Элементы.СтраницыВидОперации.ТекущаяСтраница = Элементы.СтраницаВидОперации_Пусто;
		Элементы.СтраницыДаты.ТекущаяСтраница = Элементы.СтраницаДаты_Пусто;
	КонецЕсли;
	УстановитьВидимостьТолькоТолькоДляОднойГруппы(Элементы.СтраницыВидОперации, Элементы.СтраницыВидОперации.ТекущаяСтраница);
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостью_ВидОперации_2018()
	Если Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_6_1_СнятиеСУчетаКонтракта Тогда
		Элементы.СтраницыВидОперации.ТекущаяСтраница = Элементы.СтраницаВидОперации_ЗакрытиеПС;
		Элементы.СтраницыДаты.ТекущаяСтраница = Элементы.СтраницаДаты_ЗакрытиеПС;
		
		ВидимаяГруппа = Неопределено;
		Если Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_1 Тогда
			ВидимаяГруппа = Элементы.Группа_ПереводВДругойБанк;
		КонецЕсли;
		УстановитьВидимостьТолькоТолькоДляОднойГруппы(Элементы.СтраницаВидОперации_ЗакрытиеПС, ВидимаяГруппа);
	ИначеЕсли Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_7_1_ВнесениеИзмененийВРаздел1ВБК Тогда
		Элементы.СтраницыВидОперации.ТекущаяСтраница = Элементы.СтраницаВидОперации_ПереоформлениеПС;
		Элементы.СтраницыДаты.ТекущаяСтраница = Элементы.СтраницаДаты_ПереоформленияПС;
		
		Если Объект.ОснованиеПереоформленияПС = Перечисления.РЭЙ_ОснованияПереоформленияПС.пункт181_6_9 Тогда
			Элементы.СтраницыПереоформлениеПС_Параметры.ТекущаяСтраница = Элементы.СтраницаПереоформлениеПС_Параметры_ПродлениеИзменениеСуммы;
			Элементы.КонтрактСуммаНовая.Доступность = Объект.ИзменениеСуммыКонтракта;
			Элементы.КонтрактДатаОкончанияНовая.Доступность = Объект.ПродлениеСрокаКонтракта;
		Иначе
			Элементы.СтраницыПереоформлениеПС_Параметры.ТекущаяСтраница = Элементы.СтраницаПереоформлениеПС_Параметры_Пусто;
		КонецЕсли;
		УстановитьВидимостьТолькоТолькоДляОднойГруппы(Элементы.СтраницыПереоформлениеПС_Параметры, Элементы.СтраницыПереоформлениеПС_Параметры.ТекущаяСтраница);
	ИначеЕсли Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_2_25_ИзменениеКодовВидовОпераций Тогда
		Элементы.СтраницыВидОперации.ТекущаяСтраница = Элементы.СтраницаВидОперации_Пусто;
		Элементы.СтраницыДаты.ТекущаяСтраница = Элементы.СтраницаДаты_Пусто;
	Иначе
		Элементы.СтраницыВидОперации.ТекущаяСтраница = Элементы.СтраницаВидОперации_Пусто;
		Элементы.СтраницыДаты.ТекущаяСтраница = Элементы.СтраницаДаты_Пусто;
	КонецЕсли;
	УстановитьВидимостьТолькоТолькоДляОднойГруппы(Элементы.СтраницыВидОперации, Элементы.СтраницыВидОперации.ТекущаяСтраница);
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_Контракты()
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		Если Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_6_1_СнятиеСУчетаКонтракта Тогда
			Если ЗначениеЗаполнено(Объект.ОснованиеЗакрытияПС) Тогда
				Если Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_3
					Или Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_4 Тогда
					Элементы.Страница_Контракты.Видимость = Ложь;
				Иначе
					Элементы.Страница_Контракты.Видимость = Истина;
				КонецЕсли;
			Иначе
				Элементы.Страница_Контракты.Видимость = Ложь;
			КонецЕсли;
		ИначеЕсли Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_7_1_ВнесениеИзмененийВРаздел1ВБК Тогда
			Элементы.Страница_Контракты.Видимость = Истина;
		ИначеЕсли Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_17_4_ПредоставлениеВБК Тогда
			Элементы.Страница_Контракты.Видимость = Истина;
		Иначе
			Элементы.Страница_Контракты.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.Страница_Контракты.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_Уступка()
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		Если Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_6_1_СнятиеСУчетаКонтракта Тогда
			Если Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_3
				Или Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_4 Тогда
				Элементы.Страница_Уступка.Видимость = Истина;
			Иначе
				Элементы.Страница_Уступка.Видимость = Ложь;
			КонецЕсли;
		Иначе
			Элементы.Страница_Уступка.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.Страница_Уступка.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_ИзменениеКодовВидовОпераций()
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		Если Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_2_25_ИзменениеКодовВидовОпераций Тогда
			Элементы.Страница_ИзменениеКодовВидовОпераций.Видимость = Истина;
		Иначе
			Элементы.Страница_ИзменениеКодовВидовОпераций.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.Страница_ИзменениеКодовВидовОпераций.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_Документы()
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		Если Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_6_1_СнятиеСУчетаКонтракта
			Или Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_7_1_ВнесениеИзмененийВРаздел1ВБК Тогда
			Элементы.Страница_Документы.Видимость = Истина;
		Иначе
			Элементы.Страница_Документы.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.Страница_Документы.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ДатаПринятияПС()
	Если Объект.Дата >= Дата(2018,03,01) Тогда
		Если Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_6_1_СнятиеСУчетаКонтракта
			И Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_1 Тогда
			Элементы.ДатаПринятияПС.Видимость = Истина;
		Иначе
			Элементы.ДатаПринятияПС.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Если Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.ЗакрытиеПаспортаСделки
			И (Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт_7_1_1
			Или Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт_3_18_1) Тогда
			Элементы.ДатаПринятияПС.Видимость = Истина;
		Иначе
			Элементы.ДатаПринятияПС.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбора_УступкаТребованияКонтрагент()
	МассивПараметровВыбора = Новый Массив;
	
	Если Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_6_1_СнятиеСУчетаКонтракта Тогда
		Если Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_3 Тогда
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.РЭЙ_НеЯвляетсяРезидентом", Ложь));
		КонецЕсли;
		Если Объект.ОснованиеЗакрытияПС = Перечисления.РЭЙ_ОснованияЗакрытияПС.пункт181_6_1_4 Тогда
			МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.РЭЙ_НеЯвляетсяРезидентом", Истина));
		КонецЕсли;
	КонецЕсли;
	
	Элементы.УступкаТребованияКонтрагент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбора_ИзменениеКодовВидовОпераций_РасчетныйДокумент()
	Если Объект.ВидОперации = Перечисления.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_2_25_ИзменениеКодовВидовОпераций Тогда
		МассивПараметровВыбора = Новый Массив;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеБезналичныхДенежныхСредств.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеБезналичныхДенежныхСредств
		|ГДЕ
		|	ПоступлениеБезналичныхДенежныхСредств.Организация = &Организация
		|	И ПоступлениеБезналичныхДенежныхСредств.Договор = &ДоговорКонтрагента";
		
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.КонтрактВЭД.ДоговорКонтрагента);
		
		МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", МассивСсылок));
		
		Элементы.ИзменениеКодовВидовОперацийРасчетныйДокумент.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметровВыбора);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьТолькоТолькоДляОднойГруппы(ЭлементРодитель, ВидимыйПодчиненныйЭлемент)
	Для Каждого ТекущийПодчиненныйЭлемент Из ЭлементРодитель.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(ТекущийПодчиненныйЭлемент) = Тип("ГруппаФормы") 
			Или ТипЗнч(ТекущийПодчиненныйЭлемент) = Тип("СтраницаФормы") Тогда
			
			Если ТекущийПодчиненныйЭлемент = ВидимыйПодчиненныйЭлемент Тогда
				ТекущийПодчиненныйЭлемент.Видимость = Истина;
			Иначе
				ТекущийПодчиненныйЭлемент.Видимость = Ложь;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДополнительныеРеквизитыТабличныхЧастей()
	Для Каждого СтрокаПаспортаСделки Из Объект.ПаспортаСделок Цикл
		СтрокаПаспортаСделки.ПаспортСделкиПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаПаспортаСделки.ПаспортСделки);
	КонецЦикла; 
	
	Для Каждого СтрокаТЧ Из Объект.ИзменениеКодовВидовОпераций Цикл
		СтрокаТЧ.РасчетныйДокументПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.РасчетныйДокумент);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСуммыИСрокаДействияКонтрактаВЭД()
	Если ПроверитьНеобходимостьВнесенияИзмененийВКонтрактВЭД() Тогда
		ТекстВопроса = "Внести изменения в контракт ВЭД?";
		Оповещение = Новый ОписаниеОповещения("ИзменениеСуммыИСрокаДействияКонтрактаВЭДЗавершение", ЭтотОбъект,);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСуммыИСрокаДействияКонтрактаВЭДЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ИзменениеСуммыИСрокаДействияКонтрактаВЭДЗавершениеНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИзменениеСуммыИСрокаДействияКонтрактаВЭДЗавершениеНаСервере()
	текКонтрактВЭД = Объект.ПаспортаСделок[0].ПаспортСделки.КонтрактВЭД;
	КонтрактВЭДОбъект = текКонтрактВЭД.ПолучитьОбъект();
	Если Объект.ИзменениеСуммыКонтракта Тогда
		КонтрактВЭДОбъект.КонтрактСумма = Объект.КонтрактСуммаНовая;
		КонтрактВЭДОбъект.КонтрактБезСуммы = Ложь;
	КонецЕсли;
	Если Объект.ПродлениеСрокаКонтракта Тогда
		КонтрактВЭДОбъект.КонтрактДатаОкончания = Объект.КонтрактДатаОкончанияНовая;
		КонтрактВЭДОбъект.ЗаполнитьДатуЗавершенияОбязательствПоКонтракту();
	КонецЕсли;
	КонтрактВЭДОбъект.Записать();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоУступкеВКонтрактВЭД()
	КонтрактВЭДОбъект = Объект.КонтрактВЭД.ПолучитьОбъект();
	КонтрактВЭДОбъект.УступкаТребованияКонтрагент = Объект.УступкаТребованияКонтрагент;
	КонтрактВЭДОбъект.УступкаТребованияДоговор = Объект.УступкаТребованияДоговор;
	КонтрактВЭДОбъект.УступкаТребованияИнойДокументНомер = Объект.УступкаТребованияИнойДокументНомер;
	КонтрактВЭДОбъект.УступкаТребованияИнойДокументДата = Объект.УступкаТребованияИнойДокументДата;
	КонтрактВЭДОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораДляБанка(ЭлементВладелец)
	ПараметрыОткрытияФормы = Новый Структура;
	
	Отбор = Новый Структура;
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		СписокБанки	= ПолучитьСписокБанковВКоторыхОткрытыСчета(Объект.Организация);
		Если СписокБанки.Количество() > 0 Тогда 
			Отбор.Вставить("Ссылка", СписокБанки);		
		КонецЕсли;
	КонецЕсли;	
	Отбор.Вставить("РЭЙ_НеЯвляетсяРезидентом", Ложь);
	
	ПараметрыОткрытияФормы.Вставить("Отбор", Отбор);
	ПараметрыОткрытияФормы.Вставить("ТекущаяСтрока", Объект.Банк);
	
	ФормаВыбора	= ПолучитьФорму("Справочник.КлассификаторБанков.ФормаВыбора", ПараметрыОткрытияФормы, ЭлементВладелец);
	ФормаВыбора.Элементы.Список.Отображение	= ОтображениеТаблицы.Список;
	ФормаВыбора.Открыть();
КонецПроцедуры	

&НаСервере
Процедура УстановитьРуководителей()
	Руководители = РЭЙ_Универсализация.ПолучитьРуководителей(Объект.Организация, Объект.Дата); 
	Объект.Руководитель = Руководители.Руководитель;
	Объект.ГлавныйБухгалтер = Руководители.ГлавныйБухгалтер;	
КонецПроцедуры

&НаСервере
Процедура УстановитьТелефонУполномоченногоПС()
	Если НЕ Объект.УполномоченныйПС.Пустая() Тогда
		Объект.ТелефонУполномоченногоПС = РЭЙ_СлужебныйСервер.ПолучитьСлужебныйТелефонФизЛица(Объект.УполномоченныйПС);
		Если ПустаяСтрока(Объект.ТелефонУполномоченногоПС) Тогда
			Сообщить("У выбранного физ.лица не заполнен служебный телефон! Заполните телефон в карточке физ.лица и перевыберите физ.лицо.");
		КонецЕсли;
	Иначе
		Объект.ТелефонУполномоченногоПС = "";
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокБанковВКоторыхОткрытыСчета(Организация)
	
	СписокБанки = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БанковскиеСчета.Банк
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &Организация
	|	И БанковскиеСчета.Банк.РЭЙ_НеЯвляетсяРезидентом = Ложь
	|
	|СГРУППИРОВАТЬ ПО
	|	БанковскиеСчета.Банк";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		СписокБанки.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку(0));
	КонецЕсли;
	
	Возврат СписокБанки;
	
КонецФункции	

&НаСервере
Функция ПроверитьНеобходимостьВнесенияИзмененийВКонтрактВЭД()
	текКонтрактВЭД = Объект.ПаспортаСделок[0].ПаспортСделки.КонтрактВЭД;
	
	НеобходимоВнестиИзменения = Ложь;
	Если Объект.ИзменениеСуммыКонтракта Тогда
		Если текКонтрактВЭД.КонтрактСумма <> Объект.КонтрактСуммаНовая Тогда
			НеобходимоВнестиИзменения = Истина;
		КонецЕсли;
	КонецЕсли;
	Если Объект.ПродлениеСрокаКонтракта Тогда
		Если текКонтрактВЭД.КонтрактДатаОкончания <> Объект.КонтрактДатаОкончанияНовая Тогда
			НеобходимоВнестиИзменения = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НеобходимоВнестиИзменения Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка
		|ИЗ
		|	Документ.РЭЙ_ЗаявлениеВБанкПС.ПаспортаСделок КАК РЭЙ_ЗаявлениеВБанкПСПаспортаСделок
		|ГДЕ
		|	РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.ПаспортСделки.КонтрактВЭД = &КонтрактВЭД
		|	И РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.ПаспортСделки.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка.Дата УБЫВ";
		Запрос.УстановитьПараметр("КонтрактВЭД", текКонтрактВЭД);
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Если Выборка.Ссылка <> Объект.Ссылка Тогда
			НеобходимоВнестиИзменения = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НеобходимоВнестиИзменения;
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция СписокВидовОпераций2012()
	СписокВидовОпераций = Новый СписокЗначений;
	СписокВидовОпераций.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.ЗакрытиеПаспортаСделки"));
	СписокВидовОпераций.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.ПереоформлениеПаспортаСделки"));
	СписокВидовОпераций.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.ПредоставлениеВедомостиБанковскогоКонтроля"));
	
	Возврат СписокВидовОпераций;
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция СписокВидовОпераций2018()
	СписокВидовОпераций = Новый СписокЗначений;
	СписокВидовОпераций.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_17_4_ПредоставлениеВБК"));
	СписокВидовОпераций.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_2_25_ИзменениеКодовВидовОпераций"));
	СписокВидовОпераций.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_6_1_СнятиеСУчетаКонтракта"));
	СписокВидовОпераций.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.пункт181_7_1_ВнесениеИзмененийВРаздел1ВБК"));
	
	Возврат СписокВидовОпераций;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
