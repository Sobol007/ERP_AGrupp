#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура заполняет список участников мероприятия
//
// Параметры: Нет
//
Процедура ЗаполнитьСписокУчастников() Экспорт
	
	СписокУчастников = "";
	ОтветственныйИсполнитель = Справочники.Пользователи.ПустаяСсылка();
	Для Каждого Участник Из Участники Цикл
		СписокУчастников = СписокУчастников + ?(СписокУчастников = "","","; ") + Участник.Пользователь;
		Если Участник.Ответственный Тогда
			Если НЕ ЗначениеЗаполнено(ОтветственныйИсполнитель) Тогда
				ОтветственныйИсполнитель = Участник.Пользователь;
			КонецЕсли;
		Иначе
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	CRM_ОбщегоНазначенияСервер.ЗаполнитьШапкуДокумента(ЭтотОбъект, ДанныеЗаполнения);
	
	Дата = ТекущаяДатаСеанса();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Проекты") Тогда
		Проект = ДанныеЗаполнения;
		Подразделение = Проект.CRM_Подразделение;
		Этап = Проект.CRM_ТекущийЭтап;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.CRM_ЭтапыПроектов") Тогда
		Проект = ДанныеЗаполнения.Владелец;
		Подразделение = Проект.CRM_Подразделение;
		Этап = ДанныеЗаполнения;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		//Если ДанныеЗаполнения.Свойство("ПлановаяДатаНачала") Тогда
		//	ПлановаяДатаНачала = ДанныеЗаполнения.ПлановаяДатаНачала;
		//КонецЕсли;
		//	
		//Если ДанныеЗаполнения.Свойство("ПлановаяДатаОкончания") Тогда
		//	ПлановаяДатаОкончания = ДанныеЗаполнения.ПлановаяДатаОкончания;
		//КонецЕсли;
		//	
		//Если ДанныеЗаполнения.Свойство("ПлановаяДлительность") Тогда
		//	ПлановаяДлительность = ДанныеЗаполнения.ПлановаяДлительность;
		//КонецЕсли;
			
		Если ДанныеЗаполнения.Свойство("Подразделение") Тогда
			Подразделение = ДанныеЗаполнения.Подразделение;
			
		ИначеЕсли ДанныеЗаполнения.Свойство("Этап") И ЗначениеЗаполнено(ДанныеЗаполнения.Этап) Тогда
			Этап 		  = ДанныеЗаполнения.Этап;
			Проект		  = Этап.Владелец; 
			Подразделение = Проект.CRM_Подразделение;
			
		ИначеЕсли ДанныеЗаполнения.Свойство("Проект") И ЗначениеЗаполнено(ДанныеЗаполнения.Проект) Тогда
			Проект 		  = ДанныеЗаполнения.Проект; 
			Подразделение = ДанныеЗаполнения.Проект.CRM_Подразделение;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Исполнитель") Тогда
			СтрокаПользователь = Участники.Добавить();
			СтрокаПользователь.Пользователь = ДанныеЗаполнения.Исполнитель;
			Если  (ДанныеЗаполнения.Свойство("Проект") И ДанныеЗаполнения.Проект.Ответственный = ДанныеЗаполнения.Исполнитель) ИЛИ
				  (ДанныеЗаполнения.Свойство("Этап") И ДанныеЗаполнения.Этап.Ответственный = ДанныеЗаполнения.Исполнитель) Тогда
				СтрокаПользователь.Ответственный = Истина;
			КонецЕсли;
			КИПользователя = CRM_УправлениеПроектамиСервер.ПолучитьКИУчастника(СтрокаПользователь.Пользователь);
			СтрокаПользователь.Адрес = КИПользователя.Адрес;
			СтрокаПользователь.Телефон = КИПользователя.Телефон;
		КонецЕсли;

	ИначеЕсли НЕ ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Подразделение = CRM_ОбщегоНазначенияСервер.ТекущийПользователь().Подразделение;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	// Очистим табличные части и реквизиты.
	Смещения.Очистить();
	ЧекЛист.Очистить();
	Для каждого Строка из ОбъектКопирования.ЧекЛист Цикл
		Если НЕ Строка.Выполнение Тогда
			НовСтрока = ЧекЛист.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
		КонецЕсли;
	КонецЦикла;
	
	Дата  = ТекущаяДатаСеанса();
	ПлановаяДатаНачала = ТекущаяДатаСеанса();
	ПлановаяДатаОкончания = Дата(1,1,1);
	ПлановаяДлительность = 0;
	ФактическаяДатаНачала = Дата(1,1,1);
	ФактическаяДатаОкончания = Дата(1,1,1);
	ФактическаяДлительность = 0;
	Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Запланирована;
	
	Результат = "";
	Автор 	  = CRM_ОбщегоНазначенияСервер.ТекущийПользователь();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокУчастников();
	
	Если ФактическаяДатаОкончания <> Дата(1,1,1) И Статус <> Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Отменена
			И Статус <> Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Проверена Тогда
		Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Выполнена;
	КонецЕсли;
	
	Если Проект.CRM_Статус = Перечисления.CRM_СтатусыПроектов.ВРаботе И ЗначениеЗаполнено(ПлановаяДатаНачала) 
		 И ПлановаяДатаНачала <= НачалоДня(ТекущаяДата()) И Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Запланирована Тогда
		
		 Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.ВРаботе;
		
	 КонецЕсли;
	
	Если ЗначениеЗаполнено(ФактическаяДатаНачала) 
		И ФактическаяДатаНачала <= НачалоДня(ТекущаяДата()) И Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Запланирована Тогда
		
		Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.ВРаботе;
	
	ИначеЕсли ТипЭтапа = Перечисления.CRM_ТипыЭтапов.Этап И Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.ВРаботе 
			И Ссылка.Статус <> Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.ВРаботе Тогда
		
		ФактическаяДатаНачала = ТекущаяДатаСеанса();
		 
	КонецЕсли;
	
	// Минимизируем процедуру обновления дат пакетов задач
 	Если ПлановаяДатаНачала <> Ссылка.ПлановаяДатаНачала ИЛИ ПлановаяДатаОкончания <> Ссылка.ПлановаяДатаОкончания ИЛИ
		 ФактическаяДатаНачала <> Ссылка.ФактическаяДатаНачала ИЛИ ФактическаяДатаОкончания <> Ссылка.ФактическаяДатаОкончания  ИЛИ Этап <> Ссылка.Этап
		 ИЛИ (Статус <> Ссылка.Статус И (Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Отменена ИЛИ Ссылка.Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Отменена))
		 ИЛИ ПометкаУдаления <> Ссылка.ПометкаУдаления Тогда
		ДополнительныеСвойства.Вставить("ОбновитьДатыПакетов", Истина);
		Если Этап <> Ссылка.Этап Тогда
			ДополнительныеСвойства.Вставить("ПредыдущийЭтап", Ссылка.Этап);
		КонецЕсли;
	КонецЕсли;
	МассивНовыхУчастников = Новый Массив;
	ТекПользователь = Пользователи.ТекущийПользователь();
	Для каждого Участник из Участники Цикл
		Если Ссылка.Участники.НайтиСтроки(Новый Структура("Пользователь", Участник.Пользователь)).Количество() = 0 Тогда
			Если Участник.Пользователь = ТекПользователь Тогда
				Продолжить;
			КонецЕсли;
			МассивНовыхУчастников.Добавить(Участник.Пользователь);
		КонецЕсли;
	КонецЦикла;
	Если МассивНовыхУчастников.Количество()>0 Тогда
		ДополнительныеСвойства.Вставить("МассивУчастниковДляОповещенияОЗадаче", МассивНовыхУчастников);
	КонецЕсли;
	
	МассивУдаленныхУчастников = Новый Массив;
	Для каждого Участник из Ссылка.Участники Цикл
		Если Участники.НайтиСтроки(Новый Структура("Пользователь", Участник.Пользователь)).Количество() = 0 Тогда
			МассивУдаленныхУчастников.Добавить(Участник.Пользователь);
		КонецЕсли;
	КонецЦикла;
	Если МассивУдаленныхУчастников.Количество()>0 Тогда
		ДополнительныеСвойства.Вставить("МассивУдаленныхУчастников", МассивУдаленныхУчастников);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ОбновитьДатыПакетов") Тогда
		// Обновим все даты пакета задачи и всех родителей этого пакета (если даты были изменены).
		Если ЗначениеЗаполнено(Этап) Тогда
			CRM_УправлениеПроектамиВызовСервера.ОбновитьДатыПакетаЗадачИВсехРодителей(Этап);
		КонецЕсли;
		Если ДополнительныеСвойства.Свойство("ПредыдущийЭтап") И ЗначениеЗаполнено(ДополнительныеСвойства.ПредыдущийЭтап) Тогда
			CRM_УправлениеПроектамиВызовСервера.ОбновитьДатыПакетаЗадачИВсехРодителей(ДополнительныеСвойства.ПредыдущийЭтап);
		КонецЕсли;
	КонецЕсли;
	Если ДополнительныеСвойства.Свойство("МассивУчастниковДляОповещенияОЗадаче") Тогда
		ВидОповещения = Справочники.CRM_ВидыОповещений.ОповещатьОНовыхЗадачах;
		ПараметрыОповещения = CRM_ОповещенияСервер.ПолучитьПараметрыОповещения(ДополнительныеСвойства.МассивУчастниковДляОповещенияОЗадаче, ВидОповещения, Ссылка);
		Если НЕ (ПараметрыОповещения = Неопределено) Тогда
			CRM_ОповещенияСервер.ДобавитьОповещение(ПараметрыОповещения);
		КонецЕсли;
	КонецЕсли;
	Если ДополнительныеСвойства.Свойство("МассивУдаленныхУчастников") Тогда
		Для каждого УдаленныйУчастник из ДополнительныеСвойства.МассивУдаленныхУчастников Цикл
			CRM_ОповещенияСервер.УдалитьОповещения(Ссылка, УдаленныйУчастник);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли