
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Не Отказ Тогда
		ВыполнитьДвиженияЦеныКонкурентов(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьДвиженияЦеныКонкурентов(Отказ)
	
	НЗ = РегистрыСведений.АГ_ЦеныКонкурентов.СоздатьНаборЗаписей();
	НЗ.Отбор.Документ.Установить(Ссылка);
	НЗ.Прочитать();
	
	НЗ.Очистить();
	НЗ.Записать();
	
	ТекРегион = Регион;
	
	ТЗЗапасы = Запасы.Выгрузить();
	
	ТЗЗапасы.Свернуть("Номенклатура,Валюта,ЕдиницаИзмерения");
	
	Для Каждого СтрокаЗапасы Из ТЗЗапасы Цикл
		
		ПараметрыОтбора = Новый Структура;
		
		ПараметрыОтбора.Вставить("Номенклатура", СтрокаЗапасы.Номенклатура);
		
		ПараметрыОтбора.Вставить("Валюта", СтрокаЗапасы.Валюта);
		ПараметрыОтбора.Вставить("ЕдиницаИзмерения", СтрокаЗапасы.ЕдиницаИзмерения);
		
		НайденныеСТроки = Запасы.НайтиСтроки(ПараметрыОтбора);
		
		ТЗЦен = Новый ТаблицаЗначений;
		ТЗЦен.Колонки.Добавить("Цена");
		
		СтрокаКомментарий = "";
		Цена = 0;
		Для Каждого ТекСтр Из НайденныеСтроки Цикл
			
			НовЦена = ТЗЦен.Добавить();
			НовЦена.Цена = ТекСтр.Цена;
			
			
			ТЗЦен.Сортировать("Цена ВОЗР");
			
			
			Если ТЗЦен.Количество() = 0 Тогда
				
				СтрокаКомментарий = "Не выявлено ни одной цены.";
				Цена = 0;
				
			ИначеЕсли ТЗЦен.Количество() = 1 Тогда
				
				Если ТЗЦен[0].Цена = 0 Тогда
					
					Цена = 0;
					СтрокаКомментарий = "Не выявлено ни одной цены.";
					
				Иначе
					
					СтрокаКомментарий = "Выявлены цены: " + ТЗЦен[0].Цена  + " " + СтрокаЗапасы.Валюта +  ". Принята цена: " + ТЗЦен[0].Цена  + " " + СтрокаЗапасы.Валюта + ".";
					Цена = ТЗЦен[0].Цена;
					
				Конецесли;
			Иначе
				МинЦена = 0;
				МаксЦена = 0;
				Для Каждого ТекСтрЦен Из ТЗЦен Цикл
					
					Если НЕ ТекСтрЦен.Цена = 0 Тогда
						МинЦена = ТекСтрЦен.Цена;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				ТЗЦен.Сортировать("Цена УБЫВ");
				
				МаксЦена = ТЗЦен[0].Цена;
				
				ТЗЦен.Сортировать("Цена ВОЗР");
				
				ПереченьЦен = "";
				Для Каждого ТекСтрЦен Из ТЗЦен Цикл
					
					ПереченьЦен = ПереченьЦен + ?(ПереченьЦен = "", "", ", ") + Формат(ТекСтрЦен.Цена, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00") + " " + СтрокаЗапасы.Валюта;
					
				КонецЦикла;
				
				Если МинЦена = МаксЦена Тогда
					
					Цена = МаксЦена;
					
					Если Не максЦена = 0 Тогда
						СтрокаКомментарий = "Выявлены цены: " + ПереченьЦен + ". Отклонений не выявлено. Принята цена " + Формат(МаксЦена, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00")+ " " + СтрокаЗапасы.Валюта + ".";
						
					Иначе
						СтрокаКомментарий = "Не выявлено ни одной цены.";
					КонецЕсли;
					
				Иначе
					
					ЦеновойКоридор = 2;
					
					Если (МаксЦена - МинЦена) / ((МаксЦена + МинЦена) / 2) * 100 >= ЦеновойКоридор Тогда
						
						СтрокаКомментарий = "Выявлены цены: " + ПереченьЦен + ". Отклонение более " + ЦеновойКоридор + " %. Принята цена " + Формат(МаксЦена, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00")+ " " + СтрокаЗапасы.Валюта + ".";
						Цена = МаксЦена;
						
					Иначе
						
						СтрокаКомментарий = "Выявлены цены: " + ПереченьЦен + ". Отклонение менее " + ЦеновойКоридор + " %. Принята цена " + Формат(МинЦена, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00")+ " " + СтрокаЗапасы.Валюта + ".";
						Цена = МинЦена;
						
					КонецЕсли;
				КонецЕсли;
				
			конецЕсли;
		КонецЦикла;	 
		
		Разрешено = ИСТИНА;
		
		Если НЕ Цена = 0 И 
			ЗначениеЗаполнено(Партнер)
			И ЗначениеЗаполнено(ТекРегион) Тогда
			
			Если СтрокаЗапасы.Валюта.Код = "643" И Дата < Дата("20190101000000") ТОГДА
					СтавкаНДС =  1.18;
				ИначеЕсли СтрокаЗапасы.Валюта.Код = "643" И Дата >= Дата("20190101000000") ТОГДА
					СтавкаНДС = 1.2;
				ИНАЧЕ СтавкаНДС = 1.2;
				КонецЕсли;
				
			Если НЕ СуммаВключаетНДС Тогда
				
				Если ТипЦен.ЦенаВключаетНДС Тогда
					
					Цена = Цена * СтавкаНДС;
					НДС = Цена * (СтавкаНДС - 1);
					
				Иначе
					
					НДС = 0;
					
				Конецесли;
				
			Иначе
				
				Если ТипЦен.ЦенаВключаетНДС Тогда
					
					НДС = Цена - (Цена / СтавкаНДС); 
					
				Иначе
					
					Цена = Цена / СтавкаНДС;
					НДС = 0;
					
				Конецесли;
				
			КонецЕсли;
			
			Если НЕ СтрокаЗапасы.ЕдиницаИзмерения = СтрокаЗапасы.Номенклатура.ЕдиницаИзмерения Тогда
				
				Цена = ПересчитатьЧислоПоЕдиницеИзмерения(СтрокаЗапасы.Номенклатура, СтрокаЗапасы.ЕдиницаИзмерения, Цена);
				НДС = ПересчитатьЧислоПоЕдиницеИзмерения(СтрокаЗапасы.Номенклатура, СтрокаЗапасы.ЕдиницаИзмерения, НДС);
				
			КонецЕсли;
			
			Если Не Цена = 0 Тогда
				
				МЗ = РегистрыСведений.АГ_ЦеныКонкурентов.СоздатьМенеджерЗаписи();
				
				МЗ.Документ = Ссылка;
				МЗ.Период = Дата;
				МЗ.Автор = ПараметрыСеанса.ТекущийПользователь;
				МЗ.Валюта = СтрокаЗапасы.Валюта;
				Если НЕ ЗначениеЗаполнено(Источник) Тогда
					МЗ.Источник = "Регистрация цен конкурентов";
				Иначе
					МЗ.Источник = Источник; 
				КонецЕсли;
				
				МЗ.Номенклатура = СтрокаЗапасы.Номенклатура;
				
				МЗ.Контрагент = Партнер;
				МЗ.Регион = ТекРегион;
				МЗ.ТипКонтрагента = "Конкурент";
				МЗ.Комментарий = "Цена установлена документом " + Строка(Ссылка);
				
				МЗ.Цена = Цена;
				МЗ.НДС = НДС;
				
				МЗ.Записать();
			КонецЕсли;
				
			
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Пользователь = Пользователи.ТекущийПользователь();
	
	Ответственный = Пользователь;
	Подразделение = Ответственный.Подразделение;
	Автор = Пользователь;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
		Дата = ДанныеЗаполнения.Дата;
		ДокументОснование = ДанныеЗаполнения;
		Покупатель = ДанныеЗаполнения.Контрагент;
		Склад = ДанныеЗаполнения.Склад;
		Ответственный = ДанныеЗаполнения.Автор;
		Подразделение = ДанныеЗаполнения.Подразделение;
	КонецЕсли;
	
	СуммаВключаетНДС = Истина;
	
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Если ЗначениеЗаполнено(Покупатель.ОсновнойМенеджер) Тогда
			Ответственный = Покупатель.ОсновнойМенеджер;
		Иначе
			Ответственный = Пользователи.ТекущийПользователь();
		КонецЕсли;

		ПодразделениеПользователя = Пользователи.ТекущийПользователь().Подразделение;
		
		Если ЗначениеЗаполнено(ПодразделениеПользователя) Тогда
			
			Если ПодразделениеПользователя.АГ_УровеньПодчинения = Перечисления.АГ_УровеньПодчинения.Металлоцентр Тогда
				Подразделение = ПодразделениеПользователя;
			Иначе
				Подразделение = ПолучитьПодразделениеПоРегиону(ПодразделениеПользователя.АГ_БизнесРегионМЦ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Регион = Склад.БизнесРегион;
	Если Не ЗначениеЗаполнено(Регион) Тогда
			 Регион = Подразделение.АГ_БизнесРегионМЦ;
		КонецЕсли;
	
	Автор = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Функция ПолучитьПодразделениеПоРегиону(Регион)
	
	Если Не ЗначениеЗаполнено(Регион) Тогда
		Возврат Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтруктураПредприятия.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|ГДЕ
	|	НЕ СтруктураПредприятия.ПометкаУдаления
	|	И СтруктураПредприятия.АГ_БизнесРегионМЦ = &Регион
	|	И СтруктураПредприятия.АГ_УровеньПодчинения = ЗНАЧЕНИЕ(перечисление.АГ_УровеньПодчинения.Металлоцентр)";
	
	Запрос.УстановитьПараметр("Регион", Регион);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	АГ_СписокГородовФедеральногоИРеспубликанскогоЗначения.Город КАК Город
		|ИЗ
		|	Справочник.АГ_СписокГородовФедеральногоИРеспубликанскогоЗначения КАК АГ_СписокГородовФедеральногоИРеспубликанскогоЗначения
		|ГДЕ
		|	АГ_СписокГородовФедеральногоИРеспубликанскогоЗначения.СопоставленныйРегион = &СопоставленныйРегион
		|	И НЕ АГ_СписокГородовФедеральногоИРеспубликанскогоЗначения.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("СопоставленныйРегион", Регион);
		
		РезультатРегион = Запрос.Выполнить();
		Если РезультатРегион.Пустой() Тогда
			Возврат Справочники.СтруктураПредприятия.ПустаяСсылка();
		КонецЕсли;
		
		ВыборкаРегион = РезультатРегион.Выбрать();
		ВыборкаРегион.Следующий();
		
		МЦ = ПолучитьПодразделениеПоРегиону(ВыборкаРегион.Город);
	Иначе
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		МЦ = Выборка.Ссылка; 
	КонецЕсли;
	
	Возврат МЦ;
	
КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Источник = "Регистрация цен конкурентов" Тогда
		ПроверяемыеРеквизиты.Добавить("ДокументОснование");
	КонецЕсли;
	
	Если НЕ Партнер.Конкурент Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "У конкурента не установлен признак ""Конкурент"" в карточке.";
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если Источник = "Регистрация прайс-листов" Тогда
		Если НЕ Подразделение.АГ_УровеньПодчинения = Перечисления.АГ_УровеньПодчинения.Металлоцентр Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Выбрано подразделение с уровнем подчинения отличным от Металлоцентр!";
			Сообщение.Сообщить();
			
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ИмяПрикрепленногоФайла) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не прикреплен отсканированный документ!";
		Сообщение.Сообщить();
		
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция ПересчитатьЧислоПоЕдиницеИзмерения(Номенклатура, ЕдиницаИзмерения, Сумма)
	
	ЕдИзмНоменклатуры = Номенклатура.ЕдиницаИзмерения;
	
	Если Номенклатура.ВесЕдиницаИзмерения = ЕдиницаИзмерения и НЕ ЕдИзмНоменклатуры.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Вес Тогда
		
		Коэфф = Номенклатура.ВесЧислитель / Номенклатура.ВесЗнаменатель;
		
	ИначеЕсли Номенклатура.ОбъемЕдиницаИзмерения = ЕдиницаИзмерения и НЕ ЕдИзмНоменклатуры.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Объем Тогда
		
		Коэфф = Номенклатура.ОбъемЧислитель / Номенклатура.ОбъемЗнаменатель;
		
	ИначеЕсли Номенклатура.ДлинаЕдиницаИзмерения = ЕдиницаИзмерения и НЕ ЕдИзмНоменклатуры.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Длина Тогда
		
		Коэфф = Номенклатура.ДлинаЧислитель / Номенклатура.ДлинаЗнаменатель;
		
	ИначеЕсли Номенклатура.ПлощадьЕдиницаИзмерения = ЕдиницаИзмерения и НЕ ЕдИзмНоменклатуры.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Площадь Тогда
		
		Коэфф = Номенклатура.ПлощадьЧислитель / Номенклатура.ПлощадьЗнаменатель;
		
	Иначе
		Коэфф = 0;
	КонецЕсли;
	
	Возврат Сумма * Коэфф;
	
КонецФункции



