
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьСписокКолонок(Элементы.КолонкаЦена.СписокВыбора);
	ПолучитьСписокКолонок(Элементы.КолонкаНаименованиеКонкурента.СписокВыбора);
	ПолучитьСписокКолонок(Элементы.КолонкаКод.СписокВыбора);
	ПолучитьСписокКолонок(Элементы.КолонкаНаименование.СписокВыбора);
	ПолучитьСписокКолонок(Элементы.КолонкаЕИ.СписокВыбора);
	
	УстановитьВидимость();
	
	ЗаполнитьКолонкиПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Если ЭтоМакет Тогда
		
		Элементы.КолонкаЦена.Видимость = Ложь;
		Элементы.КолонкаНаименованиеКонкурента.Видимость = Ложь;
		Элементы.ТЗРеквизитовКолонка.Видимость = Ложь;
		Элементы.Валюта.Видимость = Ложь;
		Элементы.КолонкаКод.Видимость = Ложь;
		Элементы.КолонкаНаименование.Видимость = Ложь;
		Элементы.КолонкаЕИ.Видимость = Ложь;
		
		ЭтаФорма.Заголовок = "Сохранение макета прайс-листа";
		Элементы.ОК.Заголовок = "Сохранить";
		
	Иначе
		
		ЭтаФорма.Заголовок = "Загрузка прайс-листа";
		Элементы.ОК.Заголовок = "Загрузить";
		Элементы.ТЗРеквизитов.Видимость = Ложь;
		Элементы.НоменклатурнаяГруппа.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСписокКолонок(СписокВыбора)
	
	СписокВыбора.Очистить();
	
	Если Не ЭтоМакет Тогда
		СписокВыбора.Добавить(1, "A");
	КонецЕсли;

	СписокВыбора.Добавить(2, "B");
	СписокВыбора.Добавить(3, "C");
	СписокВыбора.Добавить(4, "D");
	СписокВыбора.Добавить(5, "E");
	СписокВыбора.Добавить(6, "F");
	СписокВыбора.Добавить(7, "G");
	СписокВыбора.Добавить(8, "H");
	СписокВыбора.Добавить(9, "I");
	СписокВыбора.Добавить(10, "J");
	СписокВыбора.Добавить(11,"K");
	СписокВыбора.Добавить(12,"L");
	СписокВыбора.Добавить(13,"M");
	СписокВыбора.Добавить(14,"N");
	СписокВыбора.Добавить(15,"O");
	СписокВыбора.Добавить(16,"P");
	СписокВыбора.Добавить(17,"Q");
	СписокВыбора.Добавить(18,"R");
	СписокВыбора.Добавить(19,"S");
	СписокВыбора.Добавить(20,"T");
	СписокВыбора.Добавить(21,"U");
	СписокВыбора.Добавить(22,"V");
	СписокВыбора.Добавить(23,"W");
	СписокВыбора.Добавить(24,"X");
	СписокВыбора.Добавить(25,"Y");
	СписокВыбора.Добавить(26,"Z");
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ЗначениеЗаполнено(НоменклатурнаяГруппа) И ЭтоМакет ТОгда
		Сообщить("Номенклатурная группа не заполнена");
		Возврат;
	КонецЕсли;
	
	Если НЕ Этомакет И (Не ЗначениеЗаполнено(КолонкаЦена) ИЛИ Не ЗначениеЗаполнено(КолонкаНаименованиеКонкурента)
		ИЛИ Не ЗначениеЗаполнено(КолонкаКод) ИЛИ Не ЗначениеЗаполнено(КолонкаНаименование)
		ИЛИ Не ЗначениеЗаполнено(КолонкаЕИ))Тогда
		Сообщить("Не заполнены адреса колонок в шапке");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Валюта) И НЕ Этомакет Тогда
		Сообщить("Валюта не заполнена");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Сообщить("Не указан путь к файлу");
		Возврат;
	КонецЕсли;
	
	ДанныеВозврата = Новый Структура;
	
	ДанныеВозврата.Вставить("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	ДанныеВозврата.Вставить("КолонкаЦена", КолонкаЦена);
	ДанныеВозврата.Вставить("КолонкаНаименованиеКонкурента", КолонкаНаименованиеКонкурента);
	ДанныеВозврата.Вставить("Валюта", Валюта);
	ДанныеВозврата.Вставить("Код", КолонкаКод);
	ДанныеВозврата.Вставить("Наименование", КолонкаНаименование);
	ДанныеВозврата.Вставить("ЕИ", КолонкаЕИ);
	ДанныеВозврата.Вставить("ПутьКФайлу", ПутьКФайлу);
	СписокКолонок = Новый Массив;
	Сч = 2;
	Для Каждого Текстр Из ТЗРеквизитов Цикл
		
		Если ЗначениеЗаполнено(ТекСтр.ИДКолонки) Тогда
			
			ДанныеВозврата.Вставить(СтрЗаменить(ТекСтр.Свойство, " ", "_"), ТекСтр.ИДКолонки);
			СписокКолонок.Добавить(СтрЗаменить(ТекСтр.Свойство, " ", "_"));

		ИначеЕсли ЭтоМакет Тогда
			
			ДанныеВозврата.Вставить(СтрЗаменить(ТекСтр.Свойство, " ", "_"), Сч);
			СписокКолонок.Добавить(СтрЗаменить(ТекСтр.Свойство, " ", "_"));
		КонецЕсли;
		
		Сч = Сч + 1;
	конецЦикла;
	
	ДанныеВозврата.Вставить("СписокКолонок", СписокКолонок);
	
	ЭтаФорма.Закрыть(ДанныеВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаПриИзменении(Элемент)
	
	ЗаполнитьТЧНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧНаСервере()
	
	ТЗРеквизитов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(ВложенныйЗапрос.Обязательный) КАК Обязательный,
	               |	ВложенныйЗапрос.Свойство.Заголовок КАК Свойство
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВидыНоменклатурыРеквизитыДляКонтроляНоменклатуры.Свойство КАК Свойство,
	               |		ВидыНоменклатурыРеквизитыДляКонтроляНоменклатуры.ОбязателенДляЗаполнения КАК Обязательный
	               |	ИЗ
	               |		Справочник.ВидыНоменклатуры.РеквизитыДляКонтроляНоменклатуры КАК ВидыНоменклатурыРеквизитыДляКонтроляНоменклатуры
	               |	ГДЕ
	               |		ВидыНоменклатурыРеквизитыДляКонтроляНоменклатуры.Ссылка = &Видноменклатуры
	               |		И ВидыНоменклатурыРеквизитыДляКонтроляНоменклатуры.ЭтоДопРеквизит
	               |		И НЕ ВидыНоменклатурыРеквизитыДляКонтроляНоменклатуры.Свойство.ПометкаУдаления
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство,
	               |		ЛОЖЬ
	               |	ИЗ
	               |		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	               |	ГДЕ
	               |		НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие)
	               |		И НЕ НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство.ПометкаУдаления) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Свойство.Заголовок
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Свойство";
	
	Запрос.УстановитьПараметр("Видноменклатуры", НоменклатурнаяГруппа);
	
	Результат = Запрос.Выполнить();
	НаборРеквизитовФормулы = ПолучитьРеквизитыФормулы();
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			НайденнаяСтрока = НаборРеквизитовФормулы.Найти(Выборка.Свойство);
			Если НЕ НайденнаяСтрока = Неопределено Тогда
				НовСтр = ТЗРеквизитов.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
				НовСтр.Порядок = НайденнаяСтрока;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ТЗРеквизитов.Сортировать("Порядок");
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСписокКолонокТЗ(СписокВыбора)
	
	СписокВыбора.Очистить();
	
	Если Не ЭтоМакет Тогда
		СписокВыбора.Добавить("A");
	КонецЕсли;
	
	СписокВыбора.Добавить("B");
	СписокВыбора.Добавить("C");
	СписокВыбора.Добавить("D");
	СписокВыбора.Добавить("E");
	СписокВыбора.Добавить("F");
	СписокВыбора.Добавить("G");
	СписокВыбора.Добавить("H");
	СписокВыбора.Добавить("I");
	СписокВыбора.Добавить("J");
	СписокВыбора.Добавить("K");
	СписокВыбора.Добавить("L");
	СписокВыбора.Добавить("M");
	СписокВыбора.Добавить("N");
	СписокВыбора.Добавить("O");
	СписокВыбора.Добавить("P");
	СписокВыбора.Добавить("Q");
	СписокВыбора.Добавить("R");
	СписокВыбора.Добавить("S");
	СписокВыбора.Добавить("T");
	СписокВыбора.Добавить("U");
	СписокВыбора.Добавить("V");
	СписокВыбора.Добавить("W");
	СписокВыбора.Добавить("X");
	СписокВыбора.Добавить("Y");
	СписокВыбора.Добавить("Z");
	
КонецПроцедуры

&НаКлиенте
Процедура ТЗРеквизитовКолонкаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекСтрока = Элементы.ТЗРеквизитов.ТекущиеДанные;
	ТекСтрока.ИДКолонки = ВернутьНомерСтобца(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ТЗРеквизитовКолонкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПолучитьСписокКолонокТЗ(Элемент.СписокВыбора);
	
КонецПроцедуры

&НаКлиенте
Функция ВернутьНомерСтобца(ВыбранноеЗначение)
	
	СоотвАлфавита = Новый Соответствие;
	
	СоотвАлфавита.Вставить("A", 1);
	СоотвАлфавита.Вставить( "B", 2);
	СоотвАлфавита.Вставить( "C", 3);
	СоотвАлфавита.Вставить( "D", 4);
	СоотвАлфавита.Вставить( "E", 5);
	СоотвАлфавита.Вставить( "F", 6);
	СоотвАлфавита.Вставить( "G", 7);
	СоотвАлфавита.Вставить( "H", 8);
	СоотвАлфавита.Вставить( "I", 9);
	СоотвАлфавита.Вставить( "J", 10);
	СоотвАлфавита.Вставить("K", 11);
	СоотвАлфавита.Вставить("L", 12);
	СоотвАлфавита.Вставить("M", 13);
	СоотвАлфавита.Вставить("N", 14);
	СоотвАлфавита.Вставить("O", 15);
	СоотвАлфавита.Вставить("P", 16);
	СоотвАлфавита.Вставить("Q", 17);
	СоотвАлфавита.Вставить("R", 18);
	СоотвАлфавита.Вставить("S", 19);
	СоотвАлфавита.Вставить("T", 20);
	СоотвАлфавита.Вставить("U", 21);
	СоотвАлфавита.Вставить("V", 22);
	СоотвАлфавита.Вставить("W", 23);
	СоотвАлфавита.Вставить("X", 24);
	СоотвАлфавита.Вставить("Y", 25);
	СоотвАлфавита.Вставить("Z", 26);
	
	Возврат СоотвАлфавита.Получить(ВыбранноеЗначение);
	
конецФункции

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтаФорма.Закрыть(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныйФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЭтоМакет Тогда
		ИмяФайлаВложений = Строка(НоменклатурнаяГруппа) + ".xlsx"; 
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение); 
		ДиалогОткрытияФайла.ПолноеИмяФайла = ИмяФайлаВложений; 
		ДиалогОткрытияФайла.Фильтр = "Файлы Microsoft Excel (*.xlsx)|*.xlsx|Все файлы (*.*)|*.*"; 
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь; 
		ДиалогОткрытияФайла.Заголовок = "Выберите путь для сохранения макета";
		
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ПутьКФайлу = ДиалогОткрытияФайла.ПолноеИмяФайла;
		Иначе
			Возврат;
		КонецЕсли;
		
	Иначе
		Режим = РежимДиалогаВыбораФайла.Открытие;
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		Фильтр = "Excel(*.xlsx)|*.xlsx";
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = ложь;
		ДиалогОткрытияФайла.Заголовок = "Выберите файл для загрузки!";
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;		
			ПутьКФайлу = МассивФайлов[0];
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЭтоМакет") Тогда
		Этомакет = Параметры.ЭтоМакет;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыФормулы()
	
	Формула = НоменклатурнаяГруппа.ШаблонРабочегоНаименованияНоменклатуры;
	
	МассивВозврата = Новый Массив;
	
	Пока НЕ СтрНайти(Формула, "[") = 0 Цикл
		Нач = СтрНайти(Формула, "[");
		Кон = СтрНайти(Формула, "]");
		
		Реквизит = Сред(Формула, Нач + 1, Кон - Нач - 1);
		Формула = Сред(ФОрмула, Кон + 1);
		
		МассивВозврата.Добавить(Реквизит);
	КонецЦикла;
	
	Возврат МассивВозврата;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьКолонкиПоУмолчанию()
	
	КолонкаКод = 2;
	КолонкаНаименование = 3;
	КолонкаЦена = 8;
	КолонкаЕИ = 9;
	КолонкаНаименованиеКонкурента = 10;
	
КонецПроцедуры

