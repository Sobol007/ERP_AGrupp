
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ВидПоказателя) Тогда
			
			Объект.ВидПоказателя = ПредопределенноеЗначение("Перечисление.АГ_ВидыНормативныхПоказателей.КоэффициентыСезонности");
			
		КонецЕсли;
		
		Объект.Ответственный = ПолучитьТекПользователя();
		Объект.Период = НачалоМесяца(ТекущаяДата());
		
	КонецЕсли;
	
	Если Объект.Проведен Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.СезонностиРегионаГруппаЗагрузитьДанныеИзЭксель.Доступность = Ложь;
		Элементы.СилыТоваровГруппаЗагрузитьданныеИзЭксель.Доступность = Ложь;
		Элементы.ВероятностиОтгрузкиГруппаЗагрузитьДанныеИзЭксель.Доступность = Ложь;
		Элементы.ПотреблениеНоменклатурыГруппаЗагрузитьДанныеИзЭксель.Доступность = Ложь;
		Элементы.РегионыГруппаЗагрузитьДанныеИзЭксель.Доступность = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьВкладок();
	
	УстановитьВидимостьОтрасли();
	
	ПерезаполнитьИтоговыеКолонки();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекПользователя()
	
	Возврат Пользователи.ТекущийПользователь();
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьВкладок()
	
	Элементы.ВероятностьОтгрузки.Видимость = (Объект.ВидПоказателя = ПредопределенноеЗначение("Перечисление.АГ_ВидыНормативныхПоказателей.ВероятностьОтгрузки"));
	Элементы.ВнутриотраслевоеПотребление.Видимость = (Объект.ВидПоказателя = ПредопределенноеЗначение("Перечисление.АГ_ВидыНормативныхПоказателей.ВнутриотраслевоеПотребление"));
	Элементы.ДомашниеРегионы.Видимость = (Объект.ВидПоказателя = ПредопределенноеЗначение("Перечисление.АГ_ВидыНормативныхПоказателей.ДомашниеРегионы"));
	Элементы.КоэффициентыСезонности.Видимость = (Объект.ВидПоказателя = ПредопределенноеЗначение("Перечисление.АГ_ВидыНормативныхПоказателей.КоэффициентыСезонности"));
	Элементы.СилаТоваров.Видимость = (Объект.ВидПоказателя = ПредопределенноеЗначение("Перечисление.АГ_ВидыНормативныхПоказателей.СилаТоваров"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьОтрасли()
	
	Если Объект.ВидПоказателя = ПредопределенноеЗначение("Перечисление.АГ_ВидыНормативныхПоказателей.ВероятностьОтгрузки") ИЛИ
		Объект.ВидПоказателя = ПредопределенноеЗначение("Перечисление.АГ_ВидыНормативныхПоказателей.ВнутриотраслевоеПотребление") Тогда
		
		Элементы.Отрасль.Видимость = Истина;
		Элементы.ЦФО.Видимость = Ложь;
		Объект.ЦФО = Неопределено;
		
	Иначе
		Объект.Отрасль = ПредопределенноеЗначение("Справочник.CRM_Отрасли.ПустаяСсылка");
		Элементы.Отрасль.Видимость = Ложь;
		Элементы.ЦФО.Видимость = Истина;
		
	КонецЕсли;
	 
 КонецПроцедуры
 
  &НаКлиенте
 Процедура ПерезаполнитьИтоговыеКолонки()
	 
	 Для Каждого ТекСтр Из Объект.СезонностиРегиона Цикл
		 
		 ТекСтр.ВСЕГО = ТекСтр.Январь + ТекСтр.Февраль + ТекСтр.Март + ТекСтр.Апрель + ТекСтр.Май + ТекСтр.Июнь + ТекСтр.Июль + ТекСтр.Август + ТекСтр.Сентябрь + ТекСтр.Октябрь + ТекСтр.Ноябрь + ТекСтр.Декабрь;

	 КонецЦикла;
	 
 КонецПроцедуры

&НаКлиенте
 Процедура ВидПоказателяПриИзменении(Элемент)
	 
	 УстановитьВидимостьВкладок();
	 УстановитьВидимостьОтрасли();
	 ОчиститьТабЧасти();
	 
 КонецПроцедуры
 
 &НаСервере
 Процедура ОчиститьТабЧасти()
	 
	Если НЕ Объект.ВидПоказателя = Перечисления.АГ_ВидыНормативныхПоказателей.КоэффициентыСезонности Тогда
		Объект.СезонностиРегиона.Очистить();
	КонецЕсли;
	
	Если НЕ Объект.ВидПоказателя = Перечисления.АГ_ВидыНормативныхПоказателей.СилаТоваров Тогда
		Объект.СилыТоваров.Очистить();
	КонецЕсли;
	
	Если НЕ Объект.ВидПоказателя = Перечисления.АГ_ВидыНормативныхПоказателей.ВероятностьОтгрузки Тогда
		Объект.ВероятностиОтгрузки.Очистить();
	КонецЕсли;
	
	Если НЕ Объект.ВидПоказателя = Перечисления.АГ_ВидыНормативныхПоказателей.ВнутриотраслевоеПотребление Тогда
		Объект.ПотреблениеНоменклатуры.Очистить();
	КонецЕсли;
	
	Если НЕ Объект.ВидПоказателя = Перечисления.АГ_ВидыНормативныхПоказателей.ДомашниеРегионы Тогда
		Объект.Регионы.Очистить();
		Объект.ОсновнойДомашнийРегион = Справочники.БизнесРегионы.ПустаяСсылка();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВероятностьОтгрузки_ВыгрузитьВЭксельШаблон(Команда)
	
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	 ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	 ДиалогОткрытияФайла.ПолноеИмяФайла = "Пример шаблона вероятность отгрузки";
	 Фильтр = "Excel(*.xlsx)|*.xlsx";
	 ДиалогОткрытияФайла.Фильтр = Фильтр;
	 ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	 ДиалогОткрытияФайла.Заголовок = "Сохранение";
	 Если ДиалогОткрытияФайла.Выбрать() Тогда
		 МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;		
		 ПутьКФайлу = МассивФайлов[0];
	 Иначе
		 Возврат;
	 КонецЕсли;
	 
	 ТабДок = Новый ТабличныйДокумент;
	 ЗаполнитьМакетНаСервере_Вероятность(ТабДок);
	 
	 ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLSX);
	 
	 Предупреждение("Сохранение завершено!");
	 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакетНаСервере_Вероятность(ТабДок)
	
	Макет = Документы.АГ_ВводНормативныхПоказателей.ПолучитьМакет("МакетШаблонаВыгрузки");
	
	Областьмакета = Макет.ПолучитьОбласть("Шапка_ВероятностьОтгрузки|ЖЦ");
	ТабДок.Вывести(ОбластьМакета);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СтатусыКлиента.Ссылка КАК СтатусКлиента,
	|	0 КАК ВероятностьОтгрузки
	|ИЗ
	|	Перечисление.АГ_СтатусыКлиента КАК СтатусыКлиента";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока ВЫборка.Следующий() Цикл
		
		Областьмакета = Макет.ПолучитьОбласть("Строка_ВероятностьОтгрузки|ЖЦ");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		
		ТабДок.Вывести(ОбластьМакета);
	КонецЦикла;
	 
КонецПроцедуры

&НаКлиенте
Процедура ВероятностьОтгрузки_ЗагрузитьИзЭксель(Команда)
	
	Если Объект.ВероятностиОтгрузки.Количество() > 0 Тогда
		 
		 ТекстВопроса = "Перед заполнением табличная часть будет очищена. Продолжить?";
		 Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		 Если Ответ = КодВозвратаДиалога.Нет Тогда
			 Возврат;
		 КонецЕсли;
		 Объект.ВероятностиОтгрузки.Очистить();
		 
	 КонецЕсли;
	 
	 Режим = РежимДиалогаВыбораФайла.Открытие;
	 ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	 ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	 Текст = "ru = ""Текст""; en = ""Text""";
	 Фильтр = НСтр(Текст)+"(*.xlsx)|*.xlsx";
	 ДиалогОткрытияФайла.Фильтр = Фильтр;
	 ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	 ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	 Если ДиалогОткрытияФайла.Выбрать() Тогда
		 МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		 ИмяФайла = МассивФайлов[0] 
	 Иначе
		 Возврат;
	 КонецЕсли;
	 
	 Попытка
		 
		 СоответствиеУсловий = Новый Соответствие;
		 ЗаполнитьСоответствиеСтатусаКлиента(СоответствиеУсловий);
		 
		 ТбДок = Новый ТабличныйДокумент;
		 
		 Попытка
			 ТбДок.Прочитать(ИмяФайла);
		 Исключение
			 Сообщить("Монопольный доступ к файлу загрузки не может быть получен! Пожалуйста, закройте загружаемый файл в другом приложении.");	
			 Возврат;
		 КонецПопытки;
		 
		 Лист1 = ТбДок; 
		 ВсегоСтрок = Лист1.ВысотаТаблицы ;
		 ВсегоСтолбцов = Лист1.ШиринаТаблицы;
		 		 
		 Для СчетчикСтрок = 2 По ВсегоСтрок Цикл
			 ЖЦ = СокрЛП(Лист1.Область(СчетчикСтрок, 1).Текст);
			 Вероятнсть = СокрЛП(Лист1.Область(СчетчикСтрок, 2).Текст);
			 
			 Если Не ЗначениеЗаполнено(ЖЦ) Тогда
				 Продолжить;
			 КонецЕсли;
			 
			 ЗначениеЖЦ = СоответствиеУсловий.Получить(ЖЦ);
			 
			 Если Не ЗначениеЗаполнено(ЖЦ) Тогда
				 Сообщить("В строке " + Строка(СчетчикСтрок) + " не удалось опредеить статус клиента (" + Строка(ЖЦ) + "). Обработка строки невозможна!");
				 Продолжить;
			 КонецЕсли;
			 
			 НовСтр =  Объект.ВероятностиОтгрузки.Добавить();
			 НовСтр.СтатусКлиента = ПолучитьСтатусКлиентаПоНаименованиюНаСервере(ЗначениеЖЦ);
			 Новстр.ВероятностьОтгрузки = ПреобразоватьСтрокуКЧислу(Вероятнсть);
			 
		 КонецЦикла;
		 
	 Исключение
		 Сообщить(ОписаниеОшибки());
	 КонецПопытки; 
	 
	 Предупреждение("Загрузка завершена!");	
	
КонецПроцедуры
 
&НаКлиенте
 Функция ПреобразоватьСтрокуКЧислу(Стр)
	 
	 Если Стр = "" Тогда
		 Возврат 0;
	 КонецЕсли;
	 
	 Попытка
		 ТекЗнач = Число(Стр);
	 Исключение
		 ТекЗнач = 0;
	 КонецПопытки;
	 
	 Возврат ТекЗнач;
	 
 КонецФункции 
 
&НаСервере
Процедура ЗаполнитьСоответствиеСтатусаКлиента(СоответствиеУсловий)
	
	Для Каждого СтрМета из Метаданные.Перечисления.АГ_СтатусыКлиента.ЗначенияПеречисления Цикл
		СоответствиеУсловий.Вставить(СтрМета.Синоним, СтрМета.Имя);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтатусКлиентаПоНаименованиюНаСервере(ЗначениеЖЦ)
	
	Возврат Перечисления.АГ_СтатусыКлиента[ЗначениеЖЦ];
	
КонецФункции

&НаКлиенте
Процедура ВнутриотраслевоеПотребление_ВыгрузитьВЭксельШаблон(Команда)
	
	   Режим = РежимДиалогаВыбораФайла.Сохранение;
	 ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	 ДиалогОткрытияФайла.ПолноеИмяФайла = "Пример шаблона внутриотраслевое потребление";
	 Фильтр = "Excel(*.xlsx)|*.xlsx";
	 ДиалогОткрытияФайла.Фильтр = Фильтр;
	 ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	 ДиалогОткрытияФайла.Заголовок = "Сохранение";
	 Если ДиалогОткрытияФайла.Выбрать() Тогда
		 МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;		
		 ПутьКФайлу = МассивФайлов[0];
	 Иначе
		 Возврат;
	 КонецЕсли;
	 
	 ТабДок = Новый ТабличныйДокумент;
	 ЗаполнитьМакетНаСервере_Потребление(ТабДок);
	 	 
	 ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLSX);
	 
	 Предупреждение("Сохранение завершено!");
	
 КонецПроцедуры
 
 &НаСервере
 Процедура ЗаполнитьМакетНаСервере_Потребление(ТабДок)
	 
	 Макет = Документы.АГ_ВводНормативныхПоказателей.ПолучитьМакет("МакетШаблонаВыгрузки");
	 
	 Областьмакета = Макет.ПолучитьОбласть("ЖЦ|Шапка_ВнутриотраслевоеПотребление");
	 ТабДок.Вывести(ОбластьМакета);
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ВложенныйЗапрос.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                |	СУММА(ВложенныйЗапрос.Доляпотребления) КАК Доляпотребления
	                |ИЗ
	                |	(ВЫБРАТЬ
	                |		НоменклатурныеГруппы.Ссылка КАК НоменклатурнаяГруппа,
	                |		0 КАК Доляпотребления
	                |	ИЗ
	                |		Справочник.ВидыНоменклатуры КАК НоменклатурныеГруппы
	                |	ГДЕ
	                |		НЕ НоменклатурныеГруппы.ПометкаУдаления
	                |		И НЕ НоменклатурныеГруппы.ЭтоГруппа) КАК ВложенныйЗапрос
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВложенныйЗапрос.НоменклатурнаяГруппа
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	ВложенныйЗапрос.НоменклатурнаяГруппа.Наименование";
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 
	 Пока ВЫборка.Следующий() Цикл
	 
		 Областьмакета = Макет.ПолучитьОбласть("ЖЦ|Строка_ВнутриотраслевоеПотребление");
		 ОбластьМакета.Параметры.Заполнить(Выборка);
		 
		 ТабДок.Вывести(ОбластьМакета);
	 КонецЦикла;

 КонецПроцедуры

&НаКлиенте
Процедура ВнутриотраслевоеПотребление_ЗагрузитьИзЭксель(Команда)
	
	Если Объект.ПотреблениеНоменклатуры.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		Объект.ПотреблениеНоменклатуры.Очистить();
		
	КонецЕсли;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Текст = "ru = ""Текст""; en = ""Text""";
	Фильтр = НСтр(Текст)+"(*.xlsx)|*.xlsx";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		ИмяФайла = МассивФайлов[0] 
	Иначе
		Возврат;
	КонецЕсли;
	
	Попытка
		
		ТбДок = Новый ТабличныйДокумент;
		
		Попытка
			ТбДок.Прочитать(ИмяФайла);
		Исключение
			Сообщить("Монопольный доступ к файлу загрузки не может быть получен! Пожалуйста, закройте загружаемый файл в другом приложении.");	
			Возврат;
		КонецПопытки;
		
		Лист1 = ТбДок; 
		ВсегоСтрок = Лист1.ВысотаТаблицы ;
		ВсегоСтолбцов = Лист1.ШиринаТаблицы;
		
		Для СчетчикСтрок = 2 По ВсегоСтрок Цикл
			НоменклатурнаяГруппаСтр = СокрЛП(Лист1.Область(СчетчикСтрок, 1).Текст);
			
			Если Не ЗначениеЗаполнено(НоменклатурнаяГруппаСтр) Тогда
				Продолжить;
			КонецЕсли;
			
			НомГруппа = ПолучитьВидНоменклатурыПоНаименованию(НоменклатурнаяГруппаСтр);
			
			Если Не ЗначениеЗаполнено(НомГруппа) Тогда
				Сообщить("В строке " + Строка(СчетчикСтрок) + " не удалось опредеить вид номенклатуры (" + Строка(НоменклатурнаяГруппаСтр) + "). Обработка строки невозможна!");
				Продолжить;
			КонецЕсли;
			
			НовСтр =  Объект.ПотреблениеНоменклатуры.Добавить();
			НовСтр.НоменклатурнаяГруппа = НомГруппа;
			Новстр.ДоляПотребления = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 2).Текст));
			
		КонецЦикла;
		
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	Предупреждение("Загрузка завершена!");
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьВидНоменклатурыПоКоду(Код)
	
	 Возврат Справочники.ВидыНоменклатуры.НайтиПоКоду(Код);
	 
КонецФункции

&НаСервере 
Функция ПолучитьВидНоменклатурыПоНаименованию(СтрНаименование)
	
	 Возврат Справочники.ВидыНоменклатуры.НайтиПоНаименованию(СтрНаименование);
	 
КонецФункции

&НаКлиенте
Процедура Регионы_ВыгрузитьВЭксельШаблон(Команда)
	
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	 ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	 ДиалогОткрытияФайла.ПолноеИмяФайла = "Пример шаблона домашние регионы";
	 Фильтр = "Excel(*.xlsx)|*.xlsx";
	 ДиалогОткрытияФайла.Фильтр = Фильтр;
	 ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	 ДиалогОткрытияФайла.Заголовок = "Сохранение";
	 Если ДиалогОткрытияФайла.Выбрать() Тогда
		 МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;		
		 ПутьКФайлу = МассивФайлов[0];
	 Иначе
		 Возврат;
	 КонецЕсли;
	 
	 ТабДок = Новый ТабличныйДокумент;
	 ЗаполнитьМакетНаСервере_Регионы(ТабДок);
	
	 ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLSX);
	 
	 Предупреждение("Сохранение завершено!");
	
 КонецПроцедуры
 
 &НаСервере
 Процедура ЗаполнитьМакетНаСервере_Регионы(ТабДок)
	 
	  Макет = Документы.АГ_ВводНормативныхПоказателей.ПолучитьМакет("МакетШаблонаВыгрузки");
	 
	 Областьмакета = макет.ПолучитьОбласть("ЖЦ|Шапка_Регионы");
	 ТабДок.Вывести(ОбластьМакета);
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ВводНормативныхПоказателейРегионы.Регион КАК Регион
	                |ПОМЕСТИТЬ Регионы
	                |ИЗ
	                |	(ВЫБРАТЬ
	                |		ВводНормативныхПоказателей.ЦФО КАК ЦФО,
	                |		МАКСИМУМ(ВводНормативныхПоказателей.Период) КАК Период,
	                |		ВводНормативныхПоказателей.ВидПоказателя КАК ВидПоказателя
	                |	ИЗ
	                |		Документ.АГ_ВводНормативныхПоказателей КАК ВводНормативныхПоказателей
	                |	ГДЕ
	                |		ВводНормативныхПоказателей.Проведен
	                |		И ВводНормативныхПоказателей.ЦФО <> &ЦФО
	                |		И ВводНормативныхПоказателей.ВидПоказателя = &ВидПоказателя
	                |	
	                |	СГРУППИРОВАТЬ ПО
	                |		ВводНормативныхПоказателей.ЦФО,
	                |		ВводНормативныхПоказателей.ВидПоказателя) КАК ВложенныйЗапрос
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АГ_ВводНормативныхПоказателей.Регионы КАК ВводНормативныхПоказателейРегионы
	                |		ПО ВложенныйЗапрос.ЦФО = ВводНормативныхПоказателейРегионы.Ссылка.ЦФО
	                |			И ВложенныйЗапрос.Период = ВводНормативныхПоказателейРегионы.Ссылка.Период
	                |			И ВложенныйЗапрос.ВидПоказателя = ВводНормативныхПоказателейРегионы.Ссылка.ВидПоказателя
	                |ГДЕ
	                |	ВводНормативныхПоказателейРегионы.Ссылка.Проведен
	                |	И ВводНормативныхПоказателейРегионы.Ссылка.ЦФО <> &ЦФО
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВводНормативныхПоказателейРегионы.Регион
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	Регионы.Ссылка КАК Регион,
	                |	0 КАК Коэфф
	                |ИЗ
	                |	Справочник.БизнесРегионы КАК Регионы
	                |ГДЕ
	                |	НЕ Регионы.Ссылка В
	                |				(ВЫБРАТЬ
	                |					Регионы.Регион КАК Регион
	                |				ИЗ
	                |					Регионы КАК Регионы)
	                |	И НЕ Регионы.ПометкаУдаления";
	 
	 Запрос.УстановитьПараметр("ЦФО", Объект.ЦФО);
	 Запрос.УстановитьПараметр("ВидПоказателя", Перечисления.АГ_ВидыНормативныхПоказателей.ДомашниеРегионы);
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
		  Областьмакета = Макет.ПолучитьОбласть("ЖЦ|Строка_Регионы");
		  ОбластьМакета.Параметры.Заполнить(Выборка);
		  
		  ТабДок.Вывести(ОбластьМакета);
	 КонецЦикла;
	
 КонецПроцедуры

 &НаКлиенте
 Процедура Регионы_ЗагрузитьИзЭксель(Команда)
	 
	 Если Объект.Регионы.Количество() > 0 Тогда
		 
		 ТекстВопроса = "Перед заполнением табличная часть будет очищена. Продолжить?";
		 Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		 Если Ответ = КодВозвратаДиалога.Нет Тогда
			 Возврат;
		 КонецЕсли;
		 Объект.Регионы.Очистить();
		 
	 КонецЕсли;
	 
	 Режим = РежимДиалогаВыбораФайла.Открытие;
	 ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	 ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	 Текст = "ru = ""Текст""; en = ""Text""";
	 Фильтр = НСтр(Текст)+"(*.xlsx)|*.xlsx";
	 ДиалогОткрытияФайла.Фильтр = Фильтр;
	 ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	 ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	 Если ДиалогОткрытияФайла.Выбрать() Тогда
		 МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		 ИмяФайла = МассивФайлов[0] 
	 Иначе
		 Возврат;
	 КонецЕсли;
	 
	 Попытка
		 
		 ТбДок = Новый ТабличныйДокумент;
		 
		 Попытка
			 ТбДок.Прочитать(ИмяФайла);
		 Исключение
			 Сообщить("Монопольный доступ к файлу загрузки не может быть получен! Пожалуйста, закройте загружаемый файл в другом приложении.");	
			 Возврат;
		 КонецПопытки;
		 
		 Лист1 = ТбДок; 
		 ВсегоСтрок = Лист1.ВысотаТаблицы ;
		 ВсегоСтолбцов = Лист1.ШиринаТаблицы;
		 
		 Для СчетчикСтрок = 2 По ВсегоСтрок Цикл
			 РегионСтр = СокрЛП(Лист1.Область(СчетчикСтрок, 1).Текст);
			 
			 Если Не ЗначениеЗаполнено(РегионСтр) Тогда
				 Продолжить;
			 КонецЕсли;
			 
			 Регион = ПолучитьРегионПоНаименованию(РегионСтр);
			 
			 Если Не ЗначениеЗаполнено(Регион) Тогда
				 Сообщить("В строке " + Строка(СчетчикСтрок) + " не удалось опредеить регион по наименованию (" + Строка(РегионСтр) + "). Обработка строки невозможна!");
				 Продолжить;
			 КонецЕсли;
			 
			 НовСтр =  Объект.Регионы.Добавить();
			 НовСтр.Регион = Регион;
			 Новстр.Коэффициент = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 2).Текст));
			 
		 КонецЦикла;
		 
	 Исключение
		 Сообщить(ОписаниеОшибки());
	 КонецПопытки; 
	 
	 Предупреждение("Загрузка завершена!");
	 
 КонецПроцедуры

&НаСервере 
Функция ПолучитьРегионПоНаименованию(РегионСтр)
	
	 Возврат Справочники.БизнесРегионы.НайтиПоНаименованию(РегионСтр);
	 
КонецФункции

&НаКлиенте
Процедура УстановитьОсновнойДомашнийРгеион(Команда)
	
	ТекСтрока = Элементы.Регионы.ТекущиеДанные;
	Если ТекСтрока = Неопределено ТОгда
		Возврат;
	КонецЕсли;
	
	Объект.ОсновнойДомашнийРегион = ТекСтрока.Регион;
	
КонецПроцедуры

&НаКлиенте
Процедура Сезонность_ВыгрузитьВЭксельШаблон(Команда)
	
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	 ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	 ДиалогОткрытияФайла.ПолноеИмяФайла = "Пример шаблона коэффициентов сезонности";
	 Фильтр = "Excel(*.xlsx)|*.xlsx";
	 ДиалогОткрытияФайла.Фильтр = Фильтр;
	 ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	 ДиалогОткрытияФайла.Заголовок = "Сохранение";
	 Если ДиалогОткрытияФайла.Выбрать() Тогда
		 МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;		
		 ПутьКФайлу = МассивФайлов[0];
	 Иначе
		 Возврат;
	 КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	ЗаполнитьМакетНаСервере_Сезонность(ТабДок);
		
	ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLSX);
	
	Предупреждение("Сохранение завершено!");	
	
КонецПроцедуры

&НаКлиенте
Процедура Сезонность_ЗагрузитьИзЭксель(Команда)
	
	Если Объект.СезонностиРегиона.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		Объект.СезонностиРегиона.Очистить();
		
	КонецЕсли;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Текст = "ru = ""Текст""; en = ""Text""";
	Фильтр = НСтр(Текст)+"(*.xlsx)|*.xlsx";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		ИмяФайла = МассивФайлов[0] 
	Иначе
		Возврат;
	КонецЕсли;
	
	Попытка
		
		ТбДок = Новый ТабличныйДокумент;
		
		Попытка
			ТбДок.Прочитать(ИмяФайла);
		Исключение
			Сообщить("Монопольный доступ к файлу загрузки не может быть получен! Пожалуйста, закройте загружаемый файл в другом приложении.");	
			Возврат;
		КонецПопытки;
		
		Лист1 = ТбДок; 
		ВсегоСтрок = Лист1.ВысотаТаблицы ;
		ВсегоСтолбцов = Лист1.ШиринаТаблицы;
		
		Для СчетчикСтрок = 2 По ВсегоСтрок Цикл
			НоменклатурнаяГруппаСтр = СокрЛП(Лист1.Область(СчетчикСтрок, 1).Текст);
			
			Если Не ЗначениеЗаполнено(НоменклатурнаяГруппаСтр) Тогда
				Продолжить;
			КонецЕсли;
			
			НомГруппа = ПолучитьГруппуАналитДоступа(НоменклатурнаяГруппаСтр);
			
			Если Не ЗначениеЗаполнено(НомГруппа) Тогда
				Сообщить("В строке " + Строка(СчетчикСтрок) + " не удалось опредеить группу аналитического доступа номенклатуры (" + Строка(НоменклатурнаяГруппаСтр) + "). Обработка строки невозможна!");
				Продолжить;
			КонецЕсли;
			
			НовСтр =  Объект.СезонностиРегиона.Добавить();
			НовСтр.НоменклатурнаяГруппа = НомГруппа;
			Новстр.Январь = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 2).Текст));
			Новстр.Февраль = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 3).Текст));
			Новстр.Март = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 4).Текст));
			Новстр.Апрель = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 5).Текст));
			Новстр.Май = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 6).Текст));
			Новстр.Июнь = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 7).Текст));
			Новстр.Июль = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 8).Текст));
			Новстр.Август = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 9).Текст));
			Новстр.Сентябрь = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 10).Текст));
			Новстр.Октябрь = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 11).Текст));
			Новстр.Ноябрь = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 12).Текст));
			Новстр.Декабрь = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 13).Текст));
			НовСтр.ВСЕГО = НовСтр.Январь + НовСтр.Февраль + НовСтр.Март + НовСтр.Апрель + НовСтр.Май + НовСтр.Июнь + НовСтр.Июль + НовСтр.Август + НовСтр.Сентябрь + НовСтр.Октябрь + НовСтр.Ноябрь + НовСтр.Декабрь;
			
		КонецЦикла;
		
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	Предупреждение("Загрузка завершена!");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакетНаСервере_Сезонность(ТабДок)
	
	Макет = Документы.АГ_ВводНормативныхПоказателей.ПолучитьМакет("МакетШаблонаВыгрузки");
	 
	 Областьмакета = макет.ПолучитьОбласть("БезКода|Шапка_Сезонность");
	 ТабДок.Вывести(ОбластьМакета);
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ВложенныйЗапрос.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                |	СУММА(ВложенныйЗапрос.Январь) КАК Январь,
	                |	СУММА(ВложенныйЗапрос.Февраль) КАК Февраль,
	                |	СУММА(ВложенныйЗапрос.Март) КАК Март,
	                |	СУММА(ВложенныйЗапрос.Апрель) КАК Апрель,
	                |	СУММА(ВложенныйЗапрос.Май) КАК Май,
	                |	СУММА(ВложенныйЗапрос.Июнь) КАК Июнь,
	                |	СУММА(ВложенныйЗапрос.Июль) КАК Июль,
	                |	СУММА(ВложенныйЗапрос.Август) КАК Август,
	                |	СУММА(ВложенныйЗапрос.Сентябрь) КАК Сентябрь,
	                |	СУММА(ВложенныйЗапрос.Октябрь) КАК Октябрь,
	                |	СУММА(ВложенныйЗапрос.Ноябрь) КАК Ноябрь,
	                |	СУММА(ВложенныйЗапрос.Декабрь) КАК Декабрь
	                |ИЗ
	                |	(ВЫБРАТЬ
	                |		СводныеНоменклатурныеГруппы.Ссылка КАК НоменклатурнаяГруппа,
	                |		0 КАК Январь,
	                |		0 КАК Февраль,
	                |		0 КАК Март,
	                |		0 КАК Апрель,
	                |		0 КАК Май,
	                |		0 КАК Июнь,
	                |		0 КАК Июль,
	                |		0 КАК Август,
	                |		0 КАК Сентябрь,
	                |		0 КАК Октябрь,
	                |		0 КАК Ноябрь,
	                |		0 КАК Декабрь
	                |	ИЗ
	                |		Справочник.ГруппыАналитическогоУчетаНоменклатуры КАК СводныеНоменклатурныеГруппы
	                |	ГДЕ
	                |		НЕ СводныеНоменклатурныеГруппы.ПометкаУдаления) КАК ВложенныйЗапрос
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВложенныйЗапрос.НоменклатурнаяГруппа
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	ВложенныйЗапрос.НоменклатурнаяГруппа.Наименование";
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 
	 Пока ВЫборка.Следующий() Цикл
		  Областьмакета = Макет.ПолучитьОбласть("БезКода|Строка_Сезонность");
		  ОбластьМакета.Параметры.Заполнить(Выборка);
		  
		  ОбластьМакета.Параметры.Всего = 0;
		  
		  ТабДок.Вывести(ОбластьМакета);
	 КонецЦикла;
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьГруппуАналитДоступа(СтрНаименование)
	
	 Возврат Справочники.ГруппыАналитическогоУчетаНоменклатуры.НайтиПоНаименованию(СтрНаименование);
	 
КонецФункции

&НаКлиенте
Процедура СилаТовара_ВыгрузитьВЭксельШаблон(Команда)
	
	 Режим = РежимДиалогаВыбораФайла.Сохранение;
	 ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	 ДиалогОткрытияФайла.ПолноеИмяФайла = "Пример шаблона силы товаров";
	 Фильтр = "Excel(*.xlsx)|*.xlsx";
	 ДиалогОткрытияФайла.Фильтр = Фильтр;
	 ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	 ДиалогОткрытияФайла.Заголовок = "Сохранение";
	 Если ДиалогОткрытияФайла.Выбрать() Тогда
		 МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;		
		 ПутьКФайлу = МассивФайлов[0];
	 Иначе
		 Возврат;
	 КонецЕсли;
	 
	 ТабДок = Новый ТабличныйДокумент;
	 ЗаполнитьМакетНаСервере_СилаТовараь(ТабДок);
	 	 
	 ТабДок.Записать(ПутьКФайлу, ТипФайлаТабличногоДокумента.XLSX);
	 
	 Предупреждение("Сохранение завершено!");

	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакетНаСервере_СилаТовараь(ТабДок)
	
	Макет = Документы.АГ_ВводНормативныхПоказателей.ПолучитьМакет("МакетШаблонаВыгрузки");
	 
	 Областьмакета = Макет.ПолучитьОбласть("ЖЦ|Шапка_СилаТовара");
	 ТабДок.Вывести(ОбластьМакета);
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	                |	ВложенныйЗапрос.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	                |	СУММА(ВложенныйЗапрос.СилаТовара) КАК СилаТовара
	                |ИЗ
	                |	(ВЫБРАТЬ
	                |		НоменклатурныеГруппы.Ссылка КАК НоменклатурнаяГруппа,
	                |		0 КАК СилаТовара
	                |	ИЗ
	                |		Справочник.ВидыНоменклатуры КАК НоменклатурныеГруппы
	                |	ГДЕ
	                |		НЕ НоменклатурныеГруппы.ПометкаУдаления
	                |		И НЕ НоменклатурныеГруппы.ЭтоГруппа) КАК ВложенныйЗапрос
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВложенныйЗапрос.НоменклатурнаяГруппа
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	ВложенныйЗапрос.НоменклатурнаяГруппа.Наименование";
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
	 
		 Областьмакета = Макет.ПолучитьОбласть("ЖЦ|Строка_СилаТовара");
		 ОбластьМакета.Параметры.Заполнить(ВЫборка);
		 
		 //ОбластьМакета.Параметры.Код = Выборка.НоменклатурнаяГруппа.Код;
		 //
		 ТабДок.Вывести(ОбластьМакета);
	 КонецЦикла;
	 
КонецПроцедуры

&НаКлиенте
Процедура СилаТовара_ЗагрузитьИзЭксель(Команда)
	
	 Если Объект.СилыТоваров.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		Объект.СилыТоваров.Очистить();
		
	КонецЕсли;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Текст = "ru = ""Текст""; en = ""Text""";
	Фильтр = НСтр(Текст)+"(*.xlsx)|*.xlsx";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		ИмяФайла = МассивФайлов[0] 
	Иначе
		Возврат;
	КонецЕсли;
	
	Попытка
		
		ТбДок = Новый ТабличныйДокумент;
		
		Попытка
			ТбДок.Прочитать(ИмяФайла);
		Исключение
			Сообщить("Монопольный доступ к файлу загрузки не может быть получен! Пожалуйста, закройте загружаемый файл в другом приложении.");	
			Возврат;
		КонецПопытки;
		
		Лист1 = ТбДок; 
		ВсегоСтрок = Лист1.ВысотаТаблицы ;
		ВсегоСтолбцов = Лист1.ШиринаТаблицы;
		
		Для СчетчикСтрок = 2 По ВсегоСтрок Цикл
			НоменклатурнаяГруппаСтр = СокрЛП(Лист1.Область(СчетчикСтрок, 1).Текст);
			
			НомГруппа = ПолучитьВидНоменклатурыПоНаименованию(НоменклатурнаяГруппаСтр);
			
			Если Не ЗначениеЗаполнено(НомГруппа) Тогда
				Сообщить("В строке " + Строка(СчетчикСтрок) + " не удалось опредеить вид номенклатуры(" + Строка(НоменклатурнаяГруппаСтр) + "). Обработка строки невозможна!");
				Продолжить;
			КонецЕсли;
			
			НовСтр =  Объект.СилыТоваров.Добавить();
			НовСтр.НоменклатурнаяГруппа = НомГруппа;
			Новстр.СилаТовара = ПреобразоватьСтрокуКЧислу(СокрЛП(Лист1.Область(СчетчикСтрок, 2).Текст));
			
		КонецЦикла;
		
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	Предупреждение("Загрузка завершена!");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПроверитьНаДубльПоДате(Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаДубльПоДате(Отказ)
	
	Заголовок = "Запись документа """ + СокрЛП(Объект.Ссылка) + """: ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВводНормативныхПоказателей.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.АГ_ВводНормативныхПоказателей КАК ВводНормативныхПоказателей
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(ВводНормативныхПоказателей.Период, ДЕНЬ) = &Дата
	               |	И НЕ ВводНормативныхПоказателей.ПометкаУдаления
	               |	И ВводНормативныхПоказателей.ЦФО = &ЦФО
	               |	И ВводНормативныхПоказателей.Отрасль = &Отрасль
	               |	И ВводНормативныхПоказателей.ВидПоказателя = &ВидПоказателя
	               |	И ВводНормативныхПоказателей.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(Объект.Период));
	Запрос.УстановитьПараметр("ЦФО", Объект.ЦФО);
	Запрос.УстановитьПараметр("Отрасль", Объект.Отрасль);
	Запрос.УстановитьПараметр("ВидПоказателя", Объект.ВидПоказателя);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		  ОбщегоНазначения.СообщитьОбОшибке("На период документа уже существуют документы с таким же видом показателя, металлоцентром и отраслью", Отказ, "");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Объект.Проведен Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.СезонностиРегионаГруппаЗагрузитьДанныеИзЭксель.Доступность = Ложь;
		Элементы.СилыТоваровГруппаЗагрузитьданныеИзЭксель.Доступность = Ложь;
		Элементы.ВероятностиОтгрузкиГруппаЗагрузитьДанныеИзЭксель.Доступность = Ложь;
		Элементы.ПотреблениеНоменклатурыГруппаЗагрузитьДанныеИзЭксель.Доступность = Ложь;
		Элементы.РегионыГруппаЗагрузитьДанныеИзЭксель.Доступность = Ложь;
	КонецЕсли;
	
	ПерезаполнитьИтоговыеКолонки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦФОПриИзменении(Элемент)
	
	Если НЕ Объект.ЦФО.АГ_УровеньПодчинения = ПредопределенноеЗначение("Перечисление.АГ_УровеньПодчинения.Металлоцентр") И НЕ Объект.ЦФО.АГ_УровеньПодчинения = ПредопределенноеЗначение("Перечисление.АГ_УровеньПодчинения.ОтделПродажПрямогоПодчинения") И ЗначениеЗаполнено(Объект.ЦФО) Тогда
		Объект.ЦФО = ПредопределенноеЗначение("Справочник.СтруктураПредприятия.ПустаяСсылка");
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Разрешено выбирать элемент из справочника с уровнем Металлоцентр или Отдел продаж прямого подчинения!";
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры



