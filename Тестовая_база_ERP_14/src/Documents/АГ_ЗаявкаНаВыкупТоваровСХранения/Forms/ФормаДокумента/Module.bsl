#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	//Запомним перечисления
	ДокументСогласован = Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.Согласован;
	ДосрочныйВыкуп = Перечисления.АГ_ОснованиеКВыкупу.ДосрочныйВыкуп;
	
	//<--Давиденко А.В.: УЗК0012 03.06.2019 13:24:17
	ЗаполнитьДопКолонки();
	УстановитьВидимость();
	//-->Давиденко А.В.: УЗК0012
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Или Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.АГ_НаСогласованииДО = "";
		Объект.Статус = Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.ВПодготовке;
	КонецЕсли;	
	
	Если Параметры.Свойство("ТекущаяСтрокаЗадачи") Тогда
		АГ_ТекущаяСтрокаЗадачи = Параметры.ТекущаяСтрокаЗадачи;
		Элементы.АГ_ГруппаИсполнениеТри.Видимость = Истина;
	Иначе
		АГ_ТекущаяСтрокаЗадачи = 9999999999;
		Элементы.АГ_ГруппаИсполнениеТри.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	НастройкаЭлементовФормы();
	НастройкаЭлементовФормыДосрочныйВыкуп();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура ЗаполнитьДляДосрочногоВыкупа(Команда)
	
	Если Объект.Товары.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ОКОтмена;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаЗаполнениеДВ", ЭтаФорма, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Табличная часть Товары будет очищена.';"), Режим, 0);
	Иначе 	
 		ЗаполнитьДляДосрочногоВыкупаНаСервереН();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастройкаЭлементовФормы() 
	
	КоманднаяПанель.ПодчиненныеЭлементы.ФормаГруппаКомандыФормы.ПодчиненныеЭлементы.ФормаСоздатьНаОсновании.Доступность = Объект.Статус = ДокументСогласован;
	
	Элементы.ОснованиеКВыкупу.ТолькоПросмотр = Объект.ДокументОснование <> Неопределено;
	
КонецПроцедуры // ()  

&НаКлиенте
Процедура ПолучитьИтогоКоличествоКВозврату()
	ТекСтрока=Элементы.Товары.ТекущиеДанные;
	ТекСтрока.ИтогоКоличествоКВозврату=ТекСтрока.КоличествоВЗаказах+ТекСтрока.КоличествоБезЗаказов;
КонецПроцедуры // ()

&НаКлиенте
Процедура ПослеЗакрытияВопросаЗаполнениеДВ(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Очистить();
	ЗаполнитьДляДосрочногоВыкупаНаСервереН();

КонецПроцедуры // ()

&НаСервере
Функция ЗапросОстаткиНаХранении(ЭтоДосрочныйВыкуп=Ложь)   

	Запрос = Новый Запрос;                                                             
	Запрос.Текст = 
	
	   "ВЫБРАТЬ
	   |	ТоварыКОтгрузкеОбороты.Номенклатура КАК Номенклатура,
	   |	ВЫРАЗИТЬ(СУММА(ТоварыКОтгрузкеОбороты.КОтгрузкеРасход) / 12 КАК ЧИСЛО(15, 3)) КАК СрМесПродажи
	   |ПОМЕСТИТЬ ВТ_Продажи
	   |ИЗ
	   |	РегистрНакопления.ТоварыКОтгрузке.Обороты(
	   |			&НачПериод,
	   |			&КонПериод,
	   |			Регистратор,
	   |			Склад = &Склад
	   |				И Номенклатура = &Номенклатура
	   |				И (ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
	   |					ИЛИ ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг)) КАК ТоварыКОтгрузкеОбороты
	   |ГДЕ
	   |	ТоварыКОтгрузкеОбороты.Регистратор ССЫЛКА Документ.РасходныйОрдерНаТовары
	   |	И ТоварыКОтгрузкеОбороты.Регистратор.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыРасходныхОрдеров.Отгружен)
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	ТоварыКОтгрузкеОбороты.Номенклатура
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	СвободныеОстаткиОстатки.Номенклатура КАК Номенклатура,
	   |	СвободныеОстаткиОстатки.Характеристика КАК Характеристика,
	   |	СвободныеОстаткиОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	   |	СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток КАК ВРезервеСоСкладаОстаток,
	   |	СвободныеОстаткиОстатки.Склад КАК Склад
	   |ПОМЕСТИТЬ ВТ_Остатки
	   |ИЗ
	   |	РегистрНакопления.СвободныеОстатки.Остатки(
	   |			,
	   |			Склад = &Склад
	   |				И Номенклатура = &Номенклатура) КАК СвободныеОстаткиОстатки
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	КлючиАналитикиУчетаНоменклатуры.Ссылка КАК Ссылка
	   |ПОМЕСТИТЬ ВТ_АналитикиУчета
	   |ИЗ
	   |	Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	   |ГДЕ
	   |	КлючиАналитикиУчетаНоменклатуры.МестоХранения = &Склад
	   |	И КлючиАналитикиУчетаНоменклатуры.Номенклатура = &Номенклатура
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ВидыЗапасов.Ссылка КАК Ссылка
	   |ПОМЕСТИТЬ ВТ_ВидыЗапасов
	   |ИЗ
	   |	Справочник.ВидыЗапасов КАК ВидыЗапасов
	   |ГДЕ
	   |	ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	   |	СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ДоступныйОстаток
	   |ПОМЕСТИТЬ ВТ_ОстаткиНаХранении
	   |ИЗ
	   |	РегистрНакопления.ТоварыОрганизаций.Остатки(
	   |			&КонПериод,
	   |			АналитикаУчетаНоменклатуры В
	   |					(ВЫБРАТЬ
	   |						ВТ_АналитикиУчета.Ссылка КАК Ссылка
	   |					ИЗ
	   |						ВТ_АналитикиУчета КАК ВТ_АналитикиУчета)
	   |				И ВидЗапасов В
	   |					(ВЫБРАТЬ
	   |						ВТ_ВидыЗапасов.Ссылка КАК Ссылка
	   |					ИЗ
	   |						ВТ_ВидыЗапасов КАК ВТ_ВидыЗапасов)) КАК ТоварыОрганизацийОстатки
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	   |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК ВНаличииОстаток,
	   |	СУММА(ТоварыНаСкладахОстатки.КОтгрузкеОстаток) КАК КОтгрузкеОстаток
	   |ПОМЕСТИТЬ ВТ_ОстНаСкладах
	   |ИЗ
	   |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	   |			&КонПериод,
	   |			Номенклатура = &Номенклатура
	   |				И Склад = &Склад) КАК ТоварыНаСкладахОстатки
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	ТоварыНаСкладахОстатки.Номенклатура
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ВТ_Остатки.Номенклатура КАК Номенклатура,
	   |	СУММА(ВТ_Остатки.ВРезервеСоСкладаОстаток) КАК ВРезервеСоСкладаОстаток
	   |ПОМЕСТИТЬ ВТ_ОстаткиВРезервеБезХаракт
	   |ИЗ
	   |	ВТ_Остатки КАК ВТ_Остатки
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	ВТ_Остатки.Номенклатура
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ ПЕРВЫЕ 1
	   |	МАКСИМУМ(ЦеныНоменклатурыПоставщиковСрезПоследних.Период) КАК Период
	   |ПОМЕСТИТЬ ВТ_МаксПериод
	   |ИЗ
	   |	РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(
	   |			&КонПериод,
	   |			Номенклатура = &Номенклатура
	   |				И Партнер = &Партнер) КАК ЦеныНоменклатурыПоставщиковСрезПоследних
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ЦеныНоменклатурыПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	   |	ЦеныНоменклатурыПоставщиковСрезПоследних.Характеристика КАК Характеристика,
	   |	ЦеныНоменклатурыПоставщиковСрезПоследних.Цена КАК Цена
	   |ПОМЕСТИТЬ ВТ_Цены
	   |ИЗ
	   |	ВТ_МаксПериод КАК ВТ_МаксПериод
	   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(
	   |				&КонПериод,
	   |				Номенклатура = &Номенклатура
	   |					И Партнер = &Партнер) КАК ЦеныНоменклатурыПоставщиковСрезПоследних
	   |		ПО ВТ_МаксПериод.Период = ЦеныНоменклатурыПоставщиковСрезПоследних.Период
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ВТ_Остатки.Номенклатура КАК Номенклатура,
	   |	ВТ_Остатки.Характеристика КАК ХарактеристикаНоменклатуры,
	   |	ВТ_Продажи.СрМесПродажи КАК СреднемесячныеПродажи,
	   |	ВТ_Остатки.ВНаличииОстаток КАК ДоступныйОстаток,
	   |	ВТ_ОстаткиВРезервеБезХаракт.ВРезервеСоСкладаОстаток КАК КоличествоВРезерве,
	   |	ВТ_ОстНаСкладах.ВНаличииОстаток + ВТ_ОстНаСкладах.КОтгрузкеОстаток - ВТ_ОстаткиНаХранении.ДоступныйОстаток КАК ОстаткиНаОснСкладе,
	   |	ВТ_Цены.Цена КАК ПоследняяЦенаПрихода,
	   |	ВТ_Остатки.Склад КАК Склад
	   |ИЗ
	   |	ВТ_Остатки КАК ВТ_Остатки
	   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Продажи КАК ВТ_Продажи
	   |		ПО ВТ_Остатки.Номенклатура = ВТ_Продажи.Номенклатура
	   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНаХранении КАК ВТ_ОстаткиНаХранении
	   |		ПО ВТ_Остатки.Номенклатура = ВТ_ОстаткиНаХранении.Номенклатура
	   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстНаСкладах КАК ВТ_ОстНаСкладах
	   |		ПО ВТ_Остатки.Номенклатура = ВТ_ОстНаСкладах.Номенклатура
	   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиВРезервеБезХаракт КАК ВТ_ОстаткиВРезервеБезХаракт
	   |		ПО ВТ_Остатки.Номенклатура = ВТ_ОстаткиВРезервеБезХаракт.Номенклатура
	   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	   |		ПО ВТ_Остатки.Номенклатура = ВТ_Цены.Номенклатура
	   |			И ВТ_Остатки.Характеристика = ВТ_Цены.Характеристика"   ;
	
	Если ЭтоДосрочныйВыкуп Тогда
	 Запрос.Текст = СтрЗаменить(Запрос.Текст, "Номенклатура = &Номенклатура", "Номенклатура.ВидНоменклатуры В Иерархии (&ВидНоменклатуры)");
	КонецЕсли;    
		
	Возврат Запрос; 
	
КонецФункции // ()

&НаСервере
Процедура ЗаполнитьДляДосрочногоВыкупаНаСервере() 
		
	Запрос = ЗапросОстаткиНаХранении(Истина);	
	Запрос.УстановитьПараметр("ВидНоменклатуры", Объект.ДосрочныйВыкуп.Выгрузить(,"СводнаяНоменклатура"));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("КонПериод", Объект.Дата);
	Запрос.УстановитьПараметр("НачПериод", ДобавитьМесяц(Объект.Дата, -12));
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
	      Сообщить("Нет номенклатуры на хранении по указанным параметрам.");
	  Иначе	
		  ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		  
		  Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
			  НоваяСтрока=Объект.Товары.Добавить();
			  ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
		  КонецЦикла;
	  КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаЭлементовФормыДосрочныйВыкуп()

	ДоступностьЭлементовФормыДосрочныйВыкуп = Объект.ОснованиеКВыкупу=ДосрочныйВыкуп;
	Элементы.ГруппаДосрочныйВыкуп.Доступность = ДоступностьЭлементовФормыДосрочныйВыкуп;
	Элементы.ТоварыЗаполнитьДляДосрочногоВыкупа.Доступность = ДоступностьЭлементовФормыДосрочныйВыкуп;

КонецПроцедуры // ()

&НаСервереБезКонтекста
Функция ПроверкаОснованияКВыкупу(ДокументОснование, ОснованиеКВыкупу)

	Если ДокументОснование = Неопределено и ОснованиеКВыкупу = Перечисления.АГ_ОснованиеКВыкупу.ПодЗаказКлиента ИЛИ ОснованиеКВыкупу = Перечисления.АГ_ОснованиеКВыкупу.ПополнениеСклада Тогда
	    Возврат Ложь
	КонецЕсли; 
	Возврат Истина;

КонецФункции // ()

&НаСервере
Функция ПолучитьДанныеТабТовары(Номенклатура)

	ТабХарактеристик = ПолучитьОстаткиПоХарактеристикам(Номенклатура);
	
	Для каждого Стр Из ТабХарактеристик Цикл
	
		
	
	КонецЦикла; 
	Возврат ТабХарактеристик;

КонецФункции // ()

&НаСервере
Функция ПолучитьОстаткиПоХарактеристикам(Номенклатура)

	Запрос = ЗапросОстаткиНаХранении();
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И КлючиАналитикиУчетаНоменклатуры.Номенклатура.ВидНоменклатуры В ИЕРАРХИИ(&ВидНоменклатуры)", "И КлючиАналитикиУчетаНоменклатуры.Номенклатура = &Номенклатура");
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("КонПериод", Объект.Дата);
	Запрос.УстановитьПараметр("НачПериод", ДобавитьМесяц(Объект.Дата, -12));
	Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	
	ТабСтр = Новый ТаблицаЗначений;

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить("Нет номенклатуры на хранении по указанным параметрам.");
	Иначе	
		ТабСтр = РезультатЗапроса.Выгрузить();
		
	КонецЕсли;
	Возврат ТабСтр;

КонецФункции // ()


#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтатусДокументаПриИзменении(Элемент)
	НастройкаЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоВЗаказахПриИзменении(Элемент)
	ПолучитьИтогоКоличествоКВозврату();	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоБезЗаказовПриИзменении(Элемент)
	ПолучитьИтогоКоличествоКВозврату();	
	
	//<--Давиденко А.В.: УЗК0012 03.06.2019 13:24:17
	ЗаполнитьДопКолонки();
	//-->Давиденко А.В.: УЗК0012
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеКВыкупуПриИзменении(Элемент)
	
	Если Не ПроверкаОснованияКВыкупу(Объект.ДокументОснование, Объект.ОснованиеКВыкупу) Тогда
		Сообщить("Неправильно указан тип выкупа. " + Символы.ПС + 
			"Выкуп ""Под заказ клиента"" и ""Пополнение склада"" должны оформляться на основании документов ""Заказ клиента"" и ""Приемка товаров на хранение"" соответственно.");
		Объект.ОснованиеКВыкупу = Неопределено;
		Возврат;
	КонецЕсли; 
	
	НастройкаЭлементовФормыДосрочныйВыкуп();
	
	//<--Давиденко А.В.: УЗК0012 03.06.2019 13:24:17
	УстановитьВидимость()
	//-->Давиденко А.В.: УЗК0012
	
КонецПроцедуры

&НаКлиенте
Процедура ДосрочныйВыкупПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока и Не Объект.Склад.Пустая() Тогда
	    Элемент.ТекущиеДанные.Склад = Объект.Склад;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)

	Если Не ЗначениеЗаполнено(Объект.Партнер) Тогда
		Объект.Соглашение = ПредопределенноеЗначение("Справочник.СоглашенияСПоставщиками.ПустаяСсылка");
		
		Возврат;
	КонецЕсли;
	
	ПриИзмененииПартнераСервер();
	
КонецПроцедуры

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура ПриИзмененииПартнераСервер()

	ДокументЗаявка = РеквизитФормыВЗначение("Объект");
	ДокументЗаявка.ЗаполнитьУсловияЗаявки();
	ЗначениеВРеквизитФормы(ДокументЗаявка, "Объект");

КонецПроцедуры // ()

&НаСервере
Процедура ТоварыНоменклатураПриИзмененииНаСервере(Номенклатура)

	ТабТовары = Объект.Товары.Выгрузить();
	
	ПараметрыОтбора= новый Структура;
	ПараметрыОтбора.Вставить("Номенклатура", Номенклатура);
	МассивНоменклатуры = ТабТовары.НайтиСтроки(ПараметрыОтбора);
	
	ТЗ = ПолучитьДанныеТабТовары(Номенклатура);
	
	НачальныйИндекс = МассивНоменклатуры.Получить(0).НомерСтроки-1;
	Если ТЗ.Количество() > 0 Тогда
		Для каждого ЭлементНоменклатура Из МассивНоменклатуры Цикл
			ТабТовары.Удалить(ЭлементНоменклатура);
		КонецЦикла; 
		Индекс = НачальныйИндекс;
		Для каждого Строка Из ТЗ Цикл
		    НоваяСтрока = ТабТовары.Вставить(Индекс);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		    Индекс = Индекс+1;
		КонецЦикла; 
		
		Объект.Товары.Загрузить(ТабТовары);
	КонецЕсли; 
	
КонецПроцедуры // ()


&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	//<--Давиденко А.В.: УЗК0012 03.06.2019 13:24:17
	//Номенклатура = Элементы.Товары.ТекущиеДанные.Номенклатура;
	//ТоварыНоменклатураПриИзмененииНаСервере(Номенклатура);
	ТекСтрока = Элементы.Товары.ТекущаяСтрока;
	ЗаполнитьДопКолонкиПоСтрокеНаСервере(ТекСтрока);
	//-->Давиденко А.В.: УЗК0012
КонецПроцедуры

#КонецОбласти

#КонецОбласти

//АГРУПП+ Кулешов О.В. 25.06.2019
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Оповестить("ОбновитьФормуСпискаЗаявкаНаВыкупТоваровСХранения");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменитьСогласующегоДО_ДокументооборотБизнесПроцесс" Тогда
		Если Параметр.Свойство("ОсновнойПредмет") И Параметр.Свойство("ИмяРеквизита") И Объект.Ссылка = Параметр.ОсновнойПредмет Тогда
			ИзменитьСогласующегоДОНаСервере(Параметр);
			Если Параметр.Свойство("ЗакрыватьПриСтарте") Тогда
				ЭтаФорма.Закрыть();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСогласующегоДОНаСервере(СтруктураПараметров)
	
	Если СтруктураПараметров.Свойство("СогласующийДО") Тогда
		Изменен = Ложь;
		ЭтотОбъект.Прочитать();
		ДокументОбъект = РеквизитформыВЗначение("Объект");
		Если СтруктураПараметров.Свойство("СтатусНеСогласовано") И ДокументОбъект.Статус <> Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.Отклонен Тогда
			Изменен = Истина;
			ДокументОбъект.Статус = Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.Отклонен;
		ИначеЕсли СтруктураПараметров.Свойство("СтатусНаСогласовании") И ДокументОбъект.Статус <> Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.НаСогласовании Тогда
			Изменен = Истина;
			ДокументОбъект.Статус = Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.НаСогласовании;
		ИначеЕсли СтруктураПараметров.Свойство("СтатусСогласовано") И ДокументОбъект.Статус <> Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.Согласован Тогда
			Изменен = Истина;
			ДокументОбъект.Статус = Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.Согласован;
		КонецЕсли;
		Если ДокументОбъект[СтруктураПараметров.ИмяРеквизита] <> СтруктураПараметров.СогласующийДО Тогда
			Изменен = Истина;
			ДокументОбъект[СтруктураПараметров.ИмяРеквизита] = СтруктураПараметров.СогласующийДО;
		КонецЕсли;
		Если Изменен Тогда
			Попытка
				ДокументОбъект.ОбменДанными.Загрузка = Истина;
				Если ДокументОбъект.Проведен Тогда
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					ДокументОбъект.Записать();
				КонецЕсли;
				ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура АГ_ВыполнитьЗадачуПервая(Команда)

	ЭтаФорма.Закрыть();
	Оповестить("ДокументСогласован", АГ_ТекущаяСтрокаЗадачи);
	
КонецПроцедуры	

&НаКлиенте
Процедура АГ_ВыполнитьЗадачуВторая(Команда)
	
	ЭтаФорма.Закрыть();
	Оповестить("ДокументСогласованСЗамечаниями", АГ_ТекущаяСтрокаЗадачи);
	
КонецПроцедуры	

&НаКлиенте
Процедура АГ_ВыполнитьЗадачуТретья(Команда)
	
	ЭтаФорма.Закрыть();
	Оповестить("ДокументНеСогласован", АГ_ТекущаяСтрокаЗадачи);
	
КонецПроцедуры	

&НаКлиенте
Процедура АГ_ЗапуститьПроцессСогласованияВместо(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭтаФорма.Команды.ПодменюСоздатьНаОснованииОбычное_ИнтеграцияС1СДокументооборотСоздатьБизнесПроцесс, Объект);
КонецПроцедуры

//АГРУПП-

//<--Давиденко А.В.: УЗК0012 03.06.2019 13:24:17

&НаСервере
Процедура УстановитьВидимость()
	Элементы.Склад.Видимость = Ложь;
	Если Объект.ОснованиеКВыкупу = Перечисления.АГ_ОснованиеКВыкупу.ПодЗаказКлиента Тогда
		Элементы.Партнер.Видимость = Истина;
		Элементы.Контрагент.Видимость = Истина;
	Иначе
		Элементы.Партнер.Видимость = Ложь;
		Элементы.Контрагент.Видимость = Ложь;
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДопКолонкиПоСтрокеНаСервере(ТекСтрока)
	СтрТЗ = Объект.Товары.НайтиПоИдентификатору(ТекСтрока);
	ЗаполнитьДопКолонкиПоСтроке(СтрТЗ);
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДопКолонкиПоСтроке(СтрТЗ)
	СтрТЗ.ДоступныйОстаток = ПолучитьДоступныйОстаток(СтрТЗ.Номенклатура, СтрТЗ.ХарактеристикаНоменклатуры, СтрТЗ.Склад);
	СтрТЗ.ОстаткиНаОСНСкладе = ПолучитьОстаткиНаОСНСкладе(СтрТЗ.Номенклатура, СтрТЗ.ХарактеристикаНоменклатуры, СтрТЗ.Склад);
	СтрТЗ.КоличествоВРезерве = ПолучитьКоличествоВРезерве(СтрТЗ.Номенклатура, СтрТЗ.ХарактеристикаНоменклатуры, СтрТЗ.Склад);
	СтрТЗ.СреднемесячныеПродажи = ПолучитьСреднемесячныеПродажи(СтрТЗ.Номенклатура);
	СтрТЗ.ПоследняяЦенаПрихода = ПолучитьПоследнююЦенуПрихода(СтрТЗ.Номенклатура);
	СтрТЗ.СуммаПоПриходнойЦене = СтрТЗ.ПоследняяЦенаПрихода * СтрТЗ.КоличествоВЗаказах;
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДопКолонки()
	Для Каждого СтрТЗ Из Объект.Товары Цикл
		ЗаполнитьДопКолонкиПоСтроке(СтрТЗ);	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьДоступныйОстаток(Номенклатура, Характеристика, Склад)
	Остаток = 0;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	СвободныеОстаткиОстатки.ВНаличииОстаток КАК ВНаличииОстаток
		//|ИЗ
		//|	РегистрНакопления.СвободныеОстатки.Остатки(
		//|			,
		//|			Номенклатура = &Номенклатура
		//|				И Характеристика = &Характеристика
		//|				И Склад = &Склад) КАК СвободныеОстаткиОстатки";
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК АналитикаУчетаНоменклатурыНоменклатура,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК АналитикаУчетаНоменклатурыХарактеристика,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			,
		|			Организация = &Организация
		|				И ВидЗапасов.ТипЗапасов = &ТипЗапасов
		|				И ВидЗапасов.Контрагент = &Поставщик
		|				И АналитикаУчетаНоменклатуры.МестоХранения = &Склад
		|				И АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
		|				И АналитикаУчетаНоменклатуры.Характеристика = &Характеристика) КАК ТоварыОрганизацийОстатки";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Поставщик", Объект.Поставщик);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ТипЗапасов", Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Остаток = Выборка.КоличествоОстаток;
	КонецЦикла;
	
	Возврат Остаток;
		
КонецФункции	

&НаСервере
Функция ПолучитьОстаткиНаОСНСкладе(Номенклатура, Характеристика, Склад)
	
	Остаток = 0;
		
	////Запрос = Новый Запрос;
	////Запрос.Текст = 
	////	"ВЫБРАТЬ
	////	|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК КоличествоОстаток
	////	|ИЗ
	////	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	////	|			,
	////	|			АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
	////	|				И АналитикаУчетаНоменклатуры.МестоХранения.АГ_ОсновнойСклад = ИСТИНА
	////	|				И (ВидЗапасов.ТипЗапасов = &ТипЗапасов1
	////	|					ИЛИ ВидЗапасов.ТипЗапасов = &ТипЗапасов2)) КАК ТоварыОрганизацийОстатки";
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК АналитикаУчетаНоменклатурыНоменклатура,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК АналитикаУчетаНоменклатурыХарактеристика,
		|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			,
		|			Организация = &Организация
		|				И (ВидЗапасов.ТипЗапасов = &ТипЗапасов1
		|					ИЛИ ВидЗапасов.ТипЗапасов = &ТипЗапасов2)
		|				И ВидЗапасов.Контрагент = &Поставщик
		|				И АналитикаУчетаНоменклатуры.МестоХранения = &Склад
		|				И АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
		|				И АналитикаУчетаНоменклатуры.Характеристика = &Характеристика) КАК ТоварыОрганизацийОстатки";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Поставщик", Объект.Поставщик);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ТипЗапасов1", Перечисления.ТипыЗапасов.Товар);
	Запрос.УстановитьПараметр("ТипЗапасов2", Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Остаток = Выборка.КоличествоОстаток;
	КонецЕсли;
	
	Возврат Остаток;
КонецФункции	

&НаСервере
Функция ПолучитьКоличествоВРезерве(Номенклатура, Характеристика, Склад)
	Остаток = 0;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
		//|ИЗ
		//|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		//|			,
		//|			Номенклатура = &Номенклатура
		//|				И Склад = &Склад
		//|				И НЕ Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК ТоварыНаСкладахОстатки";
		
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АГ_РезервПоЗаказамИСериямОстатки.Номенклатура КАК Номенклатура,
		|	АГ_РезервПоЗаказамИСериямОстатки.Характеристика КАК Характеристика,
		|	АГ_РезервПоЗаказамИСериямОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.АГ_РезервПоЗаказамИСериям.Остатки(
		|			,
		|			Резерв = ИСТИНА
		|				И Организация = &Организация
		|				И Склад = &Склад
		|				И Поставщик = &Поставщик
		|				И Номенклатура = &Номенклатура
		|				И Характеристика = &Характеристика) КАК АГ_РезервПоЗаказамИСериямОстатки";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Поставщик", Объект.Поставщик);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Остаток = Выборка.КоличествоОстаток;
	КонецЕсли;
	
	Возврат Остаток;

КонецФункции	

&НаСервере
Функция ПолучитьСреднемесячныеПродажи(Номенклатура)
	СреднееКво = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыручкаИСебестоимостьПродажОбороты.КоличествоОборот КАК КоличествоОборот
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачДат, &КонДат, , АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура) КАК ВыручкаИСебестоимостьПродажОбороты";
	
	Запрос.УстановитьПараметр("НачДат", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-12));
	Запрос.УстановитьПараметр("КонДат", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СреднееКво = Окр(Выборка.КоличествоОборот / 12, 3);
	КонецЦикла;
	
	Возврат СреднееКво;
КонецФункции	

&НаСервере
Функция ПолучитьПоследнююЦенуПрихода(Номенклатура)
	Цена = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыПоставщиковСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(
		|			,
		|			Номенклатура = &Номенклатура
		|				И Партнер = &Партнер) КАК ЦеныНоменклатурыПоставщиковСрезПоследних";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Партнер", Объект.Поставщик.Партнер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Цена = Выборка.Цена;
	КонецЕсли;
	
	Возврат Цена;
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаполнитьДопКолонки();
	
	УправлениеСвойствамиКлиент.АвтоОбновлениеЗаголовкаФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДосрочныйВыкупТекущаяЦенаВыкупаПриИзменении(Элемент)
	ТекДанные = Элементы.ДосрочныйВыкуп.ТекущиеДанные;
	ТекДанные.ТекущаяСуммаЗатрат = ТекДанные.ТекущаяЦенаВыкупа * ТекДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура ДосрочныйВыкупКоличествоПриИзменении(Элемент)
	ТекДанные = Элементы.ДосрочныйВыкуп.ТекущиеДанные;
	ТекДанные.ТекущаяСуммаЗатрат = ТекДанные.ТекущаяЦенаВыкупа * ТекДанные.Количество;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДляДосрочногоВыкупаНаСервереН()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	втДосрочныйВыкуп.СводнаяНоменклатура КАК СводнаяНоменклатура,
		|	втДосрочныйВыкуп.Склад КАК Склад
		|ПОМЕСТИТЬ втДосрочныйВыкуп
		|ИЗ
		|	&тзДосрочныйВыкуп КАК втДосрочныйВыкуп
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК ХарактеристикаНоменклатуры,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
		|	СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ДоступныйОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			,
		|			Организация = &Организация
		|				И ВидЗапасов.ТипЗапасов = &ТипЗапасов
		|				И ВидЗапасов.Контрагент = &Поставщик
		|				И (АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры, АналитикаУчетаНоменклатуры.МестоХранения) В
		|					(ВЫБРАТЬ
		|						втДосрочныйВыкуп.СводнаяНоменклатура,
		|						втДосрочныйВыкуп.Склад КАК Склад
		|					ИЗ
		|						втДосрочныйВыкуп КАК втДосрочныйВыкуп)) КАК ТоварыОрганизацийОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.МестоХранения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Склад,
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	тзДосрочныйВыкуп = Объект.ДосрочныйВыкуп.Выгрузить();
	
	Запрос.УстановитьПараметр("тзДосрочныйВыкуп", тзДосрочныйВыкуп);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Поставщик", Объект.Поставщик);
	Запрос.УстановитьПараметр("ТипЗапасов", Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	                    
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовСтр = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
	КонецЦикла;
	
	ЗаполнитьДопКолонки();
КонецПроцедуры	

&НаКлиенте
Процедура ТоварыХарактеристикаНоменклатурыПриИзменении(Элемент)
	ТекСтрока = Элементы.Товары.ТекущаяСтрока;
	ЗаполнитьДопКолонкиПоСтрокеНаСервере(ТекСтрока);
КонецПроцедуры

//-->Давиденко А.В.: УЗК0012
