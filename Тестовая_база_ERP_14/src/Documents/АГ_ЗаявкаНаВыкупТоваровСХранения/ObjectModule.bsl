#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		ИнициализироватьДокумент(ДанныеЗаполнения);
	КонецЕсли;
	
	//<--Давиденко А.В.: УЗК0012 03.06.2019 13:24:17
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,"Номер, Дата, Проведен");
		ДокументОснование = ДанныеЗаполнения;
		ОснованиеКВыкупу = Перечисления.АГ_ОснованиеКВыкупу.ПодЗаказКлиента;
		
		Для каждого Строка Из ДанныеЗаполнения.Товары Цикл
			
			Если Строка.АГ_ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи Тогда
				НоваяСтрока=Товары.Добавить();
				НоваяСтрока.Номенклатура = Строка.Номенклатура;
				НоваяСтрока.ХарактеристикаНоменклатуры = Строка.Характеристика;
				НоваяСтрока.КоличествоВЗаказах = Строка.Количество;
				НоваяСтрока.Склад = Строка.Склад;
				НоваяСтрока.ИтогоКоличествоКВозврату = Строка.Количество;
			КонецЕсли; 
		КонецЦикла; 
		//-->Давиденко А.В.: УЗК0012
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриемкаТоваровНаХранение") Тогда
		
		//<--Давиденко А.В.: УЗК0012 03.06.2019 13:24:17
		ЗаполнитьПополнениемСклада(ДанныеЗаполнения);
		//-->Давиденко А.В.: УЗК0012
		
		//ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,"Номер, Дата, Проведен");
		//ДокументОснование = ДанныеЗаполнения;
		//ОснованиеКВыкупу = Перечисления.АГ_ОснованиеКВыкупу.ПополнениеСклада;
		//Поставщик = ДанныеЗаполнения.Контрагент;
		//
		//ОстаткиТоваров = ПолучитьОстаткоиТоваровНаХранении(ДанныеЗаполнения.Товары.Выгрузить());
		//
		//ВыборкаНоменклатура = ОстаткиТоваров.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//
		//Пока ВыборкаНоменклатура.Следующий() Цикл
		//	
		//	ВыборкаХарактеристики = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//	Пока ВыборкаХарактеристики.Следующий() Цикл
		//		
		//		НоваяСтрока=Товары.Добавить();
		//		НоваяСтрока.Номенклатура = ВыборкаХарактеристики.Номенклатура;
		//		НоваяСтрока.ХарактеристикаНоменклатуры = ВыборкаХарактеристики.Характеристика;
		//		НоваяСтрока.КоличествоБезЗаказов = ВыборкаХарактеристики.Количество;
		//		НоваяСтрока.ИтогоКоличествоКВозврату = ВыборкаХарактеристики.Количество;
		//		
		//		ВыборкаСерии = ВыборкаХарактеристики.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//		Пока ВыборкаСерии.Следующий() Цикл
		//			
		//			НоваяСтрока=Серии.Добавить();
		//			НоваяСтрока.Номенклатура = ВыборкаСерии.Номенклатура;
		//			НоваяСтрока.ХарактеристикаНоменклатуры = ВыборкаСерии.Характеристика;
		//			НоваяСтрока.Серия = ВыборкаСерии.Серия;
		//			НоваяСтрока.Количество = ВыборкаСерии.Количество;
		//			
		//		КонецЦикла; 
		//		
		//	КонецЦикла; 
		//	
		//КонецЦикла; 
		
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

// Инициализирует документ
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	//Если ЗапретВыкупаТоваровНаХранении() Тогда
	//	Статус=Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.ВПодготовке;
	//Иначе	
	//	Статус=Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.Согласован;
	//КонецЕсли; 
	
	//Поскольку согласование идет через ДО
	Статус = Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.ВПодготовке;
	
	Менеджер=ПараметрыСеанса.ТекущийПользователь;
	
КонецПроцедуры

Функция ЗапретВыкупаТоваровНаХранении()
	
	ДнейЗапрета = Константы.АГ_КоличествоДнейКонцаМесяцаЗапретаВыкупаТоваровНаХранении.Получить();
	ДатаЗапрета = КонецМесяца(ТекущаяДата())-ДнейЗапрета*3600*24;
	Если ДатаЗапрета > ТекущаяДата() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли; 
	
КонецФункции // ()

#КонецОбласти

Функция ПолучитьОстаткоиТоваровНаХранении(ТабТовары)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.Характеристика КАК Характеристика,
	|	ТабТовары.Серия КАК Серия
	|ПОМЕСТИТЬ ТоварыКВыкупу
	|ИЗ
	|	&ТабТовары КАК ТабТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПринятыеОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыПринятыеОстатки.Характеристика КАК Характеристика,
	|	ТоварыПринятыеОстатки.Серия КАК Серия,
	|	ТоварыПринятыеОстатки.ПолученоОстаток КАК Количество
	|ПОМЕСТИТЬ ОстаткиТоварыНаХранении
	|ИЗ
	|	РегистрНакопления.ТоварыПринятые.Остатки(
	|			,
	|			(Номенклатура, Характеристика, Серия) В
	|				(ВЫБРАТЬ
	|					ТоварыКВыкупу.Номенклатура КАК Номенклатура,
	|					ТоварыКВыкупу.Характеристика КАК Характеристика,
	|					ТоварыКВыкупу.Серия КАК Серия
	|				ИЗ
	|					ТоварыКВыкупу КАК ТоварыКВыкупу)) КАК ТоварыПринятыеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК АналитикаУчетаНоменклатурыНоменклатура,
	|	РезервыТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК АналитикаУчетаНоменклатурыХарактеристика,
	|	РезервыТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры.Серия КАК АналитикаУчетаНоменклатурыСерия
	|ПОМЕСТИТЬ ТоварыВРезерве
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|			,
	|			(АналитикаУчетаНоменклатуры.Номенклатура, АналитикаУчетаНоменклатуры.Характеристика, АналитикаУчетаНоменклатуры.Серия) В
	|				(ВЫБРАТЬ
	|					ТоварыКВыкупу.Номенклатура КАК Номенклатура,
	|					ТоварыКВыкупу.Характеристика КАК Характеристика,
	|					ТоварыКВыкупу.Серия КАК Серия
	|				ИЗ
	|					ТоварыКВыкупу КАК ТоварыКВыкупу)) КАК РезервыТоваровОрганизацийОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаХранении.Номенклатура КАК Номенклатура,
	|	ТоварыНаХранении.Характеристика КАК Характеристика,
	|	ТоварыНаХранении.Серия КАК Серия,
	|	ТоварыНаХранении.Количество КАК Количество
	|ИЗ
	|	ОстаткиТоварыНаХранении КАК ТоварыНаХранении
	|ГДЕ
	|	НЕ (ТоварыНаХранении.Номенклатура, ТоварыНаХранении.Характеристика, ТоварыНаХранении.Серия) В
	|				(ВЫБРАТЬ
	|					ТоварыВРезерве.АналитикаУчетаНоменклатурыНоменклатура КАК АналитикаУчетаНоменклатурыНоменклатура,
	|					ТоварыВРезерве.АналитикаУчетаНоменклатурыХарактеристика КАК АналитикаУчетаНоменклатурыХарактеристика,
	|					ТоварыВРезерве.АналитикаУчетаНоменклатурыСерия КАК АналитикаУчетаНоменклатурыСерия
	|				ИЗ
	|					ТоварыВРезерве КАК ТоварыВРезерве)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия";
	
	Запрос.УстановитьПараметр("ТабТовары", ТабТовары);
	
	Возврат Запрос.Выполнить();
	
КонецФункции // ()

Функция ПолучитьПомещениеХранения(ТабПомещения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабПомещения.АГ_Помещения КАК Помещения,
	|	ТабПомещения.АГ_Помещения.АГ_ДляХранения КАК АГ_ПомещенияАГ_ДляХранения
	|ПОМЕСТИТЬ ВТ_Помещения
	|ИЗ
	|	&ТабПомещения КАК ТабПомещения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Помещения.Помещения КАК Помещения
	|ИЗ
	|	ВТ_Помещения КАК ВТ_Помещения
	|ГДЕ
	|	ВТ_Помещения.АГ_ПомещенияАГ_ДляХранения
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Помещения.Помещения";
	
	Запрос.УстановитьПараметр("ТабПомещения",ТабПомещения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() = 1 Тогда
		Возврат ВыборкаДетальныеЗаписи.Следующий().Помещения;
	ИначеЕсли ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Сообщить("Количество помещений в заказе клиента более 1, необходимо самостоятельно указать помещение.");
	Возврат Неопределено;
	
КонецФункции // ()

#КонецОбласти

#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьУсловияЗаявки() Экспорт
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	
КонецПроцедуры

//<--Давиденко А.В.: УЗК0012 03.06.2019 13:24:17

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Статус = Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.Согласован Тогда
		СформироватьДвижения();
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвижения()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.Ссылка.Дата КАК Период,
	|	АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.Ссылка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.Ссылка.ДокументОснование ССЫЛКА Документ.ЗаказКлиента
	|			ТОГДА АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.Ссылка.ДокументОснование
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаказКлиента,
	|	АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.Номенклатура КАК Номенклатура,
	|	АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.ИтогоКоличествоКВозврату КАК Количество,
	|	АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.Склад КАК Склад,
	|	АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.Ссылка КАК ЗаявкаНаВыкупТоваровСХранения,
	|	АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ИЗ
	|	Документ.АГ_ЗаявкаНаВыкупТоваровСХранения.Товары КАК АГ_ЗаявкаНаВыкупТоваровСХраненияТовары
	|ГДЕ
	|	АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.Ссылка = &Ссылка
	|	И НЕ АГ_ЗаявкаНаВыкупТоваровСХраненияТовары.ИтогоКоличествоКВозврату = 0";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ЭтотОбъект.Движения.АГ_ТоварыКВыкупу.Записывать = Истина;
	Таблица = Запрос.Выполнить().Выгрузить();
	ЭтотОбъект.Движения.АГ_ТоварыКВыкупу.Загрузить(Таблица);
	ЭтотОбъект.Движения.Записать();
	//ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ЭтотОбъект.Движения.АГ_ТоварыКВыкупу.ДополнительныеСвойства);
	
КонецПроцедуры	

Процедура ЗаполнитьПополнениемСклада(ДанныеЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,"Номер, Дата, Проведен");
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	ОснованиеКВыкупу = Перечисления.АГ_ОснованиеКВыкупу.ПополнениеСклада;
	Поставщик = ДанныеЗаполнения.Контрагент;
	ДоговорНаХранение = ДанныеЗаполнения.Договор;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК Остаток,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Договор КАК АналитикаУчетаНоменклатурыДоговор
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(
		|			,
		|			АналитикаУчетаНоменклатуры.МестоХранения = &Склад
		|				И Организация = &Организация
		|				И ВидЗапасов.ТипЗапасов = &ТипЗапасов
		|				И ВидЗапасов.Контрагент = &Контрагент
		|				И АналитикаУчетаНоменклатуры.Серия В (&Серии)) КАК ТоварыОрганизацийОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика,
		|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Договор
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	Характеристика";
	
	Запрос.УстановитьПараметр("Контрагент", ДанныеЗаполнения.Контрагент);
	Запрос.УстановитьПараметр("Организация", ДанныеЗаполнения.Организация);
	Запрос.УстановитьПараметр("Серии", ДанныеЗаполнения.Товары.ВыгрузитьКолонку("Серия"));
	Запрос.УстановитьПараметр("Склад", ДанныеЗаполнения.Склад);
	Запрос.УстановитьПараметр("ТипЗапасов", Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока=Товары.Добавить();
		НоваяСтрока.Номенклатура = Выборка.Номенклатура;
		НоваяСтрока.ХарактеристикаНоменклатуры = Выборка.Характеристика;
		НоваяСтрока.КоличествоБезЗаказов = Выборка.Остаток;
		НоваяСтрока.ИтогоКоличествоКВозврату = Выборка.Остаток;
		НоваяСтрока.Склад = ДанныеЗаполнения.Склад;
	КонецЦикла;
	
КонецПроцедуры	
//-->Давиденко А.В.: УЗК0012


#КонецОбласти
