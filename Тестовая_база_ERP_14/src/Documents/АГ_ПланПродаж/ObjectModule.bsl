#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#Область ПрограммныйИнтерфейс

// Заполняет табличную часть "Партнеры" согласно значениям реквизитов документа и параметрам процедуры
//
// Параметры:
//  Отрасль - СправочникСсылка.CRM_Отрасли - фильтр клиентов по отрасли (ПустаяСсылка - все отрасли)
//
Процедура ЗаполнитьПартнеров(Отрасль) Экспорт
				
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Отрасль", Отрасль);
	Запрос.УстановитьПараметр("Ответственный", Ответственный);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Партнеры.Ссылка КАК Партнер,
	|	Партнеры.АГ_Статус КАК Статус,
	|	ЛОЖЬ КАК ДобавленВручную
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	(&Отрасль = ЗНАЧЕНИЕ(Справочник.CRM_Отрасли.ПустаяСсылка)
	|			ИЛИ Партнеры.CRM_ОсновнаяОтрасль = &Отрасль)
	|	И Партнеры.Клиент
	|	И Партнеры.ОсновнойМенеджер = &Ответственный
	//<--АГ:[PLAN_0001_1][21.04.2019 13:07:51][Фирсанов О.И.]
	//|	И Партнеры.БизнесРегион = ВЫРАЗИТЬ(&Подразделение КАК Справочник.СтруктураПредприятия).АГ_БизнесРегионМЦ
	//-->АГ:[ PLAN_0001_1 ]
	|	И НЕ Партнеры.ПометкаУдаления
	|	И НЕ Партнеры.АГ_Статус В (ЗНАЧЕНИЕ(Перечисление.АГ_СтатусыПартнеров.ЗакрытыйКлиент), ЗНАЧЕНИЕ(Перечисление.АГ_СтатусыПартнеров.НулевойКлиент), ЗНАЧЕНИЕ(Перечисление.АГ_СтатусыПартнеров.ПрочиеОтношения))";
	
	Партнеры.Загрузить(Запрос.Выполнить().Выгрузить());
		
КонецПроцедуры

// Заполняет табличную часть "Товары"
//
// Параметры:
//  Партнер - СправочникСсылка.Партнеры - заполнить товары по одному партнеру или по всем
//
Процедура ЗаполнитьТовары(Партнер = Неопределено) Экспорт
	
	Если Партнер = Неопределено Тогда
		МассивПартнеров = Партнеры.ВыгрузитьКолонку("Партнер");
	Иначе
		МассивПартнеров = Новый Массив;
		МассивПартнеров.Добавить(Партнер);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", Период);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	Запрос.УстановитьПараметр("Партнеры", МассивПартнеров);
	Запрос.УстановитьПараметр("ВалютаДокумента", ВалютаДокумента);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Партнеры.Ссылка КАК Партнер,
	|	ТоварныеКатегории.Номенклатура КАК Номенклатура,
	|	ТоварныеКатегории.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	ТоварныеКатегории.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ВсеТоварныеКатегории
	|ИЗ
	|	(ВЫБРАТЬ
	|		Партнеры.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.Партнеры КАК Партнеры
	|	ГДЕ
	|		Партнеры.Ссылка В(&Партнеры)) КАК Партнеры,
	|	(ВЫБРАТЬ
	|		Номенклатуры.Ссылка КАК Номенклатура,
	|		Номенклатуры.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|		Номенклатуры.ВидНоменклатуры КАК ВидНоменклатуры
	|	ИЗ
	|		Справочник.Номенклатура КАК Номенклатуры
	|	ГДЕ
	|		НЕ Номенклатуры.ЭтоГруппа
	//<--АГ:[PLAN_0001_1][03.05.2019 16:07:51][Фирсанов О.И.]
	|		И Номенклатуры.ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
	//-->АГ:[ PLAN_0001_1 ]
	|		И НЕ Номенклатуры.ПометкаУдаления) КАК ТоварныеКатегории
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ВыручкаИСебестоимостьПродажОбороты.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВыручкаИСебестоимостьПродажОбороты.КоличествоОборот КАК КоличествоОтгружено,
	|	ВЫБОР
	|		КОГДА ВыручкаИСебестоимостьПродажОбороты.КоличествоОборот = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВыручкаИСебестоимостьПродажОбороты.СуммаВыручкиОборот / ВыручкаИСебестоимостьПродажОбороты.КоличествоОборот
	|	КОНЕЦ КАК Цена
	|ПОМЕСТИТЬ ПродажиПоКлючамАналитик
	|ИЗ
	//<--АГ:[PLAN_0001_1][22.04.2019 19:07:51][Фирсанов О.И.]
	//|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(ДОБАВИТЬКДАТЕ(&НачалоПериода, МЕСЯЦ, -1), ДОБАВИТЬКДАТЕ(&КонецПериода, МЕСЯЦ, -1), , ) КАК ВыручкаИСебестоимостьПродажОбороты
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(ДОБАВИТЬКДАТЕ(&НачалоПериода, МЕСЯЦ, -1), ДОБАВИТЬКДАТЕ(&КонецПериода, МЕСЯЦ, -1), ,ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.РеализацияТоваровУслуг).Менеджер=&Ответственный) КАК ВыручкаИСебестоимостьПродажОбороты
	//-->АГ:[ PLAN_0001_1 ]
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикиУчетаПоПартнерам.Партнер КАК Партнер,
	|	АналитикиУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	СУММА(ПродажиПоКлючамАналитик.КоличествоОтгружено) КАК КоличествоОтгружено,
	|	СРЕДНЕЕ(ПродажиПоКлючамАналитик.Цена) КАК Цена
	|ПОМЕСТИТЬ Продажи
	|ИЗ
	|	ПродажиПоКлючамАналитик КАК ПродажиПоКлючамАналитик
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикиУчетаПоПартнерам
	|		ПО ПродажиПоКлючамАналитик.АналитикаУчетаПоПартнерам = АналитикиУчетаПоПартнерам.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиУчетаНоменклатуры
	|		ПО ПродажиПоКлючамАналитик.АналитикаУчетаНоменклатуры = АналитикиУчетаНоменклатуры.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикиУчетаПоПартнерам.Партнер,
	|	АналитикиУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Партнер КАК Партнер,
	|	ВложенныйЗапрос.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	ЕСТЬNULL(Продажи.КоличествоОтгружено, 0) КАК КоличествоОтгружено,
	|	ВЫБОР ЕСТЬNULL(Продажи.Цена, 0)
	|		КОГДА 0
	|			ТОГДА ВложенныйЗапрос.Цена
	|		ИНАЧЕ Продажи.Цена
	|	КОНЕЦ КАК Цена,
	|	&ВалютаДокумента КАК Валюта,
	|	ВложенныйЗапрос.ЗаказаноНаСклад КАК ЗаказаноНаСклад,
	|	ВложенныйЗапрос.ЗаказаноТранзитом КАК ЗаказаноТранзитом
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВсеТоварныеКатегории.Партнер КАК Партнер,
	|		ВсеТоварныеКатегории.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|		СРЕДНЕЕ(ЕСТЬNULL(АГ_ЦеныНоменклатурныхГруппСрезПоследних.Цена, 0)) КАК Цена,
	|		СУММА(ВЫБОР
	|				КОГДА ЗаказыКлиентовОстатки.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.АГ_Транзитный)
	|					ТОГДА ЕСТЬNULL(ЗаказыКлиентовОстатки.ЗаказаноОстаток, 0)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЗаказаноНаСклад,
	|		СУММА(ВЫБОР
	|				КОГДА ЗаказыКлиентовОстатки.Склад = ЗНАЧЕНИЕ(Справочник.Склады.АГ_Транзитный)
	|					ТОГДА ЗаказыКлиентовОстатки.ЗаказаноОстаток
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ЗаказаноТранзитом
	|	ИЗ
	|		ВсеТоварныеКатегории КАК ВсеТоварныеКатегории
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов.Остатки(
	|					&КонецПериода,
	|					ЗаказКлиента ССЫЛКА Документ.ЗаказКлиента
	|						И (ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента).Партнер, Номенклатура) В
	|							(ВЫБРАТЬ
	|								ВсеТоварныеКатегории.Партнер КАК Партнер,
	|								ВсеТоварныеКатегории.Номенклатура КАК Номенклатура
	|							ИЗ
	//<--АГ:[PLAN_0001_1][22.04.2019 19:07:51][Фирсанов О.И.]
	//|								ВсеТоварныеКатегории КАК ВсеТоварныеКатегории)) КАК ЗаказыКлиентовОстатки
	|								ВсеТоварныеКатегории КАК ВсеТоварныеКатегории)
	|	                    И (ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента).Менеджер = &Ответственный)
	|					) КАК ЗаказыКлиентовОстатки
	//-->АГ:[ PLAN_0001_1 ]
	|			ПО (ВсеТоварныеКатегории.Партнер = ВЫРАЗИТЬ(ЗаказыКлиентовОстатки.ЗаказКлиента КАК Документ.ЗаказКлиента).Партнер)
	|				И ВсеТоварныеКатегории.Номенклатура = ЗаказыКлиентовОстатки.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АГ_ЦеныНоменклатурныхГрупп.СрезПоследних(
	|					,
	|					(Металлоцентр, НоменклатурнаяГруппа, Валюта) В
	|						(ВЫБРАТЬ
	|							&Подразделение КАК Подразделение,
	|							ВсеТоварныеКатегории.ВидНоменклатуры КАК ВидНоменклатуры,
	|							&ВалютаДокумента КАК Валюта
	|						ИЗ
	|							ВсеТоварныеКатегории КАК ВсеТоварныеКатегории)) КАК АГ_ЦеныНоменклатурныхГруппСрезПоследних
	|			ПО ВсеТоварныеКатегории.ВидНоменклатуры = АГ_ЦеныНоменклатурныхГруппСрезПоследних.НоменклатурнаяГруппа
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВсеТоварныеКатегории.Партнер,
	|		ВсеТоварныеКатегории.ТоварнаяКатегория) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Продажи КАК Продажи
	|		ПО ВложенныйЗапрос.Партнер = Продажи.Партнер
	|			И ВложенныйЗапрос.ТоварнаяКатегория = Продажи.ТоварнаяКатегория";
	
	//<--АГ:[PLAN_0001_1][22.04.2019 19:07:51][Фирсанов О.И.]
	Запрос.УстановитьПараметр("Ответственный",Ответственный);
	//-->АГ:[ PLAN_0001_1 ]
	
	Результат = Запрос.Выполнить();
	Если Партнер = Неопределено Тогда
		Товары.Загрузить(Результат.Выгрузить());
	Иначе
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Товары.Добавить(), Выборка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Период = ДобавитьМесяц(НачалоМесяца(ТекущаяДата()), 1);
	Ответственный = Пользователи.ТекущийПользователь();
	Подразделение = Ответственный.Подразделение;
	
	ЗаполнитьПартнеров(ПредопределенноеЗначение("Справочник.CRM_Отрасли.ПустаяСсылка"));
	
	ЗаполнитьТовары();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого Стр Из Товары Цикл
		
		Если Стр.Количество <> 0 И Стр.Цена = 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'Поле ""Цена за единицу"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Стр.НомерСтроки, "Цена"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Стр.КоличествоСоСклада < Стр.ЗаказаноНаСклад Тогда
			
			ТекстОшибки = НСтр("ru = 'Поле ""Склад: План продаж (кроме транзитный), тн"" не может быть меньше ""Заказано на склад под покупателя, тн""'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Стр.НомерСтроки, "КоличествоСоСклада"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Стр.КоличествоСТранзитногоСклада < Стр.ЗаказаноТранзитом Тогда
			
			ТекстОшибки = НСтр("ru = 'Поле ""Транзит: План продаж, тн"" не может быть меньше ""Заказано транзитом под покупателя, тн""'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Стр.НомерСтроки, "КоличествоСТранзитногоСклада"),
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.АГ_ПланПродаж.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
		
	РегистрыНакопления.ОборотыБюджетов.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);

	Планирование.ОтразитьПланыОплатКлиентов(ДополнительныеСвойства, Движения, Отказ);
	
	Планирование.ОтразитьПланПродажПоКатегориям(ДополнительныеСвойства, Движения, Отказ);

	//<--АГ:[PLAN_0001_1][03.05.2019 17:07:51][Фирсанов О.И.]
	АГ_ОтразитьДвиженияПоТаблицеАГ_ПланыПродажПоКлиентамИКатегориям(ДополнительныеСвойства, Движения, Отказ);
	АГ_ОтразитьДвиженияПоТаблицеТаблицаАГ_ПланыОплатКлиентовПоДаннымМенеджера(ДополнительныеСвойства, Движения, Отказ);
	//-->АГ:[ PLAN_0001_1 ]

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//<--АГ:[PLAN_0001_1][03.05.2019 17:07:51][Фирсанов О.И.]
Процедура АГ_ОтразитьДвиженияПоТаблицеАГ_ПланыПродажПоКлиентамИКатегориям(ДополнительныеСвойства, Движения, Отказ)

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаАГ_ПланыПродажПоКлиентамИКатегориям;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.АГ_ПланыПродажПоКлиентамИКатегориям.Записывать = Истина;
	Движения.АГ_ПланыПродажПоКлиентамИКатегориям.Загрузить(Таблица);

КонецПроцедуры

Процедура АГ_ОтразитьДвиженияПоТаблицеТаблицаАГ_ПланыОплатКлиентовПоДаннымМенеджера(ДополнительныеСвойства, Движения, Отказ)

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаАГ_ПланыОплатКлиентовПоДаннымМенеджера;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.АГ_ПланыОплатКлиентовПоДаннымМенеджера.Записывать = Истина;
	Движения.АГ_ПланыОплатКлиентовПоДаннымМенеджера.Загрузить(Таблица);

КонецПроцедуры

//-->АГ:[ PLAN_0001_1 ]

#КонецОбласти	


#КонецЕсли
