#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, Месяц",
		"Объект.Организация", "Объект.Ответственный", "Объект.ПериодРегистрации");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Если Не ЗначениеЗаполнено(Объект.ПериодРегистрации) Тогда
			Объект.ПериодРегистрации = ТекущаяДатаСеанса();
		КонецЕсли;
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_РаспределениеОсновногоЗаработка", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	РеквизитыВДанные(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ДанныеВРеквизиты();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	РеквизитыВДанные(ТекущийОбъект);
	
	Если НЕ ТекущийОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Объект"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	ЗаполнитьПрименяетсяЕНВД();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцНачисленияСтрокой", Модифицированность);
	ПериодРегистрацииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ПериодРегистрации", "МесяцНачисленияСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	ПериодРегистрацииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцНачисленияСтрокой", Направление, Модифицированность);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцНачисленияПриИзменении", 0.3, Истина)
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияМесяцНачисленияПриИзменении()

	ПериодРегистрацииПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПериодРегистрацииПриИзмененииНаСервере()
	УстановитьФункциональныеОпцииФормы();
	ЗаполнитьПрименяетсяЕНВД();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СотрудникиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Сотрудники.ТекущиеДанные;
	РедактироватьСтроку(ТекущиеДанные, ВыбраннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	Модифицированность = Истина;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Организация не заполнена",, "Организация", "Объект");
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Объект.Сотрудники.Добавить();
	
	Если Копирование Тогда
		
		ТекущиеДанные = Элементы.Сотрудники.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			НоваяСтрока.РезультатРаспределения = ТекущиеДанные.РезультатРаспределения;
		КонецЕсли;
	
	КонецЕсли; 
	
	РедактироватьСтроку(НоваяСтрока, НоваяСтрока.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаПодбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьСотрудников(Команда)
	
	ОчиститьСообщения();
	ЗаполнитьСотрудниковНаСервере(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСотрудников(Команда)
	
	Объект.Сотрудники.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСотрудников(Команда)
	
	ПараметрыОткрытия = Неопределено;
			
	КадровыйУчетКлиент.ВыбратьСотрудниковРаботающихВПериодеПоПараметрамОткрытияФормыСписка(
		Элементы.Сотрудники,
		Объект.Организация, 
		Объект.Подразделение,
		Объект.ПериодРегистрации, 
		КонецМесяца(Объект.ПериодРегистрации),
		Истина, 
		АдресСпискаПодобранныхСотрудников(),
		ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРаспределение(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗаполнениеРаспределения", Истина);
	ПараметрыОткрытия.Вставить("Организация", Объект.Организация);
	ПараметрыОткрытия.Вставить("ПериодРегистрации", Объект.ПериодРегистрации);
	ПараметрыОткрытия.Вставить("СуммарнаяДоляСтоПроцентов", Объект.СуммарнаяДоляСтоПроцентов);
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьРаспределениеЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Документ.РаспределениеОсновногоЗаработка.Форма.ФормаСтрокиРаспределения",
				ПараметрыОткрытия, ЭтаФорма, Истина, , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "МесяцНачисленияСтрокой");
	УстановитьФункциональныеОпцииФормы();
	ИспользоватьСтатьиФинансирования = ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный");
	ЗаполнитьПрименяетсяЕНВД();
	
	ДанныеВРеквизиты();
	
	// заполним предупреждения 
	ЗарплатаКадры.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтаФорма);
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
// Функция возвращает описание таблиц формы подключенных к механизму ключевых реквизитов формы.
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить("Объект.Сотрудники");
	Массив.Добавить("Объект.РаспределениеЗаработка");
	Массив.Добавить("Объект.ФизическиеЛица");
	
	Возврат Массив;
	
КонецФункции

&НаСервере
// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация", Нстр("ru = 'организации';
																						|en = 'companies'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Подразделение", Нстр("ru = 'подразделения';
																						|en = 'departments'")));
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Процедура ДанныеВРеквизиты()

	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеРаспределения   = Объект.РаспределениеЗаработка.Выгрузить();
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
		ОтражениеЗарплатыВБухучетеРасширенный.ДополнитьТаблицуРаспределенияКодомСтатьиФинансирования(ДанныеРаспределения);
	КонецЕсли;
	
	ОтборСтрок = Новый Структура("ИдентификаторСтрокиСотрудника");
	
	Для каждого СтрокаТЧ Из Объект.Сотрудники Цикл
		ОтборСтрок.ИдентификаторСтрокиСотрудника = СтрокаТЧ.ИдентификаторСтрокиСотрудника;
		ТаблицаРаспределения = ДанныеРаспределения.Скопировать(ОтборСтрок);
		СтруктураРаспределения = ЗарплатаКадрыРасширенный.ТаблицаЗначенийВСтруктуру(ТаблицаРаспределения);
		СтрокаТЧ.РезультатРаспределения = СтруктураРаспределения;
		СтрокаТЧ.ПредставлениеРаспределения = ПредставлениеРаспределенияСтроки(СтруктураРаспределения, ИспользоватьСтатьиФинансирования, ПрименяетсяЕНВД);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура РеквизитыВДанные(ТекущийОбъект)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекущийОбъект.РаспределениеЗаработка.Очистить();
	
	ИдентификаторСтрокиСотрудника = 1;
	Для каждого СтрокаТЧ Из Объект.Сотрудники Цикл
		
		СтрокаТЧ.ИдентификаторСтрокиСотрудника = ИдентификаторСтрокиСотрудника;
		ТекущийОбъект.Сотрудники[Объект.Сотрудники.Индекс(СтрокаТЧ)].ИдентификаторСтрокиСотрудника = ИдентификаторСтрокиСотрудника;
		
		РезультатРаспределения = СтрокаТЧ.РезультатРаспределения;
		Если РезультатРаспределения <> Неопределено Тогда
			Для Каждого СтрокаРаспределения Из РезультатРаспределения Цикл
				НоваяСтрока = ТекущийОбъект.РаспределениеЗаработка.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспределения);
				НоваяСтрока.ИдентификаторСтрокиСотрудника = ИдентификаторСтрокиСотрудника;
			КонецЦикла;
		КонецЕсли;
		
		ИдентификаторСтрокиСотрудника = ИдентификаторСтрокиСотрудника + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, НачалоДня(Объект.ПериодРегистрации));
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСтроку(ДанныеСтроки, ВыбраннаяСтрока)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Организация", Объект.Организация);
	ПараметрыОткрытия.Вставить("ПериодРегистрации", Объект.ПериодРегистрации);
	ПараметрыОткрытия.Вставить("СуммарнаяДоляСтоПроцентов", Объект.СуммарнаяДоляСтоПроцентов);
	ПараметрыОткрытия.Вставить("РаспределениеЗаработка", ДанныеСтроки.РезультатРаспределения);
	ПараметрыОткрытия.Вставить("АдресСпискаПодобранныхСотрудников", АдресСпискаПодобранныхСотрудников());
	ПараметрыОткрытия.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
	ПараметрыОткрытия.Вставить("Сотрудник", ДанныеСтроки.Сотрудник);
	
	ДополнительныеПараметры = Новый Структура("ИдентификаторСтроки", ВыбраннаяСтрока);
	Оповещение = Новый ОписаниеОповещения("РедактироватьСтрокуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Документ.РаспределениеОсновногоЗаработка.Форма.ФормаСтрокиРаспределения",
				ПараметрыОткрытия, ЭтаФорма, Истина, , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция АдресСпискаПодобранныхСотрудников()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.Сотрудники.Выгрузить(,"Сотрудник").ВыгрузитьКолонку("Сотрудник"), УникальныйИдентификатор);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПредставлениеРаспределенияСтроки(РезультатРаспределения, ОбрабатыватьСтатьюФинансирования = Ложь, ОбрабатыватьЕНВД = Ложь)
	
	Если РезультатРаспределения = Неопределено Или РезультатРаспределения.Количество() = 0 Тогда
		Возврат НСтр("ru = 'Не задано';
					|en = 'Not set'");
	КонецЕсли;
	
	ТекстРасшифровки = "";
	
	Для каждого СтрокаРаспределения Из РезультатРаспределения Цикл
		
		ПредставлениеСтроки = "";
		
		Если ОбрабатыватьСтатьюФинансирования Тогда
			КодСтатьиФинансирования = СтрокаРаспределения.КодСтатьиФинансирования;
			Если Не ЗначениеЗаполнено(КодСтатьиФинансирования) Тогда
				КодСтатьиФинансирования = "  ";
			КонецЕсли;
			ПредставлениеСтроки = КодСтатьиФинансирования + " | ";
		КонецЕсли;
		
		СпособОтражения = СОКРЛП(СтрокаРаспределения.СпособОтраженияЗарплатыВБухучете);
		ПредставлениеСтроки = ПредставлениеСтроки + СпособОтражения + " | ";
		
		ПодразделениеУчетаЗатрат = СОКРЛП(СтрокаРаспределения.ПодразделениеУчетаЗатрат);
		Если ЗначениеЗаполнено(ПодразделениеУчетаЗатрат) Тогда
			ПредставлениеСтроки = ПредставлениеСтроки + ПодразделениеУчетаЗатрат + " | ";
		КонецЕсли;
		
		Если ОбрабатыватьЕНВД Тогда
			ЕНВД = СОКРЛП(СтрокаРаспределения.ОблагаетсяЕНВД);
			ПредставлениеСтроки = ПредставлениеСтроки + ЕНВД + " | ";
		КонецЕсли;
		
		ДоляРаспределения = Формат(СтрокаРаспределения.ДоляРаспределения, "ЧЦ=14; ЧДЦ=3");
		ПредставлениеСтроки = ПредставлениеСтроки + ДоляРаспределения;
		
		ТекстРасшифровки = 
		?(ПустаяСтрока(ТекстРасшифровки), "", ТекстРасшифровки + Символы.ПС)
		+ ПредставлениеСтроки;
		
	КонецЦикла;
	
	Возврат ТекстРасшифровки;

КонецФункции

&НаСервере
Процедура ЗаполнитьПрименяетсяЕНВД()
	
	ПрименяетсяЕНВД = ПолучитьФункциональнуюОпцию("ПлательщикЕНВДЗарплатаКадрыРасширенная", Новый Структура("Организация,ПериодРегистрации",Объект.Организация,Объект.ПериодРегистрации));

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСтрокуЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ТекущиеДанные = Объект.Сотрудники.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
	ТекущиеДанные.Сотрудник = Результат.Сотрудник;
	ТекущиеДанные.РезультатРаспределения = Результат.РаспределениеЗаработка;
	ТекущиеДанные.ПредставлениеРаспределения = ПредставлениеРаспределенияСтроки(ТекущиеДанные.РезультатРаспределения, ИспользоватьСтатьиФинансирования, ПрименяетсяЕНВД);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРаспределениеЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаТЧ Из Объект.Сотрудники Цикл
		СтрокаТЧ.РезультатРаспределения = Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.СкопироватьМассив(Результат.РаспределениеЗаработка));
		СтрокаТЧ.ПредставлениеРаспределения = ПредставлениеРаспределенияСтроки(СтрокаТЧ.РезультатРаспределения, ИспользоватьСтатьиФинансирования, ПрименяетсяЕНВД);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ОбработкаПодбораНаСервере(Знач Сотрудники)
	
	Модифицированность = Истина;
	
	Если ТипЗнч(Сотрудники) <> Тип("Массив") Тогда
		Сотрудники = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудники);
	КонецЕсли;
	
	Для Каждого Сотрудник Из Сотрудники Цикл
		
		СтрокиСотрудников = Объект.Сотрудники.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
		
		Если СтрокиСотрудников.Количество() = 0 Тогда
			НоваяСтрока = Объект.Сотрудники.Добавить();
			НоваяСтрока.Сотрудник = Сотрудник;
			НоваяСтрока.ПредставлениеРаспределения  = ПредставлениеРаспределенияСтроки(Неопределено);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСотрудниковНаСервере(СообщатьПользователю = Ложь)

	Если НЕ ФормаДокументаГотоваДляЗаполнения(СообщатьПользователю) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Сотрудники.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.Организация      = Объект.Организация;
	ПараметрыПолученияСотрудников.Подразделение    = Объект.Подразделение;
	ПараметрыПолученияСотрудников.НачалоПериода    = Объект.ПериодРегистрации;
	ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(Объект.ПериодРегистрации);
	
	КадровыйУчетРасширенный.ПрименитьОтборПоФункциональнойОпцииВыполнятьРасчетЗарплатыПоПодразделениям(ПараметрыПолученияСотрудников);
	
	Объект.Сотрудники.Загрузить(КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолученияСотрудников));
	Для каждого СтрокаТЧ Из Объект.Сотрудники Цикл
		СтрокаТЧ.ПредставлениеРаспределения  = ПредставлениеРаспределенияСтроки(Неопределено);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ФормаДокументаГотоваДляЗаполнения(СообщатьПользователю = Ложь)
	
	ФормаДокументаГотова = Истина;
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда		
		ФормаДокументаГотова = Ложь;		
		Если СообщатьПользователю Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо указать организацию.';
																	|en = 'Specify company.'"), , "Организация");
		КонецЕсли;		
	КонецЕсли;
	
	Возврат ФормаДокументаГотова;
	
КонецФункции

#КонецОбласти
