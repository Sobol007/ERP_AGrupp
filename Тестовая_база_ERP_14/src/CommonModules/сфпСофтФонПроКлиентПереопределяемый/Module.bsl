
////////////////////////////////////////////////////////////////////////////////
// Переопределяемые клиентские процедуры и функции СофтФон
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЕЙСТВИЙ

// Процедура выполняет доступное действие
//
// Параметры:
//	Номер			- Число		- Номер действия (соответветствует значению параметра EvenType,
//									которое возвращает панель управления при выборе действия
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпВыполнитьДоступноеДействие(Номер, СтруктураЗвонка) Экспорт
	
	МассивДоступныхДействий	= сфпСофтФонПроСерверПереопределяемый.сфпПолучитьМассивДоступныхДействий();
	ЭлементМассива = МассивДоступныхДействий[Номер];
	
	Попытка
		Если ЭлементМассива.Действие = "сфпОткрытьПанельЗвонка" Тогда
			сфпОткрытьПанельЗвонка(СтруктураЗвонка);
		
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьТелефонныйЗвонок" Тогда
			сфпОткрытьТелефонныйЗвонок(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьКарточкуКонтакта" Тогда
			сфпОткрытьКарточкуКонтакта(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпРегистрацияОбращения" Тогда
			сфпРегистрацияОбращения(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьСтикер" Тогда
			сфпОткрытьСтикер(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьИнтерес" Тогда
			сфпОткрытьИнтерес(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьСчетНаОплату" Тогда
			сфпОткрытьСчетНаОплату(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьЗаказКлиента" Тогда
			сфпОткрытьЗаказКлиента(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьСписокАнкет" Тогда
			сфпОткрытьСписокАнкет(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьДосьеКлиента" Тогда
			сфпОткрытьДосьеКлиента(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьДебиторскуюЗадолженность" Тогда
			сфпОткрытьДебиторскуюЗадолженность(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьВедомостьВзаиморасчетов" Тогда
			сфпОткрытьВедомостьВзаиморасчетов(СтруктураЗвонка);
			
		ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьПродажи" Тогда	
			сфпОткрытьПродажи(СтруктураЗвонка);
		КонецЕсли;
	Исключение
		СтрОшибки = ОписаниеОшибки();
	КонецПопытки;

КонецПроцедуры // сфпВыполнитьДоступноеДействие()

// Процедура выполняет автоматическое действие
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//  ОткрыватьЗвонок - Булево - Независимо от действия в настройках открывать телефонный звонок
//
Процедура сфпВыполнитьАвтоматическоеДействие(СтруктураЗвонка, ОткрыватьЗвонок = Ложь) Экспорт
	
	Если СтруктураЗвонка.Свойство("ВходящийЗвонок") Тогда
		Если СтруктураЗвонка.ВходящийЗвонок Тогда
			  НаименованиеДействия = сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриВходящемЗвонке");
		Иначе НаименованиеДействия = сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриИсходящемЗвонке");
		КонецЕсли;
		
	Иначе
		Если СтруктураЗвонка.Входящий Тогда
			  НаименованиеДействия = сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриВходящемЗвонке");
		Иначе НаименованиеДействия = сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриИсходящемЗвонке");
		КонецЕсли;
	КонецЕсли;	
	
	МассивАвтоматическихДействий = сфпСофтФонПроСерверПереопределяемый.сфпПолучитьМассивДоступныхДействий();
	Для Каждого ЭлементМассива Из МассивАвтоматическихДействий Цикл
		Если ЭлементМассива.Наименование = НаименованиеДействия Тогда
			Если НЕ ПустаяСтрока(ЭлементМассива.Действие) Тогда
				Попытка
					Если ЭлементМассива.Действие = "сфпОткрытьПанельЗвонка" Тогда
						сфпОткрытьПанельЗвонка(СтруктураЗвонка);
					
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьТелефонныйЗвонок" Тогда
						сфпОткрытьТелефонныйЗвонок(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьКарточкуКонтакта" Тогда
						сфпОткрытьКарточкуКонтакта(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпРегистрацияОбращения" Тогда
						сфпРегистрацияОбращения(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьСтикер" Тогда
						сфпОткрытьСтикер(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьИнтерес" Тогда
						сфпОткрытьИнтерес(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьСчетНаОплату" Тогда
						сфпОткрытьСчетНаОплату(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьЗаказКлиента" Тогда
						сфпОткрытьЗаказКлиента(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьСписокАнкет" Тогда
						сфпОткрытьСписокАнкет(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьДосьеКлиента" Тогда
						сфпОткрытьДосьеКлиента(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьДебиторскуюЗадолженность" Тогда
						сфпОткрытьДебиторскуюЗадолженность(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьВедомостьВзаиморасчетов" Тогда
						сфпОткрытьВедомостьВзаиморасчетов(СтруктураЗвонка);
						
					ИначеЕсли ЭлементМассива.Действие = "сфпОткрытьПродажи" Тогда	
						сфпОткрытьПродажи(СтруктураЗвонка);
					КонецЕсли;
				Исключение
					СтрОшибки = ОписаниеОшибки();
				КонецПопытки;
			Иначе
				// В настройках стоит "нет действий", проверим, что это команда панели и откроем звонок
				Если ОткрыватьЗвонок Тогда
					Попытка
						сфпОткрытьТелефонныйЗвонок(СтруктураЗвонка);
					Исключение КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			
			Прервать;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // сфпВыполнитьДоступноеДействие()

// Функция возвращает ссылку на объект формы, в зависимости от режима запуска
//
// Параметры:
//	ФормаОбъекта	- Форма	- Форма объекта
//
// Возвращаемое значение:
//	Объект	- Ссылка на объект формы
//
Функция сфпПолучитьОбъектФормы(ФормаОбъекта) Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Возврат ФормаОбъекта.ЭтотОбъект;
	#Иначе
		Возврат ФормаОбъекта.Объект;
	#КонецЕсли
	
КонецФункции


/////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИНИЦИАЛИЗАЦИИ ФОРМ ОБЪЕКТОВ

// Функция создает и заполняет форму документа "CRM_СчетНаОплатуПокупателю"
//
// Параметры:
//	СтруктураЗвонка		- Структура	- Структура данных звонка
//	ДанныеЗаполнения	- Структура	- Структура данных для заполнения документа
//
Функция сфпИнициализироватьФормуСчета(СтруктураЗвонка, ДанныеЗаполнения)
	
	ИмяФормы = "Документ.CRM_СчетНаОплатуПокупателю.ФормаОбъекта";
	
	Если СтруктураЗвонка.Свойство("hCall") Тогда
		  ФормаСчета = ПолучитьФорму(ИмяФормы,,, СтруктураЗвонка.hCall);
	Иначе ФормаСчета = ПолучитьФорму(ИмяФормы);
	КонецЕсли;
	
	ФормаСчета.Объект["Дата"] = сфпСофтФонПроСервер.сфпТекущаяДата();
	ФормаСчета.Объект["Автор"] = сфпСофтФонПроСервер.сфпТекущийПользователь();
	ФормаСчета.Объект["Ответственный"] = ФормаСчета.Объект["Автор"];
	ИмяПредопределенногоЗначения = Нстр("ru='Перечисление.ВариантыВажностиВзаимодействия.Обычная';en='Enumeration of the Interaction Values.'"); 
	ФормаСчета.Объект["Важность"] = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
	ФормаСчета.Объект["Комментарий"] = НСтр("ru='#Создан автоматически средствами СофтФон';en='# Created automatically with SoftPhone tools'");
	Если СтруктураЗвонка.Свойство("НовыйЗвонок") И ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		ФормаСчета.Объект["ДокументОснование"] = СтруктураЗвонка.НовыйЗвонок;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если Найти(Строка(СтруктураЗвонка.Контакт), НСтр("ru='<Объект не найден>';en='<Object not found>'")) > 0 Тогда
			ФормаСчета.Объект["Комментарий"]	= ФормаСчета.Объект["Комментарий"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона)
					+ Символы.ПС + НСтр("ru='К данному абоненту в доступе отказано.';en='Access to this subscriber is denied.'")
					+ НСтр("ru=' Для разрешения работы с абонентом обратитесь к руководителю или администратору.'");

		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
			ФормаСчета.Объект["Партнер"] = СтруктураЗвонка.Контакт;
			
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ФормаСчета.Объект["КонтактноеЛицо"]	= СтруктураЗвонка.Контакт;
			ФормаСчета.Объект["Партнер"] = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		    Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ФормаСчета.Объект["Партнер"] = Клиент;
			КонецЕсли;
			
		Иначе
			ФормаСчета.Объект["Комментарий"] = ФормаСчета.Объект["Комментарий"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона);
		КонецЕсли;
	КонецЕсли;
	
	ФиксироватьПервичныйИнтерес = сфпСофтФонПроСервер.сфпПолучитьЗначениеКонстантыФиксироватьПервичныйИнтерес();
	Если ФиксироватьПервичныйИнтерес Тогда
		Если ДанныеЗаполнения <> Неопределено И ДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
			ИмяПредопределенногоЗначения = Нстр("ru='ПланВидовХарактеристик.КаналыРекламныхВоздействий.CRM_CoMagic';en='Plan of Types of Characteristics. Channels of Advertising Impacts. CRM_CoMagic'");
			ФормаСчета.КаналПервичногоИнтереса = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
			
		Иначе
			ИмяПредопределенногоЗначения = Нстр("ru='ПланВидовХарактеристик.КаналыРекламныхВоздействий.CRM_БезУказанияИсточника';en='Plan of Types of Characteristics. Channels of Advertising Impacts. CRM_Description of the Source'");
			ФормаСчета.КаналПервичногоИнтереса = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	
	Возврат ФормаСчета;

КонецФункции

// Функция создает и заполняет форму документа "ЗаказКлиента"
// Используется в тех объединенных решениях, где есть документ  "Заказ клиента"
//
// Параметры:
//	СтруктураЗвонка		- Структура	- Структура данных звонка
//	ДанныеЗаполнения	- Структура	- Структура данных для заполнения документа
//
Функция сфпИнициализироватьФормуЗаказаКлиента(СтруктураЗвонка, ДанныеЗаполнения)
	
	ИмяФормы = "Документ.ЗаказКлиента.ФормаОбъекта";	
	
	Если СтруктураЗвонка.Свойство("hCall") Тогда
		  ФормаЗаказа = ПолучитьФорму(ИмяФормы,,, СтруктураЗвонка.hCall);
	Иначе ФормаЗаказа = ПолучитьФорму(ИмяФормы);
	КонецЕсли;
	
	ФормаЗаказа.Объект["Дата"] = сфпСофтФонПроСервер.сфпТекущаяДата();
	ФормаЗаказа.Объект["Менеджер"] = сфпСофтФонПроСервер.сфпТекущийПользователь();
	ФормаЗаказа.Объект["Организация"] = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
	ФормаЗаказа.Объект["Комментарий"] = НСтр("ru='#Создан автоматически средствами СофтФон';en='# Created automatically with SoftPhone tools'");
	Если ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		ФормаЗаказа.Объект["ДокументОснование"]	= СтруктураЗвонка.НовыйЗвонок;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если Найти(Строка(СтруктураЗвонка.Контакт), НСтр("ru='<Объект не найден>';en='<Object not found>'")) > 0 Тогда
			ФормаЗаказа.Объект["Комментарий"]	= ФормаЗаказа.Объект["Комментарий"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона)
					+ Символы.ПС + НСтр("ru='К данному абоненту в доступе отказано.';en='Access to this subscriber is denied.'")
					+ НСтр("ru=' Для разрешения работы с абонентом обратитесь к руководителю или администратору.'");
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
			ФормаЗаказа.Объект["Партнер"]		= СтруктураЗвонка.Контакт;
			ФормаЗаказа.Объект["Контрагент"] 	= сфпСофтФонПроСервер.сфпПолучитьКонтрагентаПартнера(СтруктураЗвонка.Контакт);
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ФормаЗаказа.Объект["КонтактноеЛицо"]	= СтруктураЗвонка.Контакт;
			ФормаЗаказа.Объект["Партнер"]			= сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			ФормаЗаказа.Объект["Контрагент"] 		= сфпСофтФонПроСервер.сфпПолучитьКонтрагентаПартнера(ФормаЗаказа.Объект["Партнер"]);
		Иначе
			ФормаЗаказа.Объект["Комментарий"]	= ФормаЗаказа.Объект["Комментарий"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона);
		КонецЕсли;
	КонецЕсли;
		
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	
	Возврат ФормаЗаказа;

КонецФункции

// Функция создает и заполняет форму документа "CRM_Интерес"
//
// Параметры:
//	СтруктураЗвонка		- Структура	- Структура данных звонка
//	ДанныеЗаполнения	- Структура	- Структура данных для заполнения документа
//
Функция сфпИнициализироватьФормуИнтереса(СтруктураЗвонка, ДанныеЗаполнения)
	
	ИмяФормы = "Документ.CRM_Интерес.ФормаОбъекта";
	
	Если СтруктураЗвонка.Свойство("hCall") Тогда
		  ФормаИнтереса = ПолучитьФорму(ИмяФормы,,, СтруктураЗвонка.hCall);
	Иначе ФормаИнтереса = ПолучитьФорму(ИмяФормы);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если СтруктураЗвонка.Свойство("ContactID") И ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	
	ОбъектФормы = сфпПолучитьОбъектФормы(ФормаИнтереса);
	ОбъектФормы.Автор = сфпСофтФонПроСервер.сфпТекущийПользователь();
	ОбъектФормы.Дата = сфпСофтФонПроСервер.сфпТекущаяДата();
	ОбъектФормы.Ответственный = ОбъектФормы.Автор;
		
	ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
	Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
		ОбъектФормы.Организация = ЗначениеНастройки;
	Иначе
		ОбъектФормы.Организация = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		ОбъектФормы.ДокументОснование = СтруктураЗвонка.НовыйЗвонок;
	КонецЕсли;
	
	cфпСтруктураПользователя = сфпСофтФонПроСервер.сфпПолучитьЗначенияРеквизитовПользователя(ОбъектФормы.Автор);
	ОбъектФормы.Подразделение = cфпСтруктураПользователя.Подразделение;
	ОбъектФормы.Офис = cфпСтруктураПользователя.Офис;
	ОбъектФормы.СостояниеИнтереса = сфпСофтФонПроСерверПереопределяемый.сфпСостояниеИнтересаВыявлениеПотребностей();
	// ОбъектФормы.сфпНомерТелефона = СтруктураЗвонка.НомерТелефона;
	ОбъектФормы.Тема = НСтр("ru='#Создан автоматически средствами СофтФон';en='# Created automatically with SoftPhone tools'") 
	+ ?(ЗначениеЗаполнено(СтруктураЗвонка.НомерТелефона), Нстр("ru = ', номер телефона: '") + СтруктураЗвонка.НомерТелефона, "");
	ИмяПредопределенногоЗначения = Нстр("ru='Справочник.CRM_ТипУслуги.ПоставкаТоварыУслуги';en='Directory.CRM_TypeServices.SupplyServicesServices'");
	ОбъектФормы.ТипУслуги = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если Найти(Строка(СтруктураЗвонка.Контакт), НСтр("ru='<Объект не найден>';en='<Object not found>'")) > 0 Тогда
			ОбъектФормы.Описание = ОбъектФормы.Описание + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона)
					+ Символы.ПС + НСтр("ru='К данному абоненту в доступе отказано.';en='Access to this subscriber is denied.'")
					+ НСтр("ru=' Для разрешения работы с абонентом обратитесь к руководителю или администратору.'");
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
			ОбъектФормы.Партнер	= СтруктураЗвонка.Контакт;
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ОбъектФормы.КонтактноеЛицо = СтруктураЗвонка.Контакт;
			ОбъектФормы.Партнер	= сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		    Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ОбъектФормы.Партнер = Клиент;
			Иначе
				ОбъектФормы.ПотенциальныйКлиент = СтруктураЗвонка.Контакт;
			КонецЕсли;
		Иначе
			ОбъектФормы.Описание = ОбъектФормы.Описание + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона);
		КонецЕсли;
				
		Если ЗначениеЗаполнено(ОбъектФормы.Партнер) Тогда
			ФормаИнтереса.КонтактныеЛица.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].ПравоеЗначение = ОбъектФормы.Партнер;
		КонецЕсли;	
	КонецЕсли;
	
	ФиксироватьПервичныйИнтерес = сфпСофтФонПроСервер.сфпПолучитьЗначениеКонстантыФиксироватьПервичныйИнтерес();
	
	Если НЕ (ДанныеЗаполнения = Неопределено) И ДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
		сфпСтруктураВнешнихДанных	= ДанныеЗаполнения.сфпСтруктураCoMagic;
		// ОбъектФормы.сфпCoMagicID = сфпСтруктураВнешнихДанных.comagic_context.visitor_id;
		ОбъектФормы.Описание = ОбъектФормы.Описание + ?(ОбъектФормы.Описание, "", Символы.ПС) 
		+ НСтр("ru='Кампания: '") + сфпСтруктураВнешнихДанных.comagic_context.campaign + Символы.ПС 
		+ НСтр("ru='Сайт: '") + сфпСтруктураВнешнихДанных.comagic_context.site + Символы.ПС
		+ НСтр("ru='Ключевые слова: '") + сфпСтруктураВнешнихДанных.comagic_context.search_query; 
		Если ФиксироватьПервичныйИнтерес Тогда
			ИмяПредопределенногоЗначения		 		= Нстр("ru='ПланВидовХарактеристик.КаналыРекламныхВоздействий.CRM_CoMagic';en='Plan of Types of Characteristics. Channels of Advertising Impacts. CRM_CoMagic'");
			ФормаИнтереса.КаналПервичногоИнтереса 		= ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
			ФормаИнтереса.ИсточникПервичногоИнтереса 	= сфпСофтФонПроСервер.сфпНайтиМаркетинговоеМероприятие(сфпСтруктураВнешнихДанных.comagic_context.campaign);
		КонецЕсли;
	Иначе
		Если ФиксироватьПервичныйИнтерес Тогда
			ИмяПредопределенногоЗначения		 = Нстр("ru='ПланВидовХарактеристик.КаналыРекламныхВоздействий.CRM_БезУказанияИсточника';en='Plan of Types of Characteristics. Channels of Advertising Impacts. CRM_Description of the Source'");
			ФормаИнтереса.КаналПервичногоИнтереса = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	
	Возврат ФормаИнтереса;

КонецФункции


/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫПОЛНЕНИЯ ДЕЙСТВИЙ

// Процедура открывает Панель звонка
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьПанельЗвонка(СтруктураЗвонка)
	ОткрытьФорму("ОбщаяФорма.сфпПанельЗвонка", СтруктураЗвонка);
КонецПроцедуры // сфпОткрытьТелефонныйЗвонок()

Процедура сфпОткрытьФормуОбъекта(СтруктураЗвонка, ОбработчикЗавершения, ОбработчикИнициализацииФормы = "")
	
	Если СтруктураЗвонка.Свойство("ФормаПолучена") И СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	
	ФормаОбъекта = Неопределено;
	Если ЗначениеЗаполнено(ОбработчикИнициализацииФормы) Тогда
		Если ОбработчикИнициализацииФормы = "сфпИнициализироватьФормуЗаказаКлиента" Тогда
			ФормаОбъекта = сфпИнициализироватьФормуЗаказаКлиента(СтруктураЗвонка, сфпДанныеЗаполнения);
			
		ИначеЕсли ОбработчикИнициализацииФормы = "сфпИнициализироватьФормуСчета" Тогда
			ФормаОбъекта = сфпИнициализироватьФормуСчета(СтруктураЗвонка, сфпДанныеЗаполнения);
			
		ИначеЕсли ОбработчикИнициализацииФормы = "сфпИнициализироватьФормуИнтереса" Тогда
			сфпИнициализироватьФормуИнтереса(СтруктураЗвонка, сфпДанныеЗаполнения);	
		КонецЕсли;
		
		Если ФормаОбъекта = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если СтруктураЗвонка.Свойство("ContactID") И ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	
	Если ОбработчикЗавершения = "сфпОткрытьТелефонныйЗвонокЗавершение" Тогда
		ПараметрыФормы = Новый Структура("Ключ", СтруктураЗвонка.НовыйЗвонок);

	Иначе
		ПараметрыФормы = Новый Структура("ФормаОбъекта,СтруктураЗвонка", ФормаОбъекта, СтруктураЗвонка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ОбработчикЗавершения = "сфпОткрытьСписокАнкетЗавершение" Тогда
			сфпОткрытьСписокАнкетЗавершение(СтруктураЗвонка.Контакт, ПараметрыФормы);
			
		ИначеЕсли ОбработчикЗавершения = "сфпОткрытьКарточкуКонтактаЗавершение" Тогда
			сфпОткрытьКарточкуКонтактаЗавершение(СтруктураЗвонка.Контакт, ПараметрыФормы);
			
		ИначеЕсли ОбработчикЗавершения = "сфпОткрытьТелефонныйЗвонокЗавершение" Тогда
			сфпОткрытьТелефонныйЗвонокЗавершение(СтруктураЗвонка.Контакт, ПараметрыФормы);
			
		ИначеЕсли ОбработчикЗавершения = "сфпРегистрацияОбращенияЗавершение" Тогда
			сфпРегистрацияОбращенияЗавершение(СтруктураЗвонка.Контакт, ПараметрыФормы);
			
		ИначеЕсли ОбработчикЗавершения = "сфпОткрытьФормуОбъектаЗавершение" Тогда
			сфпОткрытьФормуОбъектаЗавершение(СтруктураЗвонка.Контакт, ПараметрыФормы);
			
		ИначеЕсли ОбработчикЗавершения = "сфпОткрытьСтикерЗавершение" Тогда
			сфпОткрытьСтикерЗавершение(СтруктураЗвонка.Контакт, ПараметрыФормы);	
		КонецЕсли;

	ИначеЕсли СтруктураЗвонка.Свойство("МассивЗвонящих") И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения(ОбработчикЗавершения, ЭтотОбъект, ПараметрыФормы);
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
		Если СписокКонтактов.Количество() = 1 Тогда
			Если ОбработчикЗавершения = "сфпОткрытьСписокАнкетЗавершение" Тогда
				сфпОткрытьСписокАнкетЗавершение(СписокКонтактов[0].Значение, ПараметрыФормы);
				
			ИначеЕсли ОбработчикЗавершения = "сфпОткрытьКарточкуКонтактаЗавершение" Тогда
				сфпОткрытьКарточкуКонтактаЗавершение(СписокКонтактов[0].Значение, ПараметрыФормы);
				
			ИначеЕсли ОбработчикЗавершения = "сфпОткрытьТелефонныйЗвонокЗавершение" Тогда
				сфпОткрытьТелефонныйЗвонокЗавершение(СписокКонтактов[0].Значение, ПараметрыФормы);
				
			ИначеЕсли ОбработчикЗавершения = "сфпРегистрацияОбращенияЗавершение" Тогда
				сфпРегистрацияОбращенияЗавершение(СписокКонтактов[0].Значение, ПараметрыФормы);
				
			ИначеЕсли ОбработчикЗавершения = "сфпОткрытьФормуОбъектаЗавершение" Тогда
				сфпОткрытьФормуОбъектаЗавершение(СписокКонтактов[0].Значение, ПараметрыФормы);
				
			ИначеЕсли ОбработчикЗавершения = "сфпОткрытьСтикерЗавершение" Тогда
				сфпОткрытьСтикерЗавершение(СписокКонтактов[0].Значение, ПараметрыФормы);
			КонецЕсли;

		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(), ВариантОткрытияОкна.ОтдельноеОкно,, ОписаниеВыбора);
		КонецЕсли;

	Иначе
		Если ОбработчикЗавершения = "сфпОткрытьТелефонныйЗвонокЗавершение" Тогда
			ИмяФормыДокументаТелефонныйЗвонок = сфпСофтФонПроСервер.сфпИмяФормыДокументаТелефонныйЗвонок();
			Если ЗначениеЗаполнено(ИмяФормыДокументаТелефонныйЗвонок) Тогда
				ОткрытьФорму(ИмяФормыДокументаТелефонныйЗвонок, ПараметрыФормы);
			КонецЕсли;
			
		ИначеЕсли ОбработчикЗавершения = "сфпРегистрацияОбращенияЗавершение" Тогда
			сфпРегистрацияОбращенияЗавершение(СтруктураЗвонка.Контакт, ПараметрыФормы);
			
		ИначеЕсли ОбработчикЗавершения = "сфпОткрытьСтикерЗавершение" Тогда
			сфпОткрытьСтикерЗавершение(СтруктураЗвонка.Контакт, ПараметрыФормы);	
			
		Иначе
			Если ФормаОбъекта <> Неопределено Тогда
				ФормаОбъекта.Модифицированность = Истина;
				ФормаОбъекта.Открыть();
			КонецЕсли;
			
			НовыйЗвонок = СтруктураЗвонка.НовыйЗвонок;
			Если СтруктураЗвонка.Свойство("hCall") И НЕ ЗначениеЗаполнено(НовыйЗвонок) Тогда
				СозданЗвонок = Ложь;
				НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения, СозданЗвонок);
				Если СозданЗвонок Тогда
					сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
				КонецЕсли;
			КонецЕсли;
			
			Если ФормаОбъекта <> Неопределено Тогда
				ФормаОбъекта.Объект["ДокументОснование"] = НовыйЗвонок;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // сфпОткрытьФормуОбъекта()

Процедура сфпОткрытьФормуОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	ФормаОбъекта = ДополнительныеПараметры.ФормаОбъекта;
	
	Если ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры") Тогда
			ФормаОбъекта.Объект["Партнер"] = Результат;
			
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ФормаОбъекта.Объект["КонтактноеЛицо"] = Результат;
			ФормаОбъекта.Объект["Партнер"] = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		    Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ФормаОбъекта.Объект["Партнер"] = Клиент;

			Иначе
				Попытка
					ФормаОбъекта.Объект["ПотенциальныйКлиент"] = Результат;
				Исключение КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	ФормаОбъекта.Модифицированность = Истина;
	ФормаОбъекта.Открыть();
	
	НовыйЗвонок = СтруктураЗвонка.НовыйЗвонок;
	Если СтруктураЗвонка.Свойство("hCall") И НЕ ЗначениеЗаполнено(НовыйЗвонок) Тогда
		СозданЗвонок = Ложь;
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения, СозданЗвонок);
		Если СозданЗвонок Тогда
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
	КонецЕсли;
	
	ФормаОбъекта.Объект["ДокументОснование"] = НовыйЗвонок;

КонецПроцедуры // сфпОткрытьФормуОбъектаЗавершение()

// Процедура открывает телефонный звонок
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьТелефонныйЗвонок(СтруктураЗвонка)
	сфпОткрытьФормуОбъекта(СтруктураЗвонка, "сфпОткрытьТелефонныйЗвонокЗавершение");
КонецПроцедуры // сфпОткрытьТелефонныйЗвонок()

// Процедура заканчивает команду открытия звонка после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "КонтактАбонент"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьТелефонныйЗвонокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяФормыДокументаТелефонныйЗвонок = сфпСофтФонПроСервер.сфпИмяФормыДокументаТелефонныйЗвонок();
			
	Если Результат <> Неопределено Тогда
		Если ЗначениеЗаполнено(ИмяФормыДокументаТелефонныйЗвонок) Тогда
			ИмяРеквизитаАбонентКонтакт = сфпСофтФонПроСервер.сфпИмяРеквизитаАбонентКонтакт();
			
			ФормаЗвонка = ПолучитьФорму(ИмяФормыДокументаТелефонныйЗвонок, ДополнительныеПараметры);
			
			ОбъектФормы = сфпПолучитьОбъектФормы(ФормаЗвонка);
			ОбъектФормы.АбонентПредставление = Строка(Результат);
			
			Если сфпСофтФонПроСервер.сфпРеквизитСуществует(ОбъектФормы.Ссылка, "сфпКлиент") Тогда
				ОбъектФормы.сфпКлиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			
				Если Результат <> ОбъектФормы.сфпКлиент Тогда
					ОбъектФормы[ИмяРеквизитаАбонентКонтакт] = Результат;
				КонецЕсли;
				
			Иначе
				ОбъектФормы[ИмяРеквизитаАбонентКонтакт] = Результат;
			КонецЕсли;

			Если сфпСофтФонПроСервер.сфпРеквизитСуществует(ОбъектФормы.Ссылка, "Контрагент") Тогда
				ИмяМетаданных = сфпСофтФонПроСервер.сфпПолучитьИмяМетаданных(Результат);
				Если ИмяМетаданных = "Контрагенты" Тогда
					ОбъектФормы.Контрагент = Результат;
					
				ИначеЕсли ИмяМетаданных = "КонтактныеЛица" Тогда
					ОбъектФормы.Контрагент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
				КонецЕсли;
			КонецЕсли;
			
			ФормаЗвонка.Открыть();
		КонецЕсли;
		
		Возврат;
	КонецЕсли;		
	
	Если ЗначениеЗаполнено(ИмяФормыДокументаТелефонныйЗвонок) Тогда
		ОткрытьФорму(ИмяФормыДокументаТелефонныйЗвонок, ДополнительныеПараметры);
	КонецЕсли;

КонецПроцедуры // сфпОткрытьТелефонныйЗвонокЗавершение()

// Процедура регистрирует обращение
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпРегистрацияОбращения(СтруктураЗвонка) Экспорт
	сфпОткрытьФормуОбъекта(СтруктураЗвонка, "сфпРегистрацияОбращенияЗавершение");
КонецПроцедуры // сфпРегистрацияОбращения()

// Процедура заканчивает команду открытия мастера обращения после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпРегистрацияОбращенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	
	МассивСсылок = Новый Массив();
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("НомерТелефона", СтруктураЗвонка.НомерТелефона);
	ПараметрыФормы.Вставить("ТелефонныйЗвонок",	ПредопределенноеЗначение("Документ.ТелефонныйЗвонок.ПустаяСсылка"));
	ПараметрыФормы.Вставить("МассивСсылок", МассивСсылок);
	
	Если ЗначениеЗаполнено(Результат) Тогда
		МассивСсылок.Добавить(Результат);
		ПараметрыФормы.Вставить("МассивСсылок", МассивСсылок);

		СтруктураЗвонка.Вставить("Контакт", Результат);
	КонецЕсли;
	
	Если сфпДанныеЗаполнения <> Неопределено И сфпДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
		сфпСтруктураВнешнихДанных = сфпДанныеЗаполнения.сфпСтруктураCoMagic;
		ПараметрыФормы.Вставить("сфпСтруктураВнешнихДанных", сфпСтруктураВнешнихДанных);
	КонецЕсли;
		
	ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма", ПараметрыФормы, ЭтотОбъект, СтруктураЗвонка.НомерТелефона);
	
	Если СтруктураЗвонка.Свойство("hCall") И НЕ ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		СозданЗвонок = Ложь;
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения, СозданЗвонок);
		Если СозданЗвонок Тогда
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
		Оповестить("ЗаполнитьОснованиеОбращения", НовыйЗвонок);
		
 	ИначеЕсли СтруктураЗвонка.Свойство("НовыйЗвонок") И ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		Оповестить("ЗаполнитьОснованиеОбращения", СтруктураЗвонка.НовыйЗвонок);
	КонецЕсли;

КонецПроцедуры // сфпРегистрацияОбращенияЗавершение()

// Процедура открывает Стикер
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьСтикер(СтруктураЗвонка)
	сфпОткрытьФормуОбъекта(СтруктураЗвонка, "сфпОткрытьСтикерЗавершение");
КонецПроцедуры // сфпОткрытьСтикер()

// Процедура заканчивает команду открытия Стикера после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьСтикерЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	//Если ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		ОткрытьФорму("Документ.ТелефонныйЗвонок.Форма.сфпФормаДокументаКраткая", СтруктураЗвонка,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//КонецЕсли;

	Если СтруктураЗвонка.Свойство("hCall") И НЕ ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		СозданЗвонок = Ложь;
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения, СозданЗвонок);
		Если СозданЗвонок Тогда
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры // сфпОткрытьСтикерЗавершение()

// Процедура создает и открывает документ "CRM_Интерес"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьИнтерес(СтруктураЗвонка)
	сфпОткрытьФормуОбъекта(СтруктураЗвонка, "сфпОткрытьФормуОбъектаЗавершение", "сфпИнициализироватьФормуИнтереса");
КонецПроцедуры

// Процедура открывает карточку контакта
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьКарточкуКонтакта(СтруктураЗвонка)
	сфпОткрытьФормуОбъекта(СтруктураЗвонка, "сфпОткрытьКарточкуКонтактаЗавершение");
КонецПроцедуры // сфпОткрытьКарточкуКонтакта()

// Процедура заканчивает команду открытия события после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьКарточкуКонтактаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	Если ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		ПоказатьЗначение(, Результат);
	КонецЕсли;

	Если СтруктураЗвонка.Свойство("hCall") И НЕ ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		СозданЗвонок = Ложь;
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения, СозданЗвонок);
		Если СозданЗвонок Тогда
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры // сфпОткрытьКарточкуКонтактаЗавершение()

// Функция создает и открывает документ "CRM_СчетНаОплатуПокупателю"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьСчетНаОплату(СтруктураЗвонка)
	сфпОткрытьФормуОбъекта(СтруктураЗвонка, "сфпОткрытьФормуОбъектаЗавершение", "сфпИнициализироватьФормуСчета");
КонецПроцедуры // сфпОткрытьСчетНаОплату()

// Функция создает и открывает документ "Заказ клиента"
// Используется в тех объединенных решениях, где есть документ  "Заказ клиента"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьЗаказКлиента(СтруктураЗвонка)
	сфпОткрытьФормуОбъекта(СтруктураЗвонка, "сфпОткрытьФормуОбъектаЗавершение", "сфпИнициализироватьФормуЗаказаКлиента");
КонецПроцедуры // сфпОткрытьЗаказКлиента() 	

// Функция открывает список документов "Анкета"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьСписокАнкет(СтруктураЗвонка)
	сфпОткрытьФормуОбъекта(СтруктураЗвонка, "сфпОткрытьСписокАнкетЗавершение");
КонецПроцедуры // сфпОткрытьСписокАнкет()

// Процедура заканчивает команду открытия списка анкет после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьСписокАнкетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	Если ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры") ИЛИ
			 ТипЗнч(Результат) = Тип("СправочникСсылка.Пользователи") ИЛИ
			 ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("Отбор", Новый Структура("Респондент", Результат));
			ПараметрыФормы.Вставить("Респондент", Результат);
			ОткрытьФорму("Документ.Анкета.Форма.ФормаСписка", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураЗвонка.Свойство("hCall") И НЕ ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
	    СозданЗвонок = Ложь;
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения, СозданЗвонок);
		Если СозданЗвонок Тогда
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Функция открывает отчет
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//	ИмяОтчета		- Строка	- Идентификатор открываемого отчета
//
Процедура сфпОткрытьОтчет(СтруктураЗвонка, ИмяОтчета, КлючВариантаОтчета = "", ИмяОтбораКлиента = "", ИмяСвойстваКлиента = "")
	
	Если СтруктураЗвонка.Свойство("ФормаПолучена") И СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	СтруктураЗвонка.Вставить("ИмяОтчета", ИмяОтчета);
	СтруктураЗвонка.Вставить("ИмяОтбораКлиента", ИмяОтбораКлиента);
	СтруктураЗвонка.Вставить("КлючВариантаОтчета", КлючВариантаОтчета);
	СтруктураЗвонка.Вставить("ИмяСвойстваКлиента", ИмяСвойстваКлиента);
		
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		сфпОткрытьОтчетЗавершение(СтруктураЗвонка.Контакт, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));

	ИначеЕсли ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьОтчетЗавершение", ЭтотОбъект, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьОтчетЗавершение(СписокКонтактов[0].Значение, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
			
		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия,, Новый УникальныйИдентификатор(), ВариантОткрытияОкна.ОтдельноеОкно,, ОписаниеВыбора);
		КонецЕсли;

	ИначеЕсли СтруктураЗвонка.Свойство("hCall") И НЕ ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		СозданЗвонок = Ложь;
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения, СозданЗвонок);
		Если СозданЗвонок Тогда
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // сфпОткрытьОтчет()

// Процедура заканчивает команду открытия отчета после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникСсылка	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров
//
Процедура сфпОткрытьОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	Если ЗначениеЗаполнено(Результат) Тогда
		ИмяОтчета = СтруктураЗвонка.ИмяОтчета;
		Если ЗначениеЗаполнено(ИмяОтчета) Тогда
			СтруктураЗвонка.Вставить("Контакт", Результат);
			
			Клиент = Неопределено;
			Если ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры") Тогда
				Клиент = Результат;

			ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") ИЛИ
				      ТипЗнч(Результат) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
				Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			КонецЕсли;

			Если ЗначениеЗаполнено(Клиент) Тогда
				ПараметрыФормы = Новый Структура();
				Если ЗначениеЗаполнено(СтруктураЗвонка.ИмяСвойстваКлиента) Тогда
					ПараметрыФормы.Вставить(СтруктураЗвонка.ИмяСвойстваКлиента, Клиент);
				КонецЕсли;
				Если ЗначениеЗаполнено(СтруктураЗвонка.ИмяОтбораКлиента) Тогда
					ПараметрыФормы.Вставить("Отбор", Новый Структура(СтруктураЗвонка.ИмяОтбораКлиента, Клиент));
				КонецЕсли;
				Если ЗначениеЗаполнено(СтруктураЗвонка.КлючВариантаОтчета) Тогда
					ПараметрыФормы.Вставить("КлючВарианта", СтруктураЗвонка.КлючВариантаОтчета);
					ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
				КонецЕсли;
				ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураЗвонка.Свойство("hCall") И НЕ ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
	    СозданЗвонок = Ложь;
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения, СозданЗвонок);
		Если СозданЗвонок Тогда
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // сфпОткрытьОтчетЗавершение()

// Функция открывает отчет - карточку клиента (досье)
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьДосьеКлиента(СтруктураЗвонка)
	
	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "CRM_КарточкаКлиента") Тогда
		сфпОткрытьОтчет(СтруктураЗвонка, "CRM_КарточкаКлиента",,, "Партнер");

	ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "ДосьеПартнера") Тогда
		сфпОткрытьОтчет(СтруктураЗвонка, "ДосьеПартнера",,, "Партнер");
	КонецЕсли;

КонецПроцедуры // сфпОткрытьДосьеКлиента()

// Функция открывает отчет по задолженности клиента
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьДебиторскуюЗадолженность(СтруктураЗвонка)

	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "CRM_ДебиторскаяЗадолженностьПоСрокамДолга") Тогда
		сфпОткрытьОтчет(СтруктураЗвонка, "CRM_ДебиторскаяЗадолженностьПоСрокамДолга", "Основной", "Партнер");

	ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "СостояниеРасчетовСКлиентами") Тогда
		сфпОткрытьОтчет(СтруктураЗвонка, "СостояниеРасчетовСКлиентами", "Основной", "Партнер");
	КонецЕсли;

КонецПроцедуры // сфпОткрытьДебиторскуюЗадолженность()

// Функция открывает отчет по взаиморасчетам с клиентом
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьВедомостьВзаиморасчетов(СтруктураЗвонка)

	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "CRM_ВедомостьВзаиморасчетыСКлиентами") Тогда
		сфпОткрытьОтчет(СтруктураЗвонка, "CRM_ВедомостьВзаиморасчетыСКлиентами", "Основной", "Клиент");
			
	ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "РасчетыСКлиентами") Тогда
		сфпОткрытьОтчет(СтруктураЗвонка, "РасчетыСКлиентами", "Основной", "Партнер");
	КонецЕсли;

КонецПроцедуры // сфпОткрытьВедомостьВзаиморасчетов()

// Функция открывает отчет "Продажи"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьПродажи(СтруктураЗвонка)
	сфпОткрытьОтчет(СтруктураЗвонка, "CRM_Продажи", "ПоКлиентам", "Клиент");
КонецПроцедуры // сфпОткрытьПродажи()


/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫПОЛНЕНИЯ ЗВОНКА

// Процедура - обработчик нажатия кнопки "Позвонить" поля "Телефон"
//
// Параметры:
//	Форма	- УправляемаяФорма	- Форма справочника	
//	Объект	- СправочникСсылка	- Элемент справочника
//
Процедура сфпПодключаемый_ПозвонитьНаНомер(Форма, Объект) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо записать элемент!';en='It is necessary to write down the element!'"));
		Возврат;
	КонецЕсли;
	ИмяРеквизита = СтрЗаменить(Форма.ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ПозвонитьНаНомер","");
	Если Объект.Свойство(ИмяРеквизита) Тогда
		Телефон = Объект[ИмяРеквизита];
	Иначе
		Телефон = Форма[ИмяРеквизита];
	КонецЕсли;
	Если ПустаяСтрока(Телефон) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не выбран номер телефона!';en='No phone number selected!'"), 5);
		Возврат;
	КонецЕсли;
	сфпСофтФонПроКлиент.сфпПозвонить(Телефон, Объект.Ссылка);
КонецПроцедуры // сфпПодключаемый_ПозвонитьНаНомер()

// Процедура - обработчик выполнения общей команды "сфпПозвонить"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыПозвонить(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПараметрКоманды) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо записать элемент!';en='It is necessary to write down the element!'"));
		Возврат;
	КонецЕсли;
	ДанныеЗаполнения = Новый Структура("Основание", ПараметрКоманды);
	Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		АбонентКонтакт		= сфпСофтФонПроСервер.сфпПолучитьЗначениеРеквизита(ПараметрКоманды, "АбонентКонтакт"); 
		АбонентКакСвязаться	= сфпСофтФонПроСервер.сфпПолучитьЗначениеРеквизита(ПараметрКоманды, "АбонентКакСвязаться"); 
		Если ЗначениеЗаполнено(АбонентКонтакт) Тогда
			Если ЗначениеЗаполнено(АбонентКакСвязаться) Тогда
				сфпСофтФонПроКлиент.сфпПозвонить(АбонентКакСвязаться, АбонентКонтакт, ДанныеЗаполнения);
			Иначе
				СписокОбъектов = Новый СписокЗначений;
				СписокОбъектов.Добавить(АбонентКонтакт);
				сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов, ДанныеЗаполнения);
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(АбонентКакСвязаться) Тогда
			сфпСофтФонПроКлиент.сфпПозвонить(АбонентКакСвязаться, , ДанныеЗаполнения);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru='Не указан контакт!';en='No contact specified!'"), 5);
		КонецЕсли;
	Иначе
		СписокОбъектов = Новый СписокЗначений;
		СписокОбъектов.Добавить(ПараметрКоманды);
		сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов);
	КонецЕсли;
КонецПроцедуры // сфпОбработкаКомандыПозвонить()

// Процедура - обработчик выполнения общей команды "сфпКарточкаCoMagic"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыКарточкаCoMagic(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда Возврат; КонецЕсли;
	CoMagicID	= сфпСофтФонПроСерверПереопределяемый.сфпПолучитьCoMagicID(ПараметрКоманды);
	Если ПустаяСтрока(CoMagicID) Тогда Возврат; КонецЕсли;
	КлючСессии	= сфпСофтФонПроСервер.сфпПолучитьКлючСессииCoMagic();
	Если НЕ ЗначениеЗаполнено(КлючСессии) Тогда Возврат; КонецЕсли;
	Адрес	= "http://app.comagic.ru/analytics/auditory/cmvisitor/?session_key=" + КлючСессии + "&visitor_id=" + CoMagicID;
	ПерейтиПоНавигационнойСсылке(Адрес);
КонецПроцедуры // сфпОбработкаКомандыКарточкаCoMagic()

// Процедура - обработчик выполнения общей команды "ИсторияРазговора"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыИсторияРазговора(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда Возврат; КонецЕсли;
	Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		сфпСофтФонПроКлиент.сфпОткрытьИсториюРазговора(ПараметрКоманды);
	КонецЕсли;
КонецПроцедуры // сфпОбработкаКомандыИсторияРазговора()

// Процедура - обработчик выполнения общей команды "ПереводЗвонков"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыПереводЗвонков(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	ИначеЕсли НЕ сфпСофтФонПроСервер.сфпРолиДоступны("ПолныеПрава, сфпУправлениеМаршрутизацией") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Недостаточно прав для настройки перевода звонков';en='There are not enough rights to set up call transfer'"));
		Возврат;
	КонецЕсли;
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("Контакт",	ПараметрКоманды);
	ОткрытьФорму("ОбщаяФорма.сфпПользователиДляПереключения", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно);
КонецПроцедуры // сфпОбработкаКомандыПереводЗвонков()

#КонецОбласти