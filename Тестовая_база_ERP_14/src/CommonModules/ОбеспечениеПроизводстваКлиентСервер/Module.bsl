
#Область СлужебныйПрограммныйИнтерфейс

#Область Действия

// Возвращает параметры необходимые для выполнения действия "ПроверитьЗаполнитьОбеспечениеВЭтапеПроизводства".
//
// Параметры:
//  ЗаказНаПроизводство	 - ДокументСсылка.ЗаказНаПроизводство2_2	 - заказ, к которому относится редактируемый документ.
//  Подразделение		 - СправочникСсылка.СтруктураПредприятия	 - подразделение, к которому относится редактируемый документ.
//  ЖелаемаяДатаОтгрузки - Дата										 - желаемая дата отгрузки редактируемого документа.
//  ИмяПоляСклад		 - Строка									 - имя поля в документе, где указывается склад.
//  ВариантОбеспечения	 - ПеречислениеСсылка.ВариантыОбеспечения	 - вариант обеспечения, который необходимо установить.
// 
// Возвращаемое значение:
//  Структура - список параметров.
//
Функция ПараметрыДействияПроверитьЗаполнитьОбеспечениеВЭтапеПроизводства(ЗаказНаПроизводство,
																		Подразделение,
																		ЖелаемаяДатаОтгрузки,
																		ИмяПоляСклад = "Склад",
																		ВариантОбеспечения = Неопределено) Экспорт
	
	ПараметрыДействия = Новый Структура();
	
	ПараметрыДействия.Вставить("ЗаказНаПроизводство",  ЗаказНаПроизводство);
	ПараметрыДействия.Вставить("Подразделение",        Подразделение);
	ПараметрыДействия.Вставить("ЖелаемаяДатаОтгрузки", ЖелаемаяДатаОтгрузки);
	ПараметрыДействия.Вставить("ИмяПоляСклад",         ИмяПоляСклад);
	ПараметрыДействия.Вставить("ВариантОбеспечения",   ВариантОбеспечения);
	
	Возврат ПараметрыДействия;
	
КонецФункции

// Возвращает параметры необходимые для выполнения действия "ПроверитьЗаполнитьНазначениеОбеспеченияВЭтапеПроизводства".
//
// Параметры:
//  Объект	 - Структура, ДанныеФормыСтруктура, ДокументОбъект.ЭтапПроизводства2_2 - данные документа
// 
// Возвращаемое значение:
//  Структура - список параметров.
//
Функция ПараметрыДействияПроверитьЗаполнитьНазначениеОбеспеченияВЭтапеПроизводства(Объект) Экспорт
	
	ПараметрыДействия = Новый Структура();
	
	ПараметрыДействия.Вставить("НазначениеМатериалы", Объект.НазначениеМатериалы);
	ПараметрыДействия.Вставить("НазначениеПолуфабрикаты", Объект.НазначениеПолуфабрикаты);
	
	Возврат ПараметрыДействия;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Действия

Процедура ЗаполнитьНазначениеОбеспеченияВСтрокеЭтапаПроизводства(ТекущаяСтрока, ПараметрыДействия) Экспорт

	Если ТекущаяСтрока.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.Обособленно")
		ИЛИ ТекущаяСтрока.ВариантОбеспечения = ПредопределенноеЗначение("Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно") Тогда
		
		Если ТекущаяСтрока.Производится Тогда
			ПараметрыДействия.Свойство("НазначениеПолуфабрикаты", ТекущаяСтрока.Назначение);
		Иначе
			ПараметрыДействия.Свойство("НазначениеМатериалы", ТекущаяСтрока.Назначение);
		КонецЕсли;
		
	Иначе
		ТекущаяСтрока.Назначение = ПредопределенноеЗначение("Справочник.Назначения.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНазначениеПобочногоВыходаВСтрокеЭтапаПроизводства(ТекущаяСтрока, ПараметрыДействия) Экспорт

	Если ПустаяСтрока(ТекущаяСтрока.Назначение) И ЗначениеЗаполнено(ПараметрыДействия.НазначениеПобочногоВыхода) Тогда
		ТекущаяСтрока.Назначение = ПараметрыДействия.НазначениеПобочногоВыхода;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область Прочее

#КонецОбласти

#КонецОбласти
