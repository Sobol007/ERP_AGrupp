Функция ПолучитьОсновнуюОрганизацию() Экспорт
	Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Возврат Организация;
КонецФункции

Функция Реквизит_Договор_Контрагент() Экспорт
	Возврат "Контрагент";
КонецФункции

Функция Реквизит_Договор_ДатаОкончания() Экспорт
	Возврат "ДатаОкончанияДействия";
КонецФункции

Функция Реквизит_Договор_ДатаПодписания() Экспорт
	Возврат "Дата";
КонецФункции

Функция Реквизит_Договор_ДатаНачала() Экспорт
	Возврат "ДатаНачалаДействия";
КонецФункции

Функция ПолучитьФлагРасчетыВУсловныхЕдиницах(ДоговорКонтрагента) Экспорт
	// TODO Разобраться с порядком расчетов
	Возврат Ложь;
КонецФункции

Функция ДоступенКредитныйДоговор(ДоговорКонтрагента) Экспорт
	// Объект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее
	
	// TODO Доступность в зависимости от типа договора
	// ДоговорыКонтрагентов
	// ДоговорыКредитовИДепозитов
	
	Возврат Ложь;
КонецФункции

Функция ПолучитьРуководителей(Организация, ДатаСреза) Экспорт
	Отбор = Новый Структура;
	Отбор.Вставить("Дата", ДатаСреза);
	Отбор.Вставить("Организация", Организация);
	
	ТаблицаОтветственныхЛиц = ОтветственныеЛицаСервер.ПолучитьТаблицуОтветственныхЛицПоОтбору(Отбор);
	
	Результат = Новый Структура("Руководитель, ГлавныйБухгалтер");
	
	СтрокиРуководитель = ТаблицаОтветственныхЛиц.НайтиСтроки(Новый Структура("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель));
	Если СтрокиРуководитель.Количество() > 0 Тогда
		Результат.Вставить("Руководитель", СтрокиРуководитель[0].ФизическоеЛицо);
	КонецЕсли;
	
	СтрокиГлавныйБухгалтер = ТаблицаОтветственныхЛиц.НайтиСтроки(Новый Структура("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер));
	Если СтрокиГлавныйБухгалтер.Количество() > 0 Тогда
		Результат.Вставить("ГлавныйБухгалтер", СтрокиГлавныйБухгалтер[0].ФизическоеЛицо);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция Справочник_БанковскиеСчетаОрганизаций() Экспорт
	Возврат "БанковскиеСчетаОрганизаций";
КонецФункции

Функция ИмяДокумента_ПлатежноеПоручение() Экспорт
	Возврат "СписаниеБезналичныхДенежныхСредств"
КонецФункции

Функция ИмяСправочника_Банки() Экспорт
	Возврат "КлассификаторБанков";
КонецФункции
