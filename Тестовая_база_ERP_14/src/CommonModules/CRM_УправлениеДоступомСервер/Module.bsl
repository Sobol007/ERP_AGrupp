
////////////////////////////////////////////////////////////////////////////////
// Управление доступом сервер (CRM)
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Выполняется при добавлении обработчиков установки параметров сеанса.
//
// Параметры:
//  Обработчики	 - Структура - обработчики.
//
Процедура ПриДобавленииОбработчиковУстановкиПараметровСеанса(Обработчики) Экспорт
	
	Обработчики.Вставить("CRM_ДоступныеПользователи", "CRM_УправлениеДоступомСервер.УстановкаПараметровСеанса");
	
КонецПроцедуры

// Устанавливает параметры сеанса.
//
// Параметры:
//  ИмяПараметра			 - Строка - Имя параметра.
//  УстановленныеПараметры	 - Структура - установленные параметры.
//
Процедура УстановкаПараметровСеанса(Знач ИмяПараметра, УстановленныеПараметры) Экспорт
	
	Если ИмяПараметра = "CRM_ДоступныеПользователи" Тогда
		ПараметрыСеанса.CRM_ДоступныеПользователи = Новый ФиксированныйМассив(ПолучитьСписокДоступныхПользователей(Истина));
		УстановленныеПараметры.Добавить("CRM_ДоступныеПользователи");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет описания поставляемых профилей групп доступа и
// переопределяет параметры обновления профилей и групп доступа.
//
// Для автоматической подготовки содержимого процедуры следует воспользоваться инструментами
// разработчика для подсистемы Управление доступом.
//
// Параметры:
//  ОписанияПрофилей    - Массив - массив структур, в который нужно добавить описания.
//                        Пустая структура должна быть получена при помощи функции.
//                        УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
//  ПараметрыОбновления - Структура - структура со свойствами:
//   * ОбновлятьИзмененныеПрофили - Булево - начальное значение Истина.
//   * ЗапретитьИзменениеПрофилей - Булево - начальное значение Истина.
//       Если установить Ложь, тогда поставляемые профили можно не только просматривать, но и редактировать.
//   * ОбновлятьГруппыДоступа     - Булево - начальное значение Истина.
//   * ОбновлятьГруппыДоступаСУстаревшимиНастройками - Булево - начальное значение Ложь.
//       Если установить Истина, то настройки значений, выполненные администратором для
//       вида доступа который был удален из профиля, будут также удалены из групп доступа.
//
Процедура ПриЗаполненииПоставляемыхПрофилейГруппДоступа(ОписанияПрофилей, ПараметрыОбновления) Экспорт
	
	МодульУправлениеДоступом = Неопределено;
	
	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_УНФ_УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("CRM_УНФ_УправлениеДоступом");
	
	ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_Модуль_УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("CRM_Модуль_УправлениеДоступом");
		
	ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("CRM_УправлениеДоступом");
	КонецЕсли;
	
	Если МодульУправлениеДоступом <> Неопределено Тогда
		МодульУправлениеДоступом.ОписанияНачальногоЗаполненияПрофилейГруппДоступа(ОписанияПрофилей, ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет состав видов доступа, используемых при ограничении прав объектов метаданных.
// Если состав видов доступа не заполнен, отчет "Права доступа" покажет некорректные сведения.
//
// Обязательно требуется заполнить только виды доступа, используемые в шаблонах ограничения доступа
// явно, а виды доступа, используемые в наборах значений доступа могут быть получены из текущего
// состояния регистра сведений НаборыЗначенийДоступа.
//
//  Для автоматической подготовки содержимого процедуры следует воспользоваться инструментами
// разработчика для подсистемы Управление доступом.
//
// Параметры:
//  Описание     - Строка - многострочная строка формата <Таблица>.<Право>.<ВидДоступа>[.Таблица объекта],
//                 например, "Документ.ПриходнаяНакладная.Чтение.Организации",
//                           "Документ.ПриходнаяНакладная.Чтение.Контрагенты",
//                           "Документ.ПриходнаяНакладная.Изменение.Организации",
//                           "Документ.ПриходнаяНакладная.Изменение.Контрагенты",
//                           "Документ.ЭлектронныеПисьма.Чтение.Объект.Документ.ЭлектронныеПисьма",
//                           "Документ.ЭлектронныеПисьма.Изменение.Объект.Документ.ЭлектронныеПисьма",
//                           "Документ.Файлы.Чтение.Объект.Справочник.ПапкиФайлов",
//                           "Документ.Файлы.Чтение.Объект.Документ.ЭлектронноеПисьмо",
//                           "Документ.Файлы.Изменение.Объект.Справочник.ПапкиФайлов",
//                           "Документ.Файлы.Изменение.Объект.Документ.ЭлектронноеПисьмо".
//                 Вид доступа Объект предопределен, как литерал. Этот вид доступа используется в
//                 шаблонах ограничений доступа, как "ссылка" на другой объект, по которому
//                 ограничивается текущий объект таблицы.
//                 Когда вид доступа "Объект" задан, также требуется задать типы таблиц,
//                 которые используются для этого вида доступа. Т.е. перечислить типы,
//                 которые соответствуют полю, использованному в шаблоне ограничения доступа
//                 в паре с видом доступа "Объект". При перечислении типов по виду доступа "Объект"
//                 нужно перечислить только те типы поля, которые есть
//                 у поля РегистрыСведений.НаборыЗначенийДоступа.Объект, остальные типы лишние.
// 
Процедура ДополнитьВидыОграниченийПрав(Описание) Экспорт
	
	МодульУправлениеДоступом = Неопределено;
	
	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_УНФ_УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("CRM_УНФ_УправлениеДоступом");
	
	ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_Модуль_УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("CRM_Модуль_УправлениеДоступом");
		
	ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("CRM_УправлениеДоступом");
	КонецЕсли;
	
	Если МодульУправлениеДоступом <> Неопределено Тогда
		МодульУправлениеДоступом.ДополнитьВидыОграниченийПрав(Описание);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// +CRM fresh
Процедура ТекущиеСвойстваПользователей(МассивПользователей) Экспорт
	Попытка
		ГруппаАдминистраторы = Справочники.ГруппыДоступа.Администраторы;
	Исключение
		ГруппаАдминистраторы = Справочники.ГруппыДоступа.СоздатьЭлемент();
		ГруппаАдминистраторы.Наименование = "Администраторы";
		ГруппаАдминистраторы.ИмяПредопределенныхДанных = "Администраторы";
		ГруппаАдминистраторы.ОбменДанными.Загрузка = Истина;
		ГруппаАдминистраторы.Записать();
	КонецПопытки;
КонецПроцедуры
// -CRM fresh

#КонецОбласти