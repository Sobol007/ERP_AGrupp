
#Область ПрограммныйИнтерфейс

// Выполняет запрос.
//
// Параметры:
//  Адрес						 - Строка - Адрес.
//  Метод						 - Строка - Метод.
//  Заголовки					 - Соответствие - Заголовки.
//  ПараметрыЗапроса			 - Структура - Параметры запроса.
//  ИмяФайла					 - Строка - Имя файла.
//  ПоказыватьСообщенияОбОшибках - Булево - Истина, если показывать сообщение об ошибках.
// 
// Возвращаемое значение:
//  HTTPОтвет - Предоставляет доступ к содержимому ответа HTTP-сервера на запрос.
//
Функция ВыполнитьЗапрос(Адрес, Метод, Заголовки, ПараметрыЗапроса = Неопределено, ИмяФайла = "", ПоказыватьСообщенияОбОшибках = Истина) Экспорт
	
	ПараметрыСоединения = ПолучитьПараметрыСоединения(Адрес);
	
	HTTPСоединение = Новый HTTPСоединение(ПараметрыСоединения["Сервер"],
										ПараметрыСоединения["Порт"],
										,
										,
										,
										,
										?(ПараметрыСоединения["ЗащищенноеСоединение"], Новый ЗащищенноеСоединениеOpenSSL, Неопределено));
											
										
	СтрокаПараметров = ?(ПараметрыЗапроса = Неопределено, "", ПолучитьСтрокуПараметров(ПараметрыЗапроса));
	
	Ответ = Неопределено;
										
	Если Метод = "POST" Тогда

		АдресРесурса = ПараметрыСоединения["АдресРесурса"] + ?(СтрокаПараметров = "", "", "?") + СтрокаПараметров;
		
		HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);		
		
		Попытка
			
			Если НЕ ПустаяСтрока(ИмяФайла) Тогда
				
				HTTPЗапрос.УстановитьИмяФайлаТела(ИмяФайла);
				
			КонецЕсли;
			
			Ответ = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос); 
		
		Исключение
			
			CRM_СинхронизацияСервер.ДобавитьЗаписьВЖурнал(ОписаниеОшибки());
		
			Если ПоказыватьСообщенияОбОшибках Тогда
			
				ТекстСообщения = НСтр("de='Anfrage fehlgeschlagen: %1. %2';en='Query service failed: %1. %2';es='Error en el servicio de consulta: %1. %2';fr='Échec du service de la requête : %1. %2';it='Query service fallita: %1. %2';ja='Query service failed: %1. %2';ko='Query service failed: %1. %2';nb='Query service failed: %1. %2';pt='Falha ao consultar: %1. %2';ru='Не удалось выполнить запрос к серверу: %1. %2';zh='Query service failed: %1. %2';vi='Query service failed: %1. %2'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИнформацияОбОшибке().Описание);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2", НСтр("de='Bitte überprüfe deine Internetverbindung und stelle auf deinem Gerät die aktuelle Uhrzeit ein.';en='Please check your Internet connection and set current time on your device.';es='Compruebe su conexión a Internet y establezca la hora actual en su dispositivo.';fr=""Veuillez vérifier votre connexion Internet et régler l'heure actuelle sur votre appareil."";it=""Controllare la connessione e impostare l'ora locale sul tuo dispositivo."";ja='Please check your Internet connection and set current time on your device.';ko='Please check your Internet connection and set current time on your device.';nb='Please check your Internet connection and set current time on your device.';pt='Verifique sua conexão de Internet e configure a hora atual no seu aparelho.';ru='Проверьте соединение с Интернет. Установите корректное время на устройстве.';zh='Please check your Internet connection and set current time on your device.';vi='Please check your Internet connection and set current time on your device.'"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			КонецЕсли; 
			
		КонецПопытки;
		
	ИначеЕсли Метод = "GET" Тогда
		
		АдресРесурса = ПараметрыСоединения["АдресРесурса"] + ?(СтрокаПараметров = "", "", "?") + СтрокаПараметров;
		
		HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);
		
		Попытка
		
			Ответ = HTTPСоединение.Получить(HTTPЗапрос);
		
		Исключение
			
			CRM_СинхронизацияСервер.ДобавитьЗаписьВЖурнал(ОписаниеОшибки());
			
			Если ПоказыватьСообщенияОбОшибках Тогда
				
				ТекстСообщения = НСтр("de='Anfrage fehlgeschlagen: %1. %2';en='Query service failed: %1. %2';es='Error en el servicio de consulta: %1. %2';fr='Échec du service de la requête : %1. %2';it='Query service fallita: %1. %2';ja='Query service failed: %1. %2';ko='Query service failed: %1. %2';nb='Query service failed: %1. %2';pt='Falha ao consultar: %1. %2';ru='Не удалось выполнить запрос к серверу: %1. %2';zh='Query service failed: %1. %2';vi='Query service failed: %1. %2'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИнформацияОбОшибке().Описание);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2", НСтр("de='Bitte überprüfe deine Internetverbindung und stelle auf deinem Gerät die aktuelle Uhrzeit ein.';en='Please check your Internet connection and set current time on your device.';es='Compruebe su conexión a Internet y establezca la hora actual en su dispositivo.';fr=""Veuillez vérifier votre connexion Internet et régler l'heure actuelle sur votre appareil."";it=""Controllare la connessione e impostare l'ora locale sul tuo dispositivo."";ja='Please check your Internet connection and set current time on your device.';ko='Please check your Internet connection and set current time on your device.';nb='Please check your Internet connection and set current time on your device.';pt='Verifique sua conexão de Internet e configure a hora atual no seu aparelho.';ru='Проверьте соединение с Интернет. Установите корректное время на устройстве.';zh='Please check your Internet connection and set current time on your device.';vi='Please check your Internet connection and set current time on your device.'"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
			КонецЕсли;
			
		КонецПопытки;
		
	ИначеЕсли Метод = "PUT" Тогда
		
		АдресРесурса = ПараметрыСоединения["АдресРесурса"] + ?(СтрокаПараметров = "", "", "?") + СтрокаПараметров;
		
		HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);
		
		Если ПустаяСтрока(ИмяФайла) Тогда
		
			HTTPЗапрос.УстановитьТелоИзСтроки("");
			
		Иначе
			
			HTTPЗапрос.УстановитьИмяФайлаТела(ИмяФайла);
		
		КонецЕсли; 
		
		Попытка
		
			Ответ = HTTPСоединение.Записать(HTTPЗапрос);
		
		Исключение
			
			CRM_СинхронизацияСервер.ДобавитьЗаписьВЖурнал(ОписаниеОшибки());
			
			Если ПоказыватьСообщенияОбОшибках Тогда
				
				ТекстСообщения = НСтр("de='Anfrage fehlgeschlagen: %1. %2';en='Query service failed: %1. %2';es='Error en el servicio de consulta: %1. %2';fr='Échec du service de la requête : %1. %2';it='Query service fallita: %1. %2';ja='Query service failed: %1. %2';ko='Query service failed: %1. %2';nb='Query service failed: %1. %2';pt='Falha ao consultar: %1. %2';ru='Не удалось выполнить запрос к серверу: %1. %2';zh='Query service failed: %1. %2';vi='Query service failed: %1. %2'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ИнформацияОбОшибке().Описание);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2", НСтр("de='Bitte überprüfe deine Internetverbindung und stelle auf deinem Gerät die aktuelle Uhrzeit ein.';en='Please check your Internet connection and set current time on your device.';es='Compruebe su conexión a Internet y establezca la hora actual en su dispositivo.';fr=""Veuillez vérifier votre connexion Internet et régler l'heure actuelle sur votre appareil."";it=""Controllare la connessione e impostare l'ora locale sul tuo dispositivo."";ja='Please check your Internet connection and set current time on your device.';ko='Please check your Internet connection and set current time on your device.';nb='Please check your Internet connection and set current time on your device.';pt='Verifique sua conexão de Internet e configure a hora atual no seu aparelho.';ru='Проверьте соединение с Интернет. Установите корректное время на устройстве.';zh='Please check your Internet connection and set current time on your device.';vi='Please check your Internet connection and set current time on your device.'"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
				
			КонецЕсли;
		
		КонецПопытки; 
	
	КонецЕсли;
	
	Возврат Ответ; 

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыСоединения(Знач Адрес)

	Результат = Новый Структура("Сервер, АдресРесурса, Порт, ЗащищенноеСоединение");	
	
	Если Лев(НРег(Адрес), 8) = "https://" Тогда
		
		Результат.Вставить("ЗащищенноеСоединение", Истина);
		
		Адрес = Сред(Адрес, 9);
	
	ИначеЕсли Лев(НРег(Адрес), 7) = "http://" Тогда
		
		Результат.Вставить("ЗащищенноеСоединение", Ложь);
		
		Адрес = Сред(Адрес, 8);
		
	КонецЕсли;
	
	НайденнаяПозиция = Найти(Адрес, "/");
	
	Если НайденнаяПозиция > 0 Тогда
	
		Сервер = Лев(Адрес, НайденнаяПозиция - 1);
		Адрес = Сред(Адрес, НайденнаяПозиция);
		
	Иначе
		
		Сервер = Адрес;
		Адрес = "";
	
	КонецЕсли;
	
	Результат.Вставить("АдресРесурса", Адрес);
	
	НайденнаяПозиция = Найти(Сервер, ":");
	
	Если НайденнаяПозиция > 0 Тогда
	
		Порт = Сред(Сервер, НайденнаяПозиция + 1);
		Сервер = Лев(Сервер, НайденнаяПозиция - 1);
		Результат.Вставить("Порт", Порт);
	
	КонецЕсли;
	
	Результат.Вставить("Сервер", Сервер);
	
	Возврат Результат;

КонецФункции // ПолучитьПараметрыСоединения()

Функция ПолучитьСтрокуПараметров(ПараметрыЗапроса, Разделитель = "&") Экспорт

	Результат = "";
	
	Для Каждого ЭлементКоллекции Из ПараметрыЗапроса Цикл
		
		Если Не ПустаяСтрока(Результат) Тогда
			
			Результат = Результат + Разделитель;
			
		КонецЕсли;
		
		Результат = Результат + ЭлементКоллекции.Ключ + "=" + КодироватьСтроку(ЭлементКоллекции.Значение, СпособКодированияСтроки.КодировкаURL);
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ПолучитьСтрокуПараметров()

Функция ПолучитьОбъектИзТекстаJSON(Текст) Экспорт
	
	Объект = ПолучитьОбъектJSON(РаскодироватьСтрокуUnicode(Текст));
	
	Возврат Объект;

КонецФункции // ПолучитьОбъектИзТекстаJSON() 
	
Функция ПолучитьОбъектJSON(Текст)
		
	Возврат CRM_СинхронизацияСервер.ЗначениеИзСтрокиJSON(Текст, Истина,, "ВосстановлениеЗначенийJSON", CRM_ВзаимодействиеСИнтернетСервер);

КонецФункции

Функция ВосстановлениеЗначенийJSON(Свойство, Значение, ДополнительныеПараметры) Экспорт 

	Результат = Неопределено;
	
	Попытка
	
		Результат = ПрочитатьДатуJSON(Значение, ФорматДатыJSON.ISO);
	
	Исключение
		
		Результат = Значение;
	
	КонецПопытки; 
	
	Возврат Результат;

КонецФункции // ВосстановлениеЗначенийJSON()

Функция ПолучитьТекстИзОбъектаJSON(ОбъектJSON) Экспорт

	Текст = КодироватьСтрокуUnicode(ПолучитьТекстJSON(ОбъектJSON));
	
	Возврат Текст;

КонецФункции // ПолучитьТекстИзОбъектаJSON()

Функция ПолучитьТекстJSON(ОбъектJSON)

	Результат = "";
	
	Если ТипЗнч(ОбъектJSON) = Тип("Null") Тогда
		
		Результат = "null";
		
	ИначеЕсли ТипЗнч(ОбъектJSON) = Тип("Булево") Тогда
		
		Результат = Формат(ОбъектJSON, "БЛ=false; БИ=true");
		
	ИначеЕсли ТипЗнч(ОбъектJSON) = Тип("Строка") Тогда
		
		Результат = """" + ОбъектJSON + """";
		
	ИначеЕсли ТипЗнч(ОбъектJSON) = Тип("Число") Тогда
		
		Результат = Формат(ОбъектJSON, "ЧРД=.; ЧН=0; ЧГ=0");
		
	ИначеЕсли ТипЗнч(ОбъектJSON) = Тип("Дата") Тогда
		
		Результат = Формат(ОбъектJSON, "ДФ=yyyy-MM-ddTHH:ss");
		
	ИначеЕсли ТипЗнч(ОбъектJSON) = Тип("Массив") Тогда
		
		Результат = Результат + "[";
		
		Разделитель = "";
		
		Для каждого Значение Из ОбъектJSON Цикл			
			
			Результат = Результат + Разделитель + ПолучитьТекстJSON(Значение);
			
			Если ПустаяСтрока(Разделитель) Тогда
			
				Разделитель = ",";
			
			КонецЕсли; 
		
		КонецЦикла; 
		
		Результат = Результат + "]";
		
	ИначеЕсли ТипЗнч(ОбъектJSON) = Тип("Структура") Тогда
		
		Результат = Результат + "{";
		
		Разделитель = "";
		
		Для каждого КлючИЗначение Из ОбъектJSON Цикл			
			
			Результат = Результат + Разделитель + """" + КлючИЗначение.Ключ + """:" + ПолучитьТекстJSON(КлючИЗначение.Значение);
			
			Если ПустаяСтрока(Разделитель) Тогда
			
				Разделитель = ",";
			
			КонецЕсли; 
		
		КонецЦикла; 
		
		Результат = Результат + "}"
		
	КонецЕсли;	
	
	Возврат Результат;

КонецФункции // ПолучитьТекстЗначенияJSON() 

Функция КодироватьСтрокуUnicode(Значение)

	Результат = "";
	
	Для НомерСимвола = 1 По СтрДлина(Значение) Цикл
		
		Символ = Сред(Значение, НомерСимвола, 1);
		КодСимвола = КодСимвола(Символ);		
		
		Результат = Результат + ?(КодСимвола > 127, "\u" + НРег(DecToHex(КодСимвола)), Символ); 
	
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции // КодироватьСтрокуUnicode()

Функция РаскодироватьСтрокуUnicode(Знач Значение)
	
	СтрокаПоиска = "\u";
	
	НомерСимвола = СтрНайти(Значение, СтрокаПоиска);
	
	ПозицияПоиска = 1;
	
	СигнатураПоиска = "\u****";
	
	Пока НомерСимвола <> 0 Цикл
		
		Символ = Сред(Значение, НомерСимвола, 1);
		
		Если Символ = "\"
			И СоответствуетСигнатуре(Значение, НомерСимвола, СигнатураПоиска) Тогда			
			
			КодСимволаHEX = Сред(Значение, НомерСимвола + 2, 4);		
			
			ТекстСимвола = СтрокаПоиска + КодСимволаHEX;
			
			Значение = СтрЗаменить(Значение, ТекстСимвола, Символ(HexToDec(КодСимволаHEX))); 
			
			ПозицияПоиска = НомерСимвола;
			
		Иначе
			
			ПозицияПоиска = НомерСимвола + 2;
		
		КонецЕсли;	
		
		НомерСимвола = СтрНайти(Значение, СтрокаПоиска,, ПозицияПоиска);
	
	КонецЦикла; 
	
	Возврат Значение;

КонецФункции // РаскодироватьСтрокуUnicode() 

Функция СоответствуетСигнатуре(Значение, ПозицияСимвола, Сигнатура)

	Результат = Истина;
	
	Для НомерСимвола = 1 По СтрДлина(Сигнатура) Цикл
		
		Символ = Сред(Значение, ПозицияСимвола + НомерСимвола - 1, 1);
		СимволСигнатуры = Сред(Сигнатура, НомерСимвола, 1);
		
		Если Символ <> СимволСигнатуры
			И СимволСигнатуры <> "*"
			И Найти("0123456789ABCDEF", ВРег(Символ) = 0) Тогда
		
			Результат = Ложь;
			Прервать;
		
		КонецЕсли;
	
	КонецЦикла; 
	
	Возврат Результат;

КонецФункции // СоответствуетСигнатуре()

Функция DecToHex(Знач Значение)

	Результат = "";
	
	Пока Истина Цикл
		
		Результат = Сред("0123456789ABCDEF", Значение % 16 + 1, 1) + Результат;
		
		Если Значение = 0 Тогда			
			
			Прервать;
			
		Иначе			
			
			Значение = Цел(Значение / 16);
			
		КонецЕсли;
		
	КонецЦикла; 
	
	Если ПустаяСтрока(Результат) Тогда
		
		Результат = "0";
		
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции // DecToHex()

Функция HexToDec(Знач Значение)

	Результат = 0;
	
	Основание = 1;
	Значение = ВРег(Значение);
	
	НомерСимвола = СтрДлина(Значение);
	
	Пока НомерСимвола > 0 Цикл
		
		Результат = Результат + (Найти("0123456789ABCDEF", Сред(Значение, НомерСимвола, 1)) - 1) * Основание;
		
		Основание = Основание * 16;
		
		НомерСимвола = НомерСимвола - 1;
	
	КонецЦикла; 
	
	Возврат Результат;

КонецФункции // HexToDec()

#КонецОбласти