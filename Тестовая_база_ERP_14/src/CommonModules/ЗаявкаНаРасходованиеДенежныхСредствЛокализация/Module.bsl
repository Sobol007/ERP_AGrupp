
#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения) Экспорт

	//++ Локализация
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	
	//++ НЕ УТ
	Если ТипОснования = Тип("СправочникСсылка.ДоговорыЛизинга") Тогда
		ЗаполнитьПоДоговоруЛизинга(Объект, ДанныеЗаполнения, ДанныеЗаполнения);
	КонецЕсли;
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры
 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТ

Процедура ЗаполнитьПоДоговоруЛизинга(Объект, Знач ДокументОснование, ДанныеЗаполнения)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Ссылка КАК Договор,
	|
	|	ЛОЖЬ КАК ФормаОплатыНаличная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			И ДанныеДокумента.БанковскийСчетКонтрагента <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ФормаОплатыБезналичная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			И ДанныеДокумента.БанковскийСчетКонтрагента <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ФормаОплатыЗаявки,
	|
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет,
	|	ДанныеДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств
	|	ИНАЧЕ
	|		ДанныеДокумента.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК Валюта,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю) КАК ХозяйственнаяОперация,
	|	&Ссылка КАК ДокументОснование,
	|	&Ссылка КАК ДоговорЛизинга,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.СтавкаНДС КАК СтавкаНДС
	|	
	|ИЗ
	|	Справочник.ДоговорыЛизинга КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеЗаполнения = Новый Структура;
	Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеЗаполнения.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
	
	ДанныеЗаполнения.Вставить("ЖелательнаяДатаПлатежа");
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения.ФормаОплатыЗаявки) Тогда
		ДанныеЗаполнения.ФормаОплатыНаличная = Истина;
		ДанныеЗаполнения.ФормаОплатыБезналичная = Истина;
	КонецЕсли;
	
	ДенежныеСредстваСервер.ЗаполнитьРеквизитыДокументаПоФормеОплаты(ДанныеЗаполнения.ФормаОплатыЗаявки, ДанныеЗаполнения);
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения.Валюта) Тогда
		Объект.БанковскийСчетКонтрагента = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(
			ДанныеЗаполнения.Контрагент,
			ДанныеЗаполнения.Валюта);
	Иначе
		Объект.БанковскийСчетКонтрагента = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(
			ДанныеЗаполнения.Контрагент);
	КонецЕсли;

	РеквизитыСчета = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьРеквизитыБанковскогоСчета(
		Объект.БанковскийСчетКонтрагента);
		
	Объект.НазначениеПлатежа = РеквизитыСчета.ТекстНазначения;
	
	ЗаполнитьЗначенияСвойств(Объект.РасшифровкаПлатежа.Добавить(), Выборка);
	
	СуммаДокумента = Объект.РасшифровкаПлатежа.Итог("Сумма");
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти
