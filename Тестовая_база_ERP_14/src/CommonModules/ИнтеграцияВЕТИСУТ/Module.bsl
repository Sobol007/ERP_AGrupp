
#Область ПрограммныйИнтерфейс

// Копирует связь между номенклатурой и продукцией ВЕТИС для новой позиции номенклатуры.
//
// Параметры:
//	Источник						 - СправочникСсылка.Номенклатура - Номенклатура для которой существует связь.
//	Приемник						 - СправочникСсылка.Номенклатура - Номенклатура, для которой копируется связь.
//	УстановитьСвязиДляХарактеристик	 - Булево - Требуется ли задать связь для характеристик номенклатуры-приемника.
//	СоответствиеСоздаваемыхОбъектов	 - Соответствие - соответствие характеристик номенклатуры-приемника характеристикам номенклатуры-источника.
//
Процедура КопироватьСвязьСКлассификаторомПродукцииВЕТИС(Источник, Приемник, УстановитьСвязиДляХарактеристик, СоответствиеСоздаваемыхОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА &УстановитьСвязиДляХарактеристик
	|			ТОГДА СоответствиеНоменклатурыВЕТИС.Характеристика
	|		ИНАЧЕ &ПустаяХарактеристика
	|	КОНЕЦ КАК ХарактеристикаИсточник,
	|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|ГДЕ
	|	СоответствиеНоменклатурыВЕТИС.Номенклатура = &НоменклатураИсточник";
	
	Запрос.УстановитьПараметр("НоменклатураИсточник", Источник);
	Запрос.УстановитьПараметр("УстановитьСвязиДляХарактеристик", УстановитьСвязиДляХарактеристик);
	Запрос.УстановитьПараметр("ПустаяХарактеристика", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип.ПривестиЗначение());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыВЕТИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Приемник);
	
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Номенклатура   = Приемник;
		НоваяЗапись.Характеристика = СоответствиеСоздаваемыхОбъектов.Получить(Выборка.ХарактеристикаИсточник);
		НоваяЗапись.Продукция      = Выборка.Продукция;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Возвращает единицу измерения по ОКЕИ.
//
// Параметры:
//	КодОКЕИ - ОпределяемыйТип.СтрокаВЕТИС - Код ОКЕИ.
//
// Возвращаемое значение:
//	СправочникСсылка.ЕдиницаИзмерения, Неопределено - Единица измерения по ОКЕИ.
//
Функция ЕдиницаИзмеренияОКЕИ(Знач КодОКЕИ) Экспорт
	
	КодОКЕИ = СокрЛП(КодОКЕИ);
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕдиницыИзмерения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Код = &КодОКЕИ";
	
	Запрос.УстановитьПараметр("КодОКЕИ", КодОКЕИ);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ЕдиницаИзмерения = Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЕдиницаИзмерения = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ЕдиницаИзмерения;
	
КонецФункции

// Создает единицу измерения по ОКЕИ.
//
// Параметры:
//	КодОКЕИ - ОпределяемыйТип.СтрокаВЕТИС - Код ОКЕИ.
//
// Возвращаемое значение:
//	СправочникСсылка.ЕдиницаИзмерения, Неопределено - Единица измерения по ОКЕИ.
//
Функция СоздатьЕдиницуИзмеренияПоКлассификаторуОКЕИ(КодОКЕИ) Экспорт
	
	ДеревоДанныхКлассификатора = Справочники.УпаковкиЕдиницыИзмерения.ПолучитьДанныеКлассификатора();
	
	ДанныеКлассификатора = ОбщегоНазначенияУТ.ДанныеДерева(ДеревоДанныхКлассификатора, 2);
	СтрокаКлассификатора = ДанныеКлассификатора.Найти(КодОКЕИ, "КодЧисловой");
	
	ЕдиницаИзмерения = Неопределено;
	
	НачатьТранзакцию();
	
	Попытка
		
		Если ЗначениеЗаполнено(СтрокаКлассификатора.УсловноеОбозначениеНациональное) Тогда
			Наименование = СтрокаКлассификатора.УсловноеОбозначениеНациональное;
		ИначеЕсли ЗначениеЗаполнено(СтрокаКлассификатора.УсловноеОбозначениеМеждународное) Тогда
			Наименование = СтрокаКлассификатора.УсловноеОбозначениеМеждународное;
		ИначеЕсли ЗначениеЗаполнено(СтрокаКлассификатора.КодовоеБуквенноеОбозначениеНациональное) Тогда
			Наименование = СтрокаКлассификатора.КодовоеБуквенноеОбозначениеНациональное;
		ИначеЕсли ЗначениеЗаполнено(СтрокаКлассификатора.КодовоеБуквенноеОбозначениеМеждународное) Тогда
			Наименование = СтрокаКлассификатора.КодовоеБуквенноеОбозначениеМеждународное;
		Иначе
			Наименование = СтрокаКлассификатора.Наименование;
		КонецЕсли;
		
		СправочникОбъект = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
		СправочникОбъект.Заполнить(Неопределено);
		
		СправочникОбъект.Владелец                = Справочники.НаборыУпаковок.БазовыеЕдиницыИзмерения;
		СправочникОбъект.Код                     = СокрЛП(СтрокаКлассификатора.КодЧисловой);
		СправочникОбъект.Наименование            = СтрЗаменить(Наименование, Символы.ПС, "/");
		СправочникОбъект.НаименованиеПолное      = СтрЗаменить(СтрокаКлассификатора.Наименование, Символы.ПС, "/");
		СправочникОбъект.МеждународноеСокращение = СтрЗаменить(СтрокаКлассификатора.КодовоеБуквенноеОбозначениеМеждународное,
																Символы.ПС,
																"/");
		СправочникОбъект.Числитель               = СтрокаКлассификатора.Числитель;
		СправочникОбъект.Знаменатель             = СтрокаКлассификатора.Знаменатель;
		
		Если ЗначениеЗаполнено(СтрокаКлассификатора.ТипИзмеряемойВеличины) Тогда
			ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин[СтрокаКлассификатора.ТипИзмеряемойВеличины];
			
			СправочникОбъект.ТипИзмеряемойВеличины = ТипИзмеряемойВеличины;
		КонецЕсли;
		
		СправочникОбъект.Записать();
		
		ЕдиницаИзмерения = СправочникОбъект.Ссылка;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		КодОсновногоЯзыка = ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка();
		ИмяСобытия = НСтр("ru = 'Создание единицы измерения по классификатору.';
							|en = 'Create a unit of measure by classifier.'", КодОсновногоЯзыка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , ,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	Возврат ЕдиницаИзмерения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьТабличнуюЧастьДокумента(ТабличнаяЧасть, РезультатЗапроса, ДанныеЗаполнения, СоответствиеКолонокКоличествоВЕТИС, БезСопоставления = Истина, ДополнительныеПараметры = Неопределено)
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'В %1 отсутствует продукция для заполнения.';
				|en = 'No products for filling in %1.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	КэшированныеЗначения               = Новый Структура("КоэффициентыУпаковок", Новый Соответствие);
	КолонкиТабличнойЧасти              = ТабличнаяЧасть.Выгрузить(Новый Структура("НомерСтроки",Ложь));
	ЕстьЕдиницаИзмеренияВЕТИС          = КолонкиТабличнойЧасти.Колонки.Найти("ЕдиницаИзмеренияВЕТИС") <> Неопределено;
	ЕстьИдентификаторСтроки            = КолонкиТабличнойЧасти.Колонки.Найти("ИдентификаторСтроки") <> Неопределено;
	ЕстьСрокГодностиТочностьЗаполнения = КолонкиТабличнойЧасти.Колонки.Найти("СрокГодностиТочностьЗаполнения") <> Неопределено;
	ЕстьСрокГодностиСтрока             = КолонкиТабличнойЧасти.Колонки.Найти("СрокГодностиСтрока") <> Неопределено;
	ЕстьСрокГодностиНачалоПериода      = КолонкиТабличнойЧасти.Колонки.Найти("СрокГодностиНачалоПериода") <> Неопределено;
	ЕстьСрокГодностиКонецПериода       = КолонкиТабличнойЧасти.Колонки.Найти("СрокГодностиКонецПериода") <> Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Продукция) ИЛИ БезСопоставления Тогда
			
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если ЗначениеЗаполнено(Выборка.Продукция)
				И (ИнтеграцияВЕТИСВызовСервера.ПродукцияПринадлежитТипуЖивыеЖивотные(Выборка.Продукция)
				Или (ЕстьСрокГодностиТочностьЗаполнения
				И ИнтеграцияВЕТИСКлиентСервер.ТочностьЗаполненияБезДаты(НоваяСтрока.СрокГодностиТочностьЗаполнения))) Тогда
				
				Если ЕстьСрокГодностиТочностьЗаполнения Тогда
					НоваяСтрока.СрокГодностиТочностьЗаполнения = Перечисления.ТочностьЗаполненияПериодаВЕТИС.Неприменимо;
				КонецЕсли;
				
				Если ЕстьСрокГодностиСтрока Тогда
					НоваяСтрока.СрокГодностиСтрока = "";
				КонецЕсли;
				
				Если ЕстьСрокГодностиНачалоПериода Тогда
					НоваяСтрока.СрокГодностиНачалоПериода = 0;
				КонецЕсли;
				
				Если ЕстьСрокГодностиКонецПериода Тогда
					НоваяСтрока.СрокГодностиКонецПериода = 0;
				КонецЕсли;
			
			КонецЕсли;
			
			Если ЕстьЕдиницаИзмеренияВЕТИС Тогда
				ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(НоваяСтрока);
			КонецЕсли;
			
			Если ЕстьИдентификаторСтроки Тогда
				НоваяСтрока.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			КонецЕсли;
			//Связанные табличные части
			Если НЕ(ДополнительныеПараметры = Неопределено) Тогда
				Если ДополнительныеПараметры.Свойство("Производители")И ЗначениеЗаполнено(Выборка.Производитель) Тогда
					НоваяСтрокаПроизводитель = ДополнительныеПараметры.Производители.Добавить();
					НоваяСтрокаПроизводитель.Производитель             = Выборка.Производитель;
					НоваяСтрокаПроизводитель.ИдентификаторСтрокиТовары = НоваяСтрока.ИдентификаторСтроки;
					Если ЗначениеЗаполнено(Выборка.ИдентификаторСтраны) Тогда
						НоваяСтрока.СтранаПроизводства = ИнтеграцияВЕТИСПовтИсп.СтранаМира(Выборка.ИдентификаторСтраны);
					КонецЕсли;
				КонецЕсли;
				Если ДополнительныеПараметры.Свойство("ПроизводственныеПартии")И ЗначениеЗаполнено(Выборка.ИдентификаторПартии) Тогда
					НоваяСтрокаПартия = ДополнительныеПараметры.ПроизводственныеПартии.Добавить();
					НоваяСтрокаПартия.ИдентификаторПартии       = Выборка.ИдентификаторПартии;
					НоваяСтрокаПартия.ИдентификаторСтрокиТовары = НоваяСтрока.ИдентификаторСтроки;
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Выборка, "Номенклатура") Тогда
				
				ТабличнаяЧасть.Очистить();
				
				ТекстОшибки = НСтр("ru = 'Не выполнено сопоставление %Номенклатура% классификатору номенклатуры ВетИС.';
									|en = '%Номенклатура% mapping is not carried out for VetIS product classifier.'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%", Выборка.Номенклатура);
				
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьЕдиницаИзмеренияВЕТИС Тогда
		
		ДанныеДляПересчета = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентыЕдиницИзмеренияПоВЕТИС(ТабличнаяЧасть);
		
		Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
			Для Каждого Колонка Из СоответствиеКолонокКоличествоВЕТИС Цикл
				
				Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда
					СтрокаТабличнойЧасти[Колонка.Значение] = Неопределено;
				ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмеренияВЕТИС) Тогда
					СтрокаТабличнойЧасти[Колонка.Значение] = Неопределено;
				Иначе
					ДанныеЕдиницыИзмерения = ДанныеДляПересчета.Получить(СтрокаТабличнойЧасти.Номенклатура).Получить(СтрокаТабличнойЧасти.ЕдиницаИзмеренияВЕТИС);
					Если ДанныеЕдиницыИзмерения.КодОшибки <> 0 Тогда
						СтрокаТабличнойЧасти[Колонка.Значение] = Неопределено;
					КонецЕсли;
			
					СтрокаТабличнойЧасти[Колонка.Значение] = СтрокаТабличнойЧасти[Колонка.Ключ] / ДанныеЕдиницыИзмерения.Коэффициент;
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#Область ВходящаяТранспортнаяОперацияВЕТИС

Процедура ОбработкаЗаполненияДокументаВходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Возврат;
	
КонецПроцедуры

Функция ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Грузоотправитель,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Контрагент,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Грузополучатель,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Организация,
	|	ПредприятияОтправителя.ТорговыйОбъект                                             КАК ГрузоотправительПредприятие,
	|	ПредприятияОтправителя.ТорговыйОбъект                                             КАК Партнер,
	|	ПредприятияПолучателя.ТорговыйОбъект                                              КАК ГрузополучательПредприятие,
	|	ПредприятияПолучателя.ТорговыйОбъект                                              КАК Склад,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                     КАК ГрузоотправительПодразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                      КАК ГрузополучательПодразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                      КАК Подразделение,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ПеревозчикХозяйствующийСубъект.Контрагент       КАК Перевозчик,
	|	ВходящаяТранспортнаяОперацияВЕТИС.СерияТТН                                        КАК СерияТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ДатаТТН                                         КАК ДатаТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.НомерТТН                                        КАК НомерТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ТипТТН                                          КАК ТипТТН,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Комментарий                                     КАК Комментарий,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Дата                                            КАК Дата,
	|	ВходящаяТранспортнаяОперацияВЕТИС.Товары.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Номенклатура.СтавкаНДС                        КАК СтавкаНДС,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Серия,
	|		Количество * ВЫБОР КОГДА КоличествоВЕТИС > 0 ТОГДА (КоличествоВЕТИС-ВозвращаемоеКоличествоВЕТИС)/КоличествоВЕТИС ИНАЧЕ 1 КОНЕЦ КАК Количество,
	|		Количество * ВЫБОР КОГДА КоличествоВЕТИС > 0 ТОГДА (КоличествоВЕТИС-ВозвращаемоеКоличествоВЕТИС)/КоличествоВЕТИС ИНАЧЕ 1 КОНЕЦ КАК КоличествоУпаковок,
	|		ИдентификаторСтроки                           КАК ИдентификаторСтроки,
	|		ЛОЖЬ                                          КАК БылоУточнение
	|	) КАК Товары,
	|	ВходящаяТранспортнаяОперацияВЕТИС.ТоварыУточнение.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Номенклатура.СтавкаНДС                        КАК СтавкаНДС,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Серия,
	|		Количество                                    КАК Количество,
	|		Количество                                    КАК КоличествоУпаковок,
	|		ИдентификаторСтроки                           КАК ИдентификаторСтроки
	|	) КАК ТоварыУточнение
	|ИЗ
	|	Документ.ВходящаяТранспортнаяОперацияВЕТИС КАК ВходящаяТранспортнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияОтправителя
	|		ПО ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект = ПредприятияОтправителя.Ссылка
	|			И ВходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительПредприятие = ПредприятияОтправителя.Предприятие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияПолучателя
	|		ПО ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект = ПредприятияПолучателя.Ссылка
	|			И ВходящаяТранспортнаяОперацияВЕТИС.ГрузополучательПредприятие = ПредприятияПолучателя.Предприятие
	|ГДЕ
	|	ВходящаяТранспортнаяОперацияВЕТИС.Ссылка = &Ссылка";
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(ДанныеЗаполнения, ЕстьСерии = Ложь, ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",                        ДанныеЗаполнения.Товары.Выгрузить());
	Результат.Вставить("ТоварыУточнение",               ДанныеЗаполнения.ТоварыУточнение.Выгрузить());
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЗаполнитьСклад");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,ДанныеЗаполнения)
	
	ДокументОбъект.Товары.Очистить();
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		ДокументОбъект[ИмяТЧСерии].Очистить();
	КонецЕсли;
	
	ДанныеЗаполнения.Товары.Индексы.Добавить("ИдентификаторСтроки");
	
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.ТоварыУточнение Цикл 
		
		ИсходнаяСтрока = ДанныеЗаполнения.Товары.НайтиСтроки(Новый Структура("ИдентификаторСтроки",СтрокаТовары.ИдентификаторСтроки));
		Если ИсходнаяСтрока.Количество() = 0 Тогда 
			ИсходнаяСтрока = Новый Структура;
		Иначе 
			ИсходнаяСтрока = ИсходнаяСтрока[0];
			ИсходнаяСтрока.БылоУточнение = Истина;
		КонецЕсли;
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,ИсходнаяСтрока);
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,СтрокаТовары);
		Если ДанныеЗаполнения.Свойство("ЗаполнитьСклад")Тогда 
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаТовары Из ДанныеЗаполнения.Товары.НайтиСтроки(Новый Структура("БылоУточнение",Ложь))Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,СтрокаТовары);
		Если ДанныеЗаполнения.Свойство("ЗаполнитьСклад")Тогда 
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		Для Каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
			Если ЗначениеЗаполнено(СтрокаТовары.Серия) Тогда
				НоваяСтрокаСерия = ДокументОбъект[ИмяТЧСерии].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерия,СтрокаТовары);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ИсходящаяТранспортнаяОперацияВЕТИС

Процедура ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ТорговыйОбъект = РеквизитыДокумента.СкладОтправитель;
		
		Грузоотправитель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
			РеквизитыДокумента.Грузоотправитель, РеквизитыДокумента.СкладОтправитель);
		ДокументОбъект.ГрузоотправительХозяйствующийСубъект = Грузоотправитель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузоотправительПредприятие          = Грузоотправитель.Предприятие;
		
		Грузополучатель = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
			РеквизитыДокумента.Грузополучатель, РеквизитыДокумента.СкладПолучатель);
		ДокументОбъект.ГрузополучательХозяйствующийСубъект = Грузополучатель.ХозяйствующийСубъект;
		ДокументОбъект.ГрузополучательПредприятие          = Грузополучатель.Предприятие;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии)
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияИсходящейТранспортнойОперацииИзПрикладногоДокумента(ИмяДокумента,ЕстьСерии);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",             ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",     ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",       Документы.ИсходящаяТранспортнаяОперацияВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",           Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	Запрос.УстановитьПараметр("БлагополучиеМестности", НСтр("ru = 'Местность благополучна по заразным болезням животных';
															|en = 'Area is safe in terms of contagious animal diseases'"));
	
	КолонкиКоличествоВЕТИС = Новый Структура;
	КолонкиКоличествоВЕТИС.Вставить("Количество","КоличествоВЕТИС");
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличествоВЕТИС);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияИсходящейТранспортнойОперацииИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии)
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовВЕТИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура                                                  КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика                                                КАК Характеристика,
	|	ТоварыКОформлению.Серия                                                         КАК Серия,
	|	СопоставленныеПозиции.Продукция                                                  КАК Продукция,
	|	ЗНАЧЕНИЕ(Перечисление.РезультатыЛабораторныхИсследованийВЕТИС.НеПодвергнутаВСЭ) КАК ЭкспертизаРезультат,
	|	&БлагополучиеМестности                                                          КАК БлагополучиеМестности,
	|	СУММА(ТоварыКОформлению.Количество)                                             КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)                                             КАК КоличествоВЕТИС
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.Продукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	Возврат ТекстЗапроса;
КонецФункции

Функция ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Грузоотправитель,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект.Контрагент КАК Организация,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Грузополучатель,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект.Контрагент  КАК Контрагент,
	|	ПредприятияОтправителя.ТорговыйОбъект                                              КАК ГрузоотправительПредприятие,
	|	ПредприятияОтправителя.ТорговыйОбъект                                              КАК Склад,
	|	ПредприятияПолучателя.ТорговыйОбъект                                               КАК ГрузополучательПредприятие,
	|	ПредприятияПолучателя.ТорговыйОбъект                                               КАК Партнер,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                      КАК ГрузоотправительПодразделение,
	|	ПредприятияОтправителя.ПроизводственныйОбъект                                      КАК Подразделение,
	|	ПредприятияПолучателя.ПроизводственныйОбъект                                       КАК ГрузополучательПодразделение,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ПеревозчикХозяйствующийСубъект.Контрагент       КАК Перевозчик,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.СерияТТН                                        КАК СерияТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ДатаТТН                                         КАК ДатаТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.НомерТТН                                        КАК НомерТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.ТипТТН                                          КАК ТипТТН,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Комментарий                                     КАК Комментарий,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Дата                                            КАК Дата,
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Товары.(
	|		Номенклатура                                  КАК Номенклатура,
	|		Номенклатура.СтавкаНДС                        КАК СтавкаНДС,
	|		Характеристика                                КАК Характеристика,
	|		Серия                                         КАК Серия,
	|		Количество                                    КАК Количество,
	|		Количество                                    КАК КоличествоУпаковок
	|	) КАК Товары
	|ИЗ
	|	Документ.ИсходящаяТранспортнаяОперацияВЕТИС КАК ИсходящаяТранспортнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияОтправителя
	|		ПО ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительХозяйствующийСубъект = ПредприятияОтправителя.Ссылка
	|			И ИсходящаяТранспортнаяОперацияВЕТИС.ГрузоотправительПредприятие = ПредприятияОтправителя.Предприятие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ПредприятияПолучателя
	|		ПО ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательХозяйствующийСубъект = ПредприятияПолучателя.Ссылка
	|			И ИсходящаяТранспортнаяОперацияВЕТИС.ГрузополучательПредприятие = ПредприятияПолучателя.Предприятие
	|ГДЕ
	|	ИсходящаяТранспортнаяОперацияВЕТИС.Ссылка = &Ссылка";
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(ДанныеЗаполнения,ЕстьСерии = Ложь,ЕстьСкладВТабличнойЧасти = Ложь)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",              ДанныеЗаполнения.Товары.Выбрать());
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	Если ЕстьСкладВТабличнойЧасти Тогда
		Результат.Вставить("ЗаполнитьСклад");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,ДанныеЗаполнения)
	
	ДокументОбъект.Товары.Очистить();
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		ДокументОбъект[ИмяТЧСерии].Очистить();
	КонецЕсли;
	
	Пока ДанныеЗаполнения.Товары.Следующий() Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,ДанныеЗаполнения.Товары);
		Если ДанныеЗаполнения.Свойство("ЗаполнитьСклад")Тогда 
			НоваяСтрокаТовары.Склад = ДокументОбъект.Склад;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("ЕстьСерии") И ЗначениеЗаполнено(НоваяСтрокаТовары.Серия) Тогда
			НоваяСтрокаСерия = ДокументОбъект[ИмяТЧСерии].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерия,НоваяСтрокаТовары);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаИсходящаяТранспортнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииВозвратаТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПередачиТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	//++ НЕ УТКА
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаДавальцу")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПередачиДавальцу(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратСырьяДавальцу")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииВозвратаСырьяДавальцу(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	//-- НЕ УТКА
	//++ НЕ УТ
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ДвижениеПродукцииИМатериалов")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииДвиженияПродукцииИМатериалов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаСырьяПереработчику")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПередачиСырьяПереработчику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтгрузкаТоваровСХранения")Тогда 
		ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииОтгрузкиТоваровСХранения(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	//-- НЕ УТ
	КонецЕсли;

	Документы.ИсходящаяТранспортнаяОперацияВЕТИС.ЗаполнитьЗаписиСкладскогоЖурнала(ДокументОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииВозвратаТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК СкладОтправитель,
	|	ДокументОснование.Склад                 КАК СкладПолучатель
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ВозвратТоваровМеждуОрганизациями", Ложь)
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.Контрагент            КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК СкладОтправитель,
	|	ДокументОснование.Партнер               КАК СкладПолучатель
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ВозвратТоваровПоставщику", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПередачиТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК СкладОтправитель,
	|	ДокументОснование.Склад                 КАК СкладПолучатель
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ПередачаТоваровМеждуОрганизациями", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка                КАК ДокументОснование,
	|	ПеремещениеТоваров.Номер                 КАК НомерТТН,
	|	ПеремещениеТоваров.Дата                  КАК ДатаТТН,
	|	НЕ ПеремещениеТоваров.Проведен           КАК ЕстьОшибкиПроведен,
	|	ПеремещениеТоваров.Организация           КАК Грузоотправитель,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК Грузополучатель,
	|	ПеремещениеТоваров.СкладОтправитель      КАК СкладОтправитель,
	|	ПеремещениеТоваров.СкладПолучатель       КАК СкладПолучатель,
	|	ПеремещениеТоваров.Ответственный         КАК Ответственный
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ПеремещениеТоваров", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.Контрагент            КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК СкладОтправитель,
	|	ДокументОснование.Партнер               КАК СкладПолучатель
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "РеализацияТоваровУслуг", Истина);
	
КонецПроцедуры

//++ НЕ УТ
Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииДвиженияПродукцииИМатериалов(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	ДокументСсылка.Номер         КАК НомерТТН,
	|	ДокументСсылка.Дата          КАК ДатаТТН,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ВЫБОР
	|		КОГДА ДокументСсылка.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ДокументСсылка.Организация
	|		ИНАЧЕ ДокументСсылка.ОрганизацияПолучатель
	|	КОНЕЦ                        КАК Грузополучатель,
	|	ДокументСсылка.Организация   КАК Грузоотправитель,
	|	ДокументСсылка.Отправитель   КАК СкладОтправитель,
	|	ДокументСсылка.Получатель    КАК СкладПолучатель
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ДвижениеПродукцииИМатериалов", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПередачиСырьяПереработчику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.Организация           КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК СкладОтправитель,
	|	ДокументОснование.Партнер               КАК СкладПолучатель
	|ИЗ
	|	Документ.ПередачаСырьяПереработчику КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ПередачаСырьяПереработчику", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииОтгрузкиТоваровСХранения(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.Контрагент            КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК СкладОтправитель,
	|	ДокументОснование.Склад                 КАК СкладПолучатель
	|ИЗ
	|	Документ.ОтгрузкаТоваровСХранения КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ОтгрузкаТоваровСХранения", Истина);
	
КонецПроцедуры
//-- НЕ УТ

//++ НЕ УТКА
Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииВозвратаСырьяДавальцу(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка                КАК ДокументОснование,
	|	ДокументСсылка.Номер                 КАК НомерТТН,
	|	ДокументСсылка.Дата                  КАК ДатаТТН,
	|	НЕ ДокументСсылка.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Менеджер              КАК Ответственный,
	|	ДокументСсылка.Контрагент            КАК Грузополучатель,
	|	ДокументСсылка.Контрагент            КАК Грузоотправитель,
	|	ДокументСсылка.Склад                 КАК СкладОтправитель,
	|	ДокументСсылка.Партнер               КАК СкладПолучатель
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ВозвратСырьяДавальцу", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьИсходящуюТранспортнуюОперациюВЕТИСНаОснованииПередачиДавальцу(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.Контрагент            КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК СкладОтправитель,
	|	ДокументОснование.Партнер               КАК СкладПолучатель
	|ИЗ
	|	Документ.ПередачаДавальцу КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьИсходящейТранспортнойОперации(ДокументОбъект, ДанныеЗаполнения, "ПередачаДавальцу", Истина);
	
КонецПроцедуры
//-- НЕ УТКА

#КонецОбласти

#Область ИнвентаризацияПродукцииВЕТИС

Процедура ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		РеквизитыВЕТИС = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
			РеквизитыДокумента.Организация, РеквизитыДокумента.ТорговыйОбъект);
		ЗаполнитьЗначенияСвойств(ДокументОбъект,РеквизитыВЕТИС);
		
	Иначе
		ДокументОбъект.ДатаАктаНесоответствия = ?(ЗначениеЗаполнено(ДокументОбъект.ДатаАктаНесоответствия),
			ДокументОбъект.ДатаАктаНесоответствия,
			РеквизитыДокумента.ДатаАктаНесоответствия);
			
		ДокументОбъект.НомерАктаНесоответствия = ?(ЗначениеЗаполнено(ДокументОбъект.НомерАктаНесоответствия),
			ДокументОбъект.НомерАктаНесоответствия,
			РеквизитыДокумента.НомерАктаНесоответствия);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, ДопустимыйЗнак)
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	ДокументОбъект.Производители.Очистить();
	ДокументОбъект.ПроизводственныеПартии.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияИнвентаризацииПродукцииИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ИнвентаризацияПродукцииВЕТИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	КолонкиКоличестваВЕТИС = Новый Структура;
	КолонкиКоличестваВЕТИС.Вставить("КоличествоИзменение","КоличествоИзменениеВЕТИС");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Производители",ДокументОбъект.Производители);
	ДополнительныеПараметры.Вставить("ПроизводственныеПартии",ДокументОбъект.ПроизводственныеПартии);
	
	ЗаполнитьТабличнуюЧастьДокумента(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения, КолонкиКоличестваВЕТИС,,ДополнительныеПараметры);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияИнвентаризацииПродукцииИзПрикладногоДокумента(ТекстТоварыДокумента, ДопустимыйЗнак)
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
	|		ПО СтатусыДокументовВЕТИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовВЕТИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+
	ТекстТоварыДокумента
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура                    КАК Номенклатура,
	|	ТоварыСерии.Характеристика                  КАК Характеристика,
	|	ТоварыСерии.Серия                           КАК Серия,
	|	ТоварыСерии.Количество                      КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура              КАК Номенклатура,
	|	ОформленныеТовары.Характеристика            КАК Характеристика,
	|	ОформленныеТовары.Серия                     КАК Серия,
	|	-ОформленныеТовары.КоличествоИзменение      КАК Количество
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура                                        КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика                                      КАК Характеристика,
	|	ТоварыКОформлению.Серия                                               КАК Серия,
	|	СопоставленныеПозиции.Продукция                                        КАК Продукция,
	|	СУММА(ТоварыКОформлению.Количество)                                   КАК КоличествоИзменение,
	|	СУММА(ТоварыКОформлению.Количество)                                   КАК КоличествоИзменениеВЕТИС,
//
	|	ТоварыКОформлению.Серия.ИдентификаторПартииВЕТИС                      КАК ИдентификаторПартии,
	|	ТоварыКОформлению.Серия.ПроизводительВЕТИС                            КАК Производитель,
	|	ЕСТЬNULL(ТоварыКОформлению.Серия.ПроизводительВЕТИС.СтранаИдентификатор,"""") КАК ИдентификаторСтраны,
	|
	|	ВЫБОР СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Месяц)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ММГГГГ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|	КОНЕЦ                                                                 КАК ДатаПроизводстваТочностьЗаполнения,
	|	ТоварыКОформлению.Серия.ДатаПроизводства                              КАК ДатаПроизводстваНачалоПериода,
	|
	|	ВЫБОР СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Месяц)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ММГГГГ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|	КОНЕЦ                                                                 КАК СрокГодностиТочностьЗаполнения,
	|	ТоварыКОформлению.Серия.ГоденДо                                       КАК СрокГодностиНачалоПериода,
	|
	|	СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности = ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час) КАК СкоропортящаясяПродукция,
	|	
	|	ВЫБОР
	|		КОГДА ТоварыДругогоКачества.НоменклатураБрак ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НизкокачественнаяПродукция,
//
	|	ВЫБОР
	|		КОГДА СУММА(ТоварыКОформлению.Количество) > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Добавление)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ОперацииИнвентаризацииПродукцииВЕТИС.Изменение)
	|	КОНЕЦ                               КАК Операция
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТоварыКОформлению.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|			ПО ТоварыДругогоКачества.ГрадацияКачества <> ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.Новый)
	|			И ТоварыДругогоКачества.НоменклатураБрак = ТоварыКОформлению.Номенклатура
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.Продукция,
//	
	|	ТоварыКОформлению.Серия.ИдентификаторПартииВЕТИС,
	|	ТоварыКОформлению.Серия.ПроизводительВЕТИС,
	|	ЕСТЬNULL(ТоварыКОформлению.Серия.ПроизводительВЕТИС.СтранаИдентификатор,""""),
	|
	|	ВЫБОР СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Месяц)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ММГГГГ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|	КОНЕЦ,
	|	ТоварыКОформлению.Серия.ДатаПроизводства,
	|
	|	ВЫБОР СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Месяц)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ММГГГГ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|	КОНЕЦ,
	|	ТоварыКОформлению.Серия.ГоденДо,
	|
	|	СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности = ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час),
	|	
	|	ВЫБОР
	|		КОГДА ТоварыДругогоКачества.НоменклатураБрак ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
//
	|ИМЕЮЩИЕ ДопустимыйЗнак
	|";
	Если ДопустимыйЗнак = -1 Тогда
		Текст = СтрЗаменить(Текст, "ДопустимыйЗнак", "СУММА(ТоварыКОформлению.Количество)<0");
	ИначеЕсли ДопустимыйЗнак = 1 Тогда
		Текст = СтрЗаменить(Текст, "ДопустимыйЗнак", "СУММА(ТоварыКОформлению.Количество)>0");
	Иначе
		Текст = СтрЗаменить(Текст, "ДопустимыйЗнак", "СУММА(ТоварыКОформлению.Количество)<>0");
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции

Функция ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Предприятия.ТорговыйОбъект                                   КАК ТорговыйОбъект,
	|	Предприятия.ТорговыйОбъект                                   КАК Склад,
	|	Предприятия.ПроизводственныйОбъект                           КАК Подразделение,
	|	ИнвентаризацияПродукцииВЕТИС.Комментарий                     КАК Комментарий,
	|	ИнвентаризацияПродукцииВЕТИС.Дата                            КАК Дата,
	|	ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект.Контрагент КАК ХозяйствующийСубъект,
	|	ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект.Контрагент КАК Организация,
	|	ИнвентаризацияПродукцииВЕТИС.Товары.(
	|		Номенклатура                  КАК Номенклатура,
	|		Номенклатура.СтавкаНДС        КАК СтавкаНДС,
	|		Характеристика                КАК Характеристика,
	|		Серия                         КАК Серия,
	|		КоличествоИзменение           КАК Количество,
	|		КоличествоИзменение           КАК КоличествоУпаковок
	|	) КАК Товары
	|ИЗ
	|	Документ.ИнвентаризацияПродукцииВЕТИС КАК ИнвентаризацияПродукцииВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК Предприятия
	|		ПО ИнвентаризацияПродукцииВЕТИС.ХозяйствующийСубъект = Предприятия.Ссылка
	|			И ИнвентаризацияПродукцииВЕТИС.Предприятие = Предприятия.Предприятие
	|ГДЕ
	|	ИнвентаризацияПродукцииВЕТИС.Ссылка = &Ссылка";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(ДанныеЗаполнения, ЕстьСерии = Ложь, ДопустимыйЗнакСтроки = -1)
	
	Результат = Новый Структура;
	Результат.Вставить("Товары",               ДанныеЗаполнения.Товары.Выбрать());
	Результат.Вставить("ДопустимыйЗнакСтроки", ДопустимыйЗнакСтроки);
	Если ЕстьСерии Тогда
		Результат.Вставить("ЕстьСерии");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,ДанныеЗаполнения)
	
	ДокументОбъект.Товары.Очистить();
	Если ДанныеЗаполнения.Свойство("ЕстьСерии") Тогда
		ИмяТЧСерии = ДанныеЗаполнения.ЕстьСерии;
		Если ИмяТЧСерии = Неопределено Тогда 
			ИмяТЧСерии = "Серии";
		КонецЕсли;
		ДокументОбъект[ИмяТЧСерии].Очистить();
	КонецЕсли;
	
	Пока ДанныеЗаполнения.Товары.Следующий() Цикл
		
		СтруктураЗаполненияКоличества = Новый Структура("Количество,КоличествоУпаковок");
		СтруктураЗаполненияКоличества.Количество = ДанныеЗаполнения.Товары.Количество*ДанныеЗаполнения.ДопустимыйЗнакСтроки;
		СтруктураЗаполненияКоличества.КоличествоУпаковок = ДанныеЗаполнения.Товары.КоличествоУпаковок*ДанныеЗаполнения.ДопустимыйЗнакСтроки;
		
		Если СтруктураЗаполненияКоличества.Количество <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,ДанныеЗаполнения.Товары);
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары,СтруктураЗаполненияКоличества);
		
		Если ДанныеЗаполнения.Свойство("ЕстьСерии") И ЗначениеЗаполнено(НоваяСтрокаТовары.Серия) Тогда
			НоваяСтрокаСерия = ДокументОбъект[ИмяТЧСерии].Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерия,НоваяСтрокаТовары);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаИнвентаризацияПродукцииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииВнутреннегоПотребленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииОприходованияИзлишковТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПорчаТоваров")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПорчиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеНедостачТоваров")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииСписанияНедостачТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")Тогда 
		ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПрочегоОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииВнутреннегоПотребленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	ДокументСсылка.Номер         КАК НомерАктаНесоответствия,
	|	ДокументСсылка.Дата          КАК ДатаАктаНесоответствия,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Склад         КАК ТорговыйОбъект
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	-СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	-СУММА(Серии.Количество)                          КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииОприходованияИзлишковТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	ДокументСсылка.Номер         КАК НомерАктаНесоответствия,
	|	ДокументСсылка.Дата          КАК ДатаАктаНесоответствия,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Склад         КАК ТорговыйОбъект
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура      КАК Номенклатура,
	|	Товары.Характеристика    КАК Характеристика,
	|	Товары.Серия             КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 1);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	ДокументСсылка.Номер         КАК НомерАктаНесоответствия,
	|	ДокументСсылка.Дата          КАК ДатаАктаНесоответствия,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Склад         КАК ТорговыйОбъект
	|ИЗ
	|	Документ.ПересортицаТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.Характеристика     КАК Характеристика,
	|	Товары.Серия              КАК Серия,
	|	-СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.СерияОприходование,
	|	СУММА(Товары.Количество)
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.НоменклатураОприходование = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.СерияОприходование
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 0);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПорчиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	ДокументСсылка.Номер         КАК НомерАктаНесоответствия,
	|	ДокументСсылка.Дата          КАК ДатаАктаНесоответствия,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Склад         КАК ТорговыйОбъект
	|ИЗ
	|	Документ.ПорчаТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.Характеристика     КАК Характеристика,
	|	Товары.Серия              КАК Серия,
	|	-СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.Серия,
	|	СУММА(Товары.Количество)
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.НоменклатураОприходование = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.Серия
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 0);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииСписанияНедостачТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	ДокументСсылка.Номер         КАК НомерАктаНесоответствия,
	|	ДокументСсылка.Дата          КАК ДатаАктаНесоответствия,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Склад         КАК ТорговыйОбъект
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура       КАК Номенклатура,
	|	Товары.Характеристика     КАК Характеристика,
	|	Товары.Серия              КАК Серия,
	|	-СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, -1);
	
КонецПроцедуры

Процедура ЗаполнитьИнвентаризациюПродукцииВЕТИСНаОснованииПрочегоОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСсылка.Ссылка        КАК ДокументОснование,
	|	ДокументСсылка.Номер         КАК НомерАктаНесоответствия,
	|	ДокументСсылка.Дата          КАК ДатаАктаНесоответствия,
	|	НЕ ДокументСсылка.Проведен   КАК ЕстьОшибкиПроведен,
	|	ДокументСсылка.Ответственный КАК Ответственный,
	|	ДокументСсылка.Организация   КАК Организация,
	|	ДокументСсылка.Склад         КАК ТорговыйОбъект
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК ДокументСсылка
	|ГДЕ
	|	ДокументСсылка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, Запрос);
	
	ТекстТоварыДокумента = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                          КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|";
	
	ЗаполнитьТабличнуюЧастьИнвентаризацииПродукции(ДокументОбъект, ДанныеЗаполнения, ТекстТоварыДокумента, 1);
	
КонецПроцедуры

#КонецОбласти

#Область ПроизводственнаяОперацияВЕТИС

Функция ДанныеПрикладныхДокументовИзПроизводственнойОперацииВЕТИС(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственнаяОперацияВЕТИС.Дата КАК Дата,
	|	ХозяйствующиеСубъектыВЕТИСПредприятия.Ссылка.Контрагент КАК Организация,
	|	ХозяйствующиеСубъектыВЕТИСПредприятия.ТорговыйОбъект КАК ТорговыйОбъект,
	|	ХозяйствующиеСубъектыВЕТИСПредприятия.ПроизводственныйОбъект КАК ПроизводственныйОбъект,
	|	ПроизводственнаяОперацияВЕТИС.Комментарий КАК Комментарий,
	|	НЕ ПроизводственнаяОперацияВЕТИС.Проведен КАК ЕстьОшибкиПроведен,
	|	ПроизводственнаяОперацияВЕТИС.Товары.(
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|		Характеристика КАК Характеристика,
	|		Серия КАК Серия,
	|		Количество КАК Количество,
	|		Количество КАК КоличествоУпаковок
	|	) КАК Товары,
	|	ПроизводственнаяОперацияВЕТИС.Сырье.(
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|		Характеристика КАК Характеристика,
	|		Серия КАК Серия,
	|		Количество КАК Количество,
	|		Количество КАК КоличествоУпаковок
	|	) КАК Сырье
	|ИЗ
	|	Документ.ПроизводственнаяОперацияВЕТИС КАК ПроизводственнаяОперацияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХозяйствующиеСубъектыВЕТИС.Предприятия КАК ХозяйствующиеСубъектыВЕТИСПредприятия
	|		ПО ПроизводственнаяОперацияВЕТИС.ХозяйствующийСубъект = ХозяйствующиеСубъектыВЕТИСПредприятия.Ссылка
	|			И ПроизводственнаяОперацияВЕТИС.Предприятие = ХозяйствующиеСубъектыВЕТИСПредприятия.Предприятие
	|ГДЕ
	|	ПроизводственнаяОперацияВЕТИС.Ссылка = &Ссылка";
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаПроизводственнаяОперацияВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ДанныеПрикладногоДокумента = СтруктураЗапросаДанныеПрикладногоДокумента(ДанныеЗаполнения);
	
	Если Не ЗначениеЗаполнено(ДанныеПрикладногоДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ДанныеПрикладногоДокумента.Реквизиты);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		Данные = ДанныеПартииПроизводстваПоДокументуОснования(ДанныеЗаполнения);
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Данные);
		
		СоответствиеСубъектов = Справочники.ХозяйствующиеСубъектыВЕТИС.ХозяйствующийСубъектИПредприятиеПоПрикладнымРеквизитам(
												РеквизитыДокумента.ОрганизацияКонтрагент,
												РеквизитыДокумента.ТорговыйПроизводственныйОбъект);
	
		ЗаполнитьЗначенияСвойств(ДокументОбъект, СоответствиеСубъектов);
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	СписокЗапросов = Новый СписокЗначений();
	
	СписокЗапросов.Добавить(ДанныеПрикладногоДокумента.Товары);
	СписокЗапросов.Добавить(ДанныеПрикладногоДокумента.Сырье);
	
	СтруктураЗапроса = Документы.ПроизводственнаяОперацияВЕТИС.СтруктураЗапросаДанныеОформленныхДокументов();
	
	СписокЗапросов.Добавить(СтруктураЗапроса.ОформленныеДокументы);
	СписокЗапросов.Добавить(СтруктураЗапроса.ОформленныеТовары);
	СписокЗапросов.Добавить(СтруктураЗапроса.ОформленноеСырье);
	
	СтруктураЗапроса = СтруктураЗапросаДанныеЗаполненияПроизводственнойОперации();
	
	СписокЗапросов.Добавить(СтруктураЗапроса.ТоварыКОформлению);
	СписокЗапросов.Добавить(СтруктураЗапроса.СырьеКОформлению);
	СписокЗапросов.Добавить(СтруктураЗапроса.СопоставленныеПозиции);
	
	СписокЗапросов.Добавить(СтруктураЗапроса.Товары, "Товары");
	СписокЗапросов.Добавить(СтруктураЗапроса.Сырье, "Сырье");
	СписокЗапросов.Добавить(СтруктураЗапроса.ТехнологическийПроцесс, "ТехнологическийПроцесс");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.ПроизводственнаяОперацияВЕТИС.КонечныеСтатусы());
	
	Запрос.УстановитьПараметр("ДатаОперацииНачалоПериода", РеквизитыДокумента.ДатаОперацииНачалоПериода);
	Запрос.УстановитьПараметр("ДатаОперацииКонецПериода",  РеквизитыДокумента.ДатаОперацииКонецПериода);
	
	Запрос.УстановитьПараметр("ПустаяСерия", Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	РезультатЗапроса = ИнтеграцияИС.ВыполнитьПакетЗапросов(Запрос, СписокЗапросов);
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.Сырье.Очистить();
	
	ДокументОбъект.УпаковкиВЕТИС.Очистить();
	ДокументОбъект.ШтрихкодыУпаковок.Очистить();
	
	ДокументОбъект.ТехнологическийПроцесс.Очистить();
	
	КолонкиКоличествоВЕТИС = Новый Структура;
	КолонкиКоличествоВЕТИС.Вставить("Количество","КоличествоВЕТИС");
	
	Если Не РезультатЗапроса["Товары"].Пустой() Тогда
		ЗаполнитьТабличнуюЧастьДокумента(
			ДокументОбъект["Товары"],
			РезультатЗапроса["Товары"],
			ДанныеЗаполнения,
			КолонкиКоличествоВЕТИС,
			Истина);
	КонецЕсли;
	
	Если Не РезультатЗапроса["Сырье"].Пустой() Тогда
		ЗаполнитьТабличнуюЧастьДокумента(
			ДокументОбъект["Сырье"],
			РезультатЗапроса["Сырье"],
			ДанныеЗаполнения,
			КолонкиКоличествоВЕТИС,
			Истина);
	КонецЕсли;
	
	ДокументОбъект.ТехнологическийПроцесс.Загрузить(РезультатЗапроса["ТехнологическийПроцесс"].Выгрузить());
	
	Документы.ПроизводственнаяОперацияВетис.ЗаполнитьЗаписиСкладскогоЖурнала(
			ДокументОбъект);
	
КонецПроцедуры

Функция СтруктураЗапросаДанныеЗаполненияПроизводственнойОперации()
	
	СтруктураЗапроса = Новый Структура();
	
	// Товары к оформлению
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура          КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика        КАК Характеристика,
	|	ТабличнаяЧасть.Серия                 КАК Серия,
	|	ТабличнаяЧасть.ДатаПроизводства      КАК ДатаПроизводства,
	|	СУММА(ТабличнаяЧасть.Количество)     КАК Количество
	|ПОМЕСТИТЬ ТоварыКРаспределению
	|ИЗ (
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Серия            КАК Серия,
	|	ТабличнаяЧасть.ДатаПроизводства КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество       КАК Количество
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Серия            КАК Серия,
	|	ТабличнаяЧасть.ДатаПроизводства КАК ДатаПроизводства,
	|	-ТабличнаяЧасть.Количество      КАК Количество
	|ИЗ
	|	ОформленныеТовары КАК ТабличнаяЧасть
	|
	|) КАК ТабличнаяЧасть
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.ДатаПроизводства,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТабличнаяЧасть.Количество) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	ДатаПроизводства
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура          КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика        КАК Характеристика,
	|	ТабличнаяЧасть.Серия                 КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество)     КАК Количество
	|ПОМЕСТИТЬ ТоварыБазаРаспределения
	|ИЗ (
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Серия            КАК Серия,
	|	ТабличнаяЧасть.Количество       КАК Количество
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Серия            КАК Серия,
	|	-ТабличнаяЧасть.Количество      КАК Количество
	|ИЗ
	|	ОформленныеТовары КАК ТабличнаяЧасть
	|
	|) КАК ТабличнаяЧасть
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТабличнаяЧасть.Количество) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|
	|	ТоварыКРаспределению.Номенклатура     КАК Номенклатура,
	|	ТоварыКРаспределению.Характеристика   КАК Характеристика,
	|	ТоварыКРаспределению.Серия            КАК Серия,
	|	ТоварыКРаспределению.ДатаПроизводства КАК ДатаПроизводства,
	|
	|	СУММА(ТоварыКРаспределениюДополнение.Количество) - МИНИМУМ(ТоварыКРаспределению.Количество) КАК ЛеваяГраница,
	|	СУММА(ТоварыКРаспределениюДополнение.Количество)                                            КАК ПраваяГраница
	|
	|ПОМЕСТИТЬ ТоварыКРаспределениюПоДатам
	|ИЗ
	|	ТоварыКРаспределению КАК ТоварыКРаспределению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКРаспределению КАК ТоварыКРаспределениюДополнение
	|
	|			ПО ТоварыКРаспределению.Номенклатура      = ТоварыКРаспределениюДополнение.Номенклатура
	|			 И ТоварыКРаспределению.Характеристика    = ТоварыКРаспределениюДополнение.Характеристика
	|			 И ТоварыКРаспределению.Серия             = ТоварыКРаспределениюДополнение.Серия
	|			 И ТоварыКРаспределению.ДатаПроизводства <= ТоварыКРаспределениюДополнение.ДатаПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКРаспределению.Номенклатура,
	|	ТоварыКРаспределению.Характеристика,
	|	ТоварыКРаспределению.Серия,
	|	ТоварыКРаспределению.ДатаПроизводства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКРаспределениюПоДатам.Номенклатура     КАК Номенклатура,
	|	ТоварыКРаспределениюПоДатам.Характеристика   КАК Характеристика,
	|	ТоварыКРаспределениюПоДатам.Серия            КАК Серия,
	|	ТоварыКРаспределениюПоДатам.ДатаПроизводства КАК ДатаПроизводства,
	|	(ВЫБОР
	|		КОГДА ТоварыКРаспределению.Количество < ТоварыКРаспределениюПоДатам.ПраваяГраница
	|			ТОГДА ТоварыКРаспределению.Количество
	|			ИНАЧЕ ТоварыКРаспределениюПоДатам.ПраваяГраница
	|		КОНЕЦ - ТоварыКРаспределениюПоДатам.ЛеваяГраница
	|	)                                            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыКРаспределениюПоДатам КАК ТоварыКРаспределениюПоДатам
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыБазаРаспределения КАК ТоварыКРаспределению
	|
	|			ПО ТоварыКРаспределениюПоДатам.Номенклатура   = ТоварыКРаспределению.Номенклатура
	|			 И ТоварыКРаспределениюПоДатам.Характеристика = ТоварыКРаспределению.Характеристика
	|			 И ТоварыКРаспределениюПоДатам.Серия          = ТоварыКРаспределению.Серия
	|			 И ТоварыКРаспределениюПоДатам.ЛеваяГраница   < ТоварыКРаспределению.Количество
	|";
	СтруктураЗапроса.Вставить("ТоварыКОформлению", ТекстЗапроса);
	
	// Сырье к оформлению
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура          КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика        КАК Характеристика,
	|	ТоварыКОформлению.Серия                 КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество)     КАК Количество
	|ПОМЕСТИТЬ СырьеКОформлению
	|ИЗ (
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	ТабличнаяЧасть.Количество     КАК Количество
	|ИЗ
	|	Сырье КАК ТабличнаяЧасть
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	-ТабличнаяЧасть.Количество    КАК Количество
	|ИЗ
	|	ОформленноеСырье КАК ТабличнаяЧасть
	|
	|) КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	СтруктураЗапроса.Вставить("СырьеКОформлению", ТекстЗапроса);
	
	ТекстЗапроса = ТекстЗапросаСоответствиеНоменклатурыВЕТИС("СопоставленныеПозиции", "ТоварыКОформлению, СырьеКОформлению");
	СтруктураЗапроса.Вставить("СопоставленныеПозиции", ТекстЗапроса);
	
	// Товары
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СопоставленныеПозиции.Продукция         КАК Продукция,
	|
	|	ТоварыКОформлению.Номенклатура         КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика       КАК Характеристика,
	|	ТоварыКОформлению.Серия                КАК Серия,
	|
	|	ТоварыКОформлению.Количество    КАК Количество,
	|	ТоварыКОформлению.Количество    КАК КоличествоВЕТИС,
	|
	|	ISNULL(ТоварыКОформлению.Серия.ИдентификаторПартииВЕТИС, """") КАК ИдентификаторПартии,
	|
	|	ВЫБОР СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Месяц)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ММГГГГ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|	КОНЕЦ                                                          КАК ДатаПроизводстваТочностьЗаполнения,
	|	ВЫБОР СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
	|			ТОГДА НАЧАЛОПЕРИОДА(ТоварыКОформлению.ДатаПроизводства, ЧАС)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
	|			ТОГДА НАЧАЛОПЕРИОДА(ТоварыКОформлению.ДатаПроизводства, ДЕНЬ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Месяц)
	|			ТОГДА НАЧАЛОПЕРИОДА(ТоварыКОформлению.ДатаПроизводства, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ТоварыКОформлению.ДатаПроизводства, ДЕНЬ)
	|	КОНЕЦ                                                          КАК ДатаПроизводстваНачалоПериода,
	|	ДАТАВРЕМЯ(1,1,1)                                               КАК ДатаПроизводстваКонецПериода,
	|
	|	ВЫБОР СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГЧЧ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Месяц)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ММГГГГ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТочностьЗаполненияПериодаВЕТИС.ДДММГГГГ)
	|	КОНЕЦ                                                          КАК СрокГодностиТочностьЗаполнения,
	|	ISNULL(ВЫБОР СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час)
	|			ТОГДА НАЧАЛОПЕРИОДА(ТоварыКОформлению.Серия.ГоденДо, ЧАС)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Сутки)
	|			ТОГДА НАЧАЛОПЕРИОДА(ТоварыКОформлению.Серия.ГоденДо, ДЕНЬ)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Месяц)
	|			ТОГДА НАЧАЛОПЕРИОДА(ТоварыКОформлению.Серия.ГоденДо, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ТоварыКОформлению.Серия.ГоденДо, ДЕНЬ)
	|	КОНЕЦ, ДАТАВРЕМЯ(1,1,1))                                       КАК СрокГодностиНачалоПериода,
	|	ДАТАВРЕМЯ(1,1,1)                                               КАК СрокГодностиКонецПериода,
	|
	|	СправочникНоменклатура.ЕдиницаИзмеренияСрокаГодности = ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час) КАК СкоропортящаясяПродукция,
	|	
	|	ВЫБОР
	|		КОГДА ИСТИНА В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					РегистрСведений.ТоварыДругогоКачества КАК ТоварыДругогоКачества
	|				ГДЕ
	|					ТоварыДругогоКачества.НоменклатураБрак = ТоварыКОформлению.Номенклатура
	|					И ТоварыДругогоКачества.ГрадацияКачества <> ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.Новый))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НизкокачественнаяПродукция,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РезультатыЛабораторныхИсследованийВЕТИС.ИзготовленаИзСырьяПрошедшегоВСЭ) КАК ЭкспертизаРезультат
	|
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура   = ТоварыКОформлению.Номенклатура
	|		 И СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|		 И СопоставленныеПозиции.Серия          = ТоварыКОформлению.Серия
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТоварыКОформлению.Номенклатура      = СправочникНоменклатура.Ссылка
	|";
	СтруктураЗапроса.Вставить("Товары", ТекстЗапроса);
	
	// Сырье
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СопоставленныеПозиции.Продукция         КАК Продукция,
	|
	|	СырьеКОформлению.Номенклатура         КАК Номенклатура,
	|	СырьеКОформлению.Характеристика       КАК Характеристика,
	|	СырьеКОформлению.Серия                КАК Серия,
	|
	|	СырьеКОформлению.Количество КАК Количество,
	|	СырьеКОформлению.Количество КАК КоличествоВЕТИС
	|
	|ИЗ
	|	СырьеКОформлению КАК СырьеКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура   = СырьеКОформлению.Номенклатура
	|		 И СопоставленныеПозиции.Характеристика = СырьеКОформлению.Характеристика
	|		 И СопоставленныеПозиции.Серия          = СырьеКОформлению.Серия
	|";
	СтруктураЗапроса.Вставить("Сырье", ТекстЗапроса);
	
	// Технологический процесс
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ДатаОперацииНачалоПериода КАК ДатаОперацииНачалоПериода,
	|	&ДатаОперацииКонецПериода  КАК ДатаОперацииКонецПериода,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхОперацийВЕТИС.Производство) КАК ТипОперации
	|";
	СтруктураЗапроса.Вставить("ТехнологическийПроцесс", ТекстЗапроса);
	
	Возврат СтруктураЗапроса;
	
КонецФункции

Функция СтруктураЗапросаДанныеПрикладногоДокумента(ДанныеЗаполнения)
	
	СтруктураЗапроса = Неопределено;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров")Тогда
		
		СтруктураЗапроса = СтруктураЗапросаДанныеДокументаСборкаТоваров();
		
//++ НЕ УТ
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПроизводствоБезЗаказа")Тогда
		
		СтруктураЗапроса = СтруктураЗапросаДанныеДокументаПроизводствоБезЗаказа();
		
//-- НЕ УТ
//++ НЕ УТКА
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		
		СтруктураЗапроса = СтруктураЗапросаДанныеДокументаЭтапПроизводства2_2();
		
//-- НЕ УТКА
	КонецЕсли;
	
	Возврат СтруктураЗапроса;
	
КонецФункции

Функция СтруктураЗапросаДанныеДокументаСборкаТоваров()
	
	СтруктураЗапроса = Новый Структура();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|
	|	Таблица.Организация КАК ОрганизацияКонтрагент,
	|	Таблица.Склад КАК ТорговыйПроизводственныйОбъект,
	|
	|	НАЧАЛОПЕРИОДА(Таблица.Дата, ДЕНЬ) КАК ДатаОперацииНачалоПериода,
	|	КОНЕЦПЕРИОДА(Таблица.Дата, ДЕНЬ) КАК ДатаОперацииКонецПериода,
	|
	|	(НЕ Таблица.Проведен) КАК ЕстьОшибкиПроведен
	|
	|ИЗ
	|	Документ.СборкаТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|";
	СтруктураЗапроса.Вставить("Реквизиты", ТекстЗапроса);
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ)
	|	КОНЕЦ                                             КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	Документ.СборкаТоваров КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|		 ПО ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка
	|			И ТаблицаСерии.Номенклатура   = ТабличнаяЧасть.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|	И &Отбор1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ)
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ТаблицаОграничения
	|		 ПО ТабличнаяЧасть.Ссылка = ТаблицаОграничения.Ссылка
	|			И ТабличнаяЧасть.Номенклатура = ТаблицаОграничения.Номенклатура
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И &Отбор1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ)
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|		 ПО ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка
	|			И ТаблицаСерии.Номенклатура   = ТабличнаяЧасть.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика
	|			И ТаблицаСерии.Назначение     = ТабличнаяЧасть.Назначение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|	И &Отбор2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ)
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаОграничения
	|		 ПО ТабличнаяЧасть.Ссылка = ТаблицаОграничения.Ссылка
	|			И ТабличнаяЧасть.Номенклатура = ТаблицаОграничения.Номенклатура
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И &Отбор2
	|";
	
	ТекстЗапроса = ШаблонЗапроса;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВременнаяТаблица", "Товары");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор1", "(ТабличнаяЧасть.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор2", "(ТабличнаяЧасть.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров))");
	СтруктураЗапроса.Вставить("Товары", ТекстЗапроса);
	
	ТекстЗапроса = ШаблонЗапроса;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВременнаяТаблица", "Сырье");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор1", "(ТабличнаяЧасть.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров))");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор2", "(ТабличнаяЧасть.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров))");
	СтруктураЗапроса.Вставить("Сырье", ТекстЗапроса);
	
	Возврат СтруктураЗапроса;
	
КонецФункции

//++ НЕ УТ
Функция СтруктураЗапросаДанныеДокументаПроизводствоБезЗаказа()
	
	СтруктураЗапроса = Новый Структура();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(
	|		ЕСТЬNULL(НазначенияДавальца.Договор.Контрагент, 
//++ НЕ УТКА
	|			ЕСТЬNULL(ВЫРАЗИТЬ(НазначенияДавальца.Заказ КАК Документ.ЗаказДавальца).Контрагент, 
//-- НЕ УТКА
	|				Товары.Ссылка.Организация)
//++ НЕ УТКА
	|			)
//-- НЕ УТКА
	|	) КАК ОрганизацияКонтрагент
	|ПОМЕСТИТЬ ОсновнаяОрганизацияКонтрагент
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК НазначенияДавальца
	|		ПО Товары.Назначение = НазначенияДавальца.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|		ЕСТЬNULL(НазначенияДавальца.Договор.Контрагент, 
//++ НЕ УТКА
	|			ЕСТЬNULL(ВЫРАЗИТЬ(НазначенияДавальца.Заказ КАК Документ.ЗаказДавальца).Контрагент, 
//-- НЕ УТКА
	|				Товары.Ссылка.Организация)
//++ НЕ УТКА
	|			)
//-- НЕ УТКА
	|	) = 1;
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|
	|	ВЫБОР
	|		КОГДА ОсновнаяОрганизацияКонтрагент.ОрганизацияКонтрагент ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ИНАЧЕ ОсновнаяОрганизацияКонтрагент.ОрганизацияКонтрагент
	|	КОНЕЦ КАК ОрганизацияКонтрагент,
	|	Таблица.Подразделение КАК ТорговыйПроизводственныйОбъект,
	|
	|	НАЧАЛОПЕРИОДА(Таблица.Дата, ДЕНЬ) КАК ДатаОперацииНачалоПериода,
	|	КОНЕЦПЕРИОДА(Таблица.Дата, ДЕНЬ) КАК ДатаОперацииКонецПериода,
	|
	|	(НЕ Таблица.Проведен) КАК ЕстьОшибкиПроведен
	|
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОсновнаяОрганизацияКонтрагент КАК ОсновнаяОрганизацияКонтрагент
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|";
	СтруктураЗапроса.Вставить("Реквизиты", ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ)
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ВыходныеИзделияСерии КАК ТаблицаСерии
	|		 ПО ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка
	|			И ТаблицаСерии.Номенклатура     = ТабличнаяЧасть.Номенклатура
	|			И ТаблицаСерии.Характеристика   = ТабличнаяЧасть.Характеристика
	|			И ТаблицаСерии.Назначение       = ТабличнаяЧасть.Назначение
	|			И ТаблицаСерии.Получатель       = ТабличнаяЧасть.Получатель
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ)
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделияСерии КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ)
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ПобочныеИзделияСерии КАК ТаблицаСерии
	|		 ПО ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка
	|			И ТаблицаСерии.Номенклатура     = ТабличнаяЧасть.Номенклатура
	|			И ТаблицаСерии.Характеристика   = ТабличнаяЧасть.Характеристика
	|			И ТаблицаСерии.Назначение       = ТабличнаяЧасть.Назначение
	|			И ТаблицаСерии.Получатель       = ТабличнаяЧасть.Получатель
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			НАЧАЛОПЕРИОДА(ТабличнаяЧасть.Ссылка.Дата, ДЕНЬ)
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.ПобочныеИзделияСерии КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|";
	СтруктураЗапроса.Вставить("Товары", ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ПОМЕСТИТЬ Сырье
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|";
	СтруктураЗапроса.Вставить("Сырье", ТекстЗапроса);
	
	Возврат СтруктураЗапроса;
	
КонецФункции
//-- НЕ УТ

//++ НЕ УТКА
Функция СтруктураЗапросаДанныеДокументаЭтапПроизводства2_2()
	
	СтруктураЗапроса = Новый Структура();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|
	|	ВЫБОР
	|		КОГДА Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)
	|			ТОГДА
	|				Таблица.Договор.Контрагент
	|		ИНАЧЕ Таблица.Организация
	|	КОНЕЦ КАК ОрганизацияКонтрагент,
	|	Таблица.Подразделение КАК ТорговыйПроизводственныйОбъект,
	|
	|	Таблица.ФактическоеНачалоЭтапа КАК ДатаОперацииНачалоПериода,
	|	ВЫБОР
	|		КОГДА Таблица.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
	|			ТОГДА
	|				ДАТАВРЕМЯ(1,1,1)
	|		ИНАЧЕ Таблица.ФактическоеОкончаниеЭтапа
	|	КОНЕЦ 
	|	                               КАК ДатаОперацииКонецПериода,
	|
	|	(НЕ Таблица.Проведен) КАК ЕстьОшибкиПроведен
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|";
	СтруктураЗапроса.Вставить("Реквизиты", ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ТаблицаСерии
	|		 ПО ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка
	|			И ТаблицаСерии.Номенклатура     = ТабличнаяЧасть.Номенклатура
	|			И ТаблицаСерии.Характеристика   = ТабличнаяЧасть.Характеристика
	|			И ТаблицаСерии.Назначение       = ТабличнаяЧасть.Назначение
	|			И ТаблицаСерии.Получатель       = ТабличнаяЧасть.Получатель
	|			И ТаблицаСерии.Произведено      = ТабличнаяЧасть.Произведено
	|			И ТаблицаСерии.ДатаПроизводства = ТабличнаяЧасть.ДатаПроизводства
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Произведено
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Произведено
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ПобочныеИзделияСерии КАК ТаблицаСерии
	|		 ПО ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка
	|			И ТаблицаСерии.Номенклатура     = ТабличнаяЧасть.Номенклатура
	|			И ТаблицаСерии.Характеристика   = ТабличнаяЧасть.Характеристика
	|			И ТаблицаСерии.Назначение       = ТабличнаяЧасть.Назначение
	|			И ТаблицаСерии.Получатель       = ТабличнаяЧасть.Получатель
	|			И ТаблицаСерии.Произведено      = ТабличнаяЧасть.Произведено
	|			И ТаблицаСерии.ДатаПроизводства = ТабличнаяЧасть.ДатаПроизводства
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Произведено
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|	И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ВЫБОР
	|		КОГДА ISNULL(ТабличнаяЧасть.Серия.ДатаПроизводства, ДАТАВРЕМЯ(1,1,1)) <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|			ТабличнаяЧасть.Серия.ДатаПроизводства
	|	ИНАЧЕ
	|			ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ                                                      КАК ДатаПроизводства,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделияСерии КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.Произведено
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|";
	СтруктураЗапроса.Вставить("Товары", ТекстЗапроса);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                              КАК Характеристика,
	|	ТабличнаяЧасть.Серия                                       КАК Серия,
	|	ТабличнаяЧасть.Количество                                  КАК Количество
	|ПОМЕСТИТЬ Сырье
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТабличнаяЧасть
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		 ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС
	|";
	СтруктураЗапроса.Вставить("Сырье", ТекстЗапроса);
	
	Возврат СтруктураЗапроса;
	
КонецФункции
//-- НЕ УТКА

Функция ДанныеПартииПроизводстваПоДокументуОснования(ДокументОснования)
	
	Результат = Новый Структура;
	Результат.Вставить("ИдентификаторПроизводственнойТранзакции", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("ИдентификаторПроизводственнойТранзакцииВЕТИС"));
	Результат.Вставить("ЗавершениеПроизводственнойТранзакции", Ложь);
	
	//++ НЕ УТКА
	Если ТипЗнч(ДокументОснования) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		Данные = Документы.ЭтапПроизводства2_2.ДанныеПартииПроизводстваВЕТИС(ДокументОснования);
		ЗаполнитьЗначенияСвойств(Результат, Данные);
	КонецЕсли;
	//-- НЕ УТКА
	
	Возврат Результат;
	
КонецФункции


Процедура ПроверитьЗаполнениеИдентификатораПартии(ДокументОбъект, Отказ, МассивНепроверяемыхРеквизитов) Экспорт
	
	ШаблонСообщения = НСтр("ru = 'Не заполнено поле ""Идентификатор партии"" в строке %1 списка ""Продукция"".';
							|en = 'The Batch ID field in line %1 of the Products list is not filled in.'");
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапросаИспользованиеИдентификаторовПартийТоваров();
	Запрос.УстановитьПараметр("ТабличнаяЧастьТовары", ДокументОбъект.Товары.Выгрузить(, "НомерСтроки,Номенклатура,СтатусУказанияСерий"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = ДокументОбъект.Товары.Найти(Выборка.НомерСтроки, "НомерСтроки");
		Если СтрокаТЧ <> Неопределено
			И Выборка.ИспользоватьИдентификаторПартии
			И НЕ ЗначениеЗаполнено(СтрокаТЧ.ИдентификаторПартии) Тогда
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.НомерСтроки);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары",
				Выборка.НомерСтроки,
				"ИдентификаторПартии");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,
				ДокументОбъект.Ссылка,
				Поле,
				"Объект",
				Отказ);
			
		КонецЕсли;
	КонецЦикла;
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.ИдентификаторПартии");
	
КонецПроцедуры

#КонецОбласти

#Область ПрикладныеДокументы

#Область ПриобретениеТоваровУслуг

Процедура ЗаполнитьПриобретениеТоваровУслугНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты,Истина,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровОтКлиента

Процедура ЗаполнитьВозвратТоваровОтКлиентаНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияПродажПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область РеализацияТоваровУслуг

Процедура ЗаполнитьРеализациюТоваровУслугНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты,Истина,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияПродажПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровПоставщику

Процедура ЗаполнитьВозвратТоваровПоставщикуНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ПеремещениеТоваров

Процедура ЗаполнитьПеремещениеТоваровНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
		ДокументОбъект.СкладОтправитель      = Реквизиты.ГрузоотправительПредприятие;
		ДокументОбъект.ОрганизацияПолучатель = Реквизиты.Грузополучатель;
		ДокументОбъект.СкладПолучатель       = Реквизиты.ГрузополучательПредприятие;
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ПередачаТоваровМеждуОрганизациями

Процедура ЗаполнитьПередачуТоваровМеждуОрганизациямиНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
		ДокументОбъект.ОрганизацияПолучатель = Реквизиты.Грузополучатель;
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратТоваровМеждуОрганизациями

Процедура ЗаполнитьВозвратТоваровМеждуОрганизациямиНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
		ДокументОбъект.ОрганизацияПолучатель = Реквизиты.Грузополучатель;
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ДвижениеПродукцииИМатериалов

Процедура ЗаполнитьДвижениеПродукцииИМатериаловНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
		ДокументОбъект.Отправитель           = Реквизиты.ГрузоотправительПредприятие;
		ДокументОбъект.ОрганизацияПолучатель = Реквизиты.Грузополучатель;
		ДокументОбъект.Получатель            = Реквизиты.ГрузополучательПредприятие;
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ПередачаСырьяПереработчику

Процедура ЗаполнитьПередачуСырьяПереработчикуНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты,Истина,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияПродажПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратСырьяОтПереработчика

Процедура ЗаполнитьВозвратСырьяОтПереработчикаНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияПродажПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ПоступлениеОтПереработчика

Процедура ЗаполнитьПоступлениеОтПереработчикаНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты,Истина,Истина);
	СтруктураЗаполненияТЧ.ЕстьСерии = "ТоварыСерии";
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТ

//++ НЕ УТКА
#Область ПоступлениеСырьяОтДавальца

Процедура ЗаполнитьПоступлениеСырьяОтДавальцаНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты,Истина,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ВозвратСырьяДавальцу

Процедура ЗаполнитьВозвратСырьяДавальцуНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ПередачаДавальцу

Процедура ЗаполнитьПередачуДавальцуНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты,Истина,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТКА

//++ НЕ УТ
#Область ПриемкаТоваровНаХранение

Процедура ЗаполнитьПриемкуТоваровНаХранениеНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты,Истина,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ОтгрузкаТоваровСХранения

Процедура ЗаполнитьОтгрузкуТоваровСХраненияНаОснованииИсходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИсходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИсходящейТранспортнойОперации(Реквизиты,Истина,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИсходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ВыкупПринятыхНаХранениеТоваров

Процедура ЗаполнитьВыкупПринятыхНаХранениеТоваровНаОснованииВходящейТранспортнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзВходящейТранспортнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров;
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоВходящейТранспортнойОперации(Реквизиты);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииВходящейТранспортнойОперации(ДокументОбъект,СтруктураЗаполненияТЧ);
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТ

#Область СборкаТоваров

Процедура ЗаполнитьСборкуТоваровНаОснованииПроизводственнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзПроизводственнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			ДанныеЗаполнения,
			,
			Реквизиты.ЕстьОшибкиПроведен,,);
			
		ДокументОбъект.Дата = ТекущаяДатаСеанса();
		
		ДокументОбъект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
		ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров;
		
		ДокументОбъект.Организация = Реквизиты.Организация;
		ДокументОбъект.Склад = Реквизиты.ТорговыйОбъект;
		
	КонецЕсли;
	
	ТаблицаШапка = Реквизиты.Товары.Выгрузить();
	
	Комплект = ТаблицаШапка.Скопировать();
	Комплект.Свернуть("Номенклатура, Характеристика");
	
	Если Комплект.Количество() > 1 Тогда
		
		ТекстОшибки = НСтр("ru = 'Документ %Документ% содержит несколько строк в табличной части ""Продукция"". Ввод на основании документа ""Сборка (разборка) товаров"" невозможен.';
							|en = 'The %Документ% document contains several lines in the Products tabular section. Cannot enter based on the ""Goods assembly (disassembly)"" document.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.СборкаТоваров);
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.Серии.Очистить();
	
	Если ТаблицаШапка.Количество() > 0 Тогда
		
		ТаблицаШапка.Свернуть("Номенклатура, Характеристика, Серия, СтавкаНДС", "Количество, КоличествоУпаковок");
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ТаблицаШапка[0]);
		
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий.Шапка);
		
		Если НоменклатураКлиентСервер.ВЭтомСтатусеСерииУказываютсяВТЧТовары(ДокументОбъект.СтатусУказанияСерий, ПараметрыУказанияСерий.Шапка)
			И ТаблицаШапка.Количество() > 1 Тогда
			
			ТекстОшибки = НСтр("ru = 'Документ %Документ% содержит несколько серий в табличной части ""Продукция"". Ввод на основании документа ""Сборка (разборка) товаров"" невозможен.';
								|en = 'The %Документ% document contains several lines in the Products tabular section. Cannot enter based on the ""Goods assembly (disassembly)"" document.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Для каждого Строка Из ТаблицаШапка Цикл
			Если ЗначениеЗаполнено(Строка.Серия) И Строка.Количество > 0 Тогда
				НоваяСерия = ДокументОбъект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСерия, Строка);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ВыборкаТЧ = Реквизиты.Сырье.Выбрать();
	Пока ВыборкаТЧ.Следующий() Цикл
		
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыборкаТЧ);
		
		Если ЗначениеЗаполнено(НоваяСтрока.Серия) И НоваяСтрока.Количество > 0 Тогда
			НоваяСтрокаСерии = ДокументОбъект.Серии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий.ТЧ);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ДокументОбъект, ПараметрыУказанияСерий);
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроизводствоБезЗаказа

Процедура ЗаполнитьПроизводствоБезЗаказаНаОснованииПроизводственнойОперацииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзПроизводственнойОперацииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			ДанныеЗаполнения,
			,
			Реквизиты.ЕстьОшибкиПроведен,,);
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ГруппировкаЗатрат", Перечисления.ГруппировкиЗатратВПроизводствеБезЗаказа.ПоДокументу);
		ДанныеЗаполнения.Вставить("Организация",       Реквизиты.Организация);
		ДанныеЗаполнения.Вставить("Подразделение",     Реквизиты.ПроизводственныйОбъект);
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
	
	КонецЕсли;
	
	ДокументОбъект.ВыходныеИзделия.Очистить();
	ДокументОбъект.ВыходныеИзделияСерии.Очистить();
	
	ДокументОбъект.ПобочныеИзделия.Очистить();
	ДокументОбъект.ПобочныеИзделияСерии.Очистить();
	
	ДокументОбъект.МатериалыИРаботы.Очистить();
	ДокументОбъект.Трудозатраты.Очистить();
	
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	СкладПоУмолчанию = ЗначениеНастроекПовтИсп.ПолучитьЦеховуюКладовуюПоУмолчанию(Реквизиты.ПроизводственныйОбъект);
	Если Не ЗначениеЗаполнено(СкладПоУмолчанию) Тогда
		СкладПоУмолчанию = Реквизиты.ТорговыйОбъект;
	КонецЕсли;
	
	// ВыходныеИзделия
	Выборка = Реквизиты.Товары.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ДокументОбъект.ВыходныеИзделия.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		НоваяСтрока.НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад;
		НоваяСтрока.Получатель = СкладПоУмолчанию;
		
		Если ИспользоватьСерииНоменклатуры И ЗначениеЗаполнено(НоваяСтрока.Серия) Тогда
			НоваяСтрокаСерии = ДокументОбъект.ВыходныеИзделияСерии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	// МатериалыИРаботы
	Выборка = Реквизиты.Сырье.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ДокументОбъект.МатериалыИРаботы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		НоваяСтрока.Подразделение = Реквизиты.ПроизводственныйОбъект;
		НоваяСтрока.Склад = СкладПоУмолчанию;
	КонецЦикла;
	
	Если ИспользоватьСерииНоменклатуры Тогда
		ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ПроизводствоБезЗаказа);
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий.ВыходныеИзделия);
		НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ДокументОбъект, ПараметрыУказанияСерий.ВыходныеИзделия);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТ

#Область ВнутреннееПотреблениеТоваров

Процедура ЗаполнитьВнутреннееПотреблениеТоваровНаОснованииИнвентаризацииПродукцииВЕТИС (ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(Реквизиты,Истина);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеНедостачТоваров

Процедура ЗаполнитьСписаниеНедостачТоваровНаОснованииИнвентаризацииПродукцииВЕТИС (ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(Реквизиты);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ОприходованиеИзлишковТоваров

Процедура ЗаполнитьОприходованиеИзлишковТоваровНаОснованииИнвентаризацииПродукцииВЕТИС (ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(Реквизиты,,1);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область ПрочееОприходованиеТоваров

Процедура ЗаполнитьПрочееОприходованиеТоваровНаОснованииИнвентаризацииПродукцииВЕТИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Реквизиты = ДанныеПрикладныхДокументовИзИнвентаризацииПродукцииВЕТИС(ДанныеЗаполнения);
	Реквизиты.Следующий();
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Реквизиты);
		
	КонецЕсли;
	
	СтруктураЗаполненияТЧ = СтруктураЗаполненияТабличныхЧастейПоИнвентаризацииПродукции(Реквизиты,Истина,1);
	ЗаполнитьТабличныеЧастиПрикладногоДокументаНаОснованииИнвентаризацииПродукции(ДокументОбъект,СтруктураЗаполненияТЧ);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#Область Прочее

#Область СоответствиеНоменклатуры

Функция ТекстЗапросаСоответствиеНоменклатурыВЕТИС(ИмяВременнойТаблицы = "СопоставленныеПозиции", ИменаТЧТовары = "ТоварыКОформлению")
	
	МассивТЧТовары = СтрРазделить(ИменаТЧТовары, ",", Ложь);
	ТекстЗапроса = "";
	
	Если МассивТЧТовары.Количество() > 1 Тогда
		
		ИмяВременнойТаблицыДляСопоставленияНоменклатуры = "ВтОбъединениеТЧДляСопоставления";
		
		ШаблонЗапросаТовары =
		"ВЫБРАТЬ
		|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия          КАК Серия
		|%1
		|ИЗ
		|	%2 КАК ТаблицаТовары
		|";
		ШаблонОбъединениеЗапросов = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
		
		Для НомерТаблицы = 0 По МассивТЧТовары.Количество() - 1 Цикл
			
			ТекущаяТЧТовары = МассивТЧТовары[НомерТаблицы];
			
			Если НомерТаблицы > 0 Тогда
				ТекстЗапроса = ТекстЗапроса + ШаблонОбъединениеЗапросов;
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса
				+ СтрШаблон(
					ШаблонЗапросаТовары,
					?(НомерТаблицы = 0,
						"ПОМЕСТИТЬ " + ИмяВременнойТаблицыДляСопоставленияНоменклатуры,
						""),
					ТекущаяТЧТовары);
			
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	Иначе
		ИмяВременнойТаблицыДляСопоставленияНоменклатуры = МассивТЧТовары[0];
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия          КАК Серия,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция, СоответствиеНоменклатурыВЕТИС2.Продукция)) КАК Продукция
	|ПОМЕСТИТЬ %1
	|ИЗ
	|	%2 КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС2
	|		ПО СоответствиеНоменклатурыВЕТИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыВЕТИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыВЕТИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция,СоответствиеНоменклатурыВЕТИС2.Продукция)) = 1
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ИмяВременнойТаблицы, ИмяВременнойТаблицыДляСопоставленияНоменклатуры);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СерииНоменклатуры

// Возвращает структуру параметров заполнения серий.
//
Функция ПараметрыЗаполненияСерий() Экспорт
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("ПараметрыУказанияСерий",	Неопределено);
	ПараметрыЗаполнения.Вставить("Склад",					Неопределено);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Заполняет свойство "Склад" в структуре параметров заполнения серий.
//
// Параметры:
//   Объект              - ДокументОбъект, ДанныеФормыКоллекция - Объект, хранящий значение склада.
//   ПараметрыЗаполнения - Структура                            - Параметры заполнения серий.
//
Процедура ЗаполнитьПараметрЗаполненияСклад(Объект, ПараметрыЗаполнения) Экспорт

	ПараметрыУказанияСерий = ПараметрыЗаполнения.ПараметрыУказанияСерий;
	
	Если ПараметрыУказанияСерий = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыУказанияСерий.ИмяПоляСклад)
		И ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Объект, ПараметрыУказанияСерий.ИмяПоляСклад) Тогда
		
		ПараметрыЗаполнения.Склад = Объект[ПараметрыУказанияСерий.ИмяПоляСклад];
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыУказанияСерийСоответствиеНоменклатурыВЕТИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "РегистрСведений.СоответствиеНоменклатурыВЕТИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает параметры указания серий в документе 'ВходящаяТранспортнаяОперацияВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийВходящаяТранспортнаяОперацияВЕТИС(Объект) Экспорт
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.ТорговыйОбъект, Ложь);
		
		ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
										Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		
		ИмяПоляСклад = "ТорговыйОбъект";
		
	Иначе
		
		ИспользоватьСерииНоменклатуры  = Ложь;
		УчитыватьСебестоимостьПоСериям = Ложь;
		
		ИмяПоляСклад = Неопределено;
		
	КонецЕсли;
	
	ПараметрыУказанияСерийТовары = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТовары.ПолноеИмяОбъекта = "Документ.ВходящаяТранспортнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТовары.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТовары.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТовары.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	ПараметрыУказанияСерийТовары.ИменаПолейДополнительные.Добавить("ЕстьУточнения");
	
	ПараметрыУказанияСерийТовары.ИмяТЧСерии   = "Товары";
	ПараметрыУказанияСерийТовары.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТовары.Дата         = Объект.Дата;
	
	ПараметрыУказанияСерийТоварыУточнение = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТоварыУточнение.ПолноеИмяОбъекта = "Документ.ВходящаяТранспортнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТоварыУточнение.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТоварыУточнение.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТоварыУточнение.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерийТоварыУточнение.ИмяТЧТовары  = "ТоварыУточнение";
	ПараметрыУказанияСерийТоварыУточнение.ИмяТЧСерии   = "ТоварыУточнение";
	ПараметрыУказанияСерийТоварыУточнение.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТоварыУточнение.Дата         = Объект.Дата;
	ПараметрыУказанияСерийТоварыУточнение.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	ПараметрыУказанияСерий = Новый Структура;
	ПараметрыУказанияСерий.Вставить("Товары", ПараметрыУказанияСерийТовары);
	ПараметрыУказанияСерий.Вставить("ТоварыУточнение", ПараметрыУказанияСерийТоварыУточнение);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает параметры указания серий в документе 'ИсходящаяТранспортнаяОперацияВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийИсходящаяТранспортнаяОперацияВЕТИС(Объект) Экспорт
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.ТорговыйОбъект, Ложь);
		
		ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
										Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		
		ИмяПоляСклад = "ТорговыйОбъект";
		
	Иначе
		
		ИспользоватьСерииНоменклатуры  = Ложь;
		УчитыватьСебестоимостьПоСериям = Ложь;
		
		ИмяПоляСклад = Неопределено;
		
	КонецЕсли;
	
	ПараметрыУказанияСерийТовары = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТовары.ПолноеИмяОбъекта = "Документ.ИсходящаяТранспортнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТовары.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТовары.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТовары.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерийТовары.ИмяТЧСерии   = "Товары";
	ПараметрыУказанияСерийТовары.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТовары.Дата         = Объект.Дата;
	
	Возврат ПараметрыУказанияСерийТовары;
	
КонецФункции

// Возвращает параметры указания серий в документе 'ИнвентаризацияПродукцииВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийИнвентаризацияПродукцииВЕТИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ИнвентаризацияПродукцииВЕТИС";
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		
		ПараметрыСерий = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.ТорговыйОбъект, Ложь);
		
		ИспользоватьСерииНоменклатуры = ПараметрыСерий.ИспользоватьСерииНоменклатуры
										Или ПараметрыСерий.УчитыватьСебестоимостьПоСериям;
		УчитыватьСебестоимостьПоСериям = ПараметрыСерий.УчитыватьСебестоимостьПоСериям;
		
		ИмяПоляСклад = "ТорговыйОбъект";
		
	Иначе
		
		ИспользоватьСерииНоменклатуры  = Ложь;
		УчитыватьСебестоимостьПоСериям = Ложь;
		
		ИмяПоляСклад = Неопределено;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерий.ИмяТЧСерии        = "Товары";
	ПараметрыУказанияСерий.ИмяПоляКоличество = "КоличествоИзменение";
	ПараметрыУказанияСерий.ИмяПоляСклад      = ИмяПоляСклад;
	ПараметрыУказанияСерий.Дата              = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает параметры указания серий в документе 'ПроизводственнаяОперацияВЕТИС'.
//
// Параметры:
//	Объект - Структура - Значения реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийПроизводственнаяОперацияВЕТИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = Новый Структура;
	
	ИспользоватьСерииНоменклатуры  = Ложь;
	УчитыватьСебестоимостьПоСериям = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ТорговыйОбъект) И ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		ИмяПоляСклад = "ТорговыйОбъект";
	КонецЕсли;
	
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.СборкаТоваров")
		И ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		
		ПараметрыСерий = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.ТорговыйОбъект, Ложь);
		
		ИспользоватьСерииНоменклатуры = ПараметрыСерий.ИспользоватьСерииНоменклатуры
										Или ПараметрыСерий.УчитыватьСебестоимостьПоСериям;
		УчитыватьСебестоимостьПоСериям = ПараметрыСерий.УчитыватьСебестоимостьПоСериям;
		
	//++ НЕ УТ
	Иначе
		
		НастройкиПроизводства = ПроизводствоСервер.ИспользованиеСерийВПроизводстве22();
		
		ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
											Или НастройкиПроизводства.ИспользоватьСерииНоменклатуры;
		УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
											Или НастройкиПроизводства.УчитыватьСебестоимостьПоСериям;
		
	//-- НЕ УТ
	КонецЕсли;

	// Параметры ТЧ Товары
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ПроизводственнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии   = "Товары";
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТЧ.Дата         = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("Товары", ПараметрыУказанияСерийТЧ);
	
	// Параметры ТЧ Сырье
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ПроизводственнаяОперацияВЕТИС";
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары  = "Сырье";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии   = "Сырье";
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = ИмяПоляСклад;
	ПараметрыУказанияСерийТЧ.Дата         = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("Сырье", ПараметрыУказанияСерийТЧ);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает параметры указания серий в документе 'ЗапросСкладскогоЖурналаВЕТИС'.
//
// Возвращаемое значение:
//	Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерийЗапросСкладскогоЖурналаВЕТИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЗапросСкладскогоЖурналаВЕТИС";
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		
		ПараметрыСерий = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.ТорговыйОбъект, Ложь);
		
		ИспользоватьСерииНоменклатуры = ПараметрыСерий.ИспользоватьСерииНоменклатуры
										Или ПараметрыСерий.УчитыватьСебестоимостьПоСериям;
		УчитыватьСебестоимостьПоСериям = ПараметрыСерий.УчитыватьСебестоимостьПоСериям;
		
		ИмяПоляСклад = "ТорговыйОбъект";
		
	Иначе
		
		ИспользоватьСерииНоменклатуры  = Ложь;
		УчитыватьСебестоимостьПоСериям = Ложь;
		
		ИмяПоляСклад = Неопределено;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВзаимодействиеСВЕТИС);
	
	ПараметрыУказанияСерий.ИмяТЧСерии                     = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад                   = ИмяПоляСклад;
	ПараметрыУказанияСерий.Дата                           = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСоответствиеНоменклатурыВЕТИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
		|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА 14
		|				ИНАЧЕ 13
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса заполнения статусов указания серий в документе 'ВходящаяТранспортнаяОперацияВЕТИС'.
//
// Параметры:
//	ПараметрыУказанияСерий - Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
// Возвращаемое значение:
//	Строка - Текст запроса заполнения статусов указания серий в документе 'ВходящаяТранспортнаяОперацияВЕТИС'.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВходящаяТранспортнаяОперацияВЕТИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстПоляТоварыЕстьУточнения КАК ЕстьУточнения,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО Товары.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.ВидНоменклатуры,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.ВидНоменклатуры,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.СерииНеИспользуются)
	|				ИЛИ Товары.ЕстьУточнения
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество > 0
	|									И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА ВЫБОР
	|										КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|											ТОГДА 14
	|										ИНАЧЕ 10
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|										ТОГДА 15
	|									ИНАЧЕ 11
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество > 0
	|												И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|											ТОГДА 6
	|										ИНАЧЕ 5
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Количество > 0
	|											И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|										ТОГДА 8
	|									ИНАЧЕ 27
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество > 0
	|									И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 4
	|							ИНАЧЕ 23
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Серия = ТоварыДляЗапроса.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Если ПараметрыУказанияСерий.ИменаПолейДополнительные.Найти("ЕстьУточнения") <> Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПоляТоварыЕстьУточнения", "Товары.ЕстьУточнения");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПоляТоварыЕстьУточнения", "ЛОЖЬ");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса заполнения статусов указания серий в документе 'ЗапросСкладскогоЖурналаВЕТИС'.
//
// Параметры:
//	ПараметрыУказанияСерий - Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
// Возвращаемое значение:
//	Строка - Текст запроса заполнения статусов указания серий в документе 'ИсходящаяТранспортнаяОперацияВЕТИС'.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийЗапросСкладскогоЖурналаВЕТИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО Товары.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.ВидНоменклатуры,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.ВидНоменклатуры,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.СерииНеИспользуются)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество > 0
	|									И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА ВЫБОР
	|										КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|											ТОГДА 14
	|										ИНАЧЕ 10
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|										ТОГДА 15
	|									ИНАЧЕ 11
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество > 0
	|												И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|											ТОГДА 6
	|										ИНАЧЕ 25
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Количество > 0
	|											И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|										ТОГДА 8
	|									ИНАЧЕ 27
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество > 0
	|									И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 4
	|							ИНАЧЕ 23
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Серия = ТоварыДляЗапроса.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса заполнения статусов указания серий в документе 'ИсходящаяТранспортнаяОперацияВЕТИС'.
//
// Параметры:
//	ПараметрыУказанияСерий - Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
// Возвращаемое значение:
//	Строка - Текст запроса заполнения статусов указания серий в документе 'ИсходящаяТранспортнаяОперацияВЕТИС'.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийИсходящаяТранспортнаяОперацияВЕТИС() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО Товары.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.ВидНоменклатуры,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.ВидНоменклатуры,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.СерииНеИспользуются)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество > 0
	|									И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА ВЫБОР
	|										КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|											ТОГДА 14
	|										ИНАЧЕ 10
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|										ТОГДА 15
	|									ИНАЧЕ 11
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество > 0
	|												И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|											ТОГДА 6
	|										ИНАЧЕ 25
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Количество > 0
	|											И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|										ТОГДА 8
	|									ИНАЧЕ 27
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество > 0
	|									И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 4
	|							ИНАЧЕ 23
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Серия = ТоварыДляЗапроса.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса заполнения статусов указания серий в документе 'ИнвентаризацияПродукцииВЕТИС'.
//
// Параметры:
//	ПараметрыУказанияСерий - Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
// Возвращаемое значение:
//	Строка - Текст запроса заполнения статусов указания серий в документе 'ИнвентаризацияПродукцииВЕТИС'.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийИнвентаризацияПродукцииВЕТИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки    КАК НомерСтроки,
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО Товары.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.ВидНоменклатуры,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.СерииНеИспользуются)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА ВЫБОР
	|										КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|											ТОГДА 14
	|										ИНАЧЕ 10
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|										ТОГДА 15
	|									ИНАЧЕ 11
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|											ТОГДА 6
	|										ИНАЧЕ 25
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|										ТОГДА 8
	|									ИНАЧЕ 27
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 4
	|							ИНАЧЕ 23
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Серия = ТоварыДляЗапроса.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса заполнения статусов указания серий в документе 'ПроизводственнаяОперацияВЕТИС'.
//
// Параметры:
//	ПараметрыУказанияСерий - Структура - Состав полей определен в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
// Возвращаемое значение:
//	Строка - Текст запроса заполнения статусов указания серий в документе 'ПроизводственнаяОперацияВЕТИС'.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийПроизводственнаяОперацияВЕТИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки    КАК НомерСтроки,
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия,
	|	Товары.Количество     КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Товары.Номенклатура      КАК Номенклатура,
	|	Товары.Характеристика    КАК Характеристика,
	|	Товары.Серия             КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО Товары.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.ВидНоменклатуры,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаНоменклатуры.ВидНоменклатуры,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|				ИЛИ ПолитикиСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)
	|				ИЛИ ПолитикиСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.СерииНеИспользуются)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество > 0
	|									И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА ВЫБОР
	|										КОГДА ПолитикиСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|											ТОГДА 14
	|										ИНАЧЕ 10
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ПолитикиСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|										ТОГДА 15
	|									ИНАЧЕ 11
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество > 0
	|												И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|											ТОГДА 6
	|										ИНАЧЕ 25
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Количество > 0
	|											И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|										ТОГДА 8
	|									ИНАЧЕ 27
	|								КОНЕЦ
	|						КОНЕЦ
	|				КОГДА ПолитикиСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|					ТОГДА ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество > 0
	|									И ТоварыДляЗапроса.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 4
	|							ИНАЧЕ 23
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Серия = ТоварыДляЗапроса.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПолитикУчетаСерий КАК ПолитикиСерий
	|		ПО ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиСерий.Ссылка
	|			//&УсловиеСоединенияТаблиц
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Если ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаПолитикУчетаСерий",   "Справочник.ВидыНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&УсловиеСоединенияТаблиц", "");
	Иначе
		ТекстУсловияСоединенияТаблиц = "И ПолитикиСерий.Склад = &Склад";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаПолитикУчетаСерий",   "Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&УсловиеСоединенияТаблиц", ТекстУсловияСоединенияТаблиц);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Заполняет реквизит "Серия" в товарной табличной части.
//
// Параметры:
//	ТабличнаяЧасть		- ДанныеФормыКоллекция, ТабличнаяЧасть, ТаблицаЗначений - Товарная табличная часть объекта.
//	ВыделенныеСтроки	- Массив	- Обрабатываемые строки таблицы.
//	ПараметрыЗаполнения	- Структура	- См ИнтеграцияВЕТИСПереопределяемый.ПараметрыЗаполненияСерий.
//
// Возвращаемое значение:
//	Структура - Структура со свойствами:
//		* ЗаполнениеЗавершено	- Булево, Истина		- Признак успешного выполнения генераций и заполнения серий.
//		* СписокОшибок			- Массив, Неопределено	- Список ошибок.
//
Функция ЗаполнитьСгенерироватьСерии(ТабличнаяЧастьТовары,
									ВыделенныеСтрокиТоваров,
									ПараметрыЗаполнения,
									ТабличнаяЧастьУточнения = Неопределено) Экспорт
									
	ПараметрыУказанияСерий = ПараметрыЗаполнения.ПараметрыУказанияСерий;
	Склад = ПараметрыЗаполнения.Склад;
	
	ПроверитьСериюРассчитатьСтатус = Новый Структура("ПараметрыУказанияСерий, Склад", ПараметрыУказанияСерий, Склад);
	
	СтруктураДействий = Новый Структура();
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", ПроверитьСериюРассчитатьСтатус);
	
	// Инициализация результирующей структуры.
	Результат = Новый Структура("ЗаполнениеЗавершено, СписокОшибок", Ложь, Неопределено);
	
	Запрос = Новый Запрос;
	
	Если ТабличнаяЧастьУточнения = Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	"""" КАК ИдентификаторСтроки,
		|	ТаблицаТовары.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	ТаблицаТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ЛОЖЬ КАК ЕстьУточнения
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&ТаблицаТовары КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	NULL КАК НомерСтроки,
		|	NULL КАК ИдентификаторСтроки,
		|	NULL КАК ИдентификаторПартии,
		|	NULL КАК Номенклатура,
		|	NULL КАК Характеристика,
		|	NULL КАК СтатусУказанияСерий,
		|	NULL КАК Серия
		|ПОМЕСТИТЬ ВтУточнения
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторСтроки";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаТовары.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	ТаблицаТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
		|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ТаблицаТовары.ЕстьУточнения КАК ЕстьУточнения
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&ТаблицаТовары КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыУточнение.НомерСтроки КАК НомерСтроки,
		|	ТоварыУточнение.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТоварыУточнение.ИдентификаторПартии КАК ИдентификаторПартии,
		|	ТоварыУточнение.Номенклатура КАК Номенклатура,
		|	ТоварыУточнение.Характеристика КАК Характеристика,
		|	ТоварыУточнение.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	ТоварыУточнение.Серия КАК Серия
		|ПОМЕСТИТЬ ВтУточнения
		|ИЗ
		|	&ТоварыУточнение КАК ТоварыУточнение
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторСтроки";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете();
	
	ТекстЗапроса = 	ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВтТовары.НомерСтроки КАК НомерСтрокиТовары,
	|	ЕСТЬNULL(ВтУточнения.НомерСтроки, 0) КАК НомерСтрокиУточнения,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.ИдентификаторПартии, """""""")
	|		ИНАЧЕ ВтТовары.ИдентификаторПартии
	|	КОНЕЦ КАК ИдентификаторПартии,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.СтатусУказанияСерий, 0)
	|		ИНАЧЕ ВтТовары.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ВтТовары.ЗаписьСкладскогоЖурнала КАК ЗаписьСкладскогоЖурнала,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.ДатаПроизводстваНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПроизводства,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.СрокГодностиНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)) КАК ГоденДо,
	|	ВтТовары.ЕстьУточнения
	|		И ВтУточнения.ИдентификаторСтроки ЕСТЬ NULL КАК ОшибкаНетУточнения,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Производитель) КАК КоличествоПроизводителей,
	|	ВтТовары.ЕстьУточнения КАК ЕстьУточнения,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьХарактеристики, ЛОЖЬ) КАК НастройкаВидаИспользоватьХарактеристики,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьДатуПроизводстваСерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьСрокГодностиСерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьСрокГодностиСерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьИдентификаторПартииВЕТИССерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьПроизводителяВЕТИССерии, ЛОЖЬ) КАК НастройкаВидаИспользоватьПроизводителяВЕТИССерии,
	|	ЕСТЬNULL(ВидыНоменклатуры.АвтоматическиГенерироватьСерии, ЛОЖЬ) КАК НастройкаВидаАвтоматическиГенерироватьСерии,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	|			ТОГДА ВидыНоменклатуры.ВладелецСерий
	|		ИНАЧЕ ВидыНоменклатуры.Ссылка
	|	КОНЕЦ КАК ВладелецСерий
	|ПОМЕСТИТЬ ВТОбъединеннаяТаблицаТоваров
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтУточнения КАК ВтУточнения
	|		ПО ВтТовары.ИдентификаторСтроки = ВтУточнения.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС.Производители КАК ЗаписиСкладскогоЖурналаВЕТИСПроизводители
	|		ПО ВтТовары.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС КАК ЗаписиСкладскогоЖурналаВЕТИС
	|		ПО ВтТовары.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО (ВЫБОР
	|				КОГДА ВтТовары.ЕстьУточнения
	|					ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|				ИНАЧЕ ВтТовары.Номенклатура
	|			КОНЕЦ = СпрНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СпрНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Характеристика
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.ИдентификаторПартии, """""""")
	|		ИНАЧЕ ВтТовары.ИдентификаторПартии
	|	КОНЕЦ,
	|	ВтТовары.ЕстьУточнения,
	|	ВтТовары.НомерСтроки,
	|	ЕСТЬNULL(ВтУточнения.НомерСтроки, 0),
	|	ВтТовары.ЕстьУточнения
	|		И ВтУточнения.ИдентификаторСтроки ЕСТЬ NULL,
	|	ВтТовары.ЗаписьСкладскогоЖурнала,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ВтТовары.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВтТовары.ЕстьУточнения
	|			ТОГДА ЕСТЬNULL(ВтУточнения.СтатусУказанияСерий, 0)
	|		ИНАЧЕ ВтТовары.СтатусУказанияСерий
	|	КОНЕЦ,
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.ДатаПроизводстваНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(ЗаписиСкладскогоЖурналаВЕТИС.СрокГодностиНачалоПериода, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьХарактеристики, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьСрокГодностиСерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьИдентификаторПартииВЕТИССерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.ИспользоватьПроизводителяВЕТИССерии, ЛОЖЬ),
	|	ЕСТЬNULL(ВидыНоменклатуры.АвтоматическиГенерироватьСерии, ЛОЖЬ),
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
	|			ТОГДА ВидыНоменклатуры.ВладелецСерий
	|		ИНАЧЕ ВидыНоменклатуры.Ссылка
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	""ОшибкаНетУточнения"" КАК ТипОшибки,
	|	ЛОЖЬ КАК ЭтоНомерСтрокиУточнений
	|ПОМЕСТИТЬ ВТСтрокиСОшибками
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетНоменклатуры"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНеНужноГенерировать"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетХарактеристики"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьХарактеристики
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетЗаписиСкладскогоЖурнала"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И (ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии
	|			ИЛИ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|			ИЛИ ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии)
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала = ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетДатыПроизводства"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|	И ВТОбъединеннаяТаблицаТоваров.ДатаПроизводства = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетГоденДо"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии
	|	И ВТОбъединеннаяТаблицаТоваров.ГоденДо = ДАТАВРЕМЯ(1, 1, 1)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетИдентификатораПартии"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.ИдентификаторПартии = """"
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаНетПроизводителя"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.КоличествоПроизводителей = 0
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения,
	|	""ОшибкаМногоПроизводетелей"",
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|ГДЕ
	|	НЕ ВТОбъединеннаяТаблицаТоваров.ОшибкаНетУточнения
	|	И НЕ ВТОбъединеннаяТаблицаТоваров.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|	И ВТОбъединеннаяТаблицаТоваров.КоличествоПроизводителей > 1
	|	И ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала <> ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	И ВТОбъединеннаяТаблицаТоваров.НастройкаВидаАвтоматическиГенерироватьСерии
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиТовары,
	|	НомерСтрокиУточнения
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТОбъединеннаяТаблицаТоваров.ЕстьУточнения КАК ЕстьУточнения,
	|	"""" КАК Номер,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьЗаписьСкладскогоЖурналаВЕТИССерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ЗаписиСкладскогоЖурналаВЕТИС.ПустаяСсылка)
	|	КОНЕЦ КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии
	|			ТОГДА ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Производитель
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка)
	|	КОНЕЦ КАК ПроизводительВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьИдентификаторПартииВЕТИССерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ИдентификаторПартии
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИдентификаторПартииВЕТИС,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьСрокГодностиСерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ГоденДо
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ГоденДо,
	|	ВЫБОР
	|		КОГДА ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьДатуПроизводстваСерии
	|			ТОГДА ВТОбъединеннаяТаблицаТоваров.ДатаПроизводства
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаПроизводства,
	|	ВТОбъединеннаяТаблицаТоваров.ВладелецСерий КАК ВладелецСерий
	|ПОМЕСТИТЬ ВТРеквизитыСерий
	|ИЗ
	|	ВТОбъединеннаяТаблицаТоваров КАК ВТОбъединеннаяТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗаписиСкладскогоЖурналаВЕТИС.Производители КАК ЗаписиСкладскогоЖурналаВЕТИСПроизводители
	|			ПО ВТОбъединеннаяТаблицаТоваров.ЗаписьСкладскогоЖурнала = ЗаписиСкладскогоЖурналаВЕТИСПроизводители.Ссылка
	|			И (ВТОбъединеннаяТаблицаТоваров.НастройкаВидаИспользоватьПроизводителяВЕТИССерии)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиСОшибками КАК ВТСтрокиСОшибками
	|			ПО ВТОбъединеннаяТаблицаТоваров.НомерСтрокиТовары = ВТСтрокиСОшибками.НомерСтрокиТовары
	|			И ВТОбъединеннаяТаблицаТоваров.НомерСтрокиУточнения = ВТСтрокиСОшибками.НомерСтрокиУточнения
	|ГДЕ
	|	ВТСтрокиСОшибками.НомерСтрокиТовары ЕСТЬ NULL
	|	И ВТОбъединеннаяТаблицаТоваров.СтатусУказанияСерий <> 0
	|	И ВТОбъединеннаяТаблицаТоваров.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРеквизитыСерий.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТРеквизитыСерий.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТРеквизитыСерий.ЕстьУточнения КАК ЕстьУточнения,
	|	ВТРеквизитыСерий.Номер КАК Номер,
	|	ВТРеквизитыСерий.ЗаписьСкладскогоЖурналаВЕТИС КАК ЗаписьСкладскогоЖурналаВЕТИС,
	|	ВТРеквизитыСерий.ПроизводительВЕТИС КАК ПроизводительВЕТИС,
	|	ВТРеквизитыСерий.ИдентификаторПартииВЕТИС КАК ИдентификаторПартииВЕТИС,
	|	ВТРеквизитыСерий.ГоденДо КАК ГоденДо,
	|	ВТРеквизитыСерий.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТРеквизитыСерий.ВладелецСерий КАК ВидНоменклатуры,
	|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия
	|ИЗ
	|	ВТРеквизитыСерий КАК ВТРеквизитыСерий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО ВТРеквизитыСерий.Номер = СерииНоменклатуры.Номер
	|			И ВТРеквизитыСерий.ЗаписьСкладскогоЖурналаВЕТИС = СерииНоменклатуры.ЗаписьСкладскогоЖурналаВЕТИС
	|			И ВТРеквизитыСерий.ПроизводительВЕТИС = СерииНоменклатуры.ПроизводительВЕТИС
	|			И ВТРеквизитыСерий.ИдентификаторПартииВЕТИС = СерииНоменклатуры.ИдентификаторПартииВЕТИС
	|			И ВТРеквизитыСерий.ГоденДо = СерииНоменклатуры.ГоденДо
	|			И ВТРеквизитыСерий.ДатаПроизводства = СерииНоменклатуры.ДатаПроизводства
	|			И ВТРеквизитыСерий.ВладелецСерий = СерииНоменклатуры.ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСтрокиСОшибками.НомерСтрокиТовары КАК НомерСтрокиТовары,
	|	ВТСтрокиСОшибками.НомерСтрокиУточнения КАК НомерСтрокиУточнения,
	|	ВТСтрокиСОшибками.ТипОшибки КАК ТипОшибки,
	|	ВТСтрокиСОшибками.ЭтоНомерСтрокиУточнений КАК ЭтоНомерСтрокиУточнений
	|ИЗ
	|	ВТСтрокиСОшибками КАК ВТСтрокиСОшибками
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиТовары,
	|	НомерСтрокиУточнения";
	
	Запрос.Текст = ТекстЗапроса;
	Если ТипЗнч(ТабличнаяЧастьТовары) = Тип("ДанныеФормыКоллекция") Тогда
		Запрос.УстановитьПараметр("ТаблицаТовары", ТабличнаяЧастьТовары.Выгрузить(ВыделенныеСтрокиТоваров));
	ИначеЕсли ТипЗнч(ТабличнаяЧастьТовары) = Тип("ТаблицаЗначений") Тогда
		Запрос.УстановитьПараметр("ТаблицаТовары", ТабличнаяЧастьТовары.Скопировать(ВыделенныеСтрокиТоваров));
	Иначе
		ВызватьИсключение НСтр("ru = 'Неправильный тип параметра ТабличнаяЧастьТовары метода ИнтеграцияВЕТИСУТ.ЗаполнитьСгенерироватьСерии';
								|en = 'Invalid type of parameter ТабличнаяЧастьТовары of method ИнтеграцияВЕТИСУТ.ЗаполнитьСгенерироватьСерии'");
	КонецЕсли;
	
	Если ТабличнаяЧастьУточнения <> Неопределено Тогда 	
		Запрос.УстановитьПараметр("ТоварыУточнение", ТабличнаяЧастьУточнения.Выгрузить());
	КонецЕсли;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаОшибок         = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выгрузить();
	ТаблицаУстановкиСерий = РезультатыЗапроса[РезультатыЗапроса.ВГраница()-1].Выгрузить();
	
	Результат.ЗаполнениеЗавершено = ТаблицаОшибок.Количество() = 0
									И ТаблицаУстановкиСерий.Количество() > 0;
	
	Для Каждого СтрТабл из ТаблицаОшибок Цикл
		
		Если СтрТабл.ТипОшибки = "ОшибкаНетУточнения" Тогда
			ПолеОшибки = "Объект.Товары.НомерСтроки";
			
			ТекстСообщения = НСтр("ru = 'По строке %НомерСтроки% указано, что должны быть уточнения, но строки уточнения не введены.';
									|en = 'Clarifications are required for line %НомерСтроки%, but no clarification lines are entered.'");
			
		Иначе
			
			Если СтрТабл.ТипОшибки = "ОшибкаНетНоменклатуры" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указана номенклатура.';
											|en = 'In one of the clarification lines, products are not specified in line %НомерСтроки%.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Номенклатура";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана номенклатура.';
											|en = 'In line %НомерСтроки% products are not specified.'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНеНужноГенерировать" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% выбрана номенклатура, по которой не настроена автоматическая генерация серий.';
											|en = 'In one of the clarification lines, products, for which automatic generation of series is not configured, are selected for line %НомерСтроки%.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Номенклатура";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% выбрана номенклатура, по которой не настроена автоматическая генерация серий';
											|en = 'In line %НомерСтроки%, products, for which automatic generation of series is not configured, are selected.'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетХарактеристики" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указана характеристика - серии нужно генерировать после указания характеристики.';
											|en = 'In one of the clarification lines, characteristic is not specified for line %НомерСтроки%. Series should be generated once a characteristic is specified.'");
				Иначе
					ПолеОшибки = "Объект.Товары.Характеристика";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана характеристика - серии нужно генерировать после указания характеристики.';
											|en = 'In line %НомерСтроки%, characteristic is not specified. Series should be generated once the characteristic is specified.'");
				КонецЕсли;
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетЗаписиСкладскогоЖурнала" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана запись складского журнала ВетИС - серии нужно генерировать после загрузки записи складского журнала из ВетИС.';
										|en = 'In line %НомерСтроки%, VetIS warehouse book record is not specified. Series should be generated after importing the warehouse book record from VetIS.'");

			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетДатыПроизводства" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указана запись складского журнала ВетИС, в которой не заполнена дата начала производства. Создайте серию вручную.';
										|en = 'In line %НомерСтроки%, VetIS warehouse book record is not specified. Start date of production is not filled in in the record. Generate series manually.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетГоденДо" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВетИС, в которой не заполнена дата начала периода срока годности. Создайте серию вручную.';
										|en = 'In line %НомерСтроки%, VetIS warehouse book record is specified. Expiration period start is not filled in the record. Generate series manually.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетПроизводителя" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВетИС, в которой не заполнен производитель. Создайте серию вручную.';
										|en = 'In line %НомерСтроки%, VetIS warehouse book record is specified. A manufacturer is not filled in the record. Generate series manually.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаМногоПроизводетелей" Тогда
				
				ПолеОшибки = "Объект.Товары.ЗаписьСкладскогоЖурнала";
				ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% указана запись складского журнала ВетИС, в которой указано более одного производителя. Создайте серию вручную.';
										|en = 'In line %НомерСтроки%, VetIS warehouse book record is specified. More than one manufacturer is specified in the record. Generate series manually.'");
				
			ИначеЕсли СтрТабл.ТипОшибки = "ОшибкаНетИдентификатораПартии" Тогда
				
				Если СтрТабл.ЭтоНомерСтрокиУточнений Тогда
					ПолеОшибки = "Объект.Товары.НомерСтроки";
					ТекстСообщения = НСтр("ru = 'В одной из строк уточнения по строке %НомерСтроки% не указан идентификатор партии ВетИС. Создайте серию вручную.';
											|en = 'In one of the clarification lines, VetIS batch ID is not specified for line %НомерСтроки%. Generate series manually.'");
				Иначе
					ПолеОшибки = "Объект.Товары.ИдентификаторПартии";
					ТекстСообщения = НСтр("ru = 'В строке %НомерСтроки% не указан идентификатор партии ВетИС. Создайте серию вручную.';
											|en = 'VetIS batch ID is not specified in line %НомерСтроки%. Generate series manually.'");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
			
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрТабл.НомерСтрокиТовары);
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок, ПолеОшибки, ТекстСообщения, Неопределено, СтрТабл.НомерСтрокиТовары - 1);
	КонецЦикла;
	
	СозданныеСерии = Новый ТаблицаЗначений;
	СозданныеСерии.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	
	СозданныеСерии.Колонки.Добавить("ВидНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ВидыНоменклатуры"));
	СозданныеСерии.Колонки.Добавить("ЗаписьСкладскогоЖурналаВЕТИС", Новый ОписаниеТипов("СправочникСсылка.ЗаписиСкладскогоЖурналаВЕТИС"));
	СозданныеСерии.Колонки.Добавить("ПроизводительВЕТИС", Новый ОписаниеТипов("СправочникСсылка.ПредприятияВЕТИС"));
	СозданныеСерии.Колонки.Добавить("ИдентификаторПартииВЕТИС", Новый ОписаниеТипов("Строка"));
	СозданныеСерии.Колонки.Добавить("ГоденДо", Новый ОписаниеТипов("Дата"));
	СозданныеСерии.Колонки.Добавить("ДатаПроизводства", Новый ОписаниеТипов("Дата"));
	
	ПоляПоиска = "ЗаписьСкладскогоЖурналаВЕТИС,ПроизводительВЕТИС,ИдентификаторПартииВЕТИС,ГоденДо,ДатаПроизводства";
	
	СозданныеСерии.Индексы.Добавить(ПоляПоиска);
	
	СтруктураОтбора = Новый Структура(ПоляПоиска);
	
	Для Каждого СтрТабл из ТаблицаУстановкиСерий Цикл
		
		Если ЗначениеЗаполнено(СтрТабл.Серия) Тогда
			Серия = СтрТабл.Серия;
		Иначе
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрТабл);
			НайденныеСтроки = СозданныеСерии.НайтиСтроки(СтруктураОтбора);
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				Серия = НайденныеСтроки[0].Серия;
			Иначе
				
				Серия = СоздатьСерию(СтрТабл, Результат);
				
				Если Не ЗначениеЗаполнено(Серия) Тогда
					Результат.ЗаполнениеЗавершено = Ложь;
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = СозданныеСерии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрТабл);
				НоваяСтрока.Серия = Серия;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрТабл.ЕстьУточнения Тогда
			СтрокаТЧ = ТабличнаяЧастьУточнения[СтрТабл.НомерСтрокиУточнения - 1];
		Иначе
			СтрокаТЧ = ТабличнаяЧастьТовары[СтрТабл.НомерСтрокиТовары - 1];
		КонецЕсли;
		
		СтрокаТЧ.Серия = Серия;
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧ, СтруктураДействий, Неопределено);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СоздатьСерию(Реквизиты, Результат)
	
	СерияСсылка = Справочники.СерииНоменклатуры.ПустаяСсылка();
	
	Попытка
		
		НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		НоваяСерия.Заполнить(Реквизиты);
		НоваяСерия.Записать();
		
		СерияСсылка = НоваяСерия.Ссылка;
		
	Исключение
		ПолеОшибки = "Объект.Товары.Серия";
		ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать серию по причине: %Причина%';
								|en = 'Cannot generate series due to: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок, ПолеОшибки, ТекстСообщения,
			Неопределено);
		
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'ВетИС';
										|en = 'VetIS'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.СерииНоменклатуры,
			НоваяСерия.Ссылка,
			ТекстСообщения);
	КонецПопытки;
		
	Возврат СерияСсылка;
	
КонецФункции

#КонецОбласти

#Область ИдентификаторыПартий

// Устанавливает служебный признак необходимости заполнения идентификатора партии в строке табличной части объекта.
//
// Параметры:
// - ТабличнаяЧастьТовары - ДанныеФормыКоллекция - Товарная табличная часть объекта.
//
Процедура ЗаполнитьИспользованиеИдентификаторовПартий(ТабличнаяЧастьТовары) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапросаИспользованиеИдентификаторовПартийТоваров();
	Запрос.УстановитьПараметр("ТабличнаяЧастьТовары", ТабличнаяЧастьТовары.Выгрузить(, "НомерСтроки,Номенклатура,СтатусУказанияСерий"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Для Каждого СтрокаТовары Из ТабличнаяЧастьТовары Цикл
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(СтрокаТовары.НомерСтроки, "НомерСтроки") Тогда
			СтрокаТовары.ИспользоватьИдентификаторПартии = Выборка.ИспользоватьИдентификаторПартии;
		Иначе
			СтрокаТовары.ИспользоватьИдентификаторПартии = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Возвращает текст запроса с данными для определения необходимости указания идентификатора партии.
//
// Возвращаемое значение:
//	Строка - Текст запроса.
//
Функция ТекстЗапросаИспользованиеИдентификаторовПартийТоваров()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧастьТовары.НомерСтроки         КАК НомерСтроки,
	|	ТабличнаяЧастьТовары.Номенклатура        КАК Номенклатура,
	|	ТабличнаяЧастьТовары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ
	|	ТаблицаТовары
	|ИЗ
	|	&ТабличнаяЧастьТовары КАК ТабличнаяЧастьТовары
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки  КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ СправочникВидыНоменклатуры.ИспользоватьСерии И СправочникВидыНоменклатуры.ИспользоватьИдентификаторПартииВЕТИССерии
	|	КОНЕЦ КАК ИспользоватьИдентификаторПартии
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК СправочникВидыНоменклатуры
	|		ПО СправочникНоменклатура.ВидНоменклатуры = СправочникВидыНоменклатуры.Ссылка
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти
