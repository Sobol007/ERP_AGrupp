
Процедура СнятиеРезервов() Экспорт
	
	Если ЗначениеЗаполнено(Константы.АГ_КоличествоДнейРезерваНаСкладе.Получить()) Тогда
		ДатаСреза = РЭЙ_СлужебныйСервер.ОпределитьДату(ТекущаяДата(),-Константы.АГ_КоличествоДнейРезерваНаСкладе.Получить()-1);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТоварыКОтгрузкеОстатки.ДокументОтгрузки КАК ДокументОтгрузки,
		               |	ТоварыКОтгрузкеОстатки.Номенклатура КАК Номенклатура,
		               |	ТоварыКОтгрузкеОстатки.Характеристика КАК Характеристика,
		               |	ТоварыКОтгрузкеОстатки.Серия КАК Серия,
		               |	ТоварыКОтгрузкеОстатки.ВРезервеОстаток КАК ВРезервеОстаток
		               |ИЗ
		               |	РегистрНакопления.ТоварыКОтгрузке.Остатки(
		               |			&ДатаСреза,
		               |			ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
		               |				И ДокументОтгрузки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)) КАК ТоварыКОтгрузкеОстатки
		               |ГДЕ
		               |	ТоварыКОтгрузкеОстатки.ВРезервеОстаток > 0";
		
		Запрос.УстановитьПараметр("ДатаСреза", Новый Граница(КонецДня(ДатаСреза),ВидГраницы.Включая));
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
		
			
		
		КонецЦикла;
		
		
	КонецЕсли;
	
КонецПроцедуры	


//<--АГ:[TEND_0001_24][04.03.2019 21:07:51][Фирсанов О.И.]
Процедура ИзменениеСтатусовТендеров() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АГ_Тендер.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА &ТекущаяДата< АГ_Тендер.ОПЗ 
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.АГ_СтатусТендера.ПодачаДокументов)
		|		КОГДА АГ_Тендер.ОПЗ <= &ТекущаяДата
		|				И АГ_Тендер.ДатаПодведенияИтогов > &ТекущаяДата
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.АГ_СтатусТендера.ОжиданиеРезультата)
		|		ИНАЧЕ АГ_Тендер.СтатусТендера
		|	КОНЕЦ КАК НовыйСтатус
		|ИЗ
		|	Документ.АГ_Тендер КАК АГ_Тендер
		|ГДЕ
		|	АГ_Тендер.ШагТендера = ЗНАЧЕНИЕ(Перечисление.АГ_ШагиТендера.Шаг6_ПодачаДокументов)
		|	И ВЫБОР
		|			КОГДА &ТекущаяДата< АГ_Тендер.ОПЗ
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.АГ_СтатусТендера.ПодачаДокументов)
		|			КОГДА &ТекущаяДата>=АГ_Тендер.ОПЗ 
		|					И &ТекущаяДата<АГ_Тендер.ДатаПодведенияИтогов
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.АГ_СтатусТендера.ОжиданиеРезультата)
		|			ИНАЧЕ АГ_Тендер.СтатусТендера
		|		КОНЕЦ <> АГ_Тендер.СтатусТендера
		|	И АГ_Тендер.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументОбъект	= ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		
		ОбновитьСтатусДокумента = Истина;
		Попытка 
			ДокументОбъект.Заблокировать();
		Исключение
			// в случае блокировки - не выполнять изменение объекта
			ОбновитьСтатусДокумента = Ложь;
			// записать предупреждение в журнал регистрации
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Фоновое обновление статусов тендеров'", Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Предупреждение,Метаданные.Документы.АГ_Тендер, ДокументОбъект, ОписаниеОшибки());
		КонецПопытки;
		
		// Пропустить обработку объекта, если он заблокирован.
		Если ОбновитьСтатусДокумента Тогда
			ДокументОбъект.СтатусТендера = ВыборкаДетальныеЗаписи.НовыйСтатус;
			ДокументОбъект.Записать();
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Фоновое обновление статусов тендеров'", Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Информация,Метаданные.Документы.АГ_Тендер, ДокументОбъект, "Установлен новый статус:"+ВыборкаДетальныеЗаписи.НовыйСтатус);
			
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры
//-->АГ:[TEND_0001_24]


//<--АГ:[SAPDZ_0001_8][24.03.2019 21:07:51][Фирсанов О.И.]
Процедура УведомлениеОбОкончанииСроковКредитныхЛимитов() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ДоговорыКонтрагентов.Партнер.Наименование КАК ПартнерНаименование,
		|	ДоговорыКонтрагентов.АГ_СрокКредитногоЛимита КАК АГ_СрокКредитногоЛимита,
		|	ДоговорыКонтрагентов.Менеджер КАК Менеджер
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.АГ_СрокКредитногоЛимита <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	И РАЗНОСТЬДАТ(&ТекущаяДата, ДоговорыКонтрагентов.АГ_СрокКредитногоЛимита,  ДЕНЬ) <= 5
		|	И РАЗНОСТЬДАТ(&ТекущаяДата, ДоговорыКонтрагентов.АГ_СрокКредитногоЛимита,  ДЕНЬ) >= 0
		|	И (ДоговорыКонтрагентов.ДатаОкончанияДействия > &ТекущаяДата
		|			ИЛИ ДоговорыКонтрагентов.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
		|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтруктураПараметры	= Новый Структура("Договор,ПартнерНаименование,Менеджер,АГ_СрокКредитногоЛимита");
		ЗаполнитьЗначенияСвойств(СтруктураПараметры,ВыборкаДетальныеЗаписи);
		
		ПараметрыОтправки	= СтруктураПараметровПисьмаОбОкончанииСроковКредитныхЛимитов(СтруктураПараметры);
		
		РезультатОтправки	= ОтправитьПисьмоОтветственному(СтруктураПараметры,ПараметрыОтправки);
		
		Если НЕ РезультатОтправки Тогда
			ОписаниеОшибки	= "Не удалось отправить письмо";
			Если ТипЗнч(ПараметрыОтправки)=Тип("Структура") Тогда
				ПараметрыОтправки.Свойство("ОписаниеОшибки",ОписаниеОшибки);
			КонецЕсли;
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Фоновое отправка уведомлений об окончании сроков кредитных лимитов'", Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Предупреждение,,,ОписаниеОшибки);	
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

Процедура УведомлениеОбОкончанииСроковНадежностиПокупателей() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АГ_НадежностьКонтрагентаИЛСОСрезПоследних.Контрагент КАК Контрагент,
		|	АГ_НадежностьКонтрагентаИЛСОСрезПоследних.Контрагент.Партнер КАК Партнер,
		|	АГ_НадежностьКонтрагентаИЛСОСрезПоследних.Контрагент.Партнер.Наименование КАК ПартнерНаименование,
		|	АГ_НадежностьКонтрагентаИЛСОСрезПоследних.Контрагент.Партнер.ОсновнойМенеджер КАК Менеджер,
		|	АГ_НадежностьКонтрагентаИЛСОСрезПоследних.ДействуетДо  КАК ДействуетДо
		|ИЗ
		|	РегистрСведений.АГ_НадежностьКонтрагентаИЛСО.СрезПоследних КАК АГ_НадежностьКонтрагентаИЛСОСрезПоследних
		|ГДЕ
		//<--АГ:[SAPDZ_0001_8][30.05.2019 21:07:51][Фирсанов О.И.]
		//|	РАЗНОСТЬДАТ(&ТекущаяДата,НАЧАЛОПЕРИОДА(АГ_НадежностьКонтрагентаИЛСОСрезПоследних.ДействуетДо, ДЕНЬ),  ДЕНЬ)<= 3
		//|	И РАЗНОСТЬДАТ(&ТекущаяДата,НАЧАЛОПЕРИОДА(АГ_НадежностьКонтрагентаИЛСОСрезПоследних.ДействуетДо, ДЕНЬ),  ДЕНЬ)>= 0";
		|	РАЗНОСТЬДАТ(&ТекущаяДата,НАЧАЛОПЕРИОДА(АГ_НадежностьКонтрагентаИЛСОСрезПоследних.ДействуетДо, ДЕНЬ),  ДЕНЬ)<= 7
		|	И РАЗНОСТЬДАТ(&ТекущаяДата,НАЧАЛОПЕРИОДА(АГ_НадежностьКонтрагентаИЛСОСрезПоследних.ДействуетДо, ДЕНЬ),  ДЕНЬ)>= 0
		|	ИЛИ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(АГ_НадежностьКонтрагентаИЛСОСрезПоследних.ДействуетДо, ДЕНЬ), МЕСЯЦ, 1)=&ТекущаяДата";
	    //-->АГ:[SAPDZ_0001_8]
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтруктураПараметры	= Новый Структура("Контрагент,ПартнерНаименование,Менеджер,ДействуетДо");
		ЗаполнитьЗначенияСвойств(СтруктураПараметры,ВыборкаДетальныеЗаписи);
		
		ПараметрыОтправки	= СтруктураПараметровПисьмаОбОкончанииСроковНадежностиПокупателей(СтруктураПараметры);
		
		РезультатОтправки	= ОтправитьПисьмоОтветственному(СтруктураПараметры,ПараметрыОтправки);
		Если НЕ РезультатОтправки Тогда
			ОписаниеОшибки	= "Не удалось отправить письмо";
			Если ТипЗнч(ПараметрыОтправки)=Тип("Структура") Тогда
				ПараметрыОтправки.Свойство("ОписаниеОшибки",ОписаниеОшибки);
			КонецЕсли;	
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Фоновое отправка уведомлений об окончании сроков надежности клиентов'", Метаданные.ОсновнойЯзык.КодЯзыка),
			УровеньЖурналаРегистрации.Предупреждение,Метаданные.Справочники.Контрагенты,ВыборкаДетальныеЗаписи.Контрагент,ОписаниеОшибки);	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнениеНизкойНадежностиПокупателейДляПросроченныхЗаписей() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АГ_НадежностьКонтрагентаИЛСОСрезПоследних.Контрагент КАК Контрагент
		|ИЗ
		|	РегистрСведений.АГ_НадежностьКонтрагентаИЛСО.СрезПоследних КАК АГ_НадежностьКонтрагентаИЛСОСрезПоследних
		|ГДЕ
		|	АГ_НадежностьКонтрагентаИЛСОСрезПоследних.ДействуетДо < &ТекущаяДата
		|	И АГ_НадежностьКонтрагентаИЛСОСрезПоследних.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		МенеджерЗаписи	= РегистрыСведений.АГ_НадежностьКонтрагентаИЛСО.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период	= ТекущаяДата();
		МенеджерЗаписи.Автор	= ПользователиКлиентСервер.ТекущийПользователь();
		МенеджерЗаписи.ДействуетДо	= НачалоДня(МенеджерЗаписи.Период)+ 60*60*24*7; //+1 неделя
		МенеджерЗаписи.Контрагент	= ВыборкаДетальныеЗаписи.Контрагент;
		МенеджерЗаписи.Надежность	= Перечисления.АГ_НадежностьПокупателя.Низкая;
		МенеджерЗаписи.Записать(Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ОтправитьПисьмоОтветственному(Параметры,ПараметрыОтправки)
	
	Если ПараметрыОтправки=Неопределено Тогда
		
		Возврат Ложь;
	КонецЕсли;	
	
	ДоступныеУчетныеЗаписи	= РаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина,,Истина);
	Если ДоступныеУчетныеЗаписи.Количество()>0 Тогда
		
		УчетнаяЗапись	= ДоступныеУчетныеЗаписи[0].Ссылка;
		
		РезультатОтправки	= РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(УчетнаяЗапись,ПараметрыОтправки);
		
		Параметры.Вставить("ОписаниеОшибки",РезультатОтправки);
		
		Возврат (РезультатОтправки<>Неопределено);
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция СтруктураПараметровПисьмаОбОкончанииСроковКредитныхЛимитов(СтруктураПараметрыОтправки)
	
	Если НЕ РаботаСПочтовымиСообщениями.ДоступнаОтправкаПисем() Тогда
		СтруктураПараметрыОтправки.Вставить("ОписаниеОшибки","Не настроена отправка писем");
		Возврат Неопределено;	
	КонецЕсли;
	
	ПараметрыОтправки = Новый Структура("Тема,Получатель,Кому,Предмет,Текст,Тело");
	
	ПараметрыОтправки.Тема = "ВНИМАНИЕ! Окончание срока кредитного лимита по контрагенту «"+СтруктураПараметрыОтправки.ПартнерНаименование+"»";
	ПараметрыОтправки.Текст	= "ВНИМАНИЕ! По договору "+СтруктураПараметрыОтправки.Договор
	+" клиента «"+СтруктураПараметрыОтправки.ПартнерНаименование
	+"» подходит к окончанию срок кредитного лимита ( действует до "+Формат(СтруктураПараметрыОтправки.АГ_СрокКредитногоЛимита,"ДЛФ=D")+")";
	
	МассивПолучателей	= Новый Массив;
	Кому	= "";
	
	Если ЗначениеЗаполнено(СтруктураПараметрыОтправки.Менеджер) Тогда
		АдресЭлПочты	= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтруктураПараметрыОтправки.Менеджер,ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailПользователя"));
		Если ЗначениеЗаполнено(АдресЭлПочты) Тогда
			ПолучательСтруктура	= Новый Структура("Адрес,Представление,ИсточникКонтактнойИнформации",АдресЭлПочты,Строка(СтруктураПараметрыОтправки.Менеджер),СтруктураПараметрыОтправки.Менеджер);
			МассивПолучателей.Добавить(ПолучательСтруктура);
			Кому	= АдресЭлПочты;
		Иначе
			СтруктураПараметрыОтправки.Вставить("ОписаниеОшибки","Не заполнен адрес пользователя:"+СтруктураПараметрыОтправки.Менеджер);
		КонецЕсли;                                                            
	Иначе
		СтруктураПараметрыОтправки.Вставить("ОписаниеОшибки","Не заполнен менеджер по договору "+СтруктураПараметрыОтправки.Договор+" клиента "+СтруктураПараметрыОтправки.ПартнерНаименование);	
	КонецЕсли;
	
	Если МассивПолучателей.Количество() = 0 Тогда
		ПараметрыОтправки	= Неопределено;
	Иначе	
		ПараметрыОтправки.Получатель= МассивПолучателей;
		ПараметрыОтправки.Кому		= Кому;
		ПараметрыОтправки.Предмет	= СтруктураПараметрыОтправки.Договор;
		ПараметрыОтправки.Тело      = ПараметрыОтправки.Текст;	
	КонецЕсли;	
	
	Возврат ПараметрыОтправки;
	
КонецФункции

Функция СтруктураПараметровПисьмаОбОкончанииСроковНадежностиПокупателей(СтруктураПараметрыОтправки)
	
	Если НЕ РаботаСПочтовымиСообщениями.ДоступнаОтправкаПисем() Тогда
		СтруктураПараметрыОтправки.Вставить("ОписаниеОшибки","Не настроена отправка писем");
		Возврат Неопределено;	
	КонецЕсли;
	
	ПараметрыОтправки = Новый Структура("Тема,Получатель,Кому,Предмет,Текст,Тело");
	
	ПараметрыОтправки.Тема = "ВНИМАНИЕ! Окончание срока надежности по клиенту «"+СтруктураПараметрыОтправки.ПартнерНаименование+"»";
	ПараметрыОтправки.Текст	= "ВНИМАНИЕ! По клиенту  «"+СтруктураПараметрыОтправки.ПартнерНаименование
	+"» подходит к окончанию срок надежности (действует до "+Формат(СтруктураПараметрыОтправки.ДействуетДо,"ДЛФ=D")+")."
	+Символы.ПС+"Необходимо продлить срок надежности.";
	
	МассивПолучателей	= Новый Массив;
	Кому	= "";
	
	Если ЗначениеЗаполнено(СтруктураПараметрыОтправки.Менеджер) Тогда
		АдресЭлПочты	= УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтруктураПараметрыОтправки.Менеджер,ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailПользователя"));
		Если ЗначениеЗаполнено(АдресЭлПочты) Тогда
			ПолучательСтруктура	= Новый Структура("Адрес,Представление,ИсточникКонтактнойИнформации",АдресЭлПочты,Строка(СтруктураПараметрыОтправки.Менеджер),СтруктураПараметрыОтправки.Менеджер);
			МассивПолучателей.Добавить(ПолучательСтруктура);
			Кому	= АдресЭлПочты;
		Иначе
			СтруктураПараметрыОтправки.Вставить("ОписаниеОшибки","Не заполнен адрес пользователя:"+СтруктураПараметрыОтправки.Менеджер);
		КонецЕсли;                                                            
	Иначе
		СтруктураПараметрыОтправки.Вставить("ОписаниеОшибки","Не заполнен менеджер по клиенту "+СтруктураПараметрыОтправки.ПартнерНаименование);	
	КонецЕсли;
	
	Если МассивПолучателей.Количество() = 0 Тогда
		ПараметрыОтправки	= Неопределено;
	Иначе	
		ПараметрыОтправки.Получатель= МассивПолучателей;
		ПараметрыОтправки.Кому		= Кому;
		ПараметрыОтправки.Предмет	= СтруктураПараметрыОтправки.Контрагент;
		ПараметрыОтправки.Тело      = ПараметрыОтправки.Текст;	
	КонецЕсли;	
	
	Возврат ПараметрыОтправки;
	
КонецФункции

//-->АГ:[SAPDZ_0001_8]



