////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Внеоборотные активы".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает направление деятельности по заданной ссылке
//
// Параметры:
// 		Ссылка - СправочникСсылка - Ссылка на справочник, по которой необходимо получить направление деятельности.
//
// Возвращаемое значение:
// 		СправочникСсылка.НаправленияДеятельности - Ссылка на элемент справочника направлений деятельности.
//
Функция НаправлениеДеятельности(Ссылка) Экспорт
	
	ВозвращаемоеЗначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "НаправлениеДеятельности");
	Возврат ?(ЗначениеЗаполнено(ВозвращаемоеЗначение), ВозвращаемоеЗначение, Справочники.НаправленияДеятельности.ПустаяСсылка());
	
КонецФункции

// Формирует данные выбора основных средств.
//
// Параметры:
//  Параметры			 - Структура - Содержит параметры выбора.
//  СтандартнаяОбработка - Булево - Параметр события ОбработкаПолученияДанныхВыбора.
// 
// Возвращаемое значение:
//  СписокЗначений - Значения для выбора.
//
Функция ДанныеВыбораОбъектовЭксплуатации(Параметры, СтандартнаяОбработка) Экспорт

	ДанныеВыбора = Неопределено;
	
	Если ВнеоборотныеАктивыСлужебный.ДоступенВыборОбъектовЭксплуатации2_4(Параметры) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ДанныеВыбораОбъектовЭксплуатации2_4(Параметры);
	Иначе
		ВнеоборотныеАктивыЛокализация.ДанныеВыбораОбъектовЭксплуатации2_2(Параметры);
	КонецЕсли;
	
	Возврат ДанныеВыбора;

КонецФункции

// Формирует данные выбора нематериальных активов.
//
// Параметры:
//  Параметры			 - Структура - Содержит параметры выбора.
//  СтандартнаяОбработка - Булево - Параметр события ОбработкаПолученияДанныхВыбора.
// 
// Возвращаемое значение:
//  СписокЗначений - Значения для выбора.
//
Функция ДанныеВыбораНематериальныхАктивов(Параметры, СтандартнаяОбработка) Экспорт

	ДанныеВыбора = Неопределено;
	
	Если ДоступенВыборНематериальныхАктивов2_4(Параметры) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ДанныеВыбораНематериальныхАктивов2_4(Параметры);
	Иначе
		ВнеоборотныеАктивыЛокализация.ДанныеВыбораНематериальныхАктивов2_2(Параметры);
	КонецЕсли;
	
	Возврат ДанныеВыбора;

КонецФункции

// Проверяет заполнение переданных объектов
//
// Параметры:
//  МассивСсылок			 - Массив	 - Список объектов заполнение которых требуется проверить.
//  ЕстьПомеченныеНаУдаление - Булево	 - (возвращаемое значение) Истина, если есть помеченные на удаление документы.
// 
// Возвращаемое значение:
//  Булево - Истина, если нет ошибок.
//
Функция ПроверитьВозможностьПроведения(МассивСсылок, ЕстьПомеченныеНаУдаление) Экспорт

	Отказ = Ложь;
	Для каждого СсылкаНаОбъект Из МассивСсылок Цикл
		ДанныеОбъект = СсылкаНаОбъект.ПолучитьОбъект();
		Если ДанныеОбъект.ПометкаУдаления Тогда
			ЕстьПомеченныеНаУдаление = Истина;
		Иначе
			Отказ = НЕ ДанныеОбъект.ПроверитьЗаполнение() ИЛИ Отказ;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат НЕ Отказ;

КонецФункции

#Область ОтборыПоДаннымУчета

// Возвращает список значений показателями наработок, принадлежащих классу объектов эксплуатации.
//
// Параметры:
// 		ОбъектОтбора - СправочникСсылка.ОбъектыЭксплуатации, СправочникСсылка.УзлыОбъектаЭксплуатации, СправочникСсылка.КлассыОбъектовЭксплуатации - Объект отбора
// 		ПолучатьИсточникиНаработки - Булево - Признак необходимости получать показатели регистрируемые от источника
// 		ПоказательАмортизации - СправочникСсылка.ПоказателиНаработки - Текущее значение.
//
// Возвращаемое значение:
// 		СписокЗначений - Список данных выбора.
//
Функция ДанныеВыбораПоказателейНаработкиПоОтбору(Знач ОбъектОтбора, ПолучатьИсточникиНаработки, ПоказательАмортизации) Экспорт
	
	ДанныеВыбора = Новый СписокЗначений;
	
	СписокЗапросов = Новый Массив;
	
	//++ НЕ УТКА
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&ОбъектОтбора КАК Класс
	|ПОМЕСТИТЬ Классы
	|ГДЕ
	|	&ИспользоватьУправлениеРемонтами
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Объекты.Класс
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Объекты
	|ГДЕ
	|	Объекты.Ссылка = &ОбъектОтбора
	|	И &ИспользоватьУправлениеРемонтами
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Узлы.Класс
	|ИЗ
	|	Справочник.УзлыОбъектовЭксплуатации КАК Узлы
	|ГДЕ
	|	Узлы.Ссылка = &ОбъектОтбора
	|	И &ИспользоватьУправлениеРемонтами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПоказателиНаработки.ПоказательНаработки КАК ПоказательНаработки,
	|	ПоказателиНаработки.РегистрироватьОтИсточника КАК РегистрироватьОтИсточника
	|ПОМЕСТИТЬ Показатели
	|ИЗ
	|	Справочник.КлассыОбъектовЭксплуатации.ПоказателиНаработки КАК ПоказателиНаработки
	|ГДЕ
	|	ПоказателиНаработки.Ссылка В
	|			(ВЫБРАТЬ
	|				Классы.Класс
	|			ИЗ
	|				Классы)
	|	И ВЫБОР
	|			КОГДА &ПолучатьИсточникиНаработки
	|				ТОГДА НЕ ПоказателиНаработки.РегистрироватьОтИсточника
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	СписокЗапросов.Добавить(ТекстЗапроса);
	//-- НЕ УТКА
	
	СписокЗапросовОбъединение = Новый Массив;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокУчетаОС.ПоказательНаработки КАК Значение,
	|	ПорядокУчетаОС.ПоказательНаработки.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			,
	|			ОсновноеСредство = &ОбъектОтбора
	//++ НЕ УТКА
	|				И НЕ ПоказательНаработки В
	|						(ВЫБРАТЬ
	|							Показатели.ПоказательНаработки
	|						ИЗ
	|							Показатели КАК Показатели)
	//-- НЕ УТКА
	|	) КАК ПорядокУчетаОС
	|ГДЕ
	|	НЕ &ПоказательАмортизации
	|	И &ИспользуетсяУправлениеВНА_2_4";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	
	//++ НЕ УТКА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Показатели.ПоказательНаработки,
	|	Показатели.ПоказательНаработки.ПометкаУдаления
	|ИЗ
	|	Показатели КАК Показатели
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ПолучатьИсточникиНаработки
	|				ТОГДА НЕ Показатели.РегистрироватьОтИсточника
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	//-- НЕ УТКА
	
	ВнеоборотныеАктивыЛокализация.ДополнитьТекстЗапросаДанныеВыбораПоказателейНаработкиПоОтбору(СписокЗапросовОбъединение);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбъектОтбора", ОбъектОтбора);
	Запрос.УстановитьПараметр("ПолучатьИсточникиНаработки", ПолучатьИсточникиНаработки);
	Запрос.УстановитьПараметр("ПоказательАмортизации", ПоказательАмортизации);
	Запрос.УстановитьПараметр("ИспользоватьУправлениеРемонтами", ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеРемонтами"));
	Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4());
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ДанныеВыбора;
	КонецЕсли;
	
	ШаблонПолейСтруктуры = "Значение, ПометкаУдаления";
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураЭлемента = Новый Структура(ШаблонПолейСтруктуры);
		ЗаполнитьЗначенияСвойств(СтруктураЭлемента, Выборка);
		ДанныеВыбора.Добавить(СтруктураЭлемента);
		
	КонецЦикла;
	
	Возврат ДанныеВыбора;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДоступенВыборНематериальныхАктивов2_4(Параметры) Экспорт

	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		Возврат Истина;
	КонецЕсли;
	
	ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	
	ДоступенВыбор = 
		Параметры.Свойство("Контекст") 
			И СтрНайти(Параметры.Контекст, "УУ") <> 0 
		ИЛИ НЕ Параметры.Свойство("ДатаСведений")
			И ТекущаяДатаСеанса() >= ДатаНачалаУчета 
		ИЛИ Параметры.Свойство("ДатаСведений")
			И Параметры.ДатаСведений >= ДатаНачалаУчета;
			
	Если НЕ ДоступенВыбор Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("Отбор") Тогда
		Если Параметры.Отбор.Свойство("БУСостояние") Тогда
			Параметры.Отбор.Вставить("Состояние", Параметры.Отбор.БУСостояние);
		КонецЕсли; 
		Если Параметры.Отбор.Свойство("БУОрганизация") Тогда
			Параметры.Отбор.Вставить("Организация", Параметры.Отбор.БУОрганизация);
		КонецЕсли; 
		Если Параметры.Отбор.Свойство("БУПодразделение") Тогда
			Параметры.Отбор.Вставить("Подразделение", Параметры.Отбор.БУПодразделение);
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат Истина;

КонецФункции
 
Процедура ПроверитьПараметрыРеквизитовОбъекта(ПараметрыРеквизитовОбъекта) Экспорт

	Если ПараметрыРеквизитовОбъекта.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ПараметрыРеквизитовОбъектаТаблица = Новый ТаблицаЗначений;
	ПараметрыРеквизитовОбъектаТаблица.Колонки.Добавить("ИмяРеквизита");
	ПараметрыРеквизитовОбъектаТаблица.Колонки.Добавить("ИмяЭлемента");
	ПараметрыРеквизитовОбъектаТаблица.Колонки.Добавить("Свойство");
	ПараметрыРеквизитовОбъектаТаблица.Колонки.Добавить("Количество");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыРеквизитовОбъекта, ПараметрыРеквизитовОбъектаТаблица);
	
	ПараметрыРеквизитовОбъектаТаблица.ЗаполнитьЗначения(1, "Количество");
	ПараметрыРеквизитовОбъектаТаблица.Свернуть("ИмяРеквизита,ИмяЭлемента,Свойство", "Количество");
	ПараметрыРеквизитовОбъектаТаблица.Сортировать("ИмяРеквизита,Свойство");
	
	Для каждого ПараметрыРеквизита Из ПараметрыРеквизитовОбъектаТаблица Цикл
		Если ПараметрыРеквизита.Количество > 1 И ПараметрыРеквизита.ИмяРеквизита <> "" Тогда
			ТекстСообщения = НСтр("ru = 'Для реквизита ""%1"" свойство ""%2"" определяется несколько раз. Обратитесь к администратору.';
									|en = 'The ""%2"" property is determined several times for the ""%1"" attribute. Contact administrator. '");
			ТекстСообщения = СтрШаблон(ТекстСообщения,
										?(ЗначениеЗаполнено(ПараметрыРеквизита.ИмяРеквизита), ПараметрыРеквизита.ИмяРеквизита, ПараметрыРеквизита.ИмяЭлемента), 
										ПараметрыРеквизита.Свойство);
										
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

Функция ОперацияВводаОстатков(ДокументСсылка) Экспорт

	Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "ХозяйственнаяОперация");
	
КонецФункции

Функция ПредставлениеВводаОстатков(Объект) Экспорт
	
	Если ТипЗнч(Объект) = Тип("Структура") 
		ИЛИ ТипЗнч(Объект) = Тип("ДанныеФормыСтруктура") Тогда
		РеквизитыОбъекта = Объект;
	Иначе	
		РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, "Ссылка, Номер, Дата, ХозяйственнаяОперация");
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(РеквизитыОбъекта.ХозяйственнаяОперация) Тогда
		Возврат "";
	КонецЕсли;
	
	ПредставлениеНомерДата = НСтр("ru = '(создание)';
									|en = '(creation)'");
	Если ЗначениеЗаполнено(РеквизитыОбъекта.Ссылка) Тогда
		ПредставлениеНомерДата = СтрШаблон(НСтр("ru = '%1 от %2';
												|en = '%1 from %2'"), РеквизитыОбъекта.Номер, РеквизитыОбъекта.Дата);
	КонецЕсли;
	
	Представление = НСтр("ru = 'Ввод начальных остатков внеоборотных активов %1';
						|en = 'Enter start balance of capital assets %1'");
	
	Если РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковОсновныхСредств Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков основных средств %1';
							|en = 'Enter start balance of fixed assets %1'");
	ИначеЕсли РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуОС Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков переданных в аренду основных средств %1';
							|en = 'Enter start balance of leased out %1 fixed assets'");
	ИначеЕсли РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковАрендованныхОС Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков полученных в аренду основных средств %1';
							|en = 'Enter start balance of leased fixed assets %1 '");
	ИначеЕсли РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковНМАиРасходовНаНИОКР Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков НМА и расходов на НИОКР %1';
							|en = 'Enter IA start balance and R&D expenses %1'");
	ИначеЕсли РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВзаиморасчетовПоДоговорамЛизинга Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков взаиморасчетов по договорам лизинга %1';
							|en = 'Enter start balance of mutual settlements under lease agreements %1'");
	ИначеЕсли РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаНаБалансе Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков предметов лизинга на балансе %1';
							|en = 'Enter start balance of leasing items on balance sheet %1'");
	ИначеЕсли РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков предметов лизинга за балансом %1';
							|en = 'Enter start balance of leasing items off the balance sheet %1'");
	ИначеЕсли РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков переданных в аренду предметов лизинга на балансе %1';
							|en = 'Enter start balance of leased leasing items on the %1 balance sheet'");
	ИначеЕсли РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковПредметовЛизингаЗаБалансом Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков предметов лизинга за балансом %1';
							|en = 'Enter start balance of leasing items off the balance sheet %1'");
	ИначеЕсли РеквизитыОбъекта.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВводОстатковВложенийВоВнеоборотныеАктивы Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков вложений во внеоборотные активы %1';
							|en = 'Enter start balance of investments in capital assets %1'");
	Иначе
		Представление = ВводОстатковВнеоборотныхАктивовЛокализация.ПредставлениеВводаОстатков(РеквизитыОбъекта.ХозяйственнаяОперация);
	КонецЕсли;
	
	Возврат СтрШаблон(Представление, ПредставлениеНомерДата);
	
КонецФункции

Функция ПредставлениеВводаОстатков2_2(Объект) Экспорт
	
	Если ТипЗнч(Объект) = Тип("Структура") 
		ИЛИ ТипЗнч(Объект) = Тип("ДанныеФормыСтруктура") Тогда
		РеквизитыОбъекта = Объект;
	Иначе	
		РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, "Ссылка, Номер, Дата, ТипОперации");
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(РеквизитыОбъекта.ТипОперации) Тогда
		Возврат "";
	КонецЕсли;
	
	ПредставлениеНомерДата = НСтр("ru = '(создание)';
									|en = '(creation)'");
	Если ЗначениеЗаполнено(РеквизитыОбъекта.Ссылка) Тогда
		ПредставлениеНомерДата = СтрШаблон(НСтр("ru = '%1 от %2';
												|en = '%1 from %2'"), РеквизитыОбъекта.Номер, РеквизитыОбъекта.Дата);
	КонецЕсли;
	
	Представление = НСтр("ru = 'Ввод начальных остатков внеоборотных активов %1';
						|en = 'Enter start balance of capital assets %1'");
	Если РеквизитыОбъекта.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС") Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков основных средств %1';
							|en = 'Enter start balance of fixed assets %1'");
	ИначеЕсли РеквизитыОбъекта.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПереданныхВАрендуОС") Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков переданных в аренду основных средств %1';
							|en = 'Enter start balance of leased out %1 fixed assets'");
	ИначеЕсли РеквизитыОбъекта.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиАрендованныхОС") Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков полученных в аренду основных средств %1';
							|en = 'Enter start balance of leased fixed assets %1 '");
	ИначеЕсли РеквизитыОбъекта.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиНМА") Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков нематериальных активов и расходов на НИОКР %1';
							|en = 'Enter start balance of intangible assets and R&D expenses %1'");
	ИначеЕсли РеквизитыОбъекта.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВзаиморасчетовПоДоговорамЛизинга") Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков взаиморасчетов по договорам лизинга %1';
							|en = 'Enter start balance of mutual settlements under lease agreements %1'");
	ИначеЕсли РеквизитыОбъекта.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПредметовЛизингаНаБалансе") Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков предметов лизинга на балансе %1';
							|en = 'Enter start balance of leasing items on balance sheet %1'");
	ИначеЕсли РеквизитыОбъекта.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПереданныхВАрендуПредметовЛизингаНаБалансе") Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков переданных в аренду предметов лизинга на балансе %1';
							|en = 'Enter start balance of leased leasing items on the %1 balance sheet'");
	ИначеЕсли РеквизитыОбъекта.ТипОперации = ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПредметовЛизингаЗаБалансом") Тогда
		Представление = НСтр("ru = 'Ввод начальных остатков предметов лизинга за балансом %1';
							|en = 'Enter start balance of leasing items off the balance sheet %1'");
	КонецЕсли;
	
	Возврат СтрШаблон(Представление, ПредставлениеНомерДата);
	
КонецФункции

Функция ОрганизацииВзаимосвязаныПоОрганизационнойСтруктуре(Знач ОрганизацияПолучатель, Знач Организация) Экспорт

	Возврат Справочники.Организации.ОрганизацииВзаимосвязаныПоОрганизационнойСтруктуре(ОрганизацияПолучатель, Организация);

КонецФункции

Функция ОрганизацияВзаимосвязанаСДругимиОрганизациями(Знач Организация) Экспорт

	Возврат Справочники.Организации.ОрганизацияВзаимосвязанаСДругимиОрганизациями(Организация); 

КонецФункции

Функция ЗначенияПолейКонтактнойИнформацииСервер(Знач Представление, Знач ВидКонтактнойИнформации) Экспорт
	
	Результат = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияПоПредставлению(Представление, ВидКонтактнойИнформации);
	
	Возврат Результат;
	
КонецФункции

Функция ИспользуетсяУправлениеВНА_2_4(Период = '000101010000') Экспорт

	Возврат ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Период);

КонецФункции
 
Функция ПараметрыРасшифровкиОтчета(ПолноеИмяОтчета, Расшифровка, АдресДанныхРасшифровки, КомпоновщикНастроек) Экспорт

	ПараметрыРасшифровки = ВнеоборотныеАктивыЛокализация.ПараметрыРасшифровкиОтчета(
								ПолноеИмяОтчета, Расшифровка, АдресДанныхРасшифровки, КомпоновщикНастроек);
	
	Возврат ПараметрыРасшифровки;
	
КонецФункции

Процедура ОбработкаПолученияФормы_ВводОстатковВнеоборотныхАктивов(ХозяйственнаяОперация, ВыбраннаяФорма, СтандартнаяОбработка) Экспорт
	
	ВводОстатковВнеоборотныхАктивовЛокализация.ОбработкаПолученияФормы(
		ХозяйственнаяОперация, ВыбраннаяФорма, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы_ОбъектыЭксплуатации(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	ОбъектыЭксплуатацииЛокализация.ОбработкаПолученияФормы(
		ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеВыбораОбъектовЭксплуатации2_4(Параметры)

	ОписаниеЗапроса = Справочники.ОбъектыЭксплуатации.ОписаниеЗапросаДляВыбора(Параметры, Истина);
	
	Запрос = Новый Запрос(ОписаниеЗапроса.ТекстЗапроса);
	Для каждого ОписаниеПараметра Из ОписаниеЗапроса.ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ОписаниеПараметра.Ключ, ОписаниеПараметра.Значение);
	КонецЦикла; 
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ДанныеВыбора = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		Представление = ВнеоборотныеАктивыСлужебный.ПредставлениеРезультатаПоискаПоСтроке(Выборка.Наименование, Параметры.СтрокаПоиска);
		ДанныеВыбора.Добавить(Выборка.Ссылка, Представление);
	КонецЦикла;
	
	Возврат ДанныеВыбора;
	
КонецФункции

Функция ДанныеВыбораНематериальныхАктивов2_4(Параметры)

	ОписаниеЗапроса = Справочники.НематериальныеАктивы.ОписаниеЗапросаДляВыбора(Параметры, Истина);
	
	Запрос = Новый Запрос(ОписаниеЗапроса.ТекстЗапроса);
	Для каждого ОписаниеПараметра Из ОписаниеЗапроса.ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(ОписаниеПараметра.Ключ, ОписаниеПараметра.Значение);
	КонецЦикла; 
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ДанныеВыбора = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		Представление = ВнеоборотныеАктивыСлужебный.ПредставлениеРезультатаПоискаПоСтроке(Выборка.Наименование, Параметры.СтрокаПоиска);
		ДанныеВыбора.Добавить(Выборка.Ссылка, Представление);
	КонецЦикла;
	
	Возврат ДанныеВыбора;
	
КонецФункции

#КонецОбласти
