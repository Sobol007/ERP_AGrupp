
#Область СлужебныйПрограммныйИнтерфейс

// Открывает расшифровку указанной ячейки регламентрованного отчета.
//
// Параметры:
//   ИДОтчета - Строка - идентификатор отчета (совпадает с именем объекта метаданных).
//   ИДРедакцииОтчета - Строка - идентификатор редакции формы отчета (совпадает с именем формы объекта метаданных).
//   ИДИменПоказателей - Массив - массив идентификаторов имен показателей, по которым формируется расшифровка.
//   ПараметрыОтчета - Структура - структура параметров отчета, необходимых для формирования расшифровки.
//   РасшифровкаОбработана - Булево - Для чтения и записи. Истина, если начата расшифровка полей указанного отчета.
//   ФормаОткрыта - Булево - Для чтения и записи. Истина, если обработка расшифровки завершилась успешно (открытием формы расшфировки).
//
Процедура ПриОткрытииРасшифровкиРегламентированногоОтчета(ИДОтчета, ИДРедакцииОтчета, ИДИменПоказателей, ПараметрыОтчета, РасшифровкаОбработана, ФормаОткрыта) Экспорт
	Если РасшифровкаОбработана Или ФормаОткрыта Тогда
		Возврат;
	КонецЕсли;
	
	Если ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП4"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП4НЗ"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПЗдрав"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПКультура"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПНаука"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПОбразование"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПСоц"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1ТГМС" Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	РасшифровкаОбработана = Истина;
	Если Не ЗначениеЗаполнено(ИДИменПоказателей) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяПоказателя = ИДИменПоказателей[0];
	
	ПараметрыОтчета.Вставить("ВидОтчета");
	ПараметрыОтчета.Вставить("ИмяОтчетаРасшифровки", "");
	ПараметрыОтчета.Вставить("ИмяСКД");
	ПараметрыОтчета.Вставить("ИДИменПоказателей", ИДИменПоказателей);
	
	Если ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП4" Тогда
		
		Если ИДРедакцииОтчета < "ФормаОтчета2013Кв1" Тогда
			Возврат; // 2011.
		ИначеЕсли ИДРедакцииОтчета <= "ФормаОтчета2014Кв1" Тогда // 2013 и 2014.
			ПараметрыОтчета.ВидОтчета = "РегламентированныйОтчетП4_2013";
		Иначе // > 2014.
			ПараметрыОтчета.ВидОтчета = "РегламентированныйОтчетП4_2017";
		КонецЕсли;
		
		ПараметрыОтчета.ИмяОтчетаРасшифровки = "СтатистикаПерсонала";
		ПараметрыОтчета.Вставить("ТолькоГражданские", Истина);
		ДополнитьПараметрыОтчетаП4За2013Год(ПараметрыОтчета, ИмяПоказателя);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП4НЗ" Тогда
		
		Если ИДРедакцииОтчета < "ФормаОтчета2015Кв1" Тогда
			Возврат; // 2013 и 2014.
		КонецЕсли;
		
		ПараметрыОтчета.ВидОтчета = "РегламентированныйОтчетП4НЗ_2015";
		ПараметрыОтчета.ИмяОтчетаРасшифровки = "СтатистикаПерсонала";
		ДополнитьПараметрыОтчетаП4НЗЗа2015Год(ПараметрыОтчета, ИмяПоказателя);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1ТГМС" Тогда
		
		Если Прав(ИмяПоказателя, 1) = "3" Тогда // Показатели из штатного расписания
			ПараметрыОтчета.ИмяОтчетаРасшифровки = "ШтатноеРасписание";
			ПараметрыОтчета.ИмяСКД = "Расшифровка";
		Иначе
			ПараметрыОтчета.ИмяОтчетаРасшифровки = "СтатистикаПерсонала";
		КонецЕсли;
		
		ПараметрыОтчета.ВидОтчета = "РегламентированныйОтчет1ТГМС";
		ДополнитьПараметрыОтчета1ТГМС(ПараметрыОтчета, ИмяПоказателя);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПЗдрав"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПКультура"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПНаука"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПОбразование"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПСоц" Тогда
		
		Если ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПЗдрав" Тогда
			ПараметрыОтчета.ВидОтчета = "РегламентированныйОтчетЗПЗдрав_2013";
		ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПКультура" Тогда
			ПараметрыОтчета.ВидОтчета = "РегламентированныйОтчетЗПКультура_2013";
		ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПНаука" Тогда
			ПараметрыОтчета.ВидОтчета = "РегламентированныйОтчетЗПНаука_2013";
		ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПОбразование" Тогда
			ПараметрыОтчета.ВидОтчета = "РегламентированныйОтчетЗПОбразование_2013";
		ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФормаЗПСоц" Тогда
			ПараметрыОтчета.ВидОтчета = "РегламентированныйОтчетЗПСоц_2013";
		КонецЕсли;
		
		Если ИДРедакцииОтчета < "ФормаОтчета2015Кв1" Тогда
			ПараметрыОтчета.Вставить("ВариантРасчетаПоказателей", 2013);
		Иначе
			ПараметрыОтчета.Вставить("ВариантРасчетаПоказателей", 2015);
		КонецЕсли;
		ПараметрыОтчета.ИмяОтчетаРасшифровки = "СтатистикаПерсонала";
		ДополнитьПараметрыОтчетаЗПЗа2013Год(ПараметрыОтчета, ИмяПоказателя);
		
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.РасшифровкаРегламентированногоОтчетаЗарплата", ПараметрыОтчета);
	ФормаОткрыта = Истина;
КонецПроцедуры

Процедура ДополнитьПараметрыОтчетаП4За2013Год(ПараметрыОтчета, ИмяПоказателя)
	
	Если ВРег(Лев(ИмяПоказателя,1)) <> "П" Или СтрДлина(ИмяПоказателя) < 10 Тогда
		ПараметрыОтчета.Вставить("ИмяСКД", "");
		Возврат;
	КонецЕсли;
	
	НомерСтроки = Сред(ИмяПоказателя, 6, 3);
	НомерКолонки = Прав(ИмяПоказателя, 2);
	
	Если НомерСтроки = Неопределено Или НомерКолонки = Неопределено
		Или НомерСтроки = "001"
		Или НомерКолонки = "А1"
		Или НомерКолонки = "Б1"
		Или НомерКолонки = "В1"
		Или НомерКолонки = "01"
		Или НомерКолонки = "07" Тогда
		ПараметрыОтчета.Вставить("ИмяСКД", "");
		Возврат;
	КонецЕсли;
	
	Если НомерКолонки = "05" Или НомерКолонки = "06" Или НомерКолонки = "11" Тогда
		ПараметрыОтчета.Вставить("ДатаНачалаПериодаВыборки", НачалоГода(ПараметрыОтчета.ДатаКонцаПериодаОтчета));
	КонецЕсли;
	Если НачалоМесяца(ПараметрыОтчета.ДатаКонцаПериодаОтчета) <> ПараметрыОтчета.ДатаНачалаПериодаОтчета Тогда
		ПараметрыОтчета.Вставить("СНачалаГода", Истина);
	КонецЕсли;
	ПараметрыОтчета.Вставить("ИмяСКД", "Расшифровка");
	ПараметрыОтчета.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыОтчета.Вставить("НомерКолонки", НомерКолонки);
	
	ЗаголовокРасшифровки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Строка %1, графа %2';
			|en = 'Line %1, column %2'"),
		Формат(Число(НомерСтроки), "ЧГ="),
		Формат(Число(НомерКолонки), "ЧГ="));
	
	ПараметрыОтчета.Вставить("ЗаголовокРасшифровки",ЗаголовокРасшифровки);
	
КонецПроцедуры

Процедура ДополнитьПараметрыОтчета1ТГМС(ПараметрыОтчета, ИмяПоказателя)
	
	Если СтрЧислоВхождений(ИмяПоказателя, "П000001000") > 0 Тогда	 
		ПараметрыОтчета.Вставить("НомерСтроки1ТГМС", Число(Лев(Прав(ИмяПоказателя, 3), 1)));	 
	КонецЕсли;
				
	Если ВРег(Лев(ИмяПоказателя,1)) <> "П" Или СтрДлина(ИмяПоказателя) < 10 Тогда
		ПараметрыОтчета.Вставить("ИмяСКД", "");
		Возврат;
	КонецЕсли;
	
	НомерСтроки = Сред(ИмяПоказателя, 10, 2);
	НомерКолонки = Прав(ИмяПоказателя, 2);
	
	Если НомерСтроки = Неопределено Или НомерКолонки = Неопределено
		Или НомерСтроки = "05" Тогда
		ПараметрыОтчета.Вставить("ИмяСКД", "");
		Возврат;
	КонецЕсли;
	
	ПараметрыОтчета.Вставить("ДатаАктуальности", ПараметрыОтчета.ДатаКонцаПериодаОтчета);
	
	ПараметрыОтчета.Вставить("СНачалаГода", Истина);
	ПараметрыОтчета.Вставить("ИмяСКД", "Расшифровка");
	ПараметрыОтчета.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыОтчета.Вставить("НомерКолонки", НомерКолонки);
	
	ЗаголовокРасшифровки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Строка %1, графа %2';
			|en = 'Line %1, column %2'"),
		Формат(Число(НомерСтроки), "ЧГ="),
		Формат(Число(НомерКолонки), "ЧГ="));
	
	ПараметрыОтчета.Вставить("ЗаголовокРасшифровки",ЗаголовокРасшифровки);
	
КонецПроцедуры

Процедура ДополнитьПараметрыОтчетаЗПЗа2013Год(ПараметрыОтчета, ИмяПоказателя)
	
	Раздел = ЗарплатаКадрыКлиентСервер.РазделРегламентированногоОтчетаПоИмениПоказателя(ИмяПоказателя);
	НомерСтроки = ЗарплатаКадрыКлиентСервер.СтрокаРегламентированногоОтчетаПоИмениПоказателя(ИмяПоказателя);
	НомерКолонки = ЗарплатаКадрыКлиентСервер.КолонкаРегламентированногоОтчетаПоИмениПоказателя(ИмяПоказателя);
	
	Если НомерСтроки = Неопределено Или НомерКолонки = Неопределено
		Или НомерСтроки = "001" Или НомерКолонки = "03" Или НомерКолонки = "05" Тогда
		ПараметрыОтчета.Вставить("ИмяСКД", "");
		Возврат;
	КонецЕсли;
	
	ПараметрыОтчета.Вставить("ИмяСКД", "Расшифровка");
	ПараметрыОтчета.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыОтчета.Вставить("НомерКолонки", НомерКолонки);
	ПараметрыОтчета.Вставить("СНачалаГода", Истина);
	
	ЗаголовокРасшифровки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Строка %1, графа %2';
			|en = 'Line %1, column %2'"),
		Формат(Число(НомерСтроки), "ЧГ="),
		Формат(Число(НомерКолонки), "ЧГ="));
	
	ПараметрыОтчета.Вставить("ЗаголовокРасшифровки",ЗаголовокРасшифровки);
	
КонецПроцедуры

Процедура ДополнитьПараметрыОтчетаП4НЗЗа2015Год(ПараметрыОтчета, ИмяПоказателя)
	
	Если ВРег(Лев(ИмяПоказателя,1)) <> "П" Или СтрДлина(ИмяПоказателя) < 10 Тогда
		ПараметрыОтчета.Вставить("ИмяСКД", "");
		Возврат;
	КонецЕсли;
	
	НомерСтроки = Сред(ИмяПоказателя, 8, 2);
	НомерКолонки = Прав(ИмяПоказателя, 2);
	
	Если НомерСтроки = Неопределено Или НомерКолонки = Неопределено
		Или НомерСтроки = "01"
		Или НомерСтроки = "04"
		Или НомерСтроки = "11"
		Или НомерСтроки = "14"
		Или НомерСтроки = "18"
		Или НомерСтроки = "19"
		Или НомерСтроки = "21"
		Или НомерСтроки = "22" Тогда
		ПараметрыОтчета.Вставить("ИмяСКД", "");
		Возврат;
	КонецЕсли;
	
	ПараметрыОтчета.Вставить("ИмяСКД", "Расшифровка");
	ПараметрыОтчета.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыОтчета.Вставить("НомерКолонки", НомерКолонки);
	
	ЗаголовокРасшифровки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Строка %1, графа %2';
			|en = 'Line %1, column %2'"),
		Формат(Число(НомерСтроки), "ЧГ="),
		Формат(Число(НомерКолонки), "ЧГ="));
	
	ПараметрыОтчета.Вставить("ЗаголовокРасшифровки", ЗаголовокРасшифровки);
	
	ПараметрыОтчета.Вставить("ТолькоОсновноеМестоРаботы", Истина);
	
КонецПроцедуры

#КонецОбласти
