
////////////////////////////////////////////////////////////////////////////////
// CRM хранилище настроек
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Функция загружает настройки.
//
// Параметры:
//  КлючОбъекта		 - Произвольный	 -  Ключ объекта настройки.
//  КлючНастроек	 - Строка -  Ключ загружаемых настроек.
//  ОписаниеНастроек - ОписаниеНастроек  - Описание настроек. 
//  ИмяПользователя	 - Строка - Имя пользователя, настройки которого загружаются.
// 
// Возвращаемое значение:
//  Произвольный - Загружает настройку из хранилища.
//
Функция Загрузить(КлючОбъекта, КлючНастроек = "", ОписаниеНастроек = Неопределено, Знач ИмяПользователя = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторПользователя = ПолучитьИдентификаторПользователя(ИмяПользователя);
	
	Результат = ХранилищеНастроекДанныхФорм.Загрузить(КлючОбъекта, КлючНастроек, ОписаниеНастроек, ИдентификаторПользователя);
	
	Возврат Результат;
КонецФункции

// Процедура сохраняет настройки.
//
// Параметры:
//  КлючОбъекта		 - Произвольный	 -  Ключ объекта настройки.
//  КлючНастроек	 - Строка -  Ключ загружаемых настроек.
//  Настройки		 - Произвольный	 - Содержит настройки, которые нужно сохранить в хранилище. 
//  ОписаниеНастроек - ОписаниеНастроек  - Описание настроек. 
//  ИмяПользователя	 - Строка - Имя пользователя, настройки которого загружаются.
//
Процедура Сохранить(КлючОбъекта, КлючНастроек = "", Настройки, ОписаниеНастроек = Неопределено, Знач ИмяПользователя = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторПользователя = ПолучитьИдентификаторПользователя(ИмяПользователя);
	
	ХранилищеНастроекДанныхФорм.Сохранить(КлючОбъекта, КлючНастроек, Настройки, ОписаниеНастроек, ИдентификаторПользователя);
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает описание.
//
Функция ПолучитьОписание(КлючОбъекта, КлючНастроек = "", Знач ИмяПользователя = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторПользователя = ПолучитьИдентификаторПользователя(ИмяПользователя);
	
	Результат = ХранилищеНастроекДанныхФорм.ПолучитьОписание(КлючОбъекта, КлючНастроек, ИдентификаторПользователя);
	
	Возврат Результат;
КонецФункции

// Функция возвращает список настроек.
//
Функция ПолучитьСписок(КлючОбъекта, Знач ИмяПользователя = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторПользователя = ПолучитьИдентификаторПользователя(ИмяПользователя);
	
	Результат = ХранилищеНастроекДанныхФорм.ПолучитьСписок(КлючОбъекта, ИдентификаторПользователя);
	
	Возврат Результат;
КонецФункции

// Процедура удаляет настройку.
//
Процедура Удалить(КлючОбъекта, КлючНастроек, ИмяПользователя) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторПользователя = ПолучитьИдентификаторПользователя(ИмяПользователя);
	
	ХранилищеНастроекДанныхФорм.Удалить(КлючОбъекта, КлючНастроек, ИдентификаторПользователя);
КонецПроцедуры

// Процедура устанавливает описание настройки.
//
Процедура УстановитьОписание(КлючОбъекта, КлючНастроек = "", ОписаниеНастроек, Знач ИмяПользователя = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторПользователя = ПолучитьИдентификаторПользователя(ИмяПользователя);
	
	ХранилищеНастроекДанныхФорм.УстановитьОписание(КлючОбъекта, КлючНастроек, ОписаниеНастроек, ИдентификаторПользователя);
КонецПроцедуры

Функция ПолучитьИдентификаторПользователя(ИмяПользователя = Неопределено)
	УстановитьПривилегированныйРежим(Истина);
	
	Если ИмяПользователя = Неопределено Тогда
		ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	Иначе
		ТекущийПользователь = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя);
	КонецЕсли;
	Если ТекущийПользователь = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Возврат ТекущийПользователь.УникальныйИдентификатор;
	КонецЕсли;
КонецФункции

#КонецОбласти