// Процедура создает реквизиты группы интерес
// предназначена для создания таблицы с документыми интерес, относящихся к документу Объект
// и размещении ее на форме документа.
//
// Параметры:
//	Форма						- упр форма, на которой размещается группа создаваемых реквизитов.
//	Объект						- ДокументСсылка
//	ИмяЭлементаДляРазмещения 	- имя элемента формы, по умолчанию не задано.
//	ТипОбъекта 					- тип документа, из формы которого был вызван, необазятельный параметр.
// 
// Возвращаемое значение
// 	нет
Процедура СоздатьНеобходимыеРеквизитыИЭлементыДляГруппыИнтерес(Форма, ИмяЭлементаДляРазмещения = "") Экспорт
	
	Объект = Форма.Объект;
	ТипОбъекта = ТипЗнч(Форма.Объект.Ссылка);
	
	Если ИмяЭлементаДляРазмещения = "" Тогда
		ИмяЭлементаДляРазмещения = "ГруппаИнтерес";
		ГруппаСтрокаИнтереса	= Форма.Элементы.Вставить("ГруппаИнтерес", Тип("ГруппаФормы"), , Форма.Элементы.ГруппаСтраницы);
		ГруппаСтрокаИнтереса.Вид					= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСтрокаИнтереса.ОтображатьЗаголовок	= Ложь;
		ГруппаСтрокаИнтереса.Отображение			= ОтображениеОбычнойГруппы.Нет;
		ГруппаСтрокаИнтереса.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	КонецЕсли;
	
	Строка250 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(250));
	Строка200 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(200));
	Строка11 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(11));
	ОписаниеДата = Новый ОписаниеТипов("Дата", , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ОписаниеТипаБулево = Новый ОписаниеТипов("Булево");
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("CRM_ИнтересСтрокой"			, Строка250															, , "Интерес"		, Истина));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ЕстьИнтересыДляВыбора"		, ОписаниеТипаБулево												, , "Есть интересы"	, Ложь));
	Если ТипОбъекта = Тип("ДокументСсылка.удалитьCRM_Мероприятие")
	ИЛИ ТипОбъекта = Тип("ДокументСсылка.СообщениеSMS") или ТипОбъекта = Тип("ДокументСсылка.CRM_Взаимодействие") Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("КлиентСписок"				, Новый ОписаниеТипов("СписокЗначений")								, , "Список клиентов", Ложь));
	ИначеЕсли ТипОбъекта = Тип("БизнесПроцессСсылка.Задание") ИЛИ ТипОбъекта = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
	Иначе
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Клиент"					, Новый ОписаниеТипов("СправочникСсылка.Партнеры")					, , "Клиент"		, Ложь));
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Контакт"					, Новый ОписаниеТипов("СправочникСсылка.КонтактныеЛицаПартнеров")	, , "Контакт"		, Ложь));
	КонецЕсли;
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("СкрытьПоказатьИнтересы"		, ОписаниеТипаБулево												, , "Скрыть/показать интересы", Ложь));
	
	// Создадим таблицу значений которая будет заполняться
	// связанными с документом интересами.
	ИмяОписания = "CRM_ТаблицаИнтересов";
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяОписания		, Новый ОписаниеТипов("ТаблицаЗначений"), , ,Истина));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Дата"				, ОписаниеДата													, ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Номер"			, Строка11														, ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Тема"				, Строка200														, ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Партнер"			, Новый ОписаниеТипов("СправочникСсылка.Партнеры")				, ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Ответственный"	, Новый ОписаниеТипов("СправочникСсылка.Пользователи")			, ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Подразделение"	, Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия")	, ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Организация"		, Новый ОписаниеТипов("СправочникСсылка.Организации")			, ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Ссылка"			, Новый ОписаниеТипов("ДокументСсылка.CRM_Интерес")				, ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("СостояниеИнтереса", Новый ОписаниеТипов("СправочникСсылка.CRM_СостоянияИнтересов"), ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ВведенНаОсновании", ОписаниеТипаБулево											, ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ОсновнойИнтерес"	, ОписаниеТипаБулево											, ИмяОписания));
	
	// Добавим новые реквизиты
	Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	ГруппаСтрокаИнтереса	= Форма.Элементы.Добавить("ГруппаСтрокаИнтереса", Тип("ГруппаФормы"), Форма.Элементы[ИмяЭлементаДляРазмещения]);
	ГруппаСтрокаИнтереса.Вид					= ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСтрокаИнтереса.ОтображатьЗаголовок	= Ложь;
	ГруппаСтрокаИнтереса.Отображение			= ОтображениеОбычнойГруппы.Нет;
	ГруппаСтрокаИнтереса.Группировка			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	
	//Элемент							= Форма.Элементы.Добавить("CRM_ИнтересСтрокой", Тип("ПолеФормы"), Форма.Элементы[ИмяЭлементаДляРазмещения]);
	Элемент							= Форма.Элементы.Добавить("CRM_ИнтересСтрокой", Тип("ПолеФормы"), ГруппаСтрокаИнтереса);
	Элемент.Вид						= ВидПоляФормы.ПолеВвода;
	// Элемент.Подсказка				= "По клиенту есть несколько актуальных интересов. Выберите один из них.";
	
	Элемент.Подсказка	   = НСтр("ru = 'По клиенту есть несколько актуальных интересов. Выберите один из них.'");
	Элемент.ПодсказкаВвода = НСтр("ru = 'По клиенту есть несколько актуальных интересов. Выберите один из них...'");
	
	Элемент.ПутьКДанным				= "CRM_ИнтересСтрокой";
	Элемент.ПоложениеЗаголовка		= ПоложениеЗаголовкаЭлементаФормы.Лево;
	Элемент.КнопкаВыбора			= Истина;
	Элемент.КнопкаОткрытия			= Ложь;
	Элемент.КнопкаОчистки			= Истина;
	Элемент.РедактированиеТекста	= Ложь;
	Элемент.ПропускатьПриВводе		= Истина;
	Элемент.АвтоМаксимальнаяШирина	= Ложь;
	
	Элемент.УстановитьДействие("НачалоВыбора"		, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	//Элемент.УстановитьДействие("ОбработкаВыбора"	, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	//Элемент.УстановитьДействие("Открытие"			, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	//Элемент.УстановитьДействие("Очистка"			, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	Элемент.УстановитьДействие("ПриИзменении"		, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	
	НоваяКомандаФормы = Форма.Команды.Добавить("ОткрытьИнтерес");
	НоваяКомандаФормы.Заголовок                 = НСтр("ru = 'Открыть интерес'");
	НоваяКомандаФормы.Подсказка                 = НСтр("ru = 'Открыть интерес'");
	НоваяКомандаФормы.Действие                  = "Подключаемый_ВыполнитьПереопределяемуюКоманду";
	НоваяКомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	
	НоваяКнопкаФормы = Форма.Элементы.Добавить("ОткрытьИнтерес", Тип("КнопкаФормы"), ГруппаСтрокаИнтереса);
	НоваяКнопкаФормы.Вид				= ВидКнопкиФормы.ОбычнаяКнопка;
	НоваяКнопкаФормы.ИмяКоманды			= "ОткрытьИнтерес";
	НоваяКнопкаФормы.Заголовок			= НСтр("ru = 'Открыть интерес'");
	НоваяКнопкаФормы.Картинка			= БиблиотекаКартинок.Найти;
	НоваяКнопкаФормы.Отображение		= ОтображениеКнопки.Картинка;
	НоваяКнопкаФормы.ОтображениеФигуры  = ОтображениеФигурыКнопки.ПриАктивности;
	
	
	// Команда и кнопка скрыть показать таблицу интересов.
	НоваяКомандаФормы = Форма.Команды.Добавить("СкрытьПоказатьИнтересы");
	НоваяКомандаФормы.Заголовок                 = НСтр("ru = 'Скрыть\показать интересы'");
	НоваяКомандаФормы.Подсказка                 = НСтр("ru = 'Скрыть\показать интересы'");
	НоваяКомандаФормы.Действие                  = "Подключаемый_ВыполнитьПереопределяемуюКоманду";
	НоваяКомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	
	НоваяКнопкаФормы = Форма.Элементы.Добавить("СкрытьПоказатьИнтересы", Тип("КнопкаФормы"), ГруппаСтрокаИнтереса);
	НоваяКнопкаФормы.Вид				= ВидКнопкиФормы.ОбычнаяКнопка;
	НоваяКнопкаФормы.ИмяКоманды			= "СкрытьПоказатьИнтересы";
	НоваяКнопкаФормы.Заголовок			= НСтр("ru = 'Скрыть\показать интересы'");
	НоваяКнопкаФормы.Картинка			= БиблиотекаКартинок.Информация;
	НоваяКнопкаФормы.Отображение		= ОтображениеКнопки.Картинка;
	НоваяКнопкаФормы.ОтображениеФигуры  = ОтображениеФигурыКнопки.ПриАктивности;
	
	// Добавим таблицу интересов
	ГруппаТаблицыИнтересов	= Форма.Элементы.Добавить("ГруппаCRM_ТаблицаИнтересов", Тип("ГруппаФормы"), Форма.Элементы[ИмяЭлементаДляРазмещения]);
	ГруппаТаблицыИнтересов.Вид					= ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаТаблицыИнтересов.ОтображатьЗаголовок	= Ложь;
	ГруппаТаблицыИнтересов.Отображение			= ОтображениеОбычнойГруппы.Нет;
	ГруппаТаблицыИнтересов.Видимость			= Ложь;
	
	//ЭлементТаблица = Форма.Элементы.Добавить("CRM_ТаблицаИнтересов", Тип("ТаблицаФормы"), Форма.Элементы[ИмяЭлементаДляРазмещения]);
	ЭлементТаблица = Форма.Элементы.Добавить("CRM_ТаблицаИнтересов", Тип("ТаблицаФормы"), ГруппаТаблицыИнтересов);
	ЭлементТаблица.ПутьКДанным			= "CRM_ТаблицаИнтересов";
	ЭлементТаблица.РежимВыделения		= РежимВыделенияТаблицы.Одиночный;
	ЭлементТаблица.РежимВыделенияСтроки	= РежимВыделенияСтрокиТаблицы.Строка;
	ЭлементТаблица.Шапка				= Ложь;
	ЭлементТаблица.Высота				= 4;
	ЭлементТаблица.РастягиватьПоВертикали = Ложь;
	ЭлементТаблица.КоманднаяПанель.Видимость = Ложь;
	ЭлементТаблица.КоманднаяПанель.Доступность = Ложь;
	
	ЭлементТаблица.ТолькоПросмотр = Истина;
	ЭлементТаблица.ИзменятьСоставСтрок = Ложь;
	ЭлементТаблица.ИзменятьПорядокСтрок = Ложь;
	
	ЭлементТаблица.УстановитьДействие("Выбор"					, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	ЭлементТаблица.УстановитьДействие("ПередНачаломДобавления"	, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	ЭлементТаблица.УстановитьДействие("ОбработкаВыбора"			, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	ЭлементТаблица.УстановитьДействие("ПередУдалением"			, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	ЭлементТаблица.УстановитьДействие("ПослеУдаления"			, "Подключаемый_ВыполнитьПереопределяемуюКоманду");
	
	// команда добавить
	НоваяКомандаФормы = Форма.Команды.Добавить("ДобавитьИнтерес");
	НоваяКомандаФормы.Заголовок 	= "Добавить";
	НоваяКомандаФормы.Подсказка 	= "Добавить интерес";
	НоваяКомандаФормы.Действие 		= "Подключаемый_ВыполнитьПереопределяемуюКоманду";
	НоваяКомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	
	НоваяКнопка = Форма.Элементы.Добавить("ДобавитьИнтерес", Тип("КнопкаФормы"), ЭлементТаблица.КонтекстноеМеню);
	НоваяКнопка.ИмяКоманды = "ДобавитьИнтерес";
	НоваяКнопка.Картинка			= БиблиотекаКартинок.СоздатьЭлементСписка;
	
	// команда добавить
	НоваяКомандаФормы = Форма.Команды.Добавить("УдалитьИнтерес");
	НоваяКомандаФормы.Заголовок 	= "Удалить";
	НоваяКомандаФормы.Подсказка 	= "Удалить интерес";
	НоваяКомандаФормы.Действие 		= "Подключаемый_ВыполнитьПереопределяемуюКоманду";
	НоваяКомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	
	НоваяКнопка = Форма.Элементы.Добавить("УдалитьИнтерес", Тип("КнопкаФормы"), ЭлементТаблица.КонтекстноеМеню);
	НоваяКнопка.ИмяКоманды = "УдалитьИнтерес";
	НоваяКнопка.Картинка			= БиблиотекаКартинок.Удалить;
	
	// команда основной
	НоваяКомандаФормы = Форма.Команды.Добавить("Основной");
	НоваяКомандаФормы.Заголовок 	= "Основной";
	НоваяКомандаФормы.Подсказка 	= "Установить интерес основным";
	НоваяКомандаФормы.Действие 		= "Подключаемый_ВыполнитьПереопределяемуюКоманду";
	НоваяКомандаФормы.ИзменяетСохраняемыеДанные = Ложь;
	
	НоваяКнопка = Форма.Элементы.Добавить("Основной", Тип("КнопкаФормы"), ЭлементТаблица.КонтекстноеМеню);
	НоваяКнопка.ИмяКоманды = "Основной";
	
	
	
	Элемент				= Форма.Элементы.Добавить("CRM_ТаблицаИнтересовДата", Тип("ПолеФормы"), ЭлементТаблица);
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным	= "CRM_ТаблицаИнтересов.Дата";
	Элемент.ТолькоПросмотр = Истина;
	
	Элемент				= Форма.Элементы.Добавить("CRM_ТаблицаИнтересовНомер", Тип("ПолеФормы"), ЭлементТаблица);
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным	= "CRM_ТаблицаИнтересов.Номер";
	Элемент.ТолькоПросмотр = Истина;
	Элемент.Видимость 	= Ложь;
	
	Элемент				= Форма.Элементы.Добавить("CRM_ТаблицаИнтересовТема", Тип("ПолеФормы"), ЭлементТаблица);
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным	= "CRM_ТаблицаИнтересов.Тема";
	Элемент.ТолькоПросмотр = Истина;
	
	Элемент				= Форма.Элементы.Добавить("CRM_ТаблицаИнтересовКлиент", Тип("ПолеФормы"), ЭлементТаблица);
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным	= "CRM_ТаблицаИнтересов.Партнер";
	Элемент.ТолькоПросмотр = Истина;
	
	Элемент				= Форма.Элементы.Добавить("CRM_ТаблицаИнтересовОтветственный", Тип("ПолеФормы"), ЭлементТаблица);
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным	= "CRM_ТаблицаИнтересов.Ответственный";
	Элемент.ТолькоПросмотр = Истина;
	
	Элемент				= Форма.Элементы.Добавить("CRM_ТаблицаИнтересовОргЕдиница", Тип("ПолеФормы"), ЭлементТаблица);
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным	= "CRM_ТаблицаИнтересов.Подразделение";
	Элемент.ТолькоПросмотр = Истина;
	
	Элемент				= Форма.Элементы.Добавить("CRM_ТаблицаИнтересовЮрЛицо", Тип("ПолеФормы"), ЭлементТаблица);
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным	= "CRM_ТаблицаИнтересов.Организация";
	Элемент.ТолькоПросмотр = Истина;
	
	Элемент				= Форма.Элементы.Добавить("CRM_ТаблицаИнтересовСсылка", Тип("ПолеФормы"), ЭлементТаблица);
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным	= "CRM_ТаблицаИнтересов.Ссылка";
	Элемент.Видимость 	= Ложь;
	Элемент.ТолькоПросмотр = Истина;
	
	Элемент				= Форма.Элементы.Добавить("CRM_ТаблицаИнтересовВведенНаОсновании", Тип("ПолеФормы"), ЭлементТаблица);
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным	= "CRM_ТаблицаИнтересов.ВведенНаОсновании";
	Элемент.Видимость 	= Ложь;
	Элемент.ТолькоПросмотр = Истина;
	
	// Добавим условное оформление таблицы интересов.
	Элемент = Форма.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Форма.Элементы.CRM_ТаблицаИнтересов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("CRM_ТаблицаИнтересов.ВведенНаОсновании");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.СветлоСерый);
	
	
	// Входящее письмо
	Если ТипОбъекта = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		
		Если ЗначениеЗаполнено(Объект.ОтправительКонтакт) Тогда
			Если ТипЗнч(Объект.ОтправительКонтакт) = Тип("СправочникСсылка.Партнеры") Тогда
				Форма.Клиент	= Объект.ОтправительКонтакт;
			КонецЕсли;
			
			Если ТипЗнч(Объект.ОтправительКонтакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				Форма.Клиент	= Объект.ОтправительКонтакт.Владелец;
				Форма.Контакт	= Объект.ОтправительКонтакт;
			КонецЕсли;
		КонецЕсли;
	// Исходящее письмо
	ИначеЕсли ТипОбъекта = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		
		Если ЗначениеЗаполнено(Форма._Партнер) Тогда
			Если ТипЗнч(Форма._Партнер) = Тип("СправочникСсылка.Партнеры") Тогда
				Форма.Клиент	= Форма._Партнер;
			КонецЕсли;
			
			Если ТипЗнч(Форма._Партнер) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				Форма.Клиент	= Форма._Партнер.Владелец;
				Форма.Контакт	= Форма._Партнер;
			КонецЕсли;
		КонецЕсли;
	//Иначе
	//	
	//	Форма.Клиент	= Объект.Партнер;
	//	Форма.Контакт	= Объект.КонтактноеЛицо;
		
	КонецЕсли;
	
	ЗаполнитьГруппуИнтересаВФормеДокумента(Объект, Форма, Истина, , ТипЗнч(Объект.Ссылка), Объект.Ссылка.Пустая());
	CRM_ОбщегоНазначенияСервер.ЗаполнитьНадписьВСтрокеИнтереса(Форма, Объект);
КонецПроцедуры

//
//
Процедура ЗаполнитьГруппуИнтересаВФормеДокумента(Объект, Форма, ПриСозданииФормыНаСервере = Ложь, ИзмененКлиентКонтакт = Ложь, ТипОбъекта = Неопределено, ЭтоНовый = Ложь, СсылкаНаОснование=Неопределено)
	
	Если ИзмененКлиентКонтакт Тогда
		
		// Заказ клиента
		Если ТипОбъекта = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			Если Форма.Клиент  <> Объект.Партнер Тогда
				Форма.Клиент  = Объект.Партнер;
				Форма.CRM_ТаблицаИнтересов.Очистить();
				Форма.Контакт = Справочники.КонтактныеЛицаПартнеров.ПустаяСсылка();
				Форма.CRM_ИнтересСтрокой	= "";
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПриСозданииФормыНаСервере Тогда
		
		// Заказ клиента
		Если ТипОбъекта = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			Форма.Клиент  = Объект.Партнер;
			Форма.Контакт = Объект.КонтактноеЛицо;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОснование) Тогда
		ИмяРеквизитаОснования	= CRM_ОбщегоНазначенияСервер.ВернутьИмяРеквизитаОснования(ТипОбъекта);
		Если НЕ ИмяРеквизитаОснования = Неопределено И ЗначениеЗаполнено(Объект[ИмяРеквизитаОснования]) Тогда
			СсылкаНаОснование	= Объект[ИмяРеквизитаОснования];
		ИначеЕсли ЭтоНовый И Форма.Параметры.Свойство("Основание") И ТипЗнч(Форма.Параметры.Основание) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			СсылкаНаОснование = Форма.Параметры.Основание;			
		КонецЕсли;	
	КонецЕсли;
		
	Если ПриСозданииФормыНаСервере И ЭтоНовый Тогда
		ЕстьИнтересы = Ложь;
		
		Если НЕ СсылкаНаОснование = Неопределено Тогда
			Если ТипЗнч(СсылкаНаОснование) = Тип("ДокументСсылка.CRM_Интерес") Тогда
				
				Форма.ЕстьИнтересыДляВыбора	= Истина;
				Форма.CRM_ИнтересСтрокой		= CRM_ОбщегоНазначенияСервер.СформироватьПредставлениеИнтересаСтрокой(СсылкаНаОснование);
				
				Форма.Элементы.CRM_ИнтересСтрокой.ТолькоПросмотр = Истина;
				
				НоваяСтрока = Форма.CRM_ТаблицаИнтересов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СсылкаНаОснование);
				НоваяСтрока.ВведенНаОсновании = Истина;
				
				//Форма.Элементы.CRM_ИнтересСтрокой.КнопкаВыбора	= Ложь;
				Форма.Элементы.CRM_ИнтересСтрокой.КнопкаВыбора	= Истина;
				Форма.Элементы.CRM_ИнтересСтрокой.КнопкаОчистки	= Ложь;
				
				ЕстьИнтересы = Истина;
			ИначеЕсли ТипЗнч(СсылкаНаОснование) = Тип("ДокументСсылка.CRM_Взаимодействие")
			И ЗначениеЗаполнено(СсылкаНаОснование.ДокументОснование) Тогда
				
				Форма.ЕстьИнтересыДляВыбора	= Истина;
				Форма.CRM_ИнтересСтрокой		= CRM_ОбщегоНазначенияСервер.СформироватьПредставлениеИнтересаСтрокой(СсылкаНаОснование.ДокументОснование);
				
				Форма.Элементы.CRM_ИнтересСтрокой.ТолькоПросмотр = Истина;
				
				НоваяСтрока = Форма.CRM_ТаблицаИнтересов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СсылкаНаОснование.ДокументОснование);
				НоваяСтрока.ВведенНаОсновании = Истина;
				
				//Форма.Элементы.CRM_ИнтересСтрокой.КнопкаВыбора	= Ложь;
				Форма.Элементы.CRM_ИнтересСтрокой.КнопкаВыбора	= Истина;
				Форма.Элементы.CRM_ИнтересСтрокой.КнопкаОчистки	= Ложь;
				
				ЕстьИнтересы = Истина;
			Иначе
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("Объект",СсылкаНаОснование);
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
					|	CRM_ЖурналДокументов.CRM_Интерес КАК Ссылка,
					|	CRM_ЖурналДокументов.СостояниеИнтереса,
					|	CRM_ЖурналДокументов.ОсновнойИнтерес КАК ОсновнойИнтерес,
					|	CRM_ЖурналДокументов.ИнтересЯвляетсяОснованием КАК ВведенНаОсновании
					|ИЗ
					|	РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
					|ГДЕ
					|	CRM_ЖурналДокументов.Объект = &Объект
					|	И НЕ CRM_ЖурналДокументов.CRM_Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
					|	И CRM_ЖурналДокументов.ГлавнаяЗапись
					|
					|УПОРЯДОЧИТЬ ПО
					|	ОсновнойИнтерес УБЫВ";
					
				Выборка = Запрос.Выполнить().Выбрать();
				
				Пока Выборка.Следующий() Цикл
					НоваяСтрока = Форма.CRM_ТаблицаИнтересов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка.Ссылка);
					НоваяСтрока.ВведенНаОсновании	= Выборка.ВведенНаОсновании;
					НоваяСтрока.ОсновнойИнтерес		= Выборка.ОсновнойИнтерес;
					ЕстьИнтересы = Истина;
				КонецЦикла;
				
				Если (Форма.CRM_ТаблицаИнтересов.Количество() > 0) Тогда
					Форма.ЕстьИнтересыДляВыбора	= Истина;
					Форма.CRM_ИнтересСтрокой	= CRM_ОбщегоНазначенияСервер.СформироватьПредставлениеИнтересаСтрокой(Форма.CRM_ТаблицаИнтересов[0].Ссылка);
					
					Форма.Элементы.CRM_ИнтересСтрокой.ТолькоПросмотр = Форма.CRM_ТаблицаИнтересов[0].ВведенНаОсновании;
					Форма.Элементы.CRM_ИнтересСтрокой.КнопкаОчистки	 = Не Форма.CRM_ТаблицаИнтересов[0].ВведенНаОсновании;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		// Если интересов никаких не нашли, то поле с основным интересом оставляем пустым, 
		// при этом таблица интересов тоже будет пустой.
		Если НЕ ЕстьИнтересы Тогда
			// Включаем видимость группы интерес.
			Форма.ЕстьИнтересыДляВыбора = Истина;
		КонецЕсли;				
	КонецЕсли;
	
	// Работа с таблицей интересов.
	Если ПриСозданииФормыНаСервере И НЕ ЭтоНовый Тогда
		
		// В начале проверим, не связан ли документ с интересами
		// данные берем из регистра "CRM_ЖурналДокументов" и рекизита "CRM_Интерес".
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Объект"		, Объект.Ссылка);
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	CRM_ЖурналДокументов.CRM_Интерес КАК Ссылка,
		|	CRM_ЖурналДокументов.ИнтересЯвляетсяОснованием КАК ВведенНаОсновании,
		|	CRM_ЖурналДокументов.ОсновнойИнтерес
		|ИЗ
		|	РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
		|ГДЕ
		|	CRM_ЖурналДокументов.Объект = &Объект
		|	И НЕ CRM_ЖурналДокументов.CRM_Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
		|	И CRM_ЖурналДокументов.ГлавнаяЗапись";
		ТекстЗапроса = ТекстЗапроса + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОсновнойИнтерес УБЫВ";
		
		Запрос.Текст = ТекстЗапроса;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		ЕстьИнтересы = Ложь;
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Форма.CRM_ТаблицаИнтересов.Добавить();
			Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка.Ссылка);
				НоваяСтрока.ВведенНаОсновании	= Выборка.ВведенНаОсновании;
				НоваяСтрока.ОсновнойИнтерес		= Выборка.ОсновнойИнтерес;
				ЕстьИнтересы = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если (Форма.CRM_ТаблицаИнтересов.Количество() > 0) Тогда
			Форма.ЕстьИнтересыДляВыбора	= Истина;
			ТекСтрокаИнтерес = Форма.CRM_ТаблицаИнтересов[0];
			Форма.CRM_ИнтересСтрокой	= CRM_ОбщегоНазначенияСервер.СформироватьПредставлениеИнтересаСтрокой(ТекСтрокаИнтерес.Ссылка);
			//Форма.Элементы.CRM_ИнтересСтрокой.КнопкаОчистки	= Ложь;
			Форма.Элементы.CRM_ИнтересСтрокой.ТолькоПросмотр = Форма.CRM_ТаблицаИнтересов[0].ВведенНаОсновании;
		КонецЕсли;
		
		// Если интересов никаких не нашли, то поле с основным интересом оставляем пустым, 
		// при этом таблица интересов тоже будет пустой.
		Если НЕ ЕстьИнтересы Тогда
			// Включаем видимость группы интерес.
			Форма.ЕстьИнтересыДляВыбора = Истина;
		КонецЕсли;				
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтруктуруСтрокиИнтересов(Интерес) Экспорт
	СтруктураВозврата = Новый Структура("ВведенНаОсновании,Дата,Номер,Организация,ОсновнойИнтерес,Ответственный,Партнер,Подразделение,СостояниеИнтереса,Ссылка,Тема");
	ЗаполнитьЗначенияСвойств(СтруктураВозврата, Интерес);
	Возврат СтруктураВозврата;
КонецФункции


Процедура ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	CRM_ТаблицаИнтересовЗнач = Форма.РеквизитФормыВЗначение("CRM_ТаблицаИнтересов",Тип("ТаблицаЗначений"));
	// удалим строки, где клиент не совпадает с клиентом документа
	//ИндексСтроки = 0;
	//Пока ИндексСтроки < CRM_ТаблицаИнтересовЗнач.Количество() Цикл
	//	ТекущаяСтрока = CRM_ТаблицаИнтересовЗнач[ИндексСтроки];
	//	Если ТекущийОбъект.Партнер = ТекущаяСтрока.Партнер Тогда
	//		ИндексСтроки = ИндексСтроки + 1;
	//	Иначе	
	//		CRM_ТаблицаИнтересовЗнач.Удалить(ТекущаяСтрока);
	//	КонецЕсли;	
	//КонецЦикла;
	ТекущийОбъект.ДополнительныеСвойства.Вставить("CRM_ТаблицаИнтересов",CRM_ТаблицаИнтересовЗнач);
	//Форма.ЗначениеВРеквизитФормы(CRM_ТаблицаИнтересовЗнач, "CRM_ТаблицаИнтересов");
КонецПроцедуры


