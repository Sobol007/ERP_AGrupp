
#Область ПрограммныйИнтерфейс

// Функция - Максимальное количество потоков обработки исходящих
// 
// Возвращаемое значение:
//	Значение константы "сшпМаксимальноеКоличествоПотоковОбработкиИсходящих".
//
Функция МаксимальноеКоличествоПотоковОбработкиИсходящих() Экспорт
	
	Возврат Константы.сшпМаксимальноеКоличествоПотоковОбработкиИсходящих.Получить();
	
КонецФункции

// Функция - Максимальное количество потоков обработки входящих
// 
// Возвращаемое значение:
//	Значение константы "сшпМаксимальноеКоличествоПотоковОбработкиВходящих".
//
Функция МаксимальноеКоличествоПотоковОбработкиВходящих() Экспорт
	
	Возврат Константы.сшпМаксимальноеКоличествоПотоковОбработкиВходящих.Получить();
	
КонецФункции	

// Функция - Максимальное количество потоков отправки сообщений
// 
// Возвращаемое значение:
//	Значение константы "сшпМаксимальноеКоличествоПотоковОтправкиСообщений".
//
Функция сшпМаксимальноеКоличествоПотоковОтправкиСообщений() Экспорт
	
	Возврат 1;
	
КонецФункции

// Функция - Получить длительность хранения
// 
// Возвращаемое значение:
//	Значение константы "сшпДлительностьХраненияСообщенийПоОчередямИСостояниям".
//
Функция ПолучитьДлительностьХранения() Экспорт
	
	ЗначениеКонстанты = Константы.сшпДлительностьХраненияСообщенийПоОчередямИСостояниям.Получить().Получить();
	
	Если ЗначениеКонстанты = Неопределено Тогда
		 
		Возврат СформироватьЗначениеКонстантыДлительностьХранения();
		
	Иначе
		
		Возврат ЗначениеКонстанты;
		
	КонецЕсли;
	
КонецФункции

// Функция - Получить длительность хранения по умолчанию
// 
// Возвращаемое значение:
//	Значение константы "сшпДлительностьХраненияСообщений".
//
Функция ПолучитьДлительностьХраненияПоУмолчанию() Экспорт
	
	Возврат Константы.сшпДлительностьХраненияСообщений.Получить();
	
КонецФункции

// Функция - Установить значение константы
//
// Параметры:
//  ИмяКонстанты - константа, значение которой необходимо установить.
//  ЗначениеКонстанты - устанавливаемое значение.
// 
// Возвращаемое значение:
//	Изменение константы выполнено
//
Функция УстановитьЗначениеКонстанты(ИмяКонстанты, ЗначениеКонстанты) Экспорт
	
	ТекущееЗначение = ПолучитьЗначениеКонстанты(ИмяКонстанты);
	
	Если Не ТекущееЗначение = ЗначениеКонстанты Тогда
		
		Константы[ИмяКонстанты].Установить(ЗначениеКонстанты);
		Возврат Истина;
		
	Иначе
		 
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции	

// Функция - Получить значение константы
//
// Параметры:
//	ИмяКонстанты - имя константы, значение которой нужно получить.
//
// Возвращаемое значение:
//	Значение константы, определённой по имени.
//
Функция ПолучитьЗначениеКонстанты(ИмяКонстанты) Экспорт
	
	Возврат Константы[ИмяКонстанты].Получить();
	
КонецФункции	

// Процедура - Установить идентификатор ИБ. Устанавливает в константу сшпИдентификаторИБ текущее значение идентификтаора ИБ 
// 
Процедура УстановитьИдентификаторИБ() Экспорт
	 
	сшпРаботаСКонстантами.УстановитьЗначениеКонстанты("сшпИдентификаторИБ", НРег(СтрокаСоединенияИнформационнойБазы()));
	
КонецПроцедуры

// Функция - Сформировать значение константы Длительность хранения
//
// Возвращаемое значение:
//	Пустая таблица значений для описания константы Длительность хранения.
//
Функция СформироватьЗначениеКонстантыДлительностьХранения() Экспорт
	 
	ТаблицаДлительностиОжидания = Новый ТаблицаЗначений;
	ТаблицаДлительностиОжидания.Колонки.Добавить("ТипОчереди", Новый ОписаниеТипов("ПеречислениеСсылка.сшпТипыОчередей"), "Тип очереди");
	ТаблицаДлительностиОжидания.Колонки.Добавить("СтатусСообщения", Новый ОписаниеТипов("ПеречислениеСсылка.сшпСтатусыСообщений"), "Статус сообщения");
	ТаблицаДлительностиОжидания.Колонки.Добавить("ДлительностьХранения", Новый ОписаниеТипов("Число"), "Длительность хранения, дн.");
	
	Возврат ТаблицаДлительностиОжидания;
	
КонецФункции

// Функция - Получить ид адаптера
//
// Возвращаемое значение:
//	Строка - идентификатор адаптера
//
Функция ПолучитьИдАдаптера() Экспорт
	
	Возврат Константы.сшпИДАдаптера.Получить();
	
КонецФункции

// Функция - Тип коннектора веб сервисы
//
// Возвращаемое значение:
//	Булево - Использование Веб-сервисов
//
Функция ТипКоннектораВебСервисы() Экспорт
	 
	Возврат сшпФункциональныеОпции.ТипИспользуемогоКоннектораESB() <> Перечисления.сшпТипыКоннекторовESB.Pipe;
	
КонецФункции

#КонецОбласти
