
#Область ТиповыеОбработчики

#Область ОбработкиЗаполнения

Процедура СправочникОбработкаЗаполнения(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	#Область Справочник
	#КонецОбласти
	
КонецПроцедуры


Процедура ДокументОбработкаЗаполнения(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	#Область ЗаказКлиента
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЗаказКлиента") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			
			ЗаполнитьЗаказПоИнтересу(Источник, ДанныеЗаполнения);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Источник.КонтактноеЛицо) И ЗначениеЗаполнено(Источник.Партнер) Тогда
			Источник.КонтактноеЛицо = ПолучитьКонтактноеЛицоКлиента(Источник.Партнер);
		КонецЕсли;
		
	#КонецОбласти
	
	Иначе
		
		Если ТипДанныхЗаполнения = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс")
		ИЛИ  ТипДанныхЗаполнения = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		
			Попытка
				Если ТипДанныхЗаполнения = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс") Тогда
					CRM_ОбщегоНазначенияСервер.ЗаполнитьОбъектБизнесПроцесса(Источник, ДанныеЗаполнения);
				Иначе
					CRM_ОбщегоНазначенияСервер.ЗаполнитьОбъектБизнесПроцесса(Источник, ДанныеЗаполнения.БизнесПроцесс, ДанныеЗаполнения);
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПередЗаписью

Процедура ДокументыПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

Процедура СправочникПередЗаписью(Источник, Отказ) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПриЗаписи

Процедура СправочникПриЗаписи(Источник, Отказ) Экспорт
	
	
КонецПроцедуры

Процедура ДокументПриЗаписи(Источник, Отказ) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПриКопировании

Процедура СправочникПриКопировании(Источник, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

Процедура ДокументПриКопировании(Источник, ОбъектКопирования) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти //ТиповыеОбработчики

#Область ПрочиеМетодыОбъектов

#Область ЗаказКлиента

Процедура ЗаполнитьЗаказПоИнтересу(Источник, ДанныеЗаполнения)
	
	Источник.ДокументОснование 	= ДанныеЗаполнения.Ссылка;
	Источник.КонтактноеЛицо		= ДанныеЗаполнения.КонтактноеЛицо;
	Источник.Организация 		= ДанныеЗаполнения.Организация;
	Источник.Подразделение		= ДанныеЗаполнения.Подразделение;
	
	Если ЗначениеЗаполнено(Источник.Организация) Тогда
		Источник.БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Источник.Организация);
	КонецЕсли;	
	Источник.Менеджер = ДанныеЗаполнения.Ответственный;
	Источник.Партнер = ДанныеЗаполнения.Партнер;
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Источник.Партнер, Источник.Контрагент);
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения.Соглашение) Тогда
		
		Если Не ЗначениеЗаполнено(Источник.Соглашение) Тогда
			
			Источник.Соглашение = ДанныеЗаполнения.Соглашение;
			
			Источник.ЗаполнитьУсловияПродажПоСоглашению();
			
			//ЗаполнитьДокументНаОснованииИндивидуальногоСоглашенияСКлиентом(Источник, Источник.Соглашение);	
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения.СделкаСКлиентом) Тогда
		
		Если Не ЗначениеЗаполнено(Источник.Сделка) Тогда
			
			Источник.Сделка = ДанныеЗаполнения.СделкаСКлиентом;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения.НалогообложениеНДС) Тогда
		
		Если Не ЗначениеЗаполнено(Источник.НалогообложениеНДС) Тогда
			
			Источник.НалогообложениеНДС = ДанныеЗаполнения.НалогообложениеНДС;
			
			Источник.ЦенаВключаетНДС = ДанныеЗаполнения.ЦенаВключаетНДС;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДобавленыСтрокиТовары = Ложь;
	МассивКлючейСвязи = Новый Массив;
	
	
	
	Если ДанныеЗаполнения.Товары.Количество() > 0 Тогда
		
		Для каждого ДанныеЗаполненияСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			
			Если ЗначениеЗаполнено(ДанныеЗаполненияСтрокаТовары.Номенклатура)
			   И ЗначениеЗаполнено(ДанныеЗаполненияСтрокаТовары.Количество)
			   И ЗначениеЗаполнено(ДанныеЗаполненияСтрокаТовары.Цена) 
			   И ЗначениеЗаполнено(ДанныеЗаполненияСтрокаТовары.Сумма) Тогда			   
			   
			    ДобавленыСтрокиТовары = Истина;
				ИсточникТоварыСтрока = Источник.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(ИсточникТоварыСтрока, ДанныеЗаполненияСтрокаТовары);
				
				ИсточникТоварыСтрока.Склад = Источник.Склад;				
				
				Если ДанныеЗаполненияСтрокаТовары.КлючСвязи > 0 
				   И МассивКлючейСвязи.Найти(ДанныеЗаполненияСтрокаТовары.КлючСвязи) = Неопределено Тогда
				   
				   МассивКлючейСвязи.Добавить(ДанныеЗаполненияСтрокаТовары.КлючСвязи);
					
			   КонецЕсли;
			   
			КонецЕсли;	
			
		КонецЦикла;	
			
	КонецЕсли;
	
	Если ДобавленыСтрокиТовары Тогда
		
		ДобавленыСкидки = Ложь;
		
		Если ДанныеЗаполнения.СкидкиНаценки.Количество() > 0 Тогда
		
			Для каждого ДанныеЗаполненияСтрокаСкидкиНаценки Из ДанныеЗаполнения.СкидкиНаценки Цикл
				
				Если Не МассивКлючейСвязи.Найти(ДанныеЗаполненияСтрокаСкидкиНаценки.КлючСвязи) = Неопределено Тогда
					
					ДобавленыСкидки = Истина;
					ИсточникСкидкиНаценкиСтрока = Источник.СкидкиНаценки.Добавить();
					ЗаполнитьЗначенияСвойств(ИсточникСкидкиНаценкиСтрока, ДанныеЗаполненияСтрокаСкидкиНаценки);
					
				КонецЕсли;	
				
			КонецЦикла;	
				
		КонецЕсли;
		
		Если ДобавленыСкидки Тогда
			Источник.СкидкиРассчитаны = ДанныеЗаполнения.СкидкиРассчитаны;
		КонецЕсли;
		
		ВариантыОбеспечения = ПродажиСервер.ВариантыОбеспеченияПоУмолчанию(Источник.Соглашение, Источник.Статус);
		СтруктураДействий = Новый Структура();
		ПараметрыДействия = ОбеспечениеКлиентСервер.ПараметрыДействияПроверитьЗаполнитьОбеспечение(ВариантыОбеспечения);
		СтруктураДействий.Вставить("ПроверитьЗаполнитьОбеспечениеВДокументеПродажи", ПараметрыДействия);
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Источник.Товары, СтруктураДействий, Неопределено);				
		
	КонецЕсли;		
	
КонецПроцедуры

// процедура перенесена из модуля объекта документ "Заказ клиента"
//
Процедура ЗаполнитьДокументНаОснованииИндивидуальногоСоглашенияСКлиентом(ДокументОбъект, Знач ДокументОснование)
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	СоглашениеСКлиентом.Ссылка         КАК Соглашение,
		|	СоглашениеСКлиентом.Партнер        КАК Партнер,
		|	СоглашениеСКлиентом.КонтактноеЛицо КАК КонтактноеЛицо,
		|
		|	СоглашениеСКлиентом.Статус      КАК СтатусДокумента,
		|	ВЫБОР
		|		КОГДА
		|			СоглашениеСКлиентом.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус,
		|	СоглашениеСКлиентом.Типовое КАК ЕстьОшибкиТиповое,
		|	СоглашениеСКлиентом.НаправлениеДеятельности КАК НаправлениеДеятельности
		|
		|ИЗ
		|	Справочник.СоглашенияСКлиентами КАК СоглашениеСКлиентом
		|ГДЕ
		|	СоглашениеСКлиентом.Ссылка = &ДокументОснование
		|");
		
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[0].Выбрать();
	Выборка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыСоглашенийСКлиентами.Действует);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСоглашения(Выборка.ЕстьОшибкиТиповое);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		Выборка.Соглашение,
		Выборка.СтатусДокумента,
		,
		Выборка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, Выборка);
	ДокументОбъект.ЗаполнитьУсловияПродажПоСоглашению();
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьКонтактноеЛицоКлиента(Клиент)
	
	Если ЗначениеЗаполнено(Клиент.CRM_ОсновноеКонтактноеЛицо) Тогда
		Возврат Клиент.CRM_ОсновноеКонтактноеЛицо;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтактныеЛицаПартнеров.Ссылка
		|ИЗ
		|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
		|ГДЕ
		|	КонтактныеЛицаПартнеров.Владелец = &Владелец";
		
		Запрос.УстановитьПараметр("Владелец",Клиент);
		ВыборкаИзРезультатаЗапроса = Запрос.Выполнить().Выбрать();
		
		ВыборкаИзРезультатаЗапроса.Следующий();
		
		Возврат ВыборкаИзРезультатаЗапроса.Ссылка;
	КонецЕсли;
	
КонецФункции

#КонецОбласти //ПрочиеМетодыОбъектов
