#Область СлужебныеПроцедурыИФункции

Функция СчетФактураПолученныйПоОснованию(ПараметрыРегистрации) Экспорт
	
	Результат = Неопределено;
	Если ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		СчетаФактуры = Документы.СчетФактураПолученныйНалоговыйАгент.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка, ПараметрыРегистрации.Организация, Неопределено, Ложь);
	Иначе
		СчетаФактуры = Документы.СчетФактураПолученный.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка, ПараметрыРегистрации.Организация, Неопределено, Ложь);
	КонецЕсли;
	Если СчетаФактуры.Количество() > 0 Тогда
		Результат = СчетаФактуры[0].Ссылка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ЗаписьКнигиПокупокПоОснованию(ДокументОснование, Организация) Экспорт
	
	Результат = Неопределено;
	ЗаписиКнигиПокупок = Документы.ЗаписьКнигиПокупок.ЗаписиКнигиПокупокПоОснованию(ДокументОснование, Организация, Ложь);
	Если ЗаписиКнигиПокупок.Количество() > 0 Тогда
		Результат = ЗаписиКнигиПокупок[0].Ссылка;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция ЗаявлениеОВвозеТоваровПоОснованию(ДокументОснование, Организация) Экспорт
	
	Результат = Неопределено;
	ЗаявленияОВвозеТоваров = Документы.ЗаявлениеОВвозеТоваров.ЗаявленияОВвозеТоваровПоОснованию(ДокументОснование, Организация, Ложь);
	Если ЗаявленияОВвозеТоваров.Количество() > 0 Тогда
		Результат = ЗаявленияОВвозеТоваров[0].Ссылка;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СчетФактураВыданныйПоОснованию(ДокументОснование, Организация) Экспорт
	
	Результат = Неопределено;
	ПараметрыОтбора = Новый Структура("Организация", Организация);
	СчетаФактуры = Документы.СчетФактураВыданный.СчетаФактурыПоОснованию(ДокументОснование, ПараметрыОтбора, Неопределено, Ложь);
	Если СчетаФактуры.Количество() > 0 Тогда
		Результат = СчетаФактуры[0].Ссылка;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция СчетФактураКомиссионеруПоОснованию(ДокументОснование, Организация) Экспорт
	
	Результат = Неопределено;
	СчетаФактуры = Документы.СчетФактураКомиссионеру.СчетаФактурыПоОснованию(ДокументОснование, Организация);
	Если СчетаФактуры.Количество() > 0 Тогда
		Результат = СчетаФактуры[0].Ссылка;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

Функция СформироватьЗаданияНаПечатьИсправительныхСчетовФактурПоИзмененнымДокументам(ТаблицаИзмененныхДокументов) Экспорт
	
	КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
	
	СформированныеЗадания = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ТаблицаИзмененныхДокументов Цикл
		
		НовоеЗадание = БизнесПроцессы.Задание.СоздатьБизнесПроцесс();
		НовоеЗадание.Дата = ТекущаяДатаСеанса();
		НовоеЗадание.Предмет = СтрокаТаблицы.Документ;
		НовоеЗадание.Исполнитель = СтрокаТаблицы.Ответственный;
		НовоеЗадание.Наименование = НСтр("ru = 'Перепечатать счет-фактуру для документа:';
										|en = 'Reprint tax invoice for the document:'", КодЯзыка) + " " + Строка(СтрокаТаблицы.Документ);
		НовоеЗадание.Содержание = НСтр("ru = 'В документе изменены номера ГТД. Требуется перепечатать счет-фактуру.';
										|en = 'CCD numbers have been changed in the document. It is required to reprint the tax invoice.'", КодЯзыка);
		НовоеЗадание.СрокИсполнения = ТекущаяДатаСеанса();
		НовоеЗадание.Автор = Пользователи.ТекущийПользователь();
		НовоеЗадание.Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
		
		НовоеЗадание.Записать();
		НовоеЗадание.Старт();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Сформировано задание на печать счет-фактуры';
				|en = 'A job is generated for tax invoice printing '", КодЯзыка),
			УровеньЖурналаРегистрации.Информация,
			НовоеЗадание.Метаданные(),
			НовоеЗадание.Ссылка,
			НСтр("ru = 'Сформировано задание для менеджера документа реализации товаров';
				|en = 'A job is generated for goods sales document manager'", КодЯзыка),
			РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
		
		СформированныеЗадания.Добавить(НовоеЗадание.Ссылка);
		
	КонецЦикла;
	
	Возврат СформированныеЗадания;
	
КонецФункции

Функция СтруктураРеквизитовДляОбработки(ДокументСсылка) Экспорт 
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
	
		СтруктураРеквизитов = Документы.СчетФактураВыданный.ПараметрыЗаполненияПоСчетуФактуре(ДокументСсылка);
	
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		
		СтруктураРеквизитов = Документы.СчетФактураПолученный.ПараметрыЗаполненияПоСчетуФактуре(ДокументСсылка);
		
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент") Тогда
		
		СтруктураРеквизитов = Документы.СчетФактураПолученныйНалоговыйАгент.ПараметрыЗаполненияПоСчетуФактуре(ДокументСсылка);
		
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

#КонецОбласти

