
#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для стандартной обработки дополнительных реквизитов.

// Создает основные реквизиты и поля формы, необходимые для работы.
// Заполняет дополнительные реквизиты, если используются.
// Вызывается из обработчика ПриСозданииНаСервере формы объекта со свойствами.
// 
// Параметры:
//  Форма - УправляемаяФорма - в которой будут отображаться дополнительные реквизиты.
//
//  ДополнительныеПараметры - Неопределено - все дополнительные параметры имеют значения по умолчанию.
//                               Ранее реквизит назывался "Объект" и имел смысл,
//                               как одноименное свойство структуры, указанной ниже.
//                          - Структура - с необязательными свойствами:
//
//
Процедура ПриСозданииНаСервере(Форма, ИмяЭлементаРазмещенияКоманды = "", ДопИмяЭлементаРазмещенияКоманды = "") Экспорт
	
	Если Форма.Параметры.Свойство("РасположениеЭлементовПоУмолчанию") Тогда
		Возврат;
	КонецЕсли;
	ОписаниеФормы = Неопределено;
	Если ОписаниеНастраиваемыхФорм().Свойство(СтрЗаменить(Форма.ИмяФормы, ".", "_"), ОписаниеФормы) Тогда
		
		РазместитьЭлементыПоНастройке(Форма, ОписаниеФормы);
		
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Роли", "CRM_НастройкаПрограммы") Тогда
			ДоступноРедактированиеРасположенияЭлементовФормы = РольДоступна("ПолныеПрава") или РольДоступна("CRM_НастройкаПрограммы");
		Иначе
			ДоступноРедактированиеРасположенияЭлементовФормы = РольДоступна("ПолныеПрава");
		КонецЕсли;
		
		Если ДоступноРедактированиеРасположенияЭлементовФормы Тогда
			
			Если ЗначениеЗаполнено(ИмяЭлементаРазмещенияКоманды) Тогда
				ЭлементРазмещенияКоманды = Форма.Элементы.Найти(ИмяЭлементаРазмещенияКоманды);
				Если ЭлементРазмещенияКоманды = Неопределено Тогда
					Возврат;
				КонецЕсли;	
			Иначе 
				ЭлементРазмещенияКоманды = Форма.Элементы.Найти("КоманднаяПанельФормы");
				Если ЭлементРазмещенияКоманды = Неопределено Тогда
					Возврат;
				КонецЕсли;	
			КонецЕсли;
			
			Если Форма.Команды.Найти("НастроитьРасположениеЭлементовФормы") = Неопределено Тогда
				Команда = Форма.Команды.Добавить("НастроитьРасположениеЭлементовФормы");
				Команда.Действие = "Подключаемый_НастройкаРасположенияЭлементовФормы";
				
				КнопкаНастройки = Форма.Элементы.Добавить("НастроитьРасположениеЭлементовФормы", Тип("КнопкаФормы"), ЭлементРазмещенияКоманды);
				КнопкаНастройки.Заголовок = НСтр("ru = 'Настроить состав и расположение полей'");
				КнопкаНастройки.Картинка = БиблиотекаКартинок.CRM_НастройкиРабочийСтол;
				КнопкаНастройки.ИмяКоманды = "НастроитьРасположениеЭлементовФормы";
				КнопкаНастройки.ТолькоВоВсехДействиях = Истина;
				
				Если ЗначениеЗаполнено(ДопИмяЭлементаРазмещенияКоманды) Тогда
					ЭлементРазмещенияКоманды = Форма.Элементы.Найти(ДопИмяЭлементаРазмещенияКоманды);
					Если ЭлементРазмещенияКоманды <> Неопределено Тогда
						КнопкаНастройки = Форма.Элементы.Добавить("ДопНастроитьРасположениеЭлементовФормы", Тип("КнопкаФормы"), ЭлементРазмещенияКоманды);
						КнопкаНастройки.Заголовок = НСтр("ru = 'Настроить поля'");
						КнопкаНастройки.ИмяКоманды = "НастроитьРасположениеЭлементовФормы";
						КнопкаНастройки.ЦветТекста = ЦветаСтиля.CRM_ОсновнойГолубой;
						КнопкаНастройки.ОтображениеФигуры = ОтображениеФигурыКнопки.Нет;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
				
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ОписаниеНастраиваемыхФорм() Экспорт
	
	ОписанияФорм = Новый Структура;	
	
	// Новая форма интереса
	#Область НоваяФормаИнтереса
	
	ОписаниеФормы = Новый Структура;
	
	МассивОбластей = новый Массив;
	МассивОбластей.Добавить("ГруппаОсновное");
	МассивОбластей.Добавить("ГруппаДополнительно");
	ОписаниеФормы.Вставить("МассивОбластей", МассивОбластей);
	
	МассивИсключаемыхЭлементов = Новый Массив;
	МассивИсключаемыхЭлементов.Добавить("Ссылка");
	МассивИсключаемыхЭлементов.Добавить("ДекорацияАвторДата");
	МассивИсключаемыхЭлементов.Добавить("ГруппаДополнительныеРеквизиты");
	
	Если НЕ ПолучитьФункциональнуюОпцию("ФиксироватьПервичныйИнтерес") Тогда
		МассивИсключаемыхЭлементов.Добавить("ГруппаОбщиеСведенияИсточникСостояние");
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТипыУслуг") Тогда
		МассивИсключаемыхЭлементов.Добавить("ТипУслуги");
	КонецЕсли;
	
	Если НЕ CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		ИмяФО = "ИспользоватьСделкиСКлиентами";
		Если НЕ ПолучитьФункциональнуюОпцию(ИмяФО) Тогда
			МассивИсключаемыхЭлементов.Добавить("СделкаСКлиентом");
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеФормы.Вставить("МассивИсключаемыхЭлементов", МассивИсключаемыхЭлементов);
	
	СписокНаборовДопРеквизитов = Новый СписокЗначений;
	СписокНаборовДопРеквизитов.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Документ_CRM_Интерес);
	ОписаниеФормы.Вставить("СписокНаборовДопРеквизитов", СписокНаборовДопРеквизитов);
	ОписаниеФормы.Вставить("ИмяЭлементаПередКоторымВставлять", "ГруппаСвязанныеСписки");
	
	ОписанияФорм.Вставить(СтрЗаменить("Документ.CRM_Интерес.Форма.ФормаДокументаНовая", ".", "_"), ОписаниеФормы);	
	
	#КонецОбласти
	
	#Область ПартнерыФормаЭлементаНовая
	
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		
		ОписаниеФормы = Новый Структура;
		
		МассивОбластей = новый Массив;
		МассивОбластей.Добавить("ГруппаСведения");
		МассивОбластей.Добавить("ГруппаДополнительно");
		ОписаниеФормы.Вставить("МассивОбластей", МассивОбластей);
		
		МассивИсключаемыхЭлементов = Новый Массив;
		МассивИсключаемыхЭлементов.Добавить("Ссылка");
		МассивИсключаемыхЭлементов.Добавить("ДекорацияАвторДата");
		МассивИсключаемыхЭлементов.Добавить("ГруппаДополнительныеРеквизиты");
		
		Если НЕ ПолучитьФункциональнуюОпцию("ФиксироватьПервичныйИнтерес") Тогда
			МассивИсключаемыхЭлементов.Добавить("ГруппаПервичныйИнтерес");
		КонецЕсли;
		
		ОписаниеФормы.Вставить("МассивИсключаемыхЭлементов", МассивИсключаемыхЭлементов);
		
		СписокНаборовДопРеквизитов = Новый СписокЗначений;
		СписокНаборовДопРеквизитов.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Общие);
		СписокНаборовДопРеквизитов.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Компании_CRM);
		СписокНаборовДопРеквизитов.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_ЧастныеЛица_CRM);
		ОписаниеФормы.Вставить("СписокНаборовДопРеквизитов", СписокНаборовДопРеквизитов);
		ОписаниеФормы.Вставить("ИмяЭлементаПередКоторымВставлять", "ГруппаСвязанныеСписки");
		
		ОписанияФорм.Вставить(СтрЗаменить("Справочник.Партнеры.Форма.CRM_ФормаЭлементаНовая", ".", "_"), ОписаниеФормы);
		
	Иначе
		
		ОписаниеФормы = Новый Структура;
		
		МассивОбластей = новый Массив;
		МассивОбластей.Добавить("ГруппаСведения");
		МассивОбластей.Добавить("ГруппаДополнительно");
		ОписаниеФормы.Вставить("МассивОбластей", МассивОбластей);
		
		МассивИсключаемыхЭлементов = Новый Массив;
		МассивИсключаемыхЭлементов.Добавить("Ссылка");
		МассивИсключаемыхЭлементов.Добавить("ДекорацияАвторДата");
		МассивИсключаемыхЭлементов.Добавить("ГруппаДополнительныеРеквизиты");
		МассивИсключаемыхЭлементов.Добавить("ГруппаОтношения");
		МассивИсключаемыхЭлементов.Добавить("ГруппаОтношенияДополнительно");
		
		Если НЕ ПолучитьФункциональнуюОпцию("ФиксироватьПервичныйИнтерес") Тогда
			МассивИсключаемыхЭлементов.Добавить("ГруппаПервичныйИнтерес");
		КонецЕсли;
		
		ИмяФО = "ИспользоватьГруппыДоступаПартнеров";
		Если НЕ ПолучитьФункциональнуюОпцию(ИмяФО) Тогда
			МассивИсключаемыхЭлементов.Добавить("ГруппаДоступа");
		КонецЕсли;
		
		ОписаниеФормы.Вставить("МассивИсключаемыхЭлементов", МассивИсключаемыхЭлементов);
		
		СписокНаборовДопРеквизитов = Новый СписокЗначений;
		СписокНаборовДопРеквизитов.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Общие);
		СписокНаборовДопРеквизитов.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Компании_CRM);
		СписокНаборовДопРеквизитов.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_ЧастныеЛица_CRM);
		ОписаниеФормы.Вставить("СписокНаборовДопРеквизитов", СписокНаборовДопРеквизитов);
		ОписаниеФормы.Вставить("ИмяЭлементаПередКоторымВставлять", "ГруппаСвязанныеСписки");
		
		ОписанияФорм.Вставить(СтрЗаменить("Справочник.Партнеры.Форма.CRM_Модуль_ФормаЭлементаРеквизитыКонтрагентаНовая", ".", "_"), ОписаниеФормы);
		
	КонецЕсли;		
	
	#КонецОбласти
	
	#Область КонтактныеЛицаФормаЭлементаНовая
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		
		ОписаниеФормы = Новый Структура;
	
		МассивОбластей = новый Массив;
		МассивОбластей.Добавить("ГруппаСведения");
		МассивОбластей.Добавить("ГруппаДополнительно");
		ОписаниеФормы.Вставить("МассивОбластей", МассивОбластей);
		
		МассивИсключаемыхЭлементов = Новый Массив;
		МассивИсключаемыхЭлементов.Добавить("Ссылка");
		МассивИсключаемыхЭлементов.Добавить("ДекорацияАвторДата");
		МассивИсключаемыхЭлементов.Добавить("ГруппаДополнительныеРеквизиты");
		ОписаниеФормы.Вставить("МассивИсключаемыхЭлементов", МассивИсключаемыхЭлементов);
		
		СписокНаборовДопРеквизитов = Новый СписокЗначений;
		СписокНаборовДопРеквизитов.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_КонтактныеЛицаПартнеров);
		ОписаниеФормы.Вставить("СписокНаборовДопРеквизитов", СписокНаборовДопРеквизитов);
		ОписаниеФормы.Вставить("ИмяЭлементаПередКоторымВставлять", "ГруппаСвязанныеСписки");
		
		ОписанияФорм.Вставить(СтрЗаменить("Справочник.КонтактныеЛицаПартнеров.Форма.CRM_ФормаЭлементаНовая", ".", "_"), ОписаниеФормы);	
		
	КонецЕсли;
	
	#КонецОбласти
	
	Для каждого ОписаниеФормы из ОписанияФорм Цикл
		ОписаниеФормы.Значение.МассивИсключаемыхЭлементов.Добавить("ДопНастроитьРасположениеЭлементовФормы");
	КонецЦикла;
	
	Возврат ОписанияФорм;
	
КонецФункции

Процедура РазместитьЭлементыПоНастройке(Форма, ОписаниеФормы = Неопределено) Экспорт
	
	Если ОписаниеФормы = Неопределено Тогда
		ОписаниеНастраиваемыхФорм().Свойство(СтрЗаменить(Форма.ИмяФормы, ".", "_"), ОписаниеФормы);
	КонецЕсли;

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_НастройкиРасположенияЭлементовНаФормах.ИмяЭлемента КАК ИмяЭлемента,
	                      |	CRM_НастройкиРасположенияЭлементовНаФормах.ИмяЭлементаРазмещения КАК ИмяЭлементаРазмещения,
	                      |	CRM_НастройкиРасположенияЭлементовНаФормах.ПорядокРасположения КАК ПорядокРасположения,
	                      |	CRM_НастройкиРасположенияЭлементовНаФормах.ЗаголовокЭлемента КАК ЗаголовокЭлемента
	                      |ИЗ
	                      |	РегистрСведений.CRM_НастройкиРасположенияЭлементовНаФормах КАК CRM_НастройкиРасположенияЭлементовНаФормах
	                      |ГДЕ
	                      |	CRM_НастройкиРасположенияЭлементовНаФормах.ИмяФормы = &ИмяФормы
						  |	И CRM_НастройкиРасположенияЭлементовНаФормах.ИмяЭлемента = CRM_НастройкиРасположенияЭлементовНаФормах.ИмяЭлементаРазмещения
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПорядокРасположения");
	Запрос.УстановитьПараметр("ИмяФормы", Форма.ИмяФормы);
	ВыборкаРазделов = Запрос.Выполнить().Выбрать();
	Если ВыборкаРазделов.Количество()>ОписаниеФормы.МассивОбластей.Количество() Тогда
		ВставлятьРазделыПередИмя = Неопределено;
		ОписаниеФормы.Свойство("ИмяЭлементаПередКоторымВставлять", ВставлятьРазделыПередИмя);
		ВставлятьРазделыПеред = Форма.Элементы.Найти(ВставлятьРазделыПередИмя);
		ГруппаРазделов = Форма.Элементы.Найти("ПользовательскиеРазделыДанных");
		Если ГруппаРазделов = Неопределено Тогда
			Если ВставлятьРазделыПеред = Неопределено Тогда
				ГруппаРазделов = Форма.Элементы.Добавить("ПользовательскиеРазделыДанных", Тип("ГруппаФормы"), );
			Иначе
				ГруппаРазделов = Форма.Элементы.Вставить("ПользовательскиеРазделыДанных", Тип("ГруппаФормы"), ВставлятьРазделыПеред.Родитель, ВставлятьРазделыПеред);
			КонецЕсли;
			ГруппаРазделов.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаРазделов.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппаРазделов.ОтображатьЗаголовок = Ложь;
			ГруппаРазделов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		КонецЕсли;
		Пока ВыборкаРазделов.Следующий() Цикл
			ЭлементРазмещения = Форма.Элементы.Найти(ВыборкаРазделов.ИмяЭлементаРазмещения);
			Если ЭлементРазмещения = Неопределено Тогда
				ЭлементРазмещения = Форма.Элементы.Добавить(ВыборкаРазделов.ИмяЭлементаРазмещения, Тип("ГруппаФормы"), ГруппаРазделов);
				ЭлементРазмещения.Заголовок = ВыборкаРазделов.ЗаголовокЭлемента;
				ЭлементРазмещения.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				ЭлементРазмещения.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				ЭлементРазмещения.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
				ЭлементРазмещения.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
				ЭлементРазмещения.Отображение = ОтображениеОбычнойГруппы.Нет;
				ЭлементРазмещения.ЦветТекстаЗаголовка = ЦветаСтиля.CRM_ЧерныйЦветТекста;
				ЭлементРазмещения.ШрифтЗаголовка = Новый Шрифт(,10,);
				ЭлементРазмещения.Скрыть();
				
				Декорация = Форма.Элементы.Добавить("Декорация" + ВыборкаРазделов.ИмяЭлементаРазмещения, Тип("ДекорацияФормы"), ГруппаРазделов);
				Декорация.Вид = ВидДекорацииФормы.Надпись;
				Декорация.Высота = 1;
				Декорация.Шрифт = Новый Шрифт(,1);
				Декорация.ЦветРамки = Новый Цвет(199, 199, 199);
				Декорация.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.ЧертаСверху, 1);
				Декорация.РастягиватьПоГоризонтали = Истина;
				Декорация.РастягиватьПоВертикали = Ложь;
				Декорация.АвтоМаксимальнаяШирина = Ложь;
			Иначе	
				ЭлементРазмещения.Заголовок = ВыборкаРазделов.ЗаголовокЭлемента;
			КонецЕсли;
			Если ВыборкаРазделов.ПорядокРасположения >= ГруппаРазделов.ПодчиненныеЭлементы.Количество() Тогда
			Иначе
				ПередЭлементом = ГруппаРазделов.ПодчиненныеЭлементы[ВыборкаРазделов.ПорядокРасположения-1];
				Если ЭлементРазмещения <> ПередЭлементом Тогда
					Форма.Элементы.Переместить(ЭлементРазмещения, ГруппаРазделов, ПередЭлементом);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяЭлемента = CRM", "ИмяЭлемента <> CRM");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.ИмяЭлемента) = Тип("Строка") Тогда
			Элемент = Форма.Элементы.Найти(Выборка.ИмяЭлемента);
		Иначе
			ОписаниеДопРеквизитов = Форма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Свойство", Выборка.ИмяЭлемента));
			Если ОписаниеДопРеквизитов.Количество() <> 0 Тогда
				ИмяЭлемента = ОписаниеДопРеквизитов[0].ИмяРеквизитаЗначение;
				Элемент = Форма.Элементы.Найти(ИмяЭлемента);
			Иначе
				Элемент = Неопределено;
			КонецЕсли;
		КонецЕсли;
		ЭлементРазмещения = Форма.Элементы.Найти(Выборка.ИмяЭлементаРазмещения);
		Если Элемент<>Неопределено И ЭлементРазмещения<>Неопределено Тогда
			Если Выборка.ПорядокРасположения >= ЭлементРазмещения.ПодчиненныеЭлементы.Количество() Тогда
				Форма.Элементы.Переместить(Элемент, ЭлементРазмещения);
			Иначе
				ПередЭлементом = ЭлементРазмещения.ПодчиненныеЭлементы[Выборка.ПорядокРасположения-1];
				Если Элемент <> ПередЭлементом Тогда
					Форма.Элементы.Переместить(Элемент, ЭлементРазмещения, ПередЭлементом);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
