
#Область ПрограммныйИнтерфейс

// Функция - Soap push message
//
// Параметры:
//  message	 - ОбъектXDTO - объект типа Message1C 
// 
// Возвращаемое значение:
//  Булево - признак успешности обработки вызова.
//
Функция soapPushMessage(message) Экспорт
	
	сшпВзаимодействиеСАдаптером.ПолучениеСообщения(Перечисления.сшпФорматыСообщений.XML, message);
	
	Возврат Истина;		

КонецФункции

// Функция - Soap push array of message
//
// Параметры:
//  array	 - ОбъектXDTO - массив объектов типа Message1C 
// 
// Возвращаемое значение:
//  Булево - признак успешности обработки вызова.
//
Функция soapPushArrayOfMessage(array) Экспорт
	
	КоличествоОбработанныхСообщений = 0;
	спсСообщения = array.ПолучитьСписок("Message1C");
	
	Если НЕ спсСообщения = Неопределено тогда
		
		Для  каждого xdtoПакет из спсСообщения цикл
			
			сшпВзаимодействиеСАдаптером.ПолучениеСообщения(Перечисления.сшпФорматыСообщений.XML, xdtoПакет);
			КоличествоОбработанныхСообщений = КоличествоОбработанныхСообщений + 1;
		
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат КоличествоОбработанныхСообщений;	

КонецФункции

// Функция - Soap push array of message
//
// Параметры:
//  array	 - ОбъектXDTO - массив объектов типа Message1C 
// 
// Возвращаемое значение:
//  Булево - признак успешности обработки вызова.
//
Функция soapPushMessageBatch(Messages) Экспорт
	
	КоличествоОбработанныхСообщений = 0;
	спсСообщения = Messages.ПолучитьСписок("Message");
	
	Если НЕ спсСообщения = Неопределено тогда
		
		Для  каждого xdtoПакет из спсСообщения цикл
			
			сшпВзаимодействиеСАдаптером.ПолучениеСообщения(Перечисления.сшпФорматыСообщений.XML, xdtoПакет);
			КоличествоОбработанныхСообщений = КоличествоОбработанныхСообщений + 1;
		
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат КоличествоОбработанныхСообщений;	

КонецФункции

// Функция - Отправить сообщение
//
// Параметры:
//  Сообщение	 - Структура - структура повторяющая поля объекта Message1C  
// 
// Возвращаемое значение:
//  Булево - признак успешности обработки вызова.
//
Функция ОтправитьСообщение(wsПрокси, Сообщение) Экспорт
	
	текРезультат = Ложь;
	
	Если wsПрокси = Неопределено тогда
		
		ЗаписьЖурналаРегистрации("Datareon. Взаимодействие с адаптером", УровеньЖурналаРегистрации.Предупреждение,,, "Отсутствует связь с адаптером");
	
	Иначе	
		
		Попытка
			
			СообщениеСШП = сшпОбщегоНазначения.СформироватьСообщениеESB(ФабрикаXDTO, Сообщение);
			
			Если ТипЗнч(Сообщение) = Тип("Массив") Тогда 
				
				wsПрокси.SendMessageBatch(СообщениеСШП);			
			
			Иначе
				
				wsПрокси.SendMessage(СообщениеСШП);			
			
			КонецЕсли;
			
			текРезультат = Истина;
		
		Исключение
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ЗаписьЖурналаРегистрации("Datareon. Взаимодействие с адаптером", УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
			wsПрокси = Неопределено;
		
		КонецПопытки;
	
	КонецЕсли;
	
	Возврат текРезультат;

КонецФункции	

#КонецОбласти