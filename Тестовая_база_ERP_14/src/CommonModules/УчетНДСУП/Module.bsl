
#Область ПрограммныйИнтерфейс

#Область ПолучениеНастроекИПараметровУчетаНДС

// Возвращает настройки учета НДС.
//
// Возвращаемое значение:
// 	 Структура - Параметры учета НДС:
// 	   * ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - Основное налогообложение НДС организации.
// 	   * ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - Основной вид деятельности НДС закупки товаров.
// 	   * РаздельныйУчетНДС - Булево - Признак наличия в ИБ организаций, использующих раздельный учет НДС по налогообложению.
// 	   * ФормироватьОтчетностьПоНДС - Булево - Признак использования заполнения отчетности по НДС.
// 	   * ИспользоватьЗаполнениеРаздела7ДекларацииПоНДС - Булево - Признак использования Раздела 7 в декларации.
// 	   * ПродажиНаЭкспорт - Булево - Применения экспортных операций.
// 	   * ЭкспортНесырьевыхТоваров - Булево - Признак того, что осуществляется экспорт несырьевых товаров.
// 	   * ЭкспортСырьевыхТоваровУслуг - Булево - Признак того, что осуществляется экспорт сырьевых товаров, работ или услуг. 
// 	   * ДатаРазделенияЭкспорта - Дата - Дата начала применения 150-ФЗ, разделение экспорта на сырьевой и несырьевой.
// 	   * ПродажаТоваровОблагаемыхНДСУПокупателя - Булево - Признак того, что осуществляется реализация товаров с обратным обложением НДС. 
// 	                                                       При реализации таких товаров НДС начисляет не продавец, а покупатель (налоговый агент).
// 	   * ПокупкаТоваровОблагаемыхНДСУПокупателя - Булево - Признак того, что осуществляется приобретение товаров с обратным обложением НДС. 
// 	   * ПрименяетсяЕНВД - Булево - Признак наличия в ИБ организаций, применяющих спец. режим налогообложения.
// 	   * ДатаНачалаУчетаНДСПоНаправлениямДеятельности - Дата - Дата, начиная с которой ведется учет входящего НДС в разрезе направлений деятельности.
// 	   * ОсобыйПорядокУчетаНДСПриПроизводствеДЦ - Булево - Признак наличия в ИБ организаций, применяющих особый порядок учета НДС при длительном цикле производства.
//
Функция НастройкиУчета() Экспорт
	
	ПараметрыУчета = Новый Структура();
	ПараметрыУчета.Вставить("ОсновноеНалогообложениеНДСПродажи",             Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ПараметрыУчета.Вставить("ОсновнойВидДеятельностиНДСЗакупки",             Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ПараметрыУчета.Вставить("РаздельныйУчетНДС",                             Ложь);
	ПараметрыУчета.Вставить("ФормироватьОтчетностьПоНДС",                    Ложь);
	ПараметрыУчета.Вставить("ИспользоватьЗаполнениеРаздела7ДекларацииПоНДС", Ложь);
	ПараметрыУчета.Вставить("ПродажиНаЭкспорт",                              Ложь);
	ПараметрыУчета.Вставить("ЭкспортНесырьевыхТоваров",                      Ложь);
	ПараметрыУчета.Вставить("ЭкспортСырьевыхТоваровУслуг",                   Ложь);
	ПараметрыУчета.Вставить("ДатаРазделенияЭкспорта",                        Дата(1,1,1));
	ПараметрыУчета.Вставить("ПродажаТоваровОблагаемыхНДСУПокупателя",        Ложь);
	ПараметрыУчета.Вставить("ПокупкаТоваровОблагаемыхНДСУПокупателя",        Ложь);
	ПараметрыУчета.Вставить("ПрименяетсяЕНВД",                               Ложь);
	ПараметрыУчета.Вставить("ДатаНачалаУчетаНДСПоНаправлениямДеятельности",  Дата(1,1,1));
	ПараметрыУчета.Вставить("ОсобыйПорядокУчетаНДСПриПроизводствеДЦ",        Ложь);
	ПараметрыУчета.Вставить("ДатаОтраженияВозвратовКорректировочнымиСФ",     Дата(1,1,1));
	
	//++ Локализация
	ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ПараметрыУчета.ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	ПараметрыУчета.РаздельныйУчетНДС = ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению");
	ПараметрыУчета.ФормироватьОтчетностьПоНДС = ПолучитьФункциональнуюОпцию("ФормироватьОтчетностьПоНДС");
	ПараметрыУчета.ИспользоватьЗаполнениеРаздела7ДекларацииПоНДС = ПолучитьФункциональнуюОпцию("ИспользоватьЗаполнениеРаздела7ДекларацииПоНДС");
	ПараметрыУчета.ЭкспортНесырьевыхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьПродажиНаЭкспортНесырьевыхТоваров");
	ПараметрыУчета.ЭкспортСырьевыхТоваровУслуг = ПолучитьФункциональнуюОпцию("ИспользоватьПродажиНаЭкспортСырьевыхТоваровУслуг");
	ПараметрыУчета.ПродажиНаЭкспорт = ПараметрыУчета.ЭкспортНесырьевыхТоваров Или ПараметрыУчета.ЭкспортСырьевыхТоваровУслуг;
	ПараметрыУчета.ДатаРазделенияЭкспорта = Дата("20160701");
	ПараметрыУчета.ПродажаТоваровОблагаемыхНДСУПокупателя = ПолучитьФункциональнуюОпцию("ПродажаТоваровОблагаемыхНДСУПокупателя");
	ПараметрыУчета.ПокупкаТоваровОблагаемыхНДСУПокупателя = ПолучитьФункциональнуюОпцию("ПокупкаТоваровОблагаемыхНДСУПокупателя");
	ПараметрыУчета.ПрименяетсяЕНВД = ПолучитьФункциональнуюОпцию("ПлательщикЕНВД");
	ПараметрыУчета.ДатаНачалаУчетаНДСПоНаправлениямДеятельности = Константы.ДатаНачалаУчетаНДСПоНаправлениямДеятельности.Получить();
	ПараметрыУчета.ДатаОтраженияВозвратовКорректировочнымиСФ = УчетНДСУПСлужебный.ДатаОтраженияВозвратовКорректировочнымиСФ();
	//++ НЕ УТ
	ПараметрыУчета.ОсобыйПорядокУчетаНДСПриПроизводствеДЦ = ПолучитьФункциональнуюОпцию("ИспользоватьОсобыйПорядокУчетаНДСПриПроизводствеДЦ");
	//-- НЕ УТ
	//-- Локализация
	
	Возврат ПараметрыУчета;
	
КонецФункции

// Возвращает параметры учета НДС, установленные для организации в заданном периоде.
//
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, для которой необходимо получить параметры.
// 	Период - Дата - Дата, на которую необходимо получить параметры учета.
// 	Склад - СправочникСсылка.Склады - Необязательный параметр. Склад, для которого необходимо определить применение EНВД.
//
// Возвращаемое значение:
// 	 Структура - Параметры учета НДС по организации
// 		* ОсновноеНалогообложениеНДСПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - Основное налогообложение НДС организации.
// 		* ОсновнойВидДеятельностиНДСЗакупки - ПеречислениеСсылка.ТипыНалогообложенияНДС - Основной вид деятельности НДС закупки товаров.
// 		* НалогообложениеНДСРозничнойПродажи - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС розничной торговли. 
// 		                                                                                   Значение получается с учетом переданного склада.
// 		* РаздельныйУчетНДС - Булево - Признак использование раздельного учета НДС.
// 		* ПрименяетсяЕНВД - Булево - Признак того что в организации применяется ЕНВД. Если передан параметр Склад, то проверка выполняется для указанного склада.
// 		* ОсобыйПорядокУчетаНДСПриПроизводствеДЦ - Булево - Признак того, что организация учитывает НДС относящийся к производству продукции с 
// 							длительным циклом производства особым образом.
// 		* ВариантУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую - ПеречислениеСсылка.ВариантыУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую 
// 		                    - Определяет порядок учета НДС при изменении деятельности на необлагаемую.
// 		* СтатьяРасходов_НеОблагаетсяНДС - ПланыВидовХарактеристик.СтатьиРасходов - Статья списания НДС при изменении деятельности на необлагаемую НДС.
// 		* АналитикаРасходов_НеОблагаетсяНДС - Характеристика.СтатьиРасходов - Аналитика списания НДС при изменении деятельности на необлагаемую НДС.
// 		* СтатьяРасходов_ОблагаетсяЕНВД - ПланыВидовХарактеристик.СтатьиРасходов - Статья списания НДС при изменении деятельности на облагаемую ЕНВД.
// 		* АналитикаРасходов_ОблагаетсяЕНВД - Характеристика.СтатьиРасходов - Аналитика списания НДС при изменении деятельности на облагаемую ЕНВД.
//
Функция ПараметрыУчетаПоОрганизации(Знач Организация, Знач Дата, Знач Склад = Неопределено) Экспорт
	
	ПараметрыУчета = Новый Структура();
	ПараметрыУчета.Вставить("ОсновноеНалогообложениеНДСПродажи",  Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ПараметрыУчета.Вставить("ОсновнойВидДеятельностиНДСЗакупки",  Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ПараметрыУчета.Вставить("НалогообложениеНДСРозничнойПродажи", Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ПараметрыУчета.Вставить("РаздельныйУчетНДС", Ложь);
	ПараметрыУчета.Вставить("ПрименяетсяУСН", Ложь);
	ПараметрыУчета.Вставить("ПрименяетсяЕНВД", Ложь);
	ПараметрыУчета.Вставить("ОсобыйПорядокУчетаНДСПриПроизводствеДЦ", Ложь);
	ПараметрыУчета.Вставить("ВариантУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую", Перечисления.ВариантыУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую.ПустаяСсылка());
	ПараметрыУчета.Вставить("СтатьяРасходов_НеОблагаетсяНДС", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ПараметрыУчета.Вставить("АналитикаРасходов_НеОблагаетсяНДС", Неопределено);
	ПараметрыУчета.Вставить("СтатьяРасходов_ОблагаетсяЕНВД", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ПараметрыУчета.Вставить("АналитикаРасходов_ОблагаетсяЕНВД", Неопределено);
	
	//++ Локализация
	ПараметрыУчета = УчетНДСУПСлужебныйПовтИсп.ПолучитьПараметрыУчетаОрганизации(
		ПараметрыУчета,
		Организация,
		НачалоМесяца(?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса())),
		Склад);
	//-- Локализация
	
	Возврат ПараметрыУчета;
	
КонецФункции

#КонецОбласти

#Область УчетВходящегоНДС

#Область ЗаполнениеНалогообложенияНДСЗакупки

// Проверяет соответствие указанного в документе закупки Налогообложения НДС операции документа. 
// Если переданное значение не заполнено или некорректное, 
// то оно заполняется значением из договора закупки или значением по умолчанию.
//
// Параметры:
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложения НДС документа закупки.
// 	ПараметрыЗаполнения - Структура - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки().
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьНалогообложениеНДСЗакупки(НалогообложениеНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	//++ Локализация
	
	ИзмененныеПараметры = УчетНДСУПСлужебный.ИзмененныеПараметры("ПараметрыЗаполненияНалогообложенияНДСЗакупки", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияНалогообложенияНДСЗакупки", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	
	ТолькоЕслиПустоеИлиНекорректное = Истина;
	Если ИзмененныеПараметры.Свойство("Договор") Тогда
		ТолькоЕслиПустоеИлиНекорректное = Ложь;
	КонецЕсли;
	
	МассивДоступных = УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСЗакупки(ПараметрыЗаполнения);
	
	Если ТолькоЕслиПустоеИлиНекорректное Тогда
		Если ЗначениеЗаполнено(НалогообложениеНДС) 
		     И МассивДоступных.Найти(НалогообложениеНДС) <> Неопределено Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Договор) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор
		|	И НЕ ДоговорыКонтрагентов.НалогообложениеНДСОпределяетсяВДокументе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорыМеждуОрганизациями.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	ДоговорыМеждуОрганизациями.Ссылка = &Договор
		|	И НЕ ДоговорыМеждуОрганизациями.НалогообложениеНДСОпределяетсяВДокументе
		|";
		Запрос.УстановитьПараметр("Договор", ПараметрыЗаполнения.Договор);
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Если Выборка.Следующий() Тогда
			НалогообложениеНДС = Выборка.НалогообложениеНДС;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НалогообложениеНДС) ИЛИ МассивДоступных.Найти(НалогообложениеНДС) = Неопределено Тогда
		Если МассивДоступных.Количество() = 1 Тогда
			НалогообложениеНДС = МассивДоступных[0];
		Иначе
			НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		КонецЕсли;
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Заполняет список доступных для выбора значений налогообложения НДС исходя из операции документа.
// 
// Параметры:
// 	ЭлементНалогообложениеНДС - ПолеФормы - Элемент формы, в котором указывается налогообложение НДС.
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипНалогообложенияНДС - Выбранное в документе значение налогообложения НДС.
// 	ПараметрыЗаполнения - Структура - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСЗакупки().
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьСписокВыбораНалогообложенияНДСЗакупки(ЭлементНалогообложениеНДС, НалогообложениеНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	//++ Локализация
	Если ПараметрыЗаполнения.ВозвратТоваровКомитенту
		 ИЛИ ПараметрыЗаполнения.ПриемНаКомиссию Тогда
		ЭлементНалогообложениеНДС.Заголовок = НСтр("ru = 'Налогообложение комитента';
													|en = 'Consignor taxation'");
	Иначе
		ЭлементНалогообложениеНДС.Заголовок = НСтр("ru = 'Налогообложение';
													|en = 'Taxation'");
	КонецЕсли;
	
	Представления = Новый Соответствие();
	Если ПараметрыЗаполнения.ВозвратТоваровКомитенту ИЛИ ПараметрыЗаполнения.ПриемНаКомиссию Тогда
		ПредставлениеПродажаОблагаетсяНДС = НСтр("ru = 'Продажа облагается НДС';
												|en = 'Sale is subject to VAT'");
	ИначеЕсли ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
		ПредставлениеПродажаОблагаетсяНДС = НСтр("ru = 'Возврат товаров облагается НДС';
												|en = 'Goods return is subject to VAT'");
	Иначе
		ПредставлениеПродажаОблагаетсяНДС = НСтр("ru = 'Закупка облагается НДС';
												|en = 'Purchase is subject to VAT'")
	КонецЕсли;
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС,     ПредставлениеПродажаОблагаетсяНДС);
	
	Если ПараметрыЗаполнения.ВозвратТоваровКомитенту ИЛИ ПараметрыЗаполнения.ПриемНаКомиссию Тогда
		ПредставлениеПродажаНеОблагаетсяНДС = НСтр("ru = 'Продажа не облагается НДС';
													|en = 'Sale is not subject to VAT'");
	ИначеЕсли ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
		ПредставлениеПродажаНеОблагаетсяНДС = НСтр("ru = 'Возврат товаров не облагается НДС';
													|en = 'Goods return is exempt from VAT'");
	Иначе
		ПредставлениеПродажаНеОблагаетсяНДС = НСтр("ru = 'Закупка не облагается НДС';
													|en = 'Purchase is not subject to VAT'")
	КонецЕсли;
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС,   ПредставлениеПродажаНеОблагаетсяНДС);
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС,      НСтр("ru = 'Налоговый агент по НДС';
																								|en = 'VAT tax agent'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД,    НСтр("ru = 'Закупка облагается ЕНВД';
																								|en = 'The purchase is subject to UTII'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя, НСтр("ru = 'Облагается НДС у покупателя';
																								|en = 'Subject to VAT at customer'"));

	МассивДоступных = УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСЗакупки(ПараметрыЗаполнения);
	
	ЭлементНалогообложениеНДС.СписокВыбора.Очистить();
	Для каждого Элемент Из МассивДоступных Цикл
		ЭлементНалогообложениеНДС.СписокВыбора.Добавить(Элемент, Представления[Элемент]);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(НалогообложениеНДС) И ЭлементНалогообложениеНДС.СписокВыбора.НайтиПоЗначению(НалогообложениеНДС) = Неопределено Тогда
		ЭлементНалогообложениеНДС.СписокВыбора.Добавить(НалогообложениеНДС, Представления[НалогообложениеНДС]);
	КонецЕсли;
	
	ЭлементНалогообложениеНДС.Видимость = (ЭлементНалогообложениеНДС.СписокВыбора.Количество() <> 1); 
	
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияНалогообложенияНДСЗакупки", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	
	//-- Локализация
	
КонецПроцедуры

// Проверяет возможность проведения документа с указанным налогообложением НДС. 
//
// Параметры:
//	Объект - ДокументОбъект - Данные документа закупки.
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложения НДС документа закупки.
// 	ПараметрыПроверки - Структура - См. УчетНДСУП.ПараметрыПроверкиЗаполнениеДокументаЗакупкиПоНалогообложениюНДС().
// 	Отказ - Булево - Признак отказа проведения документа.
//
Процедура ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС(Объект, НалогообложениеНДС, ПараметрыПроверки, Отказ) Экспорт
	
	//++ Локализация
	
	Если НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НомерСтроки,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки
	|ИЗ
	|	ТабличнаяЧасть КАК ТабличнаяЧасть
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТабличнаяЧасть.СтатьяРасходов = СтатьиРасходов.Ссылка
	|		И СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|ГДЕ
	|	&НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяРасходов", ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаРасходов", ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТабличнаяЧасть", Объект[ПараметрыПроверки.ИмяТабличнойЧасти]);
	Запрос.УстановитьПараметр("НалогообложениеНДС", НалогообложениеНДС);
	
	ШаблонСообщения = НСтр("ru = 'В строке ""%1"" выбрана статья расходов с вариантом распределения ""На внеоборотные активы"". Покупка внеоборотных активов с налогообложением ""Налоговый агент по НДС"" не поддерживается.';
							|en = 'Expense item with the ""To capital assets"" allocation option is selected in line %1. Purchase of capital assets with the ""VAT tax agent"" taxation is not supported.'");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыПроверки.ИмяТабличнойЧасти, Выборка.НомерСтроки, "СтатьяРасходов");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения, 
			Неопределено, 
			Поле, 
			"Объект",
			Отказ);
		
	КонецЦикла;
	
	//-- Локализация
	
КонецПроцедуры

// Возвращает структуру параметров для проверки заполнения документа закупки по налогообложению НДС.
//
// Возвращаемое значение:
//	ПараметрыПроверки - Структура - Структура с полями
//	         * ИмяТабличнойЧасти - Строка - Имя табличной части закупаемых ценностей.
//	         * ИмяРеквизитаСтатьяРасходов - Строка - Имя реквизита табличной части, в которой указывается статья отражения расходов.
//	         * ИмяРеквизитаАналитикаРасходов - Строка - Имя реквизита табличной части, в которой указывается аналитика отражения расходов.
//
Функция ПараметрыПроверкиЗаполнениеДокументаПоНалогообложениюНДСЗакупки() Экспорт
	
	ПараметрыПроверки = Новый Структура();
	ПараметрыПроверки.Вставить("ИмяТабличнойЧасти",             "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаСтатьяРасходов",    "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаАналитикаРасходов", "");
	
	Возврат ПараметрыПроверки;
	
КонецФункции

// Устанавливаем условное оформление для ставки НДС, суммы НДС, суммы с НДС по налогообложению закупки.
//
// Параметры:
//  Форма - Форма - Содержит данную форму
//  ИмяПоляВводаСтавкиНДС - Строка - Наименование элемента формы, содержащего ставку НДС,
//                                   если оно отличается от "ТоварыСтавкаНДС"
//  ИмяПоляВводаСуммыНДС - Строка - Наименование элемента формы, содержащего сумму НДС,
//                                  если оно отличается от "ТоварыСуммаНДС"
//  ИмяПоляВводаСуммыСНДС - Строка - Наименование элемента формы, содержащего сумму с НДС,
//                                   если оно отличается от "ТоварыСуммаСНДС"
//
Процедура УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки(Форма,
	                                          ИмяПоляВводаСтавкиНДС = "ТоварыСтавкаНДС",
	                                          ИмяПоляВводаСуммыНДС  = "ТоварыСуммаНДС",
	                                          ИмяПоляВводаСуммыСНДС = "ТоварыСуммаСНДС") Экспорт
	//++ Локализация
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	//
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСтавкиНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыСНДС].Имя);
	
	СписокНалогообложенийБезНДС = Новый СписокЗначений;
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокНалогообложенийБезНДС;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Ожидаем ответа разработчиков платформы по запросу 30164862
	Если Не (ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() ИЛИ ОбщегоНазначенияКлиентСервер.ЭтоВебКлиентПодMacOS()) Тогда
		СтавкиНДС = Новый Соответствие;
		СтавкиНДС.Вставить(Перечисления.СтавкиНДС.НДС18,		НСтр("ru = '4%';
																	|en = '4%'"));
		СтавкиНДС.Вставить(Перечисления.СтавкиНДС.НДС18_118,	НСтр("ru = '4/104';
																	|en = '4/104'"));
		СтавкиНДС.Вставить(Перечисления.СтавкиНДС.НДС10,		НСтр("ru = '2%';
																	|en = '2%'"));
		СтавкиНДС.Вставить(Перечисления.СтавкиНДС.НДС10_110,	НСтр("ru = '2/102';
																	|en = '2/102'"));
		
		ЭлементФормыСтавкаНДС = Форма.Элементы.Найти(ИмяПоляВводаСтавкиНДС);
		
		Для Каждого СтавкаНДС Из СтавкиНДС Цикл
			
			Элемент = УсловноеОформление.Элементы.Добавить();
			
			ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяПоляВводаСтавкиНДС);
			
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ЭлементФормыСтавкаНДС.ПутьКДанным);
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = СтавкаНДС.Ключ;
			
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			// на вебклиенте, 8.3.12.1567 такой путь к данным не является валидным 
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Контрагент.НДСпоСтавкам4и2");
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Истина;
			
			Элемент.Оформление.УстановитьЗначениеПараметра("Текст", СтавкаНДС.Значение);
			
		КонецЦикла;
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеВидаДеятельностиНДС

// Заполняет вид деятельности раздельного учета НДС по переданным параметрам заполнения.
// Параметры:
// 	ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Реквизит документа приобретения.
// 	ПараметрыЗаполнения - Структура - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС().
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьВидДеятельностиНДС(ВидДеятельностиНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	//++ Локализация
	Если ПараметрыЗаполнения.Организация = Справочники.Организации.ПустаяСсылка() Тогда
		// Организация для объекта задается, но не указана.
		// В этом случае нет смысла заполнять/проверять вид деятельности НДС, 
		// т.к. нет возможности получить учетную политику.
		Возврат;
	КонецЕсли;
	
	ИзмененныеПараметры = УчетНДСУПСлужебный.ИзмененныеПараметры("ПараметрыЗаполненияВидаДеятельностиНДС", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияВидаДеятельностиНДС", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	
	ТолькоЕслиПустоеИлиНекорректное = Истина;
	Если ИзмененныеПараметры.Свойство("Договор")
		ИЛИ ИзмененныеПараметры.Свойство("НаправлениеДеятельности")
		ИЛИ ИзмененныеПараметры.Свойство("Организация")
		ИЛИ ИзмененныеПараметры.Свойство("Склад") Тогда
		ТолькоЕслиПустоеИлиНекорректное = Ложь;
	КонецЕсли;
	
	ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
				ПараметрыЗаполнения.Организация,
				ПараметрыЗаполнения.Дата,
				ПараметрыЗаполнения.Склад);
	
	МассивДоступных = УчетНДСУПСлужебный.ДоступныеВидыДеятельностиНДС(ПараметрыЗаполнения);
	
	Если ТолькоЕслиПустоеИлиНекорректное Тогда
		Если МассивДоступных.Найти(ВидДеятельностиНДС) <> Неопределено Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполненоПоДоговоруИлиНапралениюДеятельности = Ложь;
	Если (ИзмененныеПараметры.Свойство("Договор") 
			И ЗначениеЗаполнено(ПараметрыЗаполнения.Договор))
		ИЛИ (ИзмененныеПараметры.Свойство("НаправлениеДеятельности") 
			И ЗначениеЗаполнено(ПараметрыЗаполнения.НаправлениеДеятельности))  Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	1 КАК Приоритет,
		|	ДоговорыКонтрагентов.ЗакупкаПодДеятельность КАК ВидДеятельностиНДС
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор
		|	И НЕ ДоговорыКонтрагентов.ЗакупкаПодДеятельностьОпределяетсяВДокументе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1 КАК Приоритет,
		|	ДоговорыМеждуОрганизациями.ЗакупкаПодДеятельность КАК ВидДеятельностиНДС
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	ДоговорыМеждуОрганизациями.Ссылка = &Договор
		|	И НЕ ДоговорыМеждуОрганизациями.ЗакупкаПодДеятельностьОпределяетсяВДокументе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2 КАК Приоритет,
		|	НаправленияДеятельности.НалогообложениеНДС КАК ВидДеятельностиНДС
		|ИЗ
		|	Справочник.НаправленияДеятельности КАК НаправленияДеятельности
		|ГДЕ
		|	НаправленияДеятельности.Ссылка = &НаправлениеДеятельности
		|	И НЕ НаправленияДеятельности.НалогообложениеНДСОпределяетсяВДокументе
		|	И (НаправленияДеятельности.УчетДоходов
		|		ИЛИ НаправленияДеятельности.УчетЗатрат)
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
		Запрос.УстановитьПараметр("Договор", ПараметрыЗаполнения.Договор);
		Запрос.УстановитьПараметр("НаправлениеДеятельности", ПараметрыЗаполнения.НаправлениеДеятельности);
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Если Выборка.Следующий() Тогда
			ВидДеятельностиНДС = Выборка.ВидДеятельностиНДС;
			ЗаполненоПоДоговоруИлиНапралениюДеятельности = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗаполненоПоДоговоруИлиНапралениюДеятельности
			И (ИзмененныеПараметры.Свойство("Организация") И ЗначениеЗаполнено(ПараметрыЗаполнения.Организация))
				ИЛИ (ИзмененныеПараметры.Свойство("Склад") И ЗначениеЗаполнено(ПараметрыЗаполнения.Склад)) Тогда
		Если ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
			ИЛИ ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
			ИЛИ ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			Если ПараметрыЗаполнения.ПриобретениеТоваров 
				И ПараметрыУчетаПоОрганизации.ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
				ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию;
			ИначеЕсли (ПараметрыЗаполнения.ПриобретениеТоваров
						ИЛИ ПараметрыЗаполнения.ДвижениеТоваровНаСкладах
						ИЛИ ПараметрыЗаполнения.СборкаРазборкаТоваров)
					И ПараметрыУчетаПоОрганизации.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД;
			Иначе
				ВидДеятельностиНДС = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
	
	Если МассивДоступных.Найти(ВидДеятельностиНДС) = Неопределено Тогда
		Если МассивДоступных.Найти(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка()) <> Неопределено Тогда
			ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
		Иначе
			Если ПараметрыЗаполнения.ПриобретениеТоваров 
				И ПараметрыУчетаПоОрганизации.ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
				ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию;
			ИначеЕсли (ПараметрыЗаполнения.ПриобретениеТоваров
						ИЛИ ПараметрыЗаполнения.ДвижениеТоваровНаСкладах
						ИЛИ ПараметрыЗаполнения.СборкаРазборкаТоваров)
					И ПараметрыУчетаПоОрганизации.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД;
			Иначе
				ВидДеятельностиНДС = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Заполняет список доступных для выбора видов деятельности раздельного учета НДС исходя учетной политики и операций документа.
//
// Параметры:
// 	ЭлементВидДеятельностиНДС - ПолеФормы - Элемент формы, в котором указывается вид деятельности НДС.
// 	ВидДеятельностиНДС - ПеречислениеСсылка.ТипНалогообложенияНДС - Выбранное в документе значение вида деятельности раздельного учета НДС.
// 	ПараметрыЗаполнения - Структура - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС().
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьСписокВыбораВидаДеятельностиНДС(ЭлементВидДеятельностиНДС, ВидДеятельностиНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	//++ Локализация
	
	Представления = Новый Соответствие();
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка(),              НСтр("ru = 'Без изменений';
																								|en = 'Without changes'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС,        НСтр("ru = 'Облагаемую НДС';
																								|en = 'Subject to VAT'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС,      НСтр("ru = 'Не облагаемую НДС';
																								|en = 'VAT free'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД,       НСтр("ru = 'Облагаемую ЕНВД';
																								|en = 'Subject to unified tax on imputed income'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров,    НСтр("ru = 'Экспорт несырьевых товаров';
																								|en = 'Non-resource goods export'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг, НСтр("ru = 'Экспорт сырьевых товаров, работ';
																								|en = 'Export of commodity goods or work'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт,            НСтр("ru = 'Экспорт';
																								|en = 'Export'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ,             НСтр("ru = 'Производство с длит. циклом';
																								|en = 'Production with long cycle'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением,  НСтр("ru = 'Определяется распределением';
																								|en = 'Determined by allocation'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию,         НСтр("ru = 'Определяется использованием ОС/НМА';
																								|en = 'Determined by FA/IA usage'"));
	
	МассивДоступных = УчетНДСУПСлужебный.ДоступныеВидыДеятельностиНДС(ПараметрыЗаполнения);
	
	ЭлементВидДеятельностиНДС.СписокВыбора.Очистить();
	
	Для каждого Элемент Из МассивДоступных Цикл
		ЭлементВидДеятельностиНДС.СписокВыбора.Добавить(Элемент, Представления[Элемент]);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ВидДеятельностиНДС) И ЭлементВидДеятельностиНДС.СписокВыбора.НайтиПоЗначению(ВидДеятельностиНДС) = Неопределено Тогда
		ЭлементВидДеятельностиНДС.СписокВыбора.Добавить(ВидДеятельностиНДС, Представления[ВидДеятельностиНДС]);
	КонецЕсли;
	
	ЭлементВидДеятельностиНДС.Видимость = (ЭлементВидДеятельностиНДС.СписокВыбора.Количество() <> 1);
	
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияВидаДеятельностиНДС", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	//-- Локализация
	
КонецПроцедуры

// Проверяет возможность проведения документа с указанным видом деятельности раздельного учета НДС.
//
// Параметры:
// 	Объект - ДокументОбъект - Данные документа.
// 	ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС.
// 	ПараметрыПроверки - Структура - См. УчетНДСУП.ПараметрыПроверкиЗаполнениеДокументаПоВидуДеятельностиНДС()
// 	Отказ - Булево - Признак отказа проведения документа.
//
// Проверяет возможность проведения документа с указанным видом деятельности раздельного учета НДС.
//
// Параметры:
// 	Объект - ДокументОбъект - Данные документа.
// 	ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС.
// 	ПараметрыПроверки - Структура - См. УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС()
// 	Отказ - Булево - Признак отказа проведения документа.
//
Процедура ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(Объект, ВидДеятельностиНДС, ПараметрыПроверки, Отказ) Экспорт
	
	//++ Локализация
	
	Если ВидДеятельностиНДС <> Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию 
		И ВидДеятельностиНДС <> Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПроверки.ИмяТабличнойЧасти = "" Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов = "" И ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки
	|ИЗ
	|	ТабличнаяЧасть КАК ТабличнаяЧасть
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТабличнаяЧасть.СтатьяРасходов = СтатьиРасходов.Ссылка
	|ГДЕ
	|	&ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|	И СтатьиРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	И СтатьиРасходов.ВариантРаспределенияРасходовРегл В 
	|		(ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности),
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов))
	|;
	//++ НЕ УТ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки
	|ИЗ
	|	ТабличнаяЧасть КАК ТабличнаяЧасть
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТабличнаяЧасть.СтатьяРасходов = СтатьиРасходов.Ссылка
	|ГДЕ
	|	&ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|	И НЕ СтатьиРасходов.ВидЦенностиНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|;
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки
	|ИЗ
	|	ТабличнаяЧасть КАК ТабличнаяЧасть
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.СтатьяАктивовПассивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И НЕ ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.АналитикаАктивовПассивов) В (
	|			ТИП(Справочник.ОбъектыЭксплуатации),
	|			ТИП(Справочник.НематериальныеАктивы))
	//-- НЕ УТ
	|";
	
	ИмяРеквизитаСтатьяРасходов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов), ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяРасходов",    ИмяРеквизитаСтатьяРасходов);
	ИмяРеквизитаАналитикаРасходов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов), ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаРасходов", ИмяРеквизитаАналитикаРасходов);
	
	ИмяРеквизитаСтатьяАктивовПассивов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов), ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяАктивовПассивов",    ИмяРеквизитаСтатьяАктивовПассивов);
	ИмяРеквизитаАналитикаАктивовПассивов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов), ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаАктивовПассивов", ИмяРеквизитаАналитикаАктивовПассивов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТабличнаяЧасть", Объект[ПараметрыПроверки.ИмяТабличнойЧасти]);
	Запрос.УстановитьПараметр("ВидДеятельностиНДС", ВидДеятельностиНДС);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		ШаблонСообщения = НСтр("ru = 'В организации используется учет НДС по фактическому использованию. 
		                           |Выбранная в строке %1 статья расходов должна иметь порядок раздельного учета НДС ""НДС распределяется пропорционально выручке""';
		                           |en = 'VAT accounting by actual usage is used in the company. 
		                           |Expense item selected in line %1 should have separate VAT accounting procedure ""VAT is allocated in proportion to revenue""'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыПроверки.ИмяТабличнойЧасти, Выборка.НомерСтроки, ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения, 
			Неопределено, 
			Поле, 
			"Объект",
			Отказ);
	КонецЦикла;
	
	//++ НЕ УТ
	Выборка = РезультатыЗапроса[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		ШаблонСообщения = НСтр("ru = 'Вид деятельности НДС ""Определяется использованием ОС/НМА"".
									 |Выбранная в строке %1 статья расходов должна иметь вариант распределения ""На внеоборотные активы"" и аналитику ""ОС"" или ""НМА""';
									 |en = 'VAT activity type ""Determined by FA/IA usage"".
									 |Expense item selected in line %1 should have allocation option ""To capital assets"" and dimension ""FA"" or ""IA""'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыПроверки.ИмяТабличнойЧасти, Выборка.НомерСтроки, ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения, 
			Неопределено, 
			Поле, 
			"Объект",
			Отказ);
	КонецЦикла;
	
	Выборка = РезультатыЗапроса[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		ШаблонСообщения = НСтр("ru = 'Вид деятельности НДС ""Определяется использованием ОС/НМА"".
		                             |Выбранная в строке %1 статья прочих активов должна иметь аналитику ""Основные средства"" или ""Нематериальные активы"".';
		                             |en = 'VAT activity type ""Determined by FA/IA usage"".
		                             |Other asset item selected in line %1 should have dimension ""Fixed assets"" or ""Intangible assets"".'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыПроверки.ИмяТабличнойЧасти, Выборка.НомерСтроки, ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения, 
			Неопределено, 
			Поле, 
			"Объект",
			Отказ);
	КонецЦикла;
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// Возвращает структуру параметров для проверки заполнения документа по виду деятельности раздельного учета НДС.
//
// Возвращаемое значение:
// ПараметрыПроверки - Структура - Структура с ключами
// 			* ИмяТабличнойЧасти - Строка - Имя табличной части, в которой указываются ценности.
// 			* ИмяРеквизитаСтатьяРасходов - Строка - Имя реквизита табличной части, в которой указывается статья отражения расходов (необязательный).
// 			* ИмяРеквизитаАналитикаРасходов - Строка - Имя реквизита табличной части, в которой указывается аналитика отражения расходов (необязательный).
// 			* ИмяРеквизитаСтатьяАктивовПассивов - Строка - Имя реквизита табличной части, в которой указывается статья отражения прочих активов (необязательный).
// 			* ИмяРеквизитаАналитикаАктивовПассивов Строка - Имя реквизита табличной части, в которой указывается аналитика отражения прочих активов (необязательный).
//
Функция ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС() Экспорт

	ПараметрыПроверки = Новый Структура();
	ПараметрыПроверки.Вставить("ИмяТабличнойЧасти", "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаСтатьяРасходов", "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаАналитикаРасходов", "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаСтатьяАктивовПассивов", "");
	ПараметрыПроверки.Вставить("ИмяРеквизитаАналитикаАктивовПассивов", "");
	
	Возврат ПараметрыПроверки;
	
КонецФункции

#КонецОбласти

#Область РегистрацияСчетовФактурПолученных

// Возвращает коллекцию свойств, описывающих счета-фактуры/заявления о ввозе товаров, зарегистрированные на основании документа закупки или возврата
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных()
// 
// Возвращаемое значение:
// 	Результат - Структура - Структура с ключами
//		* Представление - Строка, ФорматированнаяСтрока - описание документов, зарегистрированных на основании документа закупки или возврата.
//		* СчетаФактуры - Массив - ДокументСсылка.СчетФактураПолученный, ДокументСсылка.СчетФактураПолученныйНалоговыйАгент, ДокументСсылка.ЗаявлениеОВвозеТоваров - ссылки на счет-фактуру/заявление о ввозе товаров.
//		* ДокументПоОснованиюТребуется - Булево - признак необходимости ввода хотя бы одного документа по основанию
//		* ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию - Булево - признак наличия права для интерактивного добавления документа по основанию
Функция СчетаФактурыПолученныеНаОсновании(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", "");
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	Результат.Вставить("ДокументПоОснованиюТребуется",  Ложь);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию",  Ложь);
	
	//++ Локализация
	Если ПараметрыРегистрации.ВвозТоваровИзТаможенногоСоюза Тогда
		Результат = УчетНДСУПСлужебный.ЗаявленияОВвозеТоваровПоДокументуЗакупки(ПараметрыРегистрации);
	Иначе
		Результат = УчетНДСУПСлужебный.СчетаФактурыПолученныеПоДокументуЗакупки(ПараметрыРегистрации);
	КонецЕсли;
	//-- Локализация
	
	Возврат Результат;

КонецФункции

// Вызывается в обработчике ПередЗаписью() документа закупки.
// Отменяет проведение счета-фактуры, если отменяется проведение документа закупки или его реквизиты не соответствуют параметрам регистрации.
// Помечает на удаление счета-фактуры, если помечается на удаление документ закупки.
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСевер.ПараметрыРегистрацииСчетовФактурПолученных().
// 	РежимЗаписи - РежимЗаписиДокумента - Режим записи документа.
// 	ПометкаУдаления - Булево - Пометка удаления документа закупки.
// 	Проведен - Булево - Пометка проведения документа.
//
Процедура АктуализироватьСчетаФактурыПолученныеПередЗаписью(ПараметрыРегистрации, Знач РежимЗаписи, Знач ПометкаУдаления, Знач Проведен) Экспорт
	
	//++ Локализация
	СчетФактураНеТребуется = УчетНДСУПСлужебный.СчетФактураПолученныйНеТребуется(ПараметрыРегистрации);
	
	ДокументПроведен = Ложь;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ДокументПроведен = Истина;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись И Проведен Тогда
		ДокументПроведен = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументЗакупки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументЗакупки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	СчетаФактуры.Ссылка.Проведен КАК Проведен,
	|	СчетаФактуры.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	КОЛИЧЕСТВО(ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|	ПО 
	|		СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	СчетаФактуры.Ссылка.Проведен КАК Проведен,
	|	СчетаФактуры.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	КОЛИЧЕСТВО(ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК ТаблицаОснований
	|	ПО 
	|		СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка
	|";
	Запрос.УстановитьПараметр("ДокументЗакупки", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПометитьНаУдаление = Ложь;
		ОтменитьПроведение = Ложь;
		
		// Проверка типа счета-фактуры по налогообложению.
		Если (ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный") 
				И ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
			 ИЛИ (ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент")
				И ПараметрыРегистрации.НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)Тогда
			ПометитьНаУдаление = Истина;
		КонецЕсли;
		
		// Синхронизация проведения и пометки удаления.
		Если НЕ Выборка.ПометкаУдаления
			 И (ПометкаУдаления
			    Или Выборка.Организация <> ПараметрыРегистрации.Организация
			    Или СчетФактураНеТребуется) Тогда
			ПометитьНаУдаление = Истина;
		ИначеЕсли Выборка.Проведен И НЕ ДокументПроведен Тогда
			ОтменитьПроведение = Истина;
		КонецЕсли;
		
		Если ПометитьНаУдаление Или ОтменитьПроведение Тогда
			ИмяДокумента = Выборка.Ссылка.Метаданные().ПолноеИмя();
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		КонецЕсли;
		
		Если ПометитьНаУдаление Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если Выборка.КоличествоОснований = 1 Тогда
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			Иначе
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(ПараметрыРегистрации.Ссылка);
				Если СтрокаКУдалению <> Неопределено Тогда
					ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
					Если ДокументОбъект.Проведен Тогда
						РежимЗаписи = РежимЗаписиДокумента.Проведение;
					Иначе
						РежимЗаписи = РежимЗаписиДокумента.Запись;
					КонецЕсли;
					ДокументОбъект.Записать(РежимЗаписи);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ОтменитьПроведение Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если Выборка.КоличествоОснований = 1 Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(ПараметрыРегистрации.Ссылка);
				Если СтрокаКУдалению <> Неопределено Тогда
					ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
					Если ДокументОбъект.Проведен Тогда
						РежимЗаписи = РежимЗаписиДокумента.Проведение;
					Иначе
						РежимЗаписи = РежимЗаписиДокумента.Запись;
					КонецЕсли;
					ДокументОбъект.Записать(РежимЗаписи);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаПроведения() документа закупки.
// Выполняет проведение счетов-фактур по данным документа закупки.
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСевер.ПараметрыРегистрацииСчетовФактурПолученных().
// 	
Процедура АктуализироватьСчетаФактурыПолученныеПриПроведении(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.Проведен КАК Проведен
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументЗакупки
	|	И ТаблицаОснований.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.Проведен КАК Проведен
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументЗакупки
	|";
	Запрос.УстановитьПараметр("ДокументЗакупки", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Блокировка = Новый БлокировкаДанных;
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
			ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураПолученный");
		Иначе
			ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураПолученныйНалоговыйАгент");
		КонецЕсли;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		Если Выборка.Проведен Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ДополнительныеСвойства.Вставить("АктуализацияДвижений", Истина);
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ЗаполнитьПараметрыСчетаФактурыПоОснованию();
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
			
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	ОснованияСчетаФактуры = Новый Массив;
	ОснованияСчетаФактуры.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОбновитьСостояние(ПараметрыРегистрации.Ссылка, ОснованияСчетаФактуры);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаУдаленияПроведения() документа закупки после вызова ПроведениеСерверУТ.ЗаписатьНаборыЗаписей().
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСевер.ПараметрыРегистрацииСчетовФактурПолученных().
//
Процедура АктуализироватьСчетаФактурыПолученныеПриУдаленииПроведения(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	ОснованияСчетаФактуры = Новый Массив;
	ОснованияСчетаФактуры.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОбновитьСостояние(ПараметрыРегистрации.Ссылка, ОснованияСчетаФактуры, Истина);
	//-- Локализация
	
КонецПроцедуры

// Возвращает счета-фактуры полученные, зарегистрированные на основании документов.
//
// Параметры:
// 	ДокументыОснования - ДокументСсылка, Массив - Документ или массив документов-оснований счетов-фактур полученных.
// 	ТолькоПроведенные - Булево - Признак того, что нужно вернуть только проведенные документы.
//
// Возвращаемое значение:
// 	СчетаФактуры - ТаблицаЗначений - Таблица счетов-фактур зарегистрированных на основании, содержащая колонки
// 	                   * ДокументОснование - ДокументСсылка - Ссылка на документ-основание, у которого есть счет-фактура.
// 	                   * Ссылка - ДокументСсылка.СчетФактураПолученный - Ссылка на счет-фактуру.
//
Функция СчетаФактурыПолученныеПоДокументамОснованиям(ДокументыОснования, ТолькоПроведенные = Истина) Экспорт
	
	СчетаФактуры = Новый ТаблицаЗначений();
	СчетаФактуры.Колонки.Добавить("ДокументОснование");
	СчетаФактуры.Колонки.Добавить("Ссылка");
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.ДатаСоставления КАК ДатаСоставления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления КАК ДатаИсправления
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование В (&ДокументыОснования)
	|	И НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|	И (ТаблицаОснований.Ссылка.Проведен 
	|		ИЛИ НЕ &ТолькоПроведенные)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.ДатаСоставления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование В (&ДокументыОснования)
	|	И НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|	И (ТаблицаОснований.Ссылка.Проведен 
	|		ИЛИ НЕ &ТолькоПроведенные)
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОснований.Ссылка.ДатаСоставления ВОЗР,
	|	ТаблицаОснований.Ссылка.ДатаИсправления ВОЗР
	|";
	
	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
	Запрос.УстановитьПараметр("ТолькоПроведенные",  ТолькоПроведенные);
	
	СчетаФактуры = Запрос.Выполнить().Выгрузить();
	СчетаФактуры.Свернуть("ДокументОснование,Ссылка");
	//-- Локализация
		
	Возврат СчетаФактуры;

КонецФункции

#КонецОбласти

#Область РегистрацияРучныхЗаписейКнигиПокупок

// Возвращает 
// - строку отображения ручных записей, сформированных на основании документа
// - массив ссылок на сформированные документы.
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииЗаписейКнигиПокупок()
//
// Возвращаемое значение:
// 	Результат - Структура - Структура с ключами
// 	        * Представление - Форматированная строка - Строка представления записей книги покупок в документе.
// 	        * ЗаписиКнигиПокупок - МассивСсылок - Созданные документы
//
Функция ЗаписиКнигиПокупокНаОсновании(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("ЗаписиКнигиПокупок",  Новый Массив);
	
	//++ Локализация
	Результат = УчетНДСУПСлужебный.ЗаписьКнигиПокупокНаОсновании(ПараметрыРегистрации);

	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

// Проверяет возможность списания НДС на прочие расходы для указанной смены налогообложения.
//
// Параметры:
//	СтароеНалогообложение - ПеречислениеСсылка.ТипыНалогообложенияНДС
//	НовоеНалогообложение  - ПеречислениеСсылка.ТипыНалогообложенияНДС
//
// Возвращаемое значение:
//	Булево - признак того, что при такой смене налогообложения НДС может быть списан на прочие расходы,
//	 (если это предусмотрено учетной политикой организации).
//
Функция ВозможноСписаниеНДС(СтароеНалогообложение, НовоеНалогообложение) Экспорт
	
	Результат = Ложь;
	
	//++ Локализация
	Результат = (СтароеНалогообложение = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
	 	  	 	ИЛИ СтароеНалогообложение = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
	 	  	 	ИЛИ СтароеНалогообложение = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг
	 	  	 	ИЛИ СтароеНалогообложение = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров
	 	  	 	ИЛИ СтароеНалогообложение = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ
	 	  	 	ИЛИ СтароеНалогообложение = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
			И (НовоеНалогообложение = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
				ИЛИ НовоеНалогообложение = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область УчетИсходящегоНДС

#Область ЗаполнениеНалогообложенияНДСПродажи

// Проверяет соответствие указанного в документе продажи Налогообложения НДС настройкам учета НДС и операции документа. 
// Если переданное значение не заполнено или некорректное, то оно заполняется значением из НСИ.
//
// Параметры:
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложения НДС документа продажи.
// 	ПараметрыЗаполнения - Структура - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи().
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьНалогообложениеНДСПродажи(НалогообложениеНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	//++ Локализация
	Если ПараметрыЗаполнения.Организация = Справочники.Организации.ПустаяСсылка() Тогда
		// Организация для объекта в принципе задается, но не указана.
		// В этом случае нет смысла заполнять/проверять налогообложение, 
		// т.к. нет возможности получить учетную политику.
		Возврат;
	КонецЕсли;
	
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
										ПараметрыЗаполнения.Организация,
										ПараметрыЗаполнения.Дата,
										ПараметрыЗаполнения.Склад);
	
	ИзмененныеПараметры = УчетНДСУПСлужебный.ИзмененныеПараметры("ПараметрыЗаполненияНалогообложенияНДСПродажи", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияНалогообложенияНДСПродажи", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);

	ТолькоЕслиПустоеИлиНекорректное = Истина;
	Если ИзмененныеПараметры.Свойство("Договор")
		ИЛИ ИзмененныеПараметры.Свойство("НаправлениеДеятельности")
		ИЛИ ИзмененныеПараметры.Свойство("Организация")
		ИЛИ ИзмененныеПараметры.Свойство("Склад") Тогда
		ТолькоЕслиПустоеИлиНекорректное = Ложь;
	КонецЕсли;
	
	ВыполненаКорректировкаНалогообложения = УчетНДСУПСлужебный.СкорректироватьНалогообложениеПродажиНаЭкспорт(НалогообложениеНДС, ПараметрыЗаполнения); 
	
	МассивДоступных = УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСПродажи(ПараметрыЗаполнения);
	Если ТолькоЕслиПустоеИлиНекорректное Тогда
		Если ЗначениеЗаполнено(НалогообложениеНДС) И МассивДоступных.Найти(НалогообложениеНДС) <> Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполненоПоДоговоруИлиНаправлениюДеятельности = Ложь;
	Если (ИзмененныеПараметры.Свойство("Договор") И ЗначениеЗаполнено(ПараметрыЗаполнения.Договор))
		ИЛИ (ИзмененныеПараметры.Свойство("НаправлениеДеятельности") И ЗначениеЗаполнено(ПараметрыЗаполнения.НаправлениеДеятельности)) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	1 КАК Приоритет,
		|	ДоговорыКонтрагентов.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор
		|	И НЕ ДоговорыКонтрагентов.НалогообложениеНДСОпределяетсяВДокументе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1 КАК Приоритет,
		|	ДоговорыМеждуОрганизациями.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	ДоговорыМеждуОрганизациями.Ссылка = &Договор
		|	И НЕ ДоговорыМеждуОрганизациями.НалогообложениеНДСОпределяетсяВДокументе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2 КАК Приоритет,
		|	НаправленияДеятельности.НалогообложениеНДС КАК НалогообложениеНДС
		|ИЗ
		|	Справочник.НаправленияДеятельности КАК НаправленияДеятельности
		|ГДЕ
		|	НаправленияДеятельности.Ссылка = &НаправлениеДеятельности
		|	И НЕ НаправленияДеятельности.НалогообложениеНДСОпределяетсяВДокументе
		|	И НаправленияДеятельности.УчетДоходов
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет
		|";
		Запрос.УстановитьПараметр("Договор", ПараметрыЗаполнения.Договор);
		Запрос.УстановитьПараметр("НаправлениеДеятельности", ПараметрыЗаполнения.НаправлениеДеятельности);
		
		УстановитьПривилегированныйРежим(Истина);
		Выборка = Запрос.Выполнить().Выбрать();
		УстановитьПривилегированныйРежим(Ложь);
		Если Выборка.Следующий() Тогда
			НалогообложениеНДС = Выборка.НалогообложениеНДС;
			ВыполненаКорректировкаНалогообложения = УчетНДСУПСлужебный.СкорректироватьНалогообложениеПродажиНаЭкспорт(НалогообложениеНДС, ПараметрыЗаполнения);
			ЗаполненоПоДоговоруИлиНаправлениюДеятельности = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗаполненоПоДоговоруИлиНаправлениюДеятельности 
			И (ИзмененныеПараметры.Свойство("Организация") И ЗначениеЗаполнено(ПараметрыЗаполнения.Организация))
				ИЛИ (ИзмененныеПараметры.Свойство("Склад") И ЗначениеЗаполнено(ПараметрыЗаполнения.Склад)) Тогда
		Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
			 ИЛИ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
			 ИЛИ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			 
			Если ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
				НалогообложениеНДС = ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи;
			Иначе
				НалогообложениеНДС = ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НалогообложениеНДС) И МассивДоступных.Найти(НалогообложениеНДС) = Неопределено Тогда
		// Значение указанное в НСИ не доступно по учетной политике или настройкам.
		НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
	КонецЕсли;
	
	Если ВыполненаКорректировкаНалогообложения Тогда
		// Если в результате налогообложение оказалось не заполненным,
		// то заполнять основным налогообложением не надо.
		// Пользователь должен сам выбрать значение.
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НалогообложениеНДС) Тогда
		Если ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			НалогообложениеНДС = ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи;
		Иначе
			НалогообложениеНДС = ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи;
		КонецЕсли;
	КонецЕсли; 
	//-- Локализация
	
КонецПроцедуры

// Заполняет список доступных для выбора значений налогообложения НДС исходя из настроек учета НДС операции документа.
//
// Параметры:
// 	ЭлементНалогообложениеНДС - ПолеФормы - Элемент формы, в котором указывается налогообложение НДС.
// 	НалогообложениеНДС - ПеречислениеСсылка.ТипНалогообложенияНДС - Выбранное в документе значение налогообложения НДС.
// 	ПараметрыЗаполнения - Структура - см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи().
// 	КэшированныеЗначенияПараметров - Произвольный - Значение реквизита кэшированных значений параметров учета НДС.
//
Процедура ЗаполнитьСписокВыбораНалогообложенияНДСПродажи(ЭлементНалогообложениеНДС, НалогообложениеНДС, ПараметрыЗаполнения, КэшированныеЗначенияПараметров = Неопределено) Экспорт
	
	//++ Локализация
	Представления = Новый Соответствие();
	Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента ИЛИ ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
		ПредставлениеПродажаОблагаетсяНДС = НСтр("ru = 'Возврат облагается НДС';
												|en = 'Return is subject to VAT'");
	Иначе
		ПредставлениеПродажаОблагаетсяНДС = НСтр("ru = 'Продажа облагается НДС';
												|en = 'Sale is subject to VAT'");
	КонецЕсли;
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС,        ПредставлениеПродажаОблагаетсяНДС);
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента ИЛИ ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
		ПредставлениеПродажаНеОблагаетсяНДС = НСтр("ru = 'Возврат не облагается НДС';
													|en = 'Return is exempt from VAT'");
	Иначе
		ПредставлениеПродажаНеОблагаетсяНДС = НСтр("ru = 'Продажа не облагается НДС';
													|en = 'Sale is not subject to VAT'");
	КонецЕсли;
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС,      ПредставлениеПродажаНеОблагаетсяНДС);
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента Тогда
		ПредставлениеПродажаОблагаетсяЕНВД = НСтр("ru = 'Возврат облагается ЕНВД';
													|en = 'Return is subject to UTII'");
	Иначе
		ПредставлениеПродажаОблагаетсяЕНВД = НСтр("ru = 'Продажа облагается ЕНВД';
													|en = 'Sale is subject to UTII'");
	КонецЕсли;
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД,       ПредставлениеПродажаОблагаетсяЕНВД);
	
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт,            НСтр("ru = 'Продажа на экспорт';
																								|en = 'Sale for export'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг, НСтр("ru = 'Экспорт сырьевых товаров, работ, услуг';
																								|en = 'Export of commodities, works, services'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров,    НСтр("ru = 'Экспорт несырьевых товаров';
																								|en = 'Non-resource goods export'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя,    НСтр("ru = 'Облагается НДС у покупателя';
																								|en = 'Subject to VAT at customer'"));
	Представления.Вставить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ,             НСтр("ru = 'Производство с длит. циклом';
																								|en = 'Production with long cycle'"));
	
	МассивДоступных = УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСПродажи(ПараметрыЗаполнения);
	
	ЭлементНалогообложениеНДС.СписокВыбора.Очистить();
	Для каждого Элемент Из МассивДоступных Цикл
		ЭлементНалогообложениеНДС.СписокВыбора.Добавить(Элемент, Представления[Элемент]);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(НалогообложениеНДС) 
		 И ЭлементНалогообложениеНДС.СписокВыбора.НайтиПоЗначению(НалогообложениеНДС) = Неопределено Тогда
		ЭлементНалогообложениеНДС.СписокВыбора.Добавить(НалогообложениеНДС, Представления[НалогообложениеНДС]);
	КонецЕсли;
	
	ЭлементНалогообложениеНДС.Видимость = (ЭлементНалогообложениеНДС.СписокВыбора.Количество() <> 1); 
	УчетНДСУПСлужебный.ОбновитьКэшированныеЗначенияПараметров("ПараметрыЗаполненияНалогообложенияНДСПродажи", ПараметрыЗаполнения, КэшированныеЗначенияПараметров);
	//-- Локализация
	
КонецПроцедуры

// Устанавливает ограничения на типы запасов, которые можно продавать по указанному налогообложению
// 
// Параметры:
//   ОтборыВидовЗапасов - Структура - см. Справочники.ВидыЗапасов.ПараметрыОтбораВидовЗапасов
//   НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - налогообложение реализации
//
Процедура ПараметрыЗаполненияВидовЗапасовПоНалогообложению(ОтборыВидовЗапасов, Организация, Дата, НалогообложениеНДС = Неопределено) Экспорт
	
	//++ Локализация
	
	Если НалогообложениеНДС = Неопределено Тогда
		НалогообложениеНДС = ОтборыВидовЗапасов.НалогообложениеНДС;
	КонецЕсли;
	
	НалогообложениеОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(Организация, Дата).ОсновноеНалогообложениеНДСПродажи;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт Тогда
		
		ДоступныеТипыЗапасов = Новый Массив;
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
		
		ОтборыВидовЗапасов.ТипЗапасов = ДоступныеТипыЗапасов;

	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		
		ДоступныеТипыЗапасов = Новый Массив;
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
		
		ОтборыВидовЗапасов.ТипЗапасов = ДоступныеТипыЗапасов;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ Тогда
		
		ОтборыВидовЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
		
	ИначеЕсли НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД 
		И Перечисления.ТипыНалогообложенияНДС.СНдсБезНдс(НалогообложениеНДС) <> НалогообложениеОрганизации Тогда
		
		ОтборыВидовЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Устанавливаем условное оформление поля "Код ТН ВЭД" по налогообложению продажи.
//
// Параметры:
//  Форма - Форма - Содержит данную форму
//  ИмяТЧ - Строка - Наименование табличной части документа, если оно отличается от "Товары".
//                   В табличной части должно присутствовать поле ТипНоменклатуры.
//
Процедура УстановитьУсловноеОформлениеКодаТНВЭДПоНалогообложениюПродажи(Форма, ИмяТЧ = "Товары") Экспорт
	
	//++ Локализация
	ПараметрыУчетаНДС = УчетНДСУП.НастройкиУчета();
	
	Если Не ПараметрыУчетаНДС.ЭкспортНесырьевыхТоваров  И Не ПараметрыУчетаНДС.ЭкспортСырьевыхТоваровУслуг Тогда
		Возврат;
	КонецЕсли;
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяТЧ + "КодТНВЭД"].Имя);

	ГруппаОтбора1 = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;

	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;

	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);	

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяТЧ + "КодТНВЭД"].Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект." + ИмяТЧ + ".ТипНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	СписокТиповНоменклатуры = Новый СписокЗначений();
	СписокТиповНоменклатуры.ЗагрузитьЗначения(УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	ОтборЭлемента.ПравоеЗначение = СписокТиповНоменклатуры;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<для товаров>';
																					|en = '<for goods>'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//-- Локализация
	
КонецПроцедуры

// Устанавливаем условное оформление для ставки НДС, суммы НДС, суммы с НДС по налогообложению продажи.
//
// Параметры:
//  Форма - Форма - Содержит данную форму
//  ИмяПоляВводаСтавкиНДС - Строка - Наименование элемента формы, содержащего ставку НДС,
//                                   если оно отличается от "ТоварыСтавкаНДС"
//  ИмяПоляВводаСуммыНДС - Строка - Наименование элемента формы, содержащего сумму НДС,
//                                  если оно отличается от "ТоварыСуммаНДС"
//  ИмяПоляВводаСуммыСНДС - Строка - Наименование элемента формы, содержащего сумму с НДС,
//                                   если оно отличается от "ТоварыСуммаСНДС"
//
Процедура УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюПродажи(Форма,
	                                          ИмяПоляВводаСтавкиНДС = "ТоварыСтавкаНДС",
	                                          ИмяПоляВводаСуммыНДС  = "ТоварыСуммаНДС",
	                                          ИмяПоляВводаСуммыСНДС = "ТоварыСуммаСНДС") Экспорт
	//++ Локализация
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	//
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСтавкиНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыСНДС].Имя);
	
	СписокНалогообложенийБезНДС = Новый СписокЗначений;
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокНалогообложенийБезНДС;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСтавкиНДС].Имя);
	
	СписокНалогообложенийЭкспорт = Новый СписокЗначений;
	СписокНалогообложенийЭкспорт.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	СписокНалогообложенийЭкспорт.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	СписокНалогообложенийЭкспорт.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокНалогообложенийЭкспорт;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//-- Локализация
	
КонецПроцедуры

// Определяет вид деятельности раздельного учета НДС исходя из налогообложения НДС продажи.
//
// Параметры:
//	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС
//
// Возвращаемое значение:
//	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС
//
Функция ВидДеятельностиПоНалогообложениюНДС(НалогообложениеНДС) Экспорт
	
	Результат = НалогообложениеНДС;
	
	//++ Локализация
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		Результат = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	КонецЕсли;
	//-- Локализация
	
	Возврат Результат;
		
КонецФункции

#КонецОбласти

#Область ФормированиеСчетовФактурВыданных

// Возвращает 
// - текст отображения счетов-фактур, зарегистрированных на основании документа продажи.
// - ссылки данные счета-фактуры.
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных()
// 
// ВозвращаемоеЗначение:
// 	Результат - Структура - Структура с ключами
//		* Представление - Форматированная строка - Строка представления счетов-фактур в документе продажи.
// 		* СчетаФактуры - Массив - Массив счетов-фактур, зарегистрированных на основании документа продажи.
//
Функция СчетаФактурыВыданныеНаОсновании(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	Результат.Вставить("ДокументПоОснованиюТребуется",  Ложь);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию",  Ложь);
	
	//++ Локализация
	Результат = УчетНДСУПСлужебный.СчетаФактурыВыданныеПоДокументуПродажи(ПараметрыРегистрации);
	//-- Локализация
	
	Возврат Результат;

КонецФункции

// Возвращает 
// - текст отображения счетов-фактур, зарегистрированных на основании документа продажи.
// - ссылки данные счета-фактуры.
//
// Параметры:
// 	ПараметрыРегистрацииВыданныхСФ - Структура - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных()
// 	ПараметрыРегистрацииПолученныхСФ - Структура - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурПолученных()
// 
// ВозвращаемоеЗначение:
// 	Результат - Структура - Структура с ключами
//		* Представление - Форматированная строка - Строка представления счетов-фактур в документе продажи.
// 		* СчетаФактуры - Массив - Массив счетов-фактур, зарегистрированных на основании документа продажи.
//
Функция СчетаФактурыОбщиеНаОсновании(ПараметрыРегистрацииВыданныхСФ, ПараметрыРегистрацииПолученныхСФ) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	Результат.Вставить("ДокументыПоОснованию",  Новый Массив);
	Результат.Вставить("ДокументПоОснованиюТребуется", Ложь);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию", Ложь);
	
	РезультатВыданные = СчетаФактурыВыданныеНаОсновании(ПараметрыРегистрацииВыданныхСФ);
	РезультатПолученные = СчетаФактурыПолученныеНаОсновании(ПараметрыРегистрацииПолученныхСФ);
	
	Результат.Представление = РезультатВыданные.Представление;
	Результат.ДокументПоОснованиюТребуется = РезультатВыданные.ДокументПоОснованиюТребуется;
	Результат.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = 
		РезультатВыданные.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию;
	Если РезультатВыданные.СчетаФактуры.Количество() > 0 Тогда
		Результат.СчетаФактуры = РезультатВыданные.СчетаФактуры;
	ИначеЕсли РезультатПолученные.ДокументыПоОснованию.Количество() > 0 Тогда
		Результат.ДокументыПоОснованию = РезультатПолученные.ДокументыПоОснованию;
		Результат.Представление = РезультатПолученные.Представление;
		Результат.ДокументПоОснованиюТребуется = РезультатПолученные.ДокументПоОснованиюТребуется;
		Результат.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = 
			РезультатПолученные.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию;
	ИначеЕсли РезультатПолученные.ДокументПоОснованиюТребуется Тогда
		Результат.Представление = РезультатПолученные.Представление;
		Результат.ДокументПоОснованиюТребуется = РезультатПолученные.ДокументПоОснованиюТребуется;
		Результат.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = 
			РезультатПолученные.ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Вызывается в обработчике ПередЗаписью() документа продажи.
// Отменяет проведение счетов-фактур, если отменяется проведение документа продажи или его реквизиты не соответствуют параметрам регистрации.
// Помечает на удаление счета-фактуры, если документ продажи помечается на удаление.
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСевер.ПараметрыРегистрацииСчетовФактурВыданных().
// 	РежимЗаписи - РежимЗаписиДокумента - Режим записи документа.
// 	ПометкаУдаления - Булево - Пометка удаления документа продажи.
// 	Проведен - Булево - Пометка проведения документа.
//
Процедура АктуализироватьСчетаФактурыВыданныеПередЗаписью(ПараметрыРегистрации, Знач РежимЗаписи, Знач ПометкаУдаления, Знач Проведен) Экспорт
	
	//++ Локализация
	СчетФактураВыданныйНеТребуется = УчетНДСУПСлужебный.СчетФактураВыданныйНеТребуется(ПараметрыРегистрации);
	
	ДокументПроведен = Ложь;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ДокументПроведен = Истина;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись И Проведен Тогда
		ДокументПроведен = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументПродажи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	СчетаФактуры.Ссылка.Проведен КАК Проведен,
	|	СчетаФактуры.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	КОЛИЧЕСТВО(ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|	ПО 
	|		СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка
	|";
	Запрос.УстановитьПараметр("ДокументПродажи", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПометитьНаУдаление = Ложь;
		ОтменитьПроведение = Ложь;
		
		Если НЕ Выборка.ПометкаУдаления
			 И (ПометкаУдаления
			    Или Выборка.Организация <> ПараметрыРегистрации.Организация
			    Или СчетФактураВыданныйНеТребуется) Тогда
			ПометитьНаУдаление = Истина;
		ИначеЕсли Выборка.Проведен И НЕ ДокументПроведен Тогда
			ОтменитьПроведение = Истина;
		КонецЕсли;
		
		Если ПометитьНаУдаление Или ОтменитьПроведение Тогда
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураВыданный");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		КонецЕсли;
		
		Если ПометитьНаУдаление Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если Выборка.КоличествоОснований = 1 Тогда
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			Иначе
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(ПараметрыРегистрации.Ссылка);
				Если СтрокаКУдалению <> Неопределено Тогда
					ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
					Если ДокументОбъект.Проведен Тогда
						РежимЗаписи = РежимЗаписиДокумента.Проведение;
					Иначе
						РежимЗаписи = РежимЗаписиДокумента.Запись;
					КонецЕсли;
					ДокументОбъект.Записать(РежимЗаписи);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ОтменитьПроведение Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если Выборка.КоличествоОснований = 1 Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(ПараметрыРегистрации.Ссылка);
				Если СтрокаКУдалению <> Неопределено Тогда
					ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
					Если ДокументОбъект.Проведен Тогда
						РежимЗаписи = РежимЗаписиДокумента.Проведение;
					Иначе
						РежимЗаписи = РежимЗаписиДокумента.Запись;
					КонецЕсли;
					ДокументОбъект.Записать(РежимЗаписи);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаПроведения() документа продажи.
// Выполняет проведение счетов-фактур по данным документа продажи.
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСевер.ПараметрыРегистрацииСчетовФактурВыданных().
//
Процедура АктуализироватьСчетаФактурыВыданныеПриПроведении(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &ДокументПродажи
	|	И ТаблицаОснований.Ссылка.Проведен
	|";
	Запрос.УстановитьПараметр("ДокументПродажи", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураВыданный");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ДополнительныеСвойства.Вставить("АктуализацияДвижений", Истина);
		
		Если Выборка.Контрагент <> ПараметрыРегистрации.Контрагент Тогда
			ДокументОбъект.ЗаполнитьПараметрыСчетаФактурыПоОснованию();
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	ОснованияСчетаФактуры = Новый Массив;
	ОснованияСчетаФактуры.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОбновитьСостояние(ПараметрыРегистрации.Ссылка, ОснованияСчетаФактуры);
	//++ НЕ УТ
	РегистрыСведений.ТаможенныеДекларацииЭкспортКРегистрации.ОбновитьСостояние(ОснованияСчетаФактуры);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаУдаленияПроведения() документа продажи после вызова ПроведениеСерверУТ.ЗаписатьНаборыЗаписей().
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСевер.ПараметрыРегистрацииСчетовФактурВыданных().
//
Процедура АктуализироватьСчетаФактурыВыданныеПриУдаленииПроведения(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	ОснованияСчетаФактуры = Новый Массив;
	ОснованияСчетаФактуры.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОбновитьСостояние(ПараметрыРегистрации.Ссылка, ОснованияСчетаФактуры, Истина);
	//++ НЕ УТ
	РегистрыСведений.ТаможенныеДекларацииЭкспортКРегистрации.ОбновитьСостояние(ОснованияСчетаФактуры);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// Возвращает документы-основания счетов-фактур выданных.
// 
// Параметры:
// 	СчетаФактуры - Массив, ДокументСсылка.СчетФактураВыданный - Счета-фактуры 
//
// Возвращаемое значение:
// 	ДокументыОснования - Массив - Документы-основания счетов-фактур. 
// 	
Функция ДокументыОснованияСчетовФактурВыданных(СчетаФактуры) Экспорт
	
	ДокументыОснования = Новый Массив();
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.Ссылка В (&СчетаФактуры)
	|	И ТаблицаОснований.Ссылка.Проведен";
	Запрос.УстановитьПараметр("СчетаФактуры", СчетаФактуры);
	ДокументыОснования = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументОснование");
	//-- Локализация
	
	Возврат ДокументыОснования;
	
КонецФункции

// Возвращает счета-фактуры выданные, сформированные на основании документов продажи.
//
// Параметры:
// 	ДокументыОснования - ДокументСсылка, Массив - Документ или массив документов-оснований счетов-фактур выданных.
// 	ТолькоПроведенные - Булево - Признак того, что нужно вернуть только проведенные счета-фактуры.
//
// Возвращаемое значение:
// 	СчетаФактуры - ТаблицаЗначений - Таблица счетов-фактур зарегистрированных на основании, содержащая колонки
// 	                   * ДокументОснование - ДокументСсылка - Ссылка на документ-основание, у которого есть счет-фактура.
// 	                   * Ссылка - ДокументСсылка.СчетФактураВыданный - Ссылка на счет-фактуру.
//
Функция СчетаФактурыВыданныеПоДокументамОснованиям(ДокументыОснования, ТолькоПроведенные = Истина) Экспорт
	
	СчетаФактуры = Новый ТаблицаЗначений();
	СчетаФактуры.Колонки.Добавить("ДокументОснование");
	СчетаФактуры.Колонки.Добавить("Ссылка");
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование КАК ДокументОснование,
	|	ТаблицаОснований.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование В (&ДокументыОснования)
	|	И НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|	И (ТаблицаОснований.Ссылка.Проведен 
	|		ИЛИ НЕ &ТолькоПроведенные)
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОснований.Ссылка.Дата ВОЗР
	|";
	Запрос.УстановитьПараметр("ДокументыОснования", ДокументыОснования);
	Запрос.УстановитьПараметр("ТолькоПроведенные", ТолькоПроведенные);
	
	СчетаФактуры = Запрос.Выполнить().Выгрузить();
	//-- Локализация
	
	Возврат СчетаФактуры;

КонецФункции

// Возвращает полное наименование документа СчетФактураВыданный
//
Функция ПолноеИмяСчетФактурыВыданный() Экспорт
	
	Результат = Неопределено;
	//++ Локализация
	Результат = "Документ.СчетФактураВыданный";
	//-- Локализация
	Возврат Результат;
	
КонецФункции

// Заполняет Счет-фактуру выданный по переданным параметрам регистрации, выполняет проведение документа.
// Если провести документ не удалось, то выполняет запись документа.
//
// Параметры:
//  СчетФактура - ДокументОбъект.СчетФактураВыданный, ДокументСсылка.СчетФактураВыданный - объект или ссылка счет-фактуры выданный
//  ПараметрыРегистрации - Структура - Значения реквизитов счет-фактуры. см. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных()
//
// Возвращаемое значение:
// 	Результат - Структура - Возвращается
// 					* Проведен - Булево - Если удалось провести документ, то Истина. Иначе - Ложь.
// 					* СообщениеОбОшибке - Строка - Сообщение об ошибке, если документ провести не удалось.
//
Функция ЗаполнитьСчетФактураВыданный(СчетФактура, ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Проведен", Истина);
	Результат.Вставить("СообщениеОбОшибке", "");
	
	//++ Локализация
	СчетФактураОбъект = СчетФактура;
	Если ТипЗнч(СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
	КонецЕсли;
	
	СчетФактураОбъект.ДокументыОснования.Очистить();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДокументОснование", ПараметрыРегистрации.Ссылка);
	ДанныеЗаполнения.Вставить("Организация", ПараметрыРегистрации.Организация);
	ДанныеЗаполнения.Вставить("Контрагент", ПараметрыРегистрации.Контрагент);
	ДанныеЗаполнения.Вставить("Исправление", ПараметрыРегистрации.ИсправлениеОшибок);
	ДанныеЗаполнения.Вставить("Корректировочный", ПараметрыРегистрации.КорректировкаПоСогласованиюСторон);
	
	СчетФактураОбъект.Заполнить(ДанныеЗаполнения);
	Попытка
		Результат.Проведен = Истина;
		СчетФактураОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Результат.Проведен = Ложь;
		Результат.СообщениеОбОшибке = ОписаниеОшибки();
		СчетФактураОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки;
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

// Формирует исправительные счета-фактуры выданные по измененным документам-основаниям.
//
// Параметры:
//  ТаблицаИзмененныхДокументов	 - ТаблицаЗначений	 - Измененные документы продажи и их реквизиты.
//  	Колонки таблицы:
//  	* Документ - ОписаниеТипов.ОснованиеСчетФактураВыданный - Документ-основание.
//  	* Организация - СправочникСсылка.Организация - Организация документа-основания.
//  	* Дата - Дата - Дата документа-основания.
//  	* Ответственный - СправочникСсылка.Пользователи - Ответственный за документ-основание.
// 
// Возвращаемое значение:
//  Массив - Массив документов типа ДокументСсылка
//
Функция СформироватьИсправительныеСчетаФактурыПоИзмененнымДокументам(ТаблицаИзмененныхДокументов) Экспорт
	
	СформированныеДокументы = Новый Массив;
	
	//++ Локализация
	КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
	
	СформированныеДокументы = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ТаблицаИзмененныхДокументов Цикл
		
		СтруктураОснование = Новый Структура;
		СтруктураОснование.Вставить("ДокументОснование", СтрокаТаблицы.Документ);
		СтруктураОснование.Вставить("Организация",       СтрокаТаблицы.Организация);
		СтруктураОснование.Вставить("Дата",              СтрокаТаблицы.Дата);
		СтруктураОснование.Вставить("Исправление",       Истина);
		
		НовыйДокумент = Документы.СчетФактураВыданный.СоздатьДокумент();
		НовыйДокумент.Заполнить(СтруктураОснование);
		Попытка
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			ДокументСозданУспешно = Истина;
		Исключение
			ДокументСозданУспешно = Ложь;
		КонецПопытки;
		
		Если ДокументСозданУспешно Тогда
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Сформирован исправительный счет-фактура';
					|en = 'Replacement tax invoice is generated'", КодЯзыка),
				УровеньЖурналаРегистрации.Информация,
				НовыйДокумент.Метаданные(),
				НовыйДокумент.Ссылка,
				НСтр("ru = 'Сформирован исправительный счет-фактура для документа реализации товаров';
					|en = 'Replacement tax invoice is generated for goods sales document'", КодЯзыка),
				РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
		КонецЕсли;
		
		СформированныеДокументы.Добавить(НовыйДокумент.Ссылка);
		
	КонецЦикла;
	//-- Локализация
	
	Возврат СформированныеДокументы;
	
КонецФункции

#КонецОбласти

#Область ФормированиеСчетовФактурКомиссионеру
	
// Возвращает 
// - текст отображения счетов-фактур, зарегистрированных на основании отчета по комиссии.
// - ссылки данные счета-фактуры.
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурКомиссионеру()
// 
// ВозвращаемоеЗначение:
// 	Результат - Структура - Структура с ключами
//		* Представление - Форматированная строка - Строка представления счетов-фактур в отчета комиссионеру.
// 		* СчетаФактуры - Массив - Массив счетов-фактур, зарегистрированных на основании отчета комиссионера.
//
Функция СчетаФактурыКомиссионеруНаОсновании(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	
	//++ Локализация
	Результат = УчетНДСУПСлужебный.СчетаФактурыКомиссионеруПоОтчету(ПараметрыРегистрации);
	//-- Локализация
	
	Возврат Результат;
	
КонецФункции

// Вызывается в обработчике ПередЗаписью() отчета комиссионера.
// Отменяет проведение счетов-фактур, если отменяется проведение отчета комиссионера или его реквизиты не соответствуют параметрам регистрации.
// Помечает на удаление счета-фактуры, если помечается на удаление отчет комиссионера.
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСевер.ПараметрыРегистрацииСчетовФактурКомиссионеру()
// 	РежимЗаписи - РежимЗаписиДокумента - Режим записи документа
// 	ПометкаУдаления - Булево - Пометка удаления отчета комиссионера.
// 	Проведен - Булево - Пометка проведения документа.
//
Процедура АктуализироватьСчетаФактурыКомиссионеруПередЗаписью(ПараметрыРегистрации, Знач РежимЗаписи, Знач ПометкаУдаления, Знач Проведен) Экспорт
	
	//++ Локализация
	ДокументПроведен = Ложь;
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ДокументПроведен = Истина;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Запись И Проведен Тогда
		ДокументПроведен = Истина;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураКомиссионеру.Ссылка КАК Ссылка,
	|	СчетФактураКомиссионеру.ПометкаУдаления КАК ПометкаУдаления,
	|	СчетФактураКомиссионеру.Проведен КАК Проведен,
	|	СчетФактураКомиссионеру.Организация КАК Организация
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|ГДЕ
	|	СчетФактураКомиссионеру.ДокументОснование = &ОтчетКомиссионера
	|";
	Запрос.УстановитьПараметр("ОтчетКомиссионера", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПометитьНаУдаление = Ложь;
		ОтменитьПроведение = Ложь;
		
		Если НЕ Выборка.ПометкаУдаления
			 И (ПометкаУдаления Или Выборка.Организация <> ПараметрыРегистрации.Организация) Тогда
			ПометитьНаУдаление = Истина;
		ИначеЕсли Выборка.Проведен И НЕ Проведен Тогда
			ОтменитьПроведение = Истина;
		КонецЕсли;
		
		Если ПометитьНаУдаление Или ОтменитьПроведение Тогда
			ИмяДокумента = Выборка.Ссылка.Метаданные().ПолноеИмя();
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		КонецЕсли;
		
		Если ПометитьНаУдаление Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
		
		Если ОтменитьПроведение Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
	
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаПроведения() отчета комиссионера.
// Выполняет проведение счетов-фактур по данным отчета комиссионера.
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСевер.ПараметрыРегистрацииСчетовФактурКомиссионеру()
//
Процедура АктуализироватьСчетаФактурыКомиссионеруПриПроведении(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос; 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураКомиссионеру.Ссылка
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|ГДЕ
	|	СчетФактураКомиссионеру.ДокументОснование = &ОтчетКомиссионера
	|	И СчетФактураКомиссионеру.Проведен
	|";
	Запрос.УстановитьПараметр("ОтчетКомиссионера", ПараметрыРегистрации.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.СчетФактураКомиссионеру");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ДополнительныеСвойства.Вставить("АктуализацияДвижений", Истина);
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
	МассивОснований = Новый Массив;
	МассивОснований.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.СчетаФактурыКомиссионерамКОформлению.ОбновитьСостояние(МассивОснований);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаУдаленияПроведения() отчета комиссионера после ПроведениеСерверУТ.ЗаписатьНаборыЗаписей().
// Выполняет обновление распоряжений на оформление счетов-фактур комиссионеру. 
//
// Параметры:
// 	ПараметрыРегистрации - Структура - См. УчетНДСУПКлиентСевер.ПараметрыРегистрацииСчетовФактурКомиссионеру()
//
Процедура АктуализироватьСчетаФактурыКомиссионеруПриУдаленииПроведения(ПараметрыРегистрации) Экспорт
	
	//++ Локализация
	МассивОснований = Новый Массив;
	МассивОснований.Добавить(ПараметрыРегистрации.Ссылка);
	РегистрыСведений.СчетаФактурыКомиссионерамКОформлению.ОбновитьСостояние(МассивОснований);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область РегистрацияСчетовФактурКомитента

// Вызывается в обработчике ОбработкаПроведения() отчета комитенту.
// Выполняет обновление распоряжений на регистрацию счетов-фактур комитента. 
//
// Параметры:
// 	СчетаФактурыВыданныеПокупателям - Массив - Счета-фактуры, выданные покупателям, параметры которых сообщили комитенту.
//
Процедура АктуализироватьСчетаФактурыКомитентаПриПроведении(СчетаФактурыВыданныеПокупателям) Экспорт
	
	//++ Локализация
	РегистрыСведений.СчетаФактурыКомитентовКРегистрации.ОбновитьСостояние(СчетаФактурыВыданныеПокупателям);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике ОбработкаУдаленияПроведения() отчета комитента после вызова ПроведениеСерверУТ.ЗаписатьНаборыЗаписей()
// Выполняет обновление распоряжений на регистрацию счетов-фактур комитента. 
//
// Параметры:
// 	СчетаФактурыВыданныеПокупателям - Массив - Счета-фактуры, выданные покупателям, параметры которых сообщили комитенту.
//
Процедура АктуализироватьСчетаФактурыКомитентаПриУдаленииПроведения(СчетаФактурыВыданныеПокупателям) Экспорт
	
	//++ Локализация
	РегистрыСведений.СчетаФактурыКомитентовКРегистрации.ОбновитьСостояние(СчетаФактурыВыданныеПокупателям);
	//-- Локализация
	
КонецПроцедуры

// Дополняет временную таблицу товаров к оформлению отчета комитенту колонкой "СчетФактура".
// Данная колонка заполняется подобранными по параметрам счетами-фактурами, выданным покупателю комиссионных товаров.
// Исходная временная таблица должна содержать колонки, по которым осуществляется подбор счетов-фактур:
// 	* Покупатель - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Покупатель комиссионных товаров.
// 	* ДокументРеализации - ДокументСсылка - Документ реализации комиссионных товаров.
// 	* ДатаСчетаФактуры - Дата - Дата выставления счета-фактуры.
// 	* НомерСчетаФактуры - Строка - Номер счета-фактуры. 
//
// Параметры:
// 	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу товаров к оформлению.
// 	ИмяТаблицы - Строка - Имя временной таблицы товаров к оформлению отчета комитенту.
//
Процедура ДополнитьТаблицуДаннымиСчетовФактурВыданныхПокупателям(МенеджерВременныхТаблиц, ИмяТаблицы) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ПоляТаблицы,
	|	ИмяТаблицы.Покупатель КАК Покупатель,
	|	ИмяТаблицы.ДокументРеализации КАК ДокументРеализации,
	|	ИмяТаблицы.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ИмяТаблицы.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	""""  КАК СчетФактура
	|ПОМЕСТИТЬ ИмяТаблицыПредварительная
	|ИЗ
	|	ИмяТаблицы КАК ИмяТаблицы
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицы
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ИмяТаблицы
	|ИЗ
	|	ИмяТаблицыПредварительная";
	
	//++ Локализация
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ПоляТаблицы,
	|	ИмяТаблицы.ДокументРеализации КАК ДокументРеализации,
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(СчетФактураВыданныйПоРеализации.Ссылка.Дата, 
	|		ЕСТЬNULL(СчетФактураВыданныйПоДатеИНомеру.Ссылка.Дата,
	|			ЕСТЬNULL(СчетФактураКомиссионеруПоДатеИНомеру.Ссылка.Дата,
	|				ИмяТаблицы.ДатаСчетаФактуры))), ДЕНЬ) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураВыданныйПоРеализации.Ссылка.Номер,
	|		ЕСТЬNULL(СчетФактураВыданныйПоДатеИНомеру.Ссылка.Номер,
	|			ЕСТЬNULL(СчетФактураКомиссионеруПоДатеИНомеру.Ссылка.Номер,
	|				ИмяТаблицы.НомерСчетаФактуры))) КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(СчетФактураВыданныйПоРеализации.Ссылка.Контрагент,
	|		ЕСТЬNULL(СчетФактураВыданныйПоДатеИНомеру.Контрагент,
	|			ЕСТЬNULL(СчетФактураКомиссионеруПоДатеИНомеру.Покупатель,
	|				ИмяТаблицы.Покупатель))) КАК Покупатель,
	|	ЕСТЬNULL(СчетФактураВыданныйПоРеализации.Ссылка,
	|		ЕСТЬNULL(СчетФактураВыданныйПоДатеИНомеру.Ссылка,
	|				СчетФактураКомиссионеруПоДатеИНомеру.Ссылка))  КАК СчетФактура
	|ПОМЕСТИТЬ ИмяТаблицыПредварительная
	|ИЗ
	|	ИмяТаблицы КАК ИмяТаблицы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйПоРеализации
	|	ПО
	|		СчетФактураВыданныйПоРеализации.ДокументОснование = ИмяТаблицы.ДокументРеализации
	|		И СчетФактураВыданныйПоРеализации.Ссылка.Организация = ИмяТаблицы.Организация
	|		И СчетФактураВыданныйПоРеализации.Ссылка.Проведен
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданный КАК СчетФактураВыданныйПоДатеИНомеру
	|	ПО
	|		НАЧАЛОПЕРИОДА(СчетФактураВыданныйПоДатеИНомеру.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ИмяТаблицы.ДатаСчетаФактуры, ДЕНЬ)
	|		И СчетФактураВыданныйПоДатеИНомеру.Номер = ИмяТаблицы.НомерСчетаФактуры
	|		И СчетФактураВыданныйПоДатеИНомеру.Контрагент = ИмяТаблицы.Покупатель
	|		И СчетФактураВыданныйПоДатеИНомеру.Организация = ИмяТаблицы.Организация
	|		И СчетФактураВыданныйПоДатеИНомеру.Ссылка.Проведен
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураКомиссионеру.Покупатели КАК СчетФактураКомиссионеруПоДатеИНомеру
	|	ПО
	|		НАЧАЛОПЕРИОДА(СчетФактураКомиссионеруПоДатеИНомеру.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ИмяТаблицы.ДатаСчетаФактуры, ДЕНЬ)
	|		И СчетФактураКомиссионеруПоДатеИНомеру.НомерСчетаФактуры = ИмяТаблицы.НомерСчетаФактуры
	|		И СчетФактураКомиссионеруПоДатеИНомеру.Покупатель = ИмяТаблицы.Покупатель
	|		И СчетФактураКомиссионеруПоДатеИНомеру.Ссылка.Организация = ИмяТаблицы.Организация
	|		И СчетФактураКомиссионеруПоДатеИНомеру.Ссылка.Проведен
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяТаблицы
	|;
	|
	|/////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ИмяТаблицы
	|ИЗ
	|	ИмяТаблицыПредварительная";
	//-- Локализация
	
	ВременнаяТаблица = МенеджерВременныхТаблиц.Таблицы.Найти(ИмяТаблицы);
	ПоляВыборки = Новый Массив;
	Для каждого Колонка Из ВременнаяТаблица.Колонки Цикл
		Если Колонка.Имя <>"Покупатель"
				И Колонка.Имя <>"ДокументРеализации"
				И Колонка.Имя <>"ДатаСчетаФактуры"
				И Колонка.Имя <>"НомерСчетаФактуры" Тогда
			ПолеВыборки = СтрШаблон("	%1.%2 КАК %2", ИмяТаблицы, Колонка.Имя);
			ПоляВыборки.Добавить(ПолеВыборки);
		КонецЕсли;
	КонецЦикла;
	Разделитель = ",
		|";
	СтрокаПоляВыборки = СтрСоединить(ПоляВыборки, Разделитель);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляТаблицы", СтрокаПоляВыборки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицы", ИмяТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПеречислениеНДСВБюджетПоОтдельнымОперациям

// Возвращает пустую таблицу счетов-фактур для регистрации действий по оплате НДС в бюджет.
//
// Возвращаемое значение:
// 	ТаблицаЗначений - таблица с колонками:
//		* СчетФактура - Документ, требующий оплаты НДС
//		* СуммаОплаты - Сумма НДС к оплате
//		* ВидАгентскогоДоговора - ПеречислениеСсылка.ВидыАгентскихДоговоров - для счетов-фактур налогового агента 
Функция НоваяТаблицаСчетовФактур() Экспорт
	
	СчетаФактуры = Новый ТаблицаЗначений;
	// Общие свойства.
	СчетаФактуры.Колонки.Добавить("СчетФактура", Документы.ТипВсеСсылки());
	СчетаФактуры.Колонки.Добавить("СуммаОплаты", ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля());
	СчетаФактуры.Колонки.Добавить("ВидАгентскогоДоговора", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАгентскихДоговоров"));
	
	Возврат СчетаФактуры;
	
КонецФункции

// Регистрирует документы начисления НДС к оплате.
// При этом формируются записи регистра ПодтверждениеОплатыНДСВБюджет с состоянием ОжидаетОплаты.
// Параметры:
// 	СчетаФактуры - ТаблицаЗначений - Таблица сумм НДС к оплате по счетам-фактурам.	
// 	Колонки таблицы:
//			* СчетФактура - Документ, требующий оплаты НДС
//			* СуммаОплаты - Сумма НДС к оплате
//			* ВидАгентскогоДоговора - ПеречислениеСсылка.ВидыАгентскихДоговоров - для счетов-фактур налогового агента 
// 	ДокументРегистратор - ДокументСсылка - Документ-регистратор операции.
// 	Проведен - Булево - Признак проведения документа-регистратора.
Процедура ЗарегистрироватьСчетаФактурыОжидаетОплатыНДС(СчетаФактуры, ДокументРегистратор, Проведен) Экспорт

	//++ Локализация
	РегистрыСведений.ПодтверждениеОплатыНДСВБюджет.ЗарегистрироватьСчетаФактурыОжидаетОплатыНДС(СчетаФактуры, ДокументРегистратор, Проведен);
	//-- Локализация

КонецПроцедуры

// Регистрирует запланированную оплату НДС по документам.
// При этом в записи регистра ПодтверждениеОплатыНДСВБюджет с состоянием ОжидаетОплаты добавляется ссылка на заявку.
// Параметры:
// 	СчетаФактуры - ТаблицаЗначений - Таблица сумм НДС к оплате по счетам-фактурам.	
// 	Колонки таблицы:
//			* СчетФактура - Документ, требующий оплаты НДС
//			* СуммаОплаты - Сумма НДС к оплате
// 	ТипНалога - ПеречислениеСсылка.ТипыНалогов - тип уплачиваемого налога (налоговый агент, ввоз из ЕАЭС и т.п.)
// 	ДокументРегистратор - ДокументСсылка - Документ-регистратор операции.
// 	Проведен - Булево - Признак проведения документа-регистратора.
Процедура ЗарегистрироватьПланированиеОплатыНДСПоСчетамФактурам(СчетаФактуры, ТипНалога, ДокументРегистратор, Проведен) Экспорт

	//++ Локализация
	РегистрыСведений.ПодтверждениеОплатыНДСВБюджет.ЗарегистрироватьПланированиеОплатыНДСПоСчетамФактурам(СчетаФактуры, ТипНалога, ДокументРегистратор, Проведен);
	//-- Локализация

КонецПроцедуры

// Регистрирует фактическую оплату НДС по документам.
// При этом формируются записи регистра ПодтверждениеОплатыНДСВБюджет с состояние Оплачено.
// Параметры:
// 	СчетаФактуры - ТаблицаЗначений - Таблица сумм НДС к оплате по счетам-фактурам.	
// 	Колонки таблицы:
//			* СчетФактура - Документ, требующий оплаты НДС
//			* СуммаОплаты - Сумма НДС к оплате
// 	ДокументРегистратор - ДокументСсылка - Документ-регистратор операции.
// 	РеквизитыДокументаОплаты - Структура - Структура реквизитов документа оплаты 
// 	Состав полей:
// 			* ДатаПеречисленияВБюджет - Дата - дата фактического перечисления НДС в бюджет.
// 			* ТипНалога - ПеречислениеСсылка.ТипыНалогов - тип уплачиваемого налога (налоговый агент, ввоз из ЕАЭС и т.п.)
//			* НомерДокумента - Строка - номер документа перечисления налога
//			* ДатаДокумента - Дата - дата документа перечисления налога
// 	Проведен - Булево - Признак проведения документа-регистратора.
Процедура ЗарегистрироватьОплатуНДСПоСчетамФактурам(СчетаФактуры, ДокументРегистратор, РеквизитыДокументаОплаты, Проведен) Экспорт

	//++ Локализация
	РегистрыСведений.ПодтверждениеОплатыНДСВБюджет.ЗарегистрироватьОплатуНДСПоСчетамФактурам(СчетаФактуры,
																							ДокументРегистратор,
																							РеквизитыДокументаОплаты,
																							Проведен);
	//-- Локализация

КонецПроцедуры

// Обновляет заголовок команды просмотра состояния оплаты НДС по документу при возникновении 
// события ИзменениеСостоянияОплатыНДСПоСчетуФактуре.
// 
// Параметры:
// 	СчетФактура - ОпределяемыйТип.СчетФактура - Документ, требующий оплаты НДС.
// 	КомандаСостояния - КнопкаФормы - Элемент команды просмотра состояния.
Процедура УстановитьЗаголовокСостоянияОплатыНДСПоСчетуФактуре(СчетФактура, КомандаСостояния) Экспорт

	//++ Локализация
	КомандаСостояния.Заголовок = РегистрыСведений.ПодтверждениеОплатыНДСВБюджет.ТекстСостояниеОплатыНДСВБюджет(СчетФактура);
	КомандаСостояния.Доступность = ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.ПодтверждениеОплатыНДСВБюджет);
	//-- Локализация

КонецПроцедуры

#КонецОбласти

#Область Проведение

// Процедура формирования движений по регистрам учета НДС
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные значения, связанные с документом.
//	Движения - КоллекцияДвижений,Структура - коллекция наборов записей движений документа.
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	//++ Локализация
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
#Область НДСЗаписиКнигиПродаж
	
	Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаНДСЗаписиКнигиПродаж") Тогда
		
		ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСЗаписиКнигиПродаж;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Движения, "НДСЗаписиКнигиПродаж")
			 ИЛИ ТаблицаДвижений.Количество() > 0 Тогда
			Движения.НДСЗаписиКнигиПродаж.Записывать = Истина;
			Движения.НДСЗаписиКнигиПродаж.Загрузить(ТаблицаДвижений);
			Движения.НДСЗаписиКнигиПродаж.УстановитьАктивность(Истина);
		КонецЕсли;
	
	КонецЕсли;
	
#КонецОбласти

#Область НДСЗаписиКнигиПокупок
	
	Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаНДСЗаписиКнигиПокупок") Тогда
		
		ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСЗаписиКнигиПокупок;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Движения, "НДСЗаписиКнигиПокупок")
			 ИЛИ ТаблицаДвижений.Количество() > 0 Тогда
			Движения.НДСЗаписиКнигиПокупок.Записывать = Истина;
			Движения.НДСЗаписиКнигиПокупок.Загрузить(ТаблицаДвижений);
			Движения.НДСЗаписиКнигиПокупок.УстановитьАктивность(Истина);
		КонецЕсли;
	КонецЕсли;
	
#КонецОбласти

#Область НДСПредъявленный
	
	Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаНДСПредъявленный") Тогда
		
		ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСПредъявленный;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Движения, "НДСПредъявленный")
			 ИЛИ ТаблицаДвижений.Количество() > 0 Тогда
			Движения.НДСПредъявленный.Записывать = Истина;
			Движения.НДСПредъявленный.Загрузить(ТаблицаДвижений);
			Движения.НДСПредъявленный.УстановитьАктивность(Истина);
		КонецЕсли;
		
	КонецЕсли;
	
#КонецОбласти

#Область ЖурналУчетаСчетовФактур
	
	Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаЖурналУчетаСчетовФактур") Тогда
	
		ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЖурналУчетаСчетовФактур;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Движения, "ЖурналУчетаСчетовФактур")
			 ИЛИ ТаблицаДвижений.Количество() > 0 Тогда
			Движения.ЖурналУчетаСчетовФактур.Записывать = Истина;
			Движения.ЖурналУчетаСчетовФактур.Загрузить(ТаблицаДвижений);
		КонецЕсли;
		
	КонецЕсли;
	
#КонецОбласти

#Область НДССостояниеРеализации0
	
	Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаНДССостояниеРеализации0") Тогда
		
		ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДССостояниеРеализации0;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Движения, "НДССостояниеРеализации0")
			 ИЛИ ТаблицаДвижений.Количество() > 0 Тогда
			Движения.НДССостояниеРеализации0.Записывать = Истина;
			Движения.НДССостояниеРеализации0.Загрузить(ТаблицаДвижений);
		КонецЕсли;
		
	КонецЕсли;
	
#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	
	Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаДанныеОснованийСчетовФактур") Тогда
	
		ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДанныеОснованийСчетовФактур;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Движения, "ДанныеОснованийСчетовФактур")
			 ИЛИ ТаблицаДвижений.Количество() > 0 Тогда
			Движения.ДанныеОснованийСчетовФактур.Записывать = Истина;
			Движения.ДанныеОснованийСчетовФактур.Загрузить(ТаблицаДвижений);
		КонецЕсли;
	
	КонецЕсли;
	
#КонецОбласти
	
#Область ТоварыКОформлениюЗаявленийОВвозеТоваров

	Если ДополнительныеСвойства.ТаблицыДляДвижений.Свойство("ТаблицаТоварыКОформлениюЗаявленийОВвозеТоваров") Тогда
	
		ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюЗаявленийОВвозеТоваров;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Движения, "ТоварыКОформлениюЗаявленийОВвозе")
			 ИЛИ ТаблицаДвижений.Количество() > 0 Тогда
			Движения.ТоварыКОформлениюЗаявленийОВвозе.Записывать = Истина;
			Движения.ТоварыКОформлениюЗаявленийОВвозе.Загрузить(ТаблицаДвижений);
		КонецЕсли;
	КонецЕсли;
	
#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения остатков собственных товаров в учете входящего НДС.
// Операция формирует движения по регистрам НДСПредъявленный, ДанныеОснованийСчетовФактур.
//
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстТовары - Строка - Текст запроса получения данных документа приобретения.
// 	     [Реквизиты ввода остатки товаров]
// 	     * Период - Дата - Дата отражения ввода остатков.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * ВводОстатков22 - Булево - Признак того, что документ создан на версии 2.2 или ранее.
// 	     * Организация - СправочникСсылка.Организации - Организация, в которой вводятся остатки товаров.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, в которое вводятся остатки товаров.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Поставщик товаров.
// 	     * ПартияПриобретенияТоваров - ОпределяемыйТип.СчетаФактуры - Ссылка на документ-партию приобретения товаров.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС под который вводятся остатки товаров.
// 	     [Сведения об остатках товаров]
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Товар.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика товара.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС товара.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов остатков товара.
// 	     * НомерГТД - СправочникСсылка.НомераГТД - Номер ГТД, по которой ввозился товар.
// 	     * СуммаБезНДСРегл - Число - Сумма без НДС остатка товара в валюте регл. учета.
// 	     * СуммаНДСРегл - Число - Сумма НДС остатка товара в валюте регл. учета. 
// 	     * СуммаНДСУпр - Число - Сумма НДС остатка товара в валюте упр. учета.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Идентификатор строки документа ввода остатков.
//
Процедура ОтразитьВводОстатковСобственныхТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	#Область НДСПредъявленный
	
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций", УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.УправленческийУчетОрганизаций(Запрос.Параметры.Период));
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Регистратор,
	|	Товары.Период КАК Период,
	|	Товары.Организация КАК Организация,
	|	Товары.ПартияПриобретенияТоваров КАК СчетФактура,
	|	Товары.Контрагент КАК Поставщик,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС,
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|
	|	Товары.СуммаБезНДСРегл КАК СуммаБезНДС,
	|	Товары.СуммаНДСРегл    КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА Товары.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	#Товары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Товары.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ((Товары.ВводОстатков22 И Товары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)))
	|	   ИЛИ Товары.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию))
	|";
	
	#КонецОбласти
	
	#Область ДанныеОснованийСчетовФактур
	
	ИдентификаторыСчетовФактур = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураПолученный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураПолученный", ИдентификаторыСчетовФактур);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Регистратор,
	|	Товары.Период КАК Период,
	|	&ИдентификаторСчетФактураПолученный КАК ТипСчетаФактуры,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС,
	|					ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ЛОЖЬ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент,
	|
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаНДС,
	|	СУММА(Товары.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	0 КАК БазаНДСРегл,
	|	СУММА(Товары.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Товары.Период) КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	МАКСИМУМ(Товары.Организация) КАК Организация,
	|	МАКСИМУМ(Товары.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Товары.Контрагент) КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон
	|ИЗ
	|	#Товары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Товары.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Товары.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|ГДЕ
	|	Товары.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Товары.ВводОстатков22
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Период,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)),
	|	Товары.СтавкаНДС,
	|	Товары.НомерГТД
	|";
	
	#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	
	ТекстыЗапросовДанныхДокумента = Новый Структура("Товары", ТекстТовары);
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения приобретения товаров, работ, услуг, прочих активов в учете входящего НДС.
// Операция формирует движения по регистрам НДСПредъявленный, ПартииПрочихРасходов (в случае если НДС подлежит распределению по базе), ДанныеОснованийСчетовФактур.
// 
// В модуле менеджера документа должна быть реализована экспортная процедура  ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапросов),
// которая дополняет запрос отражения текстом инициализации ВтСуммыДокументовВВалютахУчета (См. ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета()).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения данных документа приобретения.
// 	     Запрос должен возвращать выборку с полями
// 	     [Реквизиты операции]
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, в которой отражается приобретение.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого регистрируется документ приобретения.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Поставщик ценностей.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор приобретения ценностей.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель ценностей.
// 	     * ДокументПриобретения - ОпределяемыйТип.СчетаФактуры - Ссылка на документ приобретения.
// 	     * ИсправлениеОшибок - Булево - Признак того, что выполняется исправление документа приобретения.
// 	     * КорректировкаПоСогласованиюСторон - Булево - Признак того, что выполняется корректировка документа приобретения по соглашению сторон.
// 	     * ДокументКорректировкиПриобретения - ДокументСсылка.КорректировкаПриобретения - Ссылка на документ корректировки приобретения. 
// 	                                           Заполняется если ИсправлениеОшибок или КорректировкаПоСогласованиюСторон.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС документа приобретения.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС документа приобретения.
// 	                            Определяет порядок учета входящего НДС, если не удалось определить по Назначению или по Статье расходов.
// 	     [Приобретаемые товары]
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Приобретаемый товар, работа или услуга.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика приобретаемого товара, работы или услуги.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС приобретаемых ценностей.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов приобретаемых товаров.
// 	     * НомерГТД - СправочникСсылка.НомераГТД - Номер ГТД, по которой ввозился приобретаемый товар.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Идентификатор строки документа приобретения для получения 
// 	                                                              сумм документа в валюте управленческого или регламентированного учета.
// 	     [Аналитика учета приобретаемых товаров, работ, услуг, прочих активов]
// 	     * НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - Направление деятельности, под которое отражается приобретение.
// 	     * СтатьяРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов - Статья расходов, на которую списываются приобретаемые ценности.
// 	     * АналитикаРасходов - Характеристика.СтатьиРасходов - Аналитика отражения расходов.
// 	     * СтатьяПрочихАктивов - ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов - Статья отражения приобретения прочего актива.
// 	     * АналитикаПрочихАктивов - Характеристика.СтатьиАктивовПассивов - Аналитика отражения прочего актива.
// 	     * Назначение - СправочникСсылка.Назначения - В случае приобретения под обособленную потребность определяет вид деятельности раздельного учета НДС.
// 	     * ПодразделениеУчета - СправочникСсылка.СтруктураПредприятия - Подразделение, в котором учитываются приобретаемые товары, работы услуги, активы.
// 	     * АналитикаУчетаНоменклатуры - СправочникСсылка.КлючиАналитикиУчетаНоменклатуры - Ключ аналитики учета номенклатуры из документа.
// 	                                    Требуется для формирования движений по регистру ПартииПрочихРасходов, если НДС относится к распределению.
// 	     * АналитикаУчетаПартий - СправочникСсылка.КлючиАналитикиУчетаПартий - Ключ аналитики учета партии из документа.
// 	                                    Требуется для формирования движений по регистру ПартииПрочихРасходов, если НДС относится к распределению.
//
Процедура ОтразитьПриобретениеУПоставщика(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСУчитываетсяВСтоимости", УчетНДСУПСлужебный.ТипыНалогообложенияНДСУчитываетсяВСтоимости());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", УчетНДСУП.НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций", УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.УправленческийУчетОрганизаций(Запрос.Параметры.Период));
	
#Область НДСПредъявленный
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументКорректировкиПриобретения
	|		ИНАЧЕ Ценности.ДокументПриобретения
	|	КОНЕЦ КАК СчетФактура,
	|	Ценности.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА СтатьиРасходов.ВидЦенностиНДС
	//++ НЕ УТ
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(Ценности.АналитикаПрочихАктивов) = ТИП(Справочник.ОбъектыЭксплуатации)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС)
	|				КОГДА ТИПЗНАЧЕНИЯ(Ценности.АналитикаПрочихАктивов) = ТИП(Справочник.НематериальныеАктивы)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|				КОГДА ТИПЗНАЧЕНИЯ(Ценности.АналитикаПрочихАктивов) = ТИП(Справочник.ОбъектыСтроительства)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|			КОНЕЦ
	//-- НЕ УТ
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                                                             КАК ВидЦенности,
	|	Ценности.СтавкаНДС                                                КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ 
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) 
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ 
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок 
	|			ТОГДА Ценности.ДокументКорректировкиПриобретения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА Назначения.НаправлениеДеятельности
	|					ИНАЧЕ Ценности.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО 
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.Номенклатура = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|";
	
#КонецОбласти
	
#Область ПартииПрочихРасходов
	
	ТекстЗапросаПартииПрочихРасходов =
	// Формирование движений по распределяемым расходам
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.ПодразделениеУчета КАК Подразделение,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.СтатьяРасходов
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.СтатьяПрочихАктивов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.АналитикаРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.АналитикаПрочихАктивов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументКорректировкиПриобретения
	|		ИНАЧЕ Ценности.ДокументПриобретения
	|	КОНЕЦ КАК ДокументПоступленияРасходов,
	|	Ценности.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Ценности.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Ценности.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	СуммыДокументов.СуммаНДСРегл КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
	|	ЛОЖЬ КАК РасчетПартий,
	|	ДАТАВРЕМЯ(1,1,1) КАК ПериодБазы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|	И НЕ ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьтоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|
	//++ НЕ УТ
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Формирование движений по ОС и НМА
	|ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.ПодразделениеУчета КАК Подразделение,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.СтатьяРасходов
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.СтатьяПрочихАктивов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.АналитикаРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА Ценности.АналитикаПрочихАктивов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументКорректировкиПриобретения
	|		ИНАЧЕ Ценности.ДокументПриобретения
	|	КОНЕЦ КАК ДокументПоступленияРасходов,
	|	Ценности.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Ценности.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Ценности.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	СуммыДокументов.СуммаНДСРегл КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаОтраженияРасходов,
	|	ЛОЖЬ КАК РасчетПартий,
	|	ДАТАВРЕМЯ(1,1,1) КАК ПериодБазы,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL ИЛИ НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL)
	|	И (ВЫБОР
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|		КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		ИЛИ ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|	И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	//-- НЕ УТ
	|";
	
#КонецОбласти
	
#Область ДанныеОснованийСчетовФактур
	
	ПолныеИменаСчетовФактур = Новый Массив;
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураПолученный");
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураПолученныйНалоговыйАгент");
	ИдентификаторыСчетовФактур = ОбщегоНазначения.ИдентификаторыОбъектовМетаданных(ПолныеИменаСчетовФактур);
	
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураПолученный", ИдентификаторыСчетовФактур["Документ.СчетФактураПолученный"]);
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураНалоговыйАгентПолученный", ИдентификаторыСчетовФактур["Документ.СчетФактураПолученныйНалоговыйАгент"]);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	ВЫБОР 
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА &ИдентификаторСчетФактураНалоговыйАгентПолученный
	|		ИНАЧЕ &ИдентификаторСчетФактураПолученный
	|	КОНЕЦ КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА СтатьиРасходов.ВидЦенностиНДС
	//++ НЕ УТ
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(Ценности.АналитикаПрочихАктивов) = ТИП(Справочник.ОбъектыЭксплуатации)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС)
	|				КОГДА ТИПЗНАЧЕНИЯ(Ценности.АналитикаПрочихАктивов) = ТИП(Справочник.НематериальныеАктивы)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|				КОГДА ТИПЗНАЧЕНИЯ(Ценности.АналитикаПрочихАктивов) = ТИП(Справочник.ОбъектыСтроительства)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|			КОНЕЦ
	//-- НЕ УТ
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР 
	|		КОГДА НЕ СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА СпрВидыЗапасов.ТипЗапасов
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В(&ТипыНоменклатурыТовар) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) 
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументПриобретения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	МАКСИМУМ(Ценности.ИсправлениеОшибок) КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.КорректировкаПоСогласованиюСторон) КАК КорректировкаПоСогласованиюСторон
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА &ИдентификаторСчетФактураНалоговыйАгентПолученный
	|		ИНАЧЕ &ИдентификаторСчетФактураПолученный
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|			ТОГДА СтатьиРасходов.ВидЦенностиНДС
	//++ НЕ УТ
	|		КОГДА НЕ СтатьиАктивовПассивов.Ссылка ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(Ценности.АналитикаПрочихАктивов) = ТИП(Справочник.ОбъектыЭксплуатации)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС)
	|				КОГДА ТИПЗНАЧЕНИЯ(Ценности.АналитикаПрочихАктивов) = ТИП(Справочник.НематериальныеАктивы)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|				КОГДА ТИПЗНАЧЕНИЯ(Ценности.АналитикаПрочихАктивов) = ТИП(Справочник.ОбъектыСтроительства)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|			КОНЕЦ
	//-- НЕ УТ
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА НЕ СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА СпрВидыЗапасов.ТипЗапасов
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В(&ТипыНоменклатурыТовар) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) 
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументПриобретения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ
	|";
	
#КонецОбласти

	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ПартииПрочихРасходов", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ПартииПрочихРасходов", ТекстЗапросаПартииПрочихРасходов);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// Дополняет тексты запроса отражения документа текстами отражения возврата товаров от покупателя.
// Операция формирует движения по регистрам НДСПредъявленный, НДСЗаписиКнигиПокупок, ДанныеОснованийСчетовФактур.
//
/// В модуле менеджера документа должна быть реализована экспортная процедура  ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапросов),
// которая дополняет запрос отражения текстом инициализации ВтСуммыДокументовВВалютахУчета (См. ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета()).
//
// // Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения из документа возврата.
// 	     Запрос должен возвращать выборку полей
// 	     [Реквизиты операции]
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, в которой отражается возврат.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, в котором отражается возврат.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Покупатель, возвращающий товары.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор с покупателем.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель возвращаемых товаров.
// 	     * ПокупательНеПлательщикНДС - Булево - Признак того, что покупатель возвращающий товары не является плательщиком НДС и счет-фактура от него не ожидается.
// 	     * РозничныйПокупатель - Булево - Признак того, что товар возвращает розничный покупатель.
// 	     * ДенежныеСредстваРозничномуПокупателюВозвращены - Булево - Признак того, что розничному покупателю возвращены денежные средства.
// 	     * НомерДокументаВозвратаДСРозничномуПокупателю - Строка - Номер документа возврата денежных средств розничному покупателю.
// 	     * ДатаДокументаВозвратаДСРозничномуПокупателю - Дата - Дата документа возврата денежных средств розничному покупателю.
// 	     * ДокументВозврата - ОпределяемыйТип.СчетаФактуры - Документ возврата товаров.
// 	     * ДокументРеализации - ОпределяемыйТип.СчетаФактуры - Ссылка на документ продажи, по которому оформляется возврат. 
// 	     *                                                     Если возврат от неплательщика НДС, то заполнение документа реализации обязательно.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС возврата в случае возврата от плательщика НДС. 
// 	                                                                        Если покупатель не плательщик НДС, то налогообложение реализации.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС, на который относится входящий НДС.
// 	     [Возвращаемые товары]
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Возвращаемый товар.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика возвращаемого товара.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС возвращаемых ценностей.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов возвращаемого товара.
// 	     * НомерГТД - СправочникСсылка.НомераГТД - Номер ГТД, возвращаемого товара.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Идентификатор строки документа возврата.
// 	     [Аналитика учета возвращаемых товаров]
// 	     * НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - Направление деятельности, под которое отражается возврат.
// 	     * Назначение - СправочникСсылка.Назначения - Обособленная потребность, обеспечиваемая возвратом.
//
Процедура ОтразитьВозвратТоваровОтПокупателя(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация
	ТипыНалогообложенияНДСУчитываетсяВСтоимости = УчетНДСУПСлужебный.ТипыНалогообложенияНДСУчитываетсяВСтоимости();
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСУчитываетсяВСтоимости", ТипыНалогообложенияНДСУчитываетсяВСтоимости);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", УчетНДСУП.НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций", УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.УправленческийУчетОрганизаций(Запрос.Параметры.Период));
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", УчетНДСУПСлужебный.ДатаОтраженияВозвратовКорректировочнымиСФ());
	
#Область НДСПредъявленный
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Ценности.Ссылка                        КАК Регистратор,
	|	Ценности.Период                        КАК Период,
	|	Ценности.Организация                   КАК Организация,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС 
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ                                  КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС 
	|			ТОГДА Ценности.Организация 
	|		ИНАЧЕ Ценности.Контрагент
	|	КОНЕЦ                                  КАК Поставщик,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, 
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Ценности.СтавкаНДС                     КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ                                  КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА Назначения.НаправлениеДеятельности
	|					ИНАЧЕ Ценности.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл > 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл < 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.СуммаБезНДСРегл > 0
	|			ТОГДА -СуммыДокументов.СуммаБезНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ                                  КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДСРегл > 0
	|			ТОГДА -СуммыДокументов.СуммаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаНДСРегл
	|	КОНЕЦ                                  КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА СуммыДокументов.СуммаНДСУпр > 0
	|				ТОГДА -СуммыДокументов.СуммаНДСУпр
	|					ИНАЧЕ СуммыДокументов.СуммаНДСУпр
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ                                  КАК НДСУпр,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка)       КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)        КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки                                      КАК ИдентификаторСтроки,
	|	ЛОЖЬ                                                              КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)            КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)         КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                      КАК АналитикаРасходов
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СпрВидыЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И ВЫБОР 
	|		КОГДА Ценности.ПокупательНеПлательщикНДС ИЛИ Ценности.РозничныйПокупатель
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ
	|			НЕ (ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ) В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|			И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Ценности.Ссылка                        КАК Регистратор,
	|	Ценности.Период                        КАК Период,
	|	Ценности.Организация                   КАК Организация,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ                                  КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС 
	|			ТОГДА Ценности.Организация 
	|		ИНАЧЕ Ценности.Контрагент
	|	КОНЕЦ                                  КАК Поставщик,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Ценности.СтавкаНДС                     КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ                                  КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА Назначения.НаправлениеДеятельности
	|					ИНАЧЕ Ценности.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл > 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл < 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.СуммаБезНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ                                  КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаНДСРегл
	|	КОНЕЦ                                  КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА СуммыДокументов.СуммаНДСУпр > 0
	|				ТОГДА СуммыДокументов.СуммаНДСУпр
	|					ИНАЧЕ -СуммыДокументов.СуммаНДСУпр
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ                                  КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)   КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)        КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки                                      КАК ИдентификаторСтроки,
	|	ЛОЖЬ                                                              КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)            КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)         КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                      КАК АналитикаРасходов
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА Ценности.ПокупательНеПлательщикНДС 
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Ценности.РозничныйПокупатель
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.ДенежныеСредстваРозничномуПокупателюВозвращены
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.ВидЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|";
	
#КонецОбласти

#Область НДСЗаписиКнигиПокупок
	ТекстЗапросаНДСЗаписиКнигиПокупок =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Организация КАК Поставщик,
	|	ВЫБОР 
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ КАК СчетФактура,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчетаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	Ценности.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|
	|	СУММА(ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл > 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл < 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.СуммаБезНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаНДСРегл
	|	КОНЕЦ) КАК НДС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	ВЫБОР
	|		КОГДА Ценности.РозничныйПокупатель
	|			ТОГДА ""17""
	|		ИНАЧЕ ""16""
	|	КОНЕЦ КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОтгрузки,
	|	ЕСТЬNULL(Назначения.ВидДеятельностиНДС, Ценности.ВидДеятельностиНДС) КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА Назначения.НаправлениеДеятельности
	|					ИНАЧЕ Ценности.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	СУММА(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА СуммыДокументов.СуммаНДСУпр > 0
	|				ТОГДА СуммыДокументов.СуммаНДСУпр
	|					ИНАЧЕ -СуммыДокументов.СуммаНДСУпр
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ) КАК НДСУпр
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Ценности.РозничныйПокупатель
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.ДенежныеСредстваРозничномуПокупателюВозвращены
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СпрВидыЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|						ТОГДА Назначения.НаправлениеДеятельности
	|					ИНАЧЕ Ценности.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.РозничныйПокупатель
	|			ТОГДА ""17""
	|		ИНАЧЕ ""16""
	|	КОНЕЦ,
	|	ЕСТЬNULL(Назначения.ВидДеятельностиНДС, Ценности.ВидДеятельностиНДС),
	|	Ценности.Период
	|";
	
#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	
	ИдентификаторСчетФактураПолученный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураПолученный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураПолученный", ИдентификаторСчетФактураПолученный);
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА &ИдентификаторСчетФактураВыданный
	|		ИНАЧЕ &ИдентификаторСчетФактураПолученный
	|	КОНЕЦ КАК ТипСчетаФактуры,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	СпрВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|	
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	Ценности.ДокументРеализации КАК КорректируемыйДокумент,
	|
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаБезНДС < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДС
	|			КОГДА СуммыДокументов.СуммаБезНДС > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДС
	|			ИНАЧЕ СуммыДокументов.СуммаБезНДС 
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаНДС < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДС
	|			КОГДА СуммыДокументов.СуммаНДС > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДС
	|			ИНАЧЕ СуммыДокументов.СуммаНДС 
	|		КОНЕЦ) КАК СуммаНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаБезНДСРегл < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДСРегл
	|			КОГДА СуммыДокументов.СуммаБезНДСРегл > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДСРегл
	|			ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл 
	|		КОНЕЦ) КАК СуммаБезНДСРегл,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.БазаНДСРегл < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.БазаНДСРегл
	|			КОГДА СуммыДокументов.БазаНДСРегл > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.БазаНДСРегл
	|			ИНАЧЕ СуммыДокументов.БазаНДСРегл 
	|		КОНЕЦ) КАК БазаНДСРегл,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаНДСРегл < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДСРегл
	|			КОГДА СуммыДокументов.СуммаНДСРегл > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДСРегл
	|			ИНАЧЕ СуммыДокументов.СуммаНДСРегл 
	|		КОНЕЦ) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ) КАК КорректировкаПоСогласованиюСторон
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И НЕ Ценности.РозничныйПокупатель
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	СпрВидыЗапасов.ТипЗапасов,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ,
	|	Ценности.ДокументРеализации,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ
	|";
	
#КонецОбласти

	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда 
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПокупок", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПокупок", ТекстЗапросаНДСЗаписиКнигиПокупок);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// Дополняет запрос отражения документа отражением регистрации ввоза товаров из Таможенного союза.
// Операция формирует движения по регистру ТоварыКОформлениюЗаявленийОВвозе.
//
// В модуле менеджера документа должна быть реализована экспортная процедура  ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапросов),
// которая дополняет запрос отражения текстом инициализации ВтСуммыДокументовВВалютахУчета (См. ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета()).
//
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстТовары - Строка - Текст запроса получения из документа приобретения.
// 	     Запрос должен возвращать выборку полей
// 	     [Реквизиты операции]
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, в которой отражается ввоз товаров из таможенного союза.
// 	     * Контрагент - СправочникСсылка.Контрагенты - Контрагент-поставщик товаров.
// 	     * ДокументПриобретения - ОпределяемыйТип.ОснованиеСчетФактураПолученный - Ссылка на документ приобретения товаров.
// 	     [Ввозимые товары]
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Ввозимая номенклатурная позиция.
// 	     * Характеристика - СправочникСсылка.Характеристики - Характеристика ввозимой номенклатурной позиции.
// 	     * Серия - СправочникСсылка.Характеристики - Серия ввозимой номенклатурной позиции.
// 	     * Количество - Число - Количество ввозимого товара.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Идентификатор строки документа приобретения.
// 	     [Аналитика учета ввозимых товаров]
// 	     * Склад - Справочники.Склады - Склад, на который приобретаются товары.
// 	     * АналитикаУчетаНоменклатуры - СправочникСсылка.КлючиАналитикиУчетаНоменклатуры - Ключ аналитика учета товара.
//
Процедура ОтразитьВвозТоваровИзТаможенногоСоюза(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	
	ТекстТоварыКОформлениюЗаявленийОВвозеТоваров =
	"ВЫБРАТЬ
	|	Товары.Ссылка                          КАК Регистратор,
	|	Товары.Период                          КАК Период,
	|	Товары.Склад                           КАК Склад,
	|	Товары.ДокументПриобретения            КАК ДокументПоступления,
	|	Товары.Номенклатура                    КАК Номенклатура,
	|	Товары.Характеристика                  КАК Характеристика,
	|	Товары.Серия                           КАК Серия,
	|	Товары.Количество                      КАК КОформлению,
	|	СуммыДокументов.СуммаБезНДС            КАК ФактурнаяСтоимость
	|ИЗ
	|	#Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Контрагенты КАК Контрагенты
	|	ПО
	|		Товары.Контрагент = Контрагенты.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Товары.Ссылка = СуммыДокументов.Ссылка
	|		И Товары.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (&ТипыНоменклатурыТовар)
	|";
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ТоварыКОформлениюЗаявленийОВвозеТоваров", Регистры) Тогда 
		ТекстыШаблоновОтражения.Вставить("ТоварыКОформлениюЗаявленийОВвозеТоваров", ТекстТоварыКОформлениюЗаявленийОВвозеТоваров);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Товары", ТекстТовары);
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения реализации товаров, услуг, работ или прочих активов в учете НДС.
// Операция формирует движения по регистрам НДСЗаписиКнигиПродаж, НДССостояниеРеализации0 (в случае реализации на экспорт), ДанныеОснованийСчетовФактур.
//
// В модуле менеджера документа должна быть реализована экспортная процедура  ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапросов),
// которая дополняет запрос отражения текстом инициализации ВтСуммыДокументовВВалютахУчета (См. ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета()).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения данных документа.
// 	     Запрос должен возвращать выборку полей
// 	     [Реквизиты операции]
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается реализация.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого отражается реализация.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Покупатель ценностей.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор реализации.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель товаров.
// 	     * Грузополучатель - СправочникСсылка.Контрагенты - Грузополучатель товаров.
// 	     * РеализацияВРозницу - Булево - Признак того, что товар реализуется в розницу.
// 	     * ДокументРеализации - ОпределяемыйТип.ОснованиеСчетФактураВыданный - Ссылка на документ реализации.
// 	     * ИсправлениеОшибок - Булево - Признак, того что отражается исправление ошибок в документе реализации.
// 	     * КорректировкаПоСогласованиюСторон - Булево - Признак, того что отражается корректировка реализации по соглашению сторон.
// 	     * ДокументКорректировкаРеализации - Неопределено, ДокументСсылка.КорректировкаРеализации - Ссылка на документ корректировки реализации.
// 	                                              Заполняется в случае, если отражается ИсправлениеОшибок или КорректировкаПоСогласованиюСторон. 
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС документа реализации.
// 	     [Реализуемая номенклатура]
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Товар, работа или услуга.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика реализуемой номенклатуры.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС, по которой облагается реализация.
// 	     * КодТНВЭД - СправочникСсылка.КлассификаторТНВЭД - Код ТН ВЭД реализуемого товара.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов реализуемых товаров.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки документа реализации.
//
Процедура ОтразитьРеализациюКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация
#Область НДСЗаписиКнигиПродаж
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	ТекстНДСЗаписиКнигиПродаж =
	"// Начисление НДС
	|ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Покупатель,
	|	Ценности.ДокументРеализации КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ КАК Событие,
	|	Ценности.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК НДС,
	|
	// Хозяйственную операцию заполняем только в случае реализации с особым переходом права.
	// Только в этом случае НДСЗаписиКнигиПродаж является источником для проводок МФУ.
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	СУММА(СуммыДокументов.СуммаНДСУпр) КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И Ценности.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	Ценности.Контрагент,
	|	Ценности.ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|// Подтверждение ставки НДС 0%
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Покупатель,
	|	Ценности.ДокументРеализации КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0) КАК Событие,
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	0 КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ПО
	|		Ценности.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|	
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	И НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	Ценности.Контрагент,
	|	Ценности.ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	НДССостояниеРеализации0.ДатаПодтверждения,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|// НЕ подтверждение ставки НДС 0%
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Покупатель,
	|	Ценности.ДокументРеализации КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	НДССостояниеРеализации0.СтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0) КАК Событие,
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(СуммыДокументов.БазаНДСРегл
	|		* (ВЫБОР НДССостояниеРеализации0.СтавкаНДС
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|					ТОГДА 0.20
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|					ТОГДА 0.18
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|					ТОГДА 0.10
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|					ТОГДА 20/120
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|					ТОГДА 18/118
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|					ТОГДА 10/110
	|				ИНАЧЕ 0
	|			КОНЕЦ)
	|		КАК ЧИСЛО(31,2))) КАК НДС,
	|	
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	0 КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ПО
	|		Ценности.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК СчетФактураНаНеподтвержденнуюРеализацию0
	|	ПО
	|		Ценности.Ссылка = СчетФактураНаНеподтвержденнуюРеализацию0.ДокументОснование
	|		И СчетФактураНаНеподтвержденнуюРеализацию0.Проведен
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	И НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0)
	|	И СчетФактураНаНеподтвержденнуюРеализацию0.Ссылка ЕСТЬ NULL
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	Ценности.Контрагент,
	|	Ценности.ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	НДССостояниеРеализации0.ДатаПодтверждения,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|	КОНЕЦ,
	|	НДССостояниеРеализации0.СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период                       КАК Период,
	|	НДСЗаписиКнигиПродаж.Регистратор                  КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация                  КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель                   КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура                  КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности                  КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС                    КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты                   КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты               КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                      КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия                  КАК ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста   КАК ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод         КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста   КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление                  КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС                  КАК СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС                          КАК НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация         КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПродаж.НДСУпр                       КАК НДСУпр
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Регистратор = &Ссылка
	|	И НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|";
	
#КонецОбласти

#Область НДССостояниеРеализации0
	
	ТекстНДССостояниеРеализации0 = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК ДатаРеализации,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Контрагент,
	|	Ценности.ДокументРеализации КАК ДокументРеализации,
	|	ЕСТЬNULL(НДССостояниеРеализации0.Состояние, ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)) КАК Состояние,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК ДатаПодтверждения,
	|	ВЫРАЗИТЬ(НДССостояниеРеализации0.Комментарий КАК СТРОКА(500)) КАК Комментарий
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО Ценности.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	И Ценности.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|";
	
#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	Запрос.УстановитьПараметр("ТипыНоменклатурыУслугаРабота", УчетНДСУПСлужебный.ТипыНоменклатурыУслугаРабота());
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураВыданный КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	Ценности.КодТНВЭД КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|			ТОГДА 
	|				ВЫБОР КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыУслугаРабота)
	|						ИЛИ ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ЛОЖЬ)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|				КОНЕЦ
	|			ИНАЧЕ Ценности.НалогообложениеНДС
	|		КОНЕЦ) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(Ценности.Грузополучатель) КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	МАКСИМУМ(Ценности.ИсправлениеОшибок) КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.КорректировкаПоСогласованиюСторон) КАК КорректировкаПоСогласованиюСторон
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|	ПО
	|		Ценности.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.РеализацияВРозницу
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|";
	
#КонецОбласти

#Область НДСПредъявленныйСохранение
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Период                     КАК Период,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                        КАК НДС,
	|	НДСПредъявленный.НДСУпр                     КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.РегламентнаяОперация       КАК РегламентнаяОперация,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	
	|ГДЕ
	|	НДСПредъявленный.Регистратор = &Ссылка
	|	И НДСПредъявленный.РегламентнаяОперация
	|";
	
#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПродаж", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПродаж", ТекстНДСЗаписиКнигиПродаж);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДССостояниеРеализации0", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДССостояниеРеализации0", ТекстНДССостояниеРеализации0);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстЦенности);
	
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения возврата товаров поставщику в учете НДС.
// Запрос формируют таблицу движений по регистру НДСЗаписиКнигиПродаж, ДанныеОснованийСчетовФактур.
//
// В модуле менеджера документа должна быть реализована экспортная процедура  ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапросов),
// которая дополняет запрос отражения текстом инициализации ВтСуммыДокументовВВалютахУчета (См. ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета()).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстТовары - Строка - Текст запроса получения данных документа приобретения.
// 	     Запрос должен возвращать выборку полей
// 	     [Реквизиты операции]
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается возврат.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого отражается возврат.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Поставщик товаров.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор реализации.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель возвращаемых товаров.
// 	     * Грузополучатель - СправочникСсылка.Контрагенты - Грузополучатель возвращаемых товаров.
// 	     * ПокупательНеПлательщикНДС - Булево - Признак того, что покупатель возвращающий товары не является плательщиком НДС и счет-фактура от него не ожидается.
// 	     * ДокументВозврата - ОпределяемыйТип.ОснованиеСчетФактураВыданный - Ссылка на документ возврата.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС документа возврата.
// 	     * ДокументПоступления - ОпределяемыйТип.ОснованиеСчетФактураПолученный - Ссылка на документ поступления товаров, по которому осуществляется возврат.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС документа приобретения.
// 	     [Возвращаемая номенклатура]
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Возвращаемый товар.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика возвращаемого товара.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС возвращаемых товаров.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов возвращаемого товара.
// 	     * Назначение - СправочникСсылка.Назначения - В случае приобретения под обособленную потребность определяет вид деятельности раздельного учета НДС.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки документа возврата.
//
Процедура ОтразитьВозвратТоваровПоставщику(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт

	//++ Локализация
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСУчитываетсяВСтоимости", УчетНДСУПСлужебный.ТипыНалогообложенияНДСУчитываетсяВСтоимости());
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", УчетНДСУПСлужебный.ДатаОтраженияВозвратовКорректировочнымиСФ());
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", УчетНДСУП.НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);

#Область НДСЗаписиКнигиПродаж
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	ТекстНДСЗаписиКнигиПродаж =
	"// Начисление НДС
	|ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Покупатель,
	|	Ценности.ДокументВозврата КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ КАК Событие,
	|	Ценности.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СуммыДокументов.БазаНДСРегл КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	СуммыДокументов.СуммаНДСУпр КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.ВидЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И Ценности.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|	И (Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ 
	|		ИЛИ Ценности.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями))
	|";
	
#КонецОбласти
	
#Область НДСПредъявленный
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.ДокументВозврата КАК СчетФактура,
	|	Ценности.Контрагент КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Ценности.СтавкаНДС                          КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			И ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	-СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА -СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ 
	|	И Ценности.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|";
	
#КонецОбласти
	
#Область ДанныеОснованийСчетовФактур
	
	ИдентификаторСчетФактураПолученный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураПолученный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураПолученный", ИдентификаторСчетФактураПолученный);
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА &ИдентификаторСчетФактураПолученный
	|		ИНАЧЕ &ИдентификаторСчетФактураВыданный
	|	КОНЕЦ КАК ТипСчетаФактуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Ценности.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|	
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			И ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	Ценности.ДокументПоступления КАК КорректируемыйДокумент,
	|	
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА СУММА(-СуммыДокументов.СуммаБезНДС)
	|		ИНАЧЕ СУММА(СуммыДокументов.СуммаБезНДС)
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА СУММА(-СуммыДокументов.СуммаНДС)
	|		ИНАЧЕ СУММА(СуммыДокументов.СуммаНДС)
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА СУММА(-СуммыДокументов.СуммаБезНДСРегл)
	|		ИНАЧЕ СУММА(СуммыДокументов.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА СУММА(-СуммыДокументов.БазаНДСРегл)
	|		ИНАЧЕ СУММА(СуммыДокументов.БазаНДСРегл)
	|	КОНЕЦ КАК БазаНДСРегл,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА СУММА(-СуммыДокументов.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(СуммыДокументов.СуммаНДСРегл)
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(Ценности.Грузополучатель) КАК Грузополучатель,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ) КАК КорректировкаПоСогласованиюСторон
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Период,
	|	Ценности.Ссылка,
	|	Ценности.ВидЗапасов.ТипЗапасов,
	|	Ценности.ДокументПоступления,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			И ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|";
	
#КонецОбласти
	
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстТовары);
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПродаж", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПродаж", ТекстНДСЗаписиКнигиПродаж);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения отчета комиссионера в учете НДС.
// Операция формирует движения по регистрам НДСПредъявленный, ДанныеОснованийСчетовФактур.
//
// В модуле менеджера документа должна быть реализована экспортная процедура  ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапросов),
// которая дополняет запрос отражения текстом инициализации ВтСуммыДокументовВВалютахУчета (См. ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета()).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения данных документа.
// 	     Запрос должен возвращать выборку полей
// 	     [Реквизиты операции]
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается отчет комиссионера.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого оформляется отчет комиссионера.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Комиссионер.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор комиссии.
// 	     * Грузоотправитель - СправочникСсылка.Контрагенты - Грузоотправитель товаров.
// 	     * ОтчетКомиссионера - ОпределяемыйТип.ОснованиеСчетФактураКомиссионеру - Отчета комиссионера.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС отчета комиссионера.
// 	     [Реализованная номенклатура, информация о счетах-фактурах, выставленных покупателям]
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Товар или услуга, реализуемая через посредника.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика реализуемой номенклатуры.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС, по которой облагается реализация комиссионных товаров.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов реализуемых товаров.
// 	     * ДатаСчетаФактурыКомиссионера - Дата - Дата выставления счета-фактуры комиссионером покупателю.
// 	     * НомерСчетаФактурыКомиссионера - Дата - Номер счета-фактуры, выставленного комиссионером покупателю.
// 	     * ПокупательКомиссионногоТовара - СправочникСсылка.Контрагент - Покупатель товаров, услуг.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки отчета комиссионеру.
// 	ТекстВознаграждение - Строка - Текст запроса данных по комиссионному вознаграждению.
// 	     Запрос должен содержать выборку полей
// 	     [Реквизиты операции]
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается отчет комиссионера.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого оформляется отчет комиссионера.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Комиссионер.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор комиссии.
// 	     * ОтчетКомиссионера - ОпределяемыйТип.ОснованиеСчетФактураПолученный - Отчета комиссионера.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС отчета комиссионера.
// 	     [Полученные от комиссионера услуги]
// 	     * НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - Направление деятельности, под которое отражается услуга.
// 	     * Услуга - СправочникСсылка.Номенклатура - Услуга по комиссионному вознаграждению.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС вознаграждения.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки вознаграждения.
// 	                                         Если вознаграждение указывается в шапке, то пустой.
//
Процедура ОтразитьОтчетКомиссионера(Запрос, ТекстыЗапроса, Регистры, ТекстТовары, ТекстВознаграждение) Экспорт
	
	//++ Локализация
#Область НДСПредъявленный
	
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСУчитываетсяВСтоимости", УчетНДСУПСлужебный.ТипыНалогообложенияНДСУчитываетсяВСтоимости());
	Запрос.УстановитьПараметр("УправленческийУчетОрганизаций", УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.УправленческийУчетОрганизаций(Запрос.Параметры.Период));
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	Вознаграждение.Ссылка КАК Регистратор,
	|	Вознаграждение.Период КАК Период,
	|	Вознаграждение.Организация КАК Организация,
	|	Вознаграждение.ОтчетКомиссионера КАК СчетФактура,
	|	Вознаграждение.Контрагент КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	Вознаграждение.СтавкаНДС КАК СтавкаНДС,
	|	Вознаграждение.НалогообложениеНДС КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	Вознаграждение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	ВЫБОР
	|		КОГДА &УправленческийУчетОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПустаяСсылка) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Вознаграждение.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	#Вознаграждение КАК Вознаграждение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Вознаграждение.Ссылка = СуммыДокументов.Ссылка
	|		И Вознаграждение.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Вознаграждение.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Вознаграждение.НалогообложениеНДС В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|";
	
#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	
	ПолныеИменаСчетовФактур = Новый Массив;
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураКомиссионеру");
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураПолученный");
	ИдентификаторыСчетовФактур = ОбщегоНазначения.ИдентификаторыОбъектовМетаданных(ПолныеИменаСчетовФактур);
	
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураКомиссионеру", ИдентификаторыСчетовФактур["Документ.СчетФактураКомиссионеру"]);
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураПолученный", ИдентификаторыСчетовФактур["Документ.СчетФактураПолученный"]);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураКомиссионеру КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	Ценности.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	Ценности.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Ценности.ДатаСчетаФактурыКомиссионера,
	|	Ценности.НомерСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Вознаграждение.Ссылка КАК Регистратор,
	|	Вознаграждение.Период КАК Период,
	|	&ИдентификаторСчетФактураПолученный КАК ТипСчетаФактуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) КАК ТипЗапасов,
	|	Вознаграждение.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	Вознаграждение.НалогообложениеНДС КАК ВидДеятельностиНДС,
	|	Вознаграждение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Вознаграждение.Период) КАК Дата,
	|	МАКСИМУМ(Вознаграждение.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Вознаграждение.Организация) КАК Организация,
	|	МАКСИМУМ(Вознаграждение.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Вознаграждение.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Вознаграждение.Договор) КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон
	|
	|ИЗ
	|	#Вознаграждение КАК Вознаграждение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Вознаграждение.Услуга = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Вознаграждение.Ссылка = СуммыДокументов.Ссылка
	|		И Вознаграждение.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Вознаграждение.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СуммыДокументов.СуммаБезНДС <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Вознаграждение.Ссылка,
	|	Вознаграждение.Период,
	|	Вознаграждение.СтавкаНДС,
	|	Вознаграждение.НалогообложениеНДС,
	|	Вознаграждение.НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|";
	
#КонецОбласти

	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстТовары);
	ТекстыЗапросовДанныхДокумента.Вставить("Вознаграждение", ТекстВознаграждение);
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения отчета комитенту в учете НДС.
// Операция формирует движения по регистрам НДСЗаписиКнигиПродаж, ДанныеОснованийСчетовФактур.
//
// В модуле менеджера документа должна быть реализована экспортная процедура  ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапросов),
// которая дополняет запрос отражения текстом инициализации ВтСуммыДокументовВВалютахУчета (См. ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета()).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения данных документа.
// 	     Запрос должен возвращать выборку полей
// 	     [Реквизиты операции]
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается отчет комитенту.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого оформляется отчет комитенту.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Комитент.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор c комитентом.
// 	     * ОтчетКомитенту - ОпределяемыйТип.ОснованиеСчетФактураВыданный - Отчета комитенту.
// 	     * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС отчета комитенту.
// 	     [Реализованная номенклатура, счета-фактуры, выставленные покупателям]
// 	     * Номенклатура - СправочникСсылка.Номенклатура - Реализованный товар или услуга.
// 	     * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика реализованной номенклатуры.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС, по которой облагается реализация комиссионных товаров.
// 	     * ВидЗапасов - СправочникСсылка.ВидыЗапасов - Вид запасов реализуемых товаров.
// 	     * ДатаСчетаФактурыВыданногоПокупателю - Дата - Дата счета-фактуры, выставленного покупателю.
// 	     * ПокупательКомиссионногоТовара - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Покупатель комиссионного товара.
// 	     * СчетФактураВыданныйПокупателю - ДокументСсылка.СчетФактураВыданный, ДокументСсылка.СчетФактураКомиссионеру 
// 	                                        - Ссылка на счет-фактуру, выставленный покупателю или субкомиссионеру.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки отчета комитенту.
// 	ТекстВознаграждение - Строка - Текст запроса данных по комиссионному вознаграждению.
// 	     Запрос должен содержать выборку полей
// 	     [Реквизиты операции]
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, от имени которой отражается отчет комитенту.
// 	     * Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение, от имени которого оформляется отчет комитенту.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Комитент.
// 	     * Договор - СправочникСсылка.ДоговорыКонтрагентов, СправочникСсылка.ДоговорыМеждуОрганизациями - Договор c комитентом.
// 	     * ОтчетКомитенту - ДокументСсылка.ОснованиеСчетФактураВыданный - Отчета комитенту.
// 	     [Оказанные комитенту услуги]
// 	     * Услуга - СправочникСсылка.Номенклатура - Услуга по комиссионному вознаграждению.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС вознаграждения.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Уникальный идентификатор строки вознаграждения.
// 	                                         Если вознаграждение указывается в шапке, то пустой.
//
Процедура ОтразитьОтчетКомитенту(Запрос, ТекстыЗапроса, Регистры, ТекстТовары, ТекстВознаграждение) Экспорт
	
	//++ Локализация
#Область НДСЗаписиКнигиПродаж
	
	ТекстНДСЗаписиКнигиПродаж =
	"ВЫБРАТЬ
	|	Вознаграждение.Период КАК Период,
	|	Вознаграждение.Ссылка КАК Регистратор,
	|	Вознаграждение.Организация КАК Организация,
	|	Вознаграждение.Контрагент КАК Покупатель,
	|	Вознаграждение.ОтчетКомитенту КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	Вознаграждение.СтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация) КАК Событие,
	|	Вознаграждение.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СуммыДокументов.БазаНДСРегл КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	СуммыДокументов.СуммаНДСУпр КАК НДСУпр
	|ИЗ
	|	#Вознаграждение КАК Вознаграждение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Вознаграждение.Ссылка = СуммыДокументов.Ссылка
	|		И Вознаграждение.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|	
	|ГДЕ
	|	Вознаграждение.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СуммыДокументов.БазаНДСРегл <> 0
	|";

#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	
	ПолныеИменаСчетовФактур = Новый Массив;
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураКомитента");
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураВыданный");
	ИдентификаторыСчетовФактур = ОбщегоНазначения.ИдентификаторыОбъектовМетаданных(ПолныеИменаСчетовФактур);
	
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураКомитента", ИдентификаторыСчетовФактур["Документ.СчетФактураКомитента"]);
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторыСчетовФактур["Документ.СчетФактураВыданный"]);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураКомитента КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ВЫБОР
	|		КОГДА Ценности.ДатаСчетаФактурыВыданногоПокупателю = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА Ценности.Период
	|		ИНАЧЕ Ценности.ДатаСчетаФактурыВыданногоПокупателю
	|	КОНЕЦ КАК ДатаСчетаФактурыКомиссионера,
	|	Ценности.СчетФактураВыданныйПокупателю.Номер КАК НомерСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|	Ценности.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент,
	|	
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.ДатаСчетаФактурыВыданногоПокупателю = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА Ценности.Период
	|		ИНАЧЕ Ценности.ДатаСчетаФактурыВыданногоПокупателю
	|	КОНЕЦ,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	Ценности.СчетФактураВыданныйПокупателю,
	|	Ценности.СчетФактураВыданныйПокупателю.Номер,
	|	Ценности.ПокупательКомиссионногоТовара
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Вознаграждение.Ссылка КАК Регистратор,
	|	Вознаграждение.Период КАК Период,
	|	&ИдентификаторСчетФактураВыданный КАК ТипСчетаФактуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) КАК ТипЗапасов,
	|	Вознаграждение.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Вознаграждение.Период) КАК Дата,
	|	МАКСИМУМ(Вознаграждение.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Вознаграждение.Организация) КАК Организация,
	|	МАКСИМУМ(Вознаграждение.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Вознаграждение.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Вознаграждение.Договор) КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон
	|
	|ИЗ
	|	#Вознаграждение КАК Вознаграждение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Вознаграждение.Услуга = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Вознаграждение.Ссылка = СуммыДокументов.Ссылка
	|		И Вознаграждение.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Вознаграждение.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СуммыДокументов.СуммаБезНДС <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Вознаграждение.Ссылка,
	|	Вознаграждение.Период,
	|	Вознаграждение.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|";
	
#КонецОбласти

	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстТовары);
	ТекстыЗапросовДанныхДокумента.Вставить("Вознаграждение", ТекстВознаграждение);
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПродаж", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПродаж", ТекстНДСЗаписиКнигиПродаж);
	КонецЕсли;
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// Дополняет тексты запроса проведения документа текстами отражения приобретения товаров, работ, услуг, прочих активов в учете входящего НДС.
// Операция формирует движения по регистрам НДСПредъявленный, ПартииПрочихРасходов (в случае если НДС подлежит распределению по базе), ДанныеОснованийСчетовФактур.
// 
// В модуле менеджера документа должна быть реализована экспортная процедура  ИнициализироватьВтСуммыДокументовВВалютахУчета(Запрос, ТекстыЗапросов),
// которая дополняет запрос отражения текстом инициализации ВтСуммыДокументовВВалютахУчета (См. ПроведениеСерверУТ.ИнициализироватьВтСуммыДокументовВВалютахУчета()).
// 
// Параметры:
// 	Запрос - Запрос - Запрос отражения документа.
// 	ТекстыЗапроса - СписокЗначений - Список текстов запроса отражения документа.
// 	Регистры - Неопределено, Структура, Строка - Список регистров для отражения.
// 	ТекстЦенности - Строка - Текст запроса получения данных документа приобретения.
// 	     Запрос должен возвращать выборку с полями
// 	     * Период - Дата - Дата отражения операции.
// 	     * Ссылка - ДокументСсылка - Документ-регистратор операции.
// 	     * ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
// 	     * Организация - СправочникСсылка.Организации - Организация, в которой отражается приобретение.
// 	     * Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Поставщик ценностей.
// 	     * СчетФактура - ОпределяемыйТип.СчетаФактуры - Ссылка на документ приобретения.
// 	     * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Вид деятельности раздельного учета НДС документа приобретения.
// 	     * СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - Ставка НДС приобретаемых ценностей.
// 	     * ИдентификаторСтроки - Строка, УникальныйИдентификатор - Идентификатор строки документа приобретения для получения 
// 	                                                              сумм документа в валюте управленческого или регламентированного учета.
// 	     * НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - Направление деятельности, под которое отражается приобретение.
// 	     * ПодразделениеУчета - СправочникСсылка.СтруктураПредприятия - Подразделение, в котором учитываются приобретаемые товары, работы услуги, активы.
//
Процедура ОтразитьСписаниеНДСНаРасходы(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация
#Область НДСПредъявленный
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.СчетФактура КАК СчетФактура,
	|	Ценности.Контрагент КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК РеализацияЭкспорт,
	|	Ценности.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл <> 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|	ВЫБОР
	|		КОГДА Константы.ВестиУправленческийУчетОрганизаций
	|			  И Ценности.Период >= Константы.ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА СуммыДокументов.СуммаНДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК КорВидДеятельностиНДС,
	|	Ценности.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	Ценности.ПодразделениеУчета КАК Подразделение,
	|	Ценности.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	&СтатьяРасходовСписаниеНДС КАК СтатьяРасходов,
	|	&АналитикаРасходовСписаниеНДС КАК АналитикаРасходов
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) <> 0
	|";
	
#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеСерверУТ.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ПрочийПрограммныйИнтерфейс

#Область ФормированиеЗаданийПоУчетуНДС

// Выполняет формирование заданий по учету НДС по результатам изменения партионных регистров.
//
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер, который содержит временную таблицу ВтИзменениеПартий
//	   ВтИзменениеПартий должна содержать поля: 
//	   * Период - Дата - Период движения партии.
//	   * Организация - СправочникСсылка.Организации - Организация учета партии.
//	   * ДокументПоступленияРасходов - ОпределяемыйТип.СчетФактура - Документ приобретения (документ учета входящего НДС).
//	   * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Исходный вид деятельности раздельного учета НДС
//	   * КорВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Новый вид деятельности раздельного учета НДС 
//
Процедура СформироватьЗаданияПриИзмененииДанныхПартий(МенеджерВременныхТаблиц) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ)     КАК Месяц,
	|	Партии.Организация                      КАК Организация,
	|	Партии.СчетФактура                      КАК СчетФактура
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И (Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|		ИЛИ Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|		ИЛИ Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|		ИЛИ Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|		ИЛИ Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг))
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Партии.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	Партии.Организация                                         КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК СчетФактура
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Партии.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	Партии.Организация                                         КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК СчетФактура
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Партии.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Партии.Организация = РаспределениеНДС.Организация
	|		И Партии.Проведен
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ)                        КАК Месяц,
	|	Партии.Организация                                         КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Партии.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Партии.Организация = РаспределениеНДС.Организация
	|		И Партии.Проведен
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НаВнеоборотныеАктивы)
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РегистрыСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса[0].Выбрать());
	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(РезультатЗапроса[1].Выбрать());
	//-- Локализация
	
КонецПроцедуры

// Возвращает таблицу описания изменений расчетов для формирования заданий на отражение в учете НДС
//
// Возвращаемое значение:
//   ТаблицаЗначений   - таблица значений с колонками:
//     * Документ - документ оплаты, расчетный документ, по которому оформлен счет-фактура
//     * Период - Дата - период изменений состояния расчетов по документу
//     * Контрагент - СправочникСсылка.Контрагенты - контрагент, по которому изменились расчеты.
//     * Организация - СправочникСсылка.Организации - организация, по которой изменились расчеты.
//
Функция НоваяТаблицаИзмененийРасчетов() Экспорт
	
	ТаблицаИзменений = Новый ТаблицаЗначений;
	ТаблицаИзменений.Колонки.Добавить("Документ", Документы.ТипВсеСсылки());
	ТаблицаИзменений.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаИзменений.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаИзменений.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	Возврат ТаблицаИзменений;
	
КонецФункции // НоваяТаблицаИзмененийРасчетов()

// Выполняет отражение в учете НДС изменение состояния взаиморасчетов с поставщиками.
//
// Параметры:
// 	ТаблицаИзменений - таблица значений с колонками
//		* Документ - документ, по которому изменилось состояние взаиморасчетов
//		* Период - период изменения
//
Процедура ОтразитьВУчетеНДСИзменениеРасчетовСПоставщиками(ТаблицаИзменений) Экспорт
	
	//++ Локализация
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Документы.СчетФактураПолученныйАванс.СформироватьДвиженияПоКнигеПродаж(ТаблицаИзменений);
	Документы.СчетФактураНалоговыйАгент.СформироватьДвиженияНДС(ТаблицаИзменений);
	//-- Локализация
	
КонецПроцедуры

// Выполняет отражение в учете НДС изменение состояния взаиморасчетов с клиентами.
//
// Параметры:
// 	ТаблицаИзменений - таблица значений с колонками
//		* Документ - документ, по которому изменилось состояние взаиморасчетов
//		* Период - период изменения
//
Процедура ОтразитьВУчетеНДСИзменениеРасчетовСКлиентами(ТаблицаИзменений) Экспорт
	
	//++ Локализация
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Документы.СчетФактураВыданныйАванс.СформироватьДвиженияПоКнигамПокупокПродаж(ТаблицаИзменений);
	//-- Локализация
	
КонецПроцедуры

// Возвращает текст запроса формирования заданий по учету НДС при изменении движений регистре учета выручки (доходов).
//
// Параметры:
// 	ИмяТаблицыИзмененийРегистра - Строка - Имя временной таблицы изменений контрольного регистра.
// 	          Временная таблица должна содержать колонки:
// 	          * Период - Дата - Период изменения выручки.
// 	          * Организация - СправочникСсылка.Организации - Организация, в которой изменилась выручка.
// 	          * Регистратор - ДокументСсылка - Документ-регистратор движений
// 
// Возвращаемое значение:
// 	ТекстЗапроса - Строка - Текст запроса формирования заданий по учету НДС.
//
Функция ТекстЗапросаФормированияЗаданийПриИзмененииВыручки(ИмяТаблицыИзмененийРегистра) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1,1,1) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПустаяСсылка) КАК Операция,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Документ
	|ГДЕ
	|	ЛОЖЬ
	|";
	
	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	%ИмяТаблицыИзмененийРегистра КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	%ИмяТаблицыИзмененийРегистра КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяТаблицыИзмененийРегистра", ИмяТаблицыИзмененийРегистра);
	//-- Локализация
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса формирования заданий по учету НДС при принятии к учету или модернизации ВНА.
//
// Параметры:
// 	ИмяТаблицыИзмененийРегистра - Строка - Имя временной таблицы изменений контрольного регистра.
// 	          Временная таблица должна содержать колонки:
// 	          * Период - Дата - Период принятия к учету или модернизации ВНА.
// 	          * Организация - СправочникСсылка.Организации - Организация, в которой отражается операция.
// 	          * Регистратор - ДокументСсылка - Документ-регистратор движений
// 
// Возвращаемое значение:
// 	ТекстЗапроса - Строка - Текст запроса формирования заданий по учету НДС.
//
Функция ТекстЗапросаФормированияЗаданийПриПринятииКУчетуИлиМодернизацииВНА(ИмяТаблицыИзмененийРегистра) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1,1,1) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПустаяСсылка) КАК Операция,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Документ
	|ГДЕ
	|	ЛОЖЬ
	|";
	
	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	%ИмяТаблицыИзмененийРегистра КАК Таблица
	|
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяТаблицыИзмененийРегистра", ИмяТаблицыИзмененийРегистра);
	//-- Локализация
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса формирования заданий по учету НДС при регистрации партий прочих расходов.
//
// Параметры:
// 	ИмяТаблицыИзмененийРегистра - Строка - Имя временной таблицы изменений контрольного регистра.
// 	          Временная таблица должна содержать колонки:
// 	          * Период - Дата - Период регистрации партий.
// 	          * Организация - СправочникСсылка.Организации - Организация, в которой регистрируются партии.
// 	          * Регистратор - ДокументСсылка - Документ-регистратор движений
// 	          * ВариантРаспределенияРасходовРегл - ПеречислениеСсылка.ВариантыРаспределенияРасходов - Вариант распределения расходов по в регл. учете.
// 
// Возвращаемое значение:
// 	ТекстЗапроса - Строка - Текст запроса формирования заданий по учету НДС.
//
Функция ТекстЗапросаФормированияЗаданийПриЗаписиПартийПрочихРасходов(ИмяТаблицыИзмененийРегистра) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1,1,1) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПустаяСсылка) КАК Операция,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Документ
	|ГДЕ
	|	ЛОЖЬ
	|";
	//++ Локализация
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	%ИмяТаблицыИзмененийРегистра КАК Таблица
	|ГДЕ
	|	ЕСТЬNULL(Таблица.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	%ИмяТаблицыИзмененийРегистра КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Таблица.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|ГДЕ
	|	ЕСТЬNULL(Таблица.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяТаблицыИзмененийРегистра", ИмяТаблицыИзмененийРегистра);
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует записи в регистр заданий по учету НДС при проведении документа.
//
// Параметры:
// 	Документы - ДокументСсылка - Ссылка на проводимый документ
// 	ДополнительныеСвойства - Структура - Дополнительные свойства документа-объекта, сформированные для проведения.
// 	                                     см. ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения().
// 	                                     В доп. свойствах содержатся временные таблицы с изменениями в контрольных регистрах для учета НДС.
// 
Процедура ОтразитьЗаписиРегистраЗаданий(Документ, ДополнительныеСвойства) Экспорт
	
	//++ Локализация
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда // задания устанавливаются только в главном узле.
		Возврат;
	КонецЕсли;
	
	КонтрольныеВременныеТаблицы = Новый Массив();
	КонтрольныеВременныеТаблицы.Добавить("НДСПредъявленныйЗадания");
	КонтрольныеВременныеТаблицы.Добавить("СостоянияБлокировкиВычетаНДСПоСчетамФактурамЗадания");
	КонтрольныеВременныеТаблицы.Добавить("НДССостояниеРеализации0Задания");
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	ВременныеТаблицы = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	ШаблонЗапросаВыборки = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Месяц        КАК Месяц,
	|	Таблица.Организация  КАК Организация,
	|	Таблица.СчетФактура  КАК СчетФактура
	|ИЗ
	|	&ВременнаяТаблица КАК Таблица
	|";
	
	МассивЗапросовВыборкиЗаданий = Новый Массив;
	МассивЗапросовУничтоженияВт = Новый Массив;	
	Для Каждого ВременнаяТаблица Из КонтрольныеВременныеТаблицы Цикл
		Если ВременныеТаблицы.Таблицы.Найти(ВременнаяТаблица) <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ШаблонЗапросаВыборки, "&ВременнаяТаблица", ВременнаяТаблица);
			МассивЗапросовВыборкиЗаданий.Добавить(ТекстЗапроса);
			
			ТекстЗапросаУничтожения = СтрЗаменить("УНИЧТОЖИТЬ &ВременнаяТаблица", "&ВременнаяТаблица", ВременнаяТаблица);
			МассивЗапросовУничтоженияВт.Добавить(ТекстЗапросаУничтожения);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивЗапросовВыборкиЗаданий.Количество() > 0 Тогда
		
		ТекстЗапросаВыборки = СтрСоединить(МассивЗапросовВыборкиЗаданий, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		ТекстЗапросаУничтоженияВт = СтрСоединить(МассивЗапросовУничтоженияВт, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
		
		МассивТекстовЗапроса = Новый Массив;
		МассивТекстовЗапроса.Добавить(ТекстЗапросаВыборки);
		МассивТекстовЗапроса.Добавить(ТекстЗапросаУничтоженияВт);
		Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Возврат; // нет данных к записи
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			РегистрыСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж.СоздатьЗаписьРегистра(
				Выборка.Месяц,
				Выборка.СчетФактура,
				Выборка.Организация);
		КонецЦикла;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Выполняет доп. обработку заданий к закрытию месяца перед записью.
//
// Параметры
// 	Месяц - Дата - Месяц, на который формируется задание.
// 	Операция - ПеречислениеСсылка.ОперацииЗакрытияМесяца - Операция закрытия месяца, на выполнение которой формируется задание.
// 	Организация - СправочникСсылка.Организации - Организация, по которой формируется задание.
// 	Документ - ДокументСсылка - Документ, проведение которого инициирует задание.
//
Процедура ПередЗаписьюЗаданийКЗакрытиюМесяца(Месяц, Операция, Организация, Документ) Экспорт
	
	//++ Локализация
	//++ НЕ УТ
	Если Операция = Перечисления.ОперацииЗакрытияМесяца.РаспределениеНДС Тогда
		НачалоНалоговогоПериода = УчетНДСПереопределяемый.БлижайшийНалоговыйПериод(Организация, Месяц).Период;
		Если НачалоНалоговогоПериода <> НачалоКвартала(Месяц) Тогда // ситуация расширенного налогового периода
			Если Месяц(Месяц)%3 <> 0 Тогда
				// Задание на распределение НДС по ОС и НМА.
				// В этом случае формируем заданий на первый месяц первого налогового периода.
				Месяц = НачалоНалоговогоПериода;
			Иначе 
				// В других случаях переносим задания на конец первого налогового периода.
				Месяц = НачалоМесяца(КонецКвартала(НачалоНалоговогоПериода));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ
	//-- Локализация
		
КонецПроцедуры

#КонецОбласти

#Область ВыполнениеРегламентныхОпераций

// Выполняет отражение документов в учете НДС.
// 
// Параметры:
// 	 КонецПериода - Дата - Период, по который необходимо выполнить отражение.
// 	 МассивСсылок - Массив - Документы, которые необходимо отразить в учете НДС.
//
Процедура ОтразитьДокументыВУчетеНДС(КонецПериода, МассивСсылок) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученныйНалоговыйАгент.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактураПолученныйНалоговыйАгент
	|ГДЕ
	|	СчетФактураПолученныйНалоговыйАгент.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Основания.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК Основания
	|	ПО
	|		СчетФактураПолученный.СчетФактураОснование = Основания.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеОВвозеТоваров.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
	|ГДЕ
	|	ЗаявлениеОВвозеТоваров.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаможеннаяДекларацияИмпорт.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ТаможеннаяДекларацияИмпорт
	|ГДЕ
	|	ТаможеннаяДекларацияИмпорт.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ИнойДокументПодтвержденияНДС.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.ИнойДокументПодтвержденияНДС КАК ИнойДокументПодтвержденияНДС
	|ГДЕ
	|	ИнойДокументПодтвержденияНДС.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СчетФактураНалоговыйАгент.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|ГДЕ
	|	СчетФактураНалоговыйАгент.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПриобретения.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|	ПО
	|		ДокументыОснования.ДокументОснование = КорректировкаПриобретения.Ссылка
	|ГДЕ
	|	ДокументыОснования.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПриобретения.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|ГДЕ
	|	КорректировкаПриобретения.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииПрочихРасходов.ДокументПоступленияРасходов КАК СчетФактура
	|ИЗ
	|	Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|	ПО
	|		РаспределениеНДС.Ссылка = ПартииПрочихРасходов.Регистратор
	|ГДЕ
	|	РаспределениеНДС.Ссылка В (&МассивСсылок)
	|";
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	СчетаФактуры = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СчетФактура");
	
	Если СчетаФактуры.Количество() > 0 Тогда
		УчетНДСУПСлужебный.СформироватьЗаписиКнигиПокупокПродаж(КонецМесяца(КонецПериода), Неопределено, СчетаФактуры);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Отражает документы в учете НДС, если есть задания.
//
// Параметры:
// 	КонецПериода - Дата - Период, по который необходимо выполнить задания.
// 	Организация - Организация, Массив - Организация или массив организаций для отбора заданий.
// 	СчетаФактуры - ДокументСсылка, Массив - Документ учета НДС или массив документов, по которым необходимо выполнить задания.
//
Процедура ВыполнитьЗаданияПоФормированиюКнигиПокупокПродаж(КонецПериода, Организация = Неопределено, СчетаФактуры = Неопределено) Экспорт
	
	//++ Локализация
	Если Организация <> Неопределено Тогда
		МассивОрганизаций = ОбщегоНазначенияУТКлиентСервер.Массив(Организация);
	Иначе
		МассивОрганизаций = Неопределено;
	КонецЕсли;
	
	Если СчетаФактуры <> Неопределено Тогда
		МассивСчетовФактур = ОбщегоНазначенияУТКлиентСервер.Массив(СчетаФактуры);
	Иначе
		МассивСчетовФактур = Неопределено;
	КонецЕсли;
	
	УчетНДСУПСлужебный.СформироватьЗаписиКнигиПокупокПродаж(КонецПериода, МассивОрганизаций, МассивСчетовФактур);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОписаниеДокументовДляЖурналов

// Добавляет в переданную таблицу хозяйственные операции и документы учета НДС
// для журнала документов Закупи
//
// Параметры:
//  ХозяйственныеОперацииИДокументы - ТаблицаЗначений - Состав колонок см. ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы()
//
Процедура ОписаниеОперацийИТиповДокументовДляЖурналаДокументовЗакупки(ХозяйственныеОперацииИДокументы) Экспорт
	
	//++ Локализация
	
	// ЗаявлениеОВвозе
	
	СтрокаЗаявлениеОВвозеТоваров = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаЗаявлениеОВвозеТоваров;
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров");
	Строка.ПолноеИмяДокумента			= "Документ.ЗаявлениеОВвозеТоваров";
	Строка.КлючНазначенияИспользования 	= "ЗаявленияОВвозеТоваров";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки (заявления о ввозе)';
										|en = 'Purchase documents (import applications)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.ЗаявлениеОВвозеТоваров";
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаЗаявлениеОВвозеТоваров);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаЗаявлениеОВвозеТоваров);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки;
	
	
	// СчетФактураПолученный
	
	СтрокаСчетФактураПолученный = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаСчетФактураПолученный;
	Строка.КлючНазначенияИспользования 	= "СчетаФактурыПолученные";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.СчетФактураПолученный");
	Строка.ПолноеИмяДокумента			= "Документ.СчетФактураПолученный";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки (счета-фактуры)';
										|en = 'Purchase documents (tax invoices)'");
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.НачислениеПоЛизинговомуДоговору;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетКомиссионера;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетКомитенту;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки;
	
	//++ НЕ УТ
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров;
	//-- НЕ УТ
	
	// СчетФактураПолученныйНалоговыйАгент
	
	СтрокаСчетФактураПолученный = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаСчетФактураПолученный;
	Строка.КлючНазначенияИспользования 	= "СчетаФактурыПолученныеНалоговыйАгент";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент");
	Строка.ПолноеИмяДокумента			= "Документ.СчетФактураПолученныйНалоговыйАгент";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки товаров с обратным обложением НДС (счета-фактуры)';
										|en = 'Goods purchase documents with reverse VAT charge (tax invoices)'");
	
	// ТаможеннаяДекларацияИмпорт
	
	СтрокаТаможенныеДекларацииИмпорт = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаТаможенныеДекларацииИмпорт;
	Строка.КлючНазначенияИспользования 	= "ТаможенныеДекларацииИмпорт";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт");
	Строка.ПолноеИмяДокумента			= "Документ.ТаможеннаяДекларацияИмпорт";
	Строка.ИспользуютсяСтатусы          = Истина;
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки (ГТД)';
										|en = 'Purchase documents (CCD)'");
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.ТаможеннаяДекларацияИмпорт";
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаТаможенныеДекларацииИмпорт);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаТаможенныеДекларацииИмпорт);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаТаможенныеДекларацииИмпорт);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки;
	//-- Локализация
	
КонецПроцедуры

// Добавляет в переданную таблицу хозяйственные операции и документы учета НДС
// для журнала документов Продажи
//
// Параметры:
//  ТЗХозОперацииИТипыДокументов - ТаблицаЗначений - Состав колонок см. Обработка.ЖурналДокументовПродажи.Форма.СписокДокументов.ХозяйственныеОперацииИДокументы
//
Процедура ОписаниеОперацийИТиповДокументовДляЖурналаДокументовПродажи(ТЗХозОперацииИТипыДокументов) Экспорт
	
	//++ Локализация
	// СчетФактураВыданный
	
	СтрокаСчетФактураВыданный = ТЗХозОперацииИТипыДокументов.Добавить();
	Строка = СтрокаСчетФактураВыданный;
	Строка.КлючНазначенияИспользования 	= "СчетаФактурыВыданные";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.СчетФактураВыданный");
	Строка.ПолноеИмяДокумента			= "Документ.СчетФактураВыданный";
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.СчетФактураВыданный";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы продажи (счета-фактуры)';
										|en = 'Sales documents (tax invoices)'");
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет;
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности;
	
	//++ НЕ УТ
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВыкупТоваровХранителем;
	//-- НЕ УТ
	
	//-- Локализация
КонецПроцедуры

// Добавляет в переданную таблицу хозяйственные операции и документы учета НДС
// для журнала документов Переработки
//
// Параметры:
//  ТЗХозОперацииИТипыДокументов - ТаблицаЗначений - Состав колонок см. Обработка.ЖурналДокументовПереработки.Форма.СписокДокументов.ХозяйственныеОперацииИДокументы
//
Процедура ОписаниеОперацийИТиповДокументовДляЖурналаДокументовПереработки(ТЗХозОперацииИТипыДокументов) Экспорт
	
	//++ Локализация
	// СчетФактураВыданный
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	Строка.КлючНазначенияИспользования	= "ДокументыПриемаВПереработку";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетДавальцу;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента					= Тип("ДокументСсылка.СчетФактураВыданный");
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.СчетФактураВыданный.ПолноеИмя();
	Строка.ЗаголовокРабочегоМеста		= НСтр("ru = 'Документы приема в переработку (все)';
												|en = 'Documents of receipt for tolling (all)'");
	Строка.Порядок						= 13;
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.СчетФактураВыданный";
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	Строка.КлючНазначенияИспользования	= "ДокументыПередачиВПереработку";
	Строка.ХозяйственнаяОперация		= Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента					= Тип("ДокументСсылка.СчетФактураПолученный");
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.СчетФактураПолученный.ПолноеИмя();
	Строка.ЗаголовокРабочегоМеста		= НСтр("ru = 'Документы передачи в переработку (все)';
												|en = 'Documents of transfer to tolling (all)'");
	Строка.Порядок						= 24;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ПодключениеКБСП

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьПолныйДоступКУчетуНДС(ОписаниеПрофиля) Экспорт
	
	//++ Локализация
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеКорректировокВидовДеятельностиНДС");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеНДССостояниеРеализации0");
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеТаможенныхДекларацийИмпорта");
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеКорректировокВидовДеятельностиНДС");
	ОписаниеПрофиля.Роли.Добавить("ЧтениеРегистровНДС");
	
	//++ НЕ УТ
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеТаможенныхДекларацийЭкспорт");
	//-- НЕ УТ
	ДобавитьДобавлениеИзменениеСчетовФактурВыданных(ОписаниеПрофиля);
	ДобавитьДобавлениеИзменениеСчетовФактурВыданныхНаАванс(ОписаниеПрофиля);
	ДобавитьДобавлениеИзменениеСчетовФактурКомиссионеру(ОписаниеПрофиля);
	ДобавитьДобавлениеИзменениеСчетовФактурКомитента(ОписаниеПрофиля);
	ДобавитьДобавлениеИзменениеСчетовФактурНалоговогоАгента(ОписаниеПрофиля);
	ДобавитьДобавлениеИзменениеСчетовФактурНаНеподтвержденнуюРеализацию0(ОписаниеПрофиля);
	ДобавитьДобавлениеИзменениеСчетовФактурПолученных(ОписаниеПрофиля);
	ДобавитьДобавлениеИзменениеСчетовФактурПолученныхНаАванс(ОписаниеПрофиля);
	ДобавитьДобавлениеИзменениеСчетовФактурПолученныхНалоговогоАгента(ОписаниеПрофиля);
	ДобавитьДобавлениеИзменениеЗаявленийОВвозеТоваров(ОписаниеПрофиля);
	ДобавитьЧтениеТоваровКОформлениюТаможенныхДеклараций(ОписаниеПрофиля);
	ДобавитьЧтениеДокументовПоУчетуНДС(ОписаниеПрофиля);
	//-- Локализация
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеТаможенныхДекларацийИмпорта(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеТаможенныхДекларацийИмпорта");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеТаможенныхДекларацийИмпорта(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеТаможенныхДекларацийИмпорта");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеТоваровКОформлениюТаможенныхДеклараций(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеТоваровКОформлениюТаможенныхДеклараций");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеДокументовПоУчетуНДС(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеДокументовПоУчетуНДС");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеЗаявленийОВвозеТоваров(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеЗаявленийОВвозеТоваров");
	
КонецПроцедуры

//-- Локализация

// См. ОбщийМодуль.ВариантыОтчетовПереопределяемый.ОпределитьОбъектыСКомандамиОтчетов()
//
Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт
	
	//++ Локализация
	Объекты.Добавить(Метаданные.Документы.БлокировкаВычетаНДС);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПокупок);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж);
	Объекты.Добавить(Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	Объекты.Добавить(Метаданные.Документы.КорректировкаВидаДеятельностиНДС);
	Объекты.Добавить(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров);
	Объекты.Добавить(Метаданные.Документы.РаспределениеНДС);
	Объекты.Добавить(Метаданные.Документы.СписаниеНДСНаРасходы);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомиссионеру);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомитента);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйАванс);
	Объекты.Добавить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт);
	Объекты.Добавить(Метаданные.Документы.ИнойДокументПодтвержденияНДС);
	//++ НЕ УТ
	Объекты.Добавить(Метаданные.Документы.ТаможеннаяДекларацияЭкспорт);
	Объекты.Добавить(Метаданные.Документы.ФормированиеЗаписейРаздела7ДекларацииНДС);
	//-- НЕ УТ
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовНДС);
	//-- Локализация

КонецПроцедуры

// См. ОбщийМодуль.ВариантыОтчетовУТПереопределяемый.НастроитьВариантыОтчетов()
// 
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	//++ Локализация
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализРаспределенияНДС);
	ОписаниеОтчета.Включен = Ложь;	
	//++ НЕ УТ
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализСостоянияНалоговогоУчетаПоНДС);
	ОписаниеОтчета.Включен = Ложь;
	//-- НЕ УТ
	//-- Локализация
		
КонецПроцедуры

// См. ОбщийМодуль.ДатыЗапретаИзмененияПереопределяемый.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения()
//
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт

	//++ Локализация
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.БлокировкаВычетаНДС",        "Дата", "РегламентныеОперации", "Организация");	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаписьКнигиПокупок",         "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаписьКнигиПродаж",          "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаявлениеОВвозеТоваров",     "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.КорректировкаНалогообложенияНДСПартийТоваров", "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.РаспределениеНДС",           "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СписаниеНДСНаРасходы",       "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураВыданный",        "Дата", "ПродажиВозвратыОтКлиентов", "Организация");

	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураВыданныйАванс",   "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураКомиссионеру",    "Дата", "ПродажиВозвратыОтКлиентов", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураКомитента",       "Дата", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураНалоговыйАгент",  "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураНаНеподтвержденнуюРеализацию0", "Дата", "ПродажиВозвратыОтКлиентов", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураПолученный",      "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураПолученныйНалоговыйАгент", "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СчетФактураПолученныйАванс", "ДатаОтраженияВРеглУчете", "РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ТаможеннаяДекларацияИмпорт", "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ИнойДокументПодтвержденияНДС", "Дата", "ЗакупкиВозвратыПоставщикамПеремещенияСборки", "Организация");
	//++ НЕ УТ
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ТаможеннаяДекларацияЭкспорт","Дата", "ПродажиВозвратыОтКлиентов", "Организация");
	//-- НЕ УТ
	РегистрыСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж.ОписаниеРегистровДляКонтроляДатЗапретаИзменения(ИсточникиДанных);
	//-- Локализация

КонецПроцедуры

// См. ОбщийМодуль.ПодключаемыеКомандыПереопределяемый.ПриОпределенииКомандПодключенныхКОбъекту()
//	
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	//++ Локализация
	Если НастройкиФормы.ИмяФормы = "Обработка.ЖурналДокументовНДС.Форма.СписокДокументов" Тогда
		Обработки.ЖурналДокументовНДС.ПриОпределенииКомандПодключенныхКОбъекту(Команды);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// См. ОбщийМодуль.СозданиеНаОснованииПереопределяемый.ПриОпределенииОбъектовСКомандамиСозданияНаОсновании()
//   
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт
	
	//++ Локализация
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПокупок);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж);
	Объекты.Добавить(Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	Объекты.Добавить(Метаданные.Документы.КорректировкаВидаДеятельностиНДС);
	Объекты.Добавить(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров);
	Объекты.Добавить(Метаданные.Документы.РаспределениеНДС);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданныйАванс);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомиссионеру);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомитента);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйАванс);
	Объекты.Добавить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт);
	//++ НЕ УТ
	Объекты.Добавить(Метаданные.Документы.ТаможеннаяДекларацияЭкспорт);
	//-- НЕ УТ
	//-- Локализация
	
КонецПроцедуры

// Определяет объекты конфигурации, в модулях менеджеров которых размещена процедура ДобавитьКомандыПечати,
// формирующая список команд печати, предоставляемых этим объектом.
// Синтаксис процедуры ДобавитьКомандыПечати см. в документации к подсистеме.
//
// Параметры:
//  СписокОбъектов - Массив - менеджеры объектов с процедурой ДобавитьКомандыПечати.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт

	//++ Локализация
	СписокОбъектов.Добавить(Документы.БлокировкаВычетаНДС);
	СписокОбъектов.Добавить(Документы.ЗаписьКнигиПокупок);
	СписокОбъектов.Добавить(Документы.ЗаписьКнигиПродаж);
	СписокОбъектов.Добавить(Документы.ЗаявлениеОВвозеТоваров);
	СписокОбъектов.Добавить(Документы.РаспределениеНДС);
	СписокОбъектов.Добавить(Документы.СписаниеНДСНаРасходы);
	СписокОбъектов.Добавить(Документы.СчетФактураВыданный);
	СписокОбъектов.Добавить(Документы.СчетФактураВыданныйАванс);
	СписокОбъектов.Добавить(Документы.СчетФактураКомиссионеру);
	СписокОбъектов.Добавить(Документы.СчетФактураНалоговыйАгент);
	СписокОбъектов.Добавить(Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
	СписокОбъектов.Добавить(Документы.СчетФактураПолученныйАванс);
	СписокОбъектов.Добавить(Документы.ТаможеннаяДекларацияИмпорт);
	//++ НЕ УТ
	СписокОбъектов.Добавить(Документы.ТаможеннаяДекларацияЭкспорт);
	СписокОбъектов.Добавить(Документы.ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде);
	//-- НЕ УТ
	СписокОбъектов.Добавить(Обработки.ЖурналДокументовНДС);
	//-- Локализация
	
КонецПроцедуры

// Переопределяет список команд печати, получаемый функцией УправлениеПечатью.КомандыПечатиФормы.
// Используется для общих форм, у которых нет модуля менеджера для размещения в нем процедуры ДобавитьКомандыПечати,
// для случаев, когда штатных средств добавления команд в такие формы недостаточно. Например, если нужны свои команды,
// которых нет в других объектах.
// 
// Параметры:
//  ИмяФормы             - Строка - полное имя формы, в которой добавляются команды печати;
//  КомандыПечати        - ТаблицаЗначений - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати;
//  СтандартнаяОбработка - Булево - при установке значения Ложь не будет автоматически заполняться коллекция КомандыПечати.
//
Процедура ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	Если ИмяФормы = "Документ.СчетФактураВыданный.Форма.ФормаОформленияСчетовФактур" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		
		// Счет-фактура
		КомандаПечати = КоллекцияКомандПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактура";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура';
											|en = 'Tax invoice'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
		КомандаПечати.Порядок = 1;
		
		Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
			// Счет-фактура (в валюте)
			КомандаПечати = КоллекцияКомандПечати.Добавить();
			КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
			КомандаПечати.Идентификатор = "СчетФактураВВалюте";
			КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)';
												|en = 'Tax invoice (in currency)'");
			КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
			КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
			КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
			КомандаПечати.Порядок = 2;
		КонецЕсли;
		КоллекцияКомандПечати.ЗаполнитьЗначения("ДокументыРеализацииКоманднаяПанель", "МестоРазмещения");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
	ИначеЕсли ИмяФормы = "Документ.СчетФактураНалоговыйАгент.Форма.ФормаРабочееМесто" Тогда 
		
		СтандартнаяОбработка = Ложь; 
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати(); 
		Документы.СчетФактураНалоговыйАгент.ДобавитьКомандыПечати(КоллекцияКомандПечати); 
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.СчетФактураНалоговыйАгент"); 
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
	ИначеЕсли ИмяФормы = "РегистрСведений.НДССостояниеРеализации0.Форма.ФормаРабочееМесто" Тогда 
		
		СтандартнаяОбработка = Ложь; 
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати(); 
		Документы.СчетФактураНаНеподтвержденнуюРеализацию0.ДобавитьКомандыПечати(КоллекцияКомандПечати); 
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.СчетФактураНаНеподтвержденнуюРеализацию0"); 
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
	
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// См. ОбщийМодуль.УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа()
//
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	//++ Локализация
	Списки.Вставить(Метаданные.Документы.БлокировкаВычетаНДС, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаписьКнигиПокупок, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаписьКнигиПродаж, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаявлениеОВвозеТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.КорректировкаВидаДеятельностиНДС, Истина);
	Списки.Вставить(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.РаспределениеНДС, Истина);
	Списки.Вставить(Метаданные.Документы.СписаниеНДСНаРасходы, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураВыданный, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураВыданныйАванс, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураКомиссионеру, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураКомитента, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураНалоговыйАгент, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученный, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученныйАванс, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент, Истина);
	Списки.Вставить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт, Истина);
	Списки.Вставить(Метаданные.Документы.ИнойДокументПодтвержденияНДС, Истина);
	//++ НЕ УТ
	Списки.Вставить(Метаданные.Документы.ТаможеннаяДекларацияЭкспорт, Истина);
	Списки.Вставить(Метаданные.Документы.ФормированиеЗаписейРаздела7ДекларацииНДС, Истина);
	//-- НЕ УТ
	Списки.Вставить(Метаданные.ЖурналыДокументов.КорректировкиНДС, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ДанныеОснованийСчетовФактур, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.НДССостояниеРеализации0, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПодтверждениеОплатыНДСВБюджет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СостоянияБлокировкиВычетаНДСПоСчетамФактурам, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаФактурыКомиссионерамКОформлению, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаФактурыКомитентовКРегистрации, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураВыданныйАвансПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураВыданныйПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураКомиссионеруПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураКомитентаПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураПолученныйАвансПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураПолученныйПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.ИнойДокументПодтвержденияНДСПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураПолученныйНалоговыйАгентПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.ТаможеннаяДекларацияИмпортПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.РегистрыНакопления.НДСПредъявленный, Истина);
	//-- Локализация
КонецПроцедуры

//++ Локализация

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеСчетовФактурВыданных(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСчетовФактурВыданных");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеСчетовФактурВыданных(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСчетовФактурВыданных");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеСчетовФактурКомиссионеру(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСчетовФактурКомиссионеру");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеСчетовФактурКомиссионеру(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСчетовФактурКомиссионеру");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеСчетовФактурКомитента(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСчетовФактурКомитента");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеСчетовФактурКомитента(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСчетовФактурКомитента");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеСчетовФактурНалоговогоАгента(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСчетовФактурНалоговогоАгента");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеСчетовФактурНалоговогоАгента(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСчетовФактурНалоговогоАгента");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеСчетовФактурПолученных(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСчетовФактурПолученных");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеСчетовФактурПолученных(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСчетовФактурПолученных");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеСчетовФактурПолученныхНалоговогоАгента(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСчетовФактурПолученныхНалоговогоАгента");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеСчетовФактурПолученныхНалоговогоАгента(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСчетовФактурПолученныхНалоговогоАгента");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеСчетовФактурВыданныхНаАванс(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСчетовФактурВыданныхНаАванс");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеСчетовФактурВыданныхНаАванс(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСчетовФактурВыданныхНаАванс");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеСчетовФактурПолученныхНаАванс(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСчетовФактурПолученныхНаАванс");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеСчетовФактурПолученныхНаАванс(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСчетовФактурПолученныхНаАванс");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьЧтениеСчетовФактурНаНеподтвержденнуюРеализацию0(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ЧтениеСчетовФактурНаНеподтвержденнуюРеализацию0");
	
КонецПроцедуры

// Дополняет профиль ролями доступа к метаданным подсистемы учета НДС.
//
// Параметры:
//	ОписаниеПрофиля - Структура - Описание профиля. 
//                                Состав свойств структуры см. УправлениеДоступом.НовоеОписаниеПрофиляГруппДоступа.
//
Процедура ДобавитьДобавлениеИзменениеСчетовФактурНаНеподтвержденнуюРеализацию0(ОписаниеПрофиля) Экспорт
	
	ОписаниеПрофиля.Роли.Добавить("ДобавлениеИзменениеСчетовФактурНаНеподтвержденнуюРеализацию0");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаТабличныхЧастей

// Заполняет ставку НДС в строке табличной части
//
// Параметры:
//   ТекущаяСтрока	- Структура - данные обрабатываемой строки.
//   СтруктураДействий - Структура - структура с действиями, которые нужно произвести.
//   КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//
Процедура ЗаполнитьСтавкуНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	//++ Локализация
	Перем СтруктураПараметровДействия;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСтавкуНДС", СтруктураПараметровДействия) Тогда
		
		Если НЕ КэшированныеЗначения.Свойство("РеквизитыНоменклатуры") Тогда
			КэшированныеЗначения.Вставить("РеквизитыНоменклатуры", Новый Соответствие);
		КонецЕсли;
		
		НалогообложениеНДС = СтруктураПараметровДействия.НалогообложениеНДС;
		
		Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
			Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ Тогда
			
			Реквизиты = КэшированныеЗначения.РеквизитыНоменклатуры.Получить(ТекущаяСтрока.Номенклатура);
			Если Реквизиты = Неопределено Тогда
				Реквизиты = Справочники.Номенклатура.ЗначенияРеквизитовНоменклатуры(ТекущаяСтрока.Номенклатура);
				КэшированныеЗначения.РеквизитыНоменклатуры.Вставить(ТекущаяСтрока.Номенклатура, Реквизиты);
			КонецЕсли;
			СтавкаНДС = Реквизиты.СтавкаНДС;
			СкорректироватьСтавкуНДС(СтавкаНДС, СтруктураПараметровДействия.Дата);
			
		ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			
		ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Номенклатура") Тогда
			СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();
			Реквизиты = КэшированныеЗначения.РеквизитыНоменклатуры.Получить(ТекущаяСтрока.Номенклатура);
			Если Реквизиты = Неопределено Тогда
				Реквизиты = Справочники.Номенклатура.ЗначенияРеквизитовНоменклатуры(ТекущаяСтрока.Номенклатура);
				КэшированныеЗначения.РеквизитыНоменклатуры.Вставить(ТекущаяСтрока.Номенклатура, Реквизиты);
			КонецЕсли;
			Если Реквизиты.ПодакцизныйТовар Тогда
				СтавкаНДС = Реквизиты.СтавкаНДС;
				СкорректироватьСтавкуНДС(СтавкаНДС, СтруктураПараметровДействия.Дата);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтавкаНДС) Тогда
				СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			КонецЕсли;
			
		ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
			Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров
			Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг Тогда
			СтавкаНДС = Перечисления.СтавкиНДС.НДС0;
			
		ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
			СтавкаНДС = СтавкаНДСПоУмолчанию(СтруктураПараметровДействия.Дата, Истина);
			
		Иначе
			СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			
		КонецЕсли;
		
		ТекущаяСтрока.СтавкаНДС = СтавкаНДС;
		
	КонецЕсли;
	//-- Локализация

КонецПроцедуры

// Рассчитывает сумму НДС в строке табличной части
// 
// Параметры:
//  ТекущаяСтрока		 - Структура - данные обрабатываемой строки.
//  СтруктураПараметровДействия - Структура - параметры действия.
//	Используются следующие значения:
//		* ЦенаВключаетНДС - обязательное
//		* НалогообложениеНДС
//		* СтавкаНДС
//  КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//
Процедура ПересчитатьСуммуНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураПараметровДействия, КэшированныеЗначения) Экспорт
	
	//++ Локализация
	Перем СтавкаНДС;
	
	НалогообложениеНДС = Неопределено;
	СтруктураПараметровДействия.Свойство("НалогообложениеНДС", НалогообложениеНДС);
	
	Если НЕ (СтруктураПараметровДействия <> Неопределено И СтруктураПараметровДействия.Свойство("СтавкаНДС", СтавкаНДС)) Тогда
		СтавкаНДС = ТекущаяСтрока.СтавкаНДС;
	КонецЕсли;
	
	Если КэшированныеЗначения.Свойство("ПроцентыСтавокНДС") Тогда
		ТекПроцентНДС = КэшированныеЗначения.ПроцентыСтавокНДС[СтавкаНДС];
	Иначе
		КэшированныеЗначения.Вставить("ПроцентыСтавокНДС", Новый Соответствие);
		ТекПроцентНДС = Неопределено;
	КонецЕсли;
	
	Если ТекПроцентНДС = Неопределено Тогда
		
		ТекПроцентНДС = УчетНДСУПКлиентСервер.ПолучитьСтавкуНДС(СтавкаНДС);
		КэшированныеЗначения.ПроцентыСтавокНДС.Вставить(СтавкаНДС, ТекПроцентНДС);
		
	КонецЕсли;
	
	ТекущаяСтрока.СуммаНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.Сумма,
																	ТекПроцентНДС,
																	СтруктураПараметровДействия.ЦенаВключаетНДС,
																	НалогообложениеНДС);
	//-- Локализация
	
КонецПроцедуры

// Рассчитывает сумму НДС в строке табличной части
// 
// Параметры:
//  ТекущаяСтрока		 - Структура - данные обрабатываемой строки.
//  СтруктураПараметровДействия - Структура - параметры действия.
//	Используются следующие значения:
//		* ЦенаВключаетНДС - обязательное
//		* НалогообложениеНДС
//		* СтавкаНДС
//		* НДСпоСтавкам4и2
//  КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//
Процедура ПересчитатьСуммуНДССуффиксВСтрокеТЧ(ТекущаяСтрока, СтруктураПараметровДействия, КэшированныеЗначения) Экспорт
	
	//++ Локализация
	Перем СтавкаНДС;
	
	НалогообложениеНДС = Неопределено;
	СтруктураПараметровДействия.Свойство("НалогообложениеНДС", НалогообложениеНДС);
	
	Если Не (СтруктураПараметровДействия <> Неопределено
			И СтруктураПараметровДействия.Свойство("СтавкаНДС", СтавкаНДС)) Тогда
		
		СтавкаНДС = ТекущаяСтрока.СтавкаНДС;
		
	КонецЕсли;
	
	Если КэшированныеЗначения.Свойство("ПроцентыСтавокНДС") Тогда
		ТекПроцентНДС = КэшированныеЗначения.ПроцентыСтавокНДС[СтавкаНДС];
	Иначе
		ТекПроцентНДС = Неопределено;
		
		КэшированныеЗначения.Вставить("ПроцентыСтавокНДС", Новый Соответствие);
	КонецЕсли;
	
	Если ТекПроцентНДС = Неопределено Тогда
		
		ТекПроцентНДС = УчетНДСУПКлиентСервер.ПолучитьСтавкуНДС(СтавкаНДС);
		КэшированныеЗначения.ПроцентыСтавокНДС.Вставить(СтавкаНДС, ТекПроцентНДС);
		
	КонецЕсли;
	
	Суффикс = "";
	
	Если СтруктураПараметровДействия.Свойство("Суффикс", Суффикс)
		И Не ЗначениеЗаполнено(Суффикс) Тогда
		Суффикс = "";
	КонецЕсли;
	
	ТекущаяСтрока["СуммаНДС" + Суффикс] = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(
		ТекущаяСтрока["Сумма" + Суффикс],
		ТекПроцентНДС,
		СтруктураПараметровДействия.ЦенаВключаетНДС,
		НалогообложениеНДС);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияДокументовПродажи

Процедура СформироватьЗапросыКорректностиУчетаНДСПродажи(ТекЭлемент, ТекстЗапроса, ПараметрыЗапроса, ДокументПродажи) Экспорт

	//++ Локализация
	Если ТекЭлемент = "КорректностьУказанияПодакцизногоТовараВТабличнойЧастиТовары" Тогда
		
		УчетНДСУПСлужебный.СформироватьЗапросКорректностьУказанияПодакцизногоТовараВТабличнойЧастиТовары(ТекстЗапроса);
		
	ИначеЕсли ТекЭлемент = "КорректностьУказанияТовараСОбратнымОбложениемНДСВТабличнойЧастиТовары" Тогда
		
		УчетНДСУПСлужебный.СформироватьЗапросКорректностьУказанияТовараСОбратнымОбложениемНДСВТабличнойЧастиТовары(ТекстЗапроса);
		
	ИначеЕсли ТекЭлемент = "КорректностьУказанияСтавкиНДС" Тогда
		
		УчетНДСУПСлужебный.СформироватьЗапросКорректностьУказанияСтавкиНДСПродажи(ТекстЗапроса);
		
	ИначеЕсли ТекЭлемент = "КорректностьСуммыНДС" Тогда
		
		УчетНДСУПСлужебный.СформироватьЗапросКорректностьСуммыНДС(ТекстЗапроса);
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Выводит сообщения об ошибках в учете НДС
//
// Параметры:
// ИмяПроверки     - имя выполняемой проверки
// Выборка         - Выборка из результата запроса
// ОписаниеДокументаЗакупки - Структура - описание документа 
// с полями:
// 		ДокументПродажи - ДокументОбъект, для которого необходимо вывести сообщения об ошибках
// 		ИмяТЧ - имя табличной части документа
// 		ПредставлениеТЧ - представление табличной части
// Отказ           - Булево - Флаг отказа от проведения документа.
Процедура СообщитьОбОшибкахКорректностиУчетаНДСПродажи(ИмяПроверки, Выборка, ОписаниеДокументаПродажи, Отказ) Экспорт

	//++ Локализация
	Если ИмяПроверки = "КорректностьУказанияПодакцизногоТовараВТабличнойЧастиТовары" Тогда
		
		УчетНДСУПСлужебный.СообщитьОбОшибкахКорректностьУказанияПодакцизногоТовараВТабличнойЧастиТовары(Выборка, ОписаниеДокументаПродажи.ДокументПродажи, Отказ);
		
	ИначеЕсли ИмяПроверки = "КорректностьУказанияТовараСОбратнымОбложениемНДСВТабличнойЧастиТовары" Тогда
		
		УчетНДСУПСлужебный.СообщитьОбОшибкахКорректностьУказанияТовараСОбратнымОбложениемНДСВТабличнойЧастиТовары(Выборка, ОписаниеДокументаПродажи.ДокументПродажи, Отказ);
		
	ИначеЕсли ИмяПроверки= "КорректностьУказанияСтавкиНДС" Тогда
		
		УчетНДСУПСлужебный.СообщитьОбОшибкахКорректностьУказанияСтавкиНДСПродажи(Выборка, ОписаниеДокументаПродажи, Отказ);
		
	ИначеЕсли ИмяПроверки = "КорректностьСуммыНДС" Тогда 
		
		УчетНДСУПСлужебный.СообщитьОбОшибкахКорректностьСуммыНДС(Выборка, ОписаниеДокументаПродажи, Отказ);
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияДокументовЗакупки

Процедура СформироватьЗапросыКорректностиУчетаНДСЗакупки(ТекЭлемент, ТекстЗапроса, ПараметрыЗапроса, ДокументЗакупки) Экспорт

	//++ Локализация
	Если ТекЭлемент = "КорректностьУказанияСтавкиНДС" Тогда
		
		УчетНДСУПСлужебный.СформироватьЗапросКорректностьУказанияСтавкиНДСЗакупки(ТекстЗапроса);
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Выводит сообщения об ошибках в учете НДС
//
// Параметры:
// ИмяПроверки     - имя выполняемой проверки
// Выборка         - Выборка из результата запроса
// ОписаниеДокументаЗакупки - Структура - описание документа 
// с полями:
// 		ДокументПродажи - ДокументОбъект, для которого необходимо вывести сообщения об ошибках
// 		ИмяТЧ - имя табличной части документа
// 		ПредставлениеТЧ - представление табличной части
// Отказ           - Булево - Флаг отказа от проведения документа.
Процедура СообщитьОбОшибкахКорректностиУчетаНДСЗакупки(ИмяПроверки, Выборка, ОписаниеДокументаЗакупки, Отказ) Экспорт

	//++ Локализация
	Если ИмяПроверки= "КорректностьУказанияСтавкиНДС" Тогда
		
		УчетНДСУПСлужебный.СообщитьОбОшибкахКорректностьУказанияСтавкиНДСЗакупки(Выборка, ОписаниеДокументаЗакупки, Отказ);
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

// Возвращает значение ставки НДС по умолчанию.
//
// Параметры:
//  Дата - Дата - дата на которую необходимо получить ставку НДС по умолчанию,
//               если дата пустая, то будет получена ставка НДС на текущую дату
//  РасчетнаяСтавка - Булево - указывает необходимость получения расчетной ставки НДС X/(100 + X).
//
// Возвращаемое значение:
//  ПеречислениеСсылка.СтавкиНДС - значение ставки НДС.
//
Функция СтавкаНДСПоУмолчанию(Дата = Неопределено, РасчетнаяСтавка = Ложь) Экспорт
	
	ДатаПолучения = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	
	Если ДатаПолучения >= '20190101' Тогда
		Возврат ?(РасчетнаяСтавка, Перечисления.СтавкиНДС.НДС20_120, Перечисления.СтавкиНДС.НДС20);
	Иначе
		Возврат ?(РасчетнаяСтавка, Перечисления.СтавкиНДС.НДС18_118, Перечисления.СтавкиНДС.НДС18);
	КонецЕсли;
	
КонецФункции

// Возвращает текст выбора ставки НДС по умолчанию для подстановки в запрос.
//
// Параметры:
//  ИсточникДаты - Строка - путь к дате в запросе на которую необходимо получить ставку НДС по умолчанию,
//               если дата пустая, то будет получена ставка НДС на текущую дату
//  РасчетнаяСтавка - Булево - указывает необходимость получения расчетной ставки НДС X/(100 + X).
//
// Возвращаемое значение:
//	Строка - текст выбора ставки НДС.
//
Функция ТекстВыбораСтавкиНДСПоУмолчанию(ИсточникДаты = Неопределено, РасчетнаяСтавка = Ложь) Экспорт
	
	Если РасчетнаяСтавка Тогда
		Если ИсточникДаты = Неопределено Тогда
			Если ТекущаяДатаСеанса() > '20190101' Тогда
				Возврат "ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)";
			Иначе
				Возврат "ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)";
			КонецЕсли;
		Иначе
			Возврат СтрШаблон(
				"ВЫБОР
				|	КОГДА %1 >= ДАТАВРЕМЯ(2019, 1, 1) ИЛИ (%1 = ДАТАВРЕМЯ(1, 1, 1) И ДАТАВРЕМЯ(%2) >= ДАТАВРЕМЯ(2019, 1, 1))
				|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
				|	ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
				|КОНЕЦ", ИсточникДаты, Формат(ТекущаяДатаСеанса(), "ДФ='yyyy, MM, dd'"));
		КонецЕсли;
	Иначе
		Если ИсточникДаты = Неопределено Тогда
			Если ТекущаяДатаСеанса() > '20190101' Тогда
				Возврат "ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)";
			Иначе
				Возврат "ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)";
			КонецЕсли;
		Иначе
			Возврат СтрШаблон(
				"ВЫБОР
				|	КОГДА %1 >= ДАТАВРЕМЯ(2019, 1, 1) ИЛИ (%1 = ДАТАВРЕМЯ(1, 1, 1) И ДАТАВРЕМЯ(%2) >= ДАТАВРЕМЯ(2019, 1, 1))
				|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
				|	ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
				|КОНЕЦ", ИсточникДаты, Формат(ТекущаяДатаСеанса(), "ДФ='yyyy, MM, dd'"));
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Возвращает текст выбора процента НДС для подстановки в запрос.
//
// Параметры:
//  ИсточникСтавкаНДС - Строка - путь к ставке НДС в запросе для которой необходимо получить процент НДС.
//
// Возвращаемое значение:
//	Строка - текст выбора процента НДС.
//
Функция ТекстВыбораПроцентаНДС(ИсточникСтавкаНДС) Экспорт
	
	Возврат СтрШаблон(
		"ВЫБОР %1
		|	КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		|		ТОГДА 20
		|	КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
		|		ТОГДА 20
		|	КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
		|		ТОГДА 18
		|	КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
		|		ТОГДА 18
		|	КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|		ТОГДА 10
		|	КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
		|		ТОГДА 10
		|	ИНАЧЕ 0
		|КОНЕЦ", ИсточникСтавкаНДС);
	
КонецФункции

// Возвращает ставку НДС на дату, исходя из налогообложения и свойств товара.
//
// Параметры:
//   НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - налогообложение НДС
//   Дата - Дата - дата, на которую необходимо получить ставку НДС
//   ПодакцизныйТовар - Булево - облагается ли товар акцизами
//   СтавкаНДСТовара - ПеречислениеСсылка.СтавкиНДС - ставка НДС, указанная для товара.
//
// Возвращаемое значение:
//   ПеречислениеСсылка.СтавкиНДС
//
Функция СтавкаНДС(НалогообложениеНДС, Дата, ПодакцизныйТовар, СтавкаНДСТовара) Экспорт
	
	СтрокаНоменклатуры   = Новый Структура("Номенклатура, СтавкаНДС", Справочники.Номенклатура.ПустаяСсылка());
	
	ПараметрыЗаполненияНДС = Новый Структура("НалогообложениеНДС, Дата", НалогообложениеНДС, Дата);
	ДействиеЗаполнитьНДС = Новый Структура("ЗаполнитьСтавкуНДС", ПараметрыЗаполненияНДС);
	
	КэшированныеЗначения = Новый Структура("РеквизитыНоменклатуры", Новый Соответствие);
	ПараметрыНоменклатуры = Новый Структура("ПодакцизныйТовар, СтавкаНДС", ПодакцизныйТовар, СтавкаНДСТовара);
	КэшированныеЗначения.РеквизитыНоменклатуры.Вставить(Справочники.Номенклатура.ПустаяСсылка(), ПараметрыНоменклатуры);
	
	ЗаполнитьСтавкуНДСВСтрокеТЧ(СтрокаНоменклатуры, ДействиеЗаполнитьНДС, КэшированныеЗначения);
	
	Возврат СтрокаНоменклатуры.СтавкаНДС;
	
КонецФункции

// Возвращает список типов налогообложения НДС, по которым НДС не принимается к вычету (учитывается в стоимости или списывается на расходы) 
//
// Возвращаемое значение:
//	Массив - элементы перечисления ТипыНалогообложенияНДС.
//
Функция ТипыНалогообложенияНДСУчитываетсяВСтоимости() Экспорт
	
	ТипыНалогообложенияНДС = Новый Массив;
	//++ Локализация
	ТипыНалогообложенияНДС = УчетНДСУПСлужебный.ТипыНалогообложенияНДСУчитываетсяВСтоимости();
	//-- Локализация
	
	Возврат ТипыНалогообложенияНДС;
	
КонецФункции

// Возвращает список типов налогообложения НДС, по которым НДС не учитывается в стоимости, 
// а подлежит принятию к вычету (при выполнении условий).
//
// Возвращаемое значение:
//	Массив - элементы перечисления ТипыНалогообложенияНДС.
//
Функция ТипыНалогообложенияНДСНеУчитываетсяВСтоимости() Экспорт
	
	ТипыНалогообложенияНДС = Новый Массив;
	//++ Локализация
	ТипыНалогообложенияНДС = УчетНДСУПСлужебный.ТипыНалогообложенияНДСНеУчитываетсяВСтоимости();
	//-- Локализация
	
	Возврат ТипыНалогообложенияНДС;
	
КонецФункции

// Определяет, является ли страна членом Таможенного союза
//
// Параметры:
//	Страна - СправочникСсылка.СтраныМира - Страна, для которой нужно определить членство в Таможенном союзе
//	Период - Дата - Дата, на которую необходимо определить членство в Таможенном союзе для страны. 
//			 Если не указано, то членство определяется на текущую дату.
//
// Возвращаемое значение:
//	Булево - Истина, если страна является членом Таможенного союза, иначе - Ложь.
//
Функция СтранаЯвляетсяЧленомТаможенногоСоюза(Страна, Период = Неопределено) Экспорт
	
	//++ Локализация
	Если Не ЗначениеЗаполнено(Страна) 
		ИЛИ ТипЗнч(Страна) <> Тип("СправочникСсылка.СтраныМира") Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	КодСтраны = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Страна, "Код");
	
	Если Период = Неопределено Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Период >= '2015-01-01' 
			И (КодСтраны = "112" ИЛИ КодСтраны = "398") Тогда // Казахстан, Беларусь
		Возврат Истина;
	КонецЕсли;
	
	Если Период >= '2015-01-02' И КодСтраны = "051" Тогда // Армения
		Возврат Истина;
	КонецЕсли;
	
	Если Период >= '2015-08-12' И КодСтраны = "417" Тогда // Киргизия
		Возврат Истина;
	КонецЕсли;
	//-- Локализация
	Возврат Ложь;
	
КонецФункции

// Возвращает структуру регистров учета НДС
// 
// Параметры:
// 	РегистрыНДС - Структура - Структура регистров НДС, где
// 	                             Ключ - Имя регистра
// 	                             Значение - Менеджер регистра.
//
Функция РегистрыУчетаНДС() Экспорт
	
	РегистрыНДС = Новый Структура();
	//++ Локализация
	РегистрыНДС.Вставить("НДСЗаписиКнигиПродаж",    РегистрыНакопления.НДСЗаписиКнигиПродаж);
	РегистрыНДС.Вставить("НДСЗаписиКнигиПокупок",   РегистрыНакопления.НДСЗаписиКнигиПокупок);
	РегистрыНДС.Вставить("НДСПредъявленный",        РегистрыНакопления.НДСПредъявленный);
	РегистрыНДС.Вставить("ЖурналУчетаСчетовФактур", РегистрыСведений.ЖурналУчетаСчетовФактур);
	РегистрыНДС.Вставить("ДанныеОснованийСчетовФактур", РегистрыСведений.ДанныеОснованийСчетовФактур);
	//-- Локализация
	Возврат РегистрыНДС;
	
КонецФункции

// Заменяет переданную ставку НДС на актуальную на указанную дату.
//
// Параметры:
//  СтавкаНДС - ПеречислениеСсылка.СтавкиНДС - значение ставки НДС, которое необходимо скорректировать
//  Дата - Дата - дата на которую необходимо получить актуальную ставку НДС.
//
// Возвращаемое значение:
//  Булево - Истина, если значение ставки НДС было заменено.
//
Функция СкорректироватьСтавкуНДС(СтавкаНДС, Дата) Экспорт
	
	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Или СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118
		Или СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Или СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
		СтавкаНДСПоУмолчанию = УчетНДСУП.СтавкаНДСПоУмолчанию(Дата, СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118
			Или СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120);
		Если СтавкаНДС <> СтавкаНДСПоУмолчанию Тогда
			СтавкаНДС = СтавкаНДСПоУмолчанию;
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Заменяет ставки НДС в табличной части документа на актуальную на дату документа,
// а также пересчитывает соответствующие суммы НДС.
//
// Параметры:
//  Документ - ДокуменОбъект - объект документа, в табличной части которого необходимо заменить ставки НДС
//  ТабличнаяЧасть - ДокументТабличнаяЧасть - табличная часть документа
//  СтруктураПересчетаСуммы - Структура - см. ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ().
//
Процедура СкорректироватьСтавкуНДСВТЧДокумента(Документ, ТабличнаяЧасть, СтруктураПересчетаСуммы = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ТабличнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураПересчетаСуммы = Неопределено Тогда
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Документ);
	КонецЕсли;
	НалогообложениеНДС = Неопределено;
	СтруктураПересчетаСуммы.Свойство("НалогообложениеНДС", НалогообложениеНДС);
	ДатаАктуальности = ?(ЗначениеЗаполнено(Документ.Дата), Документ.Дата, ТекущаяДатаСеанса());
	
	ЕстьСуммаПродажи = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТабличнаяЧасть[0], "СуммаПродажи");
	
	ПоляНДС = Новый Структура("СуммаНДС, СуммаСНДС, СуммаПродажиНДС, СуммаВознаграждения, СуммаНДСВознаграждения");
	Для каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
		Если СкорректироватьСтавкуНДС(СтрокаТЧ.СтавкаНДС, ДатаАктуальности) Тогда
			ПроцентНДС = УчетНДСУПКлиентСервер.ПолучитьСтавкуНДС(СтрокаТЧ.СтавкаНДС);
			
			ПоляНДС.СуммаНДС = УчетНДСУПКлиентСервер.РассчитатьСуммуНДС(СтрокаТЧ.Сумма, ПроцентНДС,
				СтруктураПересчетаСуммы.ЦенаВключаетНДС, НалогообложениеНДС);
			ПоляНДС.СуммаСНДС = СтрокаТЧ.Сумма + ?(СтруктураПересчетаСуммы.ЦенаВключаетНДС, 0, ПоляНДС.СуммаНДС);
			Если ЕстьСуммаПродажи Тогда
				ПоляНДС.СуммаПродажиНДС = Окр(СтрокаТЧ.СуммаПродажи * ПроцентНДС / (100 + ПроцентНДС), 2, РежимОкругления.Окр15как20);
			Иначе
				ПоляНДС.СуммаПродажиНДС = 0;
			КонецЕсли;
			ПоляНДС.СуммаВознаграждения = 0;
			ПоляНДС.СуммаНДСВознаграждения = 0;
			
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, ПоляНДС);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
