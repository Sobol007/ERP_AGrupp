////////////////////////////////////////////////////////////////////////////////
// Управление доступом к пользователям
//  
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Функция - Получить список доступных подразделений
//
// Параметры:
//  ВозвращатьМассив - Булево - Возвращать массив подразделений. 
//  СтрокаПоиска	 - Строка - Строка поиска. 
// 
// Возвращаемое значение:
//  Массив,ТаблицаЗначений - Список доступных подразделений. 
//
&НаСервере
Функция ПолучитьСписокДоступныхПодразделений(ВозвращатьМассив = Ложь, СтрокаПоиска = Неопределено) Экспорт
	Запрос = Новый Запрос;
	// Если Константы.CRM_ИспользоватьДоступныхПользователей.Получить() Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	CRM_РасширенныйДоступПоПодразделениям.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ тмпРасширенныйДоступ
		|ИЗ
		|	РегистрСведений.CRM_РасширенныйДоступПоПодразделениям КАК CRM_РасширенныйДоступПоПодразделениям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.CRM_ИспользоватьДолжностныеПозиции КАК CRM_ИспользоватьДолжностныеПозиции
		|		ПО CRM_ИспользоватьДолжностныеПозиции.Значение = ИСТИНА
		|ГДЕ
		|	CRM_РасширенныйДоступПоПодразделениям.ДолжностнаяПозиция В ИЕРАРХИИ(&ДолжностнаяПозиция)
		|	И &ДолжностнаяПозиция <> ЗНАЧЕНИЕ(Справочник.CRM_ДолжностныеПозиции.ПустаяСсылка)
		|	И &КОРПВерсия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ тмпТекущееПодразделение
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.ТекущийРуководитель = &ПользовательФЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ тмпДанныеСправочника
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.Ссылка В ИЕРАРХИИ
		|			(ВЫБРАТЬ
		|				тмпТекущееПодразделение.Ссылка
		|			ИЗ
		|				тмпТекущееПодразделение КАК тмпТекущееПодразделение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тмпРасширенныйДоступ.Подразделение КАК Подразделение
		|ИЗ
		|	тмпРасширенныйДоступ КАК тмпРасширенныйДоступ
		|ГДЕ тмпРасширенныйДоступ.Подразделение.Наименование ПОДОБНО &СтрокаПоиска
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	тмпДанныеСправочника.Ссылка
		|ИЗ
		|	тмпДанныеСправочника КАК тмпДанныеСправочника
		|ГДЕ тмпДанныеСправочника.Ссылка.Наименование ПОДОБНО &СтрокаПоиска
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Подразделение
		|ИЗ
		|	(ВЫБРАТЬ
		|		Пользователи.Подразделение КАК Подразделение
		|	ИЗ
		|		Справочник.Пользователи КАК Пользователи
		|	ГДЕ
		|		Пользователи.Ссылка = &Пользователь) КАК ВложенныйЗапрос
		|ГДЕ ВложенныйЗапрос.Подразделение.Наименование ПОДОБНО &СтрокаПоиска";
	// Иначе
	//	Запрос.Текст = "ВЫБРАТЬ
	//	|	СтруктураПредприятия.Ссылка КАК Подразделение
	//	|ИЗ
	//	|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	//	|ГДЕ СтруктураПредприятия.Наименование ПОДОБНО &СтрокаПоиска";
	// КонецЕсли;
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();			   
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	Если Метаданные.Имя = "CRM" Тогда
		Запрос.УстановитьПараметр("ПользовательФЛ", ТекущийПользователь);
	Иначе	
		Запрос.УстановитьПараметр("ПользовательФЛ", ТекущийПользователь.ФизическоеЛицо);
	КонецЕсли;
	Запрос.УстановитьПараметр("ДолжностнаяПозиция", ТекущийПользователь.CRM_ДолжностнаяПозиция);
	Запрос.УстановитьПараметр("КОРПВерсия", CRM_ЛицензированиеСервер.ВариантПоставкиКОРП());
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска+"%");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ ВложенныйЗапрос.Подразделение.Наименование ПОДОБНО &СтрокаПоиска", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ тмпРасширенныйДоступ.Подразделение.Наименование ПОДОБНО &СтрокаПоиска", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ тмпДанныеСправочника.Ссылка.Наименование ПОДОБНО &СтрокаПоиска", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ СтруктураПредприятия.Наименование ПОДОБНО &СтрокаПоиска", "");
	КонецЕсли;
	ТаблицаПодразделений = Запрос.Выполнить().Выгрузить();
	ТаблицаПодразделений.Свернуть("Подразделение");
	МассивПодразделений = ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение");
	СписокПодразделений = Новый СписокЗначений;
	СписокПодразделений.ЗагрузитьЗначения(МассивПодразделений);
	Если ВозвращатьМассив Тогда
		Возврат МассивПодразделений;
	Иначе	
		Возврат СписокПодразделений;	
	КонецЕсли;	
КонецФункции

// Функция - Получить список доступных пользователей
//
// Параметры:
//  ВозвращатьМассив - Булево - Возвращать массив пользователей. 
//  СтрокаПоиска	 - Строка - Строка поиска. 
//  ПолучитьБезОрганичений - Булево - Получить пользователей без ограничений по правам.
// 
// Возвращаемое значение:
//  Массив,ТаблицаЗначений - Список доступных пользователей. 
//
&НаСервере
Функция ПолучитьСписокДоступныхПользователей(ВозвращатьМассив = Ложь, СтрокаПоиска = Неопределено, ПолучитьБезОрганичений = Ложь) Экспорт
	Запрос = Новый Запрос;
	ЭтоРазделенныйСеанс = РаботаВМоделиСервиса.ИспользованиеРазделителяСеанса();
	Если Константы.ИспользоватьРазделениеПоОбластямДанных.Получить() И НЕ ЭтоРазделенныйСеанс Тогда
		МассивПользователей = Новый Массив;
		СписокПользователей = Новый СписокЗначений;
		СписокПользователей.ЗагрузитьЗначения(МассивПользователей);
		
		Если ВозвращатьМассив Тогда
			Возврат МассивПользователей;
		Иначе	
			Возврат СписокПользователей;	
		КонецЕсли;
	КонецЕсли;	
	Если НЕ ПолучитьБезОрганичений И НЕ РольДоступна("ПолныеПрава") Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	CRM_РасширенныйДоступПоПодразделениям.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ тмпРасширенныйДоступ
		|ИЗ
		|	РегистрСведений.CRM_РасширенныйДоступПоПодразделениям КАК CRM_РасширенныйДоступПоПодразделениям
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.CRM_ИспользоватьДолжностныеПозиции КАК CRM_ИспользоватьДолжностныеПозиции
		|		ПО CRM_ИспользоватьДолжностныеПозиции.Значение = ИСТИНА
		|ГДЕ
		|	CRM_РасширенныйДоступПоПодразделениям.ДолжностнаяПозиция В ИЕРАРХИИ(&ДолжностнаяПозиция)
		|	И &ДолжностнаяПозиция <> ЗНАЧЕНИЕ(Справочник.CRM_ДолжностныеПозиции.ПустаяСсылка)
		|	И &КОРПВерсия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Подразделение
		|ПОМЕСТИТЬ тмпТекущееПодразделение
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.ТекущийРуководитель = &ПользовательФЛ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ тмпТекущееПодразделениеПользователя
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО (Пользователи.Подразделение = СтруктураПредприятия.Ссылка)
		|			И (Пользователи.Ссылка = &Пользователь)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураПредприятия.Ссылка
		|ПОМЕСТИТЬ тмпДанныеСправочника
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.Ссылка В ИЕРАРХИИ
		|			(ВЫБРАТЬ
		|				тмпТекущееПодразделениеПользователя.Ссылка
		|			ИЗ
		|				тмпТекущееПодразделениеПользователя КАК тмпТекущееПодразделениеПользователя)
		|	И НЕ СтруктураПредприятия.Ссылка В
		|				(ВЫБРАТЬ
		|					тмпТекущееПодразделениеПользователя.Ссылка
		|				ИЗ
		|					тмпТекущееПодразделениеПользователя КАК тмпТекущееПодразделениеПользователя)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Подразделение
		|ПОМЕСТИТЬ тмпДоступныеПодразделения
		|ИЗ
		|	(ВЫБРАТЬ
		|		тмпРасширенныйДоступ.Подразделение КАК Подразделение
		|	ИЗ
		|		тмпРасширенныйДоступ КАК тмпРасширенныйДоступ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		тмпДанныеСправочника.Ссылка
		|	ИЗ
		|		тмпДанныеСправочника КАК тмпДанныеСправочника) КАК ВложенныйЗапрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь
		|ПОМЕСТИТЬ тмпДляСвертывания
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	(Пользователи.Подразделение В
		|				(ВЫБРАТЬ
		|					тмпДоступныеПодразделения.Подразделение
		|				ИЗ
		|					тмпДоступныеПодразделения КАК тмпДоступныеПодразделения)
		|			ИЛИ Пользователи.Подразделение В
		|				(ВЫБРАТЬ
		|					тмпТекущееПодразделение.Подразделение
		|				ИЗ
		|					тмпТекущееПодразделение КАК тмпТекущееПодразделение) ИЛИ Пользователи.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.Пустаяссылка))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Пользователь
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	тмпДляСвертывания.Пользователь
		|ИЗ
		|	тмпДляСвертывания КАК тмпДляСвертывания
		|	ГДЕ тмпДляСвертывания.Пользователь.Наименование ПОДОБНО &СтрокаПоиска";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ Пользователи.Наименование ПОДОБНО &СтрокаПоиска";
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();			   
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	Если Метаданные.Имя = "CRM" Тогда
		Запрос.УстановитьПараметр("ПользовательФЛ", ТекущийПользователь);
	Иначе	
		Запрос.УстановитьПараметр("ПользовательФЛ", ТекущийПользователь.ФизическоеЛицо);
	КонецЕсли;
	Запрос.УстановитьПараметр("ДолжностнаяПозиция", ТекущийПользователь.CRM_ДолжностнаяПозиция);
	Запрос.УстановитьПараметр("КОРПВерсия", CRM_ЛицензированиеСервер.ВариантПоставкиКОРП());
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска+"%");
	Иначе                                                                                            
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ тмпДляСвертывания.Пользователь.Наименование ПОДОБНО &СтрокаПоиска", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ГДЕ Пользователи.Наименование ПОДОБНО &СтрокаПоиска", "");
	КонецЕсли;
	
	ТаблицаПользователей = Запрос.Выполнить().Выгрузить();
	ТаблицаПользователей.Свернуть("Пользователь");
	МассивПользователей = ТаблицаПользователей.ВыгрузитьКолонку("Пользователь");
	МассивПользователей.Добавить(ТекущийПользователь);
	СписокПользователей = Новый СписокЗначений;
	СписокПользователей.ЗагрузитьЗначения(МассивПользователей);
	
	Если ВозвращатьМассив Тогда
		Возврат МассивПользователей;
	Иначе	
		Возврат СписокПользователей;	
	КонецЕсли;
КонецФункции	

// Функция - Получить доступных менеджеров
//
// Параметры:
//  ПолучитьБезОрганичений - Булево - Получить пользователей без ограничений по правам.
// 
// Возвращаемое значение:
//  Массив - Список доступных пользователей. 
//
&НаСервере
Функция ПолучитьДоступныхМенеджеров(ПолучитьБезОрганичений = Ложь) Экспорт
	 Возврат ПолучитьСписокДоступныхПользователей(Истина, , ПолучитьБезОрганичений);
 КонецФункции
 
// Процедура устанавливат отбор в списке по доступным пользователям.
//
// Параметры:
//  Список						 - ДинамическийСписок -  Список, в котором необходимо установить отбор.
//  МассивЭлементовОтбора		 - Массив - Массив строк с названиями полей отбора
//  МассивДоступныхПользователей - СписокЗначений - список, для которого устанавливаем отбор.
//
&НаСервере
Процедура УстановитьОтборВСпискеПоДоступнымпользователям(Список, МассивЭлементовОтбора, МассивДоступныхПользователей = Неопределено) Экспорт
	
	Если НЕ Константы.CRM_ИспользоватьДоступныхПользователей.Получить() Тогда Возврат КонецЕсли;
	
	Если МассивЭлементовОтбора = Неопределено Тогда	Возврат	КонецЕсли;
	
	Если МассивДоступныхПользователей = Неопределено Тогда
		МассивДоступныхПользователей = ПолучитьДоступныхМенеджеров();
	КонецЕсли;	
	
	Для Каждого ЭлементОтбора Из МассивЭлементовОтбора Цикл
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, ЭлементОтбора, ЭлементОтбора);
	КонецЦикла;	
	
	ГруппаОтбораПоДоступнымпользователям = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, "ГруппаОтбораДоступныеПользователи", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	Для Каждого ЭлементОтбора Из МассивЭлементовОтбора Цикл
		CRM_ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораСписка(Список, ЭлементОтбора, МассивДоступныхПользователей, ВидСравненияКомпоновкиДанных.ВСписке, ГруппаОтбораПоДоступнымпользователям);
	КонецЦикла;	
КонецПроцедуры	 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОграничениеВыбораПользователей(СписокЭлементов, МассивДоступныхПользователей = Неопределено) Экспорт
	Если СписокЭлементов = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	Если МассивДоступныхПользователей = Неопределено Тогда
		МассивДоступныхПользователей = ПолучитьДоступныхМенеджеров();
	КонецЕсли;
	
	ПараметрыВыбораПользователь = Новый Массив;
	ПараметрыВыбораПользователь.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", МассивДоступныхПользователей));
	Для Каждого ЭлементФормы Из СписокЭлементов Цикл	
		ЭлементФормы.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПользователь);
	КонецЦикла;
КонецПроцедуры	

&НаСервере
Функция ПолучитьСтруктуруДляУстановкиОтбора(Форма)
	СтруктураДляОтбора = Новый Структура("Список, МассивЭлементовОтбора, ЭлементСотрудник", Неопределено, Неопределено, Неопределено);
	Если Форма.ИмяФормы = "Документ.CRM_Взаимодействие.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Документ.CRM_Заявка.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Документ.CRM_Интерес.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборПользователь);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Документ.CRM_ОтчетОРаботе.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Сотрудник");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ПолеБыстрогоОтбора_Сотрудник);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);
		СтруктураДляОтбора.Вставить("Список", Форма.Список);	
	ИначеЕсли Форма.ИмяФормы = "Документ.CRM_ПланированиеВоронкиПродаж.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ПолеБыстрогоОтбора_Автор);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Документ.CRM_РассылкаЭлектронныхПисем.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Документ.CRM_СчетНаОплатуПокупателю.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Документ.CRM_Телемаркетинг.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);	
	ИначеЕсли Форма.ИмяФормы = "Документ.Встреча.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Документ.ЗапланированноеВзаимодействие.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СтруктураДляОтбора.Вставить("Список", Форма.Список);	
	ИначеЕсли Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.CRM_ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Менеджер");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);	
	ИначеЕсли Форма.ИмяФормы = "Документ.СообщениеSMS.Форма.SMS4B_ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СтруктураДляОтбора.Вставить("Список", Форма.Список);	
	ИначеЕсли Форма.ИмяФормы = "Документ.ТелефонныйЗвонок.Форма.сфпФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборПоОтветственному);
		СписокЭлементов.Добавить(Форма.Элементы.ОтборПоАвтору);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);	
	ИначеЕсли Форма.ИмяФормы = "Обработка.CRM_АРМ_МоиПродажи.Форма.ФормаФильтра" Тогда
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ТекущийПользователь);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);
	ИначеЕсли Форма.ИмяФормы = "Отчет.CRM_ВоронкаПродаж.Форма.Форма" Тогда
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственные);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
	ИначеЕсли Форма.ИмяФормы = "Справочник.МаркетинговыеМероприятия.Форма.CRM_ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("CRM_Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Задача.ЗадачаИсполнителя.Форма.CRM_ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Исполнитель");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборИсполнитель);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Задача.ЗадачаИсполнителя.Форма.CRM_ФормаМоиЗадачи" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Исполнитель");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "БизнесПроцесс.CRM_БизнесПроцесс.Форма.ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);
	ИначеЕсли Форма.ИмяФормы = "Обработка.CRM_КалендарьМенеджера.Форма.Форма" Тогда
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборЗначениеПользователь);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
	ИначеЕсли Форма.ИмяФормы = "Обработка.CRM_ПланированиеПроектов.Форма.ФормаПланирования" Тогда
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборЗначениеИсполнитель);
		СписокЭлементов.Добавить(Форма.Элементы.ОтборЗначениеОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);
	ИначеЕсли Форма.ИмяФормы = "Отчет.CRM_МониторЦелевыхПоказателей.Форма.ФормаМониторЦелевыхПоказателей" Тогда
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборСотрудник);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
	ИначеЕсли Форма.ИмяФормы = "Обработка.CRM_УниверсальныйЖурналДокументов.Форма.Форма" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);	
	ИначеЕсли Форма.ИмяФормы = "Обработка.CRM_УниверсальныйЖурналДокументов.Форма.ФормаФиксированныйОтбор" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СписокЭлементов = Новый Массив;
		СписокЭлементов.Добавить(Форма.Элементы.ОтборОтветственный);
		СтруктураДляОтбора.Вставить("ЭлементСотрудник", СписокЭлементов);	
		СтруктураДляОтбора.Вставить("Список", Форма.Список);	
	ИначеЕсли Форма.ИмяФормы = "Справочник.Партнеры.Форма.CRM_ФормаСписка" Тогда
		МассивЭлементовОтбора = Новый Массив;
		МассивЭлементовОтбора.Добавить("Автор");
		МассивЭлементовОтбора.Добавить("Ответственный");
		СтруктураДляОтбора.Вставить("МассивЭлементовОтбора", МассивЭлементовОтбора);
		СтруктураДляОтбора.Вставить("Список", Форма.Интересы);	
	КонецЕсли;
	CRM_УправлениеДоступомКПользователямПереопределяемый.ДополнитьСтруктуруДляУстановкиОтбора(Форма, СтруктураДляОтбора);
	Возврат СтруктураДляОтбора;
КонецФункции

&НаСервере
Процедура УстановитьОграниченияПоПользователям(Форма, ПолучитьБезОрганичений = Ложь) Экспорт
	МассивДоступныхПользователей = ПолучитьДоступныхМенеджеров(ПолучитьБезОрганичений);
	СтруктураДляОтбора = ПолучитьСтруктуруДляУстановкиОтбора(Форма);
	УстановитьОтборВСпискеПоДоступнымпользователям(СтруктураДляОтбора.Список, СтруктураДляОтбора.МассивЭлементовОтбора);
	УстановитьОграничениеВыбораПользователей(СтруктураДляОтбора.ЭлементСотрудник, МассивДоступныхПользователей);
КонецПроцедуры	

#КонецОбласти