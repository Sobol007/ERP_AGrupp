
#Область ПрограммныйИнтерфейс

// Функция - Аккаунт подключен
// 
// Возвращаемое значение:
//  Булево - Истина, если аккаунт подключен.
//
Функция АккаунтПодключен() Экспорт

	Возврат (CRM_DropboxСервер.ПолучитьПараметрыАвторизации() <> Неопределено);

КонецФункции

// Получить электронный адрес аккаунта
//
// Параметры:
//  ПараметрыАвторизации - Строка - Параметры авторизации.
// 
// Возвращаемое значение:
//  Строка - Электронный адрес аккаунта.
//
Функция ПолучитьЭлектронныйАдресАккаунта(ПараметрыАвторизации = Неопределено) Экспорт

	Результат = "";
	
	ДанныеТекущегоАккаунта = CRM_DropboxСервер.ПолучитьДанныеТекущегоАккаунта(ПараметрыАвторизации);
	
	Если ТипЗнч(ДанныеТекущегоАккаунта) = Тип("Структура") Тогда
		ДанныеТекущегоАккаунта.Свойство("email", Результат);
	ИначеЕсли  ТипЗнч(ДанныеТекущегоАккаунта) = Тип("Соответствие") Тогда	
		Попытка
			Результат = ДанныеТекущегоАккаунта.Получить("email");
		Исключение
			Результат = "";
		КонецПопытки;	
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции // ПолучитьЭлектронныйАдресАккаунта()

// Получить имя файла из его полного пути
//
// Параметры:
//  ПолныйПутьФайла - Строка - Полный путь файла.
// 
// Возвращаемое значение:
//  Строка - Имя файла.
//
Функция ПолучитьИмяФайлаИзЕгоПолногоПути(ПолныйПутьФайла) Экспорт
	
	ТекущийПуть = ПолныйПутьФайла;
	
	Пока Найти(ТекущийПуть, "\") <> 0 Или Найти(ТекущийПуть, "/") <> 0 Цикл
		
		НачальныйСимвол = Макс(Найти(ТекущийПуть, "\"), Найти(ТекущийПуть, "/"));
		
		ТекущийПуть = Сред(ТекущийПуть, НачальныйСимвол + 1); 
		
	КонецЦикла;
	
	Возврат ТекущийПуть;
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#КонецОбласти