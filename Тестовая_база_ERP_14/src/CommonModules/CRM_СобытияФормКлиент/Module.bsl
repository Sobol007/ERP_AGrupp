////////////////////////////////////////////////////////////////////////////////
// Содержит события форм, вызываемые на клиенте
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция выполняет переопределяемую команду
//
// Параметры:
//  Форма	- УправляемаяФорма - форма, в которой расположена команда
//  Команда	- КомандаФормы - команда формы
//  ДополнительныеПараметры	- Структура - дополнительные параметры
//
Функция ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры = Неопределено) Экспорт
// Функция необходима для вычисления выражения в СофтФоне	
	// +Рабочий стол
	СписокДоступныхФормРабочегоСтола = CRM_РабочийСтолСервер.ПолучитьСписокДоступныхФорм();
	Если СписокДоступныхФормРабочегоСтола.НайтиПоЗначению(Форма.ИмяФормы) <> Неопределено Тогда
		Если СтрНайти(Команда.Имя, "crm_СкрытаяКнопкаТумблера_") Тогда
			CRM_РабочийСтолКлиент.ВыборИзСпискаСкрытыхФорм(Форма, Команда);
		КонецЕсли;
		Если СтрНайти(Команда.Имя, "crm_КнопкаТумблера_") Тогда
			CRM_РабочийСтолКлиент.ТумблерРабочегоСтолаПриИзменении(Форма, Команда);
		КонецЕсли;	
		Если Команда.Имя = "crm_НастройкиРабочегоСтола" Тогда
			CRM_РабочийСтолКлиент.ОткрытьФормуНастроек(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "crm_Поддержка" Тогда
			CRM_РабочийСтолКлиент.ОткрытьФормуПоддержки(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "скИндикаторНапоминаний" или Команда.Имя = "CRM_ОткрытьЗаметки" или Команда.Имя = "скСоздатьПоручение" или Команда.Имя = "скЗакрытьНапоминания" или Команда.Имя = "скЗакрытьЗаметки" Тогда
			Если Команда.Имя = "скИндикаторНапоминаний" Тогда
				Попытка
					ПоддерживаетРабочийСтол = Форма.ПоддерживаетРабочийСтол;
				Исключение
					CRM_НапоминанияКлиент.ВывестиАктивныеНапоминания(Ложь);
					Возврат Ложь;
				КонецПопытки;	
			КонецЕсли;	
			
			Если Команда.Имя = "CRM_ОткрытьЗаметки" Тогда
				Попытка
					ПоддерживаетРабочийСтол = Форма.ПоддерживаетРабочийСтол;
				Исключение
					CRM_РабочийСтолКлиент.КомандаЗаметкиВсе(Форма, Команда);
					Возврат Ложь;
				КонецПопытки;	
			КонецЕсли;
			CRM_РабочийСтолКлиент.ОбработкаГипперссылкиДействийНажатие(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "скНапоминанияСкрыть" Тогда
			CRM_РабочийСтолКлиент.СкрытьНапоминания(Форма);
		КонецЕсли;
		Если Команда.Имя = "скЗаметкиСкрыть" Тогда
			CRM_РабочийСтолКлиент.СкрытьЗаметки(Форма);
		КонецЕсли;
		Если Команда.Имя = "скНапоминанияПрекратитьВсе" Тогда
			CRM_РабочийСтолКлиент.КомандаНапоминанийПрекратитьВсе(Форма, Команда);
		КонецЕсли;	
		Если Команда.Имя = "скНапоминанияПеренестиВсе" Тогда
			CRM_РабочийСтолКлиент.КомандаНапоминанийПеренестиВсе(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "скЗаметкиОткрытьВсе" Тогда
			CRM_РабочийСтолКлиент.КомандаЗаметкиВсе(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "скЗаметкиДобавить" Тогда
			CRM_РабочийСтолКлиент.КомандаЗаметкиДобавить(Форма, Команда);
		КонецЕсли;
		Если Команда.Имя = "CRM_ОткрытьПомощь" Тогда
			ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("УниверсальныйРабочийСтол"));
		КонецЕсли;
		// +СофтФон
		Если Команда.Имя = "сфпИндикаторАктивногоЗвонка" Тогда
			сфпСофтФонПроКлиент.ОткрытьПанельЗвонка(Форма, Команда);
		КонецЕсли;
		// -СофтФон
	КонецЕсли;
	// -Рабочий стол
	
	// +Классификаторы
	CRM_КлассификаторыКлиент.ВыполнитьКоманду(Форма, Команда, ДополнительныеПараметры);
	// -Классификаторы
	
	Попытка
		Проверка = Форма.ЗадачаИсполнителя;
		Если НЕ ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			CRM_БизнесПроцессыИЗадачиКлиент.ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Попытка
		Форма_Объект = Форма.Объект;
		CRM_ТригерыКлиент.ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры);
	Исключение
	КонецПопытки;
	
	Если Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.ФормаДокумента" Тогда
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_Модуль_РаботаСФормамиКлиент") Тогда
			МодульРаботаСФормамиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("CRM_Модуль_РаботаСФормамиКлиент");
			МодульРаботаСФормамиКлиент.ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры);
		КонецЕсли;
	КонецЕсли;
	
	CRM_МодификацияКонфигурацииКлиентПереопределяемый.ВыполнитьПереопределяемуюКоманду(Форма, Команда, ДополнительныеПараметры);
	
	Возврат Истина;
КонецФункции

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма					- УправляемаяФорма - форма, из обработчика события которой происходит вызов процедуры.
//  ИмяСобытия				- Строка - идентификатор сообщения принимающей формой (см. метод Оповестить)
//	Параметр				- Произвольный - параметр сообщения (см. метод Оповестить)
//	Источник				- Произвольный - источник события (см. метод Оповестить)
//  ДополнительныеПараметры	- Структура - дополнительные параметры
//
Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры = Неопределено) Экспорт
	
	Попытка
		Проверка = Форма.ЗадачаИсполнителя;
		Если НЕ ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			CRM_БизнесПроцессыИЗадачиКлиент.ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры);
		КонецЕсли;
	Исключение
		Ошибка = 1;
	КонецПопытки;
	
	Попытка
		Форма_Объект = Форма.Объект;
		CRM_ТригерыКлиент.ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры);
	Исключение
	КонецПопытки;
	
	CRM_МодификацияКонфигурацииКлиентПереопределяемый.ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ДополнительныеПараметры);
	
КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма					- УправляемаяФорма - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ					- Булево - признак отказа от записи документа
//	ПараметрыЗаписи			- Структура - параметры записи (см. событие ПередЗаписью)
//
Процедура ПередЗаписью(Форма, Отказ, ПараметрыЗаписи) Экспорт
	
	РежимЗаписи = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
					ПараметрыЗаписи, "РежимЗаписи", РежимЗаписиДокумента.Запись);
	
	
КонецПроцедуры

#КонецОбласти
