////////////////////////////////////////////////////////////////////////////////
// Содержит события форм, вызываемые на сервере
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма					 - УправляемаяФорма	 - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ					 - Булево			 - признак отказа от создания формы.
//  СтандартнаяОбработка	 - Булево			 - признак выполнения стандартной (системной) обработки события
//  ДополнительныеПараметры	 - Структура		 - дополнительные параметры.
//
Функция ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка, ДополнительныеПараметры = Неопределено) Экспорт

	// +Рабочий стол
	СписокДоступныхФормРабочегоСтола = CRM_РабочийСтолСервер.ПолучитьСписокДоступныхФорм();
	
	Если СписокДоступныхФормРабочегоСтола.НайтиПоЗначению(Форма.ИмяФормы) <> Неопределено Тогда
		CRM_РабочийСтолСервер.ПриСозданииНаСервере(Форма, Отказ);
	КонецЕсли;
	// -Рабочий стол
	
	// +Доступные пользователи
	УстановитьОграниченияПоПользователям(Форма);
	// -Доступные пользователи
	
	Кнопка = Форма.Элементы.Найти("ФормаОбщаяКомандаНапомнить");
	
	Если Кнопка <> Неопределено Тогда
		
		Кнопка.Видимость = Ложь;
		
	КонецЕсли;
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		Группа = Форма.Элементы.Найти("ГруппаКомманднаяПанельПодменюОтчетыСмТакже");
		Если Группа <> Неопределено Тогда
			Группа.Видимость = Ложь;
		КонецЕсли;
		Группа = Форма.Элементы.Найти("ПодменюОтчетыСмТакже");
		Если Группа <> Неопределено Тогда
			Группа.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		Форма_Объект = Форма.Объект;
		Если НЕ ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			Если CRM_БизнесПроцессыСервер.ОбъектСвязанСБизнесПроцессом(Форма.Объект.Ссылка) Тогда
				CRM_БизнесПроцессыСервер.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
			КонецЕсли;
		КонецЕсли;
		CRM_ТригерыСервер.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	Исключение
	КонецПопытки;
	
	Если НЕ CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		
		Если Форма.ИмяФормы = "Документ.CRM_Интерес.Форма.ФормаДокумента" Тогда
			Если Метаданные.Документы.CRM_Интерес.Реквизиты.Найти("Соглашение") <> Неопределено Тогда
				Документы.CRM_Интерес.Модуль_СоздатьЭлементыФормы(Форма);
			КонецЕсли;
		
		ИначеЕсли Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.ФормаДокумента" Тогда
			
			Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_Модуль_РаботаСФормамиСервер") Тогда
				МодульРаботаСФормамиСервер = ОбщегоНазначения.ОбщийМодуль("CRM_Модуль_РаботаСФормамиСервер");
				МодульРаботаСФормамиСервер.СоздатьНеобходимыеРеквизитыИЭлементыДляГруппыИнтерес(Форма);
			КонецЕсли;
			
		ИначеЕсли Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда
			CRM_КлассификаторыВызовСервера.ДобавитьЗакладкуКлассификацияВТиповуюФорму(Форма);
			/// Классификаторы
			Форма.Элементы.ГруппаКлассификация.Видимость = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьКлассификаторы");
		КонецЕсли;
		
		Если Форма.Параметры.Свойство("ПолучитьИмяРеквизитаСписка") Тогда
			
			// найдем реквизит списка
			
			МассивРеквизитыФормы = Форма.ПолучитьРеквизиты();
			
			ИмяРеквизитаСписка = "";
			
			ИмяПервогоДинамическогоСписка = "";
			
			Для Каждого РеквизитФормы Из МассивРеквизитыФормы Цикл
				
				// проверим, является ли реквизит динамическим списком
				
				МассивТипов = РеквизитФормы.ТипЗначения.Типы();
				
				Для Каждого ТипРеквизита Из МассивТипов Цикл
					
					Если ТипРеквизита = Тип("ДинамическийСписок") Тогда
						
						Если ПустаяСтрока(ИмяПервогоДинамическогоСписка) Тогда
							
							ИмяПервогоДинамическогоСписка = РеквизитФормы.Имя;
							
						КонецЕсли;
							
						Если Найти(РеквизитФормы.Имя, "Список") > 0 Тогда
							
							ИмяРеквизитаСписка = РеквизитФормы.Имя;
							
							Прервать;
							
						КонецЕсли;
					
					КонецЕсли;
					
				КонецЦикла;
					
				Если Не ПустаяСтрока(ИмяРеквизитаСписка) Тогда
					
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ПустаяСтрока(ИмяРеквизитаСписка) Тогда
				
				ИмяРеквизитаСписка = ИмяПервогоДинамическогоСписка;
				
			КонецЕсли;	
			
			// добавим реквизит для обмена с формами выбора документов
			
			ДобавляемыеРеквизиты = Новый Массив; 
			Реквизит = Новый РеквизитФормы("ИмяРеквизитаСписка", Новый ОписаниеТипов("Строка")); 
			ДобавляемыеРеквизиты.Добавить(Реквизит); 
			Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
			
			Если НЕ ПустаяСтрока(ИмяРеквизитаСписка) Тогда
				
				Форма["ИмяРеквизитаСписка"] = ИмяРеквизитаСписка;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	CRM_МодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(Форма.ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	Возврат Истина;
КонецФункции

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//	Форма					- УправляемаяФорма - форма, из обработчика события которой происходит вызов процедуры.
//	ТекущийОбъект			- Объект - объект, который будет прочитан.
//	ДополнительныеПараметры - Структура - дополнительные параметры.
//
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		Если Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда
			CRM_КлассификаторыВызовСервера.ФормаОбъектаПриЧтенииНаСервере(Форма, Форма.Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	CRM_МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - УправляемаяФорма - Форма, из обработчика события которой происходит вызов процедуры.
//  Отказ			 - Булево - Отказ.
//  ТекущийОбъект	 - ЛюбойТип - Текущий объект.
//  ПараметрыЗаписи	 - Структура - Параметры записи.
//
Процедура ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	
	Попытка
		Форма_Объект = Форма.Объект;
		Если НЕ ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			Если CRM_БизнесПроцессыСервер.ОбъектСвязанСБизнесПроцессом(Форма.Объект.Ссылка) Тогда
				CRM_БизнесПроцессыСервер.ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
			КонецЕсли;
		КонецЕсли;
		CRM_ТригерыСервер.ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	Исключение
	КонецПопытки;
	
	Если Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.ФормаДокумента" Тогда
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("ОбщиеМодули", "CRM_Модуль_РаботаСФормамиСервер") Тогда
			МодульРаботаСФормамиСервер = ОбщегоНазначения.ОбщийМодуль("CRM_Модуль_РаботаСФормамиСервер");
			МодульРаботаСФормамиСервер.ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
		КонецЕсли;
	КонецЕсли;
	
	CRM_МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
// 	Форма - УправляемаяФорма - Форма, из обработчика события которой происходит вызов процедуры.
//  ТекущийОбъект	 - ЛюбойТип - Текущий объект.
//  ПараметрыЗаписи	 - Структура - Параметры записи.
//
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи)Экспорт
	
	Попытка
		Форма_Объект = Форма.Объект;
		Если НЕ ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			Если CRM_БизнесПроцессыСервер.ОбъектСвязанСБизнесПроцессом(Форма.Объект.Ссылка) Тогда
				CRM_БизнесПроцессыСервер.ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
			КонецЕсли;
		КонецЕсли;
		CRM_ТригерыСервер.ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	Исключение
	КонецПопытки;
	
	CRM_МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти
