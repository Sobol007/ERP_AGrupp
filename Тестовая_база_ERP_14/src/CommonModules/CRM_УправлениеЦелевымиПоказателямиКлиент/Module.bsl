
#Область ПрограммныйИнтерфейс

// Открыть расшифровку показателя.
//
// Параметры:
//  Показатель			 - СправочникСсылка.CRM_ШаблоныКлючевыхПоказателей - Показатель.
//  МассивПользователей	 - Массив - Массив с пользователями.
//  НачалоКонецПериода	 - Структура - Структура с датами.
//
Процедура ОткрытьРасшифровкуПоказателя(Показатель, МассивПользователей = Неопределено, НачалоКонецПериода = Неопределено) Экспорт
	
	Если МассивПользователей = Неопределено Тогда
		МассивПользователей = CRM_УправлениеЦелевымиПоказателямиСервер.ДоступныеПользователи(Истина);
	КонецЕсли;
	
	Если НачалоКонецПериода = Неопределено Тогда
		ПоказательПериодАнализа = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Показатель, "ПериодАнализа");
		Если ПоказательПериодАнализа = "Месяц" Тогда
			ДатаНачала = НачалоМесяца(ТекущаяДата());
			ДатаОкончания = КонецМесяца(ТекущаяДата());
		ИначеЕсли ПоказательПериодАнализа = "День" Тогда	
			ДатаНачала = НачалоДня(ТекущаяДата());
			ДатаОкончания = КонецДня(ТекущаяДата());
		ИначеЕсли ПоказательПериодАнализа = "Квартал" Тогда	
			ДатаНачала = НачалоКвартала(ТекущаяДата());
			ДатаОкончания = КонецКвартала(ТекущаяДата());
		ИначеЕсли ПоказательПериодАнализа = "Год" Тогда	
			ДатаНачала = НачалоГода(ТекущаяДата());
			ДатаОкончания = КонецГода(ТекущаяДата());	
		КонецЕсли;
	Иначе
		ДатаНачала = НачалоКонецПериода.НачалоПериода;
		ДатаОкончания = НачалоКонецПериода.КонецПериода;
	КонецЕсли;
	
	Если ОткрытьРасшифровкуПоказателяСтарая(Показатель, МассивПользователей, ДатаНачала, ДатаОкончания) Тогда
		Возврат;
	КонецЕсли;
	
	ПериодОтчета = Новый СтандартныйПериод;
	ПериодОтчета.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
	ПериодОтчета.ДатаНачала = ДатаНачала;
	ПериодОтчета.ДатаОкончания = ДатаОкончания;
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПериодОтчета", ПериодОтчета);
	ПараметрыОтбора.Вставить("Менеджеры", МассивПользователей);
	
	ПараметрыРасшифровки = CRM_УправлениеЦелевымиПоказателямиСервер.ПолучитьПараметрыРасшифровки(Показатель, ПараметрыОтбора);
	
	ИмяФормы = ПараметрыРасшифровки.Форма;
	
	Если ЗначениеЗаполнено(ИмяФормы) Тогда
		ПараметрыФормы = ПараметрыРасшифровки.ПараметрыФормы;
		ПараметрыФормы.Вставить("Расшифровка", Истина);
		ФормаРасшифровки = ПолучитьФорму(ИмяФормы, ПараметрыФормы);
		
		ФормаРасшифровки.Открыть();
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ИсточникСКД", Показатель);
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		ПараметрыДанных = Новый Структура;
		ПараметрыДанных.Вставить("Показатель", Показатель);
		ПараметрыДанных.Вставить("Менеджер", МассивПользователей[0]);
		ПараметрыДанных.Вставить("Менеджеры", МассивПользователей[0]);
		ПараметрыДанных.Вставить("НачалоПериода", ДатаНачала);
		ПараметрыДанных.Вставить("КонецПериода", ДатаОкончания);
		ПараметрыФормы.Вставить("ПараметрыДанных", ПараметрыДанных);
		ОткрытьФорму("Отчет.CRM_РасшифровкаПроизвольныхПоказателей.Форма", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры

// Пересчитать показатели.
//
// Параметры:
//  Форма	 - УправляемаяФорма - Передаваемая форма. 
//  Команда	 - КомандаФормы - Команда формы.
//
Процедура ПересчитатьПоказатели(Форма, Команда) Экспорт
	
	ДлительнаяОперация = CRM_УправлениеЦелевымиПоказателямиСервер.ЗапуститьПересчетПоказателей();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется расчет значений показателей.'");
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	
	Оповещение = Новый ОписаниеОповещения("ПересчитатьПоказателиЗавершение",
		CRM_УправлениеЦелевымиПоказателямиКлиент, Новый Структура);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПересчитатьПоказателиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаголовокОповещения = НСтр("ru = 'Расчет показателей'");
	
	Если Результат = Неопределено Тогда
		ТекстПояснения = НСтр("ru = 'Расчет показателей отменен.'");
		ПоказатьОповещениеПользователя(ЗаголовокОповещения,,
			ТекстПояснения,
			БиблиотекаКартинок.CRM_Внимание,
			СтатусОповещенияПользователя.Информация,
			"ПересчетПоказателей");
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ТекстПояснения = НСтр("ru = 'Расчет показателей завершен.'");
		ПоказатьОповещениеПользователя(ЗаголовокОповещения,,
			ТекстПояснения,
			БиблиотекаКартинок.Успешно32,
			СтатусОповещенияПользователя.Информация,
			"ПересчетПоказателей");
		
		Оповестить("ПересчетПоказателей");
		
	Иначе
		
		ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось выполнить расчет показателей:
			           |%1'"),
			Результат.КраткоеПредставлениеОшибки);
		
		ВызватьИсключение ТекстПояснения;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПересчитатьПоказатель(Показатель) Экспорт
	
	//ДлительнаяОперация = CRM_УправлениеЦелевымиПоказателямиСервер.ЗапуститьПересчетПоказателя(Показатель);
	//
	//ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	//ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется расчет значений показателя '") + Строка(Показатель);
	//ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	//
	//Оповещение = Новый ОписаниеОповещения("ПересчитатьПоказательЗавершение",
	//	CRM_УправлениеЦелевымиПоказателямиКлиент, Новый Структура("Показатель", Показатель));
	//
	//ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
	CRM_УправлениеЦелевымиПоказателямиСервер.ЗапуститьПересчетПоказателя(Показатель);
	
КонецПроцедуры

Процедура ПересчитатьПоказательЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Показатель = ДополнительныеПараметры.Показатель;
	
	ЗаголовокОповещения = НСтр("ru = 'Расчет показателя'");
	
	Если Результат = Неопределено Тогда
		ТекстПояснения = НСтр("ru = 'Расчет показателя отменен.'");
		ПоказатьОповещениеПользователя(ЗаголовокОповещения,,
			ТекстПояснения,
			БиблиотекаКартинок.CRM_Внимание,
			СтатусОповещенияПользователя.Информация,
			"ПересчетПоказателей");
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ТекстПояснения = НСтр("ru = 'Расчет показателя завершен.'");
		ПоказатьОповещениеПользователя(ЗаголовокОповещения,,
			ТекстПояснения,
			БиблиотекаКартинок.Успешно32,
			СтатусОповещенияПользователя.Информация,
			"ПересчетПоказателей");
		
		Оповестить("ПересчетПоказателей");
		
	Иначе
		
		ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось выполнить расчет показателя:
			           |%1'"),
			Результат.КраткоеПредставлениеОшибки);
		
		ВызватьИсключение ТекстПояснения;
		
	КонецЕсли;
	
КонецПроцедуры

// Расшифровки с БСП-шной  формой отчета
Функция ОткрытьРасшифровкуПоказателяСтарая(Показатель, МассивПользователей, ДатаНачала, ДатаОкончания)
	Если Показатель = ПредопределенноеЗначение("Справочник.CRM_ШаблоныКлючевыхПоказателей.ВысланныеКП") Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("КлючВарианта", "ПоИнтересам");
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		
		
		ФормаРасшифровки = ПолучитьФорму("Отчет.CRM_АнализКоммерческихПредложений.Форма", ПараметрыФормы);
		ПараметрМенеджеры = Новый ПараметрКомпоновкиДанных("Менеджеры");
		ПараметрПериод = Новый ПараметрКомпоновкиДанных("ПериодОтчета");
		Для Каждого Параметр Из ФормаРасшифровки.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
			Если Параметр.Параметр = ПараметрПериод Тогда
				ПериодОтчета = Новый СтандартныйПериод;
				ПериодОтчета.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
				ПериодОтчета.ДатаНачала = ДатаНачала;
				ПериодОтчета.ДатаОкончания = ДатаОкончания;
				Параметр.Использование = Истина;
				Параметр.Значение = ПериодОтчета;
			ИначеЕсли Параметр.Параметр = ПараметрМенеджеры Тогда
				Параметр.Использование = Истина;

				Параметр.Значение = МассивПользователей;	
			КонецЕсли;	
		КонецЦикла;
		ФормаРасшифровки.Открыть();		
		Возврат Истина;
	ИначеЕсли Показатель = ПредопределенноеЗначение("Справочник.CRM_ШаблоныКлючевыхПоказателей.ТелефонныеЗвонки")
			ИЛИ Показатель = ПредопределенноеЗначение("Справочник.CRM_ШаблоныКлючевыхПоказателей.ВходящиеТелефонныеЗвонки") 
			ИЛИ Показатель = ПредопределенноеЗначение("Справочник.CRM_ШаблоныКлючевыхПоказателей.ИсходящиеТелефонныеЗвонки")
			ИЛИ Показатель = ПредопределенноеЗначение("Справочник.CRM_ШаблоныКлючевыхПоказателей.ВсеТелефонныеЗвонки") Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("КлючВарианта", "ОтчетПоСовершеннымЗвонкам");
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		
		
		ФормаРасшифровки = ПолучитьФорму("Отчет.сфпОтчетПоСовершеннымЗвонкам.Форма", ПараметрыФормы);
		ПараметрМенеджеры = Новый ПараметрКомпоновкиДанных("Менеджеры");
		ПараметрПериод = Новый ПараметрКомпоновкиДанных("ПериодОтчета");
		ПараметрДлительность = Новый ПараметрКомпоновкиДанных("ДлительностьЗвонка");
		ПараметрНаправление = Новый ПараметрКомпоновкиДанных("Направление");
		ПараметрПоказатель = Новый ПараметрКомпоновкиДанных("Показатель");
		Для Каждого Параметр Из ФормаРасшифровки.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
			Если ТипЗнч(Параметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
				Если Параметр.Параметр = ПараметрПериод Тогда
					ПериодОтчета = Новый СтандартныйПериод;
					ПериодОтчета.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
					ПериодОтчета.ДатаНачала = ДатаНачала;
					ПериодОтчета.ДатаОкончания = ДатаОкончания;
					Параметр.Использование = Истина;
					Параметр.Значение = ПериодОтчета;
				ИначеЕсли Параметр.Параметр = ПараметрПоказатель Тогда
					Параметр.Использование = Истина;
					Параметр.Значение = Показатель;
				ИначеЕсли Параметр.Параметр = ПараметрМенеджеры Тогда
					Параметр.Использование = Истина;
					Параметр.Значение = МассивПользователей;
				ИначеЕсли Параметр.Параметр = ПараметрДлительность Тогда
					Параметр.Использование = Истина;
					Если Показатель = ПредопределенноеЗначение("Справочник.CRM_ШаблоныКлючевыхПоказателей.ТелефонныеЗвонки") Тогда
						Параметр.Значение = 20;
					Иначе
						Параметр.Значение = 1;
					КонецЕсли;
				ИначеЕсли Параметр.Параметр = ПараметрНаправление Тогда
					Если Показатель = ПредопределенноеЗначение("Справочник.CRM_ШаблоныКлючевыхПоказателей.ВходящиеТелефонныеЗвонки") Тогда
						Параметр.Значение = "Входящий";
					ИначеЕсли Показатель = ПредопределенноеЗначение("Справочник.CRM_ШаблоныКлючевыхПоказателей.ИсходящиеТелефонныеЗвонки") Тогда
						Параметр.Значение = "Исходящий";
					Иначе
						Параметр.Значение = "Все";
					КонецЕсли;
					Параметр.Использование = Истина;
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
			
		ФормаРасшифровки.Открыть();	
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции	

#КонецОбласти