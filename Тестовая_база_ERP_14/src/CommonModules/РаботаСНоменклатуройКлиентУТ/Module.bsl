
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Работа с номенклатурой".
// ОбщийМодуль.РаботаСНоменклатуройКлиентУТ.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаПоискНоменклатурыПоШтрихкоду

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуПриОткрытии.
Процедура ПоискНоменклатурыПоШтрихкодуПриОткрытии(Форма) Экспорт
	
	#Если Не ВебКлиент Тогда
	Сигнал();
	#КонецЕсли
	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, Форма, "СканерШтрихкода");
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуПриЗакрытии.
Процедура ПоискНоменклатурыПоШтрихкодуПриЗакрытии(Форма, ЗавершениеРаботы) Экспорт
	
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, Форма);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуОбработкаОповещения.
Процедура ПоискНоменклатурыПоШтрихкодуОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ШтрихКоды) Экспорт

	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И Форма.ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" И МенеджерОборудованияУТКлиент.ЕстьНеобработанноеСобытие() Тогда
			ОбработатьШтрихкоды(Форма, МенеджерОборудованияУТКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр));
		КонецЕсли;
	// Конец ПодключаемоеОборудование
	ИначеЕсли ИмяСобытия = "РаботаСНоменклатурой_ПроставитьПризнакЗагрузки" Тогда
		Если Параметр.Свойство("СсылкаНаНовуюНоменклатуру") Тогда
			РаботаСНоменклатуройВызовСервераУТ.ЗаполнитьНоменклатуруПоШтрихкоду(Форма, Параметр.СсылкаНаНовуюНоменклатуру);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуОбработкаВыбора.
Процедура ПоискНоменклатурыПоШтрихкодуОбработкаВыбора(Форма, ВыбранноеЗначение, ИсточникВыбора) Экспорт
	
	Если Форма.ЕстьАлкогольнаяПродукция Тогда
		
		СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаВыбораНоменклатуры(
			Новый ОписаниеОповещения("ПриВыбореНоменклатуры", ЭтотОбъект, Форма), ВыбранноеЗначение, ИсточникВыбора);
			
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении.
Процедура ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении(Форма, Элемент) Экспорт
	
	Перем КэшированныеЗначения;
	ТекущиеДанные = Форма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущиеДанные.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущиеДанные.Упаковка);
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуНоменклатураСоздание.
Процедура ПоискНоменклатурыПоШтрихкодуНоменклатураСоздание(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	ТекущиеДанные = Форма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	Если Форма.ЕстьАлкогольнаяПродукция
		И ТекущиеДанные <> Неопределено
		И ЗначениеЗаполнено(ТекущиеДанные.АлкогольнаяПродукция) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуСозданияНоменклатуры(
			ЭтотОбъект,
			ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(ТекущиеДанные.АлкогольнаяПродукция));
		
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуНоменклатураНачалоВыбора.
Процедура ПоискНоменклатурыПоШтрихкодуНоменклатураНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	ТекущиеДанные = Форма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	Если Форма.ЕстьАлкогольнаяПродукция
		И ТекущиеДанные <> Неопределено
		И ЗначениеЗаполнено(ТекущиеДанные.АлкогольнаяПродукция) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СобытияФормЕГАИСКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры(
			Форма,
			ИнтеграцияЕГАИСВызовСервера.РеквизитыАлкогольнойПродукцииДляСозданияНоменклатуры(ТекущиеДанные.АлкогольнаяПродукция));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// См. РаботаСНоменклатуройКлиентПереопределяемый.СоздатьНоменклатуруИнтерактивно.
Процедура СоздатьНоменклатуруИнтерактивно(ПараметрыФормы, ОписаниеОповещенияОЗакрытии) Экспорт 
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", ПараметрыФормы,,,,, ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.СоздатьВидНоменклатурыИнтерактивно.
Процедура СоздатьВидНоменклатурыИнтерактивно(ПараметрыФормы, ОписаниеОповещенияОЗакрытии) Экспорт 
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.Форма.ФормаЭлемента", 
		ПараметрыФормы, , , , , ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуДополнительногоЗначения.
Процедура ОткрытьФормуДополнительногоЗначения(ПараметрыФормы, Форма) Экспорт
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Владелец",     ПараметрыФормы.РеквизитСсылка);
	ЗначенияЗаполнения.Вставить("Наименование", ПараметрыФормы.Наименование);
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.ЗначенияСвойствОбъектов.Форма.ФормаЭлемента", ПараметрыФормы, Форма);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуДополнительногоРеквизита.
Процедура ОткрытьФормуДополнительногоРеквизита(ПараметрыФормы, Форма) Экспорт
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ФормаЭлемента", ПараметрыФормы, Форма);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуНоменклатуры.
Процедура ОткрытьФормуНоменклатуры(НоменклатураСсылка, Форма) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", Новый Структура("Ключ", НоменклатураСсылка), Форма);
	
КонецПроцедуры
	
// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуВидаНоменклатуры.
Процедура ОткрытьФормуВидаНоменклатуры(ВидНоменклатурыСсылка, Форма) Экспорт
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.Форма.ФормаЭлемента", Новый Структура("Ключ", ВидНоменклатурыСсылка), Форма);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаВидаНоменклатуры.
Процедура ОткрытьФормуСпискаВидаНоменклатуры(ВидНоменклатурыСсылка, Форма) Экспорт
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Ссылка", ВидНоменклатурыСсылка));
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.Форма.ФормаСписка", ПараметрыФормы, Форма);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаНоменклатуры.
Процедура ОткрытьФормуСпискаНоменклатуры(НоменклатураСсылка, Форма) Экспорт
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Ссылка", НоменклатураСсылка));
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСписка", ПараметрыФормы, Форма);
	
КонецПроцедуры

Процедура ПриВыбореНоменклатуры(Номенклатура, ДополнительныеПараметры) Экспорт
	
	Перем КэшированныеЗначения;
	
	Если Номенклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = ДополнительныеПараметры.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Номенклатура = Номенклатура;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущиеДанные.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущиеДанные.Упаковка);
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьШтрихкоды(Форма, ДанныеШтрихкодов)
	
	Для Каждого ЭлементДанных Из ДанныеШтрихкодов Цикл
		НайденныеСтроки = Форма.ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("Штрихкод", ЭлементДанных.Штрихкод));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Количество = НайденныеСтроки[0].Количество + ЭлементДанных.Количество;
		Иначе
			ДанныеШтрихкода = РаботаСНоменклатуройВызовСервераУТ.ПолучитьДанныеШтрихкода(ЭлементДанных.Штрихкод);
			Если ДанныеШтрихкода = Неопределено Тогда
				НовыйШтрихкод = Форма.ШтрихкодыНоменклатуры.Добавить();
				НовыйШтрихкод.Штрихкод = ЭлементДанных.Штрихкод;
				НовыйШтрихкод.Количество = ЭлементДанных.Количество;
			Иначе
				
				НовыйШтрихкод = Форма.ШтрихкодыНоменклатуры.Добавить();
				НовыйШтрихкод.Штрихкод   = ЭлементДанных.Штрихкод;
				НовыйШтрихкод.Количество = ЭлементДанных.Количество;
				ЗаполнитьЗначенияСвойств(НовыйШтрихкод, ДанныеШтрихкода);
				НовыйШтрихкод.Зарегистрирован = Истина;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти