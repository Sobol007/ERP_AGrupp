#Область СлужебныеПроцедурыИФункции

#Область УчетВходящегоНДС

Процедура УстановитьПараметрТипыНалогообложенияНДСПоступления(Запрос) Экспорт
	
	Если Запрос.Параметры.Свойство("ТипыНалогообложенияНДСПоступления") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСПоступления", УчетНДСУПСлужебный.ТипыНалогообложенияНДСНеУчитываетсяВСтоимости());
	
КонецПроцедуры
 
Функция ДоступныеВидыДеятельностиНДС(ПараметрыЗаполнения) Экспорт
	
	// Подготовим массив видов деятельности доступных по настройка
	ДоступныеПоНастройкам = Новый Массив;
	ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	
	Если Не ПараметрыЗаполнения.ПриобретениеТоваров
		И Не ПараметрыЗаполнения.ПриобретениеРабот
		И Не ПараметрыЗаполнения.ПриобретениеНаСтатьи
		И Не ПараметрыЗаполнения.ДвижениеТоваровНаСкладах
		И Не ПараметрыЗаполнения.ДвижениеТоваровИРаботВПроизводстве
		И Не ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи
		И Не ПараметрыЗаполнения.СборкаРазборкаТоваров
		И Не ПараметрыЗаполнения.ВыпускПродукцииИРабот
		И Не ПараметрыЗаполнения.ПередачаВЭксплуатацию
		И Не ПараметрыЗаполнения.ПрочееВыбытиеТоваров
		И Не ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе
		И Не ПараметрыЗаполнения.АвансовыйОтчет
		И Не ПараметрыЗаполнения.КорректировкаВидаДеятельностиНДС Тогда
		Возврат ДоступныеПоНастройкам;
	КонецЕсли;
	
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата);
	
	ДоступныеПоНастройкам.Добавить(ПараметрыУчетаОрганизации.ОсновнойВидДеятельностиНДСЗакупки);
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ОсновноеНалогообложениеНДСПродажи = ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи;
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаОрганизации.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаОрганизации.РаздельныйУчетНДС;
		ПрименяетсяЕНВД   = ПараметрыУчетаОрганизации.ПрименяетсяЕНВД;
		ОсобыйПорядокУчетаНДСПриПроизводствеДЦ = ПараметрыУчетаОрганизации.ОсобыйПорядокУчетаНДСПриПроизводствеДЦ;
	Иначе
		ОсновноеНалогообложениеНДСПродажи = ПараметрыУчетаИБ.ОсновноеНалогообложениеНДСПродажи;
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаИБ.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаИБ.РаздельныйУчетНДС;
		ПрименяетсяЕНВД   = ПараметрыУчетаИБ.ПрименяетсяЕНВД;
		ОсобыйПорядокУчетаНДСПриПроизводствеДЦ = ПараметрыУчетаИБ.ОсобыйПорядокУчетаНДСПриПроизводствеДЦ;
	КонецЕсли;
	
	Если РаздельныйУчетНДС Тогда
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
			ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		КонецЕсли;
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		КонецЕсли;
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
			ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		КонецЕсли;
		Если ПрименяетсяЕНВД Тогда
			ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		КонецЕсли;
		Если ОсобыйПорядокУчетаНДСПриПроизводствеДЦ Тогда
			ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		КонецЕсли;
		ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		//++ НЕ УТ
		Если ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыЗаполнения.Дата) 
			ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда 
			ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
		КонецЕсли;
		//-- НЕ УТ
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация)
		И ПараметрыУчетаОрганизации.ПрименяетсяЕНВД
		И ПараметрыУчетаОрганизации.ПрименяетсяУСН Тогда
			ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	КонецЕсли;
	
	// Доступные по настройкам ИБ
	Если РаздельныйУчетНДС И ПараметрыУчетаИБ.ПродажиНаЭкспорт Тогда
		ДатаПроверки = ?(ЗначениеЗаполнено(ПараметрыЗаполнения.Дата), ПараметрыЗаполнения.Дата, ТекущаяДатаСеанса());
		Если ДатаПроверки >= ПараметрыУчетаИБ.ДатаРазделенияЭкспорта Тогда
			Если ПараметрыУчетаИБ.ЭкспортНесырьевыхТоваров Тогда
				ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
			КонецЕсли;
			Если ПараметрыУчетаИБ.ЭкспортСырьевыхТоваровУслуг Тогда
				ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
			КонецЕсли;
		Иначе
			ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		КонецЕсли;
	КонецЕсли;
	
	// Подготовим массив видов деятельности недоступных по операции
	НедоступныеПоОперации = Новый Массив();
	
	Если ПараметрыЗаполнения.ПриобретениеТоваров Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеРабот Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		Если НЕ ПараметрыЗаполнения.ПриобретениеТоваров Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		КонецЕсли;
		Если НЕ ПараметрыЗаполнения.ПриобретениеТоваров И НЕ ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		Если НЕ ПараметрыЗаполнения.ПриобретениеТоваров Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровНаСкладах Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		Если ПараметрыЗаполнения.ДвижениеМеждуФилиалами Тогда // только <не изменять>
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровИРаботВПроизводстве Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыпускПродукцииИРабот Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СборкаРазборкаТоваров Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаВЭксплуатацию Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПрочееВыбытиеТоваров Тогда
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		КонецЕсли;
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.КорректировкаВидаДеятельностиНДС Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.АвансовыйОтчет Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		//НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	КонецЕсли;
	
	// Возвращаем виды деятельности доступные по настройкам с исключением недоступных по операции.
	Возврат ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеПоНастройкам, НедоступныеПоОперации);
	
КонецФункции

Функция ДоступныеНалогообложенияНДСЗакупки(ПараметрыЗаполнения) Экспорт
	
	ДоступныеПоНастройкам = Новый Массив;
	ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
	Если  УчетНДСУП.НастройкиУчета().ПокупкаТоваровОблагаемыхНДСУПокупателя Тогда
		ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУведомленияОКонтролируемыхСделках") Тогда
		ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	КонецЕсли;
	
	НедоступныеПоОперации = Новый Массив;
	
	Если Не ПараметрыЗаполнения.ПриобретениеТоваров И Не ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупВозвратнойТарыУПоставщика Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриемНаКомиссию
		ИЛИ ПараметрыЗаполнения.ВозвратТоваровКомитенту Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ИмпортТоваров
		ИЛИ ПараметрыЗаполнения.ВвозТоваровИзТаможенногоСоюза Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПоступлениеИзТоваровВПути Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗакупкаЧерезПодотчетноеЛицо Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЛизинговыеУслуги Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	// Возвращаем виды деятельности доступные по настройкам с исключением недоступных по операции.
	Возврат ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеПоНастройкам, НедоступныеПоОперации);
	
КонецФункции

Функция СчетаФактурыПолученныеПоДокументуЗакупки(ПараметрыРегистрации) Экспорт
	
	СчетаФактуры = Новый Массив;
	ТекстСчетФактура = НСтр("ru = 'Регистрация счета-фактуры не требуется';
							|en = 'Tax invoice registration is not required'");
	НавигационнаяСсылка = "";
	ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = Ложь;
	
	СчетФактураТребуется = Не СчетФактураПолученныйНеТребуется(ПараметрыРегистрации);
	Если СчетФактураТребуется Тогда
		
		Если ПараметрыРегистрации.ИнойДокументПодтвержденияНДС Тогда
			ПолноеИмяДокумента = "Документ.ИнойДокументПодтвержденияНДС";
		ИначеЕсли ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
			ПолноеИмяДокумента = "Документ.СчетФактураПолученныйНалоговыйАгент";
		Иначе
			ПолноеИмяДокумента = "Документ.СчетФактураПолученный";
		КонецЕсли;
		ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = ПравоДоступа("ИнтерактивноеДобавление", Метаданные.НайтиПоПолномуИмени(ПолноеИмяДокумента));
		
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяДокумента);
		ТаблицаСчетаФактуры = МенеджерДокумента.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка, ПараметрыРегистрации.Организация, , Ложь);
		Если ТаблицаСчетаФактуры.Количество() > 0 Тогда
			Если ТаблицаСчетаФактуры.Количество() > 1 Тогда
				ТекстСчетФактура = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				                      НСтр("ru = 'Счета-фактуры (%1)';
											|en = 'Tax invoices (%1)'"),
				                      Строка(ТаблицаСчетаФактуры.Количество()));
				НавигационнаяСсылка = "ОткрытьСписокСчетовФактурПолученных";
			Иначе
				СчетФактура = ТаблицаСчетаФактуры[0];
				ТекстСчетФактура = МенеджерДокумента.ПредставлениеСчетаФактуры(
					СчетФактура.Номер, 
					?(СчетФактура.Исправление, СчетФактура.ДатаИсправления, СчетФактура.ДатаСоставления),
					СчетФактура.Проведен);
				НавигационнаяСсылка = "ОткрытьСчетФактуруПолученный";
			КонецЕсли;
		ИначеЕсли ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию Тогда
			ТекстСчетФактура = НСтр("ru = 'Зарегистрировать счет-фактуру';
									|en = 'Register tax invoice'");
			НавигационнаяСсылка = "ВвестиНовыйСчетФактуру";
		Иначе
			ТекстСчетФактура = НСтр("ru = 'Счет-фактура не зарегистрирован';
									|en = 'Tax invoice is not registered'");
		КонецЕсли;
		
		СчетаФактуры = ТаблицаСчетаФактуры.ВыгрузитьКолонку("Ссылка");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
	Иначе
		ЦветТекста = Неопределено;
	КонецЕсли;
	
	Представление = Новый ФорматированнаяСтрока(ТекстСчетФактура, , ЦветТекста, , НавигационнаяСсылка);
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Представление);
	Результат.Вставить("СчетаФактуры", СчетаФактуры);
	Результат.Вставить("ДокументПоОснованиюТребуется", СчетФактураТребуется);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию", ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию);
	
	Возврат Результат;
	
КонецФункции

Функция СчетФактураПолученныйНеТребуется(ПараметрыРегистрации) Экспорт
	
	СчетФактураНеТребуется = Ложь;
	
	Если Не ПараметрыРегистрации.ПриобретениеТоваровРаботУслуг
		И Не ПараметрыРегистрации.ЗакупкаЧерезПодотчетноеЛицо
		И Не ПараметрыРегистрации.ВозвратТоваровОтПлательщикаНДС
		И Не ПараметрыРегистрации.ИсправлениеОшибок
		И Не ПараметрыРегистрации.КорректировкаПоСогласованиюСторон Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ПараметрыРегистрации.ВозвратТоваровОтПлательщикаНДС
		И (ПараметрыРегистрации.КорректировкаПоСогласованиюСторон
				И ПараметрыРегистрации.Дата < ДатаОтраженияВозвратовКорректировочнымиСФ()
			ИЛИ Не ПараметрыРегистрации.КорректировкаПоСогласованиюСторон
				И ПараметрыРегистрации.Дата >= ДатаОтраженияВозвратовКорректировочнымиСФ()) Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ПараметрыРегистрации.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ТипЗнч(ПараметрыРегистрации.Контрагент) = Тип("СправочникСсылка.Организации")
		И ПараметрыРегистрации.НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		// При отражении операций между организациями напрямую, регистрация счета-фактуры полученного не требуется.
		// В этом случае счет-фактура выданный в одной организации отражается полученным в другой.
		// Исключение - операции с обратным налогообложением. 
		СчетФактураНеТребуется = Истина;
	КонецЕсли;
	
	Возврат СчетФактураНеТребуется;
	
КонецФункции

Функция ЗаявленияОВвозеТоваровПоДокументуЗакупки(ПараметрыРегистрации) Экспорт
	
	ТаблицаЗаявленияОВвозе = Документы.ЗаявлениеОВвозеТоваров.ЗаявленияОВвозеТоваровПоОснованию(
								ПараметрыРегистрации.Ссылка,
								ПараметрыРегистрации.Организация,
								Ложь);
	ТекстЗаявленияОВвозе = "";
	НавигационнаяСсылка = "";
	
	ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	
	Если ТаблицаЗаявленияОВвозе.Количество() > 0 Тогда
		ЗаявлениеОВвозе = ТаблицаЗаявленияОВвозе[0];
		ТекстЗаявленияОВвозе = Документы.ЗаявлениеОВвозеТоваров.ПредставлениеЗаявленияОВвозеТоваров(
		                         ЗаявлениеОВвозе.Номер,
		                         ЗаявлениеОВвозе.Дата,
		                         ЗаявлениеОВвозе.Проведен,
		                         ЗаявлениеОВвозе.ДатаПодтвержденияОплаты);
		НавигационнаяСсылка = "ОткрытьЗаявлениеОВвозеТоваров";
	ИначеЕсли ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию Тогда
		ТекстЗаявленияОВвозе = НСтр("ru = 'Зарегистрировать заявление о ввозе товаров';
									|en = 'Register application for goods import'");
		НавигационнаяСсылка = "ВвестиНовыйЗаявлениеОВвозеТоваров";
	Иначе
		ТекстЗаявленияОВвозе = НСтр("ru = 'Заявление о ввозе товаров не зарегистрировано';
									|en = 'Application for goods import is not registered'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
	Иначе
		ЦветТекста = Неопределено;
	КонецЕсли;

	Представление = Новый ФорматированнаяСтрока(ТекстЗаявленияОВвозе, , ЦветТекста, , НавигационнаяСсылка);
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Представление);
	Результат.Вставить("СчетаФактуры",  ТаблицаЗаявленияОВвозе.ВыгрузитьКолонку("Ссылка"));
	Результат.Вставить("ДокументПоОснованиюТребуется",  Истина);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию", ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию);
	
	Возврат Результат;
	
КонецФункции

Функция ЗаписьКнигиПокупокНаОсновании(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("ЗаписиКнигиПокупок", Новый Массив());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписьКнигиПокупок.Ссылка КАК Ссылка,
	|	ЗаписьКнигиПокупок.Дата КАК Дата,
	|	ЗаписьКнигиПокупок.Номер КАК Номер,
	|	ЗаписьКнигиПокупок.Проведен КАК Проведен
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ЗаписьКнигиПокупок
	|ГДЕ
	|	ЗаписьКнигиПокупок.ДокументОснование = &Основание
	|	И НЕ ЗаписьКнигиПокупок.ПометкаУдаления
	|";
	Запрос.УстановитьПараметр("Основание", ПараметрыРегистрации.Ссылка);
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаЗаписиКнигиПокупок = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	МассивСтрокПредставления = Новый Массив();
	Если ТаблицаЗаписиКнигиПокупок.Количество() > 0 Тогда
		Если ТаблицаЗаписиКнигиПокупок.Количество() > 1 Тогда
			СтрокаПредставления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			       НСтр("ru = 'Записи книги покупок (%1)';
						|en = 'Purchase ledger entries (%1)'"),
			       Строка(ТаблицаЗаписиКнигиПокупок.Количество()));
			НавигационнаяСсылка = "ОткрытьСписокЗаписейКнигиПокупок";
			МассивСтрокПредставления.Добавить(Новый ФорматированнаяСтрока(СтрокаПредставления, , ЦветаСтиля.ЦветГиперссылки, , НавигационнаяСсылка));
		Иначе
			ЗаписьКнигиПокупок = ТаблицаЗаписиКнигиПокупок[0];
			СтрокаПредставления = Документы.ЗаписьКнигиПокупок.ПредставлениеЗаписиКнигиПокупок(
									ЗаписьКнигиПокупок.Номер, ЗаписьКнигиПокупок.Дата, ЗаписьКнигиПокупок.Проведен);
			НавигационнаяСсылка = "ОткрытьЗаписьКнигиПокупок";
			МассивСтрокПредставления.Добавить(Новый ФорматированнаяСтрока(СтрокаПредставления, , ЦветаСтиля.ЦветГиперссылки, , НавигационнаяСсылка));
		КонецЕсли;
		
		Если ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.ЗаписьКнигиПокупок) Тогда
			МассивСтрокПредставления.Добавить(" ");
			СтрокаПредставления = НСтр("ru = 'Добавить';
										|en = 'Add'");
			НавигационнаяСсылка = "ДобавитьЗаписьКнигиПокупок";
			МассивСтрокПредставления.Добавить(Новый ФорматированнаяСтрока(СтрокаПредставления, , ЦветаСтиля.ЦветГиперссылки, , НавигационнаяСсылка));
		КонецЕсли;
			
	ИначеЕсли ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.ЗаписьКнигиПокупок) Тогда
		СтрокаПредставления = НСтр("ru = 'Зарегистрировать запись книги покупок';
									|en = 'Register purchase ledger entry'");
		НавигационнаяСсылка = "ДобавитьЗаписьКнигиПокупок";
		МассивСтрокПредставления.Добавить(Новый ФорматированнаяСтрока(СтрокаПредставления, , ЦветаСтиля.ЦветГиперссылки, , НавигационнаяСсылка));
	Иначе
		СтрокаПредставления = НСтр("ru = 'Запись книги покупок не зарегистрирована';
									|en = 'Purchase ledger entry is not registered'");
		МассивСтрокПредставления.Добавить(Новый ФорматированнаяСтрока(СтрокаПредставления));
	КонецЕсли;
	
	Результат.Представление      = Новый ФорматированнаяСтрока(МассивСтрокПредставления);
	Результат.ЗаписиКнигиПокупок = ТаблицаЗаписиКнигиПокупок.ВыгрузитьКолонку("Ссылка");
	
	Возврат Результат;
	
КонецФункции

// Возвращает Истина, если указанная дата меньше даты начала действия закона 150-ФЗ
// В противном случае - Ложь.
// 
// Параметры:
//   Дата - проверяемая дата
// 
// Возвращаемое значение:
//   Результат - Булево
//
Функция УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(Дата) Экспорт
	
	Возврат УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта <= Дата;
	
КонецФункции

// Ищет имеющиеся и создает новые счета-фактуры полученные или иные документы подтверждения НДС
// по таблице оснований 
//
// Параметры:
//   ТаблицаОснований - таблица с данными для регистрации счетов-фактур с колонками:
//          * ИдентификаторСтроки - идентификатор строки для сопоставления с исходной таблицей вызывающего механизма
//          * ДокументОснование - ссылка на документ-основание счета-фактуры
//          * Организация - организация-покупатель
//          * Контрагент - поставщик
//          * Валюта - валюта счета-фактуры
//          * ПредъявленСФ - Булево - Истина, если предъявлен счет-фактура, иначе считается, что это иной документ
//          * НомерСФ - входящий номер счета-фактуры
//          * ДатаСФ - входящая дата счета-фактуры (дата составления)
//          * НаименованиеДокумента - наименование иного документа подтверждения НДС
//          * НалогообложениеНДС - налогообложение НДС поставщика
// 
// Возвращаемое значение:
//   СчетаФактуры - ТаблицаЗначений - таблица с колонками СчетФактура, ДокументОснование и ИдентификаторСтроки
//
Функция ЗарегистрироватьСчетаФактурыПолученныеПоТаблицеОснований(ТаблицаОснований) Экспорт
	
	ТаблицаСФ = ТаблицаОснований.Скопировать(,"ИдентификаторСтроки,ДокументОснование");
	ТаблицаСФ.Колонки.Добавить("СчетФактура");
	ТаблицаСФ.Индексы.Добавить("ДокументОснование");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОснований", ТаблицаОснований);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.ДокументОснование,
	|	ТаблицаОснований.ПредъявленСФ,
	|	ТаблицаОснований.НаименованиеДокумента,
	|	ТаблицаОснований.НомерСФ,
	|	ТаблицаОснований.ДатаСФ,
	|	ТаблицаОснований.Контрагент,
	|	ТаблицаОснований.Организация,
	|	ТаблицаОснований.Валюта,
	|	ТаблицаОснований.Дата,
	|	ТаблицаОснований.НалогообложениеНДС
	|ПОМЕСТИТЬ СчетаФактурыИтог
	|ИЗ
	|	&ТаблицаОснований КАК ТаблицаОснований
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаОснований.ПредъявленСФ
	|;
	|
	|ВЫБРАТЬ
	|	СчетаФактурыИтог.ПредъявленСФ,
	|	СчетаФактурыИтог.ДокументОснование,
	|	СчетаФактурыИтог.Организация,
	|	СчетаФактурыИтог.Дата,
	|	СчетаФактурыИтог.НомерСФ,
	|	СчетаФактурыИтог.ДатаСФ,
	|	СчетаФактурыИтог.Контрагент,
	|	СчетаФактурыИтог.Валюта,
	|	СчетаФактурыИтог.НалогообложениеНДС,
	|	NULL КАК НаименованиеДокумента,
	|	СозданныеСчетаФактуры.Ссылка КАК СчетФактура,
	|	СозданныеСчетаФактуры.Ссылка ЕСТЬ NULL КАК СчетФактураОтсутствует
	|ИЗ
	|	СчетаФактурыИтог
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК СозданныеСчетаФактуры
	|		
	|	ПО
	|		СозданныеСчетаФактуры.Ссылка.Номер = СчетаФактурыИтог.НомерСФ
	|		И СозданныеСчетаФактуры.Ссылка.ДатаСоставления = СчетаФактурыИтог.ДатаСФ
	|		И СозданныеСчетаФактуры.Ссылка.Контрагент = СчетаФактурыИтог.Контрагент
	|		И СозданныеСчетаФактуры.Ссылка.Валюта = СчетаФактурыИтог.Валюта
	|		И СозданныеСчетаФактуры.Ссылка.Организация = СчетаФактурыИтог.Организация
	|		И СозданныеСчетаФактуры.ДокументОснование = СчетаФактурыИтог.ДокументОснование
	|ГДЕ
	|	СчетаФактурыИтог.ПредъявленСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаФактурыИтог.ПредъявленСФ,
	|	СчетаФактурыИтог.ДокументОснование,
	|	СчетаФактурыИтог.Организация,
	|	СчетаФактурыИтог.Дата,
	|	СчетаФактурыИтог.НомерСФ,
	|	СчетаФактурыИтог.ДатаСФ,
	|	СчетаФактурыИтог.Контрагент,
	|	NULL,
	|	NULL,
	|	СчетаФактурыИтог.НаименованиеДокумента,
	|	СозданныеСчетаФактуры.Ссылка КАК СчетФактура,
	|	СозданныеСчетаФактуры.Ссылка ЕСТЬ NULL КАК СчетФактураОтсутствует
	|ИЗ
	|	СчетаФактурыИтог
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ИнойДокументПодтвержденияНДС КАК СозданныеСчетаФактуры
	|		
	|	ПО
	|		СозданныеСчетаФактуры.НомерВходящегоДокумента = СчетаФактурыИтог.НомерСФ
	|		И СозданныеСчетаФактуры.ДатаВходящегоДокумента = СчетаФактурыИтог.ДатаСФ
	|		И СозданныеСчетаФактуры.НаименованиеДокумента = СчетаФактурыИтог.НаименованиеДокумента
	|		И СозданныеСчетаФактуры.Контрагент = СчетаФактурыИтог.Контрагент
	|		И СозданныеСчетаФактуры.Организация = СчетаФактурыИтог.Организация
	|		И СозданныеСчетаФактуры.ДокументОснование = СчетаФактурыИтог.ДокументОснование
	|ГДЕ
	|	НЕ СчетаФактурыИтог.ПредъявленСФ
	|";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СчетФактураОтсутствует Тогда
			Если Выборка.ПредъявленСФ Тогда
				Если Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
					ПолноеИмяДокумента = "СчетФактураПолученныйНалоговыйАгент";
				Иначе
					ПолноеИмяДокумента = "СчетФактураПолученный";
				КонецЕсли;
			Иначе
				ПолноеИмяДокумента = "ИнойДокументПодтвержденияНДС";
			КонецЕсли;
			ДокументОбъект = Документы[ПолноеИмяДокумента].СоздатьДокумент();
			ДанныеЗаполнения = Новый Структура;
			ДанныеЗаполнения.Вставить("Организация", Выборка.Организация);
			ДанныеЗаполнения.Вставить("Контрагент", Выборка.Контрагент);
			ДанныеЗаполнения.Вставить("Дата", Выборка.Дата);
			ДанныеЗаполнения.Вставить("НомерСФ", Выборка.НомерСФ);
			ДанныеЗаполнения.Вставить("ДатаСоставления", Выборка.ДатаСФ);
			ДанныеЗаполнения.Вставить("ДокументОснование", Выборка.ДокументОснование);
			ДанныеЗаполнения.Вставить("НаименованиеДокумента", Выборка.НаименованиеДокумента);
			ДокументОбъект.Заполнить(ДанныеЗаполнения);
			ДокументОбъект.Записать();
			СчетФактура = ДокументОбъект.Ссылка;
		Иначе
			СчетФактура = Выборка.СчетФактура;
		КонецЕсли;
		
		СтрокиТЧ = ТаблицаСФ.НайтиСтроки(Новый Структура("ДокументОснование", Выборка.ДокументОснование));
		Для каждого СтрокаТЧ Из СтрокиТЧ Цикл
			СтрокаТЧ.СчетФактура = СчетФактура;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаСФ.Индексы.Добавить("ИдентификаторСтроки");
	Возврат ТаблицаСФ;
	
КонецФункции

#КонецОбласти

#Область УчетИсходящегоНДС

// Формирует список доступных значений по настройка учета НДС и отражаемой операции.
//
// Параметры:
// 	ПараметрыЗаполнения - Структура - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи().
//
// Возвращаемое значение:
// 	Результат - Массив - Доступные значения налогообложения НДС закупки.
// 
Функция ДоступныеНалогообложенияНДСПродажи(ПараметрыЗаполнения) Экспорт
	
	// Подготовим массив налогообложений доступных по настройкам.
	ДоступныеПоНастройкам = Новый Массив;
	ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата, ПараметрыЗаполнения.Склад);
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ПрименяетсяЕНВД = ПараметрыУчетаОрганизации.ПрименяетсяЕНВД;
		ОсобыйПорядокУчетаНДСПриПроизводствеДЦ = ПараметрыУчетаОрганизации.ОсобыйПорядокУчетаНДСПриПроизводствеДЦ;
	Иначе
		ПрименяетсяЕНВД = ПараметрыУчетаИБ.ПрименяетсяЕНВД;
		ОсобыйПорядокУчетаНДСПриПроизводствеДЦ = ПараметрыУчетаИБ.ОсобыйПорядокУчетаНДСПриПроизводствеДЦ;
	КонецЕсли;
	
	ДатаДокумента = ?(ЗначениеЗаполнено(ПараметрыЗаполнения.Дата), ПараметрыЗаполнения.Дата, ТекущаяДатаСеанса());
	Если ПараметрыУчетаИБ.ЭкспортНесырьевыхТоваров Или ПараметрыУчетаИБ.ЭкспортСырьевыхТоваровУслуг Тогда
		ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	КонецЕсли;
	Если ПараметрыУчетаИБ.ЭкспортНесырьевыхТоваров И ДатаДокумента >= ПараметрыУчетаИБ.ДатаРазделенияЭкспорта Тогда
		ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	КонецЕсли;
	Если ПараметрыУчетаИБ.ЭкспортСырьевыхТоваровУслуг И ДатаДокумента >= ПараметрыУчетаИБ.ДатаРазделенияЭкспорта Тогда
		ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	КонецЕсли;
	Если ПараметрыУчетаИБ.ПродажаТоваровОблагаемыхНДСУПокупателя Тогда
		ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПрименяетсяЕНВД Тогда
		ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	КонецЕсли;
	
	Если ОсобыйПорядокУчетаНДСПриПроизводствеДЦ Тогда
		ДоступныеПоНастройкам.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
	КонецЕсли;
	
	// Подготовим массив налогообложений недоступных по операции.
	НедоступныеПоОперации = Новый Массив;
	
	Если ПараметрыЗаполнения.РеализацияТоваров Или ПараметрыЗаполнения.РеализацияРаботУслуг Тогда
		// Если это накладная или заказ, но обособленное обеспечение не используется,
		// используем единое налогообложение ПродажаНаЭкспорт для поддержки в одном документе сырьевого и несырьевого экспорта.
		Если Не ПараметрыЗаполнения.ЭтоЗаказ
			 Или Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		Иначе
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		КонецЕсли;
		
		Если ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		КонецЕсли;
		
		Если Не ПараметрыЗаполнения.РеализацияТоваров Тогда
			НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупВозвратнойТарыКлиентом Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупТоваровХранителем Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
	КонецЕсли;	
	
	Если ПараметрыЗаполнения.РеализацияПрочихАктивов Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаНаКомиссию
		ИЛИ ПараметрыЗаполнения.ВозвратТоваровОтКомиссионера Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетДавальцу Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетКомиссионера Тогда
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
		НедоступныеПоОперации.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РозничнаяПродажа Тогда
		Для каждого Значение Из ДоступныеПоНастройкам Цикл
			Если Значение <> ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи Тогда
				НедоступныеПоОперации.Добавить(Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Возвращаем виды деятельности доступные по настройкам с исключением недоступных по операции.
	Возврат ОбщегоНазначенияКлиентСервер.РазностьМассивов(ДоступныеПоНастройкам, НедоступныеПоОперации);
	
КонецФункции

// Учитывает особенности заполнение налообложения на экспорт.
// В заказах при использовании обособленного обеспечения потребностей явно указывается вид экспорта: сырьевой или несырьевой.
// Это необходимо для того, чтобы корректно вести учет при обособленных закупках под заказы.
// В остальных случаях в документах продажи используется единое налогообложение "ПродажаНаЭкспорт".
//
// Параметры:
// 	  НалогообложениеНДС - ПеречислениеСсылка.НалогообложениеНДС - Текущее значение налогообложения
// 	  ПараметрыЗаполнения - Структура - См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи().
//
// Возращаемое значение:
// 	Булево - Истина, если выполнена корректировка налогообложения.
//
Функция СкорректироватьНалогообложениеПродажиНаЭкспорт(НалогообложениеНДС, ПараметрыЗаполнения) Экспорт
	
	Результат = Ложь;
	
	Если НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
		И НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров  
		И НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг Тогда
		Возврат Результат;
	КонецЕсли;
	
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	Если Не ПараметрыЗаполнения.ЭтоЗаказ
		 И (НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг
		 	ИЛИ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров) Тогда
		НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;
		Результат = Истина;
	ИначеЕсли ПараметрыЗаполнения.ЭтоЗаказ 
		 И НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
		 И ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
		Если НастройкиУчета.ЭкспортСырьевыхТоваровУслуг И НастройкиУчета.ЭкспортНесырьевыхТоваров Тогда
			НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
		ИначеЕсли НастройкиУчета.ЭкспортСырьевыхТоваровУслуг Тогда
			НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг; 
		Иначе
			НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;  
		КонецЕсли;
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СчетаФактурыВыданныеПоДокументуПродажи(ПараметрыРегистрации) Экспорт
	
	СчетаФактуры = Новый Массив;
	ТекстСчетФактура = НСтр("ru = 'Оформление счета-фактуры не требуется';
							|en = 'Tax invoice registration is not required'");
	НавигационнаяСсылка = "";
	ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = Ложь;
	
	СчетФактураТребуется = Не СчетФактураВыданныйНеТребуется(ПараметрыРегистрации);
	Если СчетФактураТребуется Тогда
		ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию = ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.СчетФактураВыданный);
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", ПараметрыРегистрации.Организация);
		ТаблицаСчетаФактуры = Документы.СчетФактураВыданный.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка, Отбор,	Неопределено, Ложь);
		ТаблицаСчетаФактуры.Свернуть("Номер,Дата,Проведен,Ссылка");
		
		Если ТаблицаСчетаФактуры.Количество() > 0 Тогда
			Если ТаблицаСчетаФактуры.Количество() > 1 Тогда
				ТекстСчетФактура = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				                      НСтр("ru = 'Счета-фактуры (%1)';
											|en = 'Tax invoices (%1)'"),
				                      Строка(ТаблицаСчетаФактуры.Количество()));
				НавигационнаяСсылка = "ОткрытьСписокСчетовФактурВыданных";
			Иначе
				СчетФактура = ТаблицаСчетаФактуры[0];
				ТекстСчетФактура = Документы.СчетФактураВыданный.ПредставлениеСчетаФактуры(
										СчетФактура.Номер, СчетФактура.Дата, СчетФактура.Проведен);
				НавигационнаяСсылка = "ОткрытьСчетФактуруВыданный";
			КонецЕсли;
		ИначеЕсли ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию Тогда
			ТекстСчетФактура = НСтр("ru = 'Оформить счет-фактуру';
									|en = 'Register tax invoice'");
			НавигационнаяСсылка = "ВвестиНовыйСчетФактуруВыданный";
		Иначе
			ТекстСчетФактура = НСтр("ru = 'Счет-фактура не оформлен';
									|en = 'Tax invoice is not registered'");
		КонецЕсли;
		
		СчетаФактуры = ТаблицаСчетаФактуры.ВыгрузитьКолонку("Ссылка");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
	Иначе
		ЦветТекста = Неопределено;
	КонецЕсли;
	
	Представление = Новый ФорматированнаяСтрока(ТекстСчетФактура, , ЦветТекста, , НавигационнаяСсылка);
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Представление);
	Результат.Вставить("СчетаФактуры",  СчетаФактуры);
	Результат.Вставить("ДокументПоОснованиюТребуется",  СчетФактураТребуется);
	Результат.Вставить("ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию", ЕстьПравоИнтерактивногоДобавленияДокументаПоОснованию);
	
	Возврат Результат;
	
КонецФункции

Функция СчетФактураВыданныйНеТребуется(ПараметрыРегистрации) Экспорт
	
	СчетФактураНеТребуется = Ложь;
	
	Если НЕ ПараметрыРегистрации.РеализацияТоваров
	     И НЕ ПараметрыРегистрации.РеализацияРаботУслуг
	     И НЕ ПараметрыРегистрации.РеализацияПрочихАктивов
	     И НЕ ПараметрыРегистрации.ВозвратТоваровПоставщику
	     И НЕ ПараметрыРегистрации.ПрочееНачислениеНДС
	     И НЕ ПараметрыРегистрации.ИсправлениеОшибок
	     И НЕ ПараметрыРегистрации.КорректировкаПоСогласованиюСторон Тогда
		СчетФактураНеТребуется = Истина;
	ИначеЕсли ПараметрыРегистрации.ВозвратТоваровПоставщику
		И (ПараметрыРегистрации.КорректировкаПоСогласованиюСторон
				И ПараметрыРегистрации.Дата < ДатаОтраженияВозвратовКорректировочнымиСФ()
			ИЛИ Не ПараметрыРегистрации.КорректировкаПоСогласованиюСторон
				И ПараметрыРегистрации.Дата >= ДатаОтраженияВозвратовКорректировочнымиСФ()) Тогда
		СчетФактураНеТребуется = Истина;
	КонецЕсли;
	
	Возврат СчетФактураНеТребуется;
	
КонецФункции

Процедура ОтразитьДокументПоПодтверждениюСтавки0(ДокументРеализации, ДатаПодтверждения, Организация) Экспорт
	
	ДополнительныеСвойства = Новый Структура;
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	
	Движения = Новый Структура;
	
	НДСЗаписиКнигиПродаж = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей();
	НДСЗаписиКнигиПродаж.Отбор.Регистратор.Установить(ДокументРеализации);
	Движения.Вставить("НДСЗаписиКнигиПродаж", НДСЗаписиКнигиПродаж);
	
	//++ НЕ УТ
	ОтражениеДокументовВРеглУчете = РегистрыСведений.ОтражениеДокументовВРеглУчете.СоздатьНаборЗаписей();
	ОтражениеДокументовВРеглУчете.Отбор.Регистратор.Установить(ДокументРеализации);
	Движения.Вставить("ОтражениеДокументовВРеглУчете", ОтражениеДокументовВРеглУчете);
	
	Хозрасчетный = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	Хозрасчетный.Отбор.Регистратор.Установить(ДокументРеализации);
	Движения.Вставить("Хозрасчетный", Хозрасчетный);
	//-- НЕ УТ
	
	Регистры = Новый Структура;
	Регистры.Вставить("НДСЗаписиКнигиПродаж");
	//++ НЕ УТ
	Регистры.Вставить("ОтражениеДокументовВРеглУчете");
	//-- НЕ УТ
	
	МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументРеализации);
	
	МенеджерДокумента.ИнициализироватьДанныеДокумента(ДокументРеализации, ДополнительныеСвойства, Регистры); 
	
	УчетНДСУП.СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Ложь);
	//++ НЕ УТ
	
	РеглУчетПроведениеСервер.ДобавитьПараметрыВыборочнойРегистрацииКОтражениюВРеглУчете(
		ДополнительныеСвойства,
		Организация,
		ДатаПодтверждения);
		
	Документ = Новый Структура("Ссылка, Движения", ДокументРеализации, Движения);
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(Документ, ДополнительныеСвойства, Движения, Ложь);
	//-- НЕ УТ
	
	Для каждого Движение Из Движения Цикл
		Движение.Значение.Записать();
	КонецЦикла;
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(Документ, ДополнительныеСвойства, Движения, Ложь);
	//-- НЕ УТКА
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеСчетовФактурКомиссионеру

Функция СчетаФактурыКомиссионеруПоОтчету(ПараметрыРегистрации) Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Представление", Новый ФорматированнаяСтрока(""));
	Результат.Вставить("СчетаФактуры",  Новый Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаФактурыКомитентов.Покупатель,
	|	СчетаФактурыКомитентов.НомерСчетаФактуры,
	|	СчетаФактурыКомитентов.ДатаСчетаФактуры
	|ИЗ
	|	РегистрСведений.СчетаФактурыКомиссионерамКОформлению КАК СчетаФактурыКомитентов
	|ГДЕ
	|	СчетаФактурыКомитентов.ОтчетКомиссионера = &Ссылка
	|";
	
	Запрос.УстановитьПараметр("Ссылка", ПараметрыРегистрации.Ссылка);
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	НавигационнаяСсылка = "";
	СчетаФактуры = Новый Массив;;
	Если Не РезультатЗапроса.Пустой() Тогда
		
		КоличествоКОформлению = РезультатЗапроса.Выбрать().Количество();
		ТекстСчетФактура = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		                      НСтр("ru = 'Требуется оформление счетов-фактур комиссионеру (%1)';
									|en = 'It is required to register tax invoices for the consignee (%1)'"),
		                      Строка(КоличествоКОформлению));
		НавигационнаяСсылка = "ОткрытьСчетаФактурыКомиссионеруКОформлению";
		
	ИначеЕсли ЗначениеЗаполнено(ПараметрыРегистрации.Ссылка) Тогда
		
		ТаблицаСчетаФактуры = Документы.СчетФактураКомиссионеру.СчетаФактурыПоОснованию(ПараметрыРегистрации.Ссылка, ПараметрыРегистрации.Организация);
		Если ТаблицаСчетаФактуры.Количество() > 1 Тогда
			ТекстСчетФактура = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			                      НСтр("ru = 'Счета-фактуры выданные комиссионеру (%1)';
										|en = 'Tax invoices issued to the consignee (%1)'"),
			                      Строка(ТаблицаСчетаФактуры.Количество()));
			НавигационнаяСсылка = "ОткрытьСписокСчетовФактурКомиссионеру";
		ИначеЕсли ТаблицаСчетаФактуры.Количество() = 1 Тогда
			СчетФактура = ТаблицаСчетаФактуры[0];
			ТекстСчетФактура = Документы.СчетФактураКомиссионеру.ПредставлениеСчетаФактуры(
			                      СчетФактура.Номер, СчетФактура.Дата, СчетФактура.Проведен);
			НавигационнаяСсылка = "ОткрытьСчетФактуруКомиссионеру";
		Иначе
			ТекстСчетФактура = НСтр("ru = 'Оформление счетов-фактур комиссионеру не требуется';
									|en = 'It is not required to register tax invoices for the consignee'");
		КонецЕсли;
		СчетаФактуры = ТаблицаСчетаФактуры.ВыгрузитьКолонку("Ссылка");
		
	Иначе
		ТекстСчетФактура = НСтр("ru = 'Счета-фактуры комиссионеру';
								|en = 'Tax invoices to consignee'");
		НавигационнаяСсылка = "ОткрытьСчетаФактурыКомиссионеруКОформлению";
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
		
	Если ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
		ЦветТекста = ЦветаСтиля.ЦветГиперссылки;
	Иначе
		ЦветТекста = Неопределено;
	КонецЕсли;
	
	Представление = Новый ФорматированнаяСтрока(ТекстСчетФактура, , ЦветТекста, , НавигационнаяСсылка);
	
	Результат = Новый Структура;
	Результат.Вставить("Представление", Представление);
	Результат.Вставить("СчетаФактуры",  СчетаФактуры);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ТипыНалогообложенияНДСУчитываетсяВСтоимости() Экспорт
	
	ТипыНалогообложенияНДС = Новый Массив();
	ТипыНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	ТипыНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	
	Возврат ТипыНалогообложенияНДС;
	
КонецФункции

// Возвращает список типов налогообложения НДС, по которым НДС может быть принят к вычету (выделяется на счете 19).
//
// Возвращаемое значение:
//	Массив - элементы перечисления ТипыНалогообложенияНДС.
//
Функция ТипыНалогообложенияНДСНеУчитываетсяВСтоимости() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
	Результат.Добавить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ);
	
	Возврат Результат;
	
КонецФункции

Функция ТипыЗапасовСобственные() Экспорт
	
	ТипыЗапасовСобственные = Новый Массив();
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Услуга);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.ПустаяСсылка());
	
	Возврат ТипыЗапасовСобственные;
	
КонецФункции

Функция ТипыНоменклатурыТовар() Экспорт
	
	ТипыНоменклатуры = Новый Массив();
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	
	Возврат ТипыНоменклатуры;
	
КонецФункции

Функция ТипыНоменклатурыУслугаРабота() Экспорт
	
	ТипыНоменклатуры = Новый Массив();
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	ТипыНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	
	Возврат ТипыНоменклатуры;
	
КонецФункции

#КонецОбласти

#Область ФормированиеЗаписейКнигиПокупокПродаж

// Выполняет Формирование записей книг покупок и продаж.
// 
// Параметры:
// 	 КонецПериода - Дата - Период, по который необходимо выполнить отражение
// 	 МассивОрганизаций - Массив, Неопределено - Организации, по которым необходимо сформировать записи книг.
// 																Если Неопределено, то по всем организациям.
// 	 МассивСчетовФактур - Массив, Неопределено - Счета-фактуры (документы поступления), по которым необходимо сформировать записи книг.
// 																Если Неопределено, то по всем счетам-фактурам.
//
Процедура СформироватьЗаписиКнигиПокупокПродаж(КонецПериода, МассивОрганизаций = Неопределено, МассивСчетовФактур = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ();
	
	НомерЗаданияДоРасчета = РегистрыСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж.УвеличитьНомерЗадания();
	
	Месяц = МесяцДляРасчета(КонецПериода, НомерЗаданияДоРасчета, МассивОрганизаций, МассивСчетовФактур);  
	Пока Месяц <> Неопределено Цикл
		
		ПараметрыРасчета = Новый Структура;
		ПараметрыРасчета.Вставить("НомерЗадания",            НомерЗаданияДоРасчета);
		ПараметрыРасчета.Вставить("НачалоПериода",           НачалоМесяца(Месяц));
		ПараметрыРасчета.Вставить("КонецПериода",            КонецМесяца(Месяц));
		ПараметрыРасчета.Вставить("МассивОрганизаций",       МассивОрганизаций);
		ПараметрыРасчета.Вставить("МассивСчетовФактур",      МассивСчетовФактур);
		ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
		
		Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
			НачатьТранзакцию();
			Попытка
				ЗаблокироватьРегистрЗаданий(ПараметрыРасчета);
				ПолучитьЗадания(ПараметрыРасчета);
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не удалось выполнить по причине %1';
						|en = 'Cannot execute due to %1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Формирование записей книг покупок и продаж.';
						|en = 'Generate purchase and sales ledger entries.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
					УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения); 
				ВызватьИсключение ТекстСообщения;
			КонецПопытки;
		Иначе
			ПолучитьЗадания(ПараметрыРасчета);
		КонецЕсли;
			
		НачатьТранзакцию();
		Попытка
			ВыполнитьРасчетСЗамеромВремени(ПараметрыРасчета);
			Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
				ЗаблокироватьРегистрЗаданий(ПараметрыРасчета);
			КонецЕсли;
			ЗафиксироватьРезультат(ПараметрыРасчета);
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не удалось выполнить по причине %1';
						|en = 'Cannot execute due to %1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Формирование записей книг покупок и продаж.';
					|en = 'Generate purchase and sales ledger entries.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
				УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения); 
				
			ВызватьИсключение ТекстСообщения;
			
		КонецПопытки;
		
		Месяц = МесяцДляРасчета(КонецПериода, НомерЗаданияДоРасчета, МассивОрганизаций, МассивСчетовФактур);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаблокироватьРегистрЗаданий(ПараметрыРасчета)
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж");
	ЭлементБлокировки.УстановитьЗначение("НомерЗадания", Новый Диапазон(Неопределено, ПараметрыРасчета.НомерЗадания));
	
	ИсточникБлокировки = Новый ТаблицаЗначений;
	ИсточникБлокировки.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ИсточникБлокировки.Колонки.Добавить("СчетФактура", Новый ОписаниеТипов(Документы.ТипВсеСсылки().Типы()));
	
	Если ПараметрыРасчета.МассивСчетовФактур <> Неопределено Тогда
		ИсточникБлокировки.ЗагрузитьКолонку(ПараметрыРасчета.МассивСчетовФактур, "СчетФактура");
		ЭлементБлокировки.ИсточникДанных = ИсточникБлокировки;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СчетФактура", "СчетФактура");
	КонецЕсли;
	Если ПараметрыРасчета.МассивОрганизаций <> Неопределено Тогда
		Если ТипЗнч(ПараметрыРасчета.МассивОрганизаций) = Тип("СписокЗначений") Тогда
			ИсточникБлокировки.ЗагрузитьКолонку(ПараметрыРасчета.МассивОрганизаций.ВыгрузитьЗначения(), "Организация");
		ИначеЕсли ТипЗнч(ПараметрыРасчета.МассивОрганизаций) = Тип("СправочникСсылка.Организации") Тогда
			ИсточникБлокировки.ЗагрузитьКолонку(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыРасчета.МассивОрганизаций), "Организация");
		Иначе
			ИсточникБлокировки.ЗагрузитьКолонку(ПараметрыРасчета.МассивОрганизаций, "Организация");
		КонецЕсли;
		ЭлементБлокировки.ИсточникДанных = ИсточникБлокировки;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	КонецЕсли;
	
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ВыполнитьРасчетСЗамеромВремени(ПараметрыРасчета)
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("УчетНДС.ФормированиеЗаписейКнигПокупокИПродажПоПриобретеннымЦенностям");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоЗаданий
	|ИЗ
	|	Задания";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоЗаданий = Выборка.КоличествоЗаданий;
	Иначе
		КоличествоЗаданий = 0;
	КонецЕсли;
	
	ВыполнитьРасчет(ПараметрыРасчета);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоЗаданий);
	
КонецПроцедуры

Процедура ВыполнитьРасчет(ПараметрыРасчета)
	
	СформироватьНДСПредъявленный(ПараметрыРасчета);
	СформироватьДанныеПоЗачетамАвансов(ПараметрыРасчета);
	СформироватьНДСЗаписиКнигиПокупок(ПараметрыРасчета);
	СформироватьНДСЗаписиКнигиПродаж(ПараметрыРасчета);
	//++ НЕ УТ
	СформироватьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета);
	ВернутьДокументыКОтражениюВУчете(ПараметрыРасчета);
	//-- НЕ УТ
	
КонецПроцедуры

Функция МесяцДляРасчета(КонецПериода, НомерЗадания, МассивОрганизаций, МассивСчетовФактур)
	
	Месяц = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НАЧАЛОПЕРИОДА(Задания.Месяц, МЕСЯЦ) КАК Месяц
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж КАК Задания
	|ГДЕ
	|	(Задания.Месяц <= &КонецПериода ИЛИ &КонецПериода = ДАТАВРЕМЯ(1,1,1))
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И (&ВсеОрганизации ИЛИ Задания.Организация В (&МассивОрганизаций))
	|	И (&ВсеСчетаФактуры ИЛИ Задания.СчетФактура В (&МассивСчетовФактур))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НАЧАЛОПЕРИОДА(Задания.Месяц, МЕСЯЦ) ВОЗР
	|";
	
	Запрос.УстановитьПараметр("КонецПериода",       ?(КонецПериода = КонецМесяца(ТекущаяДатаСеанса()),'00010101',КонецПериода));
	Запрос.УстановитьПараметр("МассивОрганизаций",  МассивОрганизаций);
	Запрос.УстановитьПараметр("ВсеОрганизации",     Не ЗначениеЗаполнено(МассивОрганизаций));
	Запрос.УстановитьПараметр("МассивСчетовФактур", МассивСчетовФактур);
	Запрос.УстановитьПараметр("ВсеСчетаФактуры",    Не ЗначениеЗаполнено(МассивСчетовФактур));
	Запрос.УстановитьПараметр("НомерЗадания",       НомерЗадания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Месяц = Выборка.Месяц;
	КонецЕсли;
	
	Возврат Месяц;
	
КонецФункции

Процедура ПолучитьЗадания(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация,
	|	Задания.СчетФактура
	|ПОМЕСТИТЬ Задания
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж КАК Задания
	|ГДЕ
	|	Задания.Месяц МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И (&ВсеОрганизации ИЛИ Задания.Организация В (&МассивОрганизаций))
	|	И (&ВсеСчетаФактуры ИЛИ Задания.СчетФактура В (&МассивСчетовФактур)) 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ
	|	Задания.Месяц,
	|	Задания.НомерЗадания,
	|	Задания.Организация,
	|	Задания.СчетФактура
	|ПОМЕСТИТЬ ИсходныеЗадания
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж КАК Задания
	|ГДЕ
	|	Задания.Месяц МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Задания.НомерЗадания <= &НомерЗадания
	|	И (&ВсеОрганизации ИЛИ Задания.Организация В (&МассивОрганизаций))
	|	И (&ВсеСчетаФактуры ИЛИ Задания.СчетФактура В (&МассивСчетовФактур)) 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ВсеОрганизации",     Не ЗначениеЗаполнено(ПараметрыРасчета.МассивОрганизаций));
	Запрос.УстановитьПараметр("МассивСчетовФактур", ПараметрыРасчета.МассивСчетовФактур);
	Запрос.УстановитьПараметр("ВсеСчетаФактуры",    Не ЗначениеЗаполнено(ПараметрыРасчета.МассивСчетовФактур));
	Запрос.УстановитьПараметр("НомерЗадания",       ПараметрыРасчета.НомерЗадания);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗафиксироватьРезультат(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗаданияКОчистке.Месяц                               КАК Месяц,
	|	ЗаданияКОчистке.НомерЗадания                        КАК НомерЗадания,
	|	ЗаданияКОчистке.Организация                         КАК Организация,
	|	ЗаданияКОчистке.СчетФактура                         КАК СчетФактура
	|ИЗ
	|	ИсходныеЗадания КАК ЗаданияКОчистке
	|;
	|
	|ВЫБРАТЬ
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК ДокументОплаты
	|ПОМЕСТИТЬ ДокументыОплатыБезЗачетов
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ПО Задания.Организация = НДСЗаписиКнигиПродаж.Организация
	|			И Задания.СчетФактура = НДСЗаписиКнигиПродаж.Регистратор
	|			И (НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода)
	|			И НДСЗаписиКнигиПродаж.Активность
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ПО Задания.Организация = НДСЗаписиКнигиПокупок.Организация
	|			И Задания.СчетФактура = НДСЗаписиКнигиПокупок.Регистратор
	|			И (НДСЗаписиКнигиПокупок.Период > &КонецПериода)
	|			И НДСЗаписиКнигиПокупок.Активность
	|ГДЕ
	|	Задания.СчетФактура ССЫЛКА Документ.СчетФактураВыданныйАванс
	|	И НДСЗаписиКнигиПокупок.Регистратор ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК ДокументОплаты
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ПО Задания.Организация = НДСЗаписиКнигиПокупок.Организация
	|			И Задания.СчетФактура = НДСЗаписиКнигиПокупок.Регистратор
	|			И (НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода)
	|			И НДСЗаписиКнигиПокупок.Активность
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ПО Задания.Организация = НДСЗаписиКнигиПродаж.Организация
	|			И Задания.СчетФактура = НДСЗаписиКнигиПродаж.Регистратор
	|			И (НДСЗаписиКнигиПродаж.Период > &КонецПериода)
	|			И НДСЗаписиКнигиПродаж.Активность
	|ГДЕ
	|	Задания.СчетФактура ССЫЛКА Документ.СчетФактураПолученныйАванс
	|	И НДСЗаписиКнигиПродаж.Регистратор ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Месяц                                 КАК Месяц,
	|	Задания.НомерЗадания                          КАК НомерЗадания,
	|	Задания.Организация                           КАК Организация,
	|	Задания.СчетФактура                           КАК СчетФактура
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, МЕСЯЦ) КАК Месяц,
	|		&НомерЗадания                                 КАК НомерЗадания,
	|		Задания.Организация                           КАК Организация,
	|		Задания.СчетФактура                           КАК СчетФактура
	|	ИЗ
	|		ИсходныеЗадания КАК Задания
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|		ПО НДСПредъявленный.Период > &КонецПериода
	|			И НДСПредъявленный.Организация = Задания.Организация
	|			И НДСПредъявленный.СчетФактура = Задания.СчетФактура
	|			И НДСПредъявленный.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ 
	|	
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения, МЕСЯЦ) КАК Месяц,
	|		&НомерЗадания                                КАК НомерЗадания,
	|		Партии.Организация                           КАК Организация,
	|		Партии.СчетФактура                           КАК СчетФактура
	|	ИЗ
	|		Партии КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО Партии.Организация = НДССостояниеРеализации0.Организация
	|			И Партии.ДокументРеализации = НДССостояниеРеализации0.ДокументРеализации
	|			И НДССостояниеРеализации0.Состояние В (
	|				ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0),
	|				ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0))
	|			И НДССостояниеРеализации0.ДатаПодтверждения > &КонецПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(РасчетыСКлиентамиПоДокументам.Период, МЕСЯЦ),
	|		&НомерЗадания,
	|		ДокументыОплатыБезЗачетов.Организация,
	|		ДокументыОплатыБезЗачетов.СчетФактура
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыОплатыБезЗачетов КАК ДокументыОплатыБезЗачетов
	|			ПО РасчетыСКлиентамиПоДокументам.РасчетныйДокумент = ДокументыОплатыБезЗачетов.ДокументОплаты
	|				И (РасчетыСКлиентамиПоДокументам.Период > &КонецПериода)
	|				И (РасчетыСКлиентамиПоДокументам.Активность)
	|				И (РасчетыСКлиентамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|				И (РасчетыСКлиентамиПоДокументам.ПредоплатаРегл > 0)
	|	ГДЕ
	|		НЕ &НоваяАрхитектураВзаиморасчетов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(РасчетыСКлиентамиПоСрокам.Период, МЕСЯЦ),
	|		&НомерЗадания,
	|		ДокументыОплатыБезЗачетов.Организация,
	|		ДокументыОплатыБезЗачетов.СчетФактура
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСКлиентамиПоСрокам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыОплатыБезЗачетов КАК ДокументыОплатыБезЗачетов
	|			ПО РасчетыСКлиентамиПоСрокам.РасчетныйДокумент = ДокументыОплатыБезЗачетов.ДокументОплаты
	|				И (РасчетыСКлиентамиПоСрокам.Период > &КонецПериода)
	|				И (РасчетыСКлиентамиПоСрокам.Активность)
	|				И (РасчетыСКлиентамиПоСрокам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|				И (РасчетыСКлиентамиПоСрокам.ПредоплатаРегл > 0)
	|	ГДЕ
	|		&НоваяАрхитектураВзаиморасчетов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(ПодарочныеСертификаты.Период, МЕСЯЦ),
	|		&НомерЗадания,
	|		ДокументыОплатыБезЗачетов.Организация,
	|		ДокументыОплатыБезЗачетов.СчетФактура
	|	ИЗ
	|		РегистрНакопления.ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыОплатыБезЗачетов КАК ДокументыОплатыБезЗачетов
	|			ПО ПодарочныеСертификаты.Регистратор = ДокументыОплатыБезЗачетов.ДокументОплаты
	|				И (ПодарочныеСертификаты.Период > &КонецПериода)
	|				И (ПодарочныеСертификаты.Активность)
	|				И (ПодарочныеСертификаты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|				И (ПодарочныеСертификаты.Сумма > 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(РасчетыСПоставщикамиПоДокументам.Период, МЕСЯЦ),
	|		&НомерЗадания,
	|		ДокументыОплатыБезЗачетов.Организация,
	|		ДокументыОплатыБезЗачетов.СчетФактура
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщикамиПоДокументам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыОплатыБезЗачетов КАК ДокументыОплатыБезЗачетов
	|			ПО РасчетыСПоставщикамиПоДокументам.РасчетныйДокумент = ДокументыОплатыБезЗачетов.ДокументОплаты
	|				И (РасчетыСПоставщикамиПоДокументам.Период > &КонецПериода)
	|				И (РасчетыСПоставщикамиПоДокументам.Активность)
	|				И (РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|				И (РасчетыСПоставщикамиПоДокументам.ПредоплатаРегл > 0)
	|	ГДЕ
	|		НЕ &НоваяАрхитектураВзаиморасчетов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(РасчетыСПоставщикамиПоСрокам.Период, МЕСЯЦ),
	|		&НомерЗадания,
	|		ДокументыОплатыБезЗачетов.Организация,
	|		ДокументыОплатыБезЗачетов.СчетФактура
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщикамиПоСрокам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыОплатыБезЗачетов КАК ДокументыОплатыБезЗачетов
	|			ПО РасчетыСПоставщикамиПоСрокам.РасчетныйДокумент = ДокументыОплатыБезЗачетов.ДокументОплаты
	|				И (РасчетыСПоставщикамиПоСрокам.Период > &КонецПериода)
	|				И (РасчетыСПоставщикамиПоСрокам.Активность)
	|				И (РасчетыСПоставщикамиПоСрокам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|				И (РасчетыСПоставщикамиПоСрокам.ПредоплатаРегл > 0)
	|	ГДЕ
	|		&НоваяАрхитектураВзаиморасчетов
	//++ НЕ УТ 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(РасчетыПоФинансовымИнструментам.Период, МЕСЯЦ),
	|		&НомерЗадания,
	|		ДокументыОплатыБезЗачетов.Организация,
	|		ДокументыОплатыБезЗачетов.СчетФактура
	|	ИЗ
	|		РегистрНакопления.РасчетыПоФинансовымИнструментам КАК РасчетыПоФинансовымИнструментам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыОплатыБезЗачетов КАК ДокументыОплатыБезЗачетов
	|			ПО РасчетыПоФинансовымИнструментам.РасчетныйДокумент = ДокументыОплатыБезЗачетов.ДокументОплаты
	|				И (РасчетыПоФинансовымИнструментам.Период > &КонецПериода)
	|				И (РасчетыПоФинансовымИнструментам.Активность)
	|				И (РасчетыПоФинансовымИнструментам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|				И (РасчетыПоФинансовымИнструментам.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриобретениеУслугПоЛизингу))
	|				И (РасчетыПоФинансовымИнструментам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж))
	//-- НЕ УТ
	|	
	|	) КАК Задания
	|;
	|/////////////////////////////
	|УНИЧТОЖИТЬ ДокументыОплатыБезЗачетов
	|;
	|/////////////////////////////
	|УНИЧТОЖИТЬ ИсходныеЗадания
	|;
	|/////////////////////////////
	|УНИЧТОЖИТЬ Задания
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("НомерЗадания",      ПараметрыРасчета.НомерЗадания);
	Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаДляУдаления = Результат[0].Выбрать();
	ВыборкаДляЗаписи = Результат[2].Выбрать();
	
	Пока ВыборкаДляУдаления.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДляУдаления);
		МенеджерЗаписи.Удалить();
	КонецЦикла;
	
	Пока ВыборкаДляЗаписи.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.ЗаданияКФормированиюЗаписейКнигиПокупокПродаж.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаДляЗаписи);
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьПартии(ПараметрыРасчета)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Партии.МоментВремени КАК МоментВремени,
	|	Партии.Период КАК Период,
	|	Партии.Регистратор КАК Регистратор,
	|	Партии.Организация КАК Организация,
	|	АналитикаУчетаПартий.Контрагент КАК Контрагент,
	|	Партии.ДокументПоступления КАК СчетФактура,
	|	ВЫБОР 
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.СчетФактураПолученныйНалоговыйАгент
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.СчетФактураНалоговыйАгент ТОГДА
	|			ВЫБОР 
	|				КОГДА ВЫРАЗИТЬ(Партии.ДокументПоступления КАК Документ.СчетФактураНалоговыйАгент).ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|				КОГДА ВЫРАЗИТЬ(Партии.ДокументПоступления КАК Документ.СчетФактураНалоговыйАгент).ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|				КОГДА ВЫРАЗИТЬ(Партии.ДокументПоступления КАК Документ.СчетФактураНалоговыйАгент).ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|				КОГДА ВЫРАЗИТЬ(Партии.ДокументПоступления КАК Документ.СчетФактураНалоговыйАгент).ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|			КОНЕЦ
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|		КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ЗаявлениеОВвозеТоваров 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|		ИНАЧЕ Партии.ВидЦенности 
	|	КОНЕЦ КАК ВидЦенности,
	|	АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
	|	(ВЫБОР
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Партии.НалогообложениеПартии
	|	КОНЕЦ) КАК НалогообложениеФинПартии,
	|
	|	(ВЫБОР
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Партии.НалогообложениеНДС
	|	КОНЕЦ) КАК НалогообложениеПартии,
	|	
	|	Партии.СтатьяСписанияНДС КАК СтатьяСписанияНДС,
	|	ВЫБОР 
	|		КОГДА Партии.СтатьяСписанияНДС <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 
	|			ТОГДА Партии.АналитикаСписанияНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаСписанияНДС,
	|	ВЫБОР 
	|		КОГДА Партии.СтатьяСписанияНДС <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 
	|			ТОГДА Партии.НаправлениеДеятельности
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК НаправлениеДеятельностиСписанияНДС,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Партии.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Партии.КорНаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА Партии.СтатьяСписанияНДС <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 
	|			ТОГДА Партии.ПодразделениеСписанияНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеСписанияНДС,
	|	
	|	Партии.ДокументРеализации КАК ДокументРеализации,
	|	
	|	СУММА(ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Партии.ДокументПоступления) В 
	|			(ТИП(Документ.ТаможеннаяДекларацияИмпорт),
	|			 ТИП(Документ.ЗаявлениеОВвозеТоваров),
	|			 ТИП(Документ.СчетФактураПолученныйНалоговыйАгент),
	|			 ТИП(Документ.СчетФактураНалоговыйАгент)) ТОГДА 
	|			0
	|		ИНАЧЕ
	|			Партии.СтоимостьРегл 
	|	КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(Партии.НДСРегл) КАК НДС,
	|	СУММА(Партии.НДСУпр) КАК НДСУпр
	|
	|ПОМЕСТИТЬ ПартииПредварительная
	|ИЗ (
	|	ВЫБРАТЬ
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьРегл,
	|		Партии.НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаПартий,
	|		ВЫБОР 
	|			КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|				ЕСТЬNULL(Партии.ВидЗапасов.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|			ИНАЧЕ ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС ,ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) 
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.Подразделение
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ПодразделениеСписанияНДС,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (
	|					ТИП(Документ.РеализацияТоваровУслуг), 
	|					ТИП(Документ.АктВыполненныхРабот))
	|				ТОГДА Партии.Регистратор
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПартий КАК АналитикаПартий
	|		ПО 
	|			АналитикаПартий.Ссылка = Партии.АналитикаУчетаПартий
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО 
	|			АналитикаНоменклатуры.Ссылка = Партии.АналитикаУчетаНоменклатуры
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0.
	|		И Партии.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.МоментВремени КАК МоментВремени,
	|		Партии.Период КАК Период,
	|		Партии.Регистратор КАК Регистратор,
	|		Партии.Организация КАК Организация,
	|		Партии.СтоимостьРегл КАК СтоимостьРегл,
	|		Партии.НДСРегл КАК НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступления КАК ДокументПоступления,
	|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		ВЫБОР КОГДА Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА 
	|				ВЫБОР 
	|					КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|						ЕСТЬNULL(Партии.ВидЗапасов.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|					ИНАЧЕ ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) 
	|				КОНЕЦ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС КАК НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.Подразделение
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (
	|					ТИП(Документ.РеализацияТоваровУслуг), 
	|					ТИП(Документ.АктВыполненныхРабот))
	|				ТОГДА Партии.Регистратор
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ПартииЗатратНаВыпуск КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПартий КАК АналитикаПартий
	|		ПО 
	|			АналитикаПартий.Ссылка = Партии.АналитикаУчетаПартий
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО 
	|			АналитикаНоменклатуры.Ссылка = Партии.АналитикаУчетаНоменклатуры
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.МоментВремени КАК МоментВремени,
	|		Партии.Период КАК Период,
	|		Партии.Регистратор КАК Регистратор,
	|		Партии.Организация КАК Организация,
	|		(ВЫБОР
	|			КОГДА Партии.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт ТОГДА
	|				(ВЫБОР Партии.АналитикаУчетаПартий.СтавкаНДС
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20) ТОГДА Партии.НДСРегл * 100 / 20
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18) ТОГДА Партии.НДСРегл * 100 / 18
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10) ТОГДА Партии.НДСРегл * 100 / 10
	|					ИНАЧЕ 0 КОНЕЦ)
	|			ИНАЧЕ Партии.СтоимостьРегл КОНЕЦ) КАК СтоимостьРегл,
	|		Партии.НДСРегл КАК НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступленияРасходов КАК ДокументПоступления,
	|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		ВЫБОР 
	|			КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL 
	|				ТОГДА СтатьиРасходов.ВидЦенностиНДС
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|				ТОГДА 
	|					ВЫБОР 
	|						КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|							ЕСТЬNULL(Партии.ВидЗапасов.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|						ИНАЧЕ ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) 
	|					КОНЕЦ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС КАК НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.Подразделение
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (
	|					ТИП(Документ.РеализацияТоваровУслуг), 
	|					ТИП(Документ.АктВыполненныхРабот))
	|				ТОГДА Партии.Регистратор
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПартий КАК АналитикаПартий
	|		ПО 
	|			АналитикаПартий.Ссылка = Партии.АналитикаУчетаПартий
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО 
	|			АналитикаНоменклатуры.Ссылка = Партии.АналитикаУчетаНоменклатуры
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО 
	|			Партии.СтатьяРасходов = СтатьиРасходов.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступленияРасходов
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.МоментВремени КАК МоментВремени,
	|		Партии.Период КАК Период,
	|		Партии.Регистратор КАК Регистратор,
	|		Партии.Организация КАК Организация,
	|		Партии.СтоимостьРегл КАК СтоимостьРегл,
	|		Партии.НДСРегл КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		Партии.ДокументПоступленияРасходов КАК ДокументПоступления,
	|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаПартий.ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|				ТОГДА Партии.АналитикаУчетаПартий.ВидЦенности        // Версия ПартионногоУчета 2.2
	|			КОГДА НЕ СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL ТОГДА
	|				ВЫБОР 
	|					КОГДА СпрНоменклатура.ТипНоменклатуры В (
	|								ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|						ТОГДА ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|				КОНЕЦ
	|			КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL
	|				ТОГДА СтатьиРасходов.ВидЦенностиНДС
	//++ НЕ УТ
	|			КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|				  И Партии.АналитикаАктивовПассивов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС)
	|			КОГДА Партии.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|				  И Партии.АналитикаАктивовПассивов ССЫЛКА Справочник.НематериальныеАктивы
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	//-- НЕ УТ
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		КОНЕЦ КАК ВидЦенности,
	|		ВЫБОР
	|			КОГДА Партии.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|				ТОГДА Партии.ВидДеятельностиНДС // Версия ПартионногоУчета 2.2
	|			ИНАЧЕ Партии.АналитикаУчетаПартий.НалогообложениеНДС     // Версия ПартионногоУчета 2.1             
	|		КОНЕЦ                     КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС КАК НалогообложениеНДС,
	|		Партии.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		Партии.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО КАК ПодразделениеСписанияНДС,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяСписанияНДС,
	|		НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС,
	|		Партии.ДокументРеализации КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ПартииПрочихРасходов КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступленияРасходов
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО 
	|			Партии.СтатьяРасходов = СтатьиРасходов.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО
	|			Партии.АналитикаУчетаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|		
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьРегл,
	|		Партии.НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаПартий,
	|		ВЫБОР КОГДА Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) 
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.Подразделение
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (
	|					ТИП(Документ.РеализацияТоваровУслуг), 
	|					ТИП(Документ.АктВыполненныхРабот))
	|				ТОГДА Партии.Регистратор
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ПартииПроизводственныхЗатрат КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	//++ НЕ УТКА
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.МаршрутныйЛистПроизводства
	//-- НЕ УТКА
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьРегл,
	|		Партии.НДСРегл,
	|		0 КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаПартий,
	|		ВЫБОР КОГДА Партии.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА 
	|				ВЫБОР 
	|					КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|						ЕСТЬNULL(Партии.ВидЗапасов.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|					ИНАЧЕ ЕСТЬNULL(Партии.АналитикаУчетаНоменклатуры.Номенклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) 
	|				КОНЕЦ 
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) 
	|		КОНЕЦ КАК ВидЦенности,
	|		Партии.АналитикаУчетаПартий.НалогообложениеНДС КАК НалогообложениеПартии,
	|		Партии.НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО КАК ПодразделениеСписанияНДС,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяСписанияНДС,
	|		НЕОПРЕДЕЛЕНО КАК АналитикаСписанияНДС,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (
	|					ТИП(Документ.ОтчетКомиссионера), 
	|					ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями))
	|				ТОГДА Партии.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДСРегл <> 0
	|		И Партии.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Партии.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьБезНДС КАК СтоимостьРегл,
	|		Партии.НДС КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаПартий,
	|		ЕСТЬNULL(Партии.АналитикаУчетаПартий.ВидЦенности, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|		Партии.ВидДеятельностиНДС КАК НалогообложениеПартии,
	|		Партии.КорВидДеятельностиНДС КАК НалогообложениеНДС,
	|		Партии.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ЕСТЬNULL(Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,Партии.КорНаправлениеДеятельности),
	|		ВЫБОР 
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|			КОГДА Партии.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|				ТОГДА Партии.АналитикаУчетаНоменклатуры.Подразделение
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (
	|					ТИП(Документ.РеализацияТоваровУслуг), 
	|					ТИП(Документ.АктВыполненныхРабот))
	|				ТОГДА Партии.Регистратор
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДС <> 0
	|		И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Партии.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьБезНДС КАК СтоимостьРегл,
	|		Партии.НДС КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаДокументаПоступления,
	|		ЕСТЬNULL(Партии.АналитикаУчетаДокументаПоступления.ВидЦенности, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|		Партии.ВидДеятельностиНДС КАК НалогообложениеПартии,
	|		Партии.КорВидДеятельностиНДС КАК НалогообложениеНДС,
	|		Партии.НаправлениеДеятельности,
	|		ЕСТЬNULL(Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,Партии.КорНаправлениеДеятельности),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (
	|					ТИП(Документ.РеализацияТоваровУслуг), 
	|					ТИП(Документ.АктВыполненныхРабот))
	|				ТОГДА Партии.Регистратор
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4 КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДС <> 0
	|		И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Партии.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СтоимостьБезНДС КАК СтоимостьРегл,
	|		Партии.НДС КАК НДСРегл,
	|		Партии.НДСУпр КАК НДСУпр,
	|		Партии.ДокументПоступления,
	|		Партии.АналитикаУчетаДокументаПоступления,
	|		ЕСТЬNULL(Партии.АналитикаУчетаДокументаПоступления.ВидЦенности, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|		Партии.ВидДеятельностиНДС КАК НалогообложениеПартии,
	|		Партии.КорВидДеятельностиНДС КАК НалогообложениеНДС,
	|		Партии.НаправлениеДеятельности,
	|		ЕСТЬNULL(Партии.КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,Партии.КорНаправлениеДеятельности),
	|		НЕОПРЕДЕЛЕНО,
	|		Партии.СтатьяСписанияНДС,
	|		Партии.АналитикаСписанияНДС,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) В (
	|					ТИП(Документ.РеализацияТоваровУслуг), 
	|					ТИП(Документ.АктВыполненныхРабот))
	|				ТОГДА Партии.Регистратор
	|			КОГДА ТИПЗНАЧЕНИЯ(Партии.Регистратор) = ТИП(Документ.КорректировкаРеализации)
	|				ТОГДА ВЫРАЗИТЬ(Партии.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК ДокументРеализации
	|	ИЗ
	|		РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН2_4 КАК Партии
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			Задания.Организация = Партии.Организация
	|			И Задания.СчетФактура = Партии.ДокументПоступления
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Партии.Активность
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.НДС <> 0
	|		И Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		И Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|		И Партии.Регистратор <> Партии.Партия
	|	) КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = Партии.Организация
	|		И ДанныеПервичныхДокументов.Документ = Партии.ДокументПоступления
	|	
	|ГДЕ
	|	Партии.НалогообложениеПартии <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	Партии.Организация,
	|	АналитикаУчетаПартий.Контрагент,
	|	Партии.ДокументПоступления,
	|	Партии.ВидЦенности,
	|	АналитикаУчетаПартий.СтавкаНДС,
	|
	|	(ВЫБОР
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Партии.НалогообложениеПартии
	|	КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Партии.НалогообложениеНДС
	|	КОНЕЦ),
	|	ВЫБОР 
	|		КОГДА Партии.СтатьяСписанияНДС <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 
	|			ТОГДА Партии.НаправлениеДеятельности
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Партии.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА Партии.КорНаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ,
	|	Партии.ПодразделениеСписанияНДС,
	|	Партии.СтатьяСписанияНДС,
	|	Партии.АналитикаСписанияНДС,
	|	Партии.ДокументРеализации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партии.МоментВремени КАК МоментВремени,
	|	Партии.Период КАК Период,
	|	Партии.Регистратор КАК Регистратор,
	|	Партии.Организация КАК Организация,
	|	Партии.Контрагент КАК Контрагент,
	|	Партии.СчетФактура КАК СчетФактура,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления,
	|	Партии.ВидЦенности КАК ВидЦенности,
	|	Партии.СтавкаНДС КАК СтавкаНДС,
	|	Партии.НалогообложениеФинПартии КАК НалогообложениеФинПартии,
	|	Партии.НалогообложениеПартии КАК НалогообложениеПартии,
	|	Партии.СтатьяСписанияНДС КАК СтатьяСписанияНДС,
	|	Партии.АналитикаСписанияНДС КАК АналитикаСписанияНДС,
	|	Партии.НаправлениеДеятельностиСписанияНДС КАК НаправлениеДеятельностиСписанияНДС,
	|	ЕСТЬNULL(Партии.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(Партии.КорНаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
	|	Партии.ПодразделениеСписанияНДС КАК ПодразделениеСписанияНДС,
	|	Партии.ДокументРеализации КАК ДокументРеализации,
	|	Партии.СуммаБезНДС КАК СуммаБезНДС,
	|	Партии.НДС КАК НДС,
	|	Партии.НДСУпр КАК НДСУпр
	|ПОМЕСТИТЬ Партии
	|ИЗ
	|	ПартииПредварительная КАК Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО Партии.Организация = ДанныеПервичныхДокументов.Организация
	|			И Партии.СчетФактура = ДанныеПервичныхДокументов.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПартииПредварительная
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ДатаНачалаДействия150ФЗ", УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", УчетНДСУП.НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

#Область ФормированиеДвиженияНДСПредъявленный

Процедура СформироватьНДСПредъявленный(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыНДСПредъявленный(ПараметрыРасчета);
	ПолучитьСчетаФактурыДокументы(ПараметрыРасчета);
	ПолучитьИсправительныеСчетаФактурыДокументы(ПараметрыРасчета);
	
	ПолучитьПартии(ПараметрыРасчета);
	
	ПолучитьСписанияНДСНаРасходы(ПараметрыРасчета);
	ПолучитьБлокировкиВычетаНДС(ПараметрыРасчета);
	
	ПолучитьНДСПредъявленныйОстатокНаНачало(ПараметрыРасчета);
	ПолучитьНДСПредъявленныйОнлайнДвижения(ПараметрыРасчета);
	
	РассчитатьЗаписиНДСПредъявленныйПоИСФ(ПараметрыРасчета);
	РассчитатьЗаписиНДСПредъявленныйИзменениеВидаДеятельности(ПараметрыРасчета);
	РассчитатьЗаписиНДСПредъявленныйИзменениеНаправленияДеятельности(ПараметрыРасчета);
	РассчитатьЗаписиНДСПредъявленныйВосстановлениеПодВидДеятельности(ПараметрыРасчета);
	
	ПолучитьОстаткиНДСПредъявленныйНаКонецПериода(ПараметрыРасчета);
	
	РассчитатьЗаписиНДСПредъявленныйПринятиеКВычету(ПараметрыРасчета);
	РассчитатьЗаписиНДСПредъявленныйВосстановлениеПоКСФ(ПараметрыРасчета);
	
	РассчитатьЗаписиНДСПредъявленныйСохранение(ПараметрыРасчета);
	
	ЗаписатьНДСПредъявленный(ПараметрыРасчета);
	ОчиститьНДСПредъявленный(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьСчетаФактурыДокументы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Задания.Организация 									КАК Организация,
	|	Задания.СчетФактура 									КАК СчетФактура,
	|	ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты 	КАК ДатаПодтвержденияОплаты
	|ПОМЕСТИТЬ ПодтвержденияОплаты
	|ИЗ
	|	РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО ПодтверждениеОплатыНДСВБюджет.СчетФактура = Задания.СчетФактура
	|ГДЕ
	|	ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.ПолученоПодтверждение)
	|	И ПодтверждениеОплатыНДСВБюджет.ДатаПодтвержденияОплаты <= &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	Операция.Ссылка     КАК Ссылка,
	|	Операция.Дата       КАК Дата,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НЕ ПартииПрочихРасходов.Регистратор ЕСТЬ NULL
	|			ТОГДА КОНЕЦПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		КОГДА Операция.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Операция.Дата
	|		ИНАЧЕ
	|			Операция.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ)              КАК ДатаЗаписиКнигиПокупок,
	|	НЕОПРЕДЕЛЕНО        КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО        КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ СчетаФактурыДокументы
	|ИЗ
	|	Документ.СчетФактураПолученный КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК Строки
	|	ПО 
	|		Операция.Ссылка = Строки.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Задания КАК Задания
	|	ПО 
	|		Операция.Организация = Задания.Организация
	|		И Строки.ДокументОснование = Задания.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|	ПО
	|		Операция.Корректировочный
	|		И ПартииПрочихРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Строки.ДокументОснование = ПартииПрочихРасходов.Регистратор
	|		И ПартииПрочихРасходов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|ГДЕ
	|	Операция.Проведен
	|	И НЕ Операция.Исправление
	|
	|СГРУППИРОВАТЬ ПО
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	Операция.Ссылка,
	|	Операция.Дата 
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НЕ ПартииПрочихРасходов.Регистратор ЕСТЬ NULL
	|			ТОГДА КОНЕЦПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		КОГДА Операция.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Операция.Дата
	|		ИНАЧЕ
	|			Операция.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ) <= &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	Операция.Ссылка     КАК Ссылка,
	|	Операция.Дата       КАК Дата,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НЕ ПартииПрочихРасходов.Регистратор ЕСТЬ NULL
	|			ТОГДА КОНЕЦПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		КОГДА Операция.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Операция.Дата
	|		ИНАЧЕ
	|			Операция.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ)              КАК ДатаЗаписиКнигиПокупок,
	|	НЕОПРЕДЕЛЕНО        КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО        КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Задания КАК Задания
	|	ПО 
	|		Операция.Организация = Задания.Организация
	|		И Операция.Ссылка = Задания.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|	ПО
	|		Операция.Корректировочный
	|		И ПартииПрочихРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Операция.Ссылка = ПартииПрочихРасходов.ДокументПоступленияРасходов
	|		И ПартииПрочихРасходов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|ГДЕ
	|	Операция.Проведен
	|	И НЕ Операция.Исправление
	|
	|СГРУППИРОВАТЬ ПО
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	Операция.Ссылка,
	|	Операция.Дата 
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НЕ ПартииПрочихРасходов.Регистратор ЕСТЬ NULL
	|			ТОГДА КОНЕЦПЕРИОДА(Операция.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		КОГДА Операция.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Операция.Дата
	|		ИНАЧЕ
	|			Операция.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ) <= &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	Операция.Ссылка     КАК Ссылка,
	|	Операция.ДатаВыставления КАК Дата,
	|	Операция.ДатаВыставления КАК ДатаЗаписиКнигиПокупок,
	|	НЕОПРЕДЕЛЕНО        КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО        КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.СчетФактураВыданный КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК Строки
	|		ПО Операция.Ссылка = Строки.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО Операция.Контрагент = Задания.Организация
	|		И Строки.ДокументОснование = Задания.СчетФактура
	|		И ЕСТЬNULL(ВЫРАЗИТЬ(Строки.ДокументОснование КАК Документ.ПередачаТоваровМеждуОрганизациями).НалогообложениеНДС,
	|								ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) 
	|							<> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|ГДЕ
	|	Операция.ДатаВыставления <= &КонецПериода
	|	И Операция.ДатаВыставления <> ДАТАВРЕМЯ(1, 1, 1)
	|	И Операция.Проведен
	|	И НЕ Операция.Исправление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	Операция.Ссылка     КАК Ссылка,
	|	Операция.Дата       КАК Дата,
	|	Операция.Дата       КАК ДатаЗаписиКнигиПокупок,
	|	НЕОПРЕДЕЛЕНО        КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО        КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.ИнойДокументПодтвержденияНДС КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Задания КАК Задания
	|	ПО 
	|		Операция.Организация = Задания.Организация
	|		И Операция.ДокументОснование = Задания.СчетФактура
	|ГДЕ
	|	Операция.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПодтвержденияОплаты.Организация КАК Организация,
	|	ПодтвержденияОплаты.СчетФактура КАК СчетФактура,
	|	Операция.Ссылка     КАК Ссылка,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ) > Операция.Дата ТОГДА
	|		КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ)
	|	ИНАЧЕ 
	|		Операция.Дата 
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ) > Операция.Дата ТОГДА
	|		КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ)
	|	ИНАЧЕ 
	|		Операция.Дата 
	|	КОНЕЦ КАК ДатаЗаписиКнигиПокупок,
	|	НЕОПРЕДЕЛЕНО        КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО        КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПодтвержденияОплаты КАК ПодтвержденияОплаты
	|	ПО
	|		Операция.Ссылка = ПодтвержденияОплаты.СчетФактура
	|ГДЕ
	|	Операция.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни)
	|	И Операция.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПодтвержденияОплаты.Организация           КАК Организация,
	|	ПодтвержденияОплаты.СчетФактура           КАК СчетФактура,
	|	ЗаявлениеОВвозеТоваров.Ссылка 			  КАК Ссылка,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ) > ЗаявлениеОВвозеТоваров.Дата ТОГДА
	|		КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ)
	|	ИНАЧЕ 
	|		ЗаявлениеОВвозеТоваров.Дата 
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ) > ЗаявлениеОВвозеТоваров.Дата ТОГДА
	|		КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ)
	|	ИНАЧЕ 
	|		ЗаявлениеОВвозеТоваров.Дата 
	|	КОНЕЦ КАК ДатаЗаписиКнигиПокупок,
	|	НЕОПРЕДЕЛЕНО                  КАК ДокументОплаты,
	|	НЕОПРЕДЕЛЕНО                  КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПодтвержденияОплаты КАК ПодтвержденияОплаты
	|	ПО
	|		ЗаявлениеОВвозеТоваров.Ссылка = ПодтвержденияОплаты.СчетФактура
	|ГДЕ
	|	ЗаявлениеОВвозеТоваров.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПодтвержденияОплаты.Организация КАК Организация,
	|	ПодтвержденияОплаты.СчетФактура КАК СчетФактура,
	|	СчетФактураНалоговыйАгент.Ссылка  КАК Ссылка,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ) > СчетФактураНалоговыйАгент.Дата ТОГДА
	|		КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ)
	|	ИНАЧЕ 
	|		СчетФактураНалоговыйАгент.Дата 
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР КОГДА КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ) > СчетФактураНалоговыйАгент.Дата ТОГДА
	|		КОНЕЦПЕРИОДА(ПодтвержденияОплаты.ДатаПодтвержденияОплаты, ДЕНЬ)
	|	ИНАЧЕ 
	|		СчетФактураНалоговыйАгент.Дата 
	|	КОНЕЦ КАК ДатаЗаписиКнигиПокупок,
	|	СчетФактураНалоговыйАгент.ДокументОснование              КАК ДокументОплаты,
	|	СчетФактураНалоговыйАгент.Договор                        КАК ДоговорКонтрагента
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПодтвержденияОплаты КАК ПодтвержденияОплаты
	|	ПО
	|		СчетФактураНалоговыйАгент.Ссылка = ПодтвержденияОплаты.СчетФактура
	|ГДЕ
	|	СчетФактураНалоговыйАгент.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьИсправительныеСчетаФактурыДокументы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	0 КАК Приоритет,
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	КорректировкаПриобретенияИсправление.Ссылка КАК ИсправительныйСчетФактура,
	|	ИсправительныйСчетФактура.Ссылка КАК Ссылка,
	|	ИсправительныйСчетФактура.Ссылка.НомерИсправления КАК НомерИсправления,
	|	ИсправительныйСчетФактура.Ссылка.ДатаИсправления КАК ДатаИсправления,
	|	ВЫБОР
	|		КОГДА ИсправительныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИсправительныйСчетФактура.Ссылка.ДатаИсправления
	|		ИНАЧЕ ИсправительныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ КАК ДатаЗаписиКнигиПокупок,
	|	КорректировкаПриобретенияИсправление.МоментВремени КАК МоментВремени,
	|	ИсправительныйСчетФактура.Ссылка.Дата КАК ДатаПолучения,
	|	ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР КОГДА ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправительныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ КАК КорректируемыйПериод
	|ПОМЕСТИТЬ ВсеИсправительныеСчетаФактуры
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретенияИсправление
	|		ПО Задания.СчетФактура = КорректировкаПриобретенияИсправление.ДокументОснование
	|			И (КорректировкаПриобретенияИсправление.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
	|			И (КорректировкаПриобретенияИсправление.Проведен)
	|			И (КорректировкаПриобретенияИсправление.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ИсправительныйСчетФактура
	|		ПО (КорректировкаПриобретенияИсправление.Ссылка = ИсправительныйСчетФактура.ДокументОснование)
	|			И (ИсправительныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправительныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправительныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|			И (НЕ ИсправительныйСчетФактура.Ссылка.Корректировочный)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК ДругиеИсправительныеСчетаФактуры
	|		ПО (ИсправительныйСчетФактура.Ссылка.СчетФактураОснование = ДругиеИсправительныеСчетаФактуры.СчетФактураОснование)
	|			И (ИсправительныйСчетФактура.Ссылка.НомерИсправления > ДругиеИсправительныеСчетаФактуры.НомерИсправления)
	|			И (ДругиеИсправительныеСчетаФактуры.Проведен)
	|			И (ДругиеИсправительныеСчетаФактуры.Исправление)
	|			И (ДругиеИсправительныеСчетаФактуры.Дата <= &КонецПериода)
	|			И (НЕ ДругиеИсправительныеСчетаФактуры.Корректировочный)
	|ГДЕ
	|	ДругиеИсправительныеСчетаФактуры.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	0 КАК Приоритет,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	КорректировкаПриобретенияИсправление.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправительныйСчетФактура.Ссылка.ДатаИсправления,
	|	ВЫБОР
	|		КОГДА ИсправительныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИсправительныйСчетФактура.Ссылка.ДатаИсправления
	|		ИНАЧЕ ИсправительныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ,
	|	КорректировкаПриобретенияИсправление.МоментВремени КАК МоментВремени,
	|	ИсправительныйСчетФактура.Ссылка.Дата,
	|	ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправительныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретенияПоСогласованию
	|		ПО Задания.СчетФактура = КорректировкаПриобретенияПоСогласованию.Ссылка
	|			И (КорректировкаПриобретенияПоСогласованию.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон))
	|			И (КорректировкаПриобретенияПоСогласованию.Проведен)
	|			И (КорректировкаПриобретенияПоСогласованию.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретенияИсправление
	|		ПО (КорректировкаПриобретенияПоСогласованию.ДокументОснование = КорректировкаПриобретенияИсправление.ДокументОснование)
	|			И (КорректировкаПриобретенияПоСогласованию.Дата < КорректировкаПриобретенияИсправление.Дата)
	|			И (КорректировкаПриобретенияИсправление.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
	|			И (КорректировкаПриобретенияИсправление.Проведен)
	|			И (КорректировкаПриобретенияИсправление.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ИсправительныйСчетФактура
	|		ПО (КорректировкаПриобретенияИсправление.Ссылка = ИсправительныйСчетФактура.ДокументОснование)
	|			И (ИсправительныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправительныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправительныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|			И (ИсправительныйСчетФактура.Ссылка.Корректировочный)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК ДругиеИсправительныеСчетаФактуры
	|		ПО (ИсправительныйСчетФактура.Ссылка.СчетФактураОснование = ДругиеИсправительныеСчетаФактуры.СчетФактураОснование)
	|			И (ИсправительныйСчетФактура.Ссылка.НомерИсправления > ДругиеИсправительныеСчетаФактуры.НомерИсправления)
	|			И (ДругиеИсправительныеСчетаФактуры.Проведен)
	|			И (ДругиеИсправительныеСчетаФактуры.Исправление)
	|			И (ДругиеИсправительныеСчетаФактуры.Дата <= &КонецПериода)
	|			И (НЕ ДругиеИсправительныеСчетаФактуры.Корректировочный)
	|ГДЕ
	|	ДругиеИсправительныеСчетаФактуры.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1 КАК Приоритет,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправительныйСчетФактура.Ссылка.ДатаИсправления,
	|	ИсправительныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок,
	|	ИсправительныйСчетФактура.Ссылка.МоментВремени,
	|	ИсправительныйСчетФактура.Ссылка.Дата,
	|	ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправительныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ИсправительныйСчетФактура
	|		ПО Задания.СчетФактура = ИсправительныйСчетФактура.ДокументОснование
	|			И (ИсправительныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправительныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправительныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправительныйСчетФактура.Ссылка.ДатаИсправления,
	|	ИсправительныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок,
	|	ИсправительныйСчетФактура.Ссылка.МоментВремени,
	|	ИсправительныйСчетФактура.Ссылка.Дата,
	|	ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправительныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйОснования
	|		ПО Задания.СчетФактура = СчетФактураПолученныйОснования.ДокументОснование
	|			И (СчетФактураПолученныйОснования.Ссылка.Проведен)
	|			И (СчетФактураПолученныйОснования.Ссылка.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК ИсправительныйСчетФактура
	|		ПО (СчетФактураПолученныйОснования.Ссылка = ИсправительныйСчетФактура.СчетФактураОснование)
	|			И (ИсправительныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправительныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправительныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	0 КАК Приоритет,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.НомерИсправления,
	|	ИсправительныйСчетФактура.ДатаИсправления,
	|	ИсправительныйСчетФактура.ДатаЗаписиКнигиПокупок,
	|	ИсправительныйСчетФактура.МоментВремени,
	|	ИсправительныйСчетФактура.Дата,
	|	ИсправительныйСчетФактура.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправительныйСчетФактура.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправительныйСчетФактура.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент КАК ИсправительныйСчетФактура
	|		ПО Задания.СчетФактура = ИсправительныйСчетФактура.СчетФактураОснование
	|			И (ИсправительныйСчетФактура.Проведен)
	|			И (ИсправительныйСчетФактура.Исправление)
	|			И (ИсправительныйСчетФактура.Дата <= &КонецПериода)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправительныйСчетФактура.Ссылка.ДатаИсправления,
	|	ИсправительныйСчетФактура.Ссылка.ДатаЗаписиКнигиПокупок,
	|	ИсправительныйСчетФактура.Ссылка.МоментВремени,
	|	ИсправительныйСчетФактура.Ссылка.Дата,
	|	ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу,
	|	ВЫБОР КОГДА ИсправительныйСчетФактура.Ссылка.ОтнестиКПредыдущемуОтчетномуКварталу 
	|		ТОГДА ИсправительныйСчетФактура.Ссылка.ДатаСоставления
	|	ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК СчетФактураПолученныйОснования
	|		ПО Задания.СчетФактура = СчетФактураПолученныйОснования.ДокументОснование
	|			И (СчетФактураПолученныйОснования.Ссылка.Проведен)
	|			И (СчетФактураПолученныйОснования.Ссылка.Дата <= &КонецПериода)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент КАК ИсправительныйСчетФактура
	|		ПО (СчетФактураПолученныйОснования.Ссылка = ИсправительныйСчетФактура.СчетФактураОснование)
	|			И (ИсправительныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправительныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправительныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	1 КАК Приоритет,
	|	Задания.Организация,
	|	Задания.СчетФактура,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка,
	|	ИсправительныйСчетФактура.Ссылка.НомерИсправления,
	|	ИсправительныйСчетФактура.Ссылка.Дата,
	|	ИсправительныйСчетФактура.Ссылка.Дата,
	|	ИсправительныйСчетФактура.Ссылка.МоментВремени,
	|	ИсправительныйСчетФактура.Ссылка.Дата,
	|	ЛОЖЬ,
	|	ДАТАВРЕМЯ(1,1,1)
	|ИЗ
	|	Задания КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ИсправительныйСчетФактура
	|		ПО Задания.СчетФактура = ИсправительныйСчетФактура.ДокументОснование
	|			И (ИсправительныйСчетФактура.Ссылка.Проведен)
	|			И (ИсправительныйСчетФактура.Ссылка.Исправление)
	|			И (ИсправительныйСчетФактура.Ссылка.Дата <= &КонецПериода)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсправительныеСчетаФактуры.Приоритет КАК Приоритет,
	|	ИсправительныеСчетаФактуры.Организация КАК Организация,
	|	ИсправительныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	ИсправительныеСчетаФактуры.ИсправительныйСчетФактура КАК ИсправительныйСчетФактура,
	|	ИсправительныеСчетаФактуры.Ссылка КАК Ссылка,
	|	ИсправительныеСчетаФактуры.ДатаИсправления КАК ДатаИсправления,
	|	ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок КАК ДатаЗаписиКнигиПокупок,
	|	ИсправительныеСчетаФактуры.МоментВремени КАК МоментВремени,
	|	ИсправительныеСчетаФактуры.ДатаПолучения,
	|	ИсправительныеСчетаФактуры.ЗаписьДополнительногоЛиста,
	|	ИсправительныеСчетаФактуры.КорректируемыйПериод
	|ПОМЕСТИТЬ ИсправительныеСчетаФактурыПредварительная
	|ИЗ
	|	ВсеИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеИсправительныеСчетаФактуры КАК ОтборПоследнееИсправление
	|		ПО ИсправительныеСчетаФактуры.Организация = ОтборПоследнееИсправление.Организация
	|			И ИсправительныеСчетаФактуры.СчетФактура = ОтборПоследнееИсправление.СчетФактура
	|			И ИсправительныеСчетаФактуры.НомерИсправления < ОтборПоследнееИсправление.НомерИсправления
	|
	|ГДЕ
	|	ОтборПоследнееИсправление.ИсправительныйСчетФактура ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсправительныеСчетаФактуры.Организация КАК Организация,
	|	ИсправительныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	ИсправительныеСчетаФактуры.ИсправительныйСчетФактура КАК ИсправительныйСчетФактура,
	|	ИсправительныеСчетаФактуры.Ссылка КАК Ссылка,
	|	ИсправительныеСчетаФактуры.ДатаИсправления КАК ДатаИсправления,
	|	ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок КАК ДатаЗаписиКнигиПокупок,
	|	ИсправительныеСчетаФактуры.МоментВремени КАК МоментВремени,
	|	ИсправительныеСчетаФактуры.ДатаПолучения,
	|	ИсправительныеСчетаФактуры.ЗаписьДополнительногоЛиста,
	|	ИсправительныеСчетаФактуры.КорректируемыйПериод
	|ПОМЕСТИТЬ ИсправительныеСчетаФактурыПоследние
	|ИЗ
	|	ИсправительныеСчетаФактурыПредварительная КАК ИсправительныеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактурыПредварительная КАК ОтборПриоритет
	|		ПО ИсправительныеСчетаФактуры.Организация = ОтборПриоритет.Организация
	|			И ИсправительныеСчетаФактуры.СчетФактура = ОтборПриоритет.СчетФактура
	|			И ИсправительныеСчетаФактуры.Приоритет > ОтборПриоритет.Приоритет
	|
	|ГДЕ
	|	ОтборПриоритет.Ссылка ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ИсправительныйСчетФактура
	|;
	|
	|ВЫБРАТЬ
	|	ИсправительныеСчетаФактуры.Организация КАК Организация,
	|	ИсправительныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	ИсправительныеСчетаФактуры.ИсправительныйСчетФактура КАК ИсправительныйСчетФактура,
	|	ИсправительныеСчетаФактуры.Ссылка КАК Ссылка,
	|	ИсправительныеСчетаФактуры.ДатаИсправления КАК ДатаИсправления,
	|	ИсправительныеСчетаФактуры.МоментВремени КАК МоментВремени,
	|	ИсправительныеСчетаФактуры.ДатаПолучения КАК ДатаПолучения,
	|	МАКСИМУМ(ВЫБОР 
	|		КОГДА НЕ ПартииПрочихРасходов.Регистратор ЕСТЬ NULL 
	|			ТОГДА КОНЕЦПЕРИОДА(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		ИНАЧЕ ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ) КАК ДатаЗаписиКнигиПокупок,
	|	ИсправительныеСчетаФактуры.ЗаписьДополнительногоЛиста,
	|	ИсправительныеСчетаФактуры.КорректируемыйПериод
	|
	|ПОМЕСТИТЬ ИсправительныеСчетаФактуры
	|ИЗ
	|	ИсправительныеСчетаФактурыПоследние КАК ИсправительныеСчетаФактуры
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииПрочихРасходов КАК ПартииПрочихРасходов
	|	ПО
	|		ПартииПрочихРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ИсправительныеСчетаФактуры.ИсправительныйСчетФактура = ПартииПрочихРасходов.Регистратор
	|		И ПартииПрочихРасходов.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсправительныеСчетаФактуры.Организация,
	|	ИсправительныеСчетаФактуры.СчетФактура,
	|	ИсправительныеСчетаФактуры.ИсправительныйСчетФактура,
	|	ИсправительныеСчетаФактуры.Ссылка,
	|	ИсправительныеСчетаФактуры.ДатаИсправления,
	|	ИсправительныеСчетаФактуры.МоментВремени,
	|	ИсправительныеСчетаФактуры.ДатаПолучения,
	|	ИсправительныеСчетаФактуры.ЗаписьДополнительногоЛиста,
	|	ИсправительныеСчетаФактуры.КорректируемыйПериод
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР 
	|		КОГДА НЕ ПартииПрочихРасходов.Регистратор ЕСТЬ NULL 
	|			ТОГДА КОНЕЦПЕРИОДА(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, КВАРТАЛ)
	|		ИНАЧЕ ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ) <= &КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура,
	|	ИсправительныйСчетФактура
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВсеИсправительныеСчетаФактуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсправительныеСчетаФактурыПредварительная
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИсправительныеСчетаФактурыПоследние
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьДокументыОплаты(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетаФактурыДокументы.Организация КАК Организация,
	|	СчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|	ДокументыОплаты.НомерДокументаПеречисленияНалога КАК НомерДокументаОплаты,
	|	ДокументыОплаты.ДатаДокументаПеречисленияНалога КАК ДатаДокументаОплаты
	|ПОМЕСТИТЬ ДокументыОплаты
	|ИЗ
	|	СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ДокументыОплаты
	|		ПО СчетаФактурыДокументы.СчетФактура = ДокументыОплаты.СчетФактура
	|			И (ДокументыОплаты.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.Оплачено))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПолучитьСписанияНДСНаРасходы(ПараметрыРасчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Задания.Организация                          КАК Организация,
	|	Задания.СчетФактура                          КАК СчетФактура,
	|	СписаниеНДСНаРасходы.Ссылка                  КАК СписаниеНДСНаРасходы,
	|	СписаниеНДСНаРасходы.Подразделение           КАК Подразделение,
	|	СписаниеНДСНаРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	СписаниеНДСНаРасходы.АналитикаРасходов       КАК АналитикаРасходов
	|ПОМЕСТИТЬ СписанияНДСНаРасходы 
	|ИЗ
	|	Задания КАК Задания
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы КАК СписаниеНДСНаРасходы
	|	ПО
	|		СписаниеНДСНаРасходы.Дата < &КонецПериода
	|		И Задания.Организация = СписаниеНДСНаРасходы.Организация
	|		И Задания.СчетФактура = СписаниеНДСНаРасходы.СчетФактура
	|		И СписаниеНДСНаРасходы.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;

	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьБлокировкиВычетаНДС(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БлокировкаВычетаНДС.Организация КАК Организация,
	|	БлокировкаВычетаНДС.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ БлокировкаВычетаНДС
	|ИЗ
	|	РегистрСведений.СостоянияБлокировкиВычетаНДСПоСчетамФактурам.СрезПоследних(
	|		&КонецПериода,
	|		(Организация, СчетФактура) В
	|			(ВЫБРАТЬ
	|				Задания.Организация,
	|				Задания.СчетФактура
	|			ИЗ
	|				Задания КАК Задания)
	|			) КАК БлокировкаВычетаНДС
	|ГДЕ
	|	БлокировкаВычетаНДС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировкиВычетаНДС.Установлена)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      Новый Граница(ПараметрыРасчета.КонецПериода));
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьНДСПредъявленныйОстатокНаНачало(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДСОстаток      КАК СуммаБезНДС,
	|	ДД.НДСОстаток              КАК НДС,
	|	ДД.НДСУпрОстаток           КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстатокНаНачалоСНаправлениями
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|		&НачалоПериода, 
	|		(Организация, СчетФактура) В (
	|			ВЫБРАТЬ
	|				Задания.Организация,
	|				Задания.СчетФактура
	|			ИЗ
	|				Задания)) КАК ДД
	|;
	|
	|ВЫБРАТЬ
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	СУММА(ДД.СуммаБезНДС)      КАК СуммаБезНДС,
	|	СУММА(ДД.НДС)              КАК НДС,
	|	СУММА(ДД.НДСУпр)           КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстатокНаНачало
	|ИЗ
	|	НДСПредъявленныйОстатокНаНачалоСНаправлениями КАК ДД
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьНДСПредъявленныйОнлайнДвижения(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДД.МоментВремени           КАК МоментВремени,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС  КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОнлайнДвижения
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		ДД.Организация = Задания.Организация
	|		И ДД.СчетФактура = Задания.СчетФактура
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НЕ ДД.РегламентнаяОперация
	|	И ДД.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыНДСПредъявленный(ПараметрыРасчета) 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.Период КАК Период
	|ПОМЕСТИТЬ ТекущиеРегистраторыНДСПредъявленный
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО (Задания.Организация = НДСПредъявленный.Организация)
	|			И (Задания.СчетФактура = НДСПредъявленный.СчетФактура)
	|ГДЕ
	|	НДСПредъявленный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСПредъявленный.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьЗаписиНДСПредъявленныйИзменениеВидаДеятельности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	// Обработаем смены вида деятельности партий с (на) ПродажаОблагаетсяНДС 
	|ВЫБРАТЬ
	|	2                                      КАК Приоритет,
	|	Партии.МоментВремени                   КАК МоментВремени,
	|	Партии.Период                          КАК Период,
	|	Партии.Регистратор                     КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Партии.Организация                     КАК Организация,
	|	Партии.СчетФактура                     КАК СчетФактура,
	|	Партии.Контрагент                      КАК Поставщик,
	|	Партии.ВидЦенности                     КАК ВидЦенности,
	|	Партии.СтавкаНДС                       КАК СтавкаНДС,
	|	Партии.НалогообложениеФинПартии        КАК ВидДеятельностиНДС,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	Партии.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Партии.СуммаБезНДС                     КАК СуммаБезНДС,
	|	Партии.НДС                             КАК НДС,
	|	Партии.НДСУпр                          КАК НДСУпр,
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) ТОГДА
	|			ВЫБОР 
	|				КОГДА Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|			КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ                                  КАК Событие,
	|	Партии.НалогообложениеПартии           КАК КорВидДеятельностиНДС,
	|	Партии.ПодразделениеСписанияНДС           КАК Подразделение,
	|	ЕСТЬNULL(Партии.НаправлениеДеятельностиСписанияНДС,Партии.КорНаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС                  КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС               КАК АналитикаРасходов,
	|	""""                                   КАК ИдентификаторСтроки,
	|	ИСТИНА                                 КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеВидаДеятельности
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	И Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии
	|	И НЕ (Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|			И Партии.ДатаПоступления >= &ДатаНачалаДействия150ФЗ)
	|	И (Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии 
	|			ИЛИ Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО)
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ,
	|	Партии.НалогообложениеФинПартии,
	|	НЕОПРЕДЕЛЕНО                      КАК Подразделение,
	|	Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	
	|ГДЕ
	|	Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	И Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии
	|	И НЕ (Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|			И Партии.ДатаПоступления >= &ДатаНачалаДействия150ФЗ)
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обработаем смены вида деятельности партий с (на) ОпределяетсяРаспределением, ПоФактическомуИспользованию, ВводОСВЭксплуатацию.
	|ВЫБРАТЬ
	|	2                                      КАК Приоритет,
	|	Партии.МоментВремени                   КАК МоментВремени,
	|	Партии.Период                          КАК Период,
	|	Партии.Регистратор                     КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Партии.Организация                     КАК Организация,
	|	Партии.СчетФактура                     КАК СчетФактура,
	|	Партии.Контрагент                      КАК Поставщик,
	|	Партии.ВидЦенности                     КАК ВидЦенности,
	|	Партии.СтавкаНДС                       КАК СтавкаНДС,
	|	Партии.НалогообложениеФинПартии        КАК ВидДеятельностиНДС,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	Партии.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Партии.СуммаБезНДС                     КАК СуммаБезНДС,
	|	Партии.НДС                             КАК НДС,
	|	Партии.НДСУпр                          КАК НДСУпр,
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) ТОГДА
	|			ВЫБОР 
	|				КОГДА Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|			КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ                                  КАК Событие,
	|	Партии.НалогообложениеПартии           КАК КорВидДеятельностиНДС,
	|	Партии.ПодразделениеСписанияНДС           КАК Подразделение,
	|	ЕСТЬNULL(Партии.НаправлениеДеятельностиСписанияНДС, Партии.НаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС                  КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС               КАК АналитикаРасходов,
	|	""""                                      КАК ИдентификаторСтроки,
	|	ИСТИНА                                    КАК РегламентнаяОперация
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеФинПартии В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|	И Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ,
	|	Партии.НалогообложениеФинПартии,
	|	НЕОПРЕДЕЛЕНО                           КАК Подразделение,
	|	Партии.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеПартии В ( 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|	И Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обработаем смены вида деятельности партий с (на) ПродажаНаЭкспорт, ЭкспортСырьевыхТоваровУслуг.
	|ВЫБРАТЬ
	|	2,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеФинПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.НаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ВЫБОР
	|		КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|				И Партии.НалогообложениеПартии В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) ТОГДА
	|			ВЫБОР 
	|				КОГДА Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|			КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ,
	|	Партии.НалогообложениеПартии,
	|	Партии.ПодразделениеСписанияНДС            КАК Подразделение,
	|	ЕСТЬNULL(Партии.НаправлениеДеятельностиСписанияНДС, Партии.КорНаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС                   КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС                КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеФинПартии В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг))
	|	И (Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии 
	|			ИЛИ Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО)
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	Партии.ДокументРеализации,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ВЫБОР 
	|		КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ,
	|	Партии.НалогообложениеФинПартии,
	|	НЕОПРЕДЕЛЕНО                           КАК Подразделение,
	|	Партии.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеПартии В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг))
	|	И (Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии
	|			ИЛИ Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО)
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обработаем смены вида деятельности партий с (на) ЭкспортНесырьевыхТоваров
	|ВЫБРАТЬ
	|	2,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеФинПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.НаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ВЫБОР
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) ТОГДА
	|			ВЫБОР 
	|				КОГДА Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|			КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ                                  КАК Событие,
	|	Партии.НалогообложениеПартии,
	|	Партии.ПодразделениеСписанияНДС            КАК Подразделение,
	|	ЕСТЬNULL(Партии.НаправлениеДеятельностиСписанияНДС, Партии.КорНаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС                   КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС                КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|	ПО 
	|		Партии.Организация = ИсправительныеCФ.Организация
	|		И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|	И Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии
	|	И НЕ (Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			И Партии.ДатаПоступления >= &ДатаНачалаДействия150ФЗ)
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеФинПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.НаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация),
	|	Партии.НалогообложениеПартии,
	|	НЕОПРЕДЕЛЕНО                           КАК Подразделение,
	|	Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|	ПО 
	|		Партии.Организация = ИсправительныеCФ.Организация
	|		И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|
	|ГДЕ
	|	Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|	И Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|	И Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	И Партии.ДатаПоступления < &ДатаНачалаДействия150ФЗ
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	ВЫБОР 
	|		КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО И Партии.ДатаПоступления < &ДатаНачалаДействия150ФЗ
	|			ТОГДА Партии.ДокументРеализации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ВЫБОР 
	|		КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО И Партии.ДатаПоступления < &ДатаНачалаДействия150ФЗ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ,
	|	Партии.НалогообложениеФинПартии,
	|	НЕОПРЕДЕЛЕНО                           КАК Подразделение,
	|	Партии.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|	И Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии
	|	И НЕ (Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			И Партии.ДатаПоступления >= &ДатаНачалаДействия150ФЗ)
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	Партии.ДокументРеализации,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация),
	|	Партии.НалогообложениеФинПартии,
	|	НЕОПРЕДЕЛЕНО                           КАК Подразделение,
	|	Партии.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	И Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|	И Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|	И Партии.ДатаПоступления < &ДатаНачалаДействия150ФЗ
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обработаем смены вида деятельности партий с (на) ПроизводствоСДЦ, реализации еще нет, переносим НДС с/на счет 19.12.
	|ВЫБРАТЬ
	|	2,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеФинПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.НаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ВЫБОР
	|		КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|				И Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|		КОГДА Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) ТОГДА
	|			ВЫБОР 
	|				КОГДА Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|			КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ,
	|	Партии.НалогообложениеПартии,
	|	Партии.ПодразделениеСписанияНДС            КАК Подразделение,
	|	ЕСТЬNULL(Партии.НаправлениеДеятельностиСписанияНДС, Партии.КорНаправлениеДеятельности) КАК КорНаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС                   КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС                КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|	И (Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии 
	|			ИЛИ Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО)
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	Партии.ДокументРеализации,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ВЫБОР 
	|		КОГДА Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.Реализация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС)
	|	КОНЕЦ,
	|	Партии.НалогообложениеФинПартии,
	|	НЕОПРЕДЕЛЕНО                           КАК Подразделение,
	|	Партии.НаправлениеДеятельности         КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|	И (Партии.НалогообложениеФинПартии <> Партии.НалогообложениеПартии
	|			ИЛИ Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО)
	|	И НЕ (Партии.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|			И Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС))
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обработаем смены вида деятельности партий, по которым НДС был списан документом СписаниеНДСНаРасходы.
	|ВЫБРАТЬ
	|	2,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеФинПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.НаправлениеДеятельности,
	|	-Партии.СуммаБезНДС,
	|	-Партии.НДС,
	|	-Партии.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы),
	|	НЕОПРЕДЕЛЕНО,
	|	СписанияНДСНаРасходы.Подразделение     КАК Подразделение,
	|	Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	СписанияНДСНаРасходы.СтатьяРасходов    КАК СтатьяРасходов,
	|	СписанияНДСНаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|	ПО 
	|		Партии.Организация = ИсправительныеCФ.Организация
	|		И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		Партии.Организация = СписанияНДСНаРасходы.Организация
	|		И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|
	|ГДЕ
	|	Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	И Партии.НалогообложениеПартии <> Партии.НалогообложениеФинПартии
	|	И Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеФинПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.НаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО     КАК Подразделение,
	|	Партии.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО     КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|	ПО 
	|		Партии.Организация = ИсправительныеCФ.Организация
	|		И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		Партии.Организация = СписанияНДСНаРасходы.Организация
	|		И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	И Партии.НалогообложениеПартии <> Партии.НалогообложениеФинПартии
	|	И Партии.СтатьяСписанияНДС = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИсключениеНДСИзСтоимости),
	|	Партии.НалогообложениеФинПартии,
	|	НЕОПРЕДЕЛЕНО     КАК Подразделение,
	|	Партии.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО     КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|	ПО 
	|		Партии.Организация = ИсправительныеCФ.Организация
	|		И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		Партии.Организация = СписанияНДСНаРасходы.Организация
	|		И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	И Партии.НалогообложениеПартии <> Партии.НалогообложениеФинПартии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.НаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы),
	|	НЕОПРЕДЕЛЕНО,
	|	СписанияНДСНаРасходы.Подразделение     КАК Подразделение,
	|	Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	СписанияНДСНаРасходы.СтатьяРасходов    КАК СтатьяРасходов,
	|	СписанияНДСНаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|	ПО 
	|		Партии.Организация = ИсправительныеCФ.Организация
	|		И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		Партии.Организация = СписанияНДСНаРасходы.Организация
	|		И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	Партии.НалогообложениеФинПартии = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	И Партии.НалогообложениеПартии <> Партии.НалогообложениеФинПартии
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ДатаНачалаДействия150ФЗ", УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта);
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьЗаписиНДСПредъявленныйИзменениеНаправленияДеятельности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	// Обработаем смену направления деятельности 
	|ВЫБРАТЬ
	|	2                                      КАК Приоритет,
	|	Партии.МоментВремени                   КАК МоментВремени,
	|	Партии.Период                          КАК Период,
	|	Партии.Регистратор                     КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Партии.Организация                     КАК Организация,
	|	Партии.СчетФактура                     КАК СчетФактура,
	|	Партии.Контрагент                      КАК Поставщик,
	|	Партии.ВидЦенности                     КАК ВидЦенности,
	|	Партии.СтавкаНДС                       КАК СтавкаНДС,
	|	Партии.НалогообложениеФинПартии        КАК ВидДеятельностиНДС,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО) КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	Партии.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Партии.СуммаБезНДС                     КАК СуммаБезНДС,
	|	Партии.НДС                             КАК НДС,
	|	Партии.НДСУпр                          КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеНаправленияДеятельности) КАК Событие,
	|	Партии.НалогообложениеПартии           КАК КорВидДеятельностиНДС,
	|	Партии.ПодразделениеСписанияНДС        КАК Подразделение,
	|	Партии.КорНаправлениеДеятельности      КАК КорНаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС               КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС            КАК АналитикаРасходов,
	|	""""                                   КАК ИдентификаторСтроки,
	|	ИСТИНА                                 КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеНаправленияДеятельности_Предварительная
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК ИзменениеВидаДеятельности
	|	ПО
	|		Партии.Организация   = ИзменениеВидаДеятельности.Организация
	|		И Партии.СчетФактура = ИзменениеВидаДеятельности.СчетФактура
	|		И Партии.Контрагент   = ИзменениеВидаДеятельности.Поставщик
	|		И Партии.ВидЦенности = ИзменениеВидаДеятельности.ВидЦенности
	|		И Партии.СтавкаНДС   = ИзменениеВидаДеятельности.СтавкаНДС
	|		И Партии.НалогообложениеФинПартии = ИзменениеВидаДеятельности.ВидДеятельностиНДС
	|ГДЕ
	|	Партии.НаправлениеДеятельности <> Партии.КорНаправлениеДеятельности
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	И ИзменениеВидаДеятельности.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.НалогообложениеПартии,
	|	ЕСТЬNULL(ИсправительныеCФ.ИсправительныйСчетФактура, НЕОПРЕДЕЛЕНО),
	|	НЕОПРЕДЕЛЕНО,
	|	Партии.КорНаправлениеДеятельности,
	|	Партии.СуммаБезНДС,
	|	Партии.НДС,
	|	Партии.НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеНаправленияДеятельности),
	|	Партии.НалогообложениеФинПартии,
	|	НЕОПРЕДЕЛЕНО                      КАК Подразделение,
	|	Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                      КАК АналитикаРасходов,
	|	"""",
	|	ИСТИНА
	|ИЗ
	|	Партии КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправительныеСчетаФактуры КАК ИсправительныеCФ
	|		ПО Партии.Организация = ИсправительныеCФ.Организация
	|			И Партии.СчетФактура = ИсправительныеCФ.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНДСНаРасходы
	|		ПО Партии.Организация = СписанияНДСНаРасходы.Организация
	|			И Партии.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК ИзменениеВидаДеятельности
	|	ПО
	|		Партии.Организация   = ИзменениеВидаДеятельности.Организация
	|		И Партии.СчетФактура = ИзменениеВидаДеятельности.СчетФактура
	|		И Партии.Контрагент   = ИзменениеВидаДеятельности.Поставщик
	|		И Партии.ВидЦенности = ИзменениеВидаДеятельности.ВидЦенности
	|		И Партии.СтавкаНДС   = ИзменениеВидаДеятельности.СтавкаНДС
	|		И Партии.НалогообложениеПартии = ИзменениеВидаДеятельности.ВидДеятельностиНДС
	|	
	|ГДЕ
	|	Партии.НаправлениеДеятельности <> Партии.КорНаправлениеДеятельности
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL
	|	И ИзменениеВидаДеятельности.СчетФактура ЕСТЬ NULL
	|;
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет                  КАК Приоритет,
	|	ДД.МоментВремени              КАК МоментВремени,
	|	ДД.Период                     КАК Период,
	|	ДД.Регистратор                КАК Регистратор,
	|	ДД.ВидДвижения                КАК ВидДвижения,
	|	ДД.Организация                КАК Организация,
	|	ДД.СчетФактура                КАК СчетФактура,
	|	ДД.Поставщик                  КАК Поставщик,
	|	ДД.ВидЦенности                КАК ВидЦенности,
	|	ДД.СтавкаНДС                  КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Остатки.СуммаБезНДС > ДД.СуммаБезНДС
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ Остатки.СуммаБезНДС
	|	КОНЕЦ                         КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА Остатки.НДС > ДД.НДС
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ Остатки.НДС
	|	КОНЕЦ                         КАК НДС,
	|	ВЫБОР
	|		КОГДА Остатки.НДСУпр > ДД.НДСУпр
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ Остатки.НДСУпр
	|	КОНЕЦ                         КАК НДСУпр,
	|	ДД.Событие                    КАК Событие,
	|	ДД.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	ДД.Подразделение              КАК Подразделение,
	|	ДД.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ДД.СтатьяРасходов             КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов          КАК АналитикаРасходов,
	|	ДД.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	ДД.РегламентнаяОперация       КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйИзменениеНаправленияДеятельности
	|ИЗ
	|	НДСПредъявленныйИзменениеНаправленияДеятельности_Предварительная КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйОстатокНаНачало КАК Остатки
	|	ПО
	|		ДД.Организация   = Остатки.Организация
	|		И ДД.СчетФактура = Остатки.СчетФактура
	|		И ДД.Поставщик   = Остатки.Поставщик
	|		И ДД.ВидЦенности = Остатки.ВидЦенности
	|		И ДД.СтавкаНДС   = Остатки.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = Остатки.ВидДеятельностиНДС
	|		И ДД.ИсправленныйСчетФактура = Остатки.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = Остатки.РеализацияЭкспорт
	|	
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ДатаНачалаДействия150ФЗ", УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта);
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьЗаписиНДСПредъявленныйПоИСФ(ПараметрыРасчета)
	 
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсправительныеСчетаФактуры.МоментВремени    КАК МоментВремени,
	|	ИсправительныеСчетаФактуры.Ссылка           КАК Регистратор,
	|	ИсправительныеСчетаФактуры.ДатаПолучения    КАК Период,
	|	ИсправительныеСчетаФактуры.ИсправительныйСчетФактура КАК ИсправительныйСчетФактура,
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                        КАК НДС,
	|	НДСПредъявленный.НДСУпр                     КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов
	|ПОМЕСТИТЬ НДСПредъявленныйИсправительныеСчетаФактуры
	|ИЗ
	|	ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Организация = ИсправительныеСчетаФактуры.Организация
	|		И НДСПредъявленный.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И НДСПредъявленный.Период < &НачалоПериода
	|		И НДСПредъявленный.ИсправленныйСчетФактура <> ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|		И НДСПредъявленный.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсправительныеСчетаФактуры.МоментВремени КАК МоментВремени,
	|	ИсправительныеСчетаФактуры.Ссылка КАК Регистратор,
	|	ИсправительныеСчетаФактуры.ДатаПолучения КАК Период,
	|	ИсправительныеСчетаФактуры.ИсправительныйСчетФактура,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС,
	|	НДСПредъявленный.НДС,
	|	НДСПредъявленный.НДСУпр,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов
	|
	|ИЗ
	|	ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Организация = ИсправительныеСчетаФактуры.Организация
	|		И НДСПредъявленный.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И НДСПредъявленный.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И НДСПредъявленный.ИсправленныйСчетФактура <> ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|		И НЕ НДСПредъявленный.РегламентнаяОперация
	|		И НДСПредъявленный.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Событие
	|;
	|
	|ВЫБРАТЬ
	|	1                                           КАК Приоритет,
	|	НДСПредъявленный.МоментВремени              КАК МоментВремени,
	|	НДСПредъявленный.Регистратор                КАК Регистратор,
	|	НДСПредъявленный.Период                     КАК Период,
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	СУММА(НДСПредъявленный.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(НДСПредъявленный.НДС)                 КАК НДС,
	|	СУММА(НДСПредъявленный.НДСУпр)              КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	ИСТИНА                                      КАК РегламентнаяОперация,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов
	|ПОМЕСТИТЬ НДСПредъявленныйПоИСФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДСПредъявленный.МоментВремени,
	|		НДСПредъявленный.Регистратор,
	|		НДСПредъявленный.Период,
	|		НДСПредъявленный.ВидДвижения,
	|		НДСПредъявленный.Организация,
	|		НДСПредъявленный.СчетФактура,
	|		НДСПредъявленный.Поставщик,
	|		НДСПредъявленный.ВидЦенности,
	|		НДСПредъявленный.СтавкаНДС,
	|		НДСПредъявленный.ВидДеятельностиНДС,
	|		НДСПредъявленный.ИсправленныйСчетФактура,
	|		НДСПредъявленный.РеализацияЭкспорт,
	|		НДСПредъявленный.НаправлениеДеятельности,
	|		- НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|		- НДСПредъявленный.НДС КАК НДС,
	|		- НДСПредъявленный.НДСУпр КАК НДСУпр,
	|		НДСПредъявленный.Событие,
	|		НДСПредъявленный.КорВидДеятельностиНДС,
	|		НДСПредъявленный.ИдентификаторСтроки,
	|		НДСПредъявленный.Подразделение,
	|		НДСПредъявленный.КорНаправлениеДеятельности,
	|		НДСПредъявленный.СтатьяРасходов,
	|		НДСПредъявленный.АналитикаРасходов
	|	ИЗ
	|		НДСПредъявленныйИсправительныеСчетаФактуры КАК НДСПредъявленный
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		НДСПредъявленный.МоментВремени,
	|		НДСПредъявленный.Регистратор,
	|		НДСПредъявленный.Период,
	|		НДСПредъявленный.ВидДвижения,
	|		НДСПредъявленный.Организация,
	|		НДСПредъявленный.СчетФактура,
	|		НДСПредъявленный.Поставщик,
	|		НДСПредъявленный.ВидЦенности,
	|		НДСПредъявленный.СтавкаНДС,
	|		НДСПредъявленный.ВидДеятельностиНДС,
	|		НДСПредъявленный.ИсправительныйСчетФактура,
	|		НДСПредъявленный.РеализацияЭкспорт,
	|		НДСПредъявленный.НаправлениеДеятельности,
	|		НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|		НДСПредъявленный.НДС КАК НДС,
	|		НДСПредъявленный.НДСУпр КАК НДСУпр,
	|		НДСПредъявленный.Событие,
	|		НДСПредъявленный.КорВидДеятельностиНДС,
	|		НДСПредъявленный.ИдентификаторСтроки,
	|		НДСПредъявленный.Подразделение,
	|		НДСПредъявленный.КорНаправлениеДеятельности,
	|		НДСПредъявленный.СтатьяРасходов,
	|		НДСПредъявленный.АналитикаРасходов
	|	ИЗ
	|		НДСПредъявленныйИсправительныеСчетаФактуры КАК НДСПредъявленный
	|	ГДЕ
	|		НЕ НДСПредъявленный.Событие В (
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету),
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0),
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0),
	|				ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПоКСФ)
	|				)
	|	) КАК НДСПредъявленный
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.МоментВремени,
	|	НДСПредъявленный.Регистратор,
	|	НДСПредъявленный.Период,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов
	|
	|ИМЕЮЩИЕ 
	|	СУММА(НДСПредъявленный.НДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НДСПредъявленныйИсправительныеСчетаФактуры
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьЗаписиНДСПредъявленныйВосстановлениеПодВидДеятельности(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	0                          КАК Приоритет,
	|	ДД.МоментВремени           КАК МоментВремени,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|	ДД.НДС                     КАК НДС,
	|	ДД.НДСУпр                  КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйДвиженияЗаПериод
	|ИЗ
	|	НДСПредъявленныйОнлайнДвижения КАК ДД
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет               КАК Приоритет,
	|	ДД.МоментВремени           КАК МоментВремени,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности  КАК ДД
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДД.Приоритет               КАК Приоритет,
	|	ДД.МоментВремени           КАК МоментВремени,
	|	ДД.Период                  КАК Период,
	|	ДД.Регистратор             КАК Регистратор,
	|	ДД.Организация             КАК Организация,
	|	ДД.СчетФактура             КАК СчетФактура,
	|	ДД.Поставщик               КАК Поставщик,
	|	ДД.ВидЦенности             КАК ВидЦенности,
	|	ДД.СтавкаНДС               КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.СуммаБезНДС
	|		ИНАЧЕ -ДД.СуммаБезНДС
	|	КОНЕЦ                      КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДС
	|		ИНАЧЕ -ДД.НДС
	|	КОНЕЦ                      КАК НДС,
	|	ВЫБОР
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДД.НДСУпр
	|		ИНАЧЕ -ДД.НДСУпр
	|	КОНЕЦ                      КАК НДСУпр
	|ИЗ
	|	НДСПредъявленныйПоИСФ  КАК ДД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура
	|;
	|
	|ВЫБРАТЬ
	|	1                                       КАК Приоритет,
	|	ДД.Период                               КАК Период,
	|	ДД.Регистратор                          КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ДД.Организация                          КАК Организация,
	|	ДД.СчетФактура                          КАК СчетФактура,
	|	ДД.Поставщик                            КАК Поставщик,
	|	ДД.ВидЦенности                          КАК ВидЦенности,
	|	ДД.СтавкаНДС                            КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                   КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура              КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                    КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности              КАК НаправлениеДеятельности,
	|	(ДД.СуммаБезНДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ                           КАК СуммаБезНДС,
	|	(ДД.НДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ                            КАК НДС,
	|	(ДД.НДСУпр) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДСУпр, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДСУпр, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДСУпр, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ                            КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПодВидДеятельности) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)       КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                     КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                     КАК АналитикаРасходов,
	|	""""                                     КАК ИдентификаторСтроки,
	|	ИСТИНА                                   КАК РегламентнаяОперация
	|	
	|ПОМЕСТИТЬ НДСПредъявленныйВосстановлениеПодВидДеятельности
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК ДД
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйОстатокНаНачало КАК НДСПредъявленныйОстатокНаНачало
	|	ПО
	|		ДД.Организация   = НДСПредъявленныйОстатокНаНачало.Организация
	|		И ДД.СчетФактура = НДСПредъявленныйОстатокНаНачало.СчетФактура
	|		И ДД.Поставщик   = НДСПредъявленныйОстатокНаНачало.Поставщик
	|		И ДД.ВидЦенности = НДСПредъявленныйОстатокНаНачало.ВидЦенности
	|		И ДД.СтавкаНДС = НДСПредъявленныйОстатокНаНачало.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = НДСПредъявленныйОстатокНаНачало.ВидДеятельностиНДС
	|		И ДД.ИсправленныйСчетФактура = НДСПредъявленныйОстатокНаНачало.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = НДСПредъявленныйОстатокНаНачало.РеализацияЭкспорт
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйДвиженияЗаПериод КАК НДСПредъявленныйДвиженияЗаПериод
	|	ПО
	|		ДД.Организация   = НДСПредъявленныйДвиженияЗаПериод.Организация
	|		И ДД.СчетФактура = НДСПредъявленныйДвиженияЗаПериод.СчетФактура
	|		И ДД.Поставщик   = НДСПредъявленныйДвиженияЗаПериод.Поставщик
	|		И ДД.ВидЦенности = НДСПредъявленныйДвиженияЗаПериод.ВидЦенности
	|		И ДД.СтавкаНДС = НДСПредъявленныйДвиженияЗаПериод.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = НДСПредъявленныйДвиженияЗаПериод.ВидДеятельностиНДС
	|		И ДД.ИсправленныйСчетФактура = НДСПредъявленныйДвиженияЗаПериод.ИсправленныйСчетФактура
	|		И ДД.РеализацияЭкспорт = НДСПредъявленныйДвиженияЗаПериод.РеализацияЭкспорт
	|		И (НДСПредъявленныйДвиженияЗаПериод.Приоритет = 0 // Онлайн движения
	|			ИЛИ НДСПредъявленныйДвиженияЗаПериод.НДС > 0  // Приход
	|			ИЛИ ДД.МоментВремени > НДСПредъявленныйДвиженияЗаПериод.МоментВремени // Более ранее движения 
	|			ИЛИ (ДД.МоментВремени = НДСПредъявленныйДвиженияЗаПериод.МоментВремени 
	|					И НДСПредъявленныйДвиженияЗаПериод.Приоритет < ДД.Приоритет))
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СписанияНДСНаРасходы КАК СписанияНДСНаРасходы
	|	ПО
	|		ДД.Организация = СписанияНДСНаРасходы.Организация
	|		И ДД.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|	
	|ГДЕ
	|	ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
	|	И СписанияНДСНаРасходы.СчетФактура ЕСТЬ NULL 
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности,
	|	ДД.СуммаБезНДС,
	|	ДД.НДС,
	|	ДД.НДСУпр
	|
	|ИМЕЮЩИЕ
	|	((ДД.НДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.НДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.НДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ) > 0
	|	ИЛИ (ДД.СуммаБезНДС) 
	|		- ВЫБОР КОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0)) > 0
	|			ТОГДА СУММА(ЕСТЬNULL(НДСПредъявленныйОстатокНаНачало.СуммаБезНДС, 0) + ЕСТЬNULL(НДСПредъявленныйДвиженияЗаПериод.СуммаБезНДС, 0))
	|				ИНАЧЕ 0
	|			КОНЕЦ  > 0
	|
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьОстаткиНДСПредъявленныйНаКонецПериода(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	СУММА(НДСПредъявленный.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСПредъявленный.НДС) КАК НДС,
	|	СУММА(НДСПредъявленный.НДСУпр) КАК НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстаткиНаКонецПериода 
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДД.Организация             КАК Организация,
	|		ДД.СчетФактура             КАК СчетФактура,
	|		ДД.Поставщик               КАК Поставщик,
	|		ДД.ВидЦенности             КАК ВидЦенности,
	|		ДД.СтавкаНДС               КАК СтавкаНДС,
	|		ДД.ВидДеятельностиНДС  КАК ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт       КАК РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ДД.СуммаБезНДС             КАК СуммаБезНДС,
	|		ДД.НДС                     КАК НДС,
	|		ДД.НДСУпр                  КАК НДСУпр
	|	ИЗ
	|		НДСПредъявленныйОстатокНаНачалоСНаправлениями КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ДД.СуммаБезНДС,
	|		ДД.НДС,
	|		ДД.НДСУпр
	|	ИЗ
	|		НДСПредъявленныйОнлайнДвижения КАК ДД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйПоИСФ КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйИзменениеНаправленияДеятельности КАК ДД
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДД.Организация,
	|		ДД.СчетФактура,
	|		ДД.Поставщик,
	|		ДД.ВидЦенности,
	|		ДД.СтавкаНДС,
	|		ДД.ВидДеятельностиНДС,
	|		ДД.ИсправленныйСчетФактура,
	|		ДД.РеализацияЭкспорт,
	|		ДД.НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.СуммаБезНДС
	|			ИНАЧЕ -ДД.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДС
	|			ИНАЧЕ -ДД.НДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДД.НДСУпр
	|			ИНАЧЕ -ДД.НДСУпр
	|		КОНЕЦ
	|	ИЗ
	|		НДСПредъявленныйВосстановлениеПодВидДеятельности КАК ДД
	|) КАК НДСПредъявленный
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСПредъявленный.СуммаБезНДС) <> 0 
	|		ИЛИ СУММА(НДСПредъявленный.НДС) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура,
	|	ИсправленныйСчетФактура
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьЗаписиНДСПредъявленныйПринятиеКВычету(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС,
	|	НДСПредъявленный.НДС,
	|	НДСПредъявленный.НДСУпр
	|ПОМЕСТИТЬ НДСПредъявленныйОстатки
	|ИЗ
	|	НДСПредъявленныйОстаткиНаКонецПериода КАК НДСПредъявленный
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК КорректировкаПоСогласованиюСторон
	|	ПО
	|		НДСПредъявленный.СчетФактура = КорректировкаПоСогласованиюСторон.Ссылка
	|		И НДСПредъявленный.Организация = КорректировкаПоСогласованиюСторон.Организация
	|		И КорректировкаПоСогласованиюСторон.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйНалоговыйАгент КАК КорректировочныйСчетФактура
	|	ПО
	|		НДСПредъявленный.СчетФактура = КорректировочныйСчетФактура.Ссылка
	|		И НДСПредъявленный.Организация = КорректировочныйСчетФактура.Организация
	|		И КорректировочныйСчетФактура.Корректировочный
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|	ПО
	|		НДСПредъявленный.СчетФактура = ВозвратТоваровПоставщику.Ссылка
	|		И НДСПредъявленный.Организация = ВозвратТоваровПоставщику.Организация
	|		И ВозвратТоваровПоставщику.Дата >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА НЕ КорректировкаПоСогласованиюСторон.Ссылка ЕСТЬ NULL 
	|			ТОГДА НДСПредъявленный.НДС > 0
	|		КОГДА НЕ КорректировочныйСчетФактура.Ссылка ЕСТЬ NULL 
	|			ТОГДА НДСПредъявленный.НДС > 0
	|		КОГДА НЕ ВозвратТоваровПоставщику.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСПредъявленный.Организация, 
	|	СчетФактура,
	|	Поставщик,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	ВидДеятельностиНДС,
	|	ИсправленныйСчетФактура,
	|	РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности
	|;
	|
	|///////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партии.МоментВремени              КАК МоментВремени,
	|	Партии.Период                     КАК Период,
	|	Партии.Регистратор                КАК Регистратор,
	|	Партии.Организация                КАК Организация,
	|	Партии.СчетФактура                КАК СчетФактура,
	|	Партии.ДатаПоступления            КАК ДатаПоступления,
	|	Партии.Контрагент                 КАК Поставщик,
	|	Партии.ВидЦенности                КАК ВидЦенности,
	|	Партии.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	Партии.СтавкаНДС                  КАК СтавкаНДС,
	|	СУММА(Партии.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(Партии.НДС)                 КАК НДС,
	|	СУММА(Партии.НДСУпр)              КАК НДСУпр
	|ПОМЕСТИТЬ ПартииНаПродажаОблагаетсяНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		Партии.МоментВремени              КАК МоментВремени,
	|		Партии.Период                     КАК Период,
	|		Партии.Регистратор                КАК Регистратор,
	|		Партии.Организация                КАК Организация,
	|		Партии.СчетФактура                КАК СчетФактура,
	|		Партии.ДатаПоступления            КАК ДатаПоступления,
	|		Партии.Контрагент                 КАК Контрагент,
	|		Партии.ВидЦенности                КАК ВидЦенности,
	|		Партии.НалогообложениеПартии      КАК ВидДеятельностиНДС,
	|		Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|		Партии.СтавкаНДС                  КАК СтавкаНДС,
	|		Партии.СуммаБезНДС                КАК СуммаБезНДС,
	|		Партии.НДС                        КАК НДС,
	|		Партии.НДСУпр                     КАК НДСУпр
	|	ИЗ
	|		Партии КАК Партии
	|	ГДЕ
	|		Партии.НалогообложениеПартии В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|		И НЕ Партии.НалогообложениеФинПартии В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|		И (Партии.НДС > 0) 
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.МоментВремени,
	|		Партии.Период,
	|		Партии.Регистратор,
	|		Партии.Организация,
	|		Партии.СчетФактура,
	|		Партии.ДатаПоступления,
	|		Партии.Контрагент,
	|		Партии.ВидЦенности,
	|		Партии.НалогообложениеФинПартии,
	|		Партии.НаправлениеДеятельности,
	|		Партии.СтавкаНДС,
	|		-Партии.СуммаБезНДС,
	|		-Партии.НДС,
	|		-Партии.НДСУпр
	|	ИЗ
	|		Партии КАК Партии
	|	ГДЕ
	|		Партии.НалогообложениеФинПартии В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|		И НЕ Партии.НалогообложениеПартии В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|		И (Партии.НДС < 0)
	|	) КАК Партии
	|	
	|СГРУППИРОВАТЬ ПО
	|	Партии.МоментВремени,
	|	Партии.Период,
	|	Партии.Регистратор,
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.ДатаПоступления,
	|	Партии.Контрагент,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура,
	|	Поставщик,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	ВидДеятельностиНДС,
	|	НаправлениеДеятельности
	|;
	|
	|ВЫБРАТЬ
	|	Партии.Организация                КАК Организация,
	|	Партии.СчетФактура                КАК СчетФактура,
	|	Партии.ДатаПоступления            КАК ДатаПоступления,
	|	Партии.Поставщик                  КАК Поставщик,
	|	Партии.ВидЦенности                КАК ВидЦенности,
	|	Партии.СтавкаНДС                  КАК СтавкаНДС,
	|	Партии.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	СУММА(Партии.СуммаБезНДС)         КАК СуммаБезНДС,
	|	СУММА(Партии.НДС)                 КАК НДС,
	|	СУММА(Партии.НДСУпр)              КАК НДСУпр
	|ПОМЕСТИТЬ ПартииНаПродажаОблагаетсяНДСИтоги 
	|ИЗ
	|	ПартииНаПродажаОблагаетсяНДС КАК Партии
	|СГРУППИРОВАТЬ ПО
	|	Партии.Организация,
	|	Партии.СчетФактура,
	|	Партии.ДатаПоступления,
	|	Партии.Поставщик,
	|	Партии.ВидЦенности,
	|	Партии.СтавкаНДС,
	|	Партии.ВидДеятельностиНДС,
	|	Партии.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация, 
	|	СчетФактура,
	|	Поставщик,
	|	ВидЦенности,
	|	СтавкаНДС,
	|	ВидДеятельностиНДС,
	|	НаправлениеДеятельности
	|;
	|
	// "Обычные" Вычеты НДС ПО СФ И ИСФ, полученным В данном месяце, ЕСЛИ НЕ было изменений вида деятельности.
	|ВЫБРАТЬ
	|	2                                                                         КАК Приоритет,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) >= &НачалоПериода
	|			ТОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) 
	|		ИНАЧЕ
	|			&КонецПериода
	|	КОНЕЦ                                                                     КАК Период,
	|	ЕСТЬNULL(ИсправительныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка) КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                           КАК ВидДвижения,
	|	ДД.Организация                                                   КАК Организация,
	|	ДД.СчетФактура                                                   КАК СчетФактура,
	|	ДД.Поставщик                                                     КАК Поставщик,
	|	ДД.ВидЦенности                                                   КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                     КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                            КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                       КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                             КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                       КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС - ЕСТЬNULL(ДанныеПартий.СуммаБезНДС, 0)           КАК СуммаБезНДС,
	|	ДД.НДС - ЕСТЬNULL(ДанныеПартий.НДС, 0)                           КАК НДС,
	|	ДД.НДСУпр - ЕСТЬNULL(ДанныеПартий.НДСУпр, 0)                     КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)  КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)       КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                     КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                     КАК АналитикаРасходов,
	|	""""                                                             КАК ИдентификаторСтроки,
	|	ИСТИНА                                                           КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйПринятиеКВычету
	|ИЗ
	|	НДСПредъявленныйОстатки КАК ДД
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = НЕОПРЕДЕЛЕНО
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправительныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПартииНаПродажаОблагаетсяНДСИтоги КАК ДанныеПартий
	|	ПО
	|		ДД.Организация = ДанныеПартий.Организация
	|		И ДД.СчетФактура = ДанныеПартий.СчетФактура
	|		И ДД.Поставщик = ДанныеПартий.Поставщик
	|		И ДД.ВидЦенности = ДанныеПартий.ВидЦенности
	|		И ДД.СтавкаНДС = ДанныеПартий.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = ДанныеПартий.ВидДеятельностиНДС
	|		И ДД.НаправлениеДеятельности = ДанныеПартий.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = ДД.Организация
	|		И ДанныеПервичныхДокументов.Документ = ДД.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		БлокировкаВычетаНДС КАК БлокировкаВычетаНДС
	|	ПО
	|		БлокировкаВычетаНДС.Организация = ДД.Организация
	|		И БлокировкаВычетаНДС.СчетФактура = ДД.СчетФактура
	|	
	|ГДЕ
	|	(НЕ СчетаФактурыДокументы.СчетФактура ЕСТЬ NULL
	|		ИЛИ НЕ ИсправительныеСчетаФактуры.СчетФактура ЕСТЬ NULL)
	|	И (ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИЛИ (ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|				И ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) >= &ДатаНачалаДействия150ФЗ))
	|	И ВЫБОР 
	|		КОГДА ДД.НДС < 0 ТОГДА
	|			ИСТИНА
	|		КОГДА ЕСТЬNULL(ДанныеПартий.НДС, 0) <> 0 ТОГДА
	|			(ДД.НДС - ЕСТЬNULL(ДанныеПартий.НДС, 0)) > 0
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|	И БлокировкаВычетаНДС.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Вычеты НДС, отложенного под производство с длительным циклом, после реализации.
	|ВЫБРАТЬ
	|	3                                                                КАК Приоритет,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) < &НачалоПериода
	|					И ДанныеДокументаРеализации.Дата < &НачалоПериода 
	|			ТОГДА &КонецПериода
	|		КОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) > ДанныеДокументаРеализации.Дата 
	|			ТОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок)
	|		ИНАЧЕ ДанныеДокументаРеализации.Дата
	|	КОНЕЦ                                                            КАК Период,
	|	ДД.РеализацияЭкспорт                                             КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                           КАК ВидДвижения,
	|	ДД.Организация                                                   КАК Организация,
	|	ДД.СчетФактура                                                   КАК СчетФактура,
	|	ДД.Поставщик                                                     КАК Поставщик,
	|	ДД.ВидЦенности                                                   КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                     КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                            КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                       КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                             КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                       КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС                                                   КАК СуммаБезНДС,
	|	ДД.НДС                                                           КАК НДС,
	|	ДД.НДСУпр                                                        КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету) КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)       КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                     КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                     КАК АналитикаРасходов,
	|	""""                                                             КАК ИдентификаторСтроки,
	|	ИСТИНА                                                           КАК РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйОстатки КАК ДД
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправительныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = ДД.Организация
	|		И ДанныеПервичныхДокументов.Документ = ДД.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеДокументаРеализации
	|	ПО
	|		ДанныеДокументаРеализации.Организация = ДД.Организация
	|		И ДанныеДокументаРеализации.Документ = ДД.РеализацияЭкспорт
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		БлокировкаВычетаНДС КАК БлокировкаВычетаНДС
	|	ПО
	|		БлокировкаВычетаНДС.Организация = ДД.Организация
	|		И БлокировкаВычетаНДС.СчетФактура = ДД.СчетФактура
	|
	|ГДЕ
	|	ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|	И ДД.РеализацияЭкспорт <> НЕОПРЕДЕЛЕНО
	|	И БлокировкаВычетаНДС.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Вычеты НДС, отложенного под экспорт по данным подтверждения ставки 0%. 
	|ВЫБРАТЬ
	|	2                                                                КАК Приоритет,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) < &НачалоПериода
	|					И НДССостояниеРеализации0.ДатаПодтверждения < &НачалоПериода 
	|			ТОГДА &КонецПериода
	|		КОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) > НДССостояниеРеализации0.ДатаПодтверждения 
	|			ТОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок)
	|		ИНАЧЕ НДССостояниеРеализации0.ДатаПодтверждения
	|	КОНЕЦ                                                            КАК Период,
	|	ВЫБОР 
	|		КОГДА ТИПЗНАЧЕНИЯ(ДД.РеализацияЭкспорт) В (ТИП(Документ.РеализацияТоваровУслуг), ТИП(Документ.АктВыполненныхРабот)) 
	|			ТОГДА ДД.РеализацияЭкспорт 
	|		ИНАЧЕ ЕСТЬNULL(ИсправительныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка)
	|	КОНЕЦ                                                            КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                           КАК ВидДвижения,
	|	ДД.Организация                                                   КАК Организация,
	|	ДД.СчетФактура                                                   КАК СчетФактура,
	|	ДД.Поставщик                                                     КАК Поставщик,
	|	ДД.ВидЦенности                                                   КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                     КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                            КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                       КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                             КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                       КАК НаправлениеДеятельности,
	|	ДД.СуммаБезНДС                                                   КАК СуммаБезНДС,
	|	ДД.НДС                                                           КАК НДС,
	|	ДД.НДСУпр                                                        КАК НДСУпр,
	|	ВЫБОР 
	|		КОГДА НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0) 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0) 
	|	КОНЕЦ                                                            КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)       КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                     КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                     КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                     КАК АналитикаРасходов,
	|	""""                                                             КАК ИдентификаторСтроки,
	|	ИСТИНА                                                           КАК РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйОстатки КАК ДД
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = НЕОПРЕДЕЛЕНО
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправительныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ПО
	|		ДД.Организация = НДССостояниеРеализации0.Организация
	|		И ДД.РеализацияЭкспорт = НДССостояниеРеализации0.ДокументРеализации
	|		И НДССостояниеРеализации0.Состояние В (
	|				ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0),
	|				ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0))
	|		И НДССостояниеРеализации0.ДатаПодтверждения <= &КонецПериода 
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = ДД.Организация
	|		И ДанныеПервичныхДокументов.Документ = ДД.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		БлокировкаВычетаНДС КАК БлокировкаВычетаНДС
	|	ПО
	|		БлокировкаВычетаНДС.Организация = ДД.Организация
	|		И БлокировкаВычетаНДС.СчетФактура = ДД.СчетФактура
	|
	|ГДЕ
	|	(НЕ СчетаФактурыДокументы.СчетФактура ЕСТЬ NULL
	|		ИЛИ НЕ ИсправительныеСчетаФактуры.СчетФактура ЕСТЬ NULL)
	|	И (ДД.ВидДеятельностиНДС В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг))
	|		ИЛИ (ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|					И ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1,1,1)) < &ДатаНачалаДействия150ФЗ))
	|	И БлокировкаВычетаНДС.СчетФактура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Вычеты НДС по результатам изменения вида деятельности НДС на ПродажаОблагаетсяНДС.
	|ВЫБРАТЬ
	|	4                                                                КАК Приоритет,
	|	ДанныеПартий.Период                                              КАК Период,
	|	ДанныеПартий.Регистратор                                         КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                           КАК ВидДвижения,
	|	ДД.Организация                                                   КАК Организация,
	|	ДД.СчетФактура                                                   КАК СчетФактура,
	|	ДД.Поставщик                                                     КАК Поставщик,
	|	ДД.ВидЦенности                                                   КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                     КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                            КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                       КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                                                     КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                       КАК НаправлениеДеятельности,
	|	ВЫБОР 
	|		КОГДА МАКСИМУМ(ДанныеПартий.СуммаБезНДС) <= 
	|				(МАКСИМУМ(ДД.СуммаБезНДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.СуммаБезНДС, 0)))
	|			ТОГДА МАКСИМУМ(ДанныеПартий.СуммаБезНДС)
	|		ИНАЧЕ МАКСИМУМ(ДД.СуммаБезНДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.СуммаБезНДС, 0))
	|	КОНЕЦ                                                             КАК СуммаБезНДС,
	|	ВЫБОР 
	|		КОГДА МАКСИМУМ(ДанныеПартий.НДС) <= 
	|				(МАКСИМУМ(ДД.НДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДС, 0)))
	|			ТОГДА МАКСИМУМ(ДанныеПартий.НДС)
	|		ИНАЧЕ МАКСИМУМ(ДД.НДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДС, 0))
	|	КОНЕЦ                                                             КАК НДС,
	|	ВЫБОР 
	|		КОГДА МАКСИМУМ(ДанныеПартий.НДСУпр) <= 
	|				(МАКСИМУМ(ДД.НДСУпр) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДСУпр, 0)))
	|			ТОГДА МАКСИМУМ(ДанныеПартий.НДСУпр)
	|		ИНАЧЕ МАКСИМУМ(ДД.НДСУпр) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДСУпр, 0))
	|	КОНЕЦ                                                             КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)   КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)        КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                      КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                      КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                      КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                      КАК АналитикаРасходов,
	|	""""                                                              КАК ИдентификаторСтроки,
	|	ИСТИНА                                                            КАК РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйОстатки КАК ДД
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = НЕОПРЕДЕЛЕНО
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправительныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПартииНаПродажаОблагаетсяНДС КАК ДанныеПартий
	|	ПО
	|		ДД.Организация = ДанныеПартий.Организация
	|		И ДД.СчетФактура = ДанныеПартий.СчетФактура
	|		И ДД.Поставщик = ДанныеПартий.Поставщик
	|		И ДД.ВидЦенности = ДанныеПартий.ВидЦенности
	|		И ДД.СтавкаНДС = ДанныеПартий.СтавкаНДС
	|		И ДД.ВидДеятельностиНДС = ДанныеПартий.ВидДеятельностиНДС
	|		И ДД.НаправлениеДеятельности = ДанныеПартий.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПартииНаПродажаОблагаетсяНДС КАК ДанныеПартийУменьшение
	|	ПО
	|		ДанныеПартий.Организация = ДанныеПартийУменьшение.Организация
	|		И ДанныеПартий.СчетФактура = ДанныеПартийУменьшение.СчетФактура
	|		И ДанныеПартий.Поставщик = ДанныеПартийУменьшение.Поставщик
	|		И ДанныеПартий.ВидЦенности = ДанныеПартийУменьшение.ВидЦенности
	|		И ДанныеПартий.СтавкаНДС = ДанныеПартийУменьшение.СтавкаНДС
	|		И ДанныеПартий.ВидДеятельностиНДС = ДанныеПартийУменьшение.ВидДеятельностиНДС
	|		И ДанныеПартий.НаправлениеДеятельности = ДанныеПартийУменьшение.НаправлениеДеятельности
	|		И ДанныеПартий.МоментВремени < ДанныеПартийУменьшение.МоментВремени
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеСчетовФактур
	|	ПО
	|		ДанныеСчетовФактур.Организация = ДД.Организация
	|		И ДанныеСчетовФактур.Документ = ДД.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		БлокировкаВычетаНДС КАК БлокировкаВычетаНДС
	|	ПО
	|		БлокировкаВычетаНДС.Организация = ДД.Организация
	|		И БлокировкаВычетаНДС.СчетФактура = ДД.СчетФактура
	|
	|ГДЕ
	|	(НЕ СчетаФактурыДокументы.СчетФактура ЕСТЬ NULL
	|		ИЛИ НЕ ИсправительныеСчетаФактуры.СчетФактура ЕСТЬ NULL)
	|	И (ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИЛИ (ДД.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|				И ДанныеПартий.ДатаПоступления >= &ДатаНачалаДействия150ФЗ))
	|	И БлокировкаВычетаНДС.СчетФактура ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПартий.Период,
	|	ДанныеПартий.Регистратор,
	|	ДД.Организация,
	|	ДД.СчетФактура,
	|	ДД.Поставщик,
	|	ДД.ВидЦенности,
	|	ДД.СтавкаНДС,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.НаправлениеДеятельности,
	|	ДД.ИсправленныйСчетФактура
	|
	|ИМЕЮЩИЕ
	|	(ВЫБОР 
	|		КОГДА МАКСИМУМ(ДанныеПартий.НДС) <= (МАКСИМУМ(ДД.НДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДС, 0)))
	|			ТОГДА МАКСИМУМ(ДанныеПартий.НДС)
	|		ИНАЧЕ МАКСИМУМ(ДД.НДС) - СУММА(ЕСТЬNULL(ДанныеПартийУменьшение.НДС, 0))
	|	КОНЕЦ > 0)
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ДатаНачалаДействия150ФЗ", УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта);
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", ДатаОтраженияВозвратовКорректировочнымиСФ());
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьЗаписиНДСПредъявленныйВосстановлениеПоКСФ(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	2                                                                         КАК Приоритет,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) >= &НачалоПериода
	|			ТОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок)
	|		ИНАЧЕ
	|			&КонецПериода
	|	КОНЕЦ                                                                     КАК Период,
	|	ЕСТЬNULL(ИсправительныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка) КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                    КАК ВидДвижения,
	|	ДД.Организация                                                            КАК Организация,
	|	ДД.СчетФактура                                                            КАК СчетФактура,
	|	ДД.Поставщик                                                              КАК Поставщик,
	|	ДД.ВидЦенности                                                            КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                              КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                                     КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                                КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                                      КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                                КАК НаправлениеДеятельности,
	|	-ДД.СуммаБезНДС                                                           КАК СуммаБезНДС,
	|	-ДД.НДС                                                                   КАК НДС,
	|	-ДД.НДСУпр                                                                КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПоКСФ)     КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)                КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                              КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                              КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                              КАК АналитикаРасходов,
	|	""""                                                                      КАК ИдентификаторСтроки,
	|	ИСТИНА                                                                    КАК РегламентнаяОперация
	|	
	|ПОМЕСТИТЬ НДСПредъявленныйВосстановлениеПоКСФ
	|ИЗ
	|	НДСПредъявленныйОстаткиНаКонецПериода КАК ДД
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК КорректировкаПоСогласованиюСторон
	|	ПО
	|		ДД.СчетФактура = КорректировкаПоСогласованиюСторон.Ссылка
	|		И ДД.Организация = КорректировкаПоСогласованиюСторон.Организация
	|		И КорректировкаПоСогласованиюСторон.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправительныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|ГДЕ
	|	ДД.ВидДеятельностиНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|	И ДД.НДС < 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	2                                                                         КАК Приоритет,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) >= &НачалоПериода
	|			ТОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок)
	|		ИНАЧЕ
	|			&КонецПериода
	|	КОНЕЦ                                                                     КАК Период,
	|	ЕСТЬNULL(ИсправительныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка) КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                    КАК ВидДвижения,
	|	ДД.Организация                                                            КАК Организация,
	|	ДД.СчетФактура                                                            КАК СчетФактура,
	|	ДД.Поставщик                                                              КАК Поставщик,
	|	ДД.ВидЦенности                                                            КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                              КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                                     КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                                КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                                      КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                                КАК НаправлениеДеятельности,
	|	-ДД.СуммаБезНДС                                                           КАК СуммаБезНДС,
	|	-ДД.НДС                                                                   КАК НДС,
	|	-ДД.НДСУпр                                                                КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПоКСФ)     КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)                КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                              КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                              КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                              КАК АналитикаРасходов,
	|	""""                                                                      КАК ИдентификаторСтроки,
	|	ИСТИНА                                                                    КАК РегламентнаяОперация
	|	
	|ИЗ
	|	НДСПредъявленныйОстаткиНаКонецПериода КАК ДД
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученныйНалоговыйАгент КАК КорректировочныйСчетФактура
	|	ПО
	|		ДД.СчетФактура = КорректировочныйСчетФактура.Ссылка
	|		И ДД.Организация = КорректировочныйСчетФактура.Организация
	|		И КорректировочныйСчетФактура.Корректировочный
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправительныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|ГДЕ
	|	ДД.ВидДеятельностиНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|	И ДД.НДС < 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	2                                                                         КАК Приоритет,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок) >= &НачалоПериода
	|			ТОГДА ЕСТЬNULL(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, СчетаФактурыДокументы.ДатаЗаписиКнигиПокупок)
	|		ИНАЧЕ
	|			&КонецПериода
	|	КОНЕЦ                                                                     КАК Период,
	|	ЕСТЬNULL(ИсправительныеСчетаФактуры.Ссылка, СчетаФактурыДокументы.Ссылка) КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                    КАК ВидДвижения,
	|	ДД.Организация                                                            КАК Организация,
	|	ДД.СчетФактура                                                            КАК СчетФактура,
	|	ДД.Поставщик                                                              КАК Поставщик,
	|	ДД.ВидЦенности                                                            КАК ВидЦенности,
	|	ДД.СтавкаНДС                                                              КАК СтавкаНДС,
	|	ДД.ВидДеятельностиНДС                                                     КАК ВидДеятельностиНДС,
	|	ДД.ИсправленныйСчетФактура                                                КАК ИсправленныйСчетФактура,
	|	ДД.РеализацияЭкспорт                                                      КАК РеализацияЭкспорт,
	|	ДД.НаправлениеДеятельности                                                КАК НаправлениеДеятельности,
	|	-ДД.СуммаБезНДС                                                           КАК СуммаБезНДС,
	|	-ДД.НДС                                                                   КАК НДС,
	|	-ДД.НДСУпр                                                                КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПоКСФ)     КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)                КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                                              КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                                              КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                              КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                                              КАК АналитикаРасходов,
	|	""""                                                                      КАК ИдентификаторСтроки,
	|	ИСТИНА                                                                    КАК РегламентнаяОперация
	|	
	|ИЗ
	|	НДСПредъявленныйОстаткиНаКонецПериода КАК ДД
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровПоставщику КАК КорректировочныйСчетФактура
	|	ПО
	|		ДД.СчетФактура = КорректировочныйСчетФактура.Ссылка
	|		И ДД.Организация = КорректировочныйСчетФактура.Организация
	|		И КорректировочныйСчетФактура.Дата >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		ДД.Организация = СчетаФактурыДокументы.Организация
	|		И ДД.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ПО
	|		ДД.Организация = ИсправительныеСчетаФактуры.Организация
	|		И ДД.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И ДД.ИсправленныйСчетФактура = ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|ГДЕ
	|	ДД.ВидДеятельностиНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров))
	|	И ДД.НДС < 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",           ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",            ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",       ПараметрыРасчета.МассивОрганизаций);
	Запрос.УстановитьПараметр("ДатаНачалаДействия150ФЗ", УчетНДСУП.НастройкиУчета().ДатаРазделенияЭкспорта);
	Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", ДатаОтраженияВозвратовКорректировочнымиСФ());
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьЗаписиНДСПредъявленныйСохранение(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПодВидДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	НДСПредъявленныйИзменениеНаправленияДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПоКСФ КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	НДСПредъявленныйПоИСФ КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСПредъявленный КАК НДСПредъявленный
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|/////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0                                           КАК Приоритет,
	|	НДСПредъявленный.Период                     КАК Период,
	|	НДСПредъявленный.Регистратор                КАК Регистратор,
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                        КАК НДС,
	|	НДСПредъявленный.НДСУпр                     КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация       КАК РегламентнаяОперация
	|ПОМЕСТИТЬ НДСПредъявленныйСохранение
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		НДСПредъявленный.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		Задания.Организация = НДСПредъявленный.Организация
	|		И Задания.СчетФактура = НДСПредъявленный.СчетФактура
	|ГДЕ
	|	НЕ РегистраторыЗапись.Регистратор ЕСТЬ NULL
	|	И (НДСПредъявленный.Период < &НачалоПериода
	|			ИЛИ НДСПредъявленный.Период > &КонецПериода
	|			ИЛИ НЕ НДСПредъявленный.РегламентнаяОперация
	|			ИЛИ Задания.СчетФактура ЕСТЬ NULL)
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаписатьНДСПредъявленный(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет КАК Приоритет,
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.ВидДвижения КАК ВидДвижения,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура,
	|	НДСПредъявленный.Поставщик КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС КАК НДС,
	|	НДСПредъявленный.НДСУпр КАК НДСУпр,
	|	НДСПредъявленный.Событие КАК Событие, 
	|	НДСПредъявленный.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение  КАК Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов КАК АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация КАК РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет КАК Приоритет,
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Регистратор,
	|	НДСПредъявленный.ВидДвижения КАК ВидДвижения,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НДСПредъявленный.СчетФактура КАК СчетФактура,
	|	НДСПредъявленный.Поставщик КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС КАК НДС,
	|	НДСПредъявленный.НДСУпр КАК НДСУпр,
	|	НДСПредъявленный.Событие КАК Событие, 
	|	НДСПредъявленный.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение  КАК Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов КАК АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация КАК РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйИзменениеНаправленияДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет,
	|	НДСПредъявленный.Период,
	|	НДСПредъявленный.Регистратор,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС,
	|	НДСПредъявленный.НДС,
	|	НДСПредъявленный.НДСУпр,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйПоИСФ КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет,
	|	НДСПредъявленный.Период,
	|	НДСПредъявленный.Регистратор,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС,
	|	НДСПредъявленный.НДС,
	|	НДСПредъявленный.НДСУпр,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет,
	|	НДСПредъявленный.Период,
	|	НДСПредъявленный.Регистратор,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС,
	|	НДСПредъявленный.НДС,
	|	НДСПредъявленный.НДСУпр,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПодВидДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет,
	|	НДСПредъявленный.Период,
	|	НДСПредъявленный.Регистратор,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС,
	|	НДСПредъявленный.НДС,
	|	НДСПредъявленный.НДСУпр,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПоКСФ КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет,
	|	НДСПредъявленный.Период,
	|	НДСПредъявленный.Регистратор,
	|	НДСПредъявленный.ВидДвижения,
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС,
	|	НДСПредъявленный.НДС,
	|	НДСПредъявленный.НДСУпр,
	|	НДСПредъявленный.Событие,
	|	НДСПредъявленный.КорВидДеятельностиНДС,
	|	НДСПредъявленный.Подразделение,
	|	НДСПредъявленный.КорНаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов,
	|	НДСПредъявленный.ИдентификаторСтроки,
	|	НДСПредъявленный.РегламентнаяОперация
	|ИЗ
	|	НДСПредъявленныйСохранение КАК НДСПредъявленный
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	Период,
	|	Приоритет
	|
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		// Проверка дат запрета не производится, т.к. сюда попадаем при выполнении заданий, 
		// а при создании заданий даты запрета контролируются. 
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьНДСПредъявленный(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСПредъявленный КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйИзменениеВидаДеятельности КАК НДСПредъявленныйИзменениеВидаДеятельности
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСПредъявленныйИзменениеВидаДеятельности.Регистратор
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйИзменениеНаправленияДеятельности КАК НДСПредъявленныйИзменениеНаправленияДеятельности
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСПредъявленныйИзменениеНаправленияДеятельности.Регистратор
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленныйПринятиеКВычету
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСПредъявленныйПринятиеКВычету.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйПоИСФ КАК НДСПредъявленныйПоИСФ
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСПредъявленныйПоИСФ.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйВосстановлениеПоКСФ КАК НДСПредъявленныйВосстановлениеПоКСФ
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСПредъявленныйВосстановлениеПоКСФ.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСПредъявленныйСохранение КАК НДСПредъявленныйСохранение
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСПредъявленныйСохранение.Регистратор
	|	
	|
	|ГДЕ
	|	НДСПредъявленныйИзменениеВидаДеятельности.Регистратор ЕСТЬ NULL
	|	И НДСПредъявленныйИзменениеНаправленияДеятельности.Регистратор ЕСТЬ NULL
	|	И НДСПредъявленныйПринятиеКВычету.Регистратор ЕСТЬ NULL
	|	И НДСПредъявленныйПоИСФ.Регистратор ЕСТЬ NULL
	|	И НДСПредъявленныйВосстановлениеПоКСФ.Регистратор ЕСТЬ NULL
	|	И НДСПредъявленныйСохранение.Регистратор ЕСТЬ NULL
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ФормированиеДвиженияНДСЗаписиКнигиПокупок

Процедура СформироватьНДСЗаписиКнигиПокупок(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыНДСЗаписиКнигиПокупок(ПараметрыРасчета);
	
	ПолучитьДокументыОплаты(ПараметрыРасчета);
	
	РассчитатьНДСЗаписиКнигиПокупокПоНДСПредъявленный(ПараметрыРасчета);
	РассчитатьНДСЗаписиКнигиПокупокСторноПоИСФ(ПараметрыРасчета);
	РассчитатьНДСЗаписиКнигиПокупокПоАвансуПолученному(ПараметрыРасчета);
	РассчитатьНДСЗаписиКнигиПокупокПоАвансуВыданному(ПараметрыРасчета);
	РассчитатьНДСЗаписиКнигиПокупокСохранение(ПараметрыРасчета);
	
	ЗаписатьНДСЗаписиКнигиПокупок(ПараметрыРасчета);
	ОчиститьНДСЗаписиКнигиПокупок(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыНДСЗаписиКнигиПокупок(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НДСЗаписиКнигиПокупок.Период КАК Период,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ТекущиеРегистраторыНДСЗаписиКнигиПокупок
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО НДСЗаписиКнигиПокупок.Организация = Задания.Организация
	|			И НДСЗаписиКнигиПокупок.СчетФактура = Задания.СчетФактура
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО НДСЗаписиКнигиПокупок.Регистратор = Задания.СчетФактура
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТИПЗНАЧЕНИЯ(НДСЗаписиКнигиПокупок.Регистратор) В (ТИП(Документ.СчетФактураВыданныйАванс), ТИП(Документ.СчетФактураПолученныйАванс))
	|	И НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьНДСЗаписиКнигиПокупокПоНДСПредъявленный(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.НаправлениеДеятельности,
	|	СУММА(НДСПредъявленный.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСПредъявленный.НДС) КАК НДС,
	|	СУММА(НДСПредъявленный.НДСУпр) КАК НДСУпр
	|ПОМЕСТИТЬ ВосстановленияНДС
	|ИЗ (ВЫБРАТЬ
	|		НДСПредъявленный.Организация,
	|		НДСПредъявленный.СчетФактура,
	|		НДСПредъявленный.Поставщик,
	|		НДСПредъявленный.ВидЦенности,
	|		НДСПредъявленный.СтавкаНДС,
	|		НДСПредъявленный.ИсправленныйСчетФактура,
	|		НДСПредъявленный.НаправлениеДеятельности,
	|		НДСПредъявленный.СуммаБезНДС КАК СуммаБезНДС,
	|		НДСПредъявленный.НДС КАК НДС,
	|		НДСПредъявленный.НДСУпр КАК НДСУпр
	|	ИЗ 
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			НДСПредъявленный.Организация = Задания.Организация
	|			И НДСПредъявленный.СчетФактура = Задания.СчетФактура
	|	ГДЕ
	|		НДСПредъявленный.Период < &НачалоПериода
	|		И НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВосстановлениеНДСПодВидДеятельности)
	|		И НДСПредъявленный.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НДСПредъявленный.Организация,
	|		НДСПредъявленный.СчетФактура,
	|		НДСПредъявленный.Поставщик,
	|		НДСПредъявленный.ВидЦенности,
	|		НДСПредъявленный.СтавкаНДС,
	|		НДСПредъявленный.ИсправленныйСчетФактура,
	|		НДСПредъявленный.НаправлениеДеятельности,
	|		НДСПредъявленный.СуммаБезНДС,
	|		НДСПредъявленный.НДС,
	|		НДСПредъявленный.НДСУпр
	|	ИЗ
	|		НДСПредъявленныйВосстановлениеПодВидДеятельности КАК НДСПредъявленный
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДСЗаписиКнигиПокупок.Организация,
	|		НДСЗаписиКнигиПокупок.СчетФактура,
	|		НДСЗаписиКнигиПокупок.Поставщик,
	|		НДСЗаписиКнигиПокупок.ВидЦенности,
	|		НДСЗаписиКнигиПокупок.СтавкаНДС,
	|		НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|		НДСЗаписиКнигиПокупок.НаправлениеДеятельности,
	|		-НДСЗаписиКнигиПокупок.СуммаБезНДС КАК СуммаБезНДС,
	|		-НДСЗаписиКнигиПокупок.НДС КАК НДС,
	|		-НДСЗаписиКнигиПокупок.НДСУпр КАК НДСУпр
	|	ИЗ 
	|		РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Задания КАК Задания
	|		ПО
	|			НДСЗаписиКнигиПокупок.Организация = Задания.Организация
	|			И НДСЗаписиКнигиПокупок.СчетФактура = Задания.СчетФактура
	|	ГДЕ
	|		НДСЗаписиКнигиПокупок.Период < &НачалоПериода
	|		И НДСЗаписиКнигиПокупок.КодВидаОперации = ""25""
	|	) КАК НДСПредъявленный
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура,
	|	НДСПредъявленный.Поставщик,
	|	НДСПредъявленный.ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура,
	|	НДСПредъявленный.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСПредъявленный.НДС) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НДСПредъявленный.Организация,
	|	НДСПредъявленный.СчетФактура
	|;
	|
	// Записи по событию НДСПринятКВычету
	|///////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет                                      КАК Приоритет,
	|	НДСПредъявленный.Период                                         КАК Период,
	|	НДСПредъявленный.Регистратор                                    КАК Регистратор,
	|	НДСПредъявленный.Организация                                    КАК Организация,
	|	НДСПредъявленный.Поставщик                                      КАК Поставщик,
	|	НДСПредъявленный.СчетФактура                                    КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                    КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                                      КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                                КАК ДатаОплаты,
	|	СчетаФактурыДокументы.ДокументОплаты                            КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ)                  КАК ДатаСобытия,
	|	ЕСТЬNULL(ИСФ.ЗаписьДополнительногоЛиста, ЛОЖЬ)                  КАК ЗаписьДополнительногоЛиста,
	|	ЕСТЬNULL(ИСФ.КорректируемыйПериод, ДАТАВРЕМЯ(1,1,1))            КАК КорректируемыйПериод,
	|	СчетаФактурыДокументы.ДоговорКонтрагента                        КАК ДоговорКонтрагента,
	|	НДСПредъявленный.ИсправленныйСчетФактура                        КАК ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 20
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 20
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 18
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 18
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 10
	|		ИНАЧЕ НДСПредъявленный.СуммаБезНДС
	|	КОНЕЦ                                                           КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                                            КАК НДС,
	|	НДСПредъявленный.НДСУпр                                         КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеНДСкВычету) КАК ХозяйственнаяОперация,
	|	""""                                                            КАК НомерДокументаОплаты,
	|	""""                                                            КАК ДатаДокументаОплаты,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|			ТОГДА ""20""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|			ТОГДА ""19""
	|		ИНАЧЕ """"
	|	КОНЕЦ                                                           КАК КодВидаОперации,
	|	НДСПредъявленный.РегламентнаяОперация                           КАК РегламентнаяОперация,
	|	НДСПредъявленный.РеализацияЭкспорт                              КАК ДокументОтгрузки,
	|	НДСПредъявленный.ВидДеятельностиНДС                             КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.КорНаправлениеДеятельности                     КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокПоНДСПредъявленный
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		НДСПредъявленный.Организация = СчетаФактурыДокументы.Организация
	|		И НДСПредъявленный.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИСФ
	|	ПО
	|		НДСПредъявленный.Организация = ИСФ.Организация
	|		И НДСПредъявленный.СчетФактура = ИСФ.СчетФактура
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ИСФ.ИсправительныйСчетФактура
	|	
	|ГДЕ
	|	НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Записи по событиям ПодтвержденаСтавка0 и НеПодтвержденаСтавка0
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет                                      КАК Приоритет,
	|	НДСПредъявленный.Период                                         КАК Период,
	|	НДСПредъявленный.Регистратор                                    КАК Регистратор,
	|	НДСПредъявленный.Организация                                    КАК Организация,
	|	НДСПредъявленный.Поставщик                                      КАК Поставщик,
	|	НДСПредъявленный.СчетФактура                                    КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                    КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                                      КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                                КАК ДатаОплаты,
	|	СчетаФактурыДокументы.ДокументОплаты                            КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|	КОНЕЦ                                                           КАК Событие,
	|	КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ)                  КАК ДатаСобытия,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0)
	|			И КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ) > ЕСТЬNULL(КОНЕЦПЕРИОДА(НДСПредъявленный.РеализацияЭкспорт.Дата, КВАРТАЛ), ДАТАВРЕМЯ(2100,1,1))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ
	|			ЕСТЬNULL(ИСФ.ЗаписьДополнительногоЛиста, ЛОЖЬ)
	|	КОНЕЦ                                                           КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0)
	|			И КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ) > ЕСТЬNULL(КОНЕЦПЕРИОДА(НДСПредъявленный.РеализацияЭкспорт.Дата, КВАРТАЛ), ДАТАВРЕМЯ(2100,1,1))
	|			ТОГДА НДСПредъявленный.РеализацияЭкспорт.Дата
	|		ИНАЧЕ
	|			ЕСТЬNULL(ИСФ.КорректируемыйПериод, ДАТАВРЕМЯ(1,1,1))
	|	КОНЕЦ                                                           КАК КорректируемыйПериод,
	|	СчетаФактурыДокументы.ДоговорКонтрагента                        КАК ДоговорКонтрагента,
	|	НДСПредъявленный.ИсправленныйСчетФактура                        КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.СуммаБезНДС - ЕСТЬNULL(ВосстановленияНДС.СуммаБезНДС, 0) КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС - ЕСТЬNULL(ВосстановленияНДС.НДС, 0)       КАК НДС,
	|	НДСПредъявленный.НДСУпр - ЕСТЬNULL(ВосстановленияНДС.НДСУпр, 0) КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеНДСкВычету) КАК ХозяйственнаяОперация,
	|	""""                                                            КАК НомерДокументаОплаты,
	|	""""                                                            КАК ДатаДокументаОплаты,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|			ТОГДА ""20""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|			ТОГДА ""19""
	|		ИНАЧЕ """"
	|	КОНЕЦ                                                           КАК КодВидаОперации,
	|	НДСПредъявленный.РегламентнаяОперация                           КАК РегламентнаяОперация,
	|	НДСПредъявленный.РеализацияЭкспорт                              КАК ДокументОтгрузки,
	|	НДСПредъявленный.ВидДеятельностиНДС                             КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.КорНаправлениеДеятельности                     КАК НаправлениеДеятельности
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		НДСПредъявленный.Организация = СчетаФактурыДокументы.Организация
	|		И НДСПредъявленный.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВосстановленияНДС КАК ВосстановленияНДС
	|	ПО
	|		НДСПредъявленный.Организация = ВосстановленияНДС.Организация
	|		И НДСПредъявленный.СчетФактура = ВосстановленияНДС.СчетФактура
	|		И НДСПредъявленный.Поставщик = ВосстановленияНДС.Поставщик
	|		И НДСПредъявленный.ВидЦенности = ВосстановленияНДС.ВидЦенности
	|		И НДСПредъявленный.СтавкаНДС = ВосстановленияНДС.СтавкаНДС
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ВосстановленияНДС.ИсправленныйСчетФактура
	|		И НДСПредъявленный.НаправлениеДеятельности = ВосстановленияНДС.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИСФ
	|	ПО
	|		НДСПредъявленный.Организация = ИСФ.Организация
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ИСФ.ИсправительныйСчетФактура
	|ГДЕ
	|	НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НДСПредъявленный.Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0),
	|				      ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0),
	|				      ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету))
	|	И (НДСПредъявленный.НДС - ЕСТЬNULL(ВосстановленияНДС.НДС, 0)) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет                                      КАК Приоритет,
	|	НДСПредъявленный.Период                                         КАК Период,
	|	НДСПредъявленный.Регистратор                                    КАК Регистратор,
	|	НДСПредъявленный.Организация                                    КАК Организация,
	|	НДСПредъявленный.Поставщик                                      КАК Поставщик,
	|	НДСПредъявленный.СчетФактура                                    КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                    КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                                      КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                                КАК ДатаОплаты,
	|	СчетаФактурыДокументы.ДокументОплаты                            КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|	КОНЕЦ                                                           КАК Событие,
	|	КОНЕЦПЕРИОДА(НДСПредъявленный.Период, КВАРТАЛ)                  КАК ДатаСобытия,
	|	ЕСТЬNULL(ИСФ.ЗаписьДополнительногоЛиста, ЛОЖЬ)                  КАК ЗаписьДополнительногоЛиста,
	|	ЕСТЬNULL(ИСФ.КорректируемыйПериод, ДАТАВРЕМЯ(1,1,1))            КАК КорректируемыйПериод,
	|	СчетаФактурыДокументы.ДоговорКонтрагента                        КАК ДоговорКонтрагента,
	|	НДСПредъявленный.ИсправленныйСчетФактура                        КАК ИсправленныйСчетФактура,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.СуммаБезНДС < ВосстановленияНДС.СуммаБезНДС
	|			ТОГДА НДСПредъявленный.СуммаБезНДС 
	|		ИНАЧЕ
	|			ВосстановленияНДС.СуммаБезНДС
	|	КОНЕЦ                                                           КАК СуммаБезНДС,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.НДС < ВосстановленияНДС.НДС
	|			ТОГДА НДСПредъявленный.НДС 
	|		ИНАЧЕ
	|			ВосстановленияНДС.НДС
	|	КОНЕЦ                                                           КАК НДС,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.НДСУпр < ВосстановленияНДС.НДСУпр
	|			ТОГДА НДСПредъявленный.НДСУпр 
	|		ИНАЧЕ
	|			ВосстановленияНДС.НДСУпр
	|	КОНЕЦ                                                           КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеНДСкВычету) КАК ХозяйственнаяОперация,
	|	""""                                                            КАК НомерДокументаОплаты,
	|	""""                                                            КАК ДатаДокументаОплаты,
	|	""25""                                                          КАК КодВидаОперации,
	|	НДСПредъявленный.РегламентнаяОперация                           КАК РегламентнаяОперация,
	|	НДСПредъявленный.РеализацияЭкспорт                              КАК ДокументОтгрузки,
	|	НДСПредъявленный.ВидДеятельностиНДС                             КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.КорНаправлениеДеятельности                     КАК НаправлениеДеятельности
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		НДСПредъявленный.Организация = СчетаФактурыДокументы.Организация
	|		И НДСПредъявленный.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВосстановленияНДС КАК ВосстановленияНДС
	|	ПО
	|		НДСПредъявленный.Организация = ВосстановленияНДС.Организация
	|		И НДСПредъявленный.СчетФактура = ВосстановленияНДС.СчетФактура
	|		И НДСПредъявленный.Поставщик = ВосстановленияНДС.Поставщик
	|		И НДСПредъявленный.ВидЦенности = ВосстановленияНДС.ВидЦенности
	|		И НДСПредъявленный.СтавкаНДС = ВосстановленияНДС.СтавкаНДС
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ВосстановленияНДС.ИсправленныйСчетФактура
	|		И НДСПредъявленный.НаправлениеДеятельности = ВосстановленияНДС.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИСФ
	|	ПО
	|		НДСПредъявленный.Организация = ИСФ.Организация
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ИСФ.ИсправительныйСчетФактура
	|	
	|ГДЕ
	|	НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НДСПредъявленный.Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0),
	|				      ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Регистрация документов оплаты
	|ВЫБРАТЬ
	|	НДСПредъявленный.Приоритет                                      КАК Приоритет,
	|	НДСПредъявленный.Период                                         КАК Период,
	|	НДСПредъявленный.Регистратор                                    КАК Регистратор,
	|	НДСПредъявленный.Организация                                    КАК Организация,
	|	НДСПредъявленный.Поставщик                                      КАК Поставщик,
	|	НДСПредъявленный.СчетФактура                                    КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                    КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                                      КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                                КАК ДатаОплаты,
	|	СчетаФактурыДокументы.ДокументОплаты                            КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|		КОГДА НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0)
	|	КОНЕЦ                                                          КАК Событие,
	|	НДСПредъявленный.Период                                        КАК ДатаСобытия,
	|	ЕСТЬNULL(ИСФ.ЗаписьДополнительногоЛиста, ЛОЖЬ)                 КАК ЗаписьДополнительногоЛиста,
	|	ЕСТЬNULL(ИСФ.КорректируемыйПериод, ДАТАВРЕМЯ(1,1,1))           КАК КорректируемыйПериод,
	|	СчетаФактурыДокументы.ДоговорКонтрагента                       КАК ДоговорКонтрагента,
	|	НДСПредъявленный.ИсправленныйСчетФактура                       КАК ИсправленныйСчетФактура,
	|	0                                                              КАК СуммаБезНДС,
	|	0                                                              КАК НДС,
	|	0                                                              КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПринятиеНДСкВычету) КАК ХозяйственнаяОперация,
	|	ДокументыОплаты.НомерДокументаОплаты                            КАК НомерДокументаОплаты,
	|	ДокументыОплаты.ДатаДокументаОплаты                             КАК ДатаДокументаОплаты,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныеПлатежи)
	|			ТОГДА ""20""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТаможенныйСоюз)
	|			ТОГДА ""19""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|			ТОГДА ""06""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|			ТОГДА ""06""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|			ТОГДА ""06""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентЭлектронныеУслуги)
	|			ТОГДА ""06""
	|		КОГДА НДСПредъявленный.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентКомитент)
	|			ТОГДА ""06""
	|		ИНАЧЕ """"
	|	КОНЕЦ                                                           КАК КодВидаОперации,
	|	НДСПредъявленный.РегламентнаяОперация                           КАК РегламентнаяОперация,
	|	НДСПредъявленный.РеализацияЭкспорт                              КАК ДокументОтгрузки,
	|	НДСПредъявленный.ВидДеятельностиНДС                             КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.КорНаправлениеДеятельности                     КАК НаправлениеДеятельности
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		НДСПредъявленный.Организация = СчетаФактурыДокументы.Организация
	|		И НДСПредъявленный.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыОплаты КАК ДокументыОплаты
	|	ПО
	|		НДСПредъявленный.Организация = ДокументыОплаты.Организация
	|		И НДСПредъявленный.СчетФактура = ДокументыОплаты.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВосстановленияНДС КАК ВосстановленияНДС
	|	ПО
	|		НДСПредъявленный.Организация = ВосстановленияНДС.Организация
	|		И НДСПредъявленный.СчетФактура = ВосстановленияНДС.СчетФактура
	|		И НДСПредъявленный.Поставщик = ВосстановленияНДС.Поставщик
	|		И НДСПредъявленный.ВидЦенности = ВосстановленияНДС.ВидЦенности
	|		И НДСПредъявленный.СтавкаНДС = ВосстановленияНДС.СтавкаНДС
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ВосстановленияНДС.ИсправленныйСчетФактура
	|		И НДСПредъявленный.НаправлениеДеятельности = ВосстановленияНДС.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ИсправительныеСчетаФактуры КАК ИСФ
	|	ПО
	|		НДСПредъявленный.Организация = ИСФ.Организация
	|		И НДСПредъявленный.ИсправленныйСчетФактура = ИСФ.ИсправительныйСчетФактура
	|
	|ГДЕ
	|	ВосстановленияНДС.СчетФактура ЕСТЬ NULL
	|	И НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НДСПредъявленный.Событие В (
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету),
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ПодтвержденаСтавка0),
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НеПодтвержденаСтавка0),
	|			ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПоДЦПринятКВычету))
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьНДСЗаписиКнигиПокупокСторноПоИСФ(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                          КАК Приоритет,
	|	ИсправительныеСчетаФактуры.Ссылка          КАК Регистратор,
	|	ИсправительныеСчетаФактуры.ДатаПолучения   КАК Период,
	|	НДСЗаписиКнигиПокупок.Организация          КАК Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик            КАК Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура          КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности          КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС            КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС         КАК СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты           КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты       КАК ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие              КАК Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия          КАК ДатаСобытия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК ЗаписьДополнительногоЛиста,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА НДСЗаписиКнигиПокупок.Период
	|	КОНЕЦ) КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента      КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	-СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС)     КАК СуммаБезНДС,
	|	-СУММА(НДСЗаписиКнигиПокупок.НДС)             КАК НДС,
	|	-СУММА(НДСЗаписиКнигиПокупок.НДСУпр)          КАК НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты    КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты     КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации         КАК КодВидаОперации,
	|	ИСТИНА                                        КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки        КАК ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС      КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокСторноПоИСФ
	|ИЗ
	|	ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|	ПО
	|		НДСЗаписиКнигиПокупок.Организация = ИсправительныеСчетаФактуры.Организация
	|		И НДСЗаписиКнигиПокупок.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И НДСЗаписиКнигиПокупок.Период < &НачалоПериода
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура <> ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсправительныеСчетаФактуры.Ссылка,
	|	ИсправительныеСчетаФактуры.ДатаПолучения,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСЗаписиКнигиПокупок.НДС) <> 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьНДСЗаписиКнигиПокупокСохранение(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоНДСПредъявленный КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор
	|ИЗ
	|	НДСЗаписиКнигиПокупокСторноПоИСФ КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоАвансамПолученным КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоАвансамВыданным КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|;
	|
	|ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.НДС,
	|	НДСЗаписиКнигиПокупок.НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокСохранение
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО
	|		НДСЗаписиКнигиПокупок.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		НДСЗаписиКнигиПокупок.Организация = Задания.Организация
	|		И НДСЗаписиКнигиПокупок.СчетФактура = Задания.СчетФактура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК ЗаданияПоРегистратору
	|	ПО
	|		НДСЗаписиКнигиПокупок.Организация = ЗаданияПоРегистратору.Организация
	|		И НДСЗаписиКнигиПокупок.Регистратор = ЗаданияПоРегистратору.СчетФактура 
	|
	|ГДЕ
	|	(НЕ РегистраторыЗапись.Регистратор ЕСТЬ NULL)
	|	И (НДСЗаписиКнигиПокупок.Период < &НачалоПериода
	|			ИЛИ НДСЗаписиКнигиПокупок.Период > &КонецПериода
	|			ИЛИ НЕ НДСЗаписиКнигиПокупок.РегламентнаяОперация
	|			ИЛИ Задания.СчетФактура ЕСТЬ NULL 
	|				И ЗаданияПоРегистратору.СчетФактура ЕСТЬ NULL)
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры


Процедура РассчитатьНДСЗаписиКнигиПокупокПоАвансуПолученному(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	ТаблицаНДСЗаписиКнигиПокупок.Период,
	|	ТаблицаНДСЗаписиКнигиПокупок.Регистратор,
	|	ТаблицаНДСЗаписиКнигиПокупок.Организация,
	|	ТаблицаНДСЗаписиКнигиПокупок.Поставщик,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.ВидЦенности,
	|	ТаблицаНДСЗаписиКнигиПокупок.СтавкаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДокументОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.Событие,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаСобытия,
	|	ТаблицаНДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	ТаблицаНДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ТаблицаНДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДСУпр,
	|	ТаблицаНДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.КодВидаОперации,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОтгрузки,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокПоАвансамПолученным
	|ИЗ
	|	ВтТаблицаНДСЗаписиКнигиПокупок КАК ТаблицаНДСЗаписиКнигиПокупок";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьНДСЗаписиКнигиПокупокПоАвансуВыданному(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	ТаблицаНДСЗаписиКнигиПокупок.Период,
	|	ТаблицаНДСЗаписиКнигиПокупок.Регистратор,
	|	ТаблицаНДСЗаписиКнигиПокупок.Организация,
	|	ТаблицаНДСЗаписиКнигиПокупок.Поставщик,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.ВидЦенности,
	|	ТаблицаНДСЗаписиКнигиПокупок.СтавкаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДокументОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.Событие,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаСобытия,
	|	ТаблицаНДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	ТаблицаНДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ТаблицаНДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДСУпр,
	|	ТаблицаНДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.КодВидаОперации,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОтгрузки,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокПоАвансамВыданным
	|ИЗ
	|	ВтТаблицаНДСЗаписиКнигиПокупокМеталлолом КАК ТаблицаНДСЗаписиКнигиПокупок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|		ПО ТаблицаНДСЗаписиКнигиПокупок.Регистратор = СчетФактураПолученныйАванс.Ссылка
	|ГДЕ
	|	СчетФактураПолученныйАванс.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаписатьНДСЗаписиКнигиПокупок(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.Приоритет,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.НДС,
	|	НДСЗаписиКнигиПокупок.НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоНДСПредъявленный КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.Приоритет,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.НДС,
	|	НДСЗаписиКнигиПокупок.НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПокупокСторноПоИСФ КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.Приоритет,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.НДС,
	|	НДСЗаписиКнигиПокупок.НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоАвансамПолученным КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.Приоритет,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.НДС,
	|	НДСЗаписиКнигиПокупок.НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоАвансамВыданным КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.Приоритет,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.НДС,
	|	НДСЗаписиКнигиПокупок.НДСУпр,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.РегламентнаяОперация,
	|	НДСЗаписиКнигиПокупок.ДокументОтгрузки,
	|	НДСЗаписиКнигиПокупок.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПокупок.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПокупокСохранение КАК НДСЗаписиКнигиПокупок
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	Период,
	|	Приоритет
	|
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьНДСЗаписиКнигиПокупок(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПокупок КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПокупокПоНДСПредъявленный КАК НДСЗаписиКнигиПокупокПоНДСПредъявленный
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСЗаписиКнигиПокупокПоНДСПредъявленный.Регистратор
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПокупокСохранение КАК НДСЗаписиКнигиПокупокСохранение
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСЗаписиКнигиПокупокСохранение.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПокупокСторноПоИСФ КАК НДСЗаписиКнигиПокупокСторноПоИСФ
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСЗаписиКнигиПокупокСторноПоИСФ.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПокупокПоАвансамПолученным КАК НДСЗаписиКнигиПокупокПоАвансамПолученным
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСЗаписиКнигиПокупокПоАвансамПолученным.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПокупокПоАвансамВыданным КАК НДСЗаписиКнигиПокупокПоАвансамВыданным
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСЗаписиКнигиПокупокПоАвансамВыданным.Регистратор
	|
	|ГДЕ
	|	НДСЗаписиКнигиПокупокПоНДСПредъявленный.Регистратор ЕСТЬ NULL
	|	И НДСЗаписиКнигиПокупокСохранение.Регистратор ЕСТЬ NULL
	|	И НДСЗаписиКнигиПокупокСторноПоИСФ.Регистратор ЕСТЬ NULL
	|	И НДСЗаписиКнигиПокупокПоАвансамПолученным.Регистратор ЕСТЬ NULL
	|	И НДСЗаписиКнигиПокупокПоАвансамВыданным.Регистратор ЕСТЬ NULL
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ФормированиеДвиженияНДСЗаписиКнигиПродаж


Процедура СформироватьНДСЗаписиКнигиПродаж(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыНДСЗаписиКнигиПродаж(ПараметрыРасчета);
	РассчитатьНДСЗаписиКнигиПродажПоНДСПредъявленный(ПараметрыРасчета);
	РассчитатьНДСЗаписиКнигиПродажСторноПоИСФ(ПараметрыРасчета);
	РассчитатьНДСЗаписиКнигиПродажПоАвансуВыданному(ПараметрыРасчета);
	РассчитатьНДСЗаписиКнигиПродажОплатыСФ(ПараметрыРасчета);
	РассчитатьНДСЗаписиКнигиПродажСохранение(ПараметрыРасчета);
	
	ЗаписатьНДСЗаписиКнигиПродаж(ПараметрыРасчета);
	ОчиститьНДСЗаписиКнигиПродаж(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыНДСЗаписиКнигиПродаж(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Период КАК Период,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ТекущиеРегистраторыНДСЗаписиКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО НДСЗаписиКнигиПродаж.Организация = Задания.Организация
	|			И НДСЗаписиКнигиПродаж.СчетФактура = Задания.СчетФактура
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО НДСЗаписиКнигиПродаж.Регистратор = Задания.СчетФактура
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТИПЗНАЧЕНИЯ(НДСЗаписиКнигиПродаж.Регистратор) = ТИП(Документ.СчетФактураПолученныйАванс)
	|	И НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|	И НДСЗаписиКнигиПродаж.НДС <> 0
	|
	// Для счетов-фактур налогового агента формируются оффлайновые записи
	// с номерами и датами документов оплаты НДС в бюджет.
	// Поэтому сохраняем онлайновые записи.
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО НДСЗаписиКнигиПродаж.Регистратор = Задания.СчетФактура
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(НДСЗаписиКнигиПродаж.Регистратор) = ТИП(Документ.СчетФактураНалоговыйАгент)
	|	И НЕ НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьНДСЗаписиКнигиПродажПоНДСПредъявленный(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                                            КАК Приоритет,
	|	НДСПредъявленный.Период                                      КАК Период,
	|	НДСПредъявленный.Регистратор                                 КАК Регистратор,
	|	НДСПредъявленный.Организация                                 КАК Организация,
	|	НДСПредъявленный.Поставщик                                   КАК Покупатель,
	|	НДСПредъявленный.СчетФактура                                 КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                 КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                                   КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО                                                 КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	НДСПредъявленный.Период                                      КАК ДатаСобытия,
	|	ЛОЖЬ                                                         КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК КорректируемыйПериод,
	|	ЛОЖЬ                                                         КАК СторнирующаяЗаписьДопЛиста,
	|	НДСПредъявленный.ИсправленныйСчетФактура                     КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ                                                         КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаСчетаФактурыКомиссионера,
	|	ВЫБОР
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 20
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 20
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 18
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 18
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 10
	|		ИНАЧЕ НДСПредъявленный.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                                         КАК НДС,
	|	НДСПредъявленный.НДСУпр                                      КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)    КАК ХозяйственнаяОперация,
	|	""""                                                         КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаДокументаОплаты,
	|	""21""                                                       КАК КодВидаОперации,
	|	ИСТИНА                                                       КАК РегламентнаяОперация,
	|	НДСПредъявленный.ВидДеятельностиНДС                          КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.НаправлениеДеятельности                     КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажПоНДСПредъявленный
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПодВидДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1                                                            КАК Приоритет,
	|	НДСПредъявленный.Период                                      КАК Период,
	|	НДСПредъявленный.Регистратор                                 КАК Регистратор,
	|	НДСПредъявленный.Организация                                 КАК Организация,
	|	НДСПредъявленный.Поставщик                                   КАК Покупатель,
	|	НДСПредъявленный.СчетФактура                                 КАК СчетФактура,
	|	НДСПредъявленный.ВидЦенности                                 КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                                   КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО                                                 КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	НДСПредъявленный.Период                                      КАК ДатаСобытия,
	|	ЛОЖЬ                                                         КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК КорректируемыйПериод,
	|	ЛОЖЬ                                                         КАК СторнирующаяЗаписьДопЛиста,
	|	НДСПредъявленный.ИсправленныйСчетФактура                     КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ                                                         КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаСчетаФактурыКомиссионера,
	|	ВЫБОР 
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 20
	|		КОГДА НДСПредъявленный.СуммаБезНДС = 0 И НДСПредъявленный.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА НДСПредъявленный.НДС * 100 / 18
	|		ИНАЧЕ НДСПредъявленный.СуммаБезНДС
	|	КОНЕЦ КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                                         КАК НДС,
	|	НДСПредъявленный.НДСУпр                                      КАК НДСУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)    КАК ХозяйственнаяОперация,
	|	""""                                                         КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1)                                             КАК ДатаДокументаОплаты,
	|	СчетаФактурыДокументы.Ссылка.КодВидаОперацииНаУменьшение     КАК КодВидаОперации,
	|	ИСТИНА                                                       КАК РегламентнаяОперация,
	|	НДСПредъявленный.ВидДеятельностиНДС                          КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.НаправлениеДеятельности                     КАК НаправлениеДеятельности
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПоКСФ КАК НДСПредъявленный
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СчетаФактурыДокументы КАК СчетаФактурыДокументы
	|	ПО
	|		НДСПредъявленный.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|		И НДСПредъявленный.Организация = СчетаФактурыДокументы.Организация
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",      ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",       ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();

КонецПроцедуры

Процедура РассчитатьНДСЗаписиКнигиПродажСторноПоИСФ(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1                                           КАК Приоритет,
	|	ИсправительныеСчетаФактуры.Ссылка           КАК Регистратор,
	|	ИсправительныеСчетаФактуры.ДатаИсправления  КАК Период,
	|	НДСЗаписиКнигиПродаж.Организация            КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель             КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура            КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности            КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС              КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты             КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты         КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия            КАК ДатаСобытия,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)  КАК ЗаписьДополнительногоЛиста,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод <> ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА НДСЗаписиКнигиПродаж.Период
	|	КОНЕЦ) КАК КорректируемыйПериод,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|			ТОГДА ИСТИНА
	|		КОГДА НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, Квартал) < 
	|				НАЧАЛОПЕРИОДА(ИсправительныеСчетаФактуры.ДатаЗаписиКнигиПокупок, Квартал)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)  КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	ИСТИНА                                            КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	-СУММА(НДСЗаписиКнигиПродаж.СуммаБезНДС)          КАК СуммаБезНДС,
	|	-СУММА(НДСЗаписиКнигиПродаж.НДС)                  КАК НДС,
	|	-СУММА(НДСЗаписиКнигиПродаж.НДСУпр)               КАК НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|	ИСТИНА                                            КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажСторноПоИСФ
	|ИЗ
	|	ИсправительныеСчетаФактуры КАК ИсправительныеСчетаФактуры
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|	ПО
	|		НДСЗаписиКнигиПродаж.Организация = ИсправительныеСчетаФактуры.Организация
	|		И НДСЗаписиКнигиПродаж.СчетФактура = ИсправительныеСчетаФактуры.СчетФактура
	|		И НДСЗаписиКнигиПродаж.Период < &НачалоПериода
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК КорректировкаПоСогласованиюСторон
	|	ПО
	|		ИсправительныеСчетаФактуры.СчетФактура = КорректировкаПоСогласованиюСторон.Ссылка
	|		И ИсправительныеСчетаФактуры.Организация = КорректировкаПоСогласованиюСторон.Организация
	|		И КорректировкаПоСогласованиюСторон.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)
	|	
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура <> ИсправительныеСчетаФактуры.ИсправительныйСчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсправительныеСчетаФактуры.Ссылка,
	|	ИсправительныеСчетаФактуры.ДатаИсправления,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(НДСЗаписиКнигиПродаж.НДС) <> 0
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры


Процедура РассчитатьНДСЗаписиКнигиПродажПоАвансуВыданному(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 КАК Приоритет,
	|	ТаблицаНДСЗаписиКнигиПродаж.Период,
	|	ТаблицаНДСЗаписиКнигиПродаж.Регистратор,
	|	ТаблицаНДСЗаписиКнигиПродаж.Организация,
	|	ТаблицаНДСЗаписиКнигиПродаж.Покупатель,
	|	ТаблицаНДСЗаписиКнигиПродаж.СчетФактура,
	|	ТаблицаНДСЗаписиКнигиПродаж.ВидЦенности,
	|	ТаблицаНДСЗаписиКнигиПродаж.СтавкаНДС,
	|	ТаблицаНДСЗаписиКнигиПродаж.ДатаОплаты,
	|	ТаблицаНДСЗаписиКнигиПродаж.ДокументОплаты,
	|	ТаблицаНДСЗаписиКнигиПродаж.Событие,
	|	ТаблицаНДСЗаписиКнигиПродаж.ДатаСобытия,
	|	ТаблицаНДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	ТаблицаНДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	ТаблицаНДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	ТаблицаНДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	ТаблицаНДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	ТаблицаНДСЗаписиКнигиПродаж.Исправление,
	|	ТаблицаНДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	ТаблицаНДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	ТаблицаНДСЗаписиКнигиПродаж.НДС,
	|	ТаблицаНДСЗаписиКнигиПродаж.НДСУпр,
	|	ТаблицаНДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	ТаблицаНДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПродаж.КодВидаОперации,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	ТаблицаНДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажПоАвансамВыданным
	|ИЗ
	|	ВтТаблицаНДСЗаписиКнигиПродаж КАК ТаблицаНДСЗаписиКнигиПродаж";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьНДСЗаписиКнигиПродажСохранение(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ИЗ
	|	НДСЗаписиКнигиПродажПоНДСПредъявленный КАК НДСЗаписиКнигиПродаж
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор
	|ИЗ
	|	НДСЗаписиКнигиПродажСторноПоИСФ КАК НДСЗаписиКнигиПродаж
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор
	|ИЗ
	|	НДСЗаписиКнигиПродажПоАвансамВыданным КАК НДСЗаписиКнигиПродаж
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|;
	|
	|ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажСохранение
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		НДСЗаписиКнигиПродаж.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК Задания
	|	ПО
	|		НДСЗаписиКнигиПродаж.Организация = Задания.Организация
	|		И НДСЗаписиКнигиПродаж.СчетФактура = Задания.СчетФактура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Задания КАК ЗаданияПоРегистратору
	|	ПО
	|		НДСЗаписиКнигиПродаж.Организация = ЗаданияПоРегистратору.Организация
	|		И НДСЗаписиКнигиПродаж.Регистратор = ЗаданияПоРегистратору.СчетФактура 
	|
	|ГДЕ
	|	(НЕ РегистраторыЗапись.Регистратор ЕСТЬ NULL)
	|	И (НДСЗаписиКнигиПродаж.Период < &НачалоПериода
	|			ИЛИ НДСЗаписиКнигиПродаж.Период > &КонецПериода
	|			ИЛИ НЕ НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|			ИЛИ Задания.СчетФактура ЕСТЬ NULL
	|				И ЗаданияПоРегистратору.СчетФактура ЕСТЬ NULL)
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаписатьНДСЗаписиКнигиПродаж(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Приоритет,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО 	 КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПродажПоНДСПредъявленный КАК НДСЗаписиКнигиПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Приоритет,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПродажСторноПоИСФ КАК НДСЗаписиКнигиПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Приоритет,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПродажПоАвансамВыданным КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Приоритет,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПродажОплатыСФ КАК НДСЗаписиКнигиПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Приоритет,
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности
	|ИЗ
	|	НДСЗаписиКнигиПродажСохранение КАК НДСЗаписиКнигиПродаж
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	Период,
	|	Приоритет
	|
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьНДСЗаписиКнигиПродаж(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПродаж КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПродажПоНДСПредъявленный КАК НДСЗаписиКнигиПродажПоНДСПредъявленный
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСЗаписиКнигиПродажПоНДСПредъявленный.Регистратор
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПродажСторноПоИСФ КАК НДСЗаписиКнигиПродажСторноПоИСФ
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСЗаписиКнигиПродажСторноПоИСФ.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПродажПоАвансамВыданным КАК НДСЗаписиКнигиПродажПоАвансамВыданным
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСЗаписиКнигиПродажПоАвансамВыданным.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НДСЗаписиКнигиПродажСохранение КАК НДСЗаписиКнигиПродажСохранение
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = НДСЗаписиКнигиПродажСохранение.Регистратор
	|ГДЕ
	|	НДСЗаписиКнигиПродажПоНДСПредъявленный.Регистратор ЕСТЬ NULL
	|	И НДСЗаписиКнигиПродажПоАвансамВыданным.Регистратор ЕСТЬ NULL
	|	И НДСЗаписиКнигиПродажСторноПоИСФ.Регистратор ЕСТЬ NULL
	|	И НДСЗаписиКнигиПродажСохранение.Регистратор ЕСТЬ NULL
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

Процедура РассчитатьНДСЗаписиКнигиПродажОплатыСФ(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ПодтверждениеОплатыНДСВБюджет.НомерДокументаПеречисленияНалога КАК НомерДокументаОплаты,
	|	ПодтверждениеОплатыНДСВБюджет.ДатаДокументаПеречисленияНалога КАК ДатаДокументаОплаты,
	|	ПодтверждениеОплатыНДСВБюджет.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ВтДанныеОплат
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО ДанныеДокумента.Ссылка = Задания.СчетФактура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодтверждениеОплатыНДСВБюджет КАК ПодтверждениеОплатыНДСВБюджет
	|		ПО ДанныеДокумента.Ссылка = ПодтверждениеОплатыНДСВБюджет.СчетФактура
	|ГДЕ
	|	ДанныеДокумента.ВидАгентскогоДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент), ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги))
	|	И ПодтверждениеОплатыНДСВБюджет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОплатыНДСВБюджет.Оплачено)
	|	И ДанныеДокумента.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.ДатаВходящегоДокумента, ДанныеПервичныхДокументов.Дата),
	|	ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.НомерВходящегоДокумента, ДанныеПервичныхДокументов.Номер),
	|	ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.ДатаВходящегоДокумента, ДанныеПервичныхДокументов.Дата),
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО ДанныеДокумента.Ссылка = Задания.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Документ = ДанныеДокумента.ДокументОснование)
	|			И (ДанныеПервичныхДокументов.Организация = ДанныеДокумента.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|		ПО ДанныеДокумента.ДокументОснование = СписаниеБезналичныхДенежныхСредств.Ссылка
	|ГДЕ
	|	НЕ ДанныеДокумента.ВидАгентскогоДоговора В (ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент), ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.НерезидентЭлектронныеУслуги))
	|	И ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.ДатаВходящегоДокумента, ДанныеПервичныхДокументов.Дата) МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2 КАК Приоритет,
	|	ВтДанныеОплат.Период КАК Период,
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия КАК ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста КАК ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	0 КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации КАК КодВидаОперации,
	|	ИСТИНА КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	0 КАК НДСУпр,
	|	ВтДанныеОплат.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ВтДанныеОплат.ДатаДокументаОплаты КАК ДатаДокументаОплаты
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажОплатыСФ
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДанныеОплат КАК ВтДанныеОплат
	|		ПО НДСЗаписиКнигиПродаж.Регистратор = ВтДанныеОплат.СчетФактура
	|ГДЕ
	|	НЕ НДСЗаписиКнигиПродаж.РегламентнаяОперация";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ

#Область ФормированиеДвиженияКорректировкиСписанияНДСНаРасходы

Процедура СформироватьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета)
	
	ПолучитьТекущиеРегистраторыСписанияНДСНаРасходы(ПараметрыРасчета);
	РассчитатьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета);
	РассчитатьПрочиеРасходыСохранение(ПараметрыРасчета);
	
	ЗаписатьНДСПрочиеРасходы(ПараметрыРасчета);
	ОчиститьНДСПрочиеРасходы(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьТекущиеРегистраторыСписанияНДСНаРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ТекущиеРегистраторыПрочиеРасходы
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТекущиеРегистраторыНДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		ПрочиеРасходы.Регистратор = НДСПредъявленный.Регистратор
	|ГДЕ
	|	ПрочиеРасходы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы)
	|	И НЕ ПрочиеРасходы.Регистратор ССЫЛКА Документ.СписаниеНДСНаРасходы
	|	И НЕ ПрочиеРасходы.РасчетСебестоимости
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьКорректировкуСписанияНДСНаРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1                                        КАК Приоритет,
	|	НДСПредъявленный.Период                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	НДСПредъявленный.Регистратор             КАК Регистратор,
	|	НДСПредъявленный.Организация             КАК Организация,
	|	НДСПредъявленный.Подразделение           КАК Подразделение,
	|	НДСПредъявленный.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СтатьяРасходов          КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов       КАК АналитикаРасходов,
	|	0                                        КАК Сумма,
	|	0                                        КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                     КАК СуммаРегл,
	|	НДСПредъявленный.НДСУпр                  КАК СуммаУпр,
	|	ВЫБОР 
	|		КОГДА НЕ НДСПредъявленный.СтатьяРасходов.ПринятиеКНалоговомуУчету ТОГДА
	|			НДСПредъявленный.НДС 
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК ПостояннаяРазница,
	|	0                                        КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы) КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ПрочиеРасходы
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК НДСПредъявленный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		СписанияНДСНаРасходы
	|	ПО 
	|		НДСПредъявленный.Организация = СписанияНДСНаРасходы.Организация
	|		И НДСПредъявленный.СчетФактура = СписанияНДСНаРасходы.СчетФактура
	|ГДЕ
	|	НДСПредъявленный.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы)
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьПрочиеРасходыСохранение(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор
	|ПОМЕСТИТЬ РегистраторыЗапись
	|ИЗ
	|	ПрочиеРасходы КАК ПрочиеРасходы
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеРасходы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыПрочиеРасходы КАК ПрочиеРасходы
	|;
	|
	|ВЫБРАТЬ
	|	0 КАК Приоритет,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.СуммаУпр,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.СчетКт,
	|	ПрочиеРасходы.СуммаПрочихАктивов,
	|	ПрочиеРасходы.РегистрацияВНалоговомОргане,
	|	ПрочиеРасходы.ДокументДвижения,
	|	ПрочиеРасходы.КорСтатьяРасходов,
	|	ПрочиеРасходы.ДоляСтоимости,
	|	ПрочиеРасходы.КорПодразделение,
	|	ПрочиеРасходы.КорАналитикаРасходов,
	|	ПрочиеРасходы.ГруппаПродукции,
	|	ПрочиеРасходы.КорСтатьяКалькуляции,
	|	ПрочиеРасходы.РасчетСебестоимости,
	|	ПрочиеРасходы.ИдентификаторСтроки
	|	
	|ПОМЕСТИТЬ ПрочиеРасходыСохранение
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистраторыЗапись КАК РегистраторыЗапись
	|	ПО 
	|		ПрочиеРасходы.Регистратор = РегистраторыЗапись.Регистратор
	|	
	|ГДЕ
	|	ПрочиеРасходы.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы)
	|	ИЛИ НЕ ПрочиеРасходы.Организация В (&МассивОрганизаций)
	|	ИЛИ ПрочиеРасходы.Период < &НачалоПериода 
	|	ИЛИ ПрочиеРасходы.Период > &КонецПериода 
	|;
	|
	|/////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистраторыЗапись";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаписатьНДСПрочиеРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрочиеРасходы.Приоритет,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.СуммаУпр,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.СчетКт,
	|	ПрочиеРасходы.СуммаПрочихАктивов,
	|	ПрочиеРасходы.РегистрацияВНалоговомОргане,
	|	ПрочиеРасходы.ДокументДвижения,
	|	ПрочиеРасходы.КорСтатьяРасходов,
	|	ПрочиеРасходы.ДоляСтоимости,
	|	ПрочиеРасходы.КорПодразделение,
	|	ПрочиеРасходы.КорАналитикаРасходов,
	|	ПрочиеРасходы.ГруппаПродукции,
	|	ПрочиеРасходы.КорСтатьяКалькуляции,
	|	ПрочиеРасходы.РасчетСебестоимости,
	|	ПрочиеРасходы.ИдентификаторСтроки
	|ИЗ
	|	ПрочиеРасходыСохранение КАК ПрочиеРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Приоритет,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ВидДвижения,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ПрочиеРасходы.Сумма,
	|	ПрочиеРасходы.СуммаБезНДС,
	|	ПрочиеРасходы.СуммаРегл,
	|	ПрочиеРасходы.СуммаУпр,
	|	ПрочиеРасходы.ПостояннаяРазница,
	|	ПрочиеРасходы.ВременнаяРазница,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ПрочиеРасходы КАК ПрочиеРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	Период,
	|	Приоритет
	|
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		
		Выборка = ВыборкаДокумент.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьНДСПрочиеРасходы(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстаревшиеРегистраторы.Регистратор
	|ИЗ
	|	ТекущиеРегистраторыПрочиеРасходы КАК УстаревшиеРегистраторы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПрочиеРасходы КАК ПрочиеРасходы
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = ПрочиеРасходы.Регистратор
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПрочиеРасходыСохранение КАК ПрочиеРасходыСохранение
	|	ПО 
	|		УстаревшиеРегистраторы.Регистратор = ПрочиеРасходыСохранение.Регистратор
	|ГДЕ
	|	ПрочиеРасходы.Регистратор ЕСТЬ NULL
	|	И ПрочиеРасходыСохранение.Регистратор ЕСТЬ NULL
	|";
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	ВыборкаДокумент = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДокумент.Следующий() Цикл
		
		НаборЗаписей = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокумент.Регистратор);
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

Процедура ВернутьДокументыКОтражениюВУчете(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Документ,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, ДЕНЬ) КАК ДатаОтражения
	|ПОМЕСТИТЬ ДокументыКОтражению
	|ИЗ
	|	НДСПредъявленныйПринятиеКВычету КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Документ,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСПредъявленныйИзменениеВидаДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Документ,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСПредъявленныйИзменениеНаправленияДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Документ,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПодВидДеятельности КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Документ,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСПредъявленныйВосстановлениеПоКСФ КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Документ,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСПредъявленныйПоИСФ КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСПредъявленный.Период КАК Период,
	|	НДСПредъявленный.Регистратор КАК Документ,
	|	НДСПредъявленный.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСПредъявленный.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	ТекущиеРегистраторыНДСПредъявленный КАК НДСПредъявленный
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Период КАК Период,
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСЗаписиКнигиПокупокСторноПоИСФ КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Период КАК Период,
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоАвансамПолученным КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Период КАК Период,
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоАвансамВыданным КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Период КАК Период,
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСЗаписиКнигиПродажСторноПоИСФ КАК НДСЗаписиКнигиПродаж
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Период КАК Период,
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСЗаписиКнигиПродажПоАвансамВыданным КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСЗаписиКнигиПродаж.НДС <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Период КАК Период,
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Период КАК Период,
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     ПараметрыРасчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      ПараметрыРасчета.КонецПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыРасчета.МассивОрганизаций);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(ПараметрыРасчета.МенеджерВременныхТаблиц);
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ВернутьДокументыКОтражению(ПараметрыРасчета.МенеджерВременныхТаблиц);
	//-- НЕ УТКА
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, ДЕНЬ) КАК ДатаОтражения
	|ПОМЕСТИТЬ ТекущиеРегистраторыАвансы
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(НДСЗаписиКнигиПокупок.Регистратор) В (ТИП(Документ.СчетФактураВыданныйАванс), ТИП(Документ.СчетФактураПолученныйАванс))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	ТекущиеРегистраторыНДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(НДСЗаписиКнигиПродаж.Регистратор) = ТИП(Документ.СчетФактураПолученныйАванс)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, ДЕНЬ) КАК ДатаОтражения
	|ПОМЕСТИТЬ ДокументыКОтражениюАвансы
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоАвансамПолученным КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПокупок.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПокупок.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСЗаписиКнигиПокупокПоАвансамВыданным КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Документ,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(НДСЗаписиКнигиПродаж.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	НДСЗаписиКнигиПродажПоАвансамВыданным КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТекущиеРегистраторыАвансы.Документ КАК Документ,
	|	ТекущиеРегистраторыАвансы.Организация КАК Организация,
	|	ТекущиеРегистраторыАвансы.ДатаОтражения КАК ДатаОтражения
	|ПОМЕСТИТЬ ТаблицаВыборочнойРегистрации
	|ИЗ
	|	ТекущиеРегистраторыАвансы КАК ТекущиеРегистраторыАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыКОтражениюАвансы КАК ДокументыКОтражениюАвансы
	|		ПО ТекущиеРегистраторыАвансы.Документ = ДокументыКОтражениюАвансы.Документ
	|			И ТекущиеРегистраторыАвансы.Организация = ДокументыКОтражениюАвансы.Организация
	|			И ТекущиеРегистраторыАвансы.ДатаОтражения = ДокументыКОтражениюАвансы.ДатаОтражения
	|ГДЕ
	|	ДокументыКОтражениюАвансы.Документ ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВыборочнойРегистрации.Документ КАК Документ
	|ПОМЕСТИТЬ ДокументыВыборочнойРегистрации
	|ИЗ
	|	ТаблицаВыборочнойРегистрации КАК ТаблицаВыборочнойРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтражениеДокументовВРеглУчете.Период КАК Период,
	|	ОтражениеДокументовВРеглУчете.Регистратор КАК Документ,
	|	ОтражениеДокументовВРеглУчете.Организация КАК Организация,
	|	ОтражениеДокументовВРеглУчете.ДатаОтражения КАК ДатаОтражения
	|ПОМЕСТИТЬ ТаблицаТекущейРегистрации
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВыборочнойРегистрации КАК ДокументыВыборочнойРегистрации
	|		ПО ОтражениеДокументовВРеглУчете.Регистратор = ДокументыВыборочнойРегистрации.Документ
	|ГДЕ
	|	ОтражениеДокументовВРеглУчете.Активность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТекущиеРегистраторыАвансы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыКОтражениюАвансы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыВыборочнойРегистрации";
	
	Запрос.Выполнить();
	
	Если Не ПараметрыРасчета.МенеджерВременныхТаблиц.Таблицы["ТаблицаВыборочнойРегистрации"].ПолучитьДанные().Пустой() Тогда
		РеглУчетПроведениеСервер.ВернутьДокументыКОтражениюВыборочноПакетно(ПараметрыРасчета.МенеджерВременныхТаблиц);
		//++ НЕ УТКА
		МеждународныйУчетПроведениеСервер.ВернутьДокументыКОтражениюВыборочноПакетно(ПараметрыРасчета.МенеджерВременныхТаблиц);
		//-- НЕ УТКА
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТ

#Область ВспомогательныеПроцедурыДляБлокировкиАлгоритмаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПокупок);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПродаж);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.НДСПредъявленный);
	
	ВходящиеДанные.Вставить(Метаданные.Документы.СчетФактураВыданный);
	ВходящиеДанные.Вставить(Метаданные.Документы.СчетФактураНалоговыйАгент);
	ВходящиеДанные.Вставить(Метаданные.Документы.СчетФактураПолученный);
	ВходящиеДанные.Вставить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент);
	ВходящиеДанные.Вставить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт);
	ВходящиеДанные.Вставить(Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.СчетФактураВыданныйАванс);
	ВходящиеДанные.Вставить(Метаданные.Документы.СчетФактураПолученныйАванс);
	
	ЗакрытиеМесяцаСервер.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(
		ВходящиеДанные,
		НСтр("ru = 'Формирование записей книг покупок и продаж.';
			|en = 'Generate purchase and sales ledger entries.'"));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область РасчетЗачетаАвансовДляНДС

Процедура СформироватьДанныеПоЗачетамАвансов(ПараметрыРасчета)
	
	ПолучитьДанныеАвансов(ПараметрыРасчета);
	РассчитатьЗачетАвансовПолученных(ПараметрыРасчета);
	РассчитатьЗачетАвансовВыданных(ПараметрыРасчета);
	
КонецПроцедуры

Процедура ПолучитьДанныеАвансов(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	СчетФактураВыданныйАванс.ПравилоОтбораАванса КАК ПравилоОтбораАванса,
	|	СчетФактураВыданныйАванс.ДокументОснование КАК ДокументОснование,
	|	СчетФактураВыданныйАванс.Контрагент КАК Контрагент,
	|	СчетФактураВыданныйАванс.КодВидаОперации КАК КодВидаОперации,
	|	СчетФактураВыданныйАванс.НомерПлатежноРасчетногоДокумента КАК НомерПлатежноРасчетногоДокумента,
	|	СчетФактураВыданныйАванс.ДатаПлатежноРасчетногоДокумента КАК ДатаПлатежноРасчетногоДокумента,
	|	ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаОтражения,
	|	СчетФактураВыданныйАванс.Дата КАК Дата,
	|	ЕСТЬNULL(ПодарочныеСертификаты.ПодарочныйСертификат.Владелец.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК ВалютаСертификата
	|ПОМЕСТИТЬ втСчетаФактурыВыданныеАванс
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО СчетФактураВыданныйАванс.Организация = Задания.Организация
	|			И СчетФактураВыданныйАванс.Ссылка = Задания.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Документ = СчетФактураВыданныйАванс.ДокументОснование)
	|			И (ДанныеПервичныхДокументов.Организация = СчетФактураВыданныйАванс.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|		ПО СчетФактураВыданныйАванс.ДокументОснование = ПодарочныеСертификаты.Регистратор
	|			И (ПодарочныеСертификаты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|ГДЕ
	|	СчетФактураВыданныйАванс.Проведен
	|	И НЕ СчетФактураВыданныйАванс.Исправление
	|	И НЕ СчетФактураВыданныйАванс.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	СчетФактураПолученныйАванс.ДокументОснование КАК ДокументОснование,
	|	СчетФактураПолученныйАванс.КодВидаОперации КАК КодВидаОперации,
	|	СчетФактураПолученныйАванс.Контрагент КАК Контрагент,
	|	ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаОснования,
	|	СчетФактураПолученныйАванс.Дата КАК ДатаПолучения
	|ПОМЕСТИТЬ втСчетаФактурыПолученныеАванс
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задания КАК Задания
	|		ПО СчетФактураПолученныйАванс.Организация = Задания.Организация
	|			И СчетФактураПолученныйАванс.Ссылка = Задания.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Документ = СчетФактураПолученныйАванс.ДокументОснование)
	|			И (ДанныеПервичныхДокументов.Организация = СчетФактураПолученныйАванс.Организация)
	|ГДЕ
	|	СчетФактураПолученныйАванс.Проведен
	|	И НЕ СчетФактураПолученныйАванс.Исправление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ДатаОтражения КАК ДатаОтражения,
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период
	|ПОМЕСТИТЬ ПериодыКурсовВалют
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(втСчетаФактурыВыданныеАванс.ДатаОтражения, ДЕНЬ) КАК ДатаОтражения
	|	ИЗ
	|		втСчетаФактурыВыданныеАванс КАК втСчетаФактурыВыданныеАванс
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(втСчетаФактурыПолученныеАванс.ДатаОснования, ДЕНЬ)
	|	ИЗ
	|		втСчетаФактурыПолученныеАванс КАК втСчетаФактурыПолученныеАванс) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВложенныйЗапрос.ДатаОтражения >= КурсыВалют.Период
	|ГДЕ
	|	КурсыВалют.Валюта = &ВалютаУпрУчета
	|	И &ВалютаРеглУчета <> &ВалютаУпрУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ДатаОтражения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаОтражения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ДатаОтражения КАК ДатаОтражения,
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|	ВложенныйЗапрос.Валюта КАК Валюта
	|ПОМЕСТИТЬ ПериодыКурсовСертификатов
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НАЧАЛОПЕРИОДА(втСчетаФактурыВыданныеАванс.ДатаОтражения, ДЕНЬ) КАК ДатаОтражения,
	|		втСчетаФактурыВыданныеАванс.ВалютаСертификата КАК Валюта
	|	ИЗ
	|		втСчетаФактурыВыданныеАванс КАК втСчетаФактурыВыданныеАванс) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ВложенныйЗапрос.ДатаОтражения >= КурсыВалют.Период
	|			И ВложенныйЗапрос.Валюта = КурсыВалют.Валюта
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ДатаОтражения,
	|	ВложенныйЗапрос.Валюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаОтражения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалют.ДатаОтражения КАК ДатаОтражения,
	|	ВЫБОР
	|		КОГДА КурсыВалют.Валюта ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА КурсыВалют.Кратность = 0
	|			ТОГДА КурсыВалют.Курс
	|		ИНАЧЕ КурсыВалют.Курс / КурсыВалют.Кратность
	|	КОНЕЦ КАК Курс,
	|	1 КАК КурсСертификата,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаСертификата
	|ПОМЕСТИТЬ втКурсы
	|ИЗ
	|	ПериодыКурсовВалют КАК ПериодыКурсовВалют
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ПериодыКурсовВалют.Период = КурсыВалют.Период
	|			И (КурсыВалют.Валюта = &ВалютаУпрУчета)
	|ГДЕ
	|	КурсыВалют.Валюта = &ВалютаУпрУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПериодыКурсовСертификатов.ДатаОтражения,
	|	1,
	|	ВЫБОР
	|		КОГДА КурсыВалют.Валюта ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА КурсыВалют.Кратность = 0
	|			ТОГДА КурсыВалют.Курс
	|		ИНАЧЕ КурсыВалют.Курс / КурсыВалют.Кратность
	|	КОНЕЦ,
	|	ПериодыКурсовСертификатов.Валюта
	|ИЗ
	|	ПериодыКурсовСертификатов КАК ПериодыКурсовСертификатов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ПериодыКурсовСертификатов.Период = КурсыВалют.Период
	|			И ПериодыКурсовСертификатов.Валюта = КурсыВалют.Валюта
	|ГДЕ
	|	КурсыВалют.Валюта = &ВалютаУпрУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задания.ДатаОтражения КАК Период,
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	ТаблицаАвансы.Ссылка.Дата КАК СчетФактураДата,
	|	Задания.Контрагент КАК Покупатель,
	|	Задания.ДокументОснование КАК ДокументОплаты,
	|	Задания.ДатаОтражения КАК ДатаОплаты,
	|	Задания.ПравилоОтбораАванса КАК ПравилоОтбораАванса,
	|	Задания.ДатаОтражения КАК ДатаСобытия,
	|	КурсВалютыУпрУчета.Курс КАК Курс,
	|	ТаблицаАвансы.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаАвансы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВключатьВКнигуПродаж,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК НДС,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.Сумма = 0
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|				ТОГДА ТаблицаАвансы.СуммаНДС
	|			ИНАЧЕ ТаблицаАвансы.СуммаНДС / КурсВалютыУпрУчета.Курс
	|		КОНЕЦ) КАК НДСУпр,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.Сумма = 0
	|				ТОГДА 0
	|			КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|				ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|			ИНАЧЕ (ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС) / КурсВалютыУпрУчета.Курс
	|		КОНЕЦ) КАК СуммаБезНДСУпр,
	|	Задания.НомерПлатежноРасчетногоДокумента КАК НомерДокументаОплаты,
	|	Задания.ДатаПлатежноРасчетногоДокумента КАК ДатаДокументаОплаты,
	|	Задания.КодВидаОперации КАК КодВидаОперации,
	|	КурсВалютыУпрУчета.КурсСертификата КАК КурсСертификата
	|ПОМЕСТИТЬ ВтТаблицаАвансыПолученные
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс.Авансы КАК ТаблицаАвансы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаФактурыВыданныеАванс КАК Задания
	|		ПО ТаблицаАвансы.Ссылка = Задания.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсы КАК КурсВалютыУпрУчета
	|		ПО (НАЧАЛОПЕРИОДА(Задания.ДатаОтражения, ДЕНЬ) = КурсВалютыУпрУчета.ДатаОтражения)
	|			И Задания.ВалютаСертификата = КурсВалютыУпрУчета.ВалютаСертификата
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаАвансы.ТипЗапасов В (&ТипыЗапасовСобственные)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Задания.ДатаОтражения,
	|	ТаблицаАвансы.СтавкаНДС,
	|	ТаблицаАвансы.НаправлениеДеятельности,
	|	Задания.СчетФактура,
	|	ТаблицаАвансы.Ссылка.Дата,
	|	Задания.Организация,
	|	Задания.Контрагент,
	|	Задания.ДокументОснование,
	|	Задания.ПравилоОтбораАванса,
	|	Задания.НомерПлатежноРасчетногоДокумента,
	|	Задания.ДатаПлатежноРасчетногоДокумента,
	|	КурсВалютыУпрУчета.Курс,
	|	Задания.КодВидаОперации,
	|	КурсВалютыУпрУчета.КурсСертификата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты,
	|	НаправлениеДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задания.ДатаОснования КАК ДатаОснования,
	|	Задания.Организация КАК Организация,
	|	Задания.СчетФактура КАК СчетФактура,
	|	КурсВалютыУпрУчета.Курс КАК Курс,
	|	ТаблицаАвансы.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаАвансы.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаАвансы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Задания.Контрагент КАК Контрагент,
	|	Задания.ДокументОснование КАК ДокументОплаты,
	|	Задания.ДатаПолучения КАК ДатаПолучения,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.Сумма <> 0
	|				ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ТаблицаАвансы.СуммаНДС) КАК НДС,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаАвансы.Сумма <> 0
	|				ТОГДА ВЫБОР
	|						КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|							ТОГДА ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС
	|						ИНАЧЕ (ТаблицаАвансы.Сумма - ТаблицаАвансы.СуммаНДС) / КурсВалютыУпрУчета.Курс
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДСУпр,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(КурсВалютыУпрУчета.Курс, 0) = 0
	|				ТОГДА ТаблицаАвансы.СуммаНДС
	|			ИНАЧЕ ТаблицаАвансы.СуммаНДС / КурсВалютыУпрУчета.Курс
	|		КОНЕЦ) КАК НДСУпр
	|ПОМЕСТИТЬ ВтТаблицаАвансыВыданные
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Авансы КАК ТаблицаАвансы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаФактурыПолученныеАванс КАК Задания
	|		ПО ТаблицаАвансы.Ссылка = Задания.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсы КАК КурсВалютыУпрУчета
	|		ПО (НАЧАЛОПЕРИОДА(Задания.ДатаОснования, ДЕНЬ) = КурсВалютыУпрУчета.ДатаОтражения)
	|
	|СГРУППИРОВАТЬ ПО
	|	Задания.СчетФактура,
	|	Задания.Организация,
	|	Задания.ДатаОснования,
	|	Задания.ДатаПолучения,
	|	Задания.Контрагент,
	|	КурсВалютыУпрУчета.Курс,
	|	Задания.ДокументОснование,
	|	ТаблицаАвансы.СтавкаНДС,
	|	ТаблицаАвансы.Ссылка.НалогообложениеНДС,
	|	ТаблицаАвансы.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты,
	|	НаправлениеДеятельности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втСчетаФактурыВыданныеАванс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втСчетаФактурыПолученныеАванс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПериодыКурсовВалют
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втКурсы";
	
	ТипыЗапасовСобственные = Новый СписокЗначений;
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Товар);
	ТипыЗапасовСобственные.Добавить(Перечисления.ТипыЗапасов.Услуга);
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", ТипыЗапасовСобственные);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета",  Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура РассчитатьЗачетАвансовПолученных(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АвансыПолученные.Организация КАК Организация,
	|	АвансыПолученные.Покупатель КАК Покупатель,
	|	АвансыПолученные.СчетФактура КАК СчетФактура,
	|	АвансыПолученные.ДокументОплаты КАК ДокументОплаты,
	|	АвансыПолученные.Курс КАК Курс,
	|	АвансыПолученные.КурсСертификата КАК КурсСертификата
	|ПОМЕСТИТЬ ВтТаблицаАвансыПолученные_ДокументыОплаты
	|ИЗ
	|	ВтТаблицаАвансыПолученные КАК АвансыПолученные
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ДокументРегистратор КАК ДокументРегистратор,
	|	РасчетыСКлиентами.РасчетныйДокумент КАК РасчетныйДокумент,
	|	МИНИМУМ(РасчетыСКлиентами.Период) КАК Период
	|ПОМЕСТИТЬ ВтМоментОпределенияНалоговойБазы
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаАвансыПолученные_ДокументыОплаты КАК АвансыПолученные
	|		ПО РасчетыСКлиентами.РасчетныйДокумент = АвансыПолученные.ДокументОплаты
	|ГДЕ
	|	&НоваяАрхитектураВзаиморасчетов
	|	И РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыСКлиентами.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|	И РасчетыСКлиентами.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса)
	|	И РасчетыСКлиентами.ПредоплатаРегл <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.ДокументРегистратор,
	|	РасчетыСКлиентами.РасчетныйДокумент
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор,
	|	РасчетныйДокумент
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.Регистратор                                  КАК Регистратор,
	|	РасчетыСКлиентами.Период                                       КАК Период,
	|	АвансыПолученные.Организация                                   КАК Организация,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АвансыПолученные.Покупатель                                    КАК Поставщик,
	|	АвансыПолученные.ДокументОплаты                                КАК СчетФактура,
	|	ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСКлиентами.ПредоплатаРегл > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные) 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных) 
	|	КОНЕЦ КАК ВидЦенности,
	|	АвансыПолученные.ДокументОплаты КАК ДокументОплаты,
	|	РасчетыСКлиентами.Период                                        КАК ДатаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	РасчетыСКлиентами.Период                                        КАК ДатаСобытия,
	|	СУММА(ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСКлиентами.ПредоплатаРегл >= 0
	|			ТОГДА РасчетыСКлиентами.ПредоплатаРегл
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл <= 0
	|			ТОГДА -РасчетыСКлиентами.ПредоплатаРегл
	|	КОНЕЦ) КАК СуммаЗачета,
	|	СУММА(ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСКлиентами.ПредоплатаУпр >= 0
	|			ТОГДА РасчетыСКлиентами.ПредоплатаУпр
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаУпр <= 0
	|			ТОГДА -РасчетыСКлиентами.ПредоплатаУпр
	|	КОНЕЦ) КАК СуммаЗачетаУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ДанныеПервичныхДокументов.Номер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НомерДокументаОплаты,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ДанныеПервичныхДокументов.Дата
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДатаДокументаОплаты
	|
	|ПОМЕСТИТЬ ВтЗачетАвансовПолученных
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентами
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыПолученные_ДокументыОплаты КАК АвансыПолученные
	|	ПО
	|		РасчетыСКлиентами.РасчетныйДокумент = АвансыПолученные.ДокументОплаты
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = АвансыПолученные.Организация
	|		И РасчетыСКлиентами.Регистратор = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	НЕ &НоваяАрхитектураВзаиморасчетов
	|	И РасчетыСКлиентами.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|	И ((РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И РасчетыСКлиентами.ПредоплатаРегл > 0)
	|		ИЛИ (РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И РасчетыСКлиентами.ПредоплатаРегл < 0))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.Регистратор,
	|	АвансыПолученные.Организация,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	АвансыПолученные.Покупатель,
	|	АвансыПолученные.ДокументОплаты,
	|	РасчетыСКлиентами.Период,
	|	ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСКлиентами.ПредоплатаРегл > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные) 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных) 
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ДанныеПервичныхДокументов.Номер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСКлиентами.ПредоплатаРегл < 0
	|			ТОГДА ДанныеПервичныхДокументов.Дата
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	АвансыПолученные.ДокументОплаты,
	|	РасчетыСКлиентами.Период,
	|	РасчетыСКлиентами.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ДокументРегистратор                                   КАК Регистратор,
	|	РасчетыСКлиентами.Период                                                КАК Период,
	|	АвансыПолученные.Организация                                            КАК Организация,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	АвансыПолученные.Покупатель                                             КАК Поставщик,
	|	АвансыПолученные.ДокументОплаты                                         КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ХозяйственнаяОперация В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|	КОНЕЦ КАК ВидЦенности,
	|	АвансыПолученные.ДокументОплаты,
	|	РасчетыСКлиентами.Период                                                КАК ДатаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)         КАК Событие,
	|	РасчетыСКлиентами.Период                                                КАК ДатаСобытия,
	|	СУММА(РасчетыСКлиентами.ПредоплатаРегл)                                 КАК СуммаЗачета,
	|	СУММА(РасчетыСКлиентами.ПредоплатаУпр)                                  КАК СуммаЗачетаУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССПолученногоАванса) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ХозяйственнаяОперация В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеПервичныхДокументов.Номер
	|	КОНЕЦ                                                                   КАК НомерДокументаОплаты,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ХозяйственнаяОперация В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеПервичныхДокументов.Дата
	|	КОНЕЦ                                                                   КАК ДатаДокументаОплаты
	|
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСКлиентами
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыПолученные_ДокументыОплаты КАК АвансыПолученные
	|	ПО
	|		РасчетыСКлиентами.РасчетныйДокумент = АвансыПолученные.ДокументОплаты
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтМоментОпределенияНалоговойБазы КАК ВтМоментОпределенияНалоговойБазы
	|	ПО
	|		РасчетыСКлиентами.ДокументРегистратор = ВтМоментОпределенияНалоговойБазы.ДокументРегистратор
	|		И РасчетыСКлиентами.РасчетныйДокумент = ВтМоментОпределенияНалоговойБазы.РасчетныйДокумент
	|		И РасчетыСКлиентами.Период = ВтМоментОпределенияНалоговойБазы.Период
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = АвансыПолученные.Организация
	|		И РасчетыСКлиентами.ДокументРегистратор = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	&НоваяАрхитектураВзаиморасчетов
	|	И РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыСКлиентами.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности)
	|	И РасчетыСКлиентами.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносАванса)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.ДокументРегистратор,
	|	АвансыПолученные.Организация,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	АвансыПолученные.Покупатель,
	|	АвансыПолученные.ДокументОплаты,
	|	РасчетыСКлиентами.Период,
	|	ВЫБОР 
	|		КОГДА РасчетыСКлиентами.ХозяйственнаяОперация В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные) 
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных) 
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ХозяйственнаяОперация В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеПервичныхДокументов.Номер
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентами.ХозяйственнаяОперация В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РезервированиеАвансаКлиента))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеПервичныхДокументов.Дата
	|	КОНЕЦ,
	|	АвансыПолученные.ДокументОплаты,
	|	РасчетыСКлиентами.Период,
	|	РасчетыСКлиентами.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор                                                КАК Регистратор,
	|	ДанныеРегистра.Период                                                     КАК Период,
	|	АвансыПолученные.Организация                                              КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)                 КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)                      КАК Поставщик,
	|	АвансыПолученные.ДокументОплаты                                           КАК СчетФактура,
	|	
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ВозвратАвансовПолученных)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|	КОНЕЦ                                                                     КАК ВидЦенности,
	|	АвансыПолученные.ДокументОплаты,
	|	ДанныеРегистра.Период                                                     КАК ДатаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)           КАК Событие,
	|	ДанныеРегистра.Период                                                     КАК ДатаСобытия,
	|	
	|	ВЫРАЗИТЬ(СУММА(ДанныеРегистра.Сумма
	|		* (РеализацияСертификата.СуммаРегл / РеализацияСертификата.Сумма))
	|		КАК ЧИСЛО(31,2))                                                      КАК СуммаЗачета,
	|	СУММА(ВЫБОР КОГДА ЕСТЬNULL(АвансыПолученные.Курс, 0) = 0
	|		ТОГДА ДанныеРегистра.Сумма
	|		ИНАЧЕ ДанныеРегистра.Сумма * АвансыПолученные.КурсСертификата / АвансыПолученные.Курс
	|	КОНЕЦ)                                                                    КАК СуммаЗачетаУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДССПолученногоАванса)   КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ДанныеПервичныхДокументов.Номер
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                     КАК НомерДокументаОплаты,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ДанныеПервичныхДокументов.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                                     КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.ПодарочныеСертификаты КАК ДанныеРегистра
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	ПО
	|		РеализацияСертификата.ПодарочныйСертификат = ДанныеРегистра.ПодарочныйСертификат
	|		И РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыПолученные_ДокументыОплаты КАК АвансыПолученные
	|	ПО
	|		РеализацияСертификата.Регистратор = АвансыПолученные.ДокументОплаты
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ДанныеПервичныхДокументов.Организация = АвансыПолученные.Организация
	|		И ДанныеРегистра.Регистратор = ДанныеПервичныхДокументов.Документ
	|	
	|ГДЕ
	|	ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеРегистра.Сумма > 0
	|	И КОНЕЦПЕРИОДА(ДанныеРегистра.Период, ДЕНЬ) <> КОНЕЦПЕРИОДА(РеализацияСертификата.Период, ДЕНЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор,
	|	АвансыПолученные.Организация,
	|	АвансыПолученные.ДокументОплаты,
	|	ДанныеРегистра.Период,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ДанныеПервичныхДокументов.Номер
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратПодарочныхСертификатов) ТОГДА
	|		ДанныеПервичныхДокументов.Дата
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	АвансыПолученные.ДокументОплаты,
	|	ДанныеРегистра.Период,
	|	ДанныеРегистра.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Регистратор КАК Регистратор,
	|	СУММА(ВЫБОР 
	|		КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСПродажиБезНДС,
	|	СУММА(ВЫБОР 
	|		КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСПродажиСНДС
	|ПОМЕСТИТЬ ВтЗаписиКнигиПродаж
	|ИЗ
	|	ВтЗачетАвансовПолученных КАК ЗачетАвансов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|	ПО
	|		ЗачетАвансов.Регистратор = НДСЗаписиКнигиПродаж.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродаж.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансыПолученные.СчетФактура,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РасчетыСКлиентами.ПредоплатаРегл
	|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -РасчетыСКлиентами.ПредоплатаРегл
	|		КОНЕЦ) КАК Аванс,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РасчетыСКлиентами.ПредоплатаУпр
	|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -РасчетыСКлиентами.ПредоплатаУпр
	|		КОНЕЦ) КАК АвансУпр
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентами
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыПолученные_ДокументыОплаты КАК АвансыПолученные
	|	ПО
	|		РасчетыСКлиентами.РасчетныйДокумент = АвансыПолученные.ДокументОплаты
	|		
	|ГДЕ
	|	НЕ &НоваяАрхитектураВзаиморасчетов
	|	И ((РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И РасчетыСКлиентами.ПредоплатаРегл > 0)
	|		ИЛИ (РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И РасчетыСКлиентами.ПредоплатаРегл < 0))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	АвансыПолученные.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансыПолученные.СчетФактура,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	СУММА(РасчетыСКлиентами.ПредоплатаРегл) КАК Аванс,
	|	СУММА(РасчетыСКлиентами.ПредоплатаУпр) КАК АвансУпр
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоСрокам КАК РасчетыСКлиентами
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыПолученные_ДокументыОплаты КАК АвансыПолученные
	|	ПО
	|		РасчетыСКлиентами.РасчетныйДокумент = АвансыПолученные.ДокументОплаты
	|		
	|ГДЕ
	|	&НоваяАрхитектураВзаиморасчетов
	|	И РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	АвансыПолученные.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансыПолученные.СчетФактура,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|	РеализацияСертификата.СуммаРегл КАК Аванс,
	|	ВЫБОР КОГДА ЕСТЬNULL(АвансыПолученные.Курс, 0) = 0
	|		ТОГДА РеализацияСертификата.Сумма
	|		ИНАЧЕ РеализацияСертификата.Сумма * АвансыПолученные.КурсСертификата / АвансыПолученные.Курс
	|	КОНЕЦ КАК АвансУпр
	|ИЗ
	|	РегистрНакопления.ПодарочныеСертификаты КАК РеализацияСертификата
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыПолученные_ДокументыОплаты КАК АвансыПолученные
	|	ПО
	|		РеализацияСертификата.Регистратор = АвансыПолученные.ДокументОплаты
	|		
	|ГДЕ
	|	РеализацияСертификата.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАвансы.Период                  КАК Период,
	|	ТаблицаАвансы.СчетФактура             КАК СчетФактура,
	|	ТаблицаАвансы.СчетФактураДата         КАК СчетФактураДата,
	|	ТаблицаАвансы.Покупатель              КАК Покупатель,
	|	ТаблицаАвансы.СтавкаНДС               КАК СтавкаНДС,
	|	ТаблицаАвансы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаАвансы.НДС                     КАК НДС,
	|	ТаблицаАвансы.СуммаБезНДС             КАК СуммаБезНДС,
	|	ТаблицаАвансы.НДСУпр                  КАК НДСУпр,
	|	ТаблицаАвансы.СуммаБезНДСУпр          КАК СуммаБезНДСУпр,
	|	ТаблицаАвансы.КодВидаОперации         КАК КодВидаОперации,
	|	ТаблицаАвансы.ПравилоОтбораАванса     КАК ПравилоОтбораАванса,
	|	ТаблицаАвансы.ВключатьВКнигуПродаж    КАК ВключатьВКнигуПродаж
	|ИЗ
	|	ВтТаблицаАвансыПолученные КАК ТаблицаАвансы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗачетАвансов.Период КАК Период,
	|	СчетФактураДокумент.Ссылка КАК Регистратор,
	|	ЗачетАвансов.Организация КАК Организация,
	|	ЗачетАвансов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗачетАвансов.Поставщик КАК Поставщик,
	|	СчетФактураДокумент.Ссылка КАК СчетФактура,
	|	ЗачетАвансов.ВидЦенности КАК ВидЦенности,
	|	ЗачетАвансов.ДокументОплаты КАК ДокументОплаты,
	|	ЗачетАвансов.ДатаОплаты КАК ДатаОплаты,
	|	ЗачетАвансов.Событие  КАК Событие,
	|	ЗачетАвансов.ДатаСобытия КАК ДатаСобытия,
	|	ЗачетАвансов.СуммаЗачета КАК СуммаЗачета,
	|	ЗачетАвансов.СуммаЗачетаУпр КАК СуммаЗачетаУпр,
	|	ЗачетАвансов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗачетАвансов.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ЗачетАвансов.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	ВЫБОР 
	|		КОГДА НДСЗаписиКнигиПродаж.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьНДСПродажи,
	|	НДСЗаписиКнигиПродаж.СуммаНДСПродажиБезНДС КАК СуммаНДСПродажиБезНДС,
	|	НДСЗаписиКнигиПродаж.СуммаНДСПродажиСНДС КАК СуммаНДСПродажиСНДС
	|ИЗ
	|	ВтЗачетАвансовПолученных КАК ЗачетАвансов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|	ПО
	|		ЗачетАвансов.Регистратор = НДСЗаписиКнигиПродаж.Регистратор
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураВыданныйАванс КАК СчетФактураДокумент
	|	ПО
	|		СчетФактураДокумент.ДокументОснование = ЗачетАвансов.СчетФактура
	|		И СчетФактураДокумент.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтЗаписиКнигиПродаж
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтЗачетАвансовПолученных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтМоментОпределенияНалоговойБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаАвансыПолученные_ДокументыОплаты
	|";
	
	Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаАванс = Результат[4].Выгрузить();
	ТаблицаАванс.Индексы.Добавить("СчетФактура");
	ТаблицаАванс.Индексы.Добавить("НаправлениеДеятельности");
	ТаблицаАвансНачислениеНДС = Результат[5].Выгрузить();
	ТаблицаАвансНачислениеНДС.Индексы.Добавить("СчетФактура");
	ТаблицаАвансНачислениеНДС.Индексы.Добавить("НаправлениеДеятельности");
	ТаблицаЗачетАванса = Результат[6].Выгрузить();
	ТаблицаЗачетАванса.Индексы.Добавить("СчетФактура");
	ТаблицаЗачетАванса.Индексы.Добавить("НаправлениеДеятельности");
	
	ТаблицаСФиНД = ТаблицаАвансНачислениеНДС.Скопировать(,"СчетФактура,ВключатьВКнигуПродаж,НаправлениеДеятельности");
	ТаблицаСФиНД.Свернуть("СчетФактура,ВключатьВКнигуПродаж,НаправлениеДеятельности");
	
	ТаблицаАвансИтог = ТаблицаАванс.Скопировать(, "СчетФактура,Аванс,АвансУпр");
	ТаблицаАвансИтог.Свернуть("СчетФактура", "Аванс,АвансУпр");
	
	ТаблицаНДСЗаписиКнигиПокупок = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаНДСЗаписиКнигиПокупок.Колонки.Удалить("Активность");
	
	// Зачитываем авансы по порядку, с отбором по следующим измерениям.
	
	ЭтапыЗачета = Новый Массив;
	ЭтапыЗачета.Добавить(Новый Структура("СчетФактура,ЕстьНДСПродажи,НаправлениеДеятельности"));
	ЭтапыЗачета.Добавить(Новый Структура("СчетФактура,ЕстьНДСПродажи"));
	ЭтапыЗачета.Добавить(Новый Структура("СчетФактура,НаправлениеДеятельности"));
	ЭтапыЗачета.Добавить(Новый Структура("СчетФактура"));
	
	Для Каждого СтруктураОтбораЗачета Из ЭтапыЗачета Цикл
		Для каждого СтрокаСФиНД Из ТаблицаСФиНД Цикл
			
			СтрокаАвансаПоСФ = ТаблицаАвансИтог.Найти(СтрокаСФиНД.СчетФактура);
			Если СтрокаАвансаПоСФ = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураОтбораАванса = Новый Структура("СчетФактура,ВключатьВКнигуПродаж,НаправлениеДеятельности",
				СтрокаСФиНД.СчетФактура, СтрокаСФиНД.ВключатьВКнигуПродаж, СтрокаСФиНД.НаправлениеДеятельности);
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбораЗачета, СтруктураОтбораАванса);
			Если СтруктураОтбораЗачета.Свойство("ЕстьНДСПродажи") Тогда
				СтруктураОтбораЗачета.ЕстьНДСПродажи = СтруктураОтбораАванса.ВключатьВКнигуПродаж;
			КонецЕсли;
			
			СтрокиАвансаНачислениеНДСПоСФ = ТаблицаАвансНачислениеНДС.НайтиСтроки(СтруктураОтбораАванса);
			СтрокиЗачетаАвансаПоСФ = ТаблицаЗачетАванса.НайтиСтроки(СтруктураОтбораЗачета);
			
			ТаблицаЗаписиКнигиПокупокПоСФ = ВыполнитьЗачетАвансаПолученного(СтрокаАвансаПоСФ, СтрокиАвансаНачислениеНДСПоСФ, СтрокиЗачетаАвансаПоСФ);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаЗаписиКнигиПокупокПоСФ, ТаблицаНДСЗаписиКнигиПокупок);
			
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Параметры.Вставить("ТаблицаНДСЗаписиКнигиПокупок", ТаблицаНДСЗаписиКнигиПокупок);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДСЗаписиКнигиПокупок.Период,
	|	ТаблицаНДСЗаписиКнигиПокупок.Регистратор,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерСтроки,
	|	ТаблицаНДСЗаписиКнигиПокупок.Организация,
	|	ТаблицаНДСЗаписиКнигиПокупок.Поставщик,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.ВидЦенности,
	|	ТаблицаНДСЗаписиКнигиПокупок.СтавкаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДокументОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.Событие,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаСобытия,
	|	ТаблицаНДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	ТаблицаНДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ТаблицаНДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДСУпр,
	|	ТаблицаНДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.НаправлениеДеятельности,
	|	ТаблицаНДСЗаписиКнигиПокупок.КодВидаОперации
	|ПОМЕСТИТЬ ВтТаблицаНДСЗаписиКнигиПокупок
	|ИЗ
	|	&ТаблицаНДСЗаписиКнигиПокупок КАК ТаблицаНДСЗаписиКнигиПокупок";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ВыполнитьЗачетАвансаПолученного(СтрокаАвансаПоСФ, СтрокиАвансаНачислениеНДС, СтрокиЗачетаАванса)
	
	ТаблицаЗаписиКнигиПокупок = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаЗаписиКнигиПокупок.Колонки.Удалить("Активность");
	
	Если СтрокиАвансаНачислениеНДС.Количество() = 0 Тогда
		Возврат ТаблицаЗаписиКнигиПокупок
	КонецЕсли;
	
	ДатаПоступленияАванса = СтрокиАвансаНачислениеНДС[0].Период;
	
	АвансМассивСуммаБезНДС = Новый Массив();
	АвансМассивСуммаНДС = Новый Массив();
	АвансМассивСуммаБезНДСУпр = Новый Массив();
	АвансМассивСуммаНДСУпр = Новый Массив();
	
	АвансСуммаБезНДС    = 0;
	АвансСуммаНДС       = 0;
	АвансСуммаСНДС      = 0;
	АвансСуммаБезНДСУпр = 0;
	АвансСуммаНДСУпр    = 0;
	АвансСуммаСНДСУпр   = 0;
	
	Для Каждого СтрокаАванса Из СтрокиАвансаНачислениеНДС Цикл
		АвансМассивСуммаБезНДС.Добавить(СтрокаАванса.СуммаБезНДС);
		АвансМассивСуммаНДС.Добавить(СтрокаАванса.НДС);
		АвансМассивСуммаБезНДСУпр.Добавить(СтрокаАванса.СуммаБезНДСУпр);
		АвансМассивСуммаНДСУпр.Добавить(СтрокаАванса.НДСУпр);
		
		АвансСуммаБезНДС    = АвансСуммаБезНДС + СтрокаАванса.СуммаБезНДС;
		АвансСуммаНДС       = АвансСуммаНДС + СтрокаАванса.НДС;
		АвансСуммаСНДС      = АвансСуммаСНДС + СтрокаАванса.СуммаБезНДС + СтрокаАванса.НДС;
		АвансСуммаБезНДСУпр = АвансСуммаБезНДСУпр + СтрокаАванса.СуммаБезНДСУпр;
		АвансСуммаНДСУпр    = АвансСуммаНДСУпр + СтрокаАванса.НДСУпр;
		АвансСуммаСНДСУпр   = АвансСуммаСНДСУпр + СтрокаАванса.СуммаБезНДСУпр + СтрокаАванса.НДСУпр;
	КонецЦикла; 
	
	НезачтеннаяСуммаАванса = СтрокаАвансаПоСФ.Аванс;
	НезачтеннаяСуммаАвансаУпр = СтрокаАвансаПоСФ.АвансУпр;
	
	Для Каждого ПогашенныйАвансПоСФ Из СтрокиЗачетаАванса Цикл
		
		Если АвансСуммаСНДС = 0 Тогда
			Прервать;
		КонецЕсли;
		
		НезачтеннаяСуммаАванса = НезачтеннаяСуммаАванса - ПогашенныйАвансПоСФ.СуммаЗачета;
		НезачтеннаяСуммаАвансаУпр = НезачтеннаяСуммаАвансаУпр - ПогашенныйАвансПоСФ.СуммаЗачетаУпр;
		
		//Отбор лишних зачетов аванса
		ДатаЗачетаАванса = ПогашенныйАвансПоСФ.Период;
		ДатаНачисления = СтрокиАвансаНачислениеНДС[0].СчетФактураДата;
		Если СтрокиАвансаНачислениеНДС[0].ПравилоОтбораАванса <> Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты 
			И КонецДня(ДатаЗачетаАванса) < НачалоДня(ДатаНачисления) Тогда
			Продолжить;
		ИначеЕсли НачалоДня(ДатаЗачетаАванса) = НачалоДня(ДатаНачисления) Тогда
			// Когда аванс и зачет аванса прошли в один день, то зачет аванса не нужен, в СФ на аванс он уже учтен.
			Продолжить;
		КонецЕсли;
		
		Если ПогашенныйАвансПоСФ.ЕстьНДСПродажи И ПогашенныйАвансПоСФ.СуммаНДСПродажиБезНДС <> 0 Тогда
			// Определим по пропорции сумму зачета, которая относится к реализации с НДС.
			Коэффициенты = Новый Массив;
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СуммаНДСПродажиСНДС);
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СуммаНДСПродажиБезНДС);
			
			РаспределениеСуммыЗачета = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											ПогашенныйАвансПоСФ.СуммаЗачета,
											Коэффициенты);
			РаспределениеСуммыЗачетаУпр = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											ПогашенныйАвансПоСФ.СуммаЗачетаУпр,
											Коэффициенты);
			СуммаЗачета = ?(ПогашенныйАвансПоСФ.СуммаЗачета > 0, РаспределениеСуммыЗачета[0], 0);
			СуммаЗачетаУпр = ?(ПогашенныйАвансПоСФ.СуммаЗачетаУпр > 0, РаспределениеСуммыЗачетаУпр[0], 0);
		Иначе
			СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета;
			СуммаЗачетаУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр;
		КонецЕсли;
		
		СуммаСНДС = Мин(СуммаЗачета, АвансСуммаСНДС);
		ОстатокСуммыАвансаСНДС = (АвансСуммаСНДС - СуммаСНДС);
		Если ОстатокСуммыАвансаСНДС > НезачтеннаяСуммаАванса Тогда
			// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДС = СуммаСНДС + (ОстатокСуммыАвансаСНДС - НезачтеннаяСуммаАванса);
		КонецЕсли;
		
		СуммаСНДСУпр = Мин(СуммаЗачетаУпр, АвансСуммаСНДСУпр);
		ОстатокСуммыАвансаСНДСУпр = (АвансСуммаСНДСУпр - СуммаСНДСУпр);
		Если ОстатокСуммыАвансаСНДСУпр > НезачтеннаяСуммаАвансаУпр Тогда
			// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДСУпр = СуммаСНДСУпр + (ОстатокСуммыАвансаСНДСУпр - НезачтеннаяСуммаАвансаУпр);
		КонецЕсли;
		
		Если СуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаБезНДС    = Окр(АвансСуммаБезНДС * СуммаСНДС / АвансСуммаСНДС, 2);
		СуммаБезНДСУпр = ?(СуммаСНДСУпр = 0, 0, Окр(АвансСуммаБезНДСУпр * СуммаСНДСУпр / АвансСуммаСНДСУпр, 2));
		СуммаНДС       = СуммаСНДС - СуммаБезНДС; 
		СуммаНДСУпр    = ?(СуммаСНДСУпр = 0, 0, СуммаСНДСУпр - СуммаБезНДСУпр);
		
		АвансСуммаБезНДС = АвансСуммаБезНДС - СуммаБезНДС;
		АвансСуммаСНДС   = АвансСуммаСНДС - СуммаСНДС;
		АвансСуммаБезНДСУпр = АвансСуммаБезНДСУпр - СуммаБезНДСУпр;
		АвансСуммаСНДСУпр   = АвансСуммаСНДСУпр - СуммаСНДСУпр;
		
		Если СуммаБезНДС > 0 Тогда
			МассивСуммаБезНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаБезНДС, АвансМассивСуммаБезНДС);
		КонецЕсли;
		
		Если СуммаНДС > 0 Тогда
			МассивСуммаНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДС, АвансМассивСуммаНДС);
		КонецЕсли; 
		
		Если СуммаБезНДСУпр > 0 Тогда
			МассивСуммаБезНДСУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаБезНДСУпр, АвансМассивСуммаБезНДСУпр);
		КонецЕсли;
		
		Если СуммаНДСУпр > 0 Тогда
			МассивСуммаНДСУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДСУпр, АвансМассивСуммаНДСУпр);
		КонецЕсли;
		
		Счетчик = -1;
		
		//Зачет аванса - записи книги покупок
		Для Каждого СтрокаАванса Из СтрокиАвансаНачислениеНДС Цикл
			
			Счетчик = Счетчик + 1;
			
			Результат_СуммаБезНДС = ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0);
			Результат_НДС = ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0);
			
			Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.УправленческийУчетОрганизаций(ПогашенныйАвансПоСФ.Период) Тогда
				Результат_СуммаБезНДСУпр = ?(СуммаБезНДСУпр > 0, МассивСуммаБезНДСУпр[Счетчик], 0);
				Результат_НДСУпр = ?(СуммаНДСУпр > 0, МассивСуммаНДСУпр[Счетчик], 0);
			Иначе
				Результат_СуммаБезНДСУпр = 0;
				Результат_НДСУпр = 0;
			КонецЕсли;
			
			Если Результат_СуммаБезНДС = 0 И Результат_НДСУпр = 0 И Результат_НДС = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаАванса.ВключатьВКнигуПродаж Тогда
				СтрокаРезультата = ТаблицаЗаписиКнигиПокупок.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРезультата, ПогашенныйАвансПоСФ);
				
				СтрокаРезультата.НаправлениеДеятельности = СтрокаАванса.НаправлениеДеятельности;
				
				СтрокаРезультата.СчетФактура = ПогашенныйАвансПоСФ.ДокументОплаты;
				СтрокаРезультата.Поставщик = СтрокаАванса.Покупатель;
				СтрокаРезультата.СтавкаНДС = СтрокаАванса.СтавкаНДС;
				
				СтрокаРезультата.СуммаБезНДС = Результат_СуммаБезНДС;
				СтрокаРезультата.НДС = Результат_НДС;
				СтрокаРезультата.НДСУпр = Результат_НДСУпр;
				
				ВерсияКодовВидовОпераций = УчетНДСКлиентСервер.ВерсияКодовВидовОпераций(СтрокиАвансаНачислениеНДС[0].Период);
				Если ВерсияКодовВидовОпераций = 3 И СтрокаАванса.КодВидаОперации = "26" Тогда
					СтрокаРезультата.КодВидаОперации = "26";
				Иначе
					СтрокаРезультата.КодВидаОперации = "22";
				КонецЕсли;
			КонецЕсли;
			
			// Уменьшим суммы в исходных строках аванса и зачета аванса на зачтенную сумму.
			
			СтрокаАванса.СуммаБезНДС = СтрокаАванса.СуммаБезНДС - Результат_СуммаБезНДС;
			СтрокаАванса.НДС = СтрокаАванса.НДС - Результат_НДС;
			СтрокаАванса.СуммаБезНДСУпр = СтрокаАванса.СуммаБезНДСУпр - Результат_СуммаБезНДСУпр;
			СтрокаАванса.НДСУпр = СтрокаАванса.НДСУпр - Результат_НДСУпр;
			
			ПогашенныйАвансПоСФ.СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета - (Результат_СуммаБезНДС + Результат_НДС);
			ПогашенныйАвансПоСФ.СуммаЗачетаУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр - (Результат_СуммаБезНДСУпр + Результат_НДСУпр);
			
			СтрокаАвансаПоСФ.Аванс = СтрокаАвансаПоСФ.Аванс - (Результат_СуммаБезНДС + Результат_НДС);
			СтрокаАвансаПоСФ.АвансУпр = СтрокаАвансаПоСФ.АвансУпр - (Результат_СуммаБезНДСУпр + Результат_НДСУпр);
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаЗаписиКнигиПокупок;
	
КонецФункции	

Процедура РассчитатьЗачетАвансовВыданных(ПараметрыРасчета)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	СтавкиБезНДС = Новый Массив;
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.БезНДС);
	СтавкиБезНДС.Добавить(Перечисления.СтавкиНДС.НДС0);
	Запрос.УстановитьПараметр("СтавкиБезНДС", СтавкиБезНДС);
	Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов", ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
	|	РасчетыСПоставщиками.Период КАК Период,
	|	АвансыВыданные.Организация КАК Организация,
	|	АвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АвансыВыданные.Контрагент КАК Покупатель,
	|	АвансыВыданные.ДокументОплаты КАК СчетФактура,
	|	ВЫБОР КОГДА АвансыВыданные.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|	КОНЕЦ КАК ВидЦенности,
	|	АвансыВыданные.ДокументОплаты КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	РасчетыСПоставщиками.Период КАК ДатаСобытия,
	|	СУММА(ВЫБОР 
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСПоставщиками.ПредоплатаРегл >= 0
	|			ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщиками.ПредоплатаРегл <= 0
	|			ТОГДА -РасчетыСПоставщиками.ПредоплатаРегл
	|	КОНЕЦ) КАК СуммаЗачета,
	|	СУММА(ВЫБОР 
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСПоставщиками.ПредоплатаУпр >= 0
	|			ТОГДА РасчетыСПоставщиками.ПредоплатаУпр
	|		КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщиками.ПредоплатаУпр <= 0
	|			ТОГДА -РасчетыСПоставщиками.ПредоплатаУпр
	|	КОНЕЦ) КАК СуммаЗачетаУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.ВосстановлениеНДССВыданногоАванса) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА АвансыВыданные.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ТОГДА ""21""
	|		ИНАЧЕ ""43""
	|	КОНЕЦ КАК КодВидаОперации
	|ПОМЕСТИТЬ ВтЗачетАвансов
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыВыданные КАК АвансыВыданные
	|	ПО
	|		РасчетыСПоставщиками.РасчетныйДокумент = АвансыВыданные.ДокументОплаты
	|		И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.НаправлениеДеятельности = АвансыВыданные.НаправлениеДеятельности
	|	
	|ГДЕ
	|	НЕ &НоваяАрхитектураВзаиморасчетов
	|	И ((РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И РасчетыСПоставщиками.ПредоплатаРегл > 0)
	|		ИЛИ (РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И РасчетыСПоставщиками.ПредоплатаРегл < 0))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Регистратор,
	|	РасчетыСПоставщиками.Период,
	|	АвансыВыданные.Организация,
	|	АвансыВыданные.НаправлениеДеятельности,
	|	АвансыВыданные.НалогообложениеНДС,
	|	АвансыВыданные.Контрагент,
	|	АвансыВыданные.ДокументОплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСПоставщиками.ДокументРегистратор КАК Регистратор,
	|	РасчетыСПоставщиками.Период КАК Период,
	|	АвансыВыданные.Организация КАК Организация,
	|	АвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АвансыВыданные.Контрагент КАК Покупатель,
	|	АвансыВыданные.ДокументОплаты КАК СчетФактура,
	|	ВЫБОР КОГДА АвансыВыданные.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|	КОНЕЦ КАК ВидЦенности,
	|	АвансыВыданные.ДокументОплаты КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	РасчетыСПоставщиками.Период КАК ДатаСобытия,
	|	СУММА(РасчетыСПоставщиками.ПредоплатаРегл) КАК СуммаЗачета,
	|	СУММА(РасчетыСПоставщиками.ПредоплатаУпр) КАК СуммаЗачетаУпр,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеНДССВыданногоАванса) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА АвансыВыданные.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ТОГДА ""21""
	|		ИНАЧЕ ""43""
	|	КОНЕЦ КАК КодВидаОперации
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщиками
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыВыданные КАК АвансыВыданные
	|	ПО
	|		РасчетыСПоставщиками.РасчетныйДокумент = АвансыВыданные.ДокументОплаты
	|		И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.НаправлениеДеятельности = АвансыВыданные.НаправлениеДеятельности
	|	
	|ГДЕ
	|	&НоваяАрхитектураВзаиморасчетов
	|	И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыСПоставщиками.ПредоплатаРегл > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.ДокументРегистратор,
	|	РасчетыСПоставщиками.Период,
	|	АвансыВыданные.Организация,
	|	АвансыВыданные.НалогообложениеНДС,
	|	АвансыВыданные.НаправлениеДеятельности,
	|	АвансыВыданные.Контрагент,
	|	АвансыВыданные.ДокументОплаты
	|
	//++ НЕ УТ
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыПоЛизингу.Регистратор КАК Регистратор,
	|	РасчетыПоЛизингу.Период КАК Период,
	|	АвансыВыданные.Организация КАК Организация,
	|	АвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РасчетыПоЛизингу.АналитикаУчетаПоПартнерам.Контрагент КАК Покупатель,
	|	АвансыВыданные.ДокументОплаты КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные) КАК ВидЦенности,
	|	АвансыВыданные.ДокументОплаты КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС) КАК Событие,
	|	РасчетыПоЛизингу.Период КАК ДатаСобытия,
	|	СУММА(РасчетыПоЛизингу.СуммаРегл) КАК СуммаЗачета,
	|	СУММА(РасчетыПоЛизингу.СуммаУпр) КАК СуммаЗачетаУпр,
	|	Значение(Перечисление.ХозяйственныеОперации.ВосстановлениеНДССВыданногоАванса) КАК ХозяйственнаяОперация,
	|	""21"" КАК КодВидаОперации
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам КАК РасчетыПоЛизингу
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыВыданные КАК АвансыВыданные
	|	ПО
	|		РасчетыПоЛизингу.РасчетныйДокумент = АвансыВыданные.ДокументОплаты
	|		И РасчетыПоЛизингу.АналитикаУчетаПоПартнерам.НаправлениеДеятельности = АвансыВыданные.НаправлениеДеятельности
	|
	|ГДЕ
	|	РасчетыПоЛизингу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыПоЛизингу.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриобретениеУслугПоЛизингу)
	|	И РасчетыПоЛизингу.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоЛизингу.Регистратор,
	|	РасчетыПоЛизингу.Период,
	|	АвансыВыданные.НаправлениеДеятельности,
	|	РасчетыПоЛизингу.АналитикаУчетаПоПартнерам.Контрагент,
	|	АвансыВыданные.ДокументОплаты,
	|	АвансыВыданные.НаправлениеДеятельности,
	|	АвансыВыданные.Организация
	//-- НЕ УТ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОснований.Регистратор КАК Регистратор,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ ДанныеОснований.Регистратор ЕСТЬ NULL 
	|				И ДанныеОснований.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ДанныеОснований.СуммаБезНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаДокументаБезНДС,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ ДанныеОснований.Регистратор ЕСТЬ NULL 
	|				И НЕ ДанныеОснований.СтавкаНДС В (&СтавкиБезНДС)
	|			ТОГДА ДанныеОснований.СуммаБезНДСРегл + ДанныеОснований.СуммаНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаДокументаСНДС
	|ПОМЕСТИТЬ ВтДанныеОснований
	|ИЗ
	|	втЗачетАвансов КАК ЗачетАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснований
	|		ПО
	|			ЗачетАвансов.Регистратор = ДанныеОснований.Регистратор
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснований.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансыВыданные.СчетФактура КАК СчетФактура,
	|	АвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыСПоставщиками.ПредоплатаРегл
	|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -РасчетыСПоставщиками.ПредоплатаРегл
	|		КОНЕЦ) КАК Аванс,
	|	СУММА(ВЫБОР 
	|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РасчетыСПоставщиками.ПредоплатаУпр
	|			КОГДА РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -РасчетыСПоставщиками.ПредоплатаУпр
	|		КОНЕЦ) КАК АвансУпр
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыВыданные КАК АвансыВыданные
	|	ПО
	|		РасчетыСПоставщиками.РасчетныйДокумент = АвансыВыданные.ДокументОплаты
	|		И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.НаправлениеДеятельности = АвансыВыданные.НаправлениеДеятельности
	|
	|ГДЕ
	|	НЕ &НоваяАрхитектураВзаиморасчетов
	|	И ((РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И РасчетыСПоставщиками.ПредоплатаРегл > 0)
	|		ИЛИ (РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И РасчетыСПоставщиками.ПредоплатаРегл < 0))
	|СГРУППИРОВАТЬ ПО
	|	АвансыВыданные.НаправлениеДеятельности,
	|	АвансыВыданные.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансыВыданные.СчетФактура,
	|	АвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(РасчетыСПоставщиками.ПредоплатаРегл) КАК Аванс,
	|	СУММА(РасчетыСПоставщиками.ПредоплатаУпр) КАК АвансУпр
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоСрокам КАК РасчетыСПоставщиками
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыВыданные КАК АвансыВыданные
	|	ПО
	|		РасчетыСПоставщиками.РасчетныйДокумент = АвансыВыданные.ДокументОплаты
	|		И РасчетыСПоставщиками.АналитикаУчетаПоПартнерам.НаправлениеДеятельности = АвансыВыданные.НаправлениеДеятельности
	|
	|ГДЕ
	|	&НоваяАрхитектураВзаиморасчетов
	|	И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыСПоставщиками.ПредоплатаРегл > 0
	|СГРУППИРОВАТЬ ПО
	|	АвансыВыданные.НаправлениеДеятельности,
	|	АвансыВыданные.СчетФактура
	|
	//++ НЕ УТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансыВыданные.СчетФактура,
	|	АвансыВыданные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(РасчетыПоЛизингу.СуммаРегл) КАК Аванс,
	|	СУММА(РасчетыПоЛизингу.СуммаУпр) КАК АвансУпр
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам КАК РасчетыПоЛизингу
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаАвансыВыданные КАК АвансыВыданные
	|	ПО
	|		РасчетыПоЛизингу.РасчетныйДокумент = АвансыВыданные.ДокументОплаты
	|		И РасчетыПоЛизингу.АналитикаУчетаПоПартнерам.НаправлениеДеятельности = АвансыВыданные.НаправлениеДеятельности
	|
	|ГДЕ
	|	РасчетыПоЛизингу.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыПоЛизингу.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж)
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансыВыданные.НаправлениеДеятельности,
	|	АвансыВыданные.СчетФактура
	//-- НЕ УТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Авансы.Организация             КАК Организация,
	|	Авансы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Авансы.Контрагент              КАК Поставщик,
	|	Авансы.СчетФактура             КАК СчетФактура,
	|	Авансы.ДатаОснования           КАК ДатаОплаты,
	|	Авансы.ДатаПолучения           КАК ДатаПолучения,
	|	Авансы.СтавкаНДС               КАК СтавкаНДС,
	|	Авансы.СуммаБезНДС             КАК СуммаБезНДС,
	|	Авансы.НДС                     КАК НДС,
	|	Авансы.СуммаБезНДСУпр          КАК СуммаБезНДСУпр,
	|	Авансы.НДСУпр                  КАК НДСУпр
	|ИЗ
	|	ВтТаблицаАвансыВыданные КАК Авансы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураДокумент.Ссылка КАК Регистратор,
	|	ЗачетАвансов.Период КАК Период,
	|	ЗачетАвансов.Организация КАК Организация,
	|	ЗачетАвансов.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗачетАвансов.Покупатель КАК Покупатель,
	|	СчетФактураДокумент.Ссылка КАК СчетФактура,
	|	ЗачетАвансов.ВидЦенности КАК ВидЦенности,
	|	ЗачетАвансов.ДокументОплаты КАК ДокументОплаты,
	|	ЗачетАвансов.Событие КАК Событие,
	|	ЗачетАвансов.ДатаСобытия КАК ДатаСобытия,
	|	ЗачетАвансов.СуммаЗачета КАК СуммаЗачета,
	|	ЗачетАвансов.СуммаЗачетаУпр КАК СуммаЗачетаУпр,
	|	ЗачетАвансов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗачетАвансов.КодВидаОперации КАК КодВидаОперации,
	|	ВЫБОР 
	|		КОГДА ДанныеОснований.Регистратор ЕСТЬ NULL
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьДокументЗачетаАванса,
	|	ЕСТЬNULL(ДанныеОснований.СуммаДокументаБезНДС, 0) КАК СуммаДокументаБезНДС,
	|	ЕСТЬNULL(ДанныеОснований.СуммаДокументаСНДС, 0) КАК СуммаДокументаСНДС
	|ИЗ
	|	втЗачетАвансов КАК ЗачетАвансов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ВтДанныеОснований КАК ДанныеОснований
	|		ПО
	|			ЗачетАвансов.Регистратор = ДанныеОснований.Регистратор
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.СчетФактураПолученныйАванс КАК СчетФактураДокумент
	|		ПО
	|			ЗачетАвансов.ДокументОплаты = СчетФактураДокумент.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтДанныеОснований
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втЗачетАвансов
	|";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаАванс = Результат[2].Выгрузить();
	ТаблицаАванс.Индексы.Добавить("СчетФактура");
	ТаблицаАванс.Индексы.Добавить("НаправлениеДеятельности");
	ТаблицаАвансНачислениеНДС = Результат[3].Выгрузить();
	ТаблицаАвансНачислениеНДС.Индексы.Добавить("СчетФактура");
	ТаблицаАвансНачислениеНДС.Индексы.Добавить("НаправлениеДеятельности");
	ТаблицаЗачетАванса = Результат[4].Выгрузить();
	ТаблицаЗачетАванса.Индексы.Добавить("СчетФактура");
	ТаблицаЗачетАванса.Индексы.Добавить("НаправлениеДеятельности");
	
	ТаблицаСФиНД = ТаблицаАвансНачислениеНДС.Скопировать(,"СчетФактура,НаправлениеДеятельности");
	ТаблицаСФиНД.Свернуть("СчетФактура,НаправлениеДеятельности");
	
	ТаблицаАвансИтог = ТаблицаАванс.Скопировать(, "СчетФактура,Аванс,АвансУпр");
	ТаблицаАвансИтог.Свернуть("СчетФактура", "Аванс,АвансУпр");
	
	ТаблицаНДСЗаписиКнигиПродаж = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаНДСЗаписиКнигиПродаж.Колонки.Удалить("Активность");
	
	Для каждого СтрокаСФиНД Из ТаблицаСФиНД Цикл
		
		СтрокаАвансаПоСФ = ТаблицаАвансИтог.Найти(СтрокаСФиНД.СчетФактура);
		Если СтрокаАвансаПоСФ = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураОтбора = Новый Структура("СчетФактура,НаправлениеДеятельности", СтрокаСФиНД.СчетФактура, СтрокаСФиНД.НаправлениеДеятельности);
		
		СтрокиАвансаНачислениеНДСПоСФ = ТаблицаАвансНачислениеНДС.НайтиСтроки(СтруктураОтбора);
		СтрокиЗачетаАвансаПоСФ = ТаблицаЗачетАванса.НайтиСтроки(СтруктураОтбора);
		
		ТаблицаЗаписиКнигиПродажПоСФ = ВыполнитьЗачетАвансаВыданного(СтрокаАвансаПоСФ, СтрокиАвансаНачислениеНДСПоСФ, СтрокиЗачетаАвансаПоСФ);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаЗаписиКнигиПродажПоСФ, ТаблицаНДСЗаписиКнигиПродаж);
		
	КонецЦикла;
	
	// Второй цикл без учета направления деятельности.

	Для каждого СтрокаСФиНД Из ТаблицаСФиНД Цикл
		
		СтрокаАвансаПоСФ = ТаблицаАвансИтог.Найти(СтрокаСФиНД.СчетФактура);
		Если СтрокаАвансаПоСФ = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураОтбора = Новый Структура("СчетФактура,НаправлениеДеятельности", СтрокаСФиНД.СчетФактура, СтрокаСФиНД.НаправлениеДеятельности);
		СтруктураОтбораСФ = Новый Структура("СчетФактура", СтрокаСФиНД.СчетФактура);
		
		СтрокиАвансаНачислениеНДСПоСФ = ТаблицаАвансНачислениеНДС.НайтиСтроки(СтруктураОтбора);
		СтрокиЗачетаАвансаПоСФ = ТаблицаЗачетАванса.НайтиСтроки(СтруктураОтбораСФ);
		
		ТаблицаЗаписиКнигиПродажПоСФ = ВыполнитьЗачетАвансаВыданного(СтрокаАвансаПоСФ, СтрокиАвансаНачислениеНДСПоСФ, СтрокиЗачетаАвансаПоСФ);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаЗаписиКнигиПродажПоСФ, ТаблицаНДСЗаписиКнигиПродаж);
		
	КонецЦикла;
	
	Запрос.Параметры.Вставить("ТаблицаНДСЗаписиКнигиПродаж", ТаблицаНДСЗаписиКнигиПродаж);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период,
	|	НДСЗаписиКнигиПродаж.Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС,
	|	НДСЗаписиКнигиПродаж.НДСУпр,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации
	|ПОМЕСТИТЬ ВтТаблицаНДСЗаписиКнигиПродаж
	|ИЗ
	|	&ТаблицаНДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаНДСЗаписиКнигиПокупок.Период,
	|	ТаблицаНДСЗаписиКнигиПокупок.Регистратор,
	|	ТаблицаНДСЗаписиКнигиПокупок.Организация,
	|	ТаблицаНДСЗаписиКнигиПокупок.Покупатель КАК Поставщик,
	|	ТаблицаНДСЗаписиКнигиПокупок.СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученныеНалоговыйАгент) КАК ВидЦенности,
	|	ТаблицаНДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчетаНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаСобытия,
	|	ТаблицаНДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	ТаблицаНДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ТаблицаНДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ТаблицаНДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДС,
	|	ТаблицаНДСЗаписиКнигиПокупок.НДСУпр,
	|	ТаблицаНДСЗаписиКнигиПокупок.ХозяйственнаяОперация,
	|	ТаблицаНДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	ТаблицаНДСЗаписиКнигиПокупок.НаправлениеДеятельности,
	|	""43"" КАК КодВидаОперации
	|ПОМЕСТИТЬ ВтТаблицаНДСЗаписиКнигиПокупокМеталлолом
	|ИЗ
	|	ВтТаблицаНДСЗаписиКнигиПродаж КАК ТаблицаНДСЗаписиКнигиПокупок
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ВыполнитьЗачетАвансаВыданного(СтрокаАвансаПоСФ, СтрокиАвансаНачислениеНДС, СтрокиЗачетаАванса)
	
	ТаблицаЗаписиКнигиПродаж = РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаЗаписиКнигиПродаж.Колонки.Удалить("Активность");
	
	Если СтрокиАвансаНачислениеНДС.Количество() = 0 Тогда
		Возврат ТаблицаЗаписиКнигиПродаж
	КонецЕсли;
	
	ДатаПолучения = СтрокиАвансаНачислениеНДС[0].ДатаПолучения;
	
	АвансМассивСуммаБезНДС = Новый Массив();
	АвансМассивСуммаНДС = Новый Массив();
	АвансМассивСуммаБезНДСУпр = Новый Массив();
	АвансМассивСуммаНДСУпр = Новый Массив();
	
	АвансСуммаБезНДС    = 0;
	АвансСуммаНДС       = 0;
	АвансСуммаСНДС      = 0;
	АвансСуммаБезНДСУпр = 0;
	АвансСуммаНДСУпр    = 0;
	АвансСуммаСНДСУпр   = 0;
	
	Для Каждого СтрокаАванса Из СтрокиАвансаНачислениеНДС Цикл
		АвансМассивСуммаБезНДС.Добавить(СтрокаАванса.СуммаБезНДС);
		АвансМассивСуммаНДС.Добавить(СтрокаАванса.НДС);
		АвансМассивСуммаБезНДСУпр.Добавить(СтрокаАванса.СуммаБезНДСУпр);
		АвансМассивСуммаНДСУпр.Добавить(СтрокаАванса.НДСУпр);
		
		АвансСуммаБезНДС = АвансСуммаБезНДС + СтрокаАванса.СуммаБезНДС;
		АвансСуммаНДС = АвансСуммаНДС + СтрокаАванса.НДС;
		АвансСуммаСНДС = АвансСуммаСНДС + СтрокаАванса.СуммаБезНДС + СтрокаАванса.НДС;
		АвансСуммаБезНДСУпр = АвансСуммаБезНДСУпр + СтрокаАванса.СуммаБезНДСУпр;
		АвансСуммаНДСУпр    = АвансСуммаНДСУпр + СтрокаАванса.НДСУпр;
		АвансСуммаСНДСУпр   = АвансСуммаСНДСУпр + СтрокаАванса.СуммаБезНДСУпр + СтрокаАванса.НДСУпр;
	КонецЦикла; 
	
	НезачтеннаяСуммаАванса = СтрокаАвансаПоСФ.Аванс;
	НезачтеннаяСуммаАвансаУпр = СтрокаАвансаПоСФ.АвансУпр;
	
	Для Каждого ПогашенныйАвансПоСФ Из СтрокиЗачетаАванса Цикл
		
		Если АвансСуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НезачтеннаяСуммаАванса = НезачтеннаяСуммаАванса - ПогашенныйАвансПоСФ.СуммаЗачета;
		НезачтеннаяСуммаАвансаУпр = НезачтеннаяСуммаАвансаУпр - ПогашенныйАвансПоСФ.СуммаЗачетаУпр;
		
		Если ПогашенныйАвансПоСФ.ЕстьДокументЗачетаАванса Тогда
			// Определим по пропорции сумму зачета, которая относится к поступлению с НДС.
			Коэффициенты = Новый Массив;
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СуммаДокументаСНДС);
			Коэффициенты.Добавить(ПогашенныйАвансПоСФ.СуммаДокументаБезНДС);
			РаспределениеСуммыЗачета = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											ПогашенныйАвансПоСФ.СуммаЗачета,
											Коэффициенты);
			РаспределениеСуммыЗачетаУпр = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
											ПогашенныйАвансПоСФ.СуммаЗачетаУпр,
											Коэффициенты);
			СуммаЗачета = ?(ПогашенныйАвансПоСФ.СуммаЗачета > 0, РаспределениеСуммыЗачета[0], 0);
			СуммаЗачетаУпр = ?(ПогашенныйАвансПоСФ.СуммаЗачетаУпр > 0, РаспределениеСуммыЗачетаУпр[0], 0);
		Иначе
			СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета;
			СуммаЗачетаУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр;
		КонецЕсли;
		
		Если ПогашенныйАвансПоСФ.Период >= ДатаПолучения Тогда
			СуммаСНДС = Мин(СуммаЗачета, АвансСуммаСНДС);
			СуммаСНДСУпр = Мин(СуммаЗачетаУпр, АвансСуммаСНДСУпр);
			ДатаЗачетаАванса = ПогашенныйАвансПоСФ.Период;
		Иначе
			СуммаСНДС = 0;
			СуммаСНДСУпр = 0;
			ДатаЗачетаАванса = ДатаПолучения;
		КонецЕсли;
		
		ОстатокСуммыАвансаСНДС = (АвансСуммаСНДС - СуммаСНДС);
		Если ОстатокСуммыАвансаСНДС > НезачтеннаяСуммаАванса Тогда
			// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДС = СуммаСНДС + (ОстатокСуммыАвансаСНДС - НезачтеннаяСуммаАванса);
		КонецЕсли;
		ОстатокСуммыАвансаСНДСУпр = (АвансСуммаСНДСУпр - СуммаСНДСУпр);
		Если ОстатокСуммыАвансаСНДСУпр > НезачтеннаяСуммаАвансаУпр Тогда
			// Откорректируем сумму, с которой выполняется восстановление с учетом остатка незачтенного аванса.
			СуммаСНДСУпр = СуммаСНДСУпр + (ОстатокСуммыАвансаСНДСУпр - НезачтеннаяСуммаАвансаУпр);
		КонецЕсли;
		
		Если СуммаСНДС = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаБезНДС = Окр(АвансСуммаБезНДС * СуммаСНДС / АвансСуммаСНДС, 2);
		СуммаНДС = СуммаСНДС - СуммаБезНДС;
		СуммаБезНДСУпр = Окр(АвансСуммаБезНДСУпр * СуммаСНДСУпр / АвансСуммаСНДСУпр, 2);
		СуммаНДСУпр = СуммаСНДСУпр - СуммаБезНДСУпр;
		
		АвансСуммаБезНДС = АвансСуммаБезНДС - СуммаБезНДС;
		АвансСуммаСНДС   = АвансСуммаСНДС - СуммаСНДС;
		АвансСуммаБезНДСУпр = АвансСуммаБезНДСУпр - СуммаБезНДСУпр;
		АвансСуммаСНДСУпр   = АвансСуммаСНДСУпр - СуммаСНДСУпр;

		Если СуммаБезНДС > 0 Тогда
			МассивСуммаБезНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаБезНДС, АвансМассивСуммаБезНДС);
		КонецЕсли;
		
		Если СуммаНДС > 0 Тогда
			МассивСуммаНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДС, АвансМассивСуммаНДС);
		КонецЕсли;
		
		Если СуммаБезНДСУпр > 0 Тогда
			МассивСуммаБезНДСУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаБезНДСУпр, АвансМассивСуммаБезНДСУпр);
		КонецЕсли;
		
		Если СуммаНДСУпр > 0 Тогда
			МассивСуммаНДСУпр = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СуммаНДСУпр, АвансМассивСуммаНДСУпр);
		КонецЕсли;
		
		Счетчик = -1;
		
		//Зачет аванса - записи книги продаж
		Для Каждого СтрокаАванса Из СтрокиАвансаНачислениеНДС Цикл
			
			Счетчик = Счетчик + 1;
			
			Если  ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик], 0) = 0
				И ?(СуммаНДСУпр > 0, МассивСуммаНДСУпр[Счетчик], 0) = 0
				И ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик], 0) = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			СтрокаРезультата = ТаблицаЗаписиКнигиПродаж.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, ПогашенныйАвансПоСФ);
			СтрокаРезультата.Период      = ДатаЗачетаАванса;
			СтрокаРезультата.СчетФактура = ПогашенныйАвансПоСФ.ДокументОплаты;
			СтрокаРезультата.Покупатель  = СтрокаАванса.Поставщик;
			СтрокаРезультата.СтавкаНДС   = СтрокаАванса.СтавкаНДС;
			СтрокаРезультата.ДатаОплаты  = СтрокаАванса.ДатаОплаты;
			СтрокаРезультата.СуммаБезНДС = ?(СуммаБезНДС > 0, МассивСуммаБезНДС[Счетчик],0);
			СтрокаРезультата.НДС         = ?(СуммаНДС > 0, МассивСуммаНДС[Счетчик],0);
			
			Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.УправленческийУчетОрганизаций(СтрокаРезультата.Период) Тогда
				СтрокаРезультата_СуммаБезНДСУпр = ?(СуммаБезНДСУпр > 0, МассивСуммаБезНДСУпр[Счетчик],0);
				СтрокаРезультата.НДСУпр = ?(СуммаНДСУпр > 0, МассивСуммаНДСУпр[Счетчик],0);
			Иначе
				СтрокаРезультата_СуммаБезНДСУпр = 0;
				СтрокаРезультата.НДСУпр = 0;
			КонецЕсли;
			
			// Уменьшим суммы в исходных строках аванса и зачета аванса на зачтенную сумму.

			СтрокаАванса.СуммаБезНДС = СтрокаАванса.СуммаБезНДС - СтрокаРезультата.СуммаБезНДС;
			СтрокаАванса.НДС = СтрокаАванса.НДС - СтрокаРезультата.НДС;
			СтрокаАванса.СуммаБезНДСУпр = СтрокаАванса.СуммаБезНДСУпр - СтрокаРезультата_СуммаБезНДСУпр;
			СтрокаАванса.НДСУпр = СтрокаАванса.НДСУпр - СтрокаРезультата.НДСУпр;

			ПогашенныйАвансПоСФ.СуммаЗачета = ПогашенныйАвансПоСФ.СуммаЗачета - (СтрокаРезультата.СуммаБезНДС + СтрокаРезультата.НДС);
			ПогашенныйАвансПоСФ.СуммаЗачетаУпр = ПогашенныйАвансПоСФ.СуммаЗачетаУпр - (СтрокаРезультата_СуммаБезНДСУпр + СтрокаРезультата.НДСУпр);

			СтрокаАвансаПоСФ.Аванс = СтрокаАвансаПоСФ.Аванс - (СтрокаРезультата.СуммаБезНДС + СтрокаРезультата.НДС);
			СтрокаАвансаПоСФ.АвансУпр = СтрокаАвансаПоСФ.АвансУпр - (СтрокаРезультата_СуммаБезНДСУпр + СтрокаРезультата.НДСУпр);
		КонецЦикла; 
	КонецЦикла;
	
	Возврат ТаблицаЗаписиКнигиПродаж;
	
КонецФункции

#КонецОбласти

#Область ОбщиеПроцедурыСчетовФактур

// Устанавливает параметры запроса проведения по журналу счетов-фактур для счета-фактуры выставленного: 
//  ДатаВыставления и КодВидаОперацииКомиссия
//
// Параметры:
//  Реквизиты - ВыборкаИзРезультатаЗапроса - Выборка реквизитов шапки документа
//   *Необходимые реквизиты: Период, ДатаВыставления/ДатаПолучения, Исправление, ДатаСчетаФактурыОснования, КодВидаОперации
//  Запрос - Запрос - Запрос проведения документа
//
Процедура УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыВыставленного(Реквизиты, Запрос) Экспорт
	
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Макс(Реквизиты.ДатаВыставления,Реквизиты.Период));
	
	Если Не ЗначениеЗаполнено(Реквизиты.ДатаВыставления) Тогда
		ДатаВыставления = Реквизиты.Период;
	ИначеЕсли ВерсияПостановления1137 >= 4 Тогда
		ДатаВыставления = ?(Реквизиты.Исправление, Реквизиты.ДатаСчетаФактурыОснования, Реквизиты.Период);
	Иначе
		ДатаВыставления = Реквизиты.ДатаВыставления;
	КонецЕсли;
		
	КодВидаОперацииКомиссия = 
		УчетНДСПереопределяемый.КодВидаОперацииКомиссия(Реквизиты.КодВидаОперации, ДатаВыставления);
	
	Запрос.УстановитьПараметр("ДатаВыставления",         ДатаВыставления);
	Запрос.УстановитьПараметр("КодВидаОперацииКомиссия", КодВидаОперацииКомиссия);
	
КонецПроцедуры

// Устанавливает параметры запроса проведения по журналу счетов-фактур для счета-фактуры полученного:
//  ДатаПолучения и КодВидаОперацииКомиссия
//
// Параметры:
//  Реквизиты - ВыборкаИзРезультатаЗапроса - Выборка реквизитов шапки документа
//   *Необходимые реквизиты: Период, ДатаПолучения, Исправление, ДатаИсправления, КодВидаОперации
//  Запрос - Запрос - Запрос проведения документа
//
Процедура УстановитьПараметрыЗапросаПроведенияПоЖурналуСчетаФактурыПолученного(Реквизиты, Запрос) Экспорт
	
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Макс(Реквизиты.ДатаПолучения,Реквизиты.Период));
	
	Если Не ЗначениеЗаполнено(Реквизиты.ДатаПолучения) Тогда
		ДатаПолучения = Реквизиты.Период;
	ИначеЕсли ВерсияПостановления1137 >= 4 Тогда
		ДатаПолучения = ?(Реквизиты.Исправление, Реквизиты.ДатаИсправления, Реквизиты.Период);
	Иначе
		ДатаПолучения = Реквизиты.ДатаПолучения;
	КонецЕсли;
		
	КодВидаОперацииКомиссия = 
		УчетНДСПереопределяемый.КодВидаОперацииКомиссия(Реквизиты.КодВидаОперации, ДатаПолучения);
	
	Запрос.УстановитьПараметр("ДатаПолучения",           ДатаПолучения);
	Запрос.УстановитьПараметр("КодВидаОперацииКомиссия", КодВидаОперацииКомиссия);
	
КонецПроцедуры

Процедура ЗаполнитьЗависимыеОтКонтрагентаРеквизитыФормы(Форма, ДатаСведений, ИзменятьИННКПП = Ложь) Экспорт
	
	Форма.КонтрагентЮрЛицо                        = Ложь;
	Форма.НеобходимоЗаполнитьГоловногоКонтрагента = Ложь;
	
	Форма.СписокВыбораКПП.Очистить();
	
	Если ЗначениеЗаполнено(Форма.Объект.Контрагент) И ТипЗнч(Форма.Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		РеквизитыКлиента = Справочники.Контрагенты.РеквизитыКонтрагента(Форма.Объект.Контрагент, ДатаСведений);
		
		Форма.НеобходимоЗаполнитьГоловногоКонтрагента = (РеквизитыКлиента.ОбособленноеПодразделение = Истина
			И Не ЗначениеЗаполнено(РеквизитыКлиента.ГоловнойКонтрагент));
		Форма.КонтрагентЮрЛицо = (РеквизитыКлиента.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо);
		
		Если ИзменятьИННКПП Тогда
			Форма.Объект.ИННКонтрагента = РеквизитыКлиента.ИНН;
			Форма.Объект.КППКонтрагента = РеквизитыКлиента.КПП;
		КонецЕсли;
		
	Иначе
		
		Форма.Объект.ИННКонтрагента = "";
		Форма.Объект.КППКонтрагента = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораКППСчетФактурыВыданные(СписокВыбора, Контрагент, ДатаСведений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КонтрагентыХолдинга
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	НЕ Контрагенты.Ссылка = &Контрагент
	|	И Контрагенты.ГоловнойКонтрагент = &Контрагент
	|	И Контрагенты.ОбособленноеПодразделение
	|	И НЕ Контрагенты.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ИсторияКППКонтрагентов.Период) КАК Период,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЗначенияКПП
	|ИЗ
	|	Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|ГДЕ
	|	ИсторияКППКонтрагентов.Ссылка  В (ВЫБРАТЬ РАЗЛИЧНЫЕ КонтрагентыХолдинга.Ссылка ИЗ КонтрагентыХолдинга КАК КонтрагентыХолдинга)
	|	И ИсторияКППКонтрагентов.Период <= &ДатаСведений
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияКППКонтрагентов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ИсторияКППКонтрагентов.КПП КАК КПП,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ИсторическоеЗначениеКПП
	|ИЗ
	|	ЗначенияКПП КАК ЗначенияКПП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|		ПО ЗначенияКПП.Ссылка = ИсторияКППКонтрагентов.Ссылка
	|			И ЗначенияКПП.Период = ИсторияКППКонтрагентов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИсторическоеЗначениеКПП.КПП, Контрагенты.КПП) КАК КПП,
	|	Контрагенты.Представление КАК ПредставлениеКонтрагента
	|ПОМЕСТИТЬ ДанныеКонтрагентов
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыХолдинга КАК КонтрагентыХолдинга
	|			ПО Контрагенты.Ссылка = КонтрагентыХолдинга.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсторическоеЗначениеКПП КАК ИсторическоеЗначениеКПП
	|			ПО ИсторическоеЗначениеКПП.Ссылка = Контрагенты.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	КПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	СчетФактураВыданный.КППКонтрагента КАК КПП
	|ПОМЕСТИТЬ ДанныеСчетовФактуры
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.Контрагент = &Контрагент
	|	И СчетФактураВыданный.Проведен
	|	И НЕ СчетФактураВыданный.КППКонтрагента = """"
	|	И НЕ СчетФактураВыданный.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураВыданныйАванс.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|ГДЕ
	|	СчетФактураВыданныйАванс.Контрагент = &Контрагент
	|	И СчетФактураВыданныйАванс.Проведен
	|	И НЕ СчетФактураВыданныйАванс.КППКонтрагента = """"
	|	И НЕ СчетФактураВыданныйАванс.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|	
	|ВЫБРАТЬ
	|	СчетФактураКомиссионеру.КПППокупателя
	|ИЗ
	|	Документ.СчетФактураКомиссионеру.Покупатели КАК СчетФактураКомиссионеру
	|ГДЕ
	|	СчетФактураКомиссионеру.Покупатель = &Контрагент
	|	И СчетФактураКомиссионеру.Ссылка.Проведен
	|	И НЕ СчетФактураКомиссионеру.КПППокупателя = """"
	|	И НЕ СчетФактураКомиссионеру.КПППокупателя В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКонтрагентов.КПП КАК КПП,
	|	ДанныеКонтрагентов.ПредставлениеКонтрагента КАК ПредставлениеКонтрагента
	|ИЗ
	|	ДанныеКонтрагентов КАК ДанныеКонтрагентов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеСчетовФактуры.КПП,
	|	""""
	|ИЗ
	|	ДанныеСчетовФактуры КАК ДанныеСчетовФактуры";
	

	СписокВыбора.Очистить();
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		ПредставлениеКПП = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2",
			?(ПустаяСтрока(Выборка.КПП), Нстр("ru = '<не задан>';
												|en = '<not specified>'"), Выборка.КПП),
			?(ПустаяСтрока(Выборка.ПредставлениеКонтрагента), "", "(" + Выборка.ПредставлениеКонтрагента + ")"));
		СписокВыбора.Добавить(Выборка.КПП, ПредставлениеКПП);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораКППСчетФактурыПолученные(СписокВыбора, Контрагент, ДатаСведений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КонтрагентыХолдинга
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	НЕ Контрагенты.Ссылка = &Контрагент
	|	И Контрагенты.ГоловнойКонтрагент = &Контрагент
	|	И Контрагенты.ОбособленноеПодразделение
	|	И НЕ Контрагенты.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	МАКСИМУМ(ИсторияКППКонтрагентов.Период) КАК Период,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ЗначенияКПП
	|ИЗ
	|	Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|ГДЕ
	|	ИсторияКППКонтрагентов.Ссылка  В (ВЫБРАТЬ РАЗЛИЧНЫЕ КонтрагентыХолдинга.Ссылка ИЗ КонтрагентыХолдинга КАК КонтрагентыХолдинга)
	|	И ИсторияКППКонтрагентов.Период <= &ДатаСведений
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсторияКППКонтрагентов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ИсторияКППКонтрагентов.КПП КАК КПП,
	|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ИсторическоеЗначениеКПП
	|ИЗ
	|	ЗначенияКПП КАК ЗначенияКПП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
	|		ПО ЗначенияКПП.Ссылка = ИсторияКППКонтрагентов.Ссылка
	|			И ЗначенияКПП.Период = ИсторияКППКонтрагентов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ 
	|	ЕСТЬNULL(ИсторическоеЗначениеКПП.КПП, Контрагенты.КПП) КАК КПП,
	|	Контрагенты.Представление КАК ПредставлениеКонтрагента
	|ПОМЕСТИТЬ ДанныеКонтрагентов
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыХолдинга КАК КонтрагентыХолдинга
	|			ПО Контрагенты.Ссылка = КонтрагентыХолдинга.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсторическоеЗначениеКПП КАК ИсторическоеЗначениеКПП
	|			ПО ИсторическоеЗначениеКПП.Ссылка = Контрагенты.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	КПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	СчетФактураПолученный.КППКонтрагента КАК КПП
	|ПОМЕСТИТЬ ДанныеСчетовФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Контрагент = &Контрагент
	|	И СчетФактураПолученный.Проведен
	|	И НЕ СчетФактураПолученный.КППКонтрагента = """"
	|	И НЕ СчетФактураПолученный.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураПолученный.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Контрагент = &Контрагент
	|	И СчетФактураПолученный.Проведен
	|	И НЕ СчетФактураПолученный.КППКонтрагента = """"
	|	И НЕ СчетФактураПолученный.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураПолученныйАванс.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|ГДЕ
	|	СчетФактураПолученныйАванс.Контрагент = &Контрагент
	|	И СчетФактураПолученныйАванс.Проведен
	|	И НЕ СчетФактураПолученныйАванс.КППКонтрагента = """"
	|	И НЕ СчетФактураПолученныйАванс.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	ЗаписьКнигиПокупок.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ЗаписьКнигиПокупок
	|ГДЕ
	|	ЗаписьКнигиПокупок.Контрагент = &Контрагент
	|	И ЗаписьКнигиПокупок.Проведен
	|	И НЕ ЗаписьКнигиПокупок.КППКонтрагента = """"
	|	И НЕ ЗаписьКнигиПокупок.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураНаНеподтвержденнуюРеализацию0.КППКонтрагента КАК КПП
	|ИЗ
	|	Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК СчетФактураНаНеподтвержденнуюРеализацию0
	|ГДЕ
	|	СчетФактураНаНеподтвержденнуюРеализацию0.Контрагент = &Контрагент
	|	И СчетФактураНаНеподтвержденнуюРеализацию0.Проведен
	|	И НЕ СчетФактураНаНеподтвержденнуюРеализацию0.КППКонтрагента = """"
	|	И НЕ СчетФактураНаНеподтвержденнуюРеализацию0.КППКонтрагента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ 
	|	СчетФактураКомитента.КППКомитента КАК КПП
	|ИЗ
	|	Документ.СчетФактураКомитента КАК СчетФактураКомитента
	|ГДЕ
	|	СчетФактураКомитента.Комитент = &Контрагент
	|	И СчетФактураКомитента.Проведен
	|	И НЕ СчетФактураКомитента.КППКомитента = """"
	|	И НЕ СчетФактураКомитента.КППКомитента В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|ОБЪЕДИНИТЬ
	|	
	|ВЫБРАТЬ
	|	СчетФактураКомитентаПокупатели.КППСубкомиссионера
	|ИЗ
	|	Документ.СчетФактураКомитента.Покупатели КАК СчетФактураКомитентаПокупатели
	|ГДЕ
	|	СчетФактураКомитентаПокупатели.Покупатель = &Контрагент
	|	И СчетФактураКомитентаПокупатели.Ссылка.Проведен
	|	И НЕ СчетФактураКомитентаПокупатели.КППСубкомиссионера = """"
	|	И НЕ СчетФактураКомитентаПокупатели.КППСубкомиссионера В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|	
	|ВЫБРАТЬ
	|	СчетФактураПолученныйПродавцы.КПППродавца
	|ИЗ
	|	Документ.СчетФактураПолученный.Продавцы КАК СчетФактураПолученныйПродавцы
	|ГДЕ
	|	СчетФактураПолученныйПродавцы.Продавец = &Контрагент
	|	И СчетФактураПолученныйПродавцы.Ссылка.Проведен
	|	И НЕ СчетФактураПолученныйПродавцы.КПППродавца = """"
	|	И НЕ СчетФактураПолученныйПродавцы.КПППродавца В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|	
	|ОБЪЕДИНИТЬ
	|	
	|ВЫБРАТЬ
	|	СчетФактураПолученныйАвансПродавцы.КПППродавца
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс.Продавцы КАК СчетФактураПолученныйАвансПродавцы
	|ГДЕ
	|	СчетФактураПолученныйАвансПродавцы.Продавец = &Контрагент
	|	И СчетФактураПолученныйАвансПродавцы.Ссылка.Проведен
	|	И НЕ СчетФактураПолученныйАвансПродавцы.КПППродавца = """"
	|	И НЕ СчетФактураПолученныйАвансПродавцы.КПППродавца В
	|				(ВЫБРАТЬ
	|					ДанныеКонтрагентов.КПП
	|				ИЗ
	|					ДанныеКонтрагентов КАК ДанныеКонтрагентов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеКонтрагентов.КПП КАК КПП,
	|	ДанныеКонтрагентов.ПредставлениеКонтрагента КАК ПредставлениеКонтрагента
	|ИЗ
	|	ДанныеКонтрагентов КАК ДанныеКонтрагентов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеСчетовФактуры.КПП,
	|	""""
	|ИЗ
	|	ДанныеСчетовФактуры КАК ДанныеСчетовФактуры";
	

	СписокВыбора.Очистить();
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		ПредставлениеКПП = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2",
			?(ПустаяСтрока(Выборка.КПП), Нстр("ru = '<не задан>';
												|en = '<not specified>'"), Выборка.КПП),
			?(ПустаяСтрока(Выборка.ПредставлениеКонтрагента), "", "(" + Выборка.ПредставлениеКонтрагента + ")"));
		СписокВыбора.Добавить(Выборка.КПП, ПредставлениеКПП);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПродавцов(Форма, СписокПродавцов, ДатаСведений, ПолучатьИННКПП = Ложь) Экспорт
	
	Форма.Объект.Продавцы.Очистить();
	Для Каждого Элемент Из СписокПродавцов Цикл
		НоваяСтрока = Форма.Объект.Продавцы.Добавить();
		Если ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент.Значение);
		Иначе
			НоваяСтрока.Продавец = Элемент.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Если ПолучатьИННКПП Тогда
		
		Продавцы = Новый Массив;
		Для каждого Строка Из Форма.Объект.Продавцы Цикл
			Если ЗначениеЗаполнено(Строка.Продавец) Тогда
				Продавцы.Добавить(Строка.Продавец);
			КонецЕсли;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ИсторияКППКонтрагентов.Период) КАК Период,
		|	ИсторияКППКонтрагентов.Ссылка           КАК Ссылка
		|ПОМЕСТИТЬ ЗначенияКПП
		|ИЗ
		|	Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
		|ГДЕ
		|	ИсторияКППКонтрагентов.Ссылка  В (&Контрагенты)
		|	И ИсторияКППКонтрагентов.Период <= &ДатаСведений
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсторияКППКонтрагентов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ИсторияКППКонтрагентов.КПП    КАК КПП,
		|	ИсторияКППКонтрагентов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ИсторическоеЗначениеКПП
		|ИЗ
		|	ЗначенияКПП КАК ЗначенияКПП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ИсторияКПП КАК ИсторияКППКонтрагентов
		|		ПО ЗначенияКПП.Ссылка = ИсторияКППКонтрагентов.Ссылка
		|			И ЗначенияКПП.Период = ИсторияКППКонтрагентов.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Контрагенты.Ссылка                                     КАК Продавец,
		|	ЕСТЬNULL(ИсторическоеЗначениеКПП.КПП, Контрагенты.КПП) КАК КПППродавца,
		|	Контрагенты.ИНН                                        КАК ИННПродавца,
		|	ВЫБОР
		|		КОГДА Контрагенты.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                                 КАК ЮрЛицо
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|	ЛЕВОЕ СОЕДИНЕНИЕ ИсторическоеЗначениеКПП КАК ИсторическоеЗначениеКПП
		|		ПО ИсторическоеЗначениеКПП.Ссылка = Контрагенты.Ссылка
		|ГДЕ
		|	Контрагенты.Ссылка В (&Контрагенты)
		|";
		
		Запрос.УстановитьПараметр("Контрагенты",  Продавцы);
		Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
		
		Форма.Объект.Продавцы.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
	ДокументОбъект = Форма.РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьКодВидаОперации();
	Форма.ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

Процедура НастроитьСовместныйВыборКонтрагентовОрганизаций(Элемент, Контрагент = Null) Экспорт

	Если ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		Если Контрагент = Неопределено Тогда
			Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(Новый ПараметрВыбора("ВыборКонтрагентовИОрганизаций", Истина));
		Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
 	Иначе
		Элемент.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");	
		Элемент.ВыбиратьТип = Ложь;
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#Область ПрочиеОбщиеПроцедурыИФункции

// Проверяет выбранные в табличной части виды ценностей. Они не должны относиться одновременно к отгрузкам и оплатам.
//
// Параметры:
// 	Объект - ДокументОбъект - Объект для проверки
// 	ИмяТабличнойЧасти - Строка - Имя табличной части с видами ценностей
// 	Отказ - Булево - Отказ в проведении документа.
//
Процедура ПроверитьСовместимостьВидовЦенностейТабличнойЧасти(Объект, ИмяТабличнойЧасти, Отказ) Экспорт
	
	Если Объект[ИмяТабличнойЧасти].Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СписокВидовЦенностейОплаты = Новый СписокЗначений;
	СписокВидовЦенностейОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	СписокВидовЦенностейОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	СписокВидовЦенностейОплаты.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	СписокВидовЦенностейОплаты.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	
	// Все виды ценностей в ТЧ должны быть связаны с отгрузкой или с оплатой.
	// Определяем, куда относится вид ценностей в первой строке, и считаем, что все остальные должны относиться туда же.
	ОсновнойВидЦенности = Объект[ИмяТабличнойЧасти][0].ВидЦенности;
	ТолькоОплаты = СписокВидовЦенностейОплаты.НайтиПоЗначению(ОсновнойВидЦенности) <> Неопределено;
	
	ШаблонСообщения = НСтр("ru = 'В строке ""%1"" выбран вид ценностей ""%2"", а в первой строке - ""%3"". 
		|В одном документе нельзя указывать виды ценностей связанные и не связанные с оплатой.';
		|en = 'The ""%2"" asset kind is selected in line ""%1"", and ""%3"" – in the first line. 
		|Cannot specify asset kinds related and not related to payment within one document.'");
	
	
	Для Каждого СтрокаТЧ Из Объект[ИмяТабличнойЧасти] Цикл
		СвязанСОплатой = СписокВидовЦенностейОплаты.НайтиПоЗначению(СтрокаТЧ.ВидЦенности) <> Неопределено;
		Если ТолькоОплаты <> СвязанСОплатой Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СтрокаТЧ.НомерСтроки, СтрокаТЧ.ВидЦенности, ОсновнойВидЦенности);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, СтрокаТЧ.НомерСтроки, "ВидЦенности");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения, 
				Неопределено, 
				Поле, 
				"Объект",
				Отказ);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ИзмененныеПараметры(КлючПараметров, ЗначенияПараметров, КэшированныеЗначенияПараметров) Экспорт
	
	Результат = Новый Структура();
	
	Если ТипЗнч(КэшированныеЗначенияПараметров) <> Тип("Структура") Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПрошлыеЗначенияПараметров = Неопределено;
	Если Не КэшированныеЗначенияПараметров.Свойство(КлючПараметров, ПрошлыеЗначенияПараметров) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ЗначенияПараметров, ПрошлыеЗначенияПараметров) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для каждого КлючИЗначение Из ЗначенияПараметров Цикл
		Если ЗначениеЗаполнено(КлючИЗначение.Значение)
			И КлючИЗначение.Значение <> ПрошлыеЗначенияПараметров[КлючИЗначение.Ключ] Тогда
			Результат.Вставить(КлючИЗначение.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбновитьКэшированныеЗначенияПараметров(КлючПараметров, ЗначенияПараметров, КэшированныеЗначенияПараметров) Экспорт
	
	Если ТипЗнч(КэшированныеЗначенияПараметров) <> Тип("Структура") Тогда
		КэшированныеЗначенияПараметров = Новый Структура();
	КонецЕсли;
	
	Если Не КэшированныеЗначенияПараметров.Свойство(КлючПараметров) Тогда
		КэшированныеЗначенияПараметров.Вставить(КлючПараметров, ЗначенияПараметров);
	Иначе
		ЗаполнитьЗначенияСвойств(КэшированныеЗначенияПараметров[КлючПараметров], ЗначенияПараметров);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает дату начала отражения возвратов корректировочными счетами-фактурами 
//
// Возвращаемое значение:
//   Дата   - по умолчанию 01 января 2019 года
//
Функция ДатаОтраженияВозвратовКорректировочнымиСФ() Экспорт

	Возврат '20190101';

КонецФункции


#КонецОбласти

#Область ПроверкаЗаполненияДокументовПродажи

// Формирует текст запроса для проверки отсутствия подакцизного товара строках табличной части товаров
// Проверка должна выполняться только если:
// - в строке табличной части выбрана номенклатура типа товар;
// - в шапке выбран режим налогообложения ЕНВД.
//
Процедура СформироватьЗапросКорректностьУказанияПодакцизногоТовараВТабличнойЧастиТовары(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|ПО
		|	ИСТИНА
		|ГДЕ
		|	ВременнаяТаблицаТовары.Номенклатура.ПодакцизныйТовар
		|	И ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|;
		|";
	
КонецПроцедуры

// Формирует текст запроса для проверки отсутствия товара c обратным обложением НДС строках табличной части товаров
// Проверяется соответствие признака "Облагается НДС у покупателя" товара налогообложению документа продажи.
//
Процедура СформироватьЗапросКорректностьУказанияТовараСОбратнымОбложениемНДСВТабличнойЧастиТовары(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|ПО
		|	ИСТИНА
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Номенклатура.ОблагаетсяНДСУПокупателя
		|	И ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|;
		|";
	
КонецПроцедуры

// Формирует запрос для проверки указания ставки НДС в зависимости от налогообложения.
//
// Параметры:
// ТекстЗапроса - Строка - текстовая строка, к которой необходимо добавить текст запроса.
//
Процедура СформироватьЗапросКорректностьУказанияСтавкиНДСПродажи(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + СтрЗаменить(
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаДокументПродажи.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|		КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|				ИЛИ ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|		КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|			ТОГДА &СтавкаНДСПоУмолчанию
		|		КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|			ТОГДА ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС
		|	КОНЕЦ КАК СтавкаНДС
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВременнаяТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|					И &ВозвратМногооборотнойТары
		|				ТОГДА ЛОЖЬ
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> &СтавкаНДСПоУмолчанию
		|				ТОГДА ИСТИНА
		|			КОГДА (ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|					ИЛИ ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС
		|					И (ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10),
		|						 ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)))
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20))
		|					И ВременнаяТаблицаТовары.СтавкаНДС НЕ В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20))
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
		|					И ВременнаяТаблицаТовары.СтавкаНДС НЕ В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|", "&СтавкаНДСПоУмолчанию", УчетНДСУП.ТекстВыбораСтавкиНДСПоУмолчанию(, Истина));
	
КонецПроцедуры

// Формирует запрос для проверки корректности суммы НДС в зависимости от ставки НДС
//
// Параметры:
// ТекстЗапроса - Строка - текстовая строка, к которой необходимо добавить текст запроса.
//
Процедура СформироватьЗапросКорректностьСуммыНДС(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВременнаяТаблицаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ВременнаяТаблицаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ВременнаяТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ВременнаяТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ВременнаяТаблицаДокументПродажи.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20 /1.20) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18 /1.18) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10 /1.10) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСуммаНДС,
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20 /1.20) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18 /1.18) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС  ТОГДА
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10 /1.10) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ КАК СуммаНДСРасчетная
	|ИЗ
	|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20 /1.20) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.20) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18 /1.18) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.18) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		КОГДА ВременнаяТаблицаТовары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)) ТОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаДокументПродажи.ЦенаВключаетНДС ТОГДА
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10 /1.10) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ
	|				ВременнаяТаблицаТовары.СуммаНДС <> ВЫРАЗИТЬ((ВременнаяТаблицаТовары.Сумма * 0.10) КАК ЧИСЛО(31,2))
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ
	|;
	|";

КонецПроцедуры

// Выводит сообщения об ошибках указания подакцизного товара в табличной части "Товары" документа продажи.
//
Процедура СообщитьОбОшибкахКорректностьУказанияПодакцизногоТовараВТабличнойЧастиТовары(Знач Выборка,
	                                                                                   Знач ДокументПродажи,
	                                                                                   Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'При режиме налогообложения ""Продажа облагается ЕНВД"" запрещено выбирать подакцизный товар в строке %НомерСтроки% списка ""Товары""';
							|en = 'You cannot select excisable goods in line %НомерСтроки% of the Goods list for the ""Sale is subject to UTII"" taxation treatment'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%",  Выборка.НомерСтроки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументПродажи,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Выводит сообщения об ошибках указания товара с обратным обложением НДС в табличной части "Товары" документа продажи
//
Процедура СообщитьОбОшибкахКорректностьУказанияТовараСОбратнымОбложениемНДСВТабличнойЧастиТовары(Знач Выборка,
	                                                                                             Знач ДокументПродажи,
	                                                                                             Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'Товар в строке %НомерСтроки% списка ""Товары"" не соответствует режиму налогообложения ""Облагается НДС у покупателя""';
							|en = 'Goods in the %НомерСтроки% line of the Goods list does not match the Subject to VAT at customer taxation treatment'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%",  Выборка.НомерСтроки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументПродажи,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
			,
			Отказ);
	КонецЦикла;
	
КонецПроцедуры

// Выводит сообщения об ошибках указания суммы НДС в табличной части документа продажи.
//
// Параметры:
// Выборка         - Выборка из результата запроса
// ОписаниеДокументаПродажи - Структура - описание документа 
// Отказ           - Булево - Флаг отказа от проведения документа.
//
Процедура СообщитьОбОшибкахКорректностьСуммыНДС(Знач Выборка, ОписаниеДокументаПродажи, Отказ) Экспорт
	
	Пока Выборка.Следующий() Цикл
		
		ПроверятьСуммуНДС = Истина;
		
		Если ЗначениеЗаполнено(Выборка.НоменклатураНабора) Тогда
			
			ПараметрыВариантаКомплектацииНоменклатуры = НаборыВызовСервера.ПараметрыВариантаКомплектацииНоменклатуры(
				Выборка.НоменклатураНабора,
				Выборка.ХарактеристикаНабора);
				
				Если ЗначениеЗаполнено(ПараметрыВариантаКомплектацииНоменклатуры) И
					(ПараметрыВариантаКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям
					Или ПараметрыВариантаКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам) Тогда
				
					ПроверятьСуммуНДС = Ложь;
				
				КонецЕсли;
				
		КонецЕсли;
		
		Если ПроверятьСуммуНДС Тогда
		
			ТекстОшибки = НСтр("ru = 'Сумма НДС %СуммаНДС% %Валюта% при ставке ""%СтавкаНДС%"" отличается от расчетной %СуммаНДСРасчетная% %Валюта%';
								|en = 'VAT amount %СуммаНДС% %Валюта% at a rate of ""%СтавкаНДС%"" differs from the calculated one %СуммаНДСРасчетная% %Валюта%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СуммаНДС%",          Выборка.СуммаНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СуммаНДСРасчетная%", Выборка.СуммаНДСРасчетная);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",         Выборка.СтавкаНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Валюта%",            Выборка.Валюта);
			
			АдресОшибки = " " + НСтр("ru = 'в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""';
									|en = 'in line %НомерСтроки% of the ""%ПредставлениеТЧ%"" list'");
			АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
			АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ОписаниеДокументаПродажи.ПредставлениеТЧ);
			
			ПродажиСервер.СообщитьПользователюОбОшибке(
				ТекстОшибки + АдресОшибки,
				ОписаниеДокументаПродажи.ДокументПродажи,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ОписаниеДокументаПродажи.ИмяТЧ, Выборка.НомерСтроки, "СуммаНДС"),
				Отказ);
				
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Выводит сообщения об ошибках указания ставки НДС в табличной части документа продажи.
//
Процедура СообщитьОбОшибкахКорректностьУказанияСтавкиНДСПродажи(Знач Выборка, ОписаниеДокументаПродажи, Отказ) Экспорт

	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
			
			Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Или
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
				
				ТекстОшибки = НСтр("ru = 'В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку 18% или 20%';
									|en = 'Set the rate of 18% or 20% in the ""%НалогообложениеНДС%"" taxation treatment'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
				
			ИначеЕсли Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Или
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
				
				ТекстОшибки = НСтр("ru = 'В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку 18/118 или 20/120';
									|en = 'Set the rate of 18/118 or 20/120 in the ""%НалогообложениеНДС%"" taxation treatment'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
				
			Иначе
				
				ТекстОшибки = НСтр("ru = 'В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку ""%СтавкаНДС%""';
									|en = 'Set the ""%СтавкаНДС%"" rate in the ""%НалогообложениеНДС%"" taxation treatment'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);
				
			КонецЕсли;
			
		Иначе
			
			ТекстОшибки = НСтр("ru = 'В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку ""%СтавкаНДС%""';
								|en = 'Set the ""%СтавкаНДС%"" rate in the ""%НалогообложениеНДС%"" taxation treatment'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);
			
		КонецЕсли;
		
		АдресОшибки = " " + НСтр("ru = 'в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""';
								|en = 'in line %НомерСтроки% of the ""%ПредставлениеТЧ%"" list'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
		АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ОписаниеДокументаПродажи.ПредставлениеТЧ);
		
		ПродажиСервер.СообщитьПользователюОбОшибке(
			ТекстОшибки + АдресОшибки,
			ОписаниеДокументаПродажи.ДокументПродажи,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ОписаниеДокументаПродажи.ИмяТЧ, Выборка.НомерСтроки, "СтавкаНДС"),
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияДокументовЗакупки

// Формирует запрос для проверки указания ставки НДС в зависимости от налогообложения.
//
// Параметры:
// ТекстЗапроса - Строка - текстовая строка, к которой необходимо добавить текст запроса.
//
Процедура СформироватьЗапросКорректностьУказанияСтавкиНДСЗакупки(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + СтрЗаменить(
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС КАК НалогообложениеНДС,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|		КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|				ИЛИ ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|		КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|			ТОГДА &СтавкаНДСПоУмолчанию
		|		КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|			ТОГДА ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС
		|	КОНЕЦ КАК СтавкаНДС
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументЗакупки КАК ВременнаяТаблицаДокументЗакупки
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВременнаяТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|					И &ВозвратМногооборотнойТары
		|				ТОГДА ЛОЖЬ
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> &СтавкаНДСПоУмолчанию
		|				ТОГДА ИСТИНА
		|			КОГДА (ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
		|					ИЛИ ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.СтавкаНДС <> ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС
		|					И (ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10),
		|						 ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)))
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20))
		|					И ВременнаяТаблицаТовары.СтавкаНДС НЕ В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20))
		|				ТОГДА ИСТИНА
		|			КОГДА ВременнаяТаблицаДокументЗакупки.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
		|					И ВременнаяТаблицаТовары.Номенклатура.СтавкаНДС В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
		|					И ВременнаяТаблицаТовары.СтавкаНДС НЕ В (
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118),
		|						ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120))
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|", "&СтавкаНДСПоУмолчанию", УчетНДСУП.ТекстВыбораСтавкиНДСПоУмолчанию(, Истина));
	
КонецПроцедуры

// Выводит сообщения об ошибках указания ставки НДС в табличной части документа закупки.
//
Процедура СообщитьОбОшибкахКорректностьУказанияСтавкиНДСЗакупки(Знач Выборка, ОписаниеДокументаЗакупки, Отказ) Экспорт

	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
			
			Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Или
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
				
				ТекстОшибки = НСтр("ru = 'В режиме налогообложения ""Закупка облагается НДС"" необходимо установить ставку 18% или 20%';
									|en = 'Set the rate of 18% or 20% in the ""Purchase is subject to VAT"" taxation treatment'");
				
			ИначеЕсли Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Или
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120 Тогда
				
				ТекстОшибки = НСтр("ru = 'В режиме налогообложения ""Закупка облагается НДС"" необходимо установить ставку 18/118 или 20/120';
									|en = 'Set the rate of 18/118 or 20/120 in the ""Purchase is subject to VAT"" taxation treatment'");
				
			Иначе
				
				ТекстОшибки = НСтр("ru = 'В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку ""%СтавкаНДС%""';
									|en = 'Set the ""%СтавкаНДС%"" rate in the ""%НалогообложениеНДС%"" taxation treatment'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);
				
			КонецЕсли;
			
		ИначеЕсли Выборка.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
			
			ТекстОшибки = НСтр("ru = 'В режиме налогообложения ""Закупка не облагается НДС"" необходимо установить ставку ""%СтавкаНДС%""';
								|en = 'Set the rate of ""%СтавкаНДС%"" in the ""Purchase is not subject to VAT"" taxation treatment'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);
			
		Иначе
			
			ТекстОшибки = НСтр("ru = 'В режиме налогообложения ""%НалогообложениеНДС%"" необходимо установить ставку ""%СтавкаНДС%""';
								|en = 'Set the ""%СтавкаНДС%"" rate in the ""%НалогообложениеНДС%"" taxation treatment'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НалогообложениеНДС%", Выборка.НалогообложениеНДС);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтавкаНДС%",          Выборка.СтавкаНДС);
			
		КонецЕсли;
		
		АдресОшибки = " " + НСтр("ru = 'в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""';
								|en = 'in line %НомерСтроки% of the ""%ПредставлениеТЧ%"" list'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%",     Выборка.НомерСтроки);
		АдресОшибки = СтрЗаменить(АдресОшибки, "%ПредставлениеТЧ%", ОписаниеДокументаЗакупки.ПредставлениеТЧ);
		
		ПродажиСервер.СообщитьПользователюОбОшибке(
			ТекстОшибки + АдресОшибки,
			ОписаниеДокументаЗакупки.ДокументЗакупки,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ОписаниеДокументаЗакупки.ИмяТЧ, Выборка.НомерСтроки, "СтавкаНДС"),
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
