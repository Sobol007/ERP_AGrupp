	
////////////////////////////////////////////////////////////////////////////////
// Процедуры, выполняемые в начале работы системы

Процедура ПередНачаломРаботыСистемы() Экспорт
	Если РЭЙ_СлужебныйСервер.ДоступнаПодсистемаВЭД() Тогда
		УстановитьПараметрыФункциональныхОпцийИнтерфейса(Новый Структура("РЭЙ_ДоступностьПодсистемыВЭД", Истина));
	Иначе
		УстановитьПараметрыФункциональныхОпцийИнтерфейса(Новый Структура("РЭЙ_ДоступностьПодсистемыВЭД", Ложь));
	КонецЕсли;
КонецПроцедуры

Процедура ИнициализацияПодсистемыВЭД() Экспорт
	//Обновление подсистемы ВЭД
	Если РЭЙ_СлужебныйСервер.ЕстьПравоОбновленияПодсистемыВЭД() Тогда
		Если РЭЙ_СлужебныйСервер.НеобходимостьОбновленияПодсистемыВЭД() Тогда
			ОткрытьФорму("Обработка.РЭЙ_ОбновлениеПодсистемыВЭД.Форма.Форма");
		КонецЕсли;
	КонецЕсли;
	
	//Действия при начале работы
	Если РЭЙ_СлужебныйСервер.ДоступнаРольВалютныйКонтролер() Тогда
		РЭЙ_ЗадачиСервер.ДействияПриНачалеРаботы();
		
		ПодключитьОбработчикОжидания("РЭЙ_ОбработчикОжиданияОповещениеОЗадачах", 1800, Ложь);
		
		РЭЙ_СлужебныйСервер.ОтобразитьЗадачиВЭДнаРабочемСтоле();
		ОбновитьИнтерфейс();
	КонецЕсли;
КонецПроцедуры
	

////////////////////////////////////////////////////////////////////////////////
// Прочее

Процедура ПредупреждениеСправкаОснованиеЯвляетсяКорректировочной() Экспорт
	ТекстПредупреждения = 
	"Корректировочные документы могут создаваться только на основе оригинальных документов. 
	|Выберите, пожалуйста, в качестве основания документ первичного заполнения.";
	
	ПоказатьПредупреждение(, ТекстПредупреждения);
КонецПроцедуры

Процедура ВыполнитьЗадачу(ТекущиеДанные) Экспорт
	Если ТекущиеДанные.СтатусСправкиОВалютномКонтроле = ПредопределенноеЗначение("Перечисление.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаСоздана") Или
		ТекущиеДанные.СтатусСправкиОВалютномКонтроле = ПредопределенноеЗначение("Перечисление.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаРаспечатана") Или	
		ТекущиеДанные.СтатусСправкиОВалютномКонтроле = ПредопределенноеЗначение("Перечисление.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаСозданаДокументПерезаписан") Или	
		ТекущиеДанные.СтатусСправкиОВалютномКонтроле = ПредопределенноеЗначение("Перечисление.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаРаспечатанаДокументПерезаписан") Тогда	
		
		ПоказатьПредупреждение(, "Справка уже создана.");
	Иначе	
		Если ЗначениеЗаполнено(ТекущиеДанные.ОбъектЗадачи) Тогда
			ПараметрыОткрытия = Новый Структура("Основание", ТекущиеДанные.ОбъектЗадачи);
			ТипОбъектаЗадачи = ТипЗнч(ТекущиеДанные.ОбъектЗадачи);
			
			Если ТекущиеДанные.ВидЗадачи = ПредопределенноеЗначение("Справочник.РЭЙ_ВидыЗадачПользователей.КонтрактВЭДПодтверждениеАвтопролонгации") Тогда
				ВыполнитьЗадачу_КонтрактВЭДПодтверждениеАвтопролонгации(ТекущиеДанные.Ссылка, ТекущиеДанные.ОбъектЗадачи);
				
			ИначеЕсли ТипОбъектаЗадачи = Тип("СправочникСсылка.РЭЙ_КонтрактыВЭД") Тогда
				ОткрытьФорму("Документ.РЭЙ_ПаспортСделки.Форма.ФормаДокумента", ПараметрыОткрытия);
				
			ИначеЕсли ТипОбъектаЗадачи = Тип("ДокументСсылка.РЭЙ_ПаспортСделки") Тогда
				ОткрытьФорму("Документ.РЭЙ_ЗаявлениеВБанкПС.Форма.ФормаДокумента", Новый Структура("Основание", ТекущиеДанные.Ссылка));
				
			ИначеЕсли ТипОбъектаЗадачи = Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств") Или
				ТипОбъектаЗадачи = Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств") Тогда
				//Документ является основанием для СВО
				ОткрытьФорму("Документ.РЭЙ_СправкаОВалютныхОперациях.Форма.ФормаДокумента", ПараметрыОткрытия);
				
			ИначеЕсли ТипОбъектаЗадачи = Тип("ДокументСсылка.АктВыполненныхРабот") 
				Или ТипОбъектаЗадачи = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
				Или ТипОбъектаЗадачи = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") 
				Или ТипОбъектаЗадачи = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") 
				Или ТипОбъектаЗадачи = Тип("ДокументСсылка.ПриобретениеУслугПрочихАктивов") 
				Или ТипОбъектаЗадачи = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") 
				Тогда
				//Документ является основанием для СПД
				ОткрытьФорму("Документ.РЭЙ_СправкаОПодтверждающихДокументах.Форма.ФормаДокумента", ПараметрыОткрытия);
				
			ИначеЕсли ТипОбъектаЗадачи = Тип("ДокументСсылка.РЭЙ_СправкаОВалютныхОперациях") Тогда
				// Корректировочная СВО
				ОткрытьФорму("Документ.РЭЙ_СправкаОВалютныхОперациях.Форма.ФормаДокумента", ПараметрыОткрытия);
				
			ИначеЕсли ТипОбъектаЗадачи = Тип("ДокументСсылка.РЭЙ_СправкаОПодтверждающихДокументах") Тогда
				// Корректировочная СПД
				ОткрытьФорму("Документ.РЭЙ_СправкаОПодтверждающихДокументах.Форма.ФормаДокумента", ПараметрыОткрытия);
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьЗадачу_КонтрактВЭДПодтверждениеАвтопролонгации(Задача, КонтрактВЭД)
	СтараяДатаОкончания = РЭЙ_СлужебныйСервер.ПолучитьЗначениеРеквизита(КонтрактВЭД, "КонтрактДатаОкончания");
	НоваяДатаОкончания = ДобавитьМесяц(СтараяДатаОкончания, 12);
	
	ТекстВопроса = СтрШаблон("Дата окончания контракта %1 будет изменена на %2. Продолжить?", Формат(СтараяДатаОкончания, "ДФ=dd.MM.yyyy"), Формат(НоваяДатаОкончания, "ДФ=dd.MM.yyyy"));
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьЗадачу_КонтрактВЭДПодтверждениеАвтопролонгации_ОтветНаВопрос", ЭтотОбъект, Новый Структура("Задача, НоваяДатаОкончания", Задача, НоваяДатаОкончания));
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

Процедура ВыполнитьЗадачу_КонтрактВЭДПодтверждениеАвтопролонгации_ОтветНаВопрос(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		РЭЙ_ЗадачиСервер.ВыполнитьЗадачу_КонтрактВЭДПодтверждениеАвтопролонгации(ДополнительныеПараметры.Задача, ДополнительныеПараметры.НоваяДатаОкончания);
		Оповестить("РЭЙ_ОбновитьФормуЗадач");
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьЭлементОтбораНаФормуСписка(ФормаСписка, ИмяПоляКомпановки, ВидСравнения, ПравоеЗначение) Экспорт
	
	ЭлементыОтбора	= ФормаСписка.Список.Отбор.Элементы;
			
	ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(ИмяПоляКомпановки);
	ЭлементОтбора.ВидСравнения 		= ВидСравнения;
	ЭлементОтбора.ПравоеЗначение	= ПравоеЗначение;
    ЭлементОтбора.Использование		= Истина;
	
КонецПроцедуры

Функция ВыполнитьКомандуПечати(ОписаниеКоманды) Экспорт
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ОписаниеКоманды.МенеджерПечати, ОписаниеКоманды.Идентификатор, ОписаниеКоманды.ОбъектыПечати,
		ОписаниеКоманды.Форма);
		
    Оповестить("РЭЙ_ОбновитьФормуЗадач");	
КонецФункции

