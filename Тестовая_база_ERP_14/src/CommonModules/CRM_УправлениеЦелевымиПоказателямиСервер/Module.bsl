
#Область ПрограммныйИнтерфейс

// Получить таблицу показателя
//
// Параметры:
//  Показатель	 - СправочникСсылка.CRM_ШаблоныКлючевыхПоказателей - Показатель.
//  ДатаРасчета	 - Дата - Дата расчета. 
//  Менеджер	 - СправочникСсылка.Пользователи - Ссылка на менеджера. 
//  ЗаДень		 - Булево - Получить таблицу с показателями за день. 
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица с показателями.
//
Функция ПолучитьТаблицуПоказателя(Показатель, ДатаРасчета, Менеджер, ЗаДень = Ложь) Экспорт
	
	ПустаяТаблицаПоказателя = Новый ТаблицаЗначений;
	ПустаяТаблицаПоказателя.Колонки.Добавить("Менеджер");
	ПустаяТаблицаПоказателя.Колонки.Добавить("ЗначениеПоказателя");
	ПустаяТаблицаПоказателя.Колонки.Добавить("ЗначениеПоказателяМаксимум");
	ПустаяТаблицаПоказателя.Колонки.Добавить("Количество");
	ПустаяТаблицаПоказателя.Колонки.Добавить("Сумма");
	Стр = ПустаяТаблицаПоказателя.Добавить();
	Стр.ЗначениеПоказателя = 0;
	Стр.ЗначениеПоказателяМаксимум = 0;
	Стр.Количество = 0;
	Стр.Сумма = 0;
	Если Показатель.КонтролируемыйПоказатель = "" Тогда
		Возврат ПустаяТаблицаПоказателя;
	КонецЕсли;	
	
	СКД = Показатель.ХранилищеСхемыКомпоновкиДанных.Получить();
	НастройкиСКД = Показатель.ХранилищеНастроекКомпоновкиДанных.Получить();
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиСКД);
	
	НастройкиКомпоновщика = КомпоновщикНастроек.Настройки;
	ПараметрыНастройки = НастройкиКомпоновщика.ПараметрыДанных;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		Если Показатель.ПериодАнализа = "Месяц" Тогда
			ЗначениеПараметра.Значение = НачалоМесяца(ДатаРасчета);
		ИначеЕсли Показатель.ПериодАнализа = "День" Тогда	
			ЗначениеПараметра.Значение = НачалоДня(ДатаРасчета);
		ИначеЕсли Показатель.ПериодАнализа = "Квартал" Тогда	
			ЗначениеПараметра.Значение = НачалоКвартала(ДатаРасчета);
		ИначеЕсли Показатель.ПериодАнализа = "Год" Тогда	
			ЗначениеПараметра.Значение = НачалоГода(ДатаРасчета);	
		КонецЕсли;
	КонецЕсли;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		Если ЗаДень Тогда
			ЗначениеПараметра.Значение = КонецДня(ДатаРасчета);
		Иначе
			Если Показатель.ПериодАнализа = "Месяц" Тогда
				ЗначениеПараметра.Значение = КонецМесяца(ДатаРасчета);
			ИначеЕсли Показатель.ПериодАнализа = "Квартал" Тогда
				ЗначениеПараметра.Значение = КонецКвартала(ДатаРасчета);
			ИначеЕсли Показатель.ПериодАнализа = "Год" Тогда
				ЗначениеПараметра.Значение = КонецГода(ДатаРасчета);
			ИначеЕсли Показатель.ПериодАнализа = "День" Тогда	
				ЗначениеПараметра.Значение = КонецДня(ДатаРасчета);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТекущаяДата"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		ЗначениеПараметра.Значение = ДатаРасчета;
	КонецЕсли;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Показатель"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		ЗначениеПараметра.Значение = Показатель;
	КонецЕсли;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Менеджеры"));
	Если ЗначениеПараметра <> Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		ЗначениеПараметра.Значение = ?(ЗначениеЗаполнено(Менеджер), Менеджер, Справочники.Пользователи.ПустаяСсылка());
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СКД, НастройкиКомпоновщика,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
	Попытка
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат ПустаяТаблицаПоказателя;
	КонецПопытки;
	
	Если ТаблицаРезультат.Колонки.Количество()<4 Тогда
		Возврат ПустаяТаблицаПоказателя;
	КонецЕсли;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

// Процедура - Построить диаграмму показателя
//
// Параметры:
//  Показатель	 	 - СправочникСсылка.CRM_ШаблоныКлючевыхПоказателей - Показатель.
//  Диаграмма		 - Диаграмма  - Диаграмма.
//  ТаблицаДанных	 - ТаблицаЗначений - Таблица с показателям
//
Процедура ПостроитьДиаграммуПоказателя(Показатель, Диаграмма, ТаблицаДанных) Экспорт
	
	ДатаРасчета = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	Менеджер = Пользователи.ТекущийПользователь();
	
	Если ТаблицаДанных = Неопределено Тогда
		ТаблицаДанных = ПолучитьТаблицуПоказателя(Показатель, ДатаРасчета, Менеджер);
	КонецЕсли;
	
	Диаграмма.Очистить();
	Диаграмма.ТипДиаграммы = ТипДиаграммы.Измерительная; 
	Для Каждого Полоса Из Диаграмма.ПолосыИзмерительнойДиаграммы Цикл
		Диаграмма.ПолосыИзмерительнойДиаграммы.Удалить(Полоса);
	КонецЦикла;
	
	Диаграмма.ОтображатьЗаголовок = Ложь;
	Диаграмма.ОтображатьЛегенду = Ложь;
	Диаграмма.ПоложениеПодписейШкалыЗначенийИзмерительнойДиаграммы=ПоложениеПодписейШкалыЗначенийИзмерительнойДиаграммы.ВнутриШкалы;
	
	СисИнфо = Новый СистемнаяИнформация;
	
	Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
		Выполнить("Диаграмма.ОсьЗначений.СпособОпределенияМинимальногоЗначения = СпособОпределенияОграничивающегоЗначенияДиаграммы.ИспользоватьЗначение");
		Выполнить("Диаграмма.ОсьЗначений.СпособОпределенияМаксимальногоЗначения = СпособОпределенияОграничивающегоЗначенияДиаграммы.ИспользоватьЗначение");
		Диаграмма.ОсьЗначений.МинимальноеЗначение = 0;
		Диаграмма.АвтоУстановкаТекстаСерий  = Ложь;
		Диаграмма.АвтоУстановкаТекстаТочек  = Ложь
	Иначе
		Диаграмма.АвтоУстановкаИменСерий = Ложь;
		Диаграмма.АвтоУстановкаИменТочек = Ложь;
		Диаграмма.АвтоМаксимальноеЗначение = Ложь; 
		Диаграмма.АвтоМинимальноеЗначение = Ложь; 
		Диаграмма.МинимальноеЗначение = 0;
	КонецЕсли;
	
	КонтролируемыйПоказатель = Показатель.КонтролируемыйПоказатель;
	
	Если Показатель.КратностьЗначений = "НеИзменять" Тогда
		КратностьЗначений = 1;
	ИначеЕсли Показатель.КратностьЗначений = "Тысячи" Тогда	
		КратностьЗначений = 1000; 
	ИначеЕсли Показатель.КратностьЗначений = "Миллионы" Тогда	
		КратностьЗначений = 1000000;	
	КонецЕсли;
	
	Если Показатель.ДробнаяЧасть = "Целое" Тогда
		ДробнаяЧасть = 0;
	ИначеЕсли Показатель.ДробнаяЧасть = "Десятые" Тогда	
		ДробнаяЧасть = 1; 
	ИначеЕсли Показатель.ДробнаяЧасть = "Сотые" Тогда	
		ДробнаяЧасть = 2;	
	ИначеЕсли Показатель.ДробнаяЧасть = "Тысячные" Тогда	
		ДробнаяЧасть = 3;	
	КонецЕсли;
	
	Если  Показатель.ЦелевойТренд = "Максимум" Тогда
		
		ПлановоеЗначение = Окр(ТаблицаДанных.Итог("ЗначениеПоказателя")/КратностьЗначений, ДробнаяЧасть, 1);
		ТекущееЗначение = Окр(ТаблицаДанных.Итог(КонтролируемыйПоказатель)/КратностьЗначений, ДробнаяЧасть, 1);
		
		ПерваяОтсечка = Окр(ПлановоеЗначение*0.5, ДробнаяЧасть, 1);
		
		Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
			Диаграмма.ОсьЗначений.МаксимальноеЗначение = Макс(ПлановоеЗначение, ТекущееЗначение);
			
		Иначе
			Диаграмма.МаксимальноеЗначение = Макс(ПлановоеЗначение, ТекущееЗначение);
		КонецЕсли;
		
		Полосы = Диаграмма.ПолосыИзмерительнойДиаграммы; 
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = 0; 
		НоваяПолоса.Конец = ПерваяОтсечка; 
		НоваяПолоса.ЦветФона = WebЦвета.Красный; 
		
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = ПерваяОтсечка; 
		НоваяПолоса.Конец = Окр(ПлановоеЗначение*0.8, ДробнаяЧасть, 1);
		НоваяПолоса.ЦветФона = WebЦвета.Желтый; 
		
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = Окр(ПлановоеЗначение*0.8, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец = Макс(ПлановоеЗначение, ТекущееЗначение); 
		НоваяПолоса.ЦветФона = WebЦвета.Зеленый;
		
	ИначеЕсли  Показатель.ЦелевойТренд = "Минимум" Тогда
		
		ПлановоеЗначение = Окр(ТаблицаДанных.Итог("ЗначениеПоказателя")/КратностьЗначений, ДробнаяЧасть, 1);
		ТекущееЗначение = Окр(ТаблицаДанных.Итог(КонтролируемыйПоказатель)/КратностьЗначений, ДробнаяЧасть, 1);
		
		ПерваяОтсечка = Окр(ПлановоеЗначение*1.2, ДробнаяЧасть, 1);
		
		Если ПлановоеЗначение = 0 Тогда
			Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
				Диаграмма.ОсьЗначений.МаксимальноеЗначение =  Макс(5, ТекущееЗначение);
				
			Иначе
				Диаграмма.МаксимальноеЗначение =  Макс(5, ТекущееЗначение);
			КонецЕсли;
			
			Полосы = Диаграмма.ПолосыИзмерительнойДиаграммы; 
			НоваяПолоса = Полосы.Добавить();
			НоваяПолоса.Начало = 0; 
			НоваяПолоса.Конец = Окр(1, ДробнаяЧасть, 1); 
			НоваяПолоса.ЦветФона = WebЦвета.Зеленый; 
			
			НоваяПолоса = Полосы.Добавить();
			НоваяПолоса.Начало = Окр(1, ДробнаяЧасть, 1); 
			НоваяПолоса.Конец = Окр(3, ДробнаяЧасть, 1); 
			НоваяПолоса.ЦветФона = WebЦвета.Желтый; 
			
			НоваяПолоса = Полосы.Добавить();
			НоваяПолоса.Начало = Окр(3, ДробнаяЧасть, 1); 
			НоваяПолоса.Конец = Макс(Окр(5, ДробнаяЧасть, 1), ТекущееЗначение); 
			НоваяПолоса.ЦветФона = WebЦвета.Красный;
			
		Иначе
		
			Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
				Диаграмма.ОсьЗначений.МаксимальноеЗначение = Макс(Окр(ПлановоеЗначение*2, ДробнаяЧасть, 1), ТекущееЗначение);
			Иначе
				Диаграмма.МаксимальноеЗначение = Макс(Окр(ПлановоеЗначение*2, ДробнаяЧасть, 1), ТекущееЗначение);
			КонецЕсли;
			
			Полосы = Диаграмма.ПолосыИзмерительнойДиаграммы;
			НоваяПолоса = Полосы.Добавить();
			НоваяПолоса.Начало = 0; 
			НоваяПолоса.Конец = Окр(ПлановоеЗначение*1.2, ДробнаяЧасть, 1); 
			НоваяПолоса.ЦветФона = WebЦвета.Зеленый;
			
			НоваяПолоса = Полосы.Добавить(); 
			НоваяПолоса.Начало = Окр(ПлановоеЗначение*1.2, ДробнаяЧасть, 1); 
			НоваяПолоса.Конец = Окр(ПлановоеЗначение*1.5, ДробнаяЧасть, 1); 
			НоваяПолоса.ЦветФона = WebЦвета.Желтый;
			
			НоваяПолоса = Полосы.Добавить(); 
			НоваяПолоса.Начало = Окр(ПлановоеЗначение*1.5, ДробнаяЧасть, 1); 
			НоваяПолоса.Конец = Макс(Окр(ПлановоеЗначение*2, ДробнаяЧасть, 1), ТекущееЗначение); 
			НоваяПолоса.ЦветФона = WebЦвета.Красный;
			
		КонецЕсли;
		
	Иначе
		
		ПлановоеЗначениеМин = Окр(ТаблицаДанных.Итог("ЗначениеПоказателя")/КратностьЗначений, ДробнаяЧасть, 1);
		ПлановоеЗначениеМакс = Окр(ТаблицаДанных.Итог("ЗначениеПоказателяМаксимум")/КратностьЗначений, ДробнаяЧасть, 1);
		ТекущееЗначение = Окр(ТаблицаДанных.Итог(КонтролируемыйПоказатель)/КратностьЗначений, ДробнаяЧасть, 1);
		
		Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
			Диаграмма.ОсьЗначений.МаксимальноеЗначение = Макс(ПлановоеЗначениеМакс*2, ТекущееЗначение);
		Иначе
			Диаграмма.МаксимальноеЗначение = Макс(ПлановоеЗначениеМакс*2, ТекущееЗначение);
		КонецЕсли;
		
		Полосы = Диаграмма.ПолосыИзмерительнойДиаграммы; 
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = 0; 
		НоваяПолоса.Конец = Окр(ПлановоеЗначениеМин*0.5, ДробнаяЧасть, 1); 
		НоваяПолоса.ЦветФона = WebЦвета.Красный; 
		
		НоваяПолоса = Полосы.Добавить();
		НоваяПолоса.Начало = Окр(ПлановоеЗначениеМин*0.5, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец =  Окр(ПлановоеЗначениеМин*0.8, ДробнаяЧасть, 1); 
		НоваяПолоса.ЦветФона = WebЦвета.Желтый;
		
		НоваяПолоса = Полосы.Добавить();
		НоваяПолоса.Начало = Окр(ПлановоеЗначениеМин*0.8, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец = Окр(ПлановоеЗначениеМакс*1.2, ДробнаяЧасть, 1); 
		НоваяПолоса.ЦветФона = WebЦвета.Зеленый;
		
		НоваяПолоса = Полосы.Добавить();
		НоваяПолоса.Начало = Окр(ПлановоеЗначениеМакс*1.2, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец =  Окр(ПлановоеЗначениеМакс*1.5, ДробнаяЧасть, 1); 
		НоваяПолоса.ЦветФона = WebЦвета.Желтый;
		
		НоваяПолоса = Полосы.Добавить();
		НоваяПолоса.Начало = Окр(ПлановоеЗначениеМакс*1.5, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец = Макс(ПлановоеЗначениеМакс*2, ТекущееЗначение); 
		НоваяПолоса.ЦветФона = WebЦвета.Красный;
		
	КонецЕсли;
	
	Серия = Диаграмма.УстановитьСерию("Факт");
	Точка = Диаграмма.УстановитьТочку("Факт");
	Диаграмма.УстановитьЗначение(Точка, Серия, ТекущееЗначение, Показатель,"Текущее значение - "+ТекущееЗначение);
	Диаграмма.Обновление = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура РасчетКлючевыхПоказателей() Экспорт
	
	Если ОбщегоНазначенияПовтИсп.РазделениеВключено() И Не ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных() Тогда
		Возврат;
	КонецЕсли;
	
	//ДатаПоказателей = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	//
	//ЗапросПоказатели = Новый Запрос;
	//ЗапросПоказатели.Текст = 
	//"ВЫБРАТЬ
	//|	Показатели.Ссылка КАК Показатель,
	//|	Показатели.КонтролируемыйПоказатель КАК КонтролируемыйПоказатель
	//|ИЗ
	//|	Справочник.CRM_ШаблоныКлючевыхПоказателей КАК Показатели
	//|ГДЕ
	//|	Показатели.Включен";
	//
	//РезультатЗапроса = ЗапросПоказатели.Выполнить();
	//Если РезультатЗапроса.Пустой() Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//ВыборкаПоказатели = РезультатЗапроса.Выбрать();
	//Пока ВыборкаПоказатели.Следующий() Цикл
	//	
	//	ДанныеПоказателя = ПолучитьТаблицуПоказателя(ВыборкаПоказатели.Показатель, ДатаПоказателей,, Истина);
	//	Если ДанныеПоказателя.Количество() = 0 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	НаборЗаписей = РегистрыСведений.CRM_ЗначенияКлючевыхПоказателей.СоздатьНаборЗаписей();
	//	НаборЗаписей.Отбор.ДатаЗначения.Установить(НачалоДня(ДатаПоказателей));
	//	НаборЗаписей.Отбор.Показатель.Установить(ВыборкаПоказатели.Показатель);
	//	Для Каждого Строка Из ДанныеПоказателя Цикл
	//		НоваяЗапись = НаборЗаписей.Добавить();
	//		НоваяЗапись.ДатаЗначения	= НачалоДня(ДатаПоказателей);
	//		НоваяЗапись.Показатель		= ВыборкаПоказатели.Показатель;
	//		НоваяЗапись.Менеджер		= Строка.Менеджер;
	//		НоваяЗапись.Значение		= Строка[ВыборкаПоказатели.КонтролируемыйПоказатель];
	//	КонецЦикла;
	//	НаборЗаписей.Записать(Истина);
	//	
	//КонецЦикла;
	//
	//Константы.CRM_ДатаАктуальностиЦелевыхПоказателей.Установить(ДатаПоказателей);
	
	Параметры = Новый Структура;
	CRM_УправлениеЦелевымиПоказателямиСервер.ПересчетКлючевыхПоказателей(Параметры, Неопределено);
	
КонецПроцедуры

Функция ЗапуститьПересчетПоказателей() Экспорт
	
	Параметры = Новый Структура;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Расчет ключевых показателей'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("CRM_УправлениеЦелевымиПоказателямиСервер.ПересчетКлючевыхПоказателей",
			Параметры, ПараметрыВыполнения);
	
КонецФункции

Функция ЗапуститьПересчетПоказателя(Показатель) Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("Показатель", Показатель);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(Новый УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Расчет показателя '") + Строка(Показатель);
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("CRM_УправлениеЦелевымиПоказателямиСервер.ПересчетКлючевыхПоказателей",
			Параметры, ПараметрыВыполнения);
	
КонецФункции

Процедура ПересчетКлючевыхПоказателей(Параметры, АдресРезультата) Экспорт
	
	Результат = Новый Структура;
	
	ДатаПоказателей = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	ГлубинаПересчета = Константы.CRM_ГлубинаПересчетаПоказателей.Получить();
	
	ДатаНачала = НачалоМесяца(ДобавитьМесяц(ДатаПоказателей, -ГлубинаПересчета));
	ДатаОкончания = КонецДня(ДатаПоказателей);
	
	ЗапросПоказатели = Новый Запрос;
	ЗапросПоказатели.УстановитьПараметр("НачалоПериода", ДатаНачала);
	ЗапросПоказатели.УстановитьПараметр("КонецПериода", ДатаОкончания);
	
	ЗапросПоказатели.Текст =
	"ВЫБРАТЬ
	|	ЗначенияПоказателей.Менеджер КАК Менеджер,
	|	ЗначенияПоказателей.Подразделение КАК Подразделение,
	|	ЗначенияПоказателей.ДатаЗначения КАК ДатаЗначения,
	|	ЗначенияПоказателей.Показатель КАК Показатель
	|ИЗ
	|	РегистрСведений.CRM_ЗначенияКлючевыхПоказателей КАК ЗначенияПоказателей
	|ГДЕ
	|	ЗначенияПоказателей.Показатель.Включен
	|	И ЗначенияПоказателей.ДатаЗначения МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НЕ ЗначенияПоказателей.Показатель.РасчитыватьРегламентнымЗаданием";
	
	Если Параметры.Свойство("Показатель") Тогда
		ЗапросПоказатели.Текст = ЗапросПоказатели.Текст + "
		|	И ЗначенияПоказателей.Показатель = &Показатель";
		ЗапросПоказатели.Параметры.Вставить("Показатель", Параметры.Показатель);
	КонецЕсли;
	
	РезультатЗапроса = ЗапросПоказатели.Выполнить();
	ВыборкаПоказатели = РезультатЗапроса.Выбрать();
	Пока ВыборкаПоказатели.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.CRM_ЗначенияКлючевыхПоказателей.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ДатаЗначения		= ВыборкаПоказатели.ДатаЗначения;
		МенеджерЗаписи.Менеджер			= ВыборкаПоказатели.Менеджер;
		МенеджерЗаписи.Показатель		= ВыборкаПоказатели.Показатель;
		МенеджерЗаписи.Подразделение	= ВыборкаПоказатели.Подразделение;
		МенеджерЗаписи.Прочитать();
		Если МенеджерЗаписи.Выбран() Тогда
			МенеджерЗаписи.Удалить();
		КонецЕсли;
	КонецЦикла;
	
	// Пересчет истории.
	ЗапросПоказатели.Текст =
	"ВЫБРАТЬ
	|	Показатели.Ссылка КАК Показатель,
	|	Показатели.КонтролируемыйПоказатель КАК КонтролируемыйПоказатель
	|ИЗ
	|	Справочник.CRM_ШаблоныКлючевыхПоказателей КАК Показатели
	|ГДЕ
	|	Показатели.Включен
	|	И НЕ Показатели.РасчитыватьРегламентнымЗаданием";
	
	Если Параметры.Свойство("Показатель") Тогда
		ЗапросПоказатели.Текст = ЗапросПоказатели.Текст + "
		|	И Показатели.Ссылка = &Показатель";
		ЗапросПоказатели.Параметры.Вставить("Показатель", Параметры.Показатель);
	КонецЕсли;
	
	РезультатЗапроса = ЗапросПоказатели.Выполнить();
	ВыборкаПоказатели = РезультатЗапроса.Выбрать();
	Пока ВыборкаПоказатели.Следующий() Цикл
		
		ТекущаяДатаРасчета = ДатаНачала;
		Пока КонецДня(ТекущаяДатаРасчета) <= ДатаОкончания Цикл
			
			ДанныеПоказателя = ПолучитьТаблицуПоказателя(ВыборкаПоказатели.Показатель, ТекущаяДатаРасчета,, Истина);
			Если ДанныеПоказателя.Количество() = 0 Тогда
				ТекущаяДатаРасчета = КонецДня(ТекущаяДатаРасчета) + 1;
				Продолжить;
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.CRM_ЗначенияКлючевыхПоказателей.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДатаЗначения.Установить(ТекущаяДатаРасчета);
			НаборЗаписей.Отбор.Показатель.Установить(ВыборкаПоказатели.Показатель);
			Для Каждого Строка Из ДанныеПоказателя Цикл
				Если Не ЗначениеЗаполнено(Строка.Менеджер) Тогда
					Продолжить;
				КонецЕсли;
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.ДатаЗначения	= ТекущаяДатаРасчета;
				НоваяЗапись.Менеджер		= Строка.Менеджер;
				НоваяЗапись.Показатель		= ВыборкаПоказатели.Показатель;
				НоваяЗапись.Значение		= Строка[ВыборкаПоказатели.КонтролируемыйПоказатель];
			КонецЦикла;
			НаборЗаписей.Записать(Истина);
			
			ТекущаяДатаРасчета = КонецДня(ТекущаяДатаРасчета) + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Расчет показателей, по которым не хранится история.
	ЗапросПоказатели.Текст =
	"ВЫБРАТЬ
	|	Показатели.Ссылка КАК Показатель,
	|	Показатели.КонтролируемыйПоказатель КАК КонтролируемыйПоказатель
	|ИЗ
	|	Справочник.CRM_ШаблоныКлючевыхПоказателей КАК Показатели
	|ГДЕ
	|	Показатели.Включен
	|	И Показатели.РасчитыватьРегламентнымЗаданием";
	
	Если Параметры.Свойство("Показатель") Тогда
		ЗапросПоказатели.Текст = ЗапросПоказатели.Текст + "
		|	И Показатели.Ссылка = &Показатель";
		ЗапросПоказатели.Параметры.Вставить("Показатель", Параметры.Показатель);
	КонецЕсли;
	
	РезультатЗапроса = ЗапросПоказатели.Выполнить();
	ВыборкаПоказатели = РезультатЗапроса.Выбрать();
	Пока ВыборкаПоказатели.Следующий() Цикл
		
		ДанныеПоказателя = ПолучитьТаблицуПоказателя(ВыборкаПоказатели.Показатель, ДатаПоказателей,, Истина);
		Если ДанныеПоказателя.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.CRM_ЗначенияКлючевыхПоказателей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДатаЗначения.Установить(ДатаОкончания);
		НаборЗаписей.Отбор.Показатель.Установить(ВыборкаПоказатели.Показатель);
		Для Каждого Строка Из ДанныеПоказателя Цикл
			Если Не ЗначениеЗаполнено(Строка.Менеджер) Тогда
				Продолжить;
			КонецЕсли;
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.ДатаЗначения	= ДатаОкончания;
			НоваяЗапись.Менеджер		= Строка.Менеджер;
			НоваяЗапись.Показатель		= ВыборкаПоказатели.Показатель;
			НоваяЗапись.Значение		= Строка[ВыборкаПоказатели.КонтролируемыйПоказатель];
		КонецЦикла;
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;
	
	Константы.CRM_ДатаАктуальностиЦелевыхПоказателей.Установить(ДатаПоказателей);
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

Функция ПолучитьПараметрыРасшифровки(Показатель, ПараметрыОтбора) Экспорт
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
	Если ПараметрыОтбора = Неопределено Тогда
		ПараметрыОтбора = Новый Структура;
	КонецЕсли;
	
	Если Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ПросроченоВзаимодействий
		ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ЗавершеноВзаимодействийИЗадачПоИнтересам
		ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.Взаимодействия Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "ВзаимодействияИЗадачиПоИнтересам");
		ПараметрыОтбора.Вставить("Менеджер", ПараметрыОтбора.Менеджеры[0]);
		Если Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ПросроченоВзаимодействий Тогда
			ПараметрыОтбора.Вставить("Запланировано", Истина);
			ПараметрыОтбора.Вставить("ПлановаяДатаЗавершения", Новый Структура("ВидСравнения, Значение", ВидСравненияКомпоновкиДанных.Меньше, ТекущаяДата()));
		Иначе
			ПараметрыОтбора.Вставить("Запланировано", Ложь);
			ПараметрыОтбора.Вставить("ДатаЗавершения", ПараметрыОтбора.ПериодОтчета);
		КонецЕсли;
		ФормаРасшифровки = "Отчет.CRM_ВзаимодействияИЗадачиПоИнтересам.Форма";
	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.КасанияНаОдногоКлиента Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "КасанияНаОдногоКлиента");
		ФормаРасшифровки = "Отчет.CRM_КонтрольРуководителя_Интересы.Форма";
		ПараметрыОтбора.Вставить("ДатаСледующегоДействия", Новый Структура("ВидСравнения, Значение", ВидСравненияКомпоновкиДанных.Меньше, ТекущаяДата()));
		ПараметрыОтбора.Вставить("Менеджер", ПараметрыОтбора.Менеджеры[0]);
	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ЗагрузкаКалендаря Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "МойАвтомотиватор");
		ФормаРасшифровки = "Отчет.CRM_Автомотиватор.Форма";
	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ЗабытыеКлиенты Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "Т_СписокКлиентов1");
		ПараметрыОтбора.Вставить("ЕстьАктивныйИнтересКлинты", Ложь);
		ПараметрыОтбора.Вставить("МенеджерКлиенты", ПараметрыОтбора.Менеджеры[0]);
		ФормаРасшифровки = "Отчет.CRM_КонтрольРуководителя_Клиенты.Форма";
	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.КачествоКлиентскойБазы Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "Т_СписокКлиентов1");
		ПараметрыОтбора.Вставить("ВариантРасшифровка", Истина);
		ПараметрыОтбора.Вставить("МенеджерКлиенты", ПараметрыОтбора.Менеджеры[0]);
		ФормаРасшифровки = "Отчет.CRM_КонтрольРуководителя_Клиенты.Форма";
	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ТеплыеКлиенты Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "ТеплыеКлиенты");
		ФормаРасшифровки = "Отчет.CRM_КонтрольРуководителя_Интересы.Форма";
		ПараметрыОтбора.ПериодОтчета.ДатаНачала = Дата(1,1,1);
		ПараметрыОтбора.Вставить("Менеджер", ПараметрыОтбора.Менеджеры[0]);
		//ПараметрыОтбора.Вставить("ДатаСледующегоДействия", Новый Структура("ВидСравнения, Значение", ВидСравненияКомпоновкиДанных.Меньше, ТекущаяДата()));
	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.Взаимодействия Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "ПоВзаимодействиям");
		ПараметрыОтбора.Вставить("МенеджерПоВзаимодействиям", ПараметрыОтбора.Менеджеры[0]);
		ФормаРасшифровки = "Отчет.CRM_КонтрольРуководителя_Взаимодействия.Форма";
	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ПроведениеВстреч Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "ПоМенеджерамИПодразделениям");
		ПараметрыОтбора.Вставить("Менеджер", ПараметрыОтбора.Менеджеры[0]);
		ФормаРасшифровки = "Отчет.CRM_АнализМероприятий.Форма";
	//ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ВысланныеКП Тогда
	//	ПараметрыФормы.Вставить("КлючВарианта", "ПоИнтересам");
	//	ПараметрыОтбора.Вставить("МенеджерПоИнтересам", ПараметрыОтбора.Менеджеры[0]);
	//	ФормаРасшифровки = "Отчет.CRM_АнализКоммерческихПредложений.Форма";
	//ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ТелефонныеЗвонки
	//		ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ВходящиеТелефонныеЗвонки 
	//		ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ИсходящиеТелефонныеЗвонки
	//		ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ВсеТелефонныеЗвонки Тогда
	//	ПараметрыФормы.Вставить("КлючВарианта", "ОтчетПоСовершеннымЗвонкам");
	//	
	//	ПараметрыОтбора.Вставить("ДлительностьЗвонка", 0);
	//	Если Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ВходящиеТелефонныеЗвонки Тогда
	//		ПараметрыОтбора.Вставить("Направление", "Входящий");
	//	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ИсходящиеТелефонныеЗвонки Тогда
	//		ПараметрыОтбора.Вставить("Направление", "Исходящий");
	//	Иначе
	//		ПараметрыОтбора.Вставить("Направление", "Все");
	//	КонецЕсли;
	//	
	//	ФормаРасшифровки = "Отчет.сфпОтчетПоСовершеннымЗвонкам.Форма";
	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ИсходящиеПисьма
			ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ИсходящиеСообщения Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "УниверсальныйЖурнал");
		
		ПараметрыОтбора.Вставить("Ответственный", ПараметрыОтбора.Менеджеры[0]);
		Если Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ИсходящиеПисьма Тогда
			ПараметрыОтбора.Вставить("ТипОбъекта", ПланыВидовХарактеристик.CRM_ОбъектыЖурналаДокументов.НайтиПоНаименованию(Метаданные.Документы.ЭлектронноеПисьмоИсходящее.Синоним));
			ПараметрыОтбора.Вставить("СтатусПисьма", Новый Структура("ПолеКомпоновкиДанных, ВидСравнения, Значение", "Объект.СтатусПисьма",
																ВидСравненияКомпоновкиДанных.Равно, Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Отправлено));
		ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ИсходящиеСообщения Тогда
			ПараметрыОтбора.Вставить("ТипОбъекта",  ПланыВидовХарактеристик.CRM_ОбъектыЖурналаДокументов.НайтиПоНаименованию(Метаданные.Документы.CRM_СообщениеМессенджера.Синоним));
			ПараметрыОтбора.Вставить("ВходящееИсходящее",  Перечисления.CRM_ВходящееИсходящееСобытие.Исходящее);
		КонецЕсли;
	
		ФормаРасшифровки = "Отчет.CRM_АнализЖурналаДокументов.Форма";
	ИначеЕсли Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.ИнтересовВРаботе
				ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.СуммаИнтересовВРаботе
				ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.УспешныхИнтересов
				ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.СуммаУспешныхИнтересов Тогда
		ПараметрыФормы.Вставить("КлючВарианта", "ИнтересыКлиентов");
		ФормаРасшифровки = "Отчет.CRM_ИнтересыКлиентов.Форма";
		ПараметрыОтбора.Вставить("Ответственный", ПараметрыОтбора.Менеджеры[0]);
		Если Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.УспешныхИнтересов
			ИЛИ Показатель = Справочники.CRM_ШаблоныКлючевыхПоказателей.СуммаУспешныхИнтересов Тогда
			
			ПараметрыОтбора.Вставить("ДатаЗакрытия", ПараметрыОтбора.ПериодОтчета);
			ПараметрыОтбора.Вставить("ВРаботе", Ложь);
			ПараметрыОтбора.Вставить("ВидСостояния", Новый Структура("ПолеКомпоновкиДанных, ВидСравнения, Значение", "СостояниеИнтереса.ВидСостояния",
																ВидСравненияКомпоновкиДанных.Равно, Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение));
		Иначе
			ПараметрыОтбора.Вставить("ДатаСоздания", ПараметрыОтбора.ПериодОтчета);
		КонецЕсли;
	Иначе
		ФормаРасшифровки = Неопределено;
	КонецЕсли;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	Возврат Новый Структура("Форма, ИмяПредопределенных, ПараметрыФормы, ПараметрыОтбора", ФормаРасшифровки, Показатель.ИмяПредопределенныхДанных, ПараметрыФормы, ПараметрыОтбора);
КонецФункции

Функция ПолучитьТаблицуПланаПоказателя(Показатель, ДатаРасчета, Менеджер, ЗаДень = Ложь) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИспользуемыеПоказатели.Менеджер КАК Менеджер,
	|	СУММА(ИспользуемыеПоказатели.ЗначениеПоказателя) КАК ЗначениеПоказателя,
	|	СУММА(ИспользуемыеПоказатели.ЗначениеПоказателяМаксимум) КАК ЗначениеПоказателяМаксимум
	|ИЗ
	|	РегистрСведений.CRM_ИспользуемыеКлючевыеПоказатели КАК ИспользуемыеПоказатели
	|ГДЕ
	|	ИспользуемыеПоказатели.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИспользуемыеПоказатели.Показатель = &Показатель
	|	И ВЫБОР
	|			КОГДА &Менеджеры = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ИспользуемыеПоказатели.Менеджер = &Менеджеры
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИспользуемыеПоказатели.Менеджер");
	
	Запрос.Параметры.Вставить("Показатель", Показатель);
	
	Если Показатель.ПериодАнализа = "Месяц" Тогда
		НачалоПериода = НачалоМесяца(ДатаРасчета);
	ИначеЕсли Показатель.ПериодАнализа = "День" Тогда
		НачалоПериода = НачалоДня(ДатаРасчета);
	ИначеЕсли Показатель.ПериодАнализа = "Квартал" Тогда
		НачалоПериода = НачалоКвартала(ДатаРасчета);
	ИначеЕсли Показатель.ПериодАнализа = "Год" Тогда
		НачалоПериода = НачалоГода(ДатаРасчета);
	КонецЕсли;
	Запрос.Параметры.Вставить("НачалоПериода", НачалоПериода);
	
	Если ЗаДень Тогда
		КонецПериода = КонецДня(ДатаРасчета);
	Иначе
		Если Показатель.ПериодАнализа = "Месяц" Тогда
			КонецПериода = КонецМесяца(ДатаРасчета);
		ИначеЕсли Показатель.ПериодАнализа = "Квартал" Тогда
			КонецПериода = КонецКвартала(ДатаРасчета);
		ИначеЕсли Показатель.ПериодАнализа = "Год" Тогда
			КонецПериода = КонецГода(ДатаРасчета);
		ИначеЕсли Показатель.ПериодАнализа = "День" Тогда
			КонецПериода = КонецДня(ДатаРасчета);
		КонецЕсли;
	КонецЕсли;
	Запрос.Параметры.Вставить("КонецПериода", КонецПериода);
	
	Менеджеры = ?(ЗначениеЗаполнено(Менеджер), Менеджер, Справочники.Пользователи.ПустаяСсылка());
	Запрос.Параметры.Вставить("Менеджеры", Менеджеры);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#Область ИнтеграцияСБиблиотекойСтандартныхПодсистем

// Интеграция с подсистемой СтандартныеПодсистемы.ВариантыОтчетов.
//
// Содержит настройки размещения вариантов отчетов в панели отчетов.
//
// Параметры:
//   Настройки - Коллекция - Используется для описания настроек отчетов и вариантов
//       см. описание к ВариантыОтчетов.ДеревоПредопределенных().
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.CRM_АнализАктивныхПоказателей);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.CRM_АнализАктивныхПоказателей, "ОтчетПоСотрудникам");
	//НастройкиВарианта.Описание = НСтр("ru = 'Отчет по показателям сотрудников.'");
	НастройкиВарианта.ВидимостьПоУмолчанию = Истина;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.CRM_АнализАктивныхПоказателей, "СводныйАнализПоказателей");
	//НастройкиВарианта.Описание = НСтр("ru = 'Сводный отчет по показателям сотрудников.'");
	НастройкиВарианта.ВидимостьПоУмолчанию = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОберткиЗащищенныхМетодов

Функция ПолучитьТаблицуРабочихДней(ДатаРасчета, Период, Подразделение) Экспорт
	
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьТаблицуРабочихДней(ДатаРасчета, Период, Подразделение);
	
КонецФункции

Функция ДоступныеПользователи(ТолькоТекущий = Истина) Экспорт
	
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьМассивПользователей(ТолькоТекущий);
	
КонецФункции

Функция ПолучитьДинамикуПоказателя(Показатель, ДатаРасчета, Менеджер = Неопределено, Подразделение = Неопределено) Экспорт
	
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьДинамикуПоказателя(Показатель, ДатаРасчета, Менеджер, Подразделение);
	
КонецФункции	

Функция ПолучитьЦветПоказателя(Показатель, ДатаРасчета, Менеджер = Неопределено, Подразделение = Неопределено, ТаблицаДанных = Неопределено) Экспорт
	
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьЦветПоказателя(Показатель, ДатаРасчета, Менеджер, Подразделение, ТаблицаДанных);
	
КонецФункции

#КонецОбласти

#КонецОбласти



