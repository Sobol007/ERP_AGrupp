#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//++ НЕ УТ
#Область ПрограммныйИнтерфейс

//++ НЕ УТКА

// Определяет источники уточнения счета, доступные в регистре и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиУточненияСчета().
//
// Параметры:
//  СвойстваИсточника - Строка - "ИмяПоля" - имя атрибута регистра накопления, из которого планируется получать источник
//                               уточнения счета.
//
// Возвращаемое значение:
//  Соответствие - Ключ - название источника уточнения счета. 
//                 Значение - структура свойств источника уточнения счета.
//
Функция ИсточникиУточненияСчета(СвойстваИсточника) Экспорт
	
	ИсточникиУточненияСчета = Новый Соответствие;
	
	ИсточникиУточненияСчета.Вставить(Перечисления.ТипыИсточниковУточненияСчета.ГруппаФинансовогоУчетаНоменклатурыКредита,
		Новый Структура(СвойстваИсточника, "ГФУНоменклатуры"));
	
	ИсточникиУточненияСчета.Вставить(Перечисления.ТипыИсточниковУточненияСчета.ГруппаФинансовогоУчетаНоменклатурыДебета,
		Новый Структура(СвойстваИсточника, "КорГФУНоменклатуры"));
	
	Возврат ИсточникиУточненияСчета;
	
КонецФункции

// Определяет источники подразделений регистра и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиПодразделений().
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиПодразделений() Экспорт

	ИсточникиПодразделений = Новый Соответствие;
	
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.ХозяйственнаяОперация, "Подразделение");
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.АналитикаУчетаНоменклатуры, "СкладПодразделение");
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.АналитикаУчетаНоменклатуры, "КорСкладПодразделение");
	
	Возврат ИсточникиПодразделений;
	
КонецФункции

// Определяет источники направлений регистра и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиНаправлений().
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиНаправлений() Экспорт

	Результат = Новый Соответствие;
	
	ИсточникиНаправлений = Перечисления.ИсточникиНаправленийДеятельностиАналитическихРегистров;
	Результат.Вставить(ИсточникиНаправлений.НаправлениеДеятельности, "НаправлениеДеятельности");
	Результат.Вставить(ИсточникиНаправлений.КорНаправлениеДеятельности, "КорНаправлениеДеятельности");

	Возврат Результат;

КонецФункции

// Определяет источники заполнения субконто.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиСубконто().
//
// Возвращаемое значение:
//  Массив - массив атрибутов регистра.
//
Функция ИсточникиСубконто() Экспорт

	МассивСубконтоКт = Новый Массив;
	МассивСубконтоКт.Добавить("Номенклатура");
	МассивСубконтоКт.Добавить("Характеристика");
	МассивСубконтоКт.Добавить("Склад");
	МассивСубконтоКт.Добавить("ТипЗапасов");
	МассивСубконтоКт.Добавить("ВидЗапасов");
	МассивСубконтоКт.Добавить("ГФУНоменклатуры");
	МассивСубконтоКт.Добавить("ТипНоменклатуры");
	МассивСубконтоКт.Добавить("КорОрганизация");
	МассивСубконтоКт.Добавить("Поставщик");
	
	МассивСубконтоДт = Новый Массив;
	МассивСубконтоДт.Добавить("КорНоменклатура");
	МассивСубконтоДт.Добавить("КорХарактеристика");
	МассивСубконтоДт.Добавить("КорСклад");
	МассивСубконтоДт.Добавить("КорТипЗапасов");
	МассивСубконтоДт.Добавить("КорВидЗапасов");
	МассивСубконтоДт.Добавить("КорГФУНоменклатуры");
	МассивСубконтоДт.Добавить("КорТипНоменклатуры");
	МассивСубконтоДт.Добавить("КорОрганизация");
	МассивСубконтоДт.Добавить("КорПоставщик");

	Возврат Новый Структура("СубконтоДт, СубконтоКт", МассивСубконтоДт, МассивСубконтоКт);
	
КонецФункции

// Определяет показатели в валюте регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ПоказателиВВалюте().
//
// Параметры:
//  СвойстваПоказателей - Строка - "ИсточникВалюты" - источник валюты для показателя регистра.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция ПоказателиВВалюте(СвойстваПоказателей) Экспорт

	ПоказателиВВалюте = Новый Соответствие;
	
	// НЕ ТРЕБУЕТСЯ
	
	Возврат ПоказателиВВалюте;

КонецФункции

// Определяет документы отражаемые в международном учете.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ДокументыКОтражениюВМФУ().
//
// Возвращаемое значение:
//  Массив - массив регистраторов регистра отражаемых в международном учете.
//
Функция ДокументыКОтражениюВМеждународномУчете() Экспорт

	ДокументыКОтражению = Новый Массив;
	ДокументыКОтражению.Добавить("ВнутреннееПотреблениеТоваров");
	ДокументыКОтражению.Добавить("ВозвратМатериаловИзПроизводства");
	ДокументыКОтражению.Добавить("ВозвратСырьяОтПереработчика");
	ДокументыКОтражению.Добавить("ВозвратТоваровМеждуОрганизациями");
	ДокументыКОтражению.Добавить("ВозвратТоваровОтКлиента");
	ДокументыКОтражению.Добавить("ВыпускПродукции");
	ДокументыКОтражению.Добавить("ДвижениеПродукцииИМатериалов");
	ДокументыКОтражению.Добавить("КорректировкаНазначенияТоваров");
	ДокументыКОтражению.Добавить("ПередачаМатериаловВПроизводство");
	ДокументыКОтражению.Добавить("ПередачаТоваровМеждуОрганизациями");
	ДокументыКОтражению.Добавить("ПередачаТоваровХранителю");
	ДокументыКОтражению.Добавить("ПередачаСырьяПереработчику");
	ДокументыКОтражению.Добавить("ПеремещениеТоваров");
	ДокументыКОтражению.Добавить("ПересортицаТоваров");
	ДокументыКОтражению.Добавить("ПорчаТоваров");
	ДокументыКОтражению.Добавить("ПоступлениеТоваров");
	ДокументыКОтражению.Добавить("ПрочееОприходованиеТоваров");
	ДокументыКОтражению.Добавить("ПриемкаТоваровНаХранение");
	ДокументыКОтражению.Добавить("РеализацияТоваровУслуг");
	ДокументыКОтражению.Добавить("СборкаТоваров");
	ДокументыКОтражению.Добавить("ЭтапПроизводства2_2");
	
	Возврат ДокументыКОтражению;

КонецФункции

//-- НЕ УТКА

// Определяет показатели регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.Показатели().
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СтоимостьУпр", "ВалютаУпр"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СтоимостьРегл", "ВалютаРегл"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.Сумма, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СтоимостьБезНДС", "ВалютаУпр"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаБезНДС, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СтоимостьРегл", "ВалютаРегл"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаРегл, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	Возврат Показатели;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)
	|	И(( ВЫБОР КОГДА ТипЗначения(Склад) = Тип(Справочник.Склады) ТОГДА ЗначениеРазрешено(Склад)
	|	КОГДА ТипЗначения(Склад) = Тип(Справочник.Партнеры) ТОГДА ЗначениеРазрешено(Склад)
	|	КОГДА ТипЗначения(Склад) = Тип(Справочник.СтруктураПредприятия) ТОГДА ЗначениеРазрешено(Склад)
	|	ИНАЧЕ Склад <> Неопределено КОНЕЦ)ИЛИ( ВЫБОР КОГДА ТипЗначения(КорСклад) = Тип(Справочник.Склады) ТОГДА ЗначениеРазрешено(КорСклад)
	|	КОГДА ТипЗначения(КорСклад) = Тип(Справочник.Партнеры) ТОГДА ЗначениеРазрешено(КорСклад)
	|	КОГДА ТипЗначения(КорСклад) = Тип(Справочник.СтруктураПредприятия) ТОГДА ЗначениеРазрешено(КорСклад)
	|	ИНАЧЕ КорСклад <> Неопределено КОНЕЦ)) ";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецЕсли
