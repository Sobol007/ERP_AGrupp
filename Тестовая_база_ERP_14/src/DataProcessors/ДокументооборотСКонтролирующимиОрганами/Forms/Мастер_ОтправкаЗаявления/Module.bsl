&НаКлиенте
Перем КонтекстЭДОКлиент;

&НаКлиенте
Перем ВыполняемоеОповещение;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Заявление 			= Параметры.Заявление;
	ТипКриптопровайдера = Заявление.ТипКриптопровайдера;
	ЭтоЭлектроннаяПодписьВМоделиСервиса = Заявление.ЭлектроннаяПодписьВМоделиСервиса;
	ФИО 				= СокрЛП(Заявление.ВладелецЭЦПИмя + " " + Заявление.ВладелецЭЦПОтчество);
	НомерТелефона    	= Заявление.ТелефонМобильныйДляАвторизации;
	
	Если ЭтоЭлектроннаяПодписьВМоделиСервиса Тогда
		ПоказатьСтраницуОтправкиЗаявления();
	Иначе
		ПоказатьСтраницуПодготовкиКСозданиюКлюча();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = НСтр("ru = 'Упрощенное заявление. Успешное создание закрытого ключа';
							|en = 'Simplified application. Successful creation of a private key'") Тогда
		ПоказатьСтраницуОтправкиЗаявления();
	ИначеЕсли ИмяСобытия = НСтр("ru = 'Упрощенное заявление. Ошибка создание закрытого ключа';
								|en = 'Simplified application. Private key creation error'") Тогда
		ПричинаОшибки = Параметр;
		ПоказатьОшибкуСозданияКлюча();
	ИначеЕсли ИмяСобытия = НСтр("ru = 'Упрощенное заявление. Ошибка отправки заявления';
								|en = 'Simplified application. Application sending error'") И НЕ ЗначениеЗаполнено(ПричинаОшибки) Тогда
		// Заходим сюда только если ранее не выпадала ошибка создания контейнера
		ПричинаОшибки = Параметр;
		ПоказатьОшибкуОтправкиЗаявления();
	ИначеЕсли ИмяСобытия = НСтр("ru = 'Упрощенное заявление. Успешная отправки заявления';
								|en = 'Simplified application. Application successfully sent'")
		ИЛИ ИмяСобытия = НСтр("ru = 'Упрощенное заявление. Отказ от ввода пароля';
								|en = 'Simplified application. Refuse entering the password'") Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИнструкцияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	КонтекстЭДОКлиент.ОткрытьИнструкциюИнструкциюПоСозданиюКлючаЭЦП(ТипКриптопровайдера);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЗакрытыйКлюч(Команда)
	
	Оповестить(НСтр("ru = 'Упрощенное заявление. Начать создание закрытого ключа';
					|en = 'Simplified application. Start creating a private key'"), , Заявление);
	ПоказатьСтраницуСозданияКлюча();
	
КонецПроцедуры

&НаКлиенте
Процедура ТребуетсяПомощьНажатие(Элемент)
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Фио", ФИО);
	ДополнительныеПараметры.Вставить("НомерТелефона", НомерТелефона);
	
	ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.Мастер_Помощь", ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Активизировать();
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
	Если ЭтоЭлектроннаяПодписьВМоделиСервиса Тогда
		ПодключитьОбработчикОжидания("Подключаемый_НачатьОтправкуОблачногоЗаявления", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НачатьОтправкуОблачногоЗаявления()
	
	Оповестить(НСтр("ru = 'Упрощенное заявление. Начать отправку облачного заявления';
					|en = 'Simplified application. Start sending a cloud application'"), , Заявление);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьСтраницуПодготовкиКСозданиюКлюча()
	
	Заголовок 						= НСтр("ru = 'Создание ключа и отправка заявления';
											|en = 'Create key and send application'");
	Элементы.СоздатьЗакрытыйКлюч.КнопкаПоУмолчанию = Истина;
	АктивизироватьСтраницу(Элементы.НачатьСозданиеКлюча);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьСтраницуОтправкиЗаявления()
	
	Заголовок = НСтр("ru = 'Подождите, пожалуйста...';
					|en = 'Please wait...'");
	
	Если ЭтоЭлектроннаяПодписьВМоделиСервиса Тогда
		Элементы.ТекстПриОжидании.Заголовок = НСтр("ru = 'Выполняется отправка заявления...
                                                    |Обычно это занимает 1-2 минуты';
                                                    |en = 'Sending application...
                                                    |Usually it takes 1-2 minutes.'");
	Иначе
		Элементы.ТекстПриОжидании.Заголовок = НСтр("ru = 'Выполняется отправка заявления...';
													|en = 'Sending application...'");
	КонецЕсли;
	АктивизироватьСтраницу(Элементы.ДлительноеДействие);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьСтраницуСозданияКлюча()
	
	Заголовок = НСтр("ru = 'Подождите, пожалуйста...';
					|en = 'Please wait...'");
	
	Элементы.ТекстПриОжидании.Заголовок = НСтр("ru = 'Выполняется создание ключа...';
												|en = 'Creating a key...'");
	АктивизироватьСтраницу(Элементы.ДлительноеДействие);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьОшибкуСозданияКлюча()
	
	Заголовок 								 = НСтр("ru = 'Создание ключа';
														|en = 'Create key'");
	Элементы.ЗаголовокКОшибке.Заголовок 	 = НСтр("ru = 'Не удалось создать закрытый ключ по причине:';
													|en = 'Cannot create a private key due to:'");
	Элементы.ТекстОшибки.Заголовок 			 = ПричинаОшибки;
	Элементы.ФормаЗакрыть.КнопкаПоУмолчанию  = Истина;
	Элементы.БезЭлектроннойПодписи.Видимость = Ложь;
	
	АктивизироватьСтраницу(Элементы.ОписаниеОшибки);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьОшибкуОтправкиЗаявления()
	
	Заголовок = НСтр("ru = 'Отправка заявления';
					|en = 'Application sending'");
	
	ПричинаОшибки = СтрЗаменить(ПричинаОшибки, Символы.ПС + Символы.ПС, Символы.ПС);
	
	Если СтрНайти(ПричинаОшибки, НСтр("ru = 'Не удалось выполнить подписание сертификатом';
										|en = 'Cannot sign with the certificate'")) <> 0 Тогда
		
		Ошибки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПричинаОшибки, Символы.Таб);
		
		Элементы.ЗаголовокКОшибке.Заголовок 	= Ошибки[0];
		Элементы.ТекстОшибки.Заголовок 			= Ошибки[1];
		Элементы.РекомендацияКОшибке.Заголовок 	= НСтр("ru = '
                                                        |Попробуйте устранить причину или отправьте заявление без электронной подписи.';
                                                        |en = '
                                                        |Try to resolve the error or send the application without digital signature.'");
		Элементы.БезЭлектроннойПодписи.КнопкаПоУмолчанию = Истина;
		Элементы.ПустышкаДляВыравнивания.Видимость       = Ложь;
	Иначе
		Элементы.ЗаголовокКОшибке.Заголовок		   = НСтр("ru = 'Не удалось отправить заявление по причине:';
															|en = 'Cannot send the application due to:'");
		Элементы.ТекстОшибки.Заголовок 			   = ПричинаОшибки;
		Элементы.ФормаЗакрыть.КнопкаПоУмолчанию    = Истина;
		Элементы.БезЭлектроннойПодписи.Видимость   = Ложь;
		Элементы.ПустышкаДляВыравнивания.Видимость = Истина;
	КонецЕсли;
	
	АктивизироватьСтраницу(Элементы.ОписаниеОшибки);
	
КонецПроцедуры

&НаСервере
Процедура АктивизироватьСтраницу(ТекущаяСтраница)
	
	МногостраничныйЭлемент = Элементы.Этапы;
	
	Для каждого Страница Из МногостраничныйЭлемент.ПодчиненныеЭлементы Цикл
		Если Страница = ТекущаяСтраница Тогда
			Страница.Видимость = Истина;
			МногостраничныйЭлемент.ТекущаяСтраница 	= ТекущаяСтраница;
		Иначе
			Страница.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура БезЭлектроннойПодписи(Команда)
	
	Оповестить(НСтр("ru = 'Отправить в бумажном виде';
					|en = 'Send in paper form'"),,Заявление);
	Закрыть();
	
КонецПроцедуры

#КонецОбласти
