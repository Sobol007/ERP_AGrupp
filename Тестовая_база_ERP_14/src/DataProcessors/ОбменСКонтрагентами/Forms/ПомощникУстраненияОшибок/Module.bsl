
#Область ОписаниеПеременных

&НаКлиенте
Перем ИзмененыНастройки;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УсловноеОформление.Элементы.Очистить();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресСведенийОбОшибках") Тогда
		ОшибкиПриФормированииДокументов = ПолучитьИзВременногоХранилища(Параметры.АдресСведенийОбОшибках);
		УдалитьИзВременногоХранилища(Параметры.АдресСведенийОбОшибках);
		
		ОшибкиПриФормированииДокумента = ОшибкиПриФормированииДокументов[0];
		ДанныеДляОбработкиОшибок = ОшибкиПриФормированииДокумента.ДанныеДляОбработкиОшибок;
		
		Документ                 = ДанныеДляОбработкиОшибок.Документ;
		Контрагент               = ДанныеДляОбработкиОшибок.Контрагент;
		НастройкаЭДО             = ДанныеДляОбработкиОшибок.НастройкаЭДО;
		ВидЭлектронногоДокумента = ДанныеДляОбработкиОшибок.ВидЭлектронногоДокумента;
		Формат                   = ДанныеДляОбработкиОшибок.Формат;
		ОшибкиЗаполнения         = ОшибкиПриФормированииДокумента.ОшибкиЗаполнения;
		
		ДополнительныеДанные = Неопределено;
		Если ОшибкиПриФормированииДокумента.Свойство("ДополнительныеДанные", ДополнительныеДанные) Тогда
			КэшДополнительныхДанных = Новый ФиксированнаяСтруктура(ДополнительныеДанные);
		КонецЕсли;
	Иначе
		Документ                 = Параметры.Документ;
		Контрагент               = Параметры.Контрагент;
		НастройкаЭДО             = Параметры.НастройкаЭДО;
		ВидЭлектронногоДокумента = Параметры.ВидЭлектронногоДокумента;
		Формат                   = Параметры.Формат;
		ОшибкиЗаполнения         = Параметры.ОшибкиЗаполнения;
	КонецЕсли;
	
	ПодписатьОтправить = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПодписатьОтправить", Ложь);
	
	КоличествоШагов = 0;
	
	Если ОшибкиЗаполнения.Свойство("ОсновныеПоля") Тогда
		КоличествоШагов = КоличествоШагов + 1;
		ЗаполнитьОписанияОшибокОсновныхПолей(ОшибкиЗаполнения.ОсновныеПоля);
	Иначе
		Элементы.СтраницаОсновныеПоля.Видимость = Ложь;
	КонецЕсли;
	
	Если ОшибкиЗаполнения.Свойство("ДополнительныеПоля") Тогда
		КоличествоШагов = КоличествоШагов + 1;
		ПодготовитьДополнительныеПоляДляЗаполнения(ОшибкиЗаполнения.ДополнительныеПоля);
	Иначе
		Элементы.СтраницаДополнительныеПоля.Видимость = Ложь;
	КонецЕсли;
	
	Если КоличествоШагов = 1 Тогда
		Заголовок = НСтр("ru = 'Помощник заполнения данных';
						|en = 'Data filling wizard'");
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Ложь;
		Элементы.Готово.КнопкаПоУмолчанию = Истина;
	Иначе
		Заголовок = НСтр("ru = 'Помощник заполнения данных (шаг 1 из 2)';
						|en = 'Data filling wizard (step 1 out of 2)'");
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Истина;
		Элементы.Далее.КнопкаПоУмолчанию = Истина;
		Элементы.Готово.Видимость = Ложь;
		Элементы.ГруппаОшибкиЗаполнения.ТекущаяСтраница = Элементы.СтраницаОсновныеПоля;
	КонецЕсли;
	
	Если ПодписатьОтправить Тогда
		Элементы.Готово.Заголовок = НСтр("ru = 'Сформировать и отправить документ';
										|en = 'Generate and send the document'");
	КонецЕсли;
	
	Элементы.КартинкаИнформация.Видимость = Ложь;
	Элементы.НадписьИзмененыНастройки.Видимость = Ложь;
	
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПоказатьОшибкиВычисленияДополнительныхПолей();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура НадписьТребованиеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "НастройкаЗаполненияДополнительныхПолей" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("НастройкаЭДО", НастройкаЭДО);
		ПараметрыФормы.Вставить("ВидЭлектронногоДокумента", ВидЭлектронногоДокумента);
		ПараметрыФормы.Вставить("Формат", Формат);
		
		Оповещение = Новый ОписаниеОповещения("ОбработатьЗавершениеНастройкиЗаполненияДополнительныхПолей", ЭтотОбъект);
		
		ОткрытьФорму("Обработка.ОбменСКонтрагентами.Форма.НастройкаЗаполненияДополнительныхПолей",
			ПараметрыФормы, ЭтотОбъект,,,,Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокОшибок

&НаКлиенте
Процедура СписокОшибокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОшибкиОбъекта = Элемент.ТекущиеДанные.Значение;
	ПоказатьЗначение(, ОшибкиОбъекта[0].КлючСообщения);
	ПодключитьОбработчикОжидания("ПоказатьЗначениеЗавершение", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРазделДополнительныхПолей

&НаКлиенте
Процедура Подключаемый_ЭлементРазделаДополнительныхПолейОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПредставлениеЗначения = Элемент.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение);
	Элемент.Родитель.ТекущиеДанные[Элемент.Имя + "Представление"] = ПредставлениеЗначения;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Назад(Команда)
	
	Заголовок = НСтр("ru = 'Помощник заполнения данных (шаг 1 из 2)';
					|en = 'Data filling wizard (step 1 out of 2)'");
	Элементы.Назад.Видимость = Ложь;
	Элементы.Далее.Видимость = Истина;
	Элементы.Далее.КнопкаПоУмолчанию = Истина;
	Элементы.Готово.Видимость = Ложь;
	Элементы.ГруппаОшибкиЗаполнения.ТекущаяСтраница = Элементы.СтраницаОсновныеПоля;
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Заголовок = НСтр("ru = 'Помощник заполнения данных (шаг 2 из 2)';
					|en = 'Data filling wizard (step 2 out of 2)'");
	Элементы.Назад.Видимость = Истина;
	Элементы.Далее.Видимость = Ложь;
	Элементы.Готово.Видимость = Истина;
	Элементы.Готово.КнопкаПоУмолчанию = Истина;
	Элементы.ГруппаОшибкиЗаполнения.ТекущаяСтраница = Элементы.СтраницаДополнительныеПоля;
	
	ПоказатьОшибкиВычисленияДополнительныхПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	Результат = Новый Структура;
	Результат.Вставить("Документ", Документ);
	
	Если ПодписатьОтправить Тогда
		Действие = "СформироватьУтвердитьПодписатьОтправить";
	Иначе
		Действие = "Сформировать";
	КонецЕсли;
	
	Результат.Вставить("Действие", Действие);
	
	Если ИзмененыНастройки <> Неопределено Тогда
		Результат.Вставить("ДополнительныеДанные");
		
	ИначеЕсли ЗначениеЗаполнено(ИменаРеквизитовПоРазделам) Тогда
		Отказ = Ложь;
		ПроверитьЗаполнениеДополнительныхПолей(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ДополнительныеДанные = ДанныеДополнительныхПолей();
		Если ЗначениеЗаполнено(ДополнительныеДанные) Тогда
			Результат.Вставить("ДополнительныеДанные", ДополнительныеДанные);
		КонецЕсли;
		
	ИначеЕсли КэшДополнительныхДанных <> Неопределено Тогда
		Результат.Вставить("ДополнительныеДанные", Новый Структура(КэшДополнительныхДанных));
		
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОписанияОшибокОсновныхПолей(ОписанияОшибок)
	
	ОшибкиПоОбъектам = Новый Соответствие;
	Для Каждого ОписаниеОшибки Из ОписанияОшибок Цикл
		
		Если Не ЗначениеЗаполнено(ОписаниеОшибки.КлючСообщения) Тогда
			ОписаниеОшибки.КлючСообщения = Документ;
		КонецЕсли;
		
		ОшибкиОбъекта = ОшибкиПоОбъектам[ОписаниеОшибки.КлючСообщения];
		Если ОшибкиОбъекта = Неопределено Тогда
			ОшибкиПоОбъектам.Вставить(ОписаниеОшибки.КлючСообщения,
				ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОписаниеОшибки));
		Иначе
			ОшибкиОбъекта.Добавить(ОписаниеОшибки);
		КонецЕсли;
	КонецЦикла;
	
	МассивСтрок = Новый Массив(2);
	Для Каждого ОшибкиОбъекта Из ОшибкиПоОбъектам Цикл
		МассивСтрок[1] = ОшибкиОбъекта.Ключ;
		МассивСтрок[0] = МассивСтрок[1].Метаданные().ПредставлениеОбъекта;
		СписокОшибок.Добавить(ОшибкиОбъекта.Значение, СтрСоединить(МассивСтрок, " "));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЗначениеЗавершение()
	
	ОшибкиОбъекта = Элементы.СписокОшибок.ТекущиеДанные.Значение;
	Для Каждого ОписаниеОшибки Из ОшибкиОбъекта Цикл
		Поле = "";
		ПутьКДанным = "";
		Если ЗначениеЗаполнено(ОписаниеОшибки.ПутьКДаннымСообщения) Тогда
			СоставляющиеПути = СтрРазделить(ОписаниеОшибки.ПутьКДаннымСообщения, ".");
			Если СоставляющиеПути.Количество() = 1 Тогда
				Поле = СоставляющиеПути[0];
			Иначе
				ПутьКДанным = СоставляющиеПути[0];
				СоставляющиеПути.Удалить(0);
				Поле = СтрСоединить(СоставляющиеПути, ".");
			КонецЕсли;
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ОписаниеОшибки.ТекстОшибки, ОписаниеОшибки.КлючСообщения, Поле, ПутьКДанным);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДополнительныеПоляДляЗаполнения(ДополнительныеПоля)
	
	МассивРеквизитовПоРазделам = Новый Массив;
	
	ТекстОшибки = Неопределено;
	
	НастройкаЗаполнения = ОбменСКонтрагентамиВнутренний.НастройкаЗаполненияДополнительныхПолей(
		НастройкаЭДО, ВидЭлектронногоДокумента, Формат, ТекстОшибки);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	РазделыДополнительныхПолей = ОбменСКонтрагентамиВнутренний.РазделыДополнительныхПолейФорматаЭлектронногоДокумента(
		ВидЭлектронногоДокумента, Формат);
	
	НастройкиПолейРазделовШапки  = Новый Соответствие;
	НастройкиПолейРазделовТаблиц = Новый Соответствие;
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	Для Каждого Раздел Из РазделыДополнительныхПолей Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Раздел", Раздел.Имя);
		НастройкиПолей = НастройкаЗаполнения.НайтиСтроки(ПараметрыОтбора);
		Если НастройкиПолей.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Раздел.Тип = ОбменСКонтрагентамиСлужебныйКлиентСервер.ТипРазделаДополнительныхПолейШапка() Тогда
			
			НастройкиПолейРазделовШапки.Вставить(Раздел, НастройкиПолей);
			
			СоздатьРеквизитыДополнительныхПолейШапки(НастройкиПолей, ДобавляемыеРеквизиты);
			
		ИначеЕсли Раздел.Тип = ОбменСКонтрагентамиСлужебныйКлиентСервер.ТипРазделаДополнительныхПолейТаблица() Тогда
			
			НастройкиПолейРазделовТаблиц.Вставить(Раздел, НастройкиПолей);
			
			СоздатьРеквизитыДополнительныхПолейТаблицы(НастройкиПолей, ДобавляемыеРеквизиты);
			
		КонецЕсли;
		
		ЗаполнитьИменаРеквизитовПоРазделу(МассивРеквизитовПоРазделам, НастройкиПолей, Раздел);
		
	КонецЦикла;
	
	Если ДобавляемыеРеквизиты.Количество() Тогда
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		ИменаРеквизитовПоРазделам = Новый ФиксированныйМассив(МассивРеквизитовПоРазделам);
	Иначе
		Возврат;
	КонецЕсли;
	
	НесколькоРазделовШапки  = НастройкиПолейРазделовШапки.Количество() > 1;
	НесколькоРазделовТаблиц = НастройкиПолейРазделовТаблиц.Количество()> 1;
	
	Если НесколькоРазделовШапки И НесколькоРазделовТаблиц Тогда
		ГруппаРодительПолейШапки = Элементы.ГруппаРазделовОбщая;
		ГруппаРодительПолейТаблицы = Элементы.ГруппаРазделовОбщая;
	Иначе
		ГруппаРодительПолейШапки   = Элементы.ГруппаРазделовШапка;
		ГруппаРодительПолейТаблицы = Элементы.ГруппаРазделовТаблица;
		ГруппаРодительПолейШапки.ОтображениеСтраниц = ?(НесколькоРазделовШапки,
			ОтображениеСтраницФормы.ЗакладкиСверху, ОтображениеСтраницФормы.Нет);
		ГруппаРодительПолейТаблицы.ОтображениеСтраниц = ?(НесколькоРазделовТаблиц,
			ОтображениеСтраницФормы.ЗакладкиСверху, ОтображениеСтраницФормы.Нет);
	КонецЕсли;
	
	Для Каждого НастройкиПолейРаздела Из НастройкиПолейРазделовШапки Цикл
		ИмяРаздела = НастройкиПолейРаздела.Ключ.Имя;
		ДанныеРаздела = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПоля.Данные, ИмяРаздела);
		ОшибкиРаздела = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПоля.Ошибки, ИмяРаздела);
		
		СоздатьЭлементыДополнительныхПолейШапки(ГруппаРодительПолейШапки, НастройкиПолейРаздела);
		ЗаполнитьДанныеДополнительныхПолейШапки(ДанныеРаздела);
		ЗаполнитьОшибкиВычисленияДополнительныхПолейШапки(ОшибкиРаздела);
	КонецЦикла;
	
	Для Каждого НастройкиПолейРаздела Из НастройкиПолейРазделовТаблиц Цикл
		ИмяРаздела = НастройкиПолейРаздела.Ключ.Имя;
		ДанныеРаздела = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПоля.Данные, ИмяРаздела);
		ОшибкиРаздела = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПоля.Ошибки, ИмяРаздела);
	
		СоздатьЭлементыДополнительныхПолейТаблицы(ГруппаРодительПолейТаблицы, НастройкиПолейРаздела);
		ЗаполнитьДанныеДополнительныхПолейТаблицы(ДанныеРаздела, НастройкиПолейРаздела);
		ЗаполнитьОшибкиВычисленияДополнительныхПолейТаблицы(ОшибкиРаздела, НастройкиПолейРаздела);
	КонецЦикла;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
		СтрШаблон(НСтр("ru = '%1 требует заполнения дополнительных данных в электронных документах.';
						|en = '%1 requires filling additional data in electronic documents.'"), Контрагент)));
	
	Если ОбменСКонтрагентамиСлужебныйВызовСервера.ЕстьПравоНастройкиОбмена() Тогда
		
		МассивСтрок.Добавить(Символы.ПС);
		
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
			НСтр("ru = 'Заполните их вручную или настройте';
				|en = 'Fill them in manually or set up'")));
		
		МассивСтрок.Добавить(" ");
		
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(
			НСтр("ru = 'правила автоматического заполнения.';
				|en = 'automatic filling rules.'"),,,,
			"НастройкаЗаполненияДополнительныхПолей"));
		
	КонецЕсли;
	
	Элементы.НадписьТребование.Заголовок = Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыДополнительныхПолейШапки(НастройкиПолей, ДобавляемыеРеквизиты)
	
	Для Каждого НастройкаПоля Из НастройкиПолей Цикл
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(
			НастройкаПоля.Идентификатор, ТипРеквизитаПоВариантуЗаполнения(НастройкаПоля)));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыДополнительныхПолейТаблицы(НастройкиПолей, ДобавляемыеРеквизиты)
	
	ИмяТаблицыРаздела = "Таблица" + НастройкиПолей[0].Раздел;
	
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(
		ИмяТаблицыРаздела, Новый ОписаниеТипов("ТаблицаЗначений")));
	
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("НомерСтроки", Новый ОписаниеТипов("Число",
		Новый КвалификаторыЧисла(3, 0, ДопустимыйЗнак.Неотрицательный)), ИмяТаблицыРаздела));
	
	Если НастройкиПолей[0].Раздел = "ТоварыУслуги" Тогда
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Номенклатура",
			Метаданные.ОпределяемыеТипы["НоменклатураБЭД"].Тип, ИмяТаблицыРаздела));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Характеристика",
			Метаданные.ОпределяемыеТипы["ХарактеристикаНоменклатурыБЭД"].Тип, ИмяТаблицыРаздела));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Упаковка",
			Метаданные.ОпределяемыеТипы["УпаковкаНоменклатурыБЭД"].Тип, ИмяТаблицыРаздела));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Сумма",
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)), ИмяТаблицыРаздела));
	КонецЕсли;
	
	Для Каждого НастройкаПоля Из НастройкиПолей Цикл
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(НастройкаПоля.Идентификатор,
			ТипРеквизитаПоВариантуЗаполнения(НастройкаПоля), ИмяТаблицыРаздела));
		Если НастройкаПоля.Заполнение = "ИзСписка" Тогда
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(НастройкаПоля.Идентификатор + "Представление",
				Новый ОписаниеТипов("Строка"), ИмяТаблицыРаздела));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ТипРеквизитаПоВариантуЗаполнения(НастройкаПоля)
	
	Если НастройкаПоля.Заполнение = "ВручнуюДатой" Тогда
		ТипРеквизита = Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));
	ИначеЕсли НастройкаПоля.Заполнение = "ВручнуюЧислом" Тогда
		Если ЗначениеЗаполнено(НастройкаПоля.Значение) Тогда
			ПараметрыЧисла = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(
				СтрЗаменить(НастройкаПоля.Значение,"'",""));
			Длина = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЧисла, "ЧЦ", 15);
			Точность = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЧисла, "ЧДЦ", 0);
			ТипРеквизита = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(Длина, Точность));
		Иначе
			ТипРеквизита = Новый ОписаниеТипов("Число");
		КонецЕсли;
	Иначе
		ТипРеквизита = Новый ОписаниеТипов("Строка");
	КонецЕсли;
	
	Возврат ТипРеквизита;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьИменаРеквизитовПоРазделу(МассивРеквизитовПоРазделам, НастройкиПолей, Раздел)
	
	ИменаРеквизитов = Новый Массив;
	Для Каждого НастройкаПоля Из НастройкиПолей Цикл
		ИменаРеквизитов.Добавить(НастройкаПоля.Идентификатор);
	КонецЦикла;
	
	РеквизитыРаздела = Новый Структура;
	РеквизитыРаздела.Вставить("ИмяРаздела", Раздел.Имя);
	РеквизитыРаздела.Вставить("ТипРаздела", Раздел.Тип);
	РеквизитыРаздела.Вставить("ИменаРеквизитов", ИменаРеквизитов);
	
	МассивРеквизитовПоРазделам.Добавить(РеквизитыРаздела);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыДополнительныхПолейШапки(ГруппаРодительПолейШапки, НастройкиПолейРаздела)
	
	Раздел = НастройкиПолейРаздела.Ключ;
	НастройкиПолей = НастройкиПолейРаздела.Значение;
	
	СтраницаРаздела = Элементы.Добавить("Страница" + Раздел.Имя, Тип("ГруппаФормы"), ГруппаРодительПолейШапки);
	СтраницаРаздела.Вид = ВидГруппыФормы.Страница;
	СтраницаРаздела.Заголовок = Раздел.Представление;
	СтраницаРаздела.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно;
	
	ГруппаРазделаЛево = Элементы.Добавить("ГруппаЛево" + Раздел.Имя, Тип("ГруппаФормы"), СтраницаРаздела);
	ГруппаРазделаЛево.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаРазделаЛево.ОтображатьЗаголовок = Ложь;
	ГруппаРазделаЛево.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	ГруппаРазделаПраво = Элементы.Добавить("ГруппаПраво" + Раздел.Имя, Тип("ГруппаФормы"), СтраницаРаздела);
	ГруппаРазделаПраво.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаРазделаПраво.ОтображатьЗаголовок = Ложь;
	ГруппаРазделаПраво.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	КоличествоЭлементовВГруппе = Окр(НастройкиПолей.Количество() / 2);
	
	НомерЭлемента = 1;
	
	Для Каждого НастройкаПоля Из НастройкиПолей Цикл
		ГруппаЭлементов = ?(НомерЭлемента <= КоличествоЭлементовВГруппе, ГруппаРазделаЛево, ГруппаРазделаПраво);
		ИмяЭлемента = НастройкаПоля.Идентификатор;
		ЭлементГруппы = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ГруппаЭлементов);
		ЗаполнитьСвойстваПоляФормы(ЭлементГруппы, НастройкаПоля, ИмяЭлемента);
		
		НомерЭлемента = НомерЭлемента + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыДополнительныхПолейТаблицы(ГруппаРодительПолейТаблицы, НастройкиПолейРаздела)
	
	Раздел = НастройкиПолейРаздела.Ключ;
	НастройкиПолей = НастройкиПолейРаздела.Значение;
	
	СтраницаРаздела = Элементы.Добавить("Страница" + Раздел.Имя, Тип("ГруппаФормы"), ГруппаРодительПолейТаблицы);
	СтраницаРаздела.Вид = ВидГруппыФормы.Страница;
	СтраницаРаздела.Заголовок = Раздел.Представление;
	СтраницаРаздела.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	
	ИмяТаблицыРаздела = "Таблица" + Раздел.Имя;
	ТаблицаРаздела = Элементы.Добавить(ИмяТаблицыРаздела, Тип("ТаблицаФормы"), СтраницаРаздела);
	ТаблицаРаздела.ПутьКДанным = ИмяТаблицыРаздела;
	ТаблицаРаздела.ИзменятьСоставСтрок  = Ложь;
	ТаблицаРаздела.ИзменятьПорядокСтрок = Ложь;
	ТаблицаРаздела.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	
	КолонкаТаблицы = Элементы.Добавить(ИмяТаблицыРаздела + "НомерСтроки", Тип("ПолеФормы"), ТаблицаРаздела);
	КолонкаТаблицы.ПутьКДанным = ИмяТаблицыРаздела + ".НомерСтроки";
	КолонкаТаблицы.Заголовок = НСтр("ru = 'N';
									|en = 'N'");
	
	Если Раздел.Имя = "ТоварыУслуги" Тогда
		ГруппаКолонок = Элементы.Добавить(ИмяТаблицыРаздела + "ГруппаНоменклатура", Тип("ГруппаФормы"), ТаблицаРаздела);
		ГруппаКолонок.Группировка = ГруппировкаКолонок.ВЯчейке;
		
		КолонкаТаблицы = Элементы.Добавить(ИмяТаблицыРаздела + "Номенклатура", Тип("ПолеФормы"), ГруппаКолонок);
		КолонкаТаблицы.ПутьКДанным = ИмяТаблицыРаздела + ".Номенклатура";
		
		КолонкаТаблицы = Элементы.Добавить(ИмяТаблицыРаздела + "Характеристика", Тип("ПолеФормы"), ГруппаКолонок);
		КолонкаТаблицы.ПутьКДанным = ИмяТаблицыРаздела + ".Характеристика";
		КолонкаТаблицы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		КолонкаТаблицы = Элементы.Добавить(ИмяТаблицыРаздела + "Упаковка", Тип("ПолеФормы"), ГруппаКолонок);
		КолонкаТаблицы.ПутьКДанным = ИмяТаблицыРаздела + ".Упаковка";
		КолонкаТаблицы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		КолонкаТаблицы = Элементы.Добавить(ИмяТаблицыРаздела + "Сумма", Тип("ПолеФормы"), ТаблицаРаздела);
		КолонкаТаблицы.ПутьКДанным = ИмяТаблицыРаздела + ".Сумма";
		КолонкаТаблицы.Ширина = 7;
	КонецЕсли;
	
	Для Каждого НастройкаПоля Из НастройкиПолей Цикл
		КолонкаТаблицы = Элементы.Добавить(НастройкаПоля.Идентификатор, Тип("ПолеФормы"), ТаблицаРаздела);
		ЗаполнитьСвойстваПоляФормы(КолонкаТаблицы, НастройкаПоля, ИмяТаблицыРаздела + "." + НастройкаПоля.Идентификатор);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСвойстваПоляФормы(Элемент, НастройкаПоля, ПутьКДанным)
	
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.ПутьКДанным = ПутьКДанным;
	Если ЗначениеЗаполнено(НастройкаПоля.Представление) Тогда
		Элемент.Заголовок = НастройкаПоля.Представление;
	Иначе
		Элемент.Заголовок = НастройкаПоля.Имя;
	КонецЕсли;
	Элемент.Подсказка = НастройкаПоля.Описание;
	Элемент.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
	Элемент.АвтоОтметкаНезаполненного = Истина;
	Если НастройкаПоля.Заполнение = "ВручнуюДатой"
		ИЛИ НастройкаПоля.Заполнение = "ВручнуюЧислом" Тогда
		Элемент.Формат = НастройкаПоля.Значение;
		Элемент.ФорматРедактирования = НастройкаПоля.Значение;
	ИначеЕсли НастройкаПоля.Заполнение = "ИзСписка" Тогда
		Элемент.РежимВыбораИзСписка = Истина;
		Если ЗначениеЗаполнено(НастройкаПоля.Значение) Тогда
			Для Каждого Вариант Из НастройкаПоля.Значение Цикл
				ЗаполнитьЗначенияСвойств(Элемент.СписокВыбора.Добавить(), Вариант);
			КонецЦикла;
		КонецЕсли;
		Если СтрНайти(ПутьКДанным, ".") Тогда
			Элемент.УстановитьДействие("ОбработкаВыбора", "Подключаемый_ЭлементРазделаДополнительныхПолейОбработкаВыбора");
			УстановитьУсловноеОформлениеДляЭлементаСВыборомИзСписка(Элемент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеДляЭлементаСВыборомИзСписка(Элемент)
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элемент.Имя);
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элемент.ПутьКДанным + "Представление");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Текст", ОтборЭлемента.ЛевоеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДополнительныхПолейШапки(ДанныеРаздела)
	
	Если Не ЗначениеЗаполнено(ДанныеРаздела) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеРаздела);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДополнительныхПолейТаблицы(ДанныеРаздела, НастройкиПолейРаздела)
	
	Если Не ЗначениеЗаполнено(ДанныеРаздела) Тогда
		Возврат;
	КонецЕсли;
	
	Раздел = НастройкиПолейРаздела.Ключ;
	ИмяТаблицыРаздела = "Таблица" + Раздел.Имя;
	
	НомерСтроки = 1;
	
	Для Каждого ДанныеСтроки Из ДанныеРаздела Цикл
		
		НоваяСтрока = ЭтотОбъект[ИмяТаблицыРаздела].Добавить();
		
		ЗначениеСвойства = Неопределено;
		Если ДанныеСтроки.Свойство("КлючСтроки", ЗначениеСвойства) Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗначениеСвойства);
		КонецЕсли;
		
		Если ДанныеСтроки.Свойство("ЗначенияПолей", ЗначениеСвойства) Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ЗначениеСвойства);
		КонецЕсли;
		
		НоваяСтрока.НомерСтроки = НомерСтроки;
		
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОшибкиВычисленияДополнительныхПолейШапки(ОшибкиРаздела)
	
	Если Не ЗначениеЗаполнено(ОшибкиРаздела) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Ошибка Из ОшибкиРаздела Цикл
		ОшибкиВычисленияДополнительныхПолей.Добавить(Ошибка.Ключ, Ошибка.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОшибкиВычисленияДополнительныхПолейТаблицы(ОшибкиРаздела, НастройкиПолейРаздела)
	
	Если Не ЗначениеЗаполнено(ОшибкиРаздела) Тогда
		Возврат;
	КонецЕсли;
	
	Раздел = НастройкиПолейРаздела.Ключ;
	ИмяТаблицыРаздела = "Таблица" + Раздел.Имя;
	
	Для Каждого ОшибкиПоСтроке Из ОшибкиРаздела Цикл
		Для Каждого Ошибка Из ОшибкиПоСтроке.Значение Цикл
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТаблицыРаздела, ОшибкиПоСтроке.Ключ, Ошибка.Ключ);
			ОшибкиВычисленияДополнительныхПолей.Добавить(Поле, Ошибка.Значение);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОшибкиВычисленияДополнительныхПолей()
	
	Если Элементы.ГруппаОшибкиЗаполнения.ТекущаяСтраница <> Элементы.СтраницаДополнительныеПоля
		ИЛИ ОшибкиВычисленияДополнительныхПолей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Ошибка Из ОшибкиВычисленияДополнительныхПолей Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка.Представление,,Ошибка.Значение);
	КонецЦикла;
	
	ОшибкиВычисленияДополнительныхПолей.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗавершениеНастройкиЗаполненияДополнительныхПолей(Результат, Контекст) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзмененыНастройки = Истина;
	
	Если ПодписатьОтправить Тогда
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(НСтр("ru = 'Изменены настройки заполнения дополнительных полей.';
									|en = 'Additional fields filling settings are changed.'"));
		МассивСтрок.Добавить(
			СтрШаблон(НСтр("ru = 'Для того чтобы сформировать документ с новыми настройками, нажмите ""%1"".';
							|en = 'To generate a document with new settings, click ""%1"".'")
				,Элементы.Готово.Заголовок));
		
		Элементы.НадписьИзмененыНастройки.Заголовок = СтрСоединить(МассивСтрок, Символы.ПС);
	КонецЕсли;
	
	Элементы.КартинкаИнформация.Видимость = Истина;
	Элементы.НадписьИзмененыНастройки.Видимость = Истина;
	Элементы.ГруппаРазделовШапка.Доступность = Ложь;
	Элементы.ГруппаРазделовТаблица.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеДополнительныхПолей(Отказ)
	
	Для Каждого РеквизитыРаздела Из ИменаРеквизитовПоРазделам Цикл
		
		Если РеквизитыРаздела.ТипРаздела = 
			ОбменСКонтрагентамиСлужебныйКлиентСервер.ТипРазделаДополнительныхПолейШапка() Тогда
			
			ПроверитьЗаполнениеДополнительныхПолейШапки(РеквизитыРаздела.ИменаРеквизитов, Отказ);
			
		ИначеЕсли РеквизитыРаздела.ТипРаздела = 
			ОбменСКонтрагентамиСлужебныйКлиентСервер.ТипРазделаДополнительныхПолейТаблица() Тогда
			
			ПроверитьЗаполнениеДополнительныхПолейТаблицы(РеквизитыРаздела.ИменаРеквизитов, РеквизитыРаздела.ИмяРаздела, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеДополнительныхПолейШапки(ИменаРеквизитов, Отказ)
	
	Для Каждого ИмяРеквизита Из ИменаРеквизитов Цикл
		
		Если Не ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Поле ""%1"" не заполнено.';
											|en = 'The ""%1"" field is not filled in.'"),
				Элементы[ИмяРеквизита].Заголовок);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,ИмяРеквизита,,Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеДополнительныхПолейТаблицы(ИменаРеквизитов, ИмяРаздела, Отказ)
	
	ИмяТаблицыРаздела = "Таблица" + ИмяРаздела;
	
	НомерСтроки = 1;
	Для Каждого СтрокаТаблицы Из ЭтотОбъект[ИмяТаблицыРаздела] Цикл
		
		Для Каждого ИмяРеквизита Из ИменаРеквизитов Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаТаблицы[ИмяРеквизита]) Тогда
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТаблицыРаздела, НомерСтроки, ИмяРеквизита);
				ТекстСообщения = СтрШаблон(НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2';
												|en = 'The ""%1"" column is not filled in the %2 line'"),
					Элементы[ИмяРеквизита].Заголовок, НомерСтроки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,,Отказ);
			КонецЕсли;
			
		КонецЦикла;
		
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ДанныеДополнительныхПолей()
	
	ДополнительныеДанные = Новый Структура;
	
	Для Каждого РеквизитыРаздела Из ИменаРеквизитовПоРазделам Цикл
		
		Если РеквизитыРаздела.ТипРаздела =
			ОбменСКонтрагентамиСлужебныйКлиентСервер.ТипРазделаДополнительныхПолейШапка() Тогда
			
			ДанныеРаздела = ДанныеДополнительныхПолейШапки(РеквизитыРаздела.ИменаРеквизитов);
			
		ИначеЕсли РеквизитыРаздела.ТипРаздела =
			ОбменСКонтрагентамиСлужебныйКлиентСервер.ТипРазделаДополнительныхПолейТаблица() Тогда
			
			ДанныеРаздела = ДанныеДополнительныхПолейТаблицы(РеквизитыРаздела.ИменаРеквизитов, РеквизитыРаздела.ИмяРаздела);
			
		КонецЕсли;
		
		ДополнительныеДанные.Вставить(РеквизитыРаздела.ИмяРаздела, ДанныеРаздела);
		
	КонецЦикла;
	
	Возврат ДополнительныеДанные;
	
КонецФункции

&НаКлиенте
Функция ДанныеДополнительныхПолейШапки(ИменаРеквизитов)
	
	ДанныеРаздела = Новый Структура;
	Для Каждого ИмяРеквизита Из ИменаРеквизитов Цикл
		ДанныеРаздела.Вставить(ИмяРеквизита, ЭтотОбъект[ИмяРеквизита]);
	КонецЦикла;
	
	Возврат ДанныеРаздела;
	
КонецФункции

&НаКлиенте
Функция ДанныеДополнительныхПолейТаблицы(ИменаРеквизитов, ИмяРаздела)
	
	ДанныеРаздела = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ЭтотОбъект["Таблица" + ИмяРаздела] Цикл
		
		ДанныеСтроки = Новый Структура;
		
		Если ИмяРаздела = "ТоварыУслуги" Тогда
			КлючСтроки = Новый Структура("Номенклатура, Характеристика, Упаковка, Сумма");
			ЗаполнитьЗначенияСвойств(КлючСтроки, СтрокаТаблицы);
			ДанныеСтроки.Вставить("КлючСтроки", КлючСтроки);
		КонецЕсли;
		
		ЗначенияПолей = Новый Структура;
		Для Каждого ИмяРеквизита Из ИменаРеквизитов Цикл
			ЗначенияПолей.Вставить(ИмяРеквизита, СтрокаТаблицы[ИмяРеквизита]);
		КонецЦикла;
		ДанныеСтроки.Вставить("ЗначенияПолей", ЗначенияПолей);
		
		ДанныеРаздела.Добавить(ДанныеСтроки);
		
	КонецЦикла;
	
	Возврат ДанныеРаздела;
	
КонецФункции

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить("Обработка.ОбменСКонтрагентами.Форма.ПомощникУстраненияОшибок", "", ИмяПользователя);
	КонецЕсли;
	
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти
