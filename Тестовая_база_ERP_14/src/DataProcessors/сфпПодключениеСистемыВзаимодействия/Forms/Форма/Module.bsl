
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ ПравоДоступа("РегистрацияИнформационнойБазыСистемыВзаимодействия", Метаданные) Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	сфпВариантПодключения = Константы.сфпВариантПодключенияСервераВзаимодействия.Получить();
	
	Если НЕ ЗначениеЗаполнено(сфпВариантПодключения) ИЛИ сфпВариантПодключения = "РАРУС" Тогда
		ВариантПодключения = 1;
		
	ИначеЕсли сфпВариантПодключения = "1С" Тогда
		ВариантПодключения = 0;

	Иначе	
		ВариантПодключения = 2;
		АдресСервера = сфпВариантПодключения;
	КонецЕсли;
	
	ВариантПодключения = 0;
	
	КонтейнерСостояний = Новый Структура();
	КонтейнерСостояний.Вставить("СерверВзаимодействия", СтрокаПодключения(ВариантПодключения, АдресСервера));
	КонтейнерСостояний.Вставить("ИмяИнформационнойБазы", Метаданные.КраткаяИнформация);
	КонтейнерСостояний.Вставить("СостояниеРегистрации", ТекущееСостояниеРегистрации());
	// Возможные значения:
	// "НеЗарегистрирована"
	// "Зарегистрирована"
	// "ОжиданиеВводаКодаПодтверждения"
	// "ОжиданиеОтветаСервераВзаимодействия".
	
	ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
	
	ТекущийПользователь = сфпСофтФонПроСервер.сфпТекущийПользователь();
	
	Если Метаданные.РегистрыСведений.Найти("CRM_УчетныеЗаписиЭлектроннойПочты") <> Неопределено Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	УчетнаяЗапись,
		|	УчетнаяЗапись.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты,
		|	Основная,
		|	Администрирование,
		|	Запись
		|ИЗ
		|	РегистрСведений.CRM_УчетныеЗаписиЭлектроннойПочты
		|ГДЕ
		|	Пользователь = &Пользователь
		|	И УчетнаяЗапись.ИспользоватьДляПолучения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Основная");
		Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			УчетнаяЗапись = Выборка.УчетнаяЗапись;
			АдресЭлектроннойПочты = Выборка.АдресЭлектроннойПочты;

			Элементы.Страницы.ТекущаяСтраница = Элементы.ДлительнаяОперация;
			
			Элементы.Назад.Видимость = Ложь;
			Элементы.ОтменаАвторегистрации.Видимость = Истина;
			Элементы.ПраваяКоманднаяПанель.Видимость = Ложь;
			
			Прервать;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Зарегистрироваться(Команда)
	
	Если ВариантПодключения = 2 И ПустаяСтрока(АдресСервера) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Адрес Сервера взаимодействия не заполнен'"));
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(АдресЭлектроннойПочты) Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'Адрес электронной почты не заполнен'"));
		Возврат;
	КонецЕсли;
	
	Если Не сфпОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(АдресЭлектроннойПочты) Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'Адрес электронной почты содержит ошибки'"));
		Возврат;
	КонецЕсли;
	
	КонтейнерСостояний.СерверВзаимодействия = СтрокаПодключения(ВариантПодключения, АдресСервера);
	СохранитьАдресСервера(ВариантПодключения, АдресСервера);
	
	СостояниеРегистрации = КонтейнерСостояний.СостояниеРегистрации;
	
	Если СостояниеРегистрации = "НеЗарегистрирована" Тогда 
		ПриПолученииКодаРегистрации();
	ИначеЕсли СостояниеРегистрации = "ОжиданиеВводаКодаПодтверждения" Тогда 
		ПриРегистрации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	СостояниеРегистрации = КонтейнерСостояний.СостояниеРегистрации;
	
	Если СостояниеРегистрации = "ОжиданиеВводаКодаПодтверждения" Тогда 
		ПриОтказеОтВводаКодаПодтверждения();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеОбработчикиСобытий

&НаКлиенте
Процедура ПриПолученииКодаРегистрации()
	
	СерверВзаимодействия = КонтейнерСостояний.СерверВзаимодействия;
	
	ПараметрыРегистрации = Новый ПараметрыРегистрацииИнформационнойБазыСистемыВзаимодействия;
	ПараметрыРегистрации.АдресСервера = СерверВзаимодействия;
	ПараметрыРегистрации.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
	
	Оповещение = Новый ОписаниеОповещения("ПослеУспешногоПолученияКодаРегистрации", ЭтотОбъект,,
		"ПриОбработкеОшибкиПолученияКодаРегистрации", ЭтотОбъект);
	
	Попытка
		СистемаВзаимодействия.НачатьРегистрациюИнформационнойБазы(Оповещение, ПараметрыРегистрации);
	Исключение
		КонтейнерСостояний.СостояниеРегистрации = "НеЗарегистрирована";
		ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
		
		Возврат;
	КонецПопытки;
	
	КонтейнерСостояний.СостояниеРегистрации = "ОжиданиеОтветаСервераВзаимодействия";
	ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУспешногоПолученияКодаРегистрации(РегистрацияВыполнена, ТекстСообщения, Контекст) Экспорт
	
	ПоказатьПредупреждение(, ТекстСообщения);
	
	КонтейнерСостояний.СостояниеРегистрации = "ОжиданиеВводаКодаПодтверждения";
	ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОбработкеОшибкиПолученияКодаРегистрации(ИнформацияОбОшибке, СтандартнаяОбработка, Контекст) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке);
	
	КонтейнерСостояний.СостояниеРегистрации = "НеЗарегистрирована";
	ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриРегистрации()
	
	Если ПустаяСтрока(КодРегистрации) Тогда 
		ПоказатьПредупреждение(, НСтр("ru = 'Код регистрации не заполнен'"));
		Возврат;
	КонецЕсли;
	
	СерверВзаимодействия  = КонтейнерСостояний.СерверВзаимодействия;
	ИмяИнформационнойБазы = КонтейнерСостояний.ИмяИнформационнойБазы;
	
	ПараметрыРегистрации = Новый ПараметрыРегистрацииИнформационнойБазыСистемыВзаимодействия;
	ПараметрыРегистрации.АдресСервера = СерверВзаимодействия;
	ПараметрыРегистрации.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
	ПараметрыРегистрации.ИмяИнформационнойБазы = ИмяИнформационнойБазы;
	ПараметрыРегистрации.КодАктивации = СокрЛП(КодРегистрации);
	
	Оповещение = Новый ОписаниеОповещения("ПослеУспешнойРегистрации", ЭтотОбъект,,
		"ПриОбработкеОшибкиРегистрации", ЭтотОбъект);
	
	Попытка
		СистемаВзаимодействия.НачатьРегистрациюИнформационнойБазы(Оповещение, ПараметрыРегистрации);
	Исключение
		КонтейнерСостояний.СостояниеРегистрации = "ОжиданиеВводаКодаПодтверждения";
		ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
		
		Возврат;
	КонецПопытки;
	
	КонтейнерСостояний.СостояниеРегистрации = "ОжиданиеОтветаСервераВзаимодействия";
	ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУспешнойРегистрации(РегистрацияВыполнена, ТекстСообщения, Контекст) Экспорт
	
	Если РегистрацияВыполнена Тогда 
		Оповестить("ОбсужденияПодключены", Истина);
		КонтейнерСостояний.СостояниеРегистрации = "Зарегистрирована";
	Иначе 
		ПоказатьПредупреждение(, ТекстСообщения);
		КонтейнерСостояний.СостояниеРегистрации = "ОжиданиеВводаКодаПодтверждения";
	КонецЕсли;
	
	ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОбработкеОшибкиРегистрации(ИнформацияОбОшибке, СтандартнаяОбработка, Контекст) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке);
	
	КонтейнерСостояний.СостояниеРегистрации = "ОжиданиеВводаКодаПодтверждения";
	ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОтказеОтВводаКодаПодтверждения()

	Оповещение = Новый ОписаниеОповещения("ПослеПодтвержденияОтказаВводаКодаПодтверждения", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, 
		НСтр("ru = 'При отказе от ввода высланный на электронную почту код станет недействительным.
		           |Продолжение будет возможно только с запросом нового кода.'"), 
		РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияОтказаВводаКодаПодтверждения(РезультатВопроса, Контекст) Экспорт 
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда 
		КонтейнерСостояний.СостояниеРегистрации = "НеЗарегистрирована";
		ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииСостоянияФормы(КонтейнерСостояний, ЭтотОбъект) 
	
	СостояниеРегистрации = КонтейнерСостояний.СостояниеРегистрации;
	
	Если СостояниеРегистрации = "ОжиданиеВводаКодаПодтверждения" Тогда
		ЭтотОбъект.КодРегистрации = "";
	КонецЕсли;
	
	УстановитьСтраницу(КонтейнерСостояний, ЭтотОбъект);
	
	Элементы = ЭтотОбъект.Элементы;
	
	ОбновитьВидимостьКнопокКоманднойПанели(КонтейнерСостояний, 
		Элементы.Зарегистрироваться, Элементы.Закрыть, Элементы.Назад);
	
КонецПроцедуры

#КонецОбласти

#Область МодельПредставления

&НаСервереБезКонтекста
Функция ТекущееСостояниеРегистрации()
	Возврат ?(СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована(), "Зарегистрирована", "НеЗарегистрирована");
КонецФункции

#КонецОбласти

#Область Представления

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСтраницу(КонтейнерСостояний, ЭтотОбъект)
	
	СостояниеРегистрации = КонтейнерСостояний.СостояниеРегистрации;
	Элементы = ЭтотОбъект.Элементы;
	
	Если СостояниеРегистрации = "НеЗарегистрирована" Тогда 
		Элементы.Страницы.ТекущаяСтраница = Элементы.ПредложениеРегистрации;
	ИначеЕсли СостояниеРегистрации = "ОжиданиеВводаКодаПодтверждения" Тогда 
		Элементы.Страницы.ТекущаяСтраница = Элементы.ВводКодаРегистрации;
	ИначеЕсли СостояниеРегистрации = "ОжиданиеОтветаСервераВзаимодействия" Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.ДлительнаяОперация;
	ИначеЕсли СостояниеРегистрации = "Зарегистрирована" Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.РегистрацияЗавершена;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьВидимостьКнопокКоманднойПанели(КонтейнерСостояний,
	Зарегистрироваться, Закрыть, Назад)
	
	СостояниеРегистрации = КонтейнерСостояний.СостояниеРегистрации;
	
	Если СостояниеРегистрации = "НеЗарегистрирована" Тогда 
		Зарегистрироваться.Видимость = Истина;
		Назад.Видимость = Ложь;
	ИначеЕсли СостояниеРегистрации = "ОжиданиеВводаКодаПодтверждения" Тогда 
		Зарегистрироваться.Видимость = Истина;
		Назад.Видимость = Истина;
	ИначеЕсли СостояниеРегистрации = "ОжиданиеОтветаСервераВзаимодействия" Тогда 
		Зарегистрироваться.Видимость = Ложь;
		Назад.Видимость = Ложь;
	ИначеЕсли СостояниеРегистрации = "Зарегистрирована" Тогда 
		Зарегистрироваться.Видимость = Ложь;
		Назад.Видимость = Ложь;
		Закрыть.КнопкаПоУмолчанию = Истина;
		Закрыть.Заголовок = НСтр("ru = 'Готово'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПодключенияПриИзменении(Элемент)
	
	Элементы.АдресСервера.Видимость = (ВариантПодключения = 2);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВариантПодключенияПриИзменении(Элементы.ВариантПодключения);
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.ДлительнаяОперация Тогда
		КонтейнерСостояний.СерверВзаимодействия = СтрокаПодключения(ВариантПодключения, АдресСервера);
		
		Если ВариантПодключения = 1 Тогда
			ИмяИнформационнойБазы = КонтейнерСостояний.ИмяИнформационнойБазы;
					
			ПараметрыРегистрации = Новый ПараметрыРегистрацииИнформационнойБазыСистемыВзаимодействия;
			ПараметрыРегистрации.АдресСервера = КонтейнерСостояний.СерверВзаимодействия;
			ПараметрыРегистрации.АдресЭлектроннойПочты = "rarus@rarus";
			ПараметрыРегистрации.ИмяИнформационнойБазы = ИмяИнформационнойБазы;
			ПараметрыРегистрации.КодАктивации = "";
			
			Попытка
				Оповещение = Новый ОписаниеОповещения("ПослеУспешнойАвторегистрации", ЭтаФорма,, "ПриОбработкеОшибкиАвторегистрации", ЭтаФорма);
				СистемаВзаимодействия.НачатьРегистрациюИнформационнойБазы(Оповещение, ПараметрыРегистрации);
			Исключение
				ПродолжитьРегистрациюВРучную();
			КонецПопытки;
			
		Иначе
			ПараметрыРегистрации = Новый ПараметрыРегистрацииИнформационнойБазыСистемыВзаимодействия;
			ПараметрыРегистрации.АдресСервера = КонтейнерСостояний.СерверВзаимодействия;
			ПараметрыРегистрации.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
			
			Попытка
				Оповещение = Новый ОписаниеОповещения("ПослеУспешногоЗапросаКодаРегистрации", ЭтаФорма,, "ПриОбработкеОшибкиЗапросаКодаРегистрации", ЭтаФорма);
				СистемаВзаимодействия.НачатьРегистрациюИнформационнойБазы(Оповещение, ПараметрыРегистрации);
			Исключение
				ПродолжитьРегистрациюВРучную();
			КонецПопытки;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУспешногоЗапросаКодаРегистрации(РегистрацияВыполнена, ТекстСообщения, Контекст) Экспорт
	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьПочту", 15, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриОбработкеОшибкиЗапросаКодаРегистрации(ИнформацияОбОшибке, СтандартнаяОбработка, Контекст) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке);
	
	ПродолжитьРегистрациюВРучную();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьРегистрациюВРучную()
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.ПредложениеРегистрации;

	Элементы.Назад.Видимость = Истина;
	Элементы.ОтменаАвторегистрации.Видимость = Ложь;
	Элементы.ПраваяКоманднаяПанель.Видимость = Истина;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьПочту()
	
	ПолученоПисем = 0;
	ДоступноУчетныхЗаписей = 0;
	ЕстьОшибки = Ложь;
	
	СписокПолученныхПисем = Новый СписокЗначений();
	
	Результат = ПолучитьПочтуНаСервере(ПолученоПисем, ДоступноУчетныхЗаписей, ЕстьОшибки, СписокПолученныхПисем, УчетнаяЗапись);
	
	Если НЕ Результат.ЗаданиеВыполнено Тогда
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилищаЗадания = Результат.АдресХранилища;
		
		//ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗаданияПолученияПочты", 1, Истина);
		//ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтотОбъект, ИдентификаторЗадания);
		
	Иначе
		//Элементы.СписокПисем.Обновить();
		//ПоказатьОповещениеПользователя(,,НСтр("ru='Почта получена ...';en='Mail received ...'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗаданияПолученияПочты()
	
	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
			Результат = ПолучитьИзВременногоХранилища(АдресХранилищаЗадания);
			Если ТипЗнч(Результат) = Тип("Строка") И ЗначениеЗаполнено(Результат) Тогда 
				КодРегистрации = ПолучитьКодРегистрацииИзПисьма(УчетнаяЗапись);
				Если ЗначениеЗаполнено(КодРегистрации) Тогда
					СерверВзаимодействия  = КонтейнерСостояний.СерверВзаимодействия;
					ИмяИнформационнойБазы = КонтейнерСостояний.ИмяИнформационнойБазы;
					
					ПараметрыРегистрации = Новый ПараметрыРегистрацииИнформационнойБазыСистемыВзаимодействия;
					ПараметрыРегистрации.АдресСервера = СерверВзаимодействия;
					ПараметрыРегистрации.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
					ПараметрыРегистрации.ИмяИнформационнойБазы = ИмяИнформационнойБазы;
					ПараметрыРегистрации.КодАктивации = СокрЛП(КодРегистрации);
					
					Оповещение = Новый ОписаниеОповещения("ПослеУспешнойАвторегистрации", ЭтаФорма,, "ПриОбработкеОшибкиАвторегистрации", ЭтаФорма);
					СистемаВзаимодействия.НачатьРегистрациюИнформационнойБазы(Оповещение, ПараметрыРегистрации);
				КонецЕсли;
			КонецЕсли;

		Иначе
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗаданияПолученияПочты", 1, Истина);
		КонецЕсли;
	Исключение
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервере
Функция ПолучитьПочтуНаСервере(ПолученоПисем, ДоступноУчетныхЗаписей, ЕстьОшибки, СписокПолученныхПисем, УчетнаяЗаписьОтбор)
	
	ПараметрыВыгрузки = Новый Структура();
	ПараметрыВыгрузки.Вставить("УчетнаяЗаписьОтбор", УчетнаяЗаписьОтбор);
	
	НаименованиеЗадания = НСтр("ru='Получение почты';en='Obtaining of mail'") + " ";
	
	Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор,
		"Обработки.CRM_МенеджерПочты.ЗагрузитьПочтуПользователя", 
		ПараметрыВыгрузки,
		НаименованиеЗадания);
		
	АдресХранилищаЗадания = Результат.АдресХранилища;
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ПослеУспешнойАвторегистрации(РегистрацияВыполнена, ТекстСообщения, Контекст) Экспорт
	
	Если РегистрацияВыполнена Тогда 
		Оповестить("ОбсужденияПодключены", Истина);
		ЭтаФорма.Закрыть();
		
	Иначе 
		ВариантПодключения = 0;
		
		Если ВариантПодключения = 1 И ЗначениеЗаполнено(УчетнаяЗапись) И ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
			КонтейнерСостояний.СерверВзаимодействия = СтрокаПодключения(ВариантПодключения, АдресСервера);
			
			ПараметрыРегистрации = Новый ПараметрыРегистрацииИнформационнойБазыСистемыВзаимодействия;
			ПараметрыРегистрации.АдресСервера = КонтейнерСостояний.СерверВзаимодействия;
			ПараметрыРегистрации.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
				
			Оповещение = Новый ОписаниеОповещения("ПослеУспешногоЗапросаКодаРегистрации", ЭтаФорма,, "ПриОбработкеОшибкиЗапросаКодаРегистрации", ЭтаФорма);
			СистемаВзаимодействия.НачатьРегистрациюИнформационнойБазы(Оповещение, ПараметрыРегистрации);
			
		Иначе
			//ПоказатьПредупреждение(, ТекстСообщения);
			
			ПродолжитьРегистрациюВРучную();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОбработкеОшибкиАвторегистрации(ИнформацияОбОшибке, СтандартнаяОбработка, Контекст) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке);
	
	Если ВариантПодключения = 1 И ЗначениеЗаполнено(УчетнаяЗапись) И ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
		ВариантПодключения = 0;
		
		КонтейнерСостояний.СерверВзаимодействия = СтрокаПодключения(ВариантПодключения, АдресСервера);
		
		ПараметрыРегистрации = Новый ПараметрыРегистрацииИнформационнойБазыСистемыВзаимодействия;
		ПараметрыРегистрации.АдресСервера = КонтейнерСостояний.СерверВзаимодействия;
		ПараметрыРегистрации.АдресЭлектроннойПочты = АдресЭлектроннойПочты;
			
		Оповещение = Новый ОписаниеОповещения("ПослеУспешногоЗапросаКодаРегистрации", ЭтаФорма,, "ПриОбработкеОшибкиЗапросаКодаРегистрации", ЭтаФорма);
		СистемаВзаимодействия.НачатьРегистрациюИнформационнойБазы(Оповещение, ПараметрыРегистрации);
		
	Иначе	
		ПродолжитьРегистрациюВРучную();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКодРегистрацииИзПисьма(УчетнаяЗапись)
	
	КодРегистрации = "";
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка,
	|	ОтправительАдрес,
	|	Тема,
	|	Текст,
	|	ТекстHTML
	|ИЗ
	|	Документ.ЭлектронноеПисьмоВходящее
	|ГДЕ
	|	УчетнаяЗапись = &УчетнаяЗапись
	|	И НЕ ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПолучения УБЫВ");
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Тема = "Код подтверждения регистрации информационной базы" Тогда
			Позиция = Найти(Выборка.Текст, "используйте код:");
			Если Позиция > 0 Тогда
				ОстатокТекста = Сред(Выборка.Текст, Позиция + 16);
				
				Позиция = Найти(ОстатокТекста, "Используйте данный адрес");
				Если Позиция > 0 Тогда
					КодРегистрации = СокрЛП(Лев(ОстатокТекста, Позиция - 1));
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат КодРегистрации;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаПодключения(ВариантПодключения, АдресСервера)
	
	СтрокаПодключения = "wss://1cdialog.com:443";
	
	Если ВариантПодключения = 1 Тогда
		//СтрокаПодключения = "wss://94.79.43.178:8087";
		СтрокаПодключения = "ws://itil.rarus.ru:9094";

	ИначеЕсли ВариантПодключения = 2 Тогда
		СтрокаПодключения = "wss://" + АдресСервера;
	КонецЕсли;
	
	Возврат СтрокаПодключения;

КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьАдресСервера(ВариантПодключения, АдресСервера)
	
	сфпВариантПодключения = "1С";
	Если ВариантПодключения = 1 Тогда
		сфпВариантПодключения = "РАРУС";

	ИначеЕсли ВариантПодключения = 2 Тогда
		сфпВариантПодключения = АдресСервера;
	КонецЕсли;
	
	Константы.сфпВариантПодключенияСервераВзаимодействия.Установить(сфпВариантПодключения);
	
КонецПроцедуры	

&НаКлиенте
Процедура ОтменаАвторегистрации(Команда)
	
	ОтключитьОбработчикОжидания("Подключаемый_ПроверитьПочту");
	
	ПродолжитьРегистрациюВРучную();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти