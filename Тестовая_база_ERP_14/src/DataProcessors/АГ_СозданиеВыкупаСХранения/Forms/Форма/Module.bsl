
//<--Давиденко А.В.: УЗК0012 03.06.2019 13:24:17

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
	Период.ДатаОкончания = КонецДня(ТекущаяДата());
КонецПроцедуры


&НаСервере
Процедура СоздатьДокументВыкупаСХраненияНаСервереСОткрытиемФормы(ДанныеФормы)
	
	НовДок = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.ВыкупПринятыхНаХранениеТоваров"));
	ЗаявкаНаВыкуп = ТаблицаНоменклатураНаВыкуп[0].ЗаявкаНаВыкупТоваровСХранения;
	
	НовДок.Дата = ТекущаяДата();
	НовДок.Организация = Объект.Организация;
	НовДок.Контрагент = Объект.Поставщик;
	НовДок.Партнер  = Объект.Поставщик.Партнер;
	НовДок.Договор  = ЗаявкаНаВыкуп.ДоговорНаХранение;
	
	Если ЗначениеЗаполнено(НовДок.Договор.БанковскийСчет.ВалютаДенежныхСредств) Тогда
		Валюта = НовДок.Договор.БанковскийСчет.ВалютаДенежныхСредств;
	Иначе
		Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;	
	
	НовДок.Валюта  = Валюта;
	НовДок.ВалютаВзаиморасчетов   = Валюта;
	НовДок.Курс = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, ТекущаяДата());
	НовДок.Кратность = 1;
	НовДок.АГ_СтатусСогласованияСПоставщиком = Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.ВПодготовке;
	
	ИтогСумма = 0;
	
	Для каждого СтрТЗ Из ТаблицаНоменклатураНаВыкуп Цикл
		
		Товары = НовДок.Товары;
		НоваяСтрока = Товары.Добавить();
		
		НоваяСтрока.Номенклатура     = СтрТЗ.Номенклатура;
		НоваяСтрока.Характеристика     = СтрТЗ.ХарактеристикаНоменклатуры;
		НоваяСтрока.Количество         = СтрТЗ.Количество;
		НоваяСтрока.КоличествоУпаковок  = СтрТЗ.Количество;
		НоваяСтрока.АГ_ЗаказКлиента  = СтрТЗ.ЗаказКлиента;
		НоваяСтрока.АГ_ЗаявкаНаВыкуп = СтрТЗ.ЗаявкаНаВыкупТоваровСХранения; 
		НоваяСтрока.СтавкаНДС   =   ?(ЗначениеЗаполнено(СтрТЗ.Номенклатура.СтавкаНДС), СтрТЗ.Номенклатура.СтавкаНДС, Перечисления.СтавкиНДС.НДС20) ;
		НоваяСтрока.Цена  = ПолучитьПоследнююЦенуПрихода(СтрТЗ.Номенклатура, НовДок.Партнер);
		НоваяСтрока.Сумма = НоваяСтрока.Цена * НоваяСтрока.Количество;
		
		НоваяСтрока.СуммаНДС  = 0;
		Если НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
			НоваяСтрока.СуммаНДС  = НоваяСтрока.Сумма * 0.2;
		ИначеЕсли НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
			НоваяСтрока.СуммаНДС  =  НоваяСтрока.Сумма * 0.1;
		КонецЕсли;	
		
		НоваяСтрока.СуммаСНДС  = НоваяСтрока.Сумма + НоваяСтрока.СуммаНДС; 
		
		ИтогСумма = ИтогСумма + НоваяСтрока.СуммаСНДС;
		
		НоваяСтрока.СуммаВзаиморасчетов = НоваяСтрока.СуммаСНДС;
		НоваяСтрока.Хранитель = Объект.Поставщик.Партнер;
		НоваяСтрока.Контрагент = Объект.Поставщик;
		НоваяСтрока.Договор  = ЗаявкаНаВыкуп.ДоговорНаХранение;
		НоваяСтрока.СтатусУказанияСерий = 14;
		
		НоваяСтрока.ТипМестаХранения  = Перечисления.ТипыМестХранения.Склад;
		НоваяСтрока.Склад  = Объект.Склад;
		
		//НоваяСтрока.Назначение  = ПолучитьНазначение(СтрТЗ.ЗаказКлиента);
		//
		//Если Не ЗначениеЗаполнено(НоваяСтрока.Назначение) Тогда
		//	Сообщить("Для заказа " + СтрТЗ.ЗаказКлиент + " не определено назначение!");
		//КонецЕсли;
	КонецЦикла; 
	
	НовДок.СуммаДокумента = ИтогСумма;
	НовДок.СуммаВзаиморасчетов = ИтогСумма;
	
	ЗначениеВДанныеФормы(НовДок,ДанныеФормы);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументВыкупаСХраненияСОткрытиемФормы(Команда)
	
	Если ТаблицаНоменклатураНаВыкуп.Количество() = 0 Тогда
		Сообщить("Не выбрано ни одной строки!");
		Возврат;
	КонецЕсли;
	
	Форма = ПолучитьФорму("Документ.ВыкупПринятыхНаХранениеТоваров.ФормаОбъекта",,,Истина);
	ДанныеФормы = Форма.Объект;
	СоздатьДокументВыкупаСХраненияНаСервереСОткрытиемФормы(ДанныеФормы);
	КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
	
	Форма.ПараметрыУказанияСерий = ПолучитьПараметрыУказанияСерий(ДанныеФормы);
	
	Для Каждого СтрТЗ из Форма.Объект.Товары Цикл
		Если ЗначениеЗаполнено(СтрТЗ.Характеристика) Тогда
			СтрТЗ.ХарактеристикиИспользуются = Истина;
		КонецЕсли;
		
		СтрТЗ.ПредставлениеМестаХранения = Строка(СтрТЗ.Склад);
		СтрТЗ.Реквизит1 = Строка(Формат(СтрТЗ.КоличествоУпаковок,"ЧДЦ=3"));    
		
		//ПроверитьСериюРассчитатьСтатус           = Новый Структура("Склад, ПараметрыУказанияСерий",
		//													Неопределено, Форма.ПараметрыУказанияСерий);
		//
		//СтруктураДействий = Новый Структура;
		//СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус",        ПроверитьСериюРассчитатьСтатус);
		//СтруктураДействий.Вставить("Склад",        СтрТЗ.Склад);
		//ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтрТЗ, СтруктураДействий, Неопределено);
		СтрТЗ.СтатусУказанияСерий = 14;
		СтрТЗ.Реквизит2 = СтрТЗ.Реквизит1;    
		
	КонецЦикла;
	Форма.Открыть();	
	
КонецПроцедуры


&НаСервере
Процедура СоздатьДокументВыкупаСХраненияНаСервере()
	
	ТЗ_Заявок = ТаблицаНоменклатураНаВыкуп.Выгрузить();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	тз_Заявок.Поставщик КАК Поставщик,
	|	тз_Заявок.ДоговорНаХранение КАК ДоговорНаХранение,
	|	тз_Заявок.ЗаявкаНаВыкупТоваровСХранения КАК ЗаявкаНаВыкупТоваровСХранения,
	|	тз_Заявок.ЗаказКлиента КАК ЗаказКлиента,
	|	тз_Заявок.Номенклатура КАК Номенклатура,
	|	тз_Заявок.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	тз_Заявок.Количество КАК Количество
	|ПОМЕСТИТЬ вт_Завки
	|ИЗ
	|	&тз_Заявок КАК тз_Заявок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Завки.Поставщик КАК Поставщик,
	|	вт_Завки.ДоговорНаХранение КАК ДоговорНаХранение,
	|	вт_Завки.ЗаявкаНаВыкупТоваровСХранения КАК ЗаявкаНаВыкупТоваровСХранения,
	|	вт_Завки.ЗаказКлиента КАК ЗаказКлиента,
	|	вт_Завки.Номенклатура КАК Номенклатура,
	|	вт_Завки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	вт_Завки.Количество КАК Количество
	|ИЗ
	|	вт_Завки КАК вт_Завки
	|ИТОГИ ПО
	|	ДоговорНаХранение";
	
	
	Запрос.УстановитьПараметр("ТЗ_Заявок", ТЗ_Заявок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДоговорНаХранение = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДоговорНаХранение.Следующий() Цикл
		
		НовДок = Документы.ВыкупПринятыхНаХранениеТоваров.СоздатьДокумент();
		
		НовДок.Дата = ТекущаяДата();
		НовДок.Организация = Объект.Организация;
		НовДок.Контрагент = ВыборкаДоговорНаХранение.ДоговорНаХранение.Контрагент;
		НовДок.Партнер  = НовДок.Контрагент.Партнер;
		НовДок.Договор  = ВыборкаДоговорНаХранение.ДоговорНаХранение;
		НовДок.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров;
		НовДок.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя;
		НовДок.ВыкупПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя;
		НовДок.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
		
		Если ЗначениеЗаполнено(НовДок.Договор.БанковскийСчет.ВалютаДенежныхСредств) Тогда
			Валюта = НовДок.Договор.БанковскийСчет.ВалютаДенежныхСредств;
		Иначе
			Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;	
		
		НовДок.Валюта  = Валюта;
		НовДок.ВалютаВзаиморасчетов   = Валюта;
		НовДок.Курс = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, ТекущаяДата());
		НовДок.Кратность = 1;
		НовДок.АГ_СтатусСогласованияСПоставщиком = Перечисления.АГ_СтатусЗаявкиНаВыкупСХранения.ВПодготовке;
		
		ИтогСумма = 0;
		
		
		СтрТЗ = ВыборкаДоговорНаХранение.Выбрать();
		
		Пока СтрТЗ.Следующий() Цикл
			
			Товары = НовДок.Товары;
			НоваяСтрока = Товары.Добавить();
			
			НоваяСтрока.Номенклатура     = СтрТЗ.Номенклатура;
			НоваяСтрока.Характеристика     = СтрТЗ.ХарактеристикаНоменклатуры;
			НоваяСтрока.Количество         = СтрТЗ.Количество;
			НоваяСтрока.КоличествоУпаковок  = СтрТЗ.Количество;
			НоваяСтрока.АГ_ЗаказКлиента  = СтрТЗ.ЗаказКлиента;
			НоваяСтрока.АГ_ЗаявкаНаВыкуп = СтрТЗ.ЗаявкаНаВыкупТоваровСХранения; 
			НоваяСтрока.СтавкаНДС   =   ?(ЗначениеЗаполнено(СтрТЗ.Номенклатура.СтавкаНДС), СтрТЗ.Номенклатура.СтавкаНДС, Перечисления.СтавкиНДС.НДС20) ;
			НоваяСтрока.Цена  = ПолучитьПоследнююЦенуПрихода(СтрТЗ.Номенклатура, НовДок.Партнер);
			НоваяСтрока.Сумма = НоваяСтрока.Цена * НоваяСтрока.Количество;
			
			НоваяСтрока.СуммаНДС  = 0;
			Если НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
				НоваяСтрока.СуммаНДС  = НоваяСтрока.Сумма * 0.2;
			ИначеЕсли НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
				НоваяСтрока.СуммаНДС  =  НоваяСтрока.Сумма * 0.1;
			КонецЕсли;	
			
			НоваяСтрока.СуммаСНДС  = НоваяСтрока.Сумма + НоваяСтрока.СуммаНДС; 
			
			ИтогСумма = ИтогСумма + НоваяСтрока.СуммаСНДС;
			
			НоваяСтрока.СуммаВзаиморасчетов = НоваяСтрока.СуммаСНДС;
			НоваяСтрока.Хранитель = Объект.Поставщик.Партнер;
			НоваяСтрока.Контрагент = Объект.Поставщик;
			НоваяСтрока.Договор  = ВыборкаДоговорНаХранение.ДоговорНаХранение;
			НоваяСтрока.СтатусУказанияСерий = 14;
			
			НоваяСтрока.ТипМестаХранения  = Перечисления.ТипыМестХранения.Склад;
			НоваяСтрока.Склад  = Объект.Склад;
			
		КонецЦикла;
		
		НовДок.СуммаДокумента = ИтогСумма;
		НовДок.СуммаВзаиморасчетов = ИтогСумма;
		
		НовДок.Записать(РежимЗаписиДокумента.Запись);
		Сообщить("Был создан документ " + НовДок.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьДокументВыкупаСХранения(Команда)
	
	Если ТаблицаНоменклатураНаВыкуп.Количество() = 0 Тогда
		Сообщить("Не выбрано ни одной строки!");
		Возврат;
	КонецЕсли;
	
	СоздатьДокументВыкупаСХраненияНаСервере();
	
	//КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
	//
	//Форма.ПараметрыУказанияСерий = ПолучитьПараметрыУказанияСерий(ДанныеФормы);
	//
	//Для Каждого СтрТЗ из Форма.Объект.Товары Цикл
	//	Если ЗначениеЗаполнено(СтрТЗ.Характеристика) Тогда
	//		СтрТЗ.ХарактеристикиИспользуются = Истина;
	//	КонецЕсли;
	//	
	//	СтрТЗ.ПредставлениеМестаХранения = Строка(СтрТЗ.Склад);
	//	СтрТЗ.Реквизит1 = Строка(Формат(СтрТЗ.КоличествоУпаковок,"ЧДЦ=3"));    
	//	
	//	//ПроверитьСериюРассчитатьСтатус           = Новый Структура("Склад, ПараметрыУказанияСерий",
	//	//													Неопределено, Форма.ПараметрыУказанияСерий);
	//	//
	//	//СтруктураДействий = Новый Структура;
	//	//СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус",        ПроверитьСериюРассчитатьСтатус);
	//	//СтруктураДействий.Вставить("Склад",        СтрТЗ.Склад);
	//	//ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтрТЗ, СтруктураДействий, Неопределено);
	//	СтрТЗ.СтатусУказанияСерий = 14;
	//	СтрТЗ.Реквизит2 = СтрТЗ.Реквизит1;    
	//	
	//КонецЦикла;
	//Форма.Открыть();	
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ТаблицаНоменклатураНаВыкуп.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АГ_ТоварыКВыкупуОстатки.ЗаявкаНаВыкупТоваровСХранения.Поставщик КАК Поставщик,
	|	АГ_ТоварыКВыкупуОстатки.ЗаявкаНаВыкупТоваровСХранения.ДоговорНаХранение КАК ДоговорНаХранение,
	|	АГ_ТоварыКВыкупуОстатки.ЗаявкаНаВыкупТоваровСХранения КАК ЗаявкаНаВыкупТоваровСХранения,
	|	АГ_ТоварыКВыкупуОстатки.ЗаказКлиента КАК ЗаказКлиента,
	|	АГ_ТоварыКВыкупуОстатки.Номенклатура КАК Номенклатура,
	|	АГ_ТоварыКВыкупуОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	АГ_ТоварыКВыкупуОстатки.КоличествоОстаток КАК Количество,
	|	АГ_ТоварыКВыкупуОстатки.ЗаявкаНаВыкупТоваровСХранения.Дата КАК ДатаЗаявки
	|ИЗ
	|	РегистрНакопления.АГ_ТоварыКВыкупу.Остатки(
	|			,
	|			Организация = &Организация
	|				И Склад = &Склад
	|				) КАК АГ_ТоварыКВыкупуОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Поставщик,
	|	ДоговорНаХранение,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	//Запрос.УстановитьПараметр("Поставщик", Объект.Поставщик);
	//Запрос.УстановитьПараметр("Договор", Объект.ДоговорНаХранение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	НомерСтроки = 0;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ДатаЗаявки >=НачалоДня(Период.ДатаНачала) и Выборка.ДатаЗаявки <= КонецДня(Период.ДатаОкончания) Тогда
			НоваяСтрока = ТаблицаНоменклатураНаВыкуп.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
			//НоваяСтрока.Выбрать = Истина;
			НомерСтроки = НомерСтроки+1;
			НоваяСтрока.НомерСтроки = НомерСтроки;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьНазначение(Заказ)
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ ПЕРВЫЕ 1
	//	|	Назначения.Ссылка КАК Ссылка
	//	|ИЗ
	//	|	Справочник.Назначения КАК Назначения
	//	|ГДЕ
	//	|	Назначения.Заказ = &Заказ
	//	|	И Назначения.ТипНазначения = &ТипНазначения";
	//
	//Запрос.УстановитьПараметр("Заказ", Заказ);
	//Запрос.УстановитьПараметр("ТипНазначения", Перечисления.ТипыНазначений.Собственное);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//
	//Если Выборка.Следующий() Тогда
	//	Назначение = Выборка.Ссылка;
	//Иначе
	//	НовНазначение = Справочники.Назначения.СоздатьЭлемент();
	//	НовНазначение.Заказ = Заказ;
	//	НовНазначение.Партнер = Заказ.Партнер;
	//	НовНазначение.Договор = Заказ.Договор;
	//	НовНазначение.ТипНазначения = Перечисления.ТипыНазначений.Собственное;
	//	НовНазначение.Записать();
	//	Назначение = НовНазначение.Ссылка;
	//КонецЕсли;
	//
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбеспечениеЗаказовОстатки.Назначение.Ссылка КАК НазначениеСсылка
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов.Остатки КАК ОбеспечениеЗаказовОстатки
	|ГДЕ
	|	ОбеспечениеЗаказовОстатки.Назначение.Заказ = &Заказ";
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Назначение = Выборка.НазначениеСсылка;
	Иначе
		Назначение = Справочники.Назначения.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Назначение;
КонецФункции	

&НаСервере
Функция ПолучитьПоследнююЦенуПрихода(Номенклатура, ПоставщикПартнер)
	Цена = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыПоставщиковСрезПоследних.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(
	|			,
	|			Номенклатура = &Номенклатура
	|				И Партнер = &Партнер) КАК ЦеныНоменклатурыПоставщиковСрезПоследних";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Партнер", ПоставщикПартнер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Цена = Выборка.Цена;
	КонецЕсли;
	
	Возврат Цена;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтоговыеПоказатели(Форма)
	
	Если Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС") Тогда
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаБезНДС;
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоБезНДС;
	Иначе
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаСНДС;
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоСНДС;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктураДействийПриДобавленииСтроки(Форма, СтруктураДействий)
	
	ТекущаяСтрока = Форма.Элементы.Товары.ТекущиеДанные;
	ПолеФормы     = Форма.Элементы.ТоварыТипМестаХранения;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Если Не ПолеФормы.Видимость
			И Не ЗначениеЗаполнено(ТекущаяСтрока.ТипМестаХранения) Тогда
			
			ЗаполнитьТипМестаХраненияПоУмолчанию = Новый Структура("ТипМестаХранения", "Перечисление.ТипыМестХранения.Склад");
			
			СтруктураДействий.Вставить("ЗаполнитьТипМестаХраненияПоУмолчанию", ЗаполнитьТипМестаХраненияПоУмолчанию);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыУказанияСерий(ОбъектФормы)
	Возврат Документы.ВыкупПринятыхНаХранениеТоваров.ПараметрыУказанияСерий(ОбъектФормы);
КонецФункции

//-->Давиденко А.В.: УЗК0012