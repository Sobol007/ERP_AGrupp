Перем СчетчикОграничение;

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	ЗаполнитьТаблицуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриОткрытииНаСервере();
	
	СписокКонтрагентов.Сортировать("ПоставщикНаименование ВОЗР");
	
	Элементы.ДекорацияОтборы.Заголовок = ?(ЗначениеЗаполнено( Объект.СписокРегионов),"Список регионов: " +  Объект.СписокРегионов + Символы.ПС,"") + 
	?(ЗначениеЗаполнено( Объект.СписокРегионов),"Список разделов: " +  Объект.СписокРазделов,"");

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	 СчетчикОграничение = 1;
	СписокКонтрагентов.Очистить();
	
	МассивРазделов = ОбработкаОбъект.ПолучитьМассивПодчиненныхРазделов(Объект.СписокРазделов);
	Для Каждого ЭлементТекущийРегион Из Объект.СписокРегионов Цикл
		ТекущийРегион = ЭлементТекущийРегион.Значение;
		Если Не ЗначениеЗаполнено(ТекущийРегион.АГ_АдресСайта23met) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ТекущийРаздел Из МассивРазделов Цикл
			АдресРаздела = ОбработкаОбъект.СформироватьПолныйАдресРаздела(ТекущийРегион, ТекущийРаздел);	
			ПропарситьТекКаталог(ОбработкаОбъект.ПолучитьЧистыйАдресСайта(АдресРаздела), ТекущийРегион, ТекущийРаздел);
		КонецЦикла;
	КонецЦикла;
	//ДополнитьТаблицуДаннымиИз1С();
	
	ТЗ = СписокКонтрагентов.Выгрузить();
	ТЗ.Свернуть("ПоставщикИД,ПоставщикНаименование,Регион");
	СписокКонтрагентов.Загрузить(ТЗ);
	
КонецПроцедуры

&НаСервере
Процедура ПропарситьТекКаталог(Знач Каталог, Знач ТекущийРегион, Знач ТекущийРаздел)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	МассивИДПоставщиковДляОтбора = ОбработкаОбъект.ПолучитьМассивИДПоставщиков();
	
	Соединение = Новый HTTPСоединение(Каталог);
	ЧтениеХТМЛ = Новый ЧтениеHTML; 
    ПостроительДОМ = Новый ПостроительDOM;
    ИмяФайла = ПолучитьИмяВременногоФайла("html"); 
    Соединение.Получить("", ИмяФайла);
    ЧтениеХТМЛ.ОткрытьФайл(ИмяФайла, "UTF-8"); 
    ДокументХТМЛ = ПостроительДОМ.Прочитать(ЧтениеХТМЛ);
	
	УровеньСтраницы = ОбработкаОбъект.ПолучитьУровеньТекущейСтраницы(Каталог);
	
	Если УровеньСтраницы = 1 Тогда
		ЭлементЗаголовокРазделов = ДокументХТМЛ.ПолучитьЭлементПоИдентификатору("header");
		Если ЭлементЗаголовокРазделов <> Неопределено Тогда
			ЭлементыЛИ = ЭлементЗаголовокРазделов.ПолучитьЭлементыПоИмени("li");
			Для Каждого ЭлементЛИ Из ЭлементыЛИ Цикл
				ЭлементыА = ЭлементЛИ.ПолучитьЭлементыПоИмени("a");
				Для Каждого ЭлементА Из ЭлементыА Цикл
					Если ЭлементА.ИмяКласса = "logo" Тогда 
						Продолжить;
					КонецЕсли;
					Если Не ПустаяСтрока(ЭлементА.Гиперссылка) Тогда
						ПропарситьТекКаталог(ОбработкаОбъект.ПолучитьЧистыйАдресСайта(ЭлементА.Гиперссылка), ТекущийРегион, ТекущийРаздел);
					Иначе
						ЭлементУЛ = ЭлементА.ПервыйДочерний;
						ЭлементыЛИПодчиненные = ЭлементУЛ.ПолучитьЭлементыПоИмени("li");
						Для Каждого ЭлементЛИПодчиненный Из ЭлементыЛИПодчиненные Цикл
							ЭлементыАПодчененные = ЭлементЛИ.ПолучитьЭлементыПоИмени("a");
							Для Каждого ЭлементАПодчиненный Из ЭлементыАПодчененные Цикл
								Если ЭлементАПодчиненный.ИмяКласса = "submenu_link" Тогда 
									Продолжить;
								КонецЕсли;
								Если Не ПустаяСтрока(ЭлементАПодчиненный.Гиперссылка) Тогда
									ПропарситьТекКаталог(ОбработкаОбъект.ПолучитьЧистыйАдресСайта(ЭлементАПодчиненный.Гиперссылка), ТекущийРегион, ТекущийРаздел);
								КонецЕсли;
							КонецЦикла;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли УровеньСтраницы = 2 Тогда
		ЛеваяКолонка = ДокументХТМЛ.ПолучитьЭлементПоИдентификатору("left-container");	
		Если ЛеваяКолонка <> Неопределено Тогда
			ЭлементыНАВЛевойКолонки = ЛеваяКолонка.ПолучитьЭлементыПоИмени("nav");
			Если ЭлементыНАВЛевойКолонки.Количество() > 0 Тогда
				Для Каждого ЭлементНАВЛевойКолонки Из ЭлементыНАВЛевойКолонки Цикл
					ЭлементыУЛ = ЭлементНАВЛевойКолонки.ПолучитьЭлементыПоИмени("ul");		
					Для Каждого ЭлементУЛ Из ЭлементыУЛ Цикл
						ЭлементыЛИ = ЭлементУЛ.ПолучитьЭлементыПоИмени("li");		
						Для Каждого ЭлементЛИ Из ЭлементыЛИ Цикл
							Если Не ПустаяСтрока(ЭлементЛИ.ПервыйДочерний.Гиперссылка) Тогда
								ПропарситьТекКаталог(ОбработкаОбъект.ПолучитьЧистыйАдресСайта(ЭлементЛИ.ПервыйДочерний.Гиперссылка), ТекущийРегион, ТекущийРаздел);
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли УровеньСтраницы > 2 Тогда
		ЭлементТаблицаТоваров = ДокументХТМЛ.ПолучитьЭлементПоИдентификатору("table-price");	
		Если ЭлементТаблицаТоваров = Неопределено Тогда
			ЭлементРазмерыТруб = ДокументХТМЛ.ПолучитьЭлементПоИдентификатору("price-nosize-sizes-container");	
			Если ЭлементРазмерыТруб <> Неопределено Тогда
		 		ЭлементыДИВ = ЭлементРазмерыТруб.ПолучитьЭлементыПоИмени("div");		
				Для Каждого ЭлементДИВ Из ЭлементыДИВ Цикл
					ЭлементыА = ЭлементДИВ.ПолучитьЭлементыПоИмени("a");		
					Для Каждого ЭлементА Из ЭлементыА Цикл
						Если Не ПустаяСтрока(ЭлементА.Гиперссылка) Тогда
							АдресПервогоУровня = ОбработкаОбъект.ПолучитьАдресПервогоУровня(ОбработкаОбъект.ПолучитьЧистыйАдресСайта(Каталог));
							ПропарситьТекКаталог(ОбработкаОбъект.ПолучитьЧистыйАдресСайта(АдресПервогоУровня) + ОбработкаОбъект.ПолучитьЧистыйАдресСайта(ЭлементА.Гиперссылка), ТекущийРегион, ТекущийРаздел);					
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
		Иначе	
			НомерКолонкиМаркаСтали = 0;
			НомерКолонкиДлина = 0;
			НомерКолонкиПредставлениеПоставщика = 5;
			ЭлементЗаголовокТаблицы = ЭлементТаблицаТоваров.ПервыйДочерний;
			ЭлементыТР = ЭлементЗаголовокТаблицы.ПолучитьЭлементыПоИмени("tr");
			Для Каждого ЭлементТР Из ЭлементыТР Цикл
				СчетчикКолонок = 1;
				ЭлементыКолонкиТаблицы = ЭлементТР.ПолучитьЭлементыПоИмени("th");
				Для Каждого ЭлементКолонкиТаблицы Из ЭлементыКолонкиТаблицы Цикл
					Если ЭлементКолонкиТаблицы.ТекстовоеСодержимое = "Марка стали" Тогда
						НомерКолонкиМаркаСтали = СчетчикКолонок;
					КонецЕсли;
					Если ЭлементКолонкиТаблицы.ТекстовоеСодержимое = "Длина" Тогда
						НомерКолонкиДлина = СчетчикКолонок;
					КонецЕсли;
					Если ЭлементКолонкиТаблицы.ТекстовоеСодержимое = "Поставщик" Тогда
						НомерКолонкиПредставлениеПоставщика = СчетчикКолонок + 1;
					КонецЕсли;
					СчетчикКолонок = СчетчикКолонок + 1;	
				КонецЦикла;
			КонецЦикла;
			
			ЭлементТелоТаблицы = ЭлементТаблицаТоваров.ПоследнийДочерний;	
			ЭлементыТР = ЭлементТелоТаблицы.ПолучитьЭлементыПоИмени("tr");
			Для Каждого ЭлементТР Из ЭлементыТР Цикл
				//Если ОграничениеКоличестваСтрок > 0 И СчетчикОграничение > ОграничениеКоличестваСтрок Тогда
				//	Возврат;
				//КонецЕсли;
				
				//ИД поставщика
				ПоставщикИД = "";
				УзелПоставщикИД = ЭлементТР.Атрибуты.ПолучитьИменованныйЭлемент("data-firm-name");
				Если УзелПоставщикИД <> Неопределено Тогда
					ПоставщикИД = УзелПоставщикИД.Значение;	
				КонецЕсли;
				
				Если МассивИДПоставщиковДляОтбора.Количество() > 0 И МассивИДПоставщиковДляОтбора.Найти(ПоставщикИД) = Неопределено Тогда
					Продолжить;					
				КонецЕсли;
				
				
				
				ЭлементыКолонкиТаблицы = ЭлементТР.ПолучитьЭлементыПоИмени("td");
				СчетчикКолонок = 1;
				НоменклатураНаименование = "";
				Для Каждого ЭлементКолонкиТаблицы Из ЭлементыКолонкиТаблицы Цикл
					Если СчетчикКолонок = НомерКолонкиПредставлениеПоставщика Тогда
						Если ЗначениеЗаполнено(ЭлементКолонкиТаблицы.ТекстовоеСодержимое) И ЗначениеЗаполнено(ПоставщикИД) Тогда
							НоваяСтрока = СписокКонтрагентов.Добавить();
							
							//ИД поставщика
							НоваяСтрока.ПоставщикИД = ПоставщикИД;	
							
							НоваяСтрока.Регион = ТекущийРегион;	
							НоваяСтрока.ПоставщикНаименование = ЭлементКолонкиТаблицы.ТекстовоеСодержимое;
							СчетчикОграничение = СчетчикОграничение + 1;
							
						КонецЕсли;
					КонецЕсли;
					СчетчикКолонок = СчетчикКолонок + 1;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.СписокРегионов = Параметры.СписокРегионов;
	Объект.СписокРазделов = Параметры.СписокРазделов;
	Объект.СписокПоставщиков = Параметры.СписокПоставщиков;
	
КонецПроцедуры




СчетчикОграничение = 1;

