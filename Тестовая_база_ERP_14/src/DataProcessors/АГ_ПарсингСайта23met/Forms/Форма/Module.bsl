
&НаКлиенте
Процедура КомандаНадпись(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНоменклатуруНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаписатьНоменклатуру23met();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНоменклатуру(Команда)
	ЗаписатьНоменклатуруНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ДействиеСписокНоменклатурПриАктивизацииСтроки", 0.1, Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеСписокНоменклатурПриАктивизацииСтроки()
	
	Подсказка = "";
	     
	ДействиеСписокНоменклатурПриАктивизацииСтрокиНаСервере();
	
	//ЗаполнитьПодсказку();
	
КонецПроцедуры 

&НаСервере
Процедура ДействиеСписокНоменклатурПриАктивизацииСтрокиНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Элементы.СписокНоменклатур.ТекущаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	Если Элементы.СписокНоменклатур.ТекущаяСтрока.Ссылка.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	Объект.СопоставленнаяНоменклатура.Очистить();
	Для Каждого Стр Из Элементы.СписокНоменклатур.ТекущаяСтрока.АГ_Сопоставленная23Мет Цикл
		Нстр = Объект.СопоставленнаяНоменклатура.Добавить();
		Нстр.Номенклатура = Элементы.СписокНоменклатур.ТекущаяСтрока;
		Нстр.НаименованиеСопоставлено = Стр.Наименование23Met;
		Нстр.Идентификатор = Стр.Идентификатор23Met;
		Нстр.Сохранена = Истина;
		Нстр.Поставщик = Стр.Конкурент;
		Нстр.Регион = Стр.Регион;
		Нстр.РазделСайта = Стр.РазделСайта;
		Нстр.ЦенаТекущая = ПолучитьЦенуНаСервере(Стр.Регион, Стр.Конкурент, Нстр.Номенклатура);
		//Нстр.Рейтинг = Стр.Рейтинг;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЦенуНаСервере(Регион, Конкурент, Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦеныКонсолидированнойНоменклатурыСрезПоследних.Цена КАК Цена
	               |ИЗ
	               |	РегистрСведений.АГ_ЦеныКонкурентов.СрезПоследних(
	               |			,
	               |			Номенклатура = &КонсолидированнаяНоменклатура
	               |				И Контрагент = &Контрагент
	               |				И Регион = &Регион) КАК ЦеныКонсолидированнойНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("КонсолидированнаяНоменклатура", Номенклатура);
	Запрос.УстановитьПараметр("Контрагент", Конкурент);
	Запрос.УстановитьПараметр("Регион", Регион);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() ТОгда
		Возврат 0;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Цена;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПодсказку()
	
	Подсказка = "";
	
	ТекСтрока = Элементы.СписокНоменклатур.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦеновыеСтратегииКонкурентов.Конкурент КАК Конкурент
	               |ИЗ
	               |	РегистрСведений.АГ_КонкурентыМеталлоцентров КАК ЦеновыеСтратегииКонкурентов
	               |ГДЕ
	               |	ЦеновыеСтратегииКонкурентов.НоменклатурнаяГруппа = &НГ
	               |	И ЦеновыеСтратегииКонкурентов.Регион В(&Регион)
	               |	И ЦеновыеСтратегииКонкурентов.Парсинг"; 
		
	Запрос.УстановитьПараметр("Регион", Объект.СписокРегионов);
	Запрос.УстановитьПараметр("НГ", ТекСтрока.ВидНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Сч = 1;
	Подсказка = "";
	Пока Выборка.Следующий() Цикл
		Вставка = ?(Сч = 1, "", ", ");
		Подсказка = Подсказка + Вставка + Выборка.Конкурент.Наименование;
		
		Сч = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставленнаяНоменклатураПередУдалением(Элемент, Отказ)
	
	Если Не Отказ Тогда
		ТекСтр =  Элементы.СопоставленнаяНоменклатура.ТекущиеДанные;
		Если ТекСтр.Сохранена Тогда
			СопоставленнаяНоменклатураПередУдалениемНаСервере(ТекСтр.Идентификатор, ТекСтр.Номенклатура);
		КонецЕсли;
	КонецЕсли;
	
	Элементы.СписокНоменклатур.Обновить();

КонецПроцедуры

&НаСервере
Процедура СопоставленнаяНоменклатураПередУдалениемНаСервере(Идентификатор, Номенклатура)
	
	НомОбъект = Номенклатура.ПолучитьОбъект();
	
	НайденнаяСтрока = НомОбъект.АГ_Сопоставленная23Мет.Найти(Идентификатор, "Идентификатор23Met");
	Если НЕ НайденнаяСтрока = Неопределено Тогда
		НомОбъект.АГ_Сопоставленная23Мет.Удалить(НайденнаяСтрока);
		НомОбъект.Записать();
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура СписокСтруктураРазделов23metПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ДействияСписокСтруктураРазделов23metПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияСписокСтруктураРазделов23metПриАктивизацииСтроки()
	
	ТекущиеДанные = Элементы.СписокСтруктураРазделов23met.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		ТекущийРаздел = ПредопределенноеЗначение("Справочник.АГ_СтруктураРазделов23met.ПустаяСсылка"); 
		Элементы.ТаблицаТоваров.ОтборСтрок = Неопределено;	
	ИначеЕсли ТекущиеДанные.Ссылка <> ТекущийРаздел Тогда
		ТекущийРаздел = ТекущиеДанные.Ссылка; 
		УстановитьОтборПоТекущемуРазделу();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоТекущемуРазделу()
	
	СписокРазделовДляОтбора = Новый СписокЗначений;
	СписокРазделовДляОтбора.Добавить(ТекущийРаздел);
	МассивРазделов = ПолучитьМассивПодчиненныхРазделовНаСервере(СписокРазделовДляОтбора);
	Для Каждого ТекущаяСтрока Из Объект.ТаблицаТоваров Цикл
		Если МассивРазделов.Найти(ТекущаяСтрока.РазделСайта) = Неопределено Тогда
			ТекущаяСтрока.ВходитВОтбор = Ложь;
		Иначе
			ТекущаяСтрока.ВходитВОтбор = Истина;
		КонецЕсли;
	КонецЦикла;
	Элементы.ТаблицаТоваров.ОтборСтрок = Новый ФиксированнаяСтруктура("ВходитВОтбор", Истина);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивПодчиненныхРазделовНаСервере(СписокРазделов)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.ПолучитьМассивПодчиненныхРазделов(СписокРазделов);
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокСтруктураРазделов23met.Параметры.УстановитьЗначениеПараметра("Формировать", ложь);
	Объект.СписокРегионов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.БизнесРегионы");
	Объект.СписокРазделов.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.АГ_СтруктураРазделов23met");
	Объект.СписокПоставщиков.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Партнеры");	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьКолонок();
	
	Элементы.ГруппаЛевоОсновная.ШрифтЗаголовка = Новый Шрифт("Arial Narrow", 18, Ложь);
	Элементы.Декорация1.Шрифт = Новый Шрифт("Arial Narrow", 18, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКолонок()
	
	Элементы.ТаблицаТоваровНоменклатураИД.Видимость 		= ВидимостьКолонкаНоменклатураИД;
	Элементы.ТаблицаТоваровРазделСайта.Видимость 			= ВидимостьКолонкаРазделСайта;
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьНоменклатуру(Команда)
	
	СопоставитьНоменклатуруНаСервере();
	УстановитьОтборПоТекущемуРазделу();

КонецПроцедуры

&НаСервере
Процедура СопоставитьНоменклатуруНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Элементы.СписокНоменклатур.ТекущаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СопоставитьНоменклатуру23met(Элементы.СписокНоменклатур.ТекущаяСтрока);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	ЗаписатьНоменклатуруНаСервере();
	
	Элементы.СписокНоменклатур.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиКодыПоставщиков(Команда)
	
	Если Объект.СписокРегионов.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен отбор по региону.";
		Сообщение.Поле = "Объект.СписокРегионов";
		Сообщение.УстановитьДанные(Объект.СписокРегионов);
		Сообщение.Сообщить();
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокРегионов", Объект.СписокРегионов);
	ПараметрыФормы.Вставить("СписокРазделов", Объект.СписокРазделов);
	ПараметрыФормы.Вставить("СписокПоставщиков", Объект.СписокПоставщиков);
	
	ОткрытьФорму("Обработка.АГ_ПарсингСайта23met.Форма.ФормаСпискаКонкурентов", ПараметрыФормы, ,ТекущаяДата());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	СписокСтруктураРазделов23met.Параметры.УстановитьЗначениеПараметра("Формировать", Истина);
	Элементы.СписокСтруктураРазделов23met.Обновить();
	
	Если Объект.СписокРегионов.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен отбор по региону.";
		Сообщение.Поле = "Объект.СписокРегионов";
		Сообщение.УстановитьДанные(Объект.СписокРегионов);
		Сообщение.Сообщить();
		Возврат;	
	КонецЕсли;
	
	ЗагрузитьДанныеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПропарситьСайт();
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	УстановитьОтборВДеревеРазделов();	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборВДеревеРазделов()
	
	СписокСтруктураРазделов23met.Отбор.Элементы.Очистить();
	ЭлементОтбора = СписокСтруктураРазделов23met.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = Объект.СписокРазделов;

КонецПроцедуры

&НаКлиенте
Процедура СписокРегионовПриИзменении(Элемент)
	//ЗаполнитьПодсказку();
КонецПроцедуры

&НаКлиенте
Процедура СписокРазделовПриИзменении(Элемент)
	
	УстановитьОтборВДеревеРазделов();
	
КонецПроцедуры




