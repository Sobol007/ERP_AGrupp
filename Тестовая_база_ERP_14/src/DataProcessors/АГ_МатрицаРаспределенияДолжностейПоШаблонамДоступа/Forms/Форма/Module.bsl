//<--АГ:[Permission _002][14.04.2019 18:05][Давиденко А.В.]

&НаСервере
Процедура СписокПриАктивизацииСтрокиНаСервере()
	ЗапросТекст = 
		"ВЫБРАТЬ
		|	АГ_ШаблоныПравДоступаПоДолжностнымПозициям.Должность КАК Должность,
		|	АГ_ШаблоныПравДоступаПоДолжностнымПозициям.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
		|	АГ_ШаблоныПравДоступаПоДолжностнымПозициям.СвязаннаяГруппаПользователей КАК СвязаннаяГруппаПользователей
		|ИЗ
		|	РегистрСведений.АГ_ШаблоныПравДоступаПоДолжностям КАК АГ_ШаблоныПравДоступаПоДолжностнымПозициям
		|ГДЕ
		|	АГ_ШаблоныПравДоступаПоДолжностнымПозициям.СвязаннаяГруппаПользователей В ИЕРАРХИИ(&СвязаннаяГруппаПользователей)
		|	И АГ_ШаблоныПравДоступаПоДолжностнымПозициям.Должность.ВведенаВШтатноеРасписание = ИСТИНА";
	
	Если Не ПоказыватьДолжностныеПозицииНижестоящихГрупп Тогда
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "В ИЕРАРХИИ(&СвязаннаяГруппаПользователей)", " = &СвязаннаяГруппаПользователей");
	КонецЕсли;	
	Если  ПоказыватьДолжностиНеВключенныеВШтатноеРасписание Тогда
		ЗапросТекст = СтрЗаменить(ЗапросТекст, "И АГ_ШаблоныПравДоступаПоДолжностнымПозициям.Должность.ВведенаВШтатноеРасписание = ИСТИНА", "");
	КонецЕсли;	
	Измерения.ТекстЗапроса = ЗапросТекст;
	Измерения.Параметры.УстановитьЗначениеПараметра("СвязаннаяГруппаПользователей", Элементы.Список.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	СписокПриАктивизацииСтрокиНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьДолжностныеПозицииНижестоящихГруппПриИзменении(Элемент)
	//Элементы.ИзмеренияСвязаннаяГруппаПользователей.Видимость = ПоказыватьДолжностныеПозицииНижестоящихГрупп;
	СписокПриАктивизацииСтрокиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭлементОтбора = ЭтаФорма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
	
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ЭлементОтбора.ПравоеЗначение = "Все пользователи";
	//ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	//Элементы.Список.Обновить();   
КонецПроцедуры

&НаСервере
Процедура ИзмеренияПередУдалениемНаСервере(Группа, Должность, Подразделение)
	Набор = РегистрыСведений.АГ_ШаблоныПравДоступаПоДолжностнымПозициям.СоздатьНаборЗаписей();
	Набор.Отбор.СвязаннаяГруппаПользователей.Установить(Группа);
	Набор.Отбор.ДолжностнаяПозиция.Установить(Должность);
	Набор.Отбор.СтруктурноеПодразделение.Установить(Подразделение);
	Набор.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ИзмеренияПередУдалением(Элемент, Отказ)
	ТекДанные = Элементы.Измерения.ТекущиеДанные;
	ИзмеренияПередУдалениемНаСервере(ТекДанные.СвязаннаяГруппаПользователей, ТекДанные.ДолжностнаяПозиция, ТекДанные.СтруктурноеПодразделение);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьШаблон(Команда)	
	Оп = Новый ОписаниеОповещения("ОписаниеОповещенияОЗакрытииФормыЗаписиРегистра", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("СвязаннаяГруппаПользователей", Элементы.Список.ТекущаяСтрока);
	ОткрытьФорму("РегистрСведений.АГ_ШаблоныПравДоступаПоДолжностям.Форма.ФормаЗаписи", ПараметрыФормы, ЭтаФорма,,,, Оп, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаСервере
Процедура ОписаниеОповещенияОЗакрытииФормыЗаписиРегистра(РезультатЗакрытияформы, ДопПраметры) 
	СписокПриАктивизацииСтрокиНаСервере();
КонецПроцедуры	

&НаКлиенте
Процедура СкрытьГруппу(Команда)
	СкрытаГруппа = Не СкрытаГруппа;
	Элементы.ИзмеренияСвязаннаяГруппаПользователей.Видимость = Не СкрытаГруппа;
	Элементы.ИзмеренияСкрытьГруппу.Заголовок = ?(СкрытаГруппа, "Показать группу", "Скрыть группу");
КонецПроцедуры

&НаКлиенте
Процедура СкрытьДолжность(Команда)
	СкрытаДолжность = Не СкрытаДолжность;
	Элементы.ИзмеренияДолжность.Видимость = Не СкрытаДолжность;
	Элементы.ИзмеренияСкрытьДолжность.Заголовок = ?(СкрытаДолжность, "Показать должность", "Скрыть должность");
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПодразделение(Команда)
	СкрытоПодразделение = Не СкрытоПодразделение;
	Элементы.ИзмеренияСтруктурноеПодразделение.Видимость = Не СкрытоПодразделение;
	Элементы.ИзмеренияСкрытьПодразделение.Заголовок = ?(СкрытоПодразделение, "Показать подразделение", "Скрыть подразделение");
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьДолжностиНеВключенныеВШтатноеРасписаниеПриИзменении(Элемент)
	СписокПриАктивизацииСтрокиНаСервере();
КонецПроцедуры

//-->АГ:[Permission _004]