Перем ТабДокОписаниеОбновлений;

#Область ОсновныеПроцедуры

Функция НомерПоследнейВерсии() Экспорт
	Возврат "2.5.0.5";
КонецФункции

Процедура ПервоначальноеЗаполнение() Экспорт
	НачатьТранзакцию();
	
	// Инициализация справочников
	Справочники.РЭЙ_ВидыПодтверждающихДокументов.Инициализировать();
	Справочники.РЭЙ_Инкотермс.Инициализировать();
	Справочники.РЭЙ_ВидыВалютныхОпераций.Инициализировать();
	
	// Настройки параметров валютного контроля
	РегистрыСведений.РЭЙ_НастройкиПараметровВалютногоКонтроля.УстановитьИнициализационныеНастройки();
	
	// Сроки представления паспорта сделки
	РегистрыСведений.РЭЙ_СрокиПредставленияПаспортаСделки.УстановитьИнициализационныеНастройки();
	
	// Сроки представления справки о валютных операциях
	РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях.УстановитьИнициализационныеНастройки();
	
	// Сроки представления справки о подтверждающих документах
	РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.УстановитьИнициализационныеНастройки();
	
	// Сроки контроля ожидаемых сроков
	РегистрыСведений.РЭЙ_СрокиКонтроляПриближенияОжидаемыхСроков.УстановитьИнициализационныеНастройки();

	// Справочник "Виды задач пользователей" установка флага "Использование"
	Справочники.РЭЙ_ВидыЗадачПользователей.УстановитьИнициализационныеНастройки();

	// Дозаполнить реквизиты ВЭД в классификаторе стран
	ЗаполнитьРеквизитыВЭДвСправочникеСтраны();
	
	// Дозаполнить реквизиты ВЭД в классификаторе валют
	ЗаполнитьРеквизитыВЭДвСправочникеВалюты();
	
	// Создание группы "Иностранные банки" в справочнике "Банки"
	СоздатьГруппуИностранныеБанки();
	
	// Установить тип хранения файлов для справочника "РЭЙ_Файлы"
	Константы.РЭЙ_ТипХраненияФайлов.Установить(Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе);
	
	// Нумерация документов с префиксами
	Константы.РЭЙ_ИспользоватьПрефиксыВНумерацииДокументовВЭД.Установить(Истина);
	
	// Настройки видимости подсистемы ВЭД
	РегистрыСведений.РЭЙ_НастройкиВидимостиПодсистемыВЭД.УстановитьИнициализационныеНастройки();
	
	// Установить номер текущей версии
	УстановитьНомерВерсии(НомерПоследнейВерсии());
	
	РезультатОбновления = "Первоначальное заполнение подсистемы ВЭД выполнено";

	ЗафиксироватьТранзакцию();
	
	// Обновить информацию о метаданных
	Справочники.ИдентификаторыОбъектовМетаданных.ОбновитьДанныеСправочника();
КонецПроцедуры

Процедура ВыполнитьОбновление() Экспорт
	ТабДокОписаниеОбновлений = Новый ТабличныйДокумент;
	
	ВыполнитьОбновление_2_0_0_1();
	
	ВыполнитьОбновление_2_0_1_1();
	
	ВыполнитьОбновление_2_0_2_1();
	
	ВыполнитьОбновление_2_0_3_1();
	
	ВыполнитьОбновление_2_0_4_1();
	
	ВыполнитьОбновление_2_0_5_1();
	
	ВыполнитьОбновление_2_0_5_2();
	
	ВыполнитьОбновление_2_0_6_1();
	
	ВыполнитьОбновление_2_0_7_1();
	
	ВыполнитьОбновление_2_0_8_1();
	
	ВыполнитьОбновление_2_0_9_1();
	
	ВыполнитьОбновление_2_0_10_1();
	
	ВыполнитьОбновление_2_0_11_1();
	
	ВыполнитьОбновление_2_0_12_1();
	
	ВыполнитьОбновление_2_0_13_1();
	
	ВыполнитьОбновление_2_0_14_1();
	
	ВыполнитьОбновление_2_0_15_1();
	
	ВыполнитьОбновление_2_0_16_1();
	
	ВыполнитьОбновление_2_0_17_1();
	
	ВыполнитьОбновление_2_0_17_2();
	
	ВыполнитьОбновление_2_0_17_3();
	
	ВыполнитьОбновление_2_0_18_1();
	
	ВыполнитьОбновление_2_0_19_1();
	
	ВыполнитьОбновление_2_0_20_1();
	
	ВыполнитьОбновление_2_0_21_1();
	
	ВыполнитьОбновление_2_5_0_1();
	
	ВыполнитьОбновление_2_5_0_2();
	
	ВыполнитьОбновление_2_5_0_3();
	
	ВыполнитьОбновление_2_5_0_4();
	
	ВыполнитьОбновление_2_5_0_5();
	
	РезультатОбновления = "Обновление подсистемы ВЭД завершено";
	
	Если ТабДокОписаниеОбновлений.ВысотаТаблицы > 0 Тогда
		ОписаниеОбновлений = Новый ТабличныйДокумент;
		
		Макет = ПолучитьМакет("ОписаниеОбновлений");
		Область = Макет.ПолучитьОбласть("Заголовок");
		ОписаниеОбновлений.Вывести(Область);
		Область = Макет.ПолучитьОбласть("Пробел");
		ОписаниеОбновлений.Вывести(Область);
		
		ОписаниеОбновлений.Вывести(ТабДокОписаниеОбновлений);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьНумерациюСПрефиксами() Экспорт
	Если Константы.РЭЙ_ИспользоватьПрефиксыВНумерацииДокументовВЭД.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	СписокВидовДокументов = Новый СписокЗначений;
	СписокВидовДокументов.Добавить("РЭЙ_ЗаявлениеВБанкПС");
	СписокВидовДокументов.Добавить("РЭЙ_ПаспортСделки");
	СписокВидовДокументов.Добавить("РЭЙ_СправкаОВалютныхОперациях");
	СписокВидовДокументов.Добавить("РЭЙ_СправкаОПодтверждающихДокументах");
		
	Для Каждого текВидДокумента Из СписокВидовДокументов Цикл
		Выборка = Документы[текВидДокумента.Значение].Выбрать();
		
		ДлинаНомера = Метаданные.Документы[текВидДокумента.Значение].ДлинаНомера;
		Пока Выборка.Следующий() Цикл
			текОбъект = Выборка.ПолучитьОбъект();
			текНомер = СокрЛП(текОбъект.Номер);
			
			Префикс = "";
			СтандартнаяОбработка = Истина;
			ПрефиксацияОбъектовСобытия.УстановитьПрефиксИнформационнойБазыИОрганизации(текОбъект, СтандартнаяОбработка, Префикс);
			
			ДлинаПрефикса = СтрДлина(Префикс);
			Если Сред(текОбъект.Номер, 1, ДлинаПрефикса) = Префикс Тогда
				текНомер = Сред(текНомер, ДлинаПрефикса + 1);
			КонецЕсли;
			
			текОбъект.Номер = Префикс + Прав("000000000000" + текНомер, ДлинаНомера - ДлинаПрефикса);
			текОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЦикла;
	КонецЦикла;
		
	Константы.РЭЙ_ИспользоватьПрефиксыВНумерацииДокументовВЭД.Установить(Истина);
КонецПроцедуры

Процедура ЗаполнитьРеквизитыВЭДвСправочникеСтраны()
	ТаблицаСтран = РЭЙ_СлужебныйСервер.ПолучитьТаблицуКлассификатораСтран();
	
	Если Метаданные.Справочники.СтраныМира.Реквизиты.Найти("УчастникЕАЭС") <> Неопределено Тогда
		ЕстьТиповойРеквизитУчастникЕАЭС = Истина;
	Иначе
		ЕстьТиповойРеквизитУчастникЕАЭС = Ложь;
	КонецЕсли;
	
	Выборка = Справочники.СтраныМира.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаКлассификатора = ТаблицаСтран.Найти(Выборка.Ссылка.Код, "КодЧисловой");
		Если СтрокаКлассификатора <> Неопределено Тогда
			СправочникОбъект = Выборка.ПолучитьОбъект();
			Если ПустаяСтрока(СправочникОбъект.КодАльфа2) И Не ПустаяСтрока(СтрокаКлассификатора.КодАльфа2) Тогда
				СправочникОбъект.КодАльфа2 = СтрокаКлассификатора.КодАльфа2;
			КонецЕсли;
			Если ПустаяСтрока(СправочникОбъект.КодАльфа3) И Не ПустаяСтрока(СтрокаКлассификатора.КодАльфа3) Тогда
				СправочникОбъект.КодАльфа3 = СтрокаКлассификатора.КодАльфа3;
			КонецЕсли;
			Если ПустаяСтрока(СправочникОбъект.РЭЙ_НаименованиеАнгл) И Не ПустаяСтрока(СтрокаКлассификатора.НаименованиеАнгл) Тогда
				СправочникОбъект.РЭЙ_НаименованиеАнгл = СтрокаКлассификатора.НаименованиеАнгл;
			КонецЕсли;
			СправочникОбъект.РЭЙ_УчастникТаможенногоСоюза = СтрокаКлассификатора.УчастникЕАЭС;
			Если ЕстьТиповойРеквизитУчастникЕАЭС Тогда
				СправочникОбъект["УчастникЕАЭС"] = СтрокаКлассификатора.УчастникЕАЭС;
			КонецЕсли;
			СправочникОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьРеквизитыВЭДвСправочникеВалюты()
	ТаблицаВалют = РЭЙ_СлужебныйСервер.ПолучитьТаблицуКлассификатораВалют();
	
	Выборка = Справочники.Валюты.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаКлассификатора = ТаблицаВалют.Найти(Выборка.Ссылка.Код, "КодЧисловой");
		Если СтрокаКлассификатора <> Неопределено Тогда
			СправочникОбъект = Выборка.ПолучитьОбъект();
			Если ПустаяСтрока(СправочникОбъект.РЭЙ_НаименованиеАнгл) И Не ПустаяСтрока(СтрокаКлассификатора.НаименованиеАнгл) Тогда
				СправочникОбъект.РЭЙ_НаименованиеАнгл = СтрокаКлассификатора.НаименованиеАнгл;
			КонецЕсли;
			Если ПустаяСтрока(СправочникОбъект.РЭЙ_ПараметрыПрописиНаАнглийском) И Не ПустаяСтрока(СтрокаКлассификатора.ПараметрыПрописиНаАнглийском) Тогда
				СправочникОбъект.РЭЙ_ПараметрыПрописиНаАнглийском = СтрокаКлассификатора.ПараметрыПрописиНаАнглийском;
			КонецЕсли;
			СправочникОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СоздатьГруппуИностранныеБанки()
	Если Справочники.КлассификаторБанков.НайтиПоНаименованию("ИНОСТРАННЫЕ БАНКИ").Пустая() Тогда
		НоваяГруппа = Справочники.КлассификаторБанков.СоздатьГруппу();
		НоваяГруппа.Код = "ИН";
		НоваяГруппа.Наименование = "ИНОСТРАННЫЕ БАНКИ";
		НоваяГруппа.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД)
	// Текст
	СтрСообщения = "Выполнено обновление подсистемы ВЭД с версии " + ТекущаяВерсияПодсистемыВЭД + " на версию " + НоваяВерсияПодсистемыВЭД;
	ТекстВыполненныхОбновлений = ТекстВыполненныхОбновлений + ?(ПустаяСтрока(ТекстВыполненныхОбновлений), "", Символы.ПС) + СтрСообщения;

	// Табличный документ
	ИмяОбласти = "Версия_" + СтрЗаменить(НоваяВерсияПодсистемыВЭД, ".", "_");
	
	Макет = ПолучитьМакет("ОписаниеОбновлений");
	Область = Макет.Области.Найти(ИмяОбласти);
	
	Если Область <> Неопределено Тогда
		Область = Макет.ПолучитьОбласть(ИмяОбласти);
		ТабДокОписаниеОбновлений.Вывести(Область);
		Область = Макет.ПолучитьОбласть("Пробел");
		ТабДокОписаниеОбновлений.Вывести(Область);
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьРасширение() Экспорт
	НомерВерсииРасширения = "";
	МассивРасширений = РасширенияКонфигурации.Получить(Новый Структура("Имя", "РЭЙ_ВЭД"));
	Если МассивРасширений.Количество() > 0 Тогда
		НомерВерсииРасширения = МассивРасширений[0].Версия;
	КонецЕсли;
	
	Если МассивРасширений.Количество() > 0 Тогда
		РасширениеРЭЙВЭД = МассивРасширений[0];
	Иначе
		РасширениеРЭЙВЭД = РасширенияКонфигурации.Создать();
	КонецЕсли;
	
	РасширениеРЭЙВЭД.БезопасныйРежим = Ложь;
	ОписаниеЗащитыОтОпасныхДействий = Новый ОписаниеЗащитыОтОпасныхДействий;
	ОписаниеЗащитыОтОпасныхДействий.ПредупреждатьОбОпасныхДействиях = Ложь;
	РасширениеРЭЙВЭД.ЗащитаОтОпасныхДействий = ОписаниеЗащитыОтОпасныхДействий;
	РасширениеРЭЙВЭД.Записать(ПолучитьМакет("Расширение_РЭЙ_ВЭД"));
	
	ОбновленоРасширение = Истина;
КонецПроцедуры

Процедура УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД)
	Если НоваяВерсияПодсистемыВЭД = НомерПоследнейВерсии() Тогда
		ОбновитьРасширение();
	КонецЕсли;
	
	Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Установить(НоваяВерсияПодсистемыВЭД); 
КонецПроцедуры

Функция ВыполненыПроцедурыОбновленияОсновнойКонфигурации() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВерсииПодсистем.Версия
	|ИЗ
	|	РегистрСведений.ВерсииПодсистем КАК ВерсииПодсистем
	|ГДЕ
	|	ВерсииПодсистем.ЭтоОсновнаяКонфигурация";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.Версия = Метаданные.Версия Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

#КонецОбласти

#Область ПроцедурыОбновленияВерсий

Процедура ВыполнитьОбновление_2_0_0_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.0.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.0.0"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Сроки представления справки о подтверждающих документах
		РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.УстановитьИнициализационныеНастройки();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_1_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.1.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.0.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		//Заполнение флагов "экспорт/импорт" в СВО
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_СправкаОВалютныхОперацияхВалютныеОперации.Ссылка,
		|	КОЛИЧЕСТВО(РЭЙ_СправкаОВалютныхОперацияхВалютныеОперации.Ссылка) КАК Количество
		|ПОМЕСТИТЬ СВО
		|ИЗ
		|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК РЭЙ_СправкаОВалютныхОперацияхВалютныеОперации
		|
		|СГРУППИРОВАТЬ ПО
		|	РЭЙ_СправкаОВалютныхОперацияхВалютныеОперации.Ссылка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РЭЙ_СправкаОВалютныхОперацияхВалютныеОперации.Ссылка) = 1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РЭЙ_СправкаОВалютныхОперацияхВалютныеОперацииРучные.Ссылка,
		|	КОЛИЧЕСТВО(РЭЙ_СправкаОВалютныхОперацияхВалютныеОперацииРучные.Ссылка)
		|ИЗ
		|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперацииРучные КАК РЭЙ_СправкаОВалютныхОперацияхВалютныеОперацииРучные
		|
		|СГРУППИРОВАТЬ ПО
		|	РЭЙ_СправкаОВалютныхОперацияхВалютныеОперацииРучные.Ссылка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РЭЙ_СправкаОВалютныхОперацияхВалютныеОперацииРучные.Ссылка) = 1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РЭЙ_СправкаОВалютныхОперациях.Ссылка,
		|	NULL
		|ИЗ
		|	Документ.РЭЙ_СправкаОВалютныхОперациях КАК РЭЙ_СправкаОВалютныхОперациях
		|ГДЕ
		|	РЭЙ_СправкаОВалютныхОперациях.ПоСделке
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СВО.Ссылка
		|ИЗ
		|	СВО КАК СВО
		|
		|УПОРЯДОЧИТЬ ПО
		|	СВО.Ссылка.Дата";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ЗаполнитьФлагиЭкспортИмпорт();
			ДокументОбъект.Записать();
		КонецЦикла;
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_2_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.2.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.1.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_3_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.3.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.2.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Заполение регистра РЭЙ_ПоставкиПоКонтрактамВЭД
		ВалютаДолларыСША = Справочники.Валюты.НайтиПоКоду(840);
		Для Каждого текТип Из Метаданные.РегистрыСведений.РЭЙ_ПоставкиПоКонтрактамВЭД.Измерения.ПодтверждающийДокумент.Тип.Типы() Цикл
			МетаданныеДокумента = Метаданные.НайтиПоТипу(текТип);
			Если МетаданныеДокумента.Реквизиты.Найти("СуммаДокумента") = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ИмяТаблицы = МетаданныеДокумента.Имя;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Документы.Ссылка,
			|	Документы.Дата КАК Дата,
			|	РЭЙ_КонтрактыВЭД.Ссылка КАК КонтрактВЭД,
			|	Документы.СуммаДокумента,
			|	Документы.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
			|	Документы.ВалютаДокумента
			|ИЗ
			|	Документ." + ИмяТаблицы + " КАК Документы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
			|		ПО Документы.ДоговорКонтрагента = РЭЙ_КонтрактыВЭД.ДоговорКонтрагента
			|ГДЕ
			|	Документы.Проведен
			|
			|УПОРЯДОЧИТЬ ПО
			|	Документы.Дата
			|ИТОГИ ПО
			|	КонтрактВЭД";
			
			ВыборкаКонтракты = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаКонтракты.Следующий() Цикл
				Выборка = ВыборкаКонтракты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока Выборка.Следующий() Цикл
					НаборЗаписей = РегистрыСведений.РЭЙ_ПоставкиПоКонтрактамВЭД.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.ПодтверждающийДокумент.Установить(Выборка.Ссылка);
					НоваяЗапись = НаборЗаписей.Добавить();
					НоваяЗапись.ПодтверждающийДокумент = Выборка.Ссылка;
					НоваяЗапись.КонтрактВЭД = Выборка.КонтрактВЭД;
					НоваяЗапись.ДатаПоставки = Выборка.Дата;
					НоваяЗапись.СуммаВВалютеДокумента = Выборка.СуммаДокумента;
					НоваяЗапись.СуммаВВалютеКонтракта = РЭЙ_СлужебныйСервер.ПересчитатьИзВалютыВВалюту(НоваяЗапись.СуммаВВалютеДокумента, Выборка.Дата, Выборка.ВалютаДокумента, Выборка.ВалютаВзаиморасчетов);
					НоваяЗапись.СуммаВДолларахСША = РЭЙ_СлужебныйСервер.ПересчитатьИзВалютыВВалюту(НоваяЗапись.СуммаВВалютеДокумента, Выборка.Дата, Выборка.ВалютаДокумента, ВалютаДолларыСША);
					НаборЗаписей.Записать();
				КонецЦикла;
				РЭЙ_ЗадачиСервер.СозданиеЗадачПриПревышенииСуммы(ВыборкаКонтракты.КонтрактВЭД);
			КонецЦикла;
		КонецЦикла;
		
		// Заполение регистра РЭЙ_СрокиПредставленияПаспортаСделки
		РегистрыСведений.РЭЙ_СрокиПредставленияПаспортаСделки.УстановитьИнициализационныеНастройки();
		
		Справочники.РЭЙ_ВидыЗадачПользователей.УстановитьИнициализационныеНастройки();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_4_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.4.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.3.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Заполнение даты завершения обязательств по контракту
		Выборка = Справочники.РЭЙ_КонтрактыВЭД.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.КонтрактДатаОкончания) Тогда
				СправочникОбъект = Выборка.ПолучитьОбъект();
				СправочникОбъект.ЗаполнитьДатуЗавершенияОбязательствПоКонтракту();
				СправочникОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
		
		// Заполнение флага продление в доп. соглашениях
		Выборка = РегистрыСведений.РЭЙ_ДопСоглашения.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ДатаОкончанияКонтракта) Тогда
				Запись = Выборка.ПолучитьМенеджерЗаписи();
				Запись.ПродлениеКонтракта = Истина;
				Запись.Записать();
			КонецЕсли;
		КонецЦикла;
		
		//Заполнение реквизита "Дата начала использования подсистемы ВЭД" в справочнике организации
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_КонтрактыВЭД.Организация,
		|	РЭЙ_КонтрактыВЭД.КонтрактДатаНачала КАК Дата
		|ПОМЕСТИТЬ ОрганизацииСДатами
		|ИЗ
		|	Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
		|ГДЕ
		|	РЭЙ_КонтрактыВЭД.КонтрактДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
		|	И РЭЙ_КонтрактыВЭД.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И РЭЙ_КонтрактыВЭД.ПометкаУдаления = ЛОЖЬ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РЭЙ_КонтрактыВЭД.Организация,
		|	РЭЙ_КонтрактыВЭД.КонтрактДатаПодписания
		|ИЗ
		|	Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
		|ГДЕ
		|	РЭЙ_КонтрактыВЭД.КонтрактДатаПодписания <> ДАТАВРЕМЯ(1, 1, 1)
		|	И РЭЙ_КонтрактыВЭД.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И РЭЙ_КонтрактыВЭД.ПометкаУдаления = ЛОЖЬ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РЭЙ_КонтрактыВЭД.Организация,
		|	РЭЙ_КонтрактыВЭД.КонтрактДатаСоставления
		|ИЗ
		|	Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
		|ГДЕ
		|	РЭЙ_КонтрактыВЭД.КонтрактДатаСоставления <> ДАТАВРЕМЯ(1, 1, 1)
		|	И РЭЙ_КонтрактыВЭД.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И РЭЙ_КонтрактыВЭД.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОрганизацииСДатами.Организация,
		|	МИНИМУМ(ОрганизацииСДатами.Дата) КАК Дата
		|ИЗ
		|	ОрганизацииСДатами КАК ОрганизацииСДатами
		|
		|СГРУППИРОВАТЬ ПО
		|	ОрганизацииСДатами.Организация";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОрганизацияОбъект = Выборка.Организация.ПолучитьОбъект();
			ОрганизацияОбъект.РЭЙ_ДатаНачалаИспользованияПодсистемыВЭД = Выборка.Дата;
			ОрганизацияОбъект.Записать();
		КонецЦикла;
		
		// Заполнение реквизитов "Сумма" и "Валюта" в задачах
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_ЗадачиВЭД.Ссылка,
		|	ЕСТЬNULL(РЭЙ_ЗадачиВЭД.ОбъектЗадачи.ВалютаДокумента, РЭЙ_ЗадачиВЭД.ОбъектЗадачи.ДоговорКонтрагента.ВалютаВзаиморасчетов) КАК Валюта,
		|	ЕСТЬNULL(РЭЙ_ЗадачиВЭД.ОбъектЗадачи.СуммаДокумента, РЭЙ_ЗадачиВЭД.ОбъектЗадачи.КонтрактСумма) КАК Сумма
		|ИЗ
		|	Задача.РЭЙ_ЗадачиВЭД КАК РЭЙ_ЗадачиВЭД
		|ГДЕ
		|	(РЭЙ_ЗадачиВЭД.Сумма = 0
		|			ИЛИ РЭЙ_ЗадачиВЭД.Сумма = НЕОПРЕДЕЛЕНО
		|			ИЛИ РЭЙ_ЗадачиВЭД.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗадачаОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ЗадачаОбъект.Валюта = Выборка.Валюта;
			ЗадачаОбъект.Сумма = Выборка.Сумма;
			ЗадачаОбъект.Записать();
		КонецЦикла;
		
		// Инициализация справочников
		Справочники.РЭЙ_Инкотермс.Инициализировать();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_5_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.5.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.4.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Заполнение индексов картинок и ключевых реквизитов
		РЭЙ_ЗадачиСервер.Обновление_2_0_5_1();
		
		// СВО Заполнение даты расчетного документа
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СВО.Ссылка
		|ИЗ
		|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК СВО
		|ГДЕ
		|	СВО.ДатаРасчетногоДокумента = ДАТАВРЕМЯ(1, 1, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СВО.Ссылка.Дата";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			текОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектИзменен = Ложь;
			
			Для Каждого СтрокаТЧ Из текОбъект.ВалютныеОперации Цикл
				Если ЗначениеЗаполнено(СтрокаТЧ.РасчетныйДокумент) Тогда
					Если СтрокаТЧ.НаправлениеПлатежа = 1 Тогда
						Если ЗначениеЗаполнено(СтрокаТЧ.РасчетныйДокумент.ДатаВходящегоДокумента) Тогда
							СтрокаТЧ.ДатаРасчетногоДокумента = СтрокаТЧ.РасчетныйДокумент.ДатаВходящегоДокумента;
						Иначе
							СтрокаТЧ.ДатаРасчетногоДокумента = СтрокаТЧ.РасчетныйДокумент.Дата;
						КонецЕсли;
					Иначе
						СтрокаТЧ.ДатаРасчетногоДокумента = СтрокаТЧ.РасчетныйДокумент.Дата;
					КонецЕсли;
					ОбъектИзменен = Истина;
				КонецЕсли;	
			КонецЦикла;
			
			Если ОбъектИзменен Тогда
				текОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_5_2()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.5.2";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.5.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_6_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.6.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.5.2"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		УстановитьНумерациюСПрефиксами();
		
		// СПД Заполнение ТЧ Авансы
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СПД.Ссылка,
		|	СПД.Документ
		|ИЗ
		|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК СПД
		|ГДЕ
		|	СПД.Удалить_АвансоваяСправка <> ЗНАЧЕНИЕ(Документ.РЭЙ_СправкаОВалютныхОперациях.ПустаяСсылка)
		|	И СПД.Ссылка.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	СПД.Ссылка.Дата";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Выборка.Документ) Тогда
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				СтрокиТЧ = ДокументОбъект.ПодтверждающиеДокументы.НайтиСтроки(Новый Структура("Документ", Выборка.Документ));
				ОсновнаяСтрока = СтрокиТЧ[0];
				
				текСуммаВВалютеДокумента = 0;
				текСуммаВВалютеКонтракта = 0;
				ТекстПримечания = "";
				Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
					текСуммаВВалютеДокумента = текСуммаВВалютеДокумента + СтрокаТЧ.СуммаВВалютеДокумента;
					текСуммаВВалютеКонтракта = текСуммаВВалютеКонтракта + СтрокаТЧ.СуммаВВалютеКонтракта;
					Если Не ПустаяСтрока(СтрокаТЧ.Примечание) Тогда
						ТекстПримечания = ТекстПримечания + ?(ТекстПримечания = "", "", "; ") + СокрЛП(СтрокаТЧ.Примечание);
					КонецЕсли;
				КонецЦикла;
				ОсновнаяСтрока.Примечание = ТекстПримечания;
				
				ОсновнаяСтрока.КлючСвязи = Новый УникальныйИдентификатор;
				Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
					Если ЗначениеЗаполнено(СтрокаТЧ.Удалить_АвансоваяСправка) Тогда
						СтрокаАванса = ДокументОбъект.Авансы.Добавить();
						СтрокаАванса.КлючСвязи = ОсновнаяСтрока.КлючСвязи;
						СтрокаАванса.АвансоваяСправка = СтрокаТЧ.Удалить_АвансоваяСправка;
						СтрокаАванса.АвансовыйРасчетныйДокумент = СтрокаТЧ.Удалить_АвансовыйРасчетныйДокумент;
						Если СтрокаТЧ.ВалютаДокумента = ДокументОбъект.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
							СтрокаАванса.СуммаАвансаВВалютеКонтракта = СтрокаТЧ.СуммаВВалютеДокумента;
						Иначе
							СтрокаАванса.СуммаАвансаВВалютеКонтракта = СтрокаТЧ.СуммаВВалютеКонтракта;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				// Рассчитать итоги аванса
				СтрокиАвансов = ДокументОбъект.Авансы.НайтиСтроки(Новый Структура("КлючСвязи", ОсновнаяСтрока.КлючСвязи));
				текСуммаАвансаВВалютеКонтракта = 0;
				Для Каждого СтрокаАванса Из СтрокиАвансов Цикл
					текСуммаАвансаВВалютеКонтракта = текСуммаАвансаВВалютеКонтракта + СтрокаАванса.СуммаАвансаВВалютеКонтракта;
				КонецЦикла;
				Если ОсновнаяСтрока.ВалютаДокумента = ДокументОбъект.КонтрактВЭД.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
					ОсновнаяСтрока.СуммаАвансаВВалютеДокумента = текСуммаАвансаВВалютеКонтракта;
					ОсновнаяСтрока.СуммаАвансаВВалютеКонтракта = 0;
				Иначе
					ОсновнаяСтрока.СуммаАвансаВВалютеДокумента = РЭЙ_СлужебныйСервер.ПересчитатьИзВалютыВВалюту(текСуммаАвансаВВалютеКонтракта, ДокументОбъект.Документ.Дата, ОсновнаяСтрока.ВалютаКонтракта, ОсновнаяСтрока.ВалютаДокумента);
					ОсновнаяСтрока.СуммаАвансаВВалютеКонтракта = текСуммаАвансаВВалютеКонтракта;
				КонецЕсли;
				
				ОсновнаяСтрока.СуммаВВалютеДокумента = текСуммаВВалютеДокумента;
				ОсновнаяСтрока.СуммаВВалютеКонтракта = текСуммаВВалютеКонтракта;
				
				Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
					Если СтрокаТЧ <> ОсновнаяСтрока Тогда
						ДокументОбъект.ПодтверждающиеДокументы.Удалить(СтрокаТЧ);
					Иначе
						СтрокаТЧ.Удалить_АвансоваяСправка = Неопределено;
						СтрокаТЧ.Удалить_АвансовыйРасчетныйДокумент = Неопределено;
					КонецЕсли;
				КонецЦикла;
				
				Если ДокументОбъект.Проведен Тогда
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_7_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.7.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.6.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Заполнение реквизита "ТекущийБанк" в паспорте сделки
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_ПаспортСделки.Ссылка
		|ИЗ
		|	Документ.РЭЙ_ПаспортСделки КАК РЭЙ_ПаспортСделки
		|
		|УПОРЯДОЧИТЬ ПО
		|	РЭЙ_ПаспортСделки.Дата";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ПереводВДругойБанк.Очистить();
			ДокументОбъект.Записать();
		КонецЦикла;
		
		//Заполение данных о переводе ПС
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка
		|ИЗ
		|	Документ.РЭЙ_ЗаявлениеВБанкПС.ПаспортаСделок КАК РЭЙ_ЗаявлениеВБанкПСПаспортаСделок
		|ГДЕ
		|	РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ВидыОперацийЗаявлениеВБанк.ЗакрытиеПаспортаСделки)
		|	И РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка.ДатаЗакрытияПС <> ДАТАВРЕМЯ(1, 1, 1)
		|	И (РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка.ОснованиеЗакрытияПС = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_7_1_1)
		|			ИЛИ РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка.ОснованиеЗакрытияПС = ЗНАЧЕНИЕ(Перечисление.РЭЙ_ОснованияЗакрытияПС.пункт_3_18_1))
		|	И РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка.Дата";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ЗаполнитьРеквизитыЗакрытияПаспортаСделки(Истина);
			ДокументОбъект.ЗаполнитьРеквизитыПереводВДругойБанк(Истина);
		КонецЦикла;
		
		// Заполнение реквизита Пункт инструкции ЦБР
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_ЗаявлениеВБанкПС.Ссылка
		|ИЗ
		|	Документ.РЭЙ_ЗаявлениеВБанкПС КАК РЭЙ_ЗаявлениеВБанкПС
		|
		|УПОРЯДОЧИТЬ ПО
		|	РЭЙ_ЗаявлениеВБанкПС.Дата";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Записать();
		КонецЦикла;
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_8_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.8.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.7.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Заполнение реквизита "Печатная форма" в паспорте сделки
		Выборка = Документы.РЭЙ_ПаспортСделки.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДокументОбъект = Выборка.ПолучитьОбъект();
			Если ДокументОбъект.КонтрактВЭД.КредитныйДоговор = Ложь Тогда
				ДокументОбъект.ПечатнаяФорма = "Форма 1";
			Иначе
				ДокументОбъект.ПечатнаяФорма = "Форма 2";
			КонецЕсли;
			ДокументОбъект.Записать();
		КонецЦикла;
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_9_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.9.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.8.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Дозаполнить реквизиты ВЭД в классификаторе стран
		ЗаполнитьРеквизитыВЭДвСправочникеСтраны();
		
		// Дозаполнить реквизиты ВЭД в классификаторе валют
		ЗаполнитьРеквизитыВЭДвСправочникеВалюты();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_10_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.10.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.9.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Инициализация справочников
		Справочники.РЭЙ_ВидыПодтверждающихДокументов.Инициализировать();
		Справочники.РЭЙ_ВидыВалютныхОпераций.Инициализировать();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_11_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.11.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.10.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Заполнение паспорта сделки в контракте ВЭД
		Выборка = Документы.РЭЙ_ПаспортСделки.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Проведен Тогда
				ПаспортСделкиОбъект = Выборка.ПолучитьОбъект();
				ПаспортСделкиОбъект.ЗаполнитьПаспортСделкиВКонтрактеВЭД(Истина);
			КонецЕсли;
		КонецЦикла;
		
		// Заполнение ключа связи в СПД
		ПустойКлючСвязи = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
		Выборка = Документы.РЭЙ_СправкаОПодтверждающихДокументах.Выбрать(Дата(2015,01,01));
		Пока Выборка.Следующий() Цикл
			ДокументОбъект = Выборка.ПолучитьОбъект();
			ФлагИзменения = Ложь;
			Для Каждого СтрокаТЧ Из ДокументОбъект.ПодтверждающиеДокументы Цикл
				Если СтрокаТЧ.КлючСвязи = ПустойКлючСвязи Тогда
					СтрокаТЧ.КлючСвязи = Новый УникальныйИдентификатор;
					ФлагИзменения = Истина;
				КонецЕсли;
			КонецЦикла;
			Если ФлагИзменения Тогда
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЦикла;
		
		
		// Заполнение доп. соглашений
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
		|	ДоговорыКонтрагентов.Родитель КАК Папка
		|ПОМЕСТИТЬ ВозможныеДопСоглашения
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РЭЙ_ДопСоглашения КАК РЭЙ_ДопСоглашения
		|		ПО ДоговорыКонтрагентов.Ссылка = РЭЙ_ДопСоглашения.ДопСоглашение
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
		|		ПО ДоговорыКонтрагентов.Ссылка = РЭЙ_КонтрактыВЭД.ДоговорКонтрагента
		|ГДЕ
		|	РЭЙ_ДопСоглашения.ДопСоглашение ЕСТЬ NULL 
		|	И РЭЙ_КонтрактыВЭД.Ссылка ЕСТЬ NULL 
		|	И ДоговорыКонтрагентов.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РЭЙ_КонтрактыВЭД.ДоговорКонтрагента.Родитель КАК Папка,
		|	МИНИМУМ(РЭЙ_КонтрактыВЭД.Ссылка) КАК КонтрактВЭД,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РЭЙ_КонтрактыВЭД.Ссылка) КАК Ссылка
		|ПОМЕСТИТЬ РамочныеКонтрактыСоСвоимиПапками
		|ИЗ
		|	Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
		|ГДЕ
		|	РЭЙ_КонтрактыВЭД.РамочныйКонтракт
		|	И РЭЙ_КонтрактыВЭД.ДоговорКонтрагента.Родитель <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	РЭЙ_КонтрактыВЭД.ДоговорКонтрагента.Родитель
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РЭЙ_КонтрактыВЭД.Ссылка) = 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РамочныеКонтрактыСоСвоимиПапками.КонтрактВЭД КАК КонтрактВЭД,
		|	ВозможныеДопСоглашения.Ссылка КАК ДопСоглашение,
		|	ВозможныеДопСоглашения.Ссылка.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов
		|ИЗ
		|	ВозможныеДопСоглашения КАК ВозможныеДопСоглашения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РамочныеКонтрактыСоСвоимиПапками КАК РамочныеКонтрактыСоСвоимиПапками
		|		ПО ВозможныеДопСоглашения.Папка = РамочныеКонтрактыСоСвоимиПапками.Папка";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаписьДопСоглашения = РегистрыСведений.РЭЙ_ДопСоглашения.СоздатьМенеджерЗаписи();
			ЗаписьДопСоглашения.Договор = Выборка.КонтрактВЭД;
			ЗаписьДопСоглашения.ДопСоглашение = Выборка.ДопСоглашение;
			ЗаписьДопСоглашения.Валюта = Выборка.ВалютаВзаиморасчетов;
			ЗаписьДопСоглашения.Записать();
		КонецЦикла;
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_12_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.12.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.11.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
				
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_13_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.13.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.12.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Обновить информацию о метаданных
		Справочники.ИдентификаторыОбъектовМетаданных.ОбновитьДанныеСправочника();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_14_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.14.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.13.1"	И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
				
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_15_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.15.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.14.1" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
				
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_16_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.16.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.15.1" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		РегистрыСведений.РЭЙ_НастройкиВидимостиПодсистемыВЭД.УстановитьИнициализационныеНастройки();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_17_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.17.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.16.1" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
				
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_17_2()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.17.2";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.17.1" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
				
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_17_3()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.17.3";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.17.2" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		Справочники.РЭЙ_ВидыПодтверждающихДокументов.Инициализировать();
		
		// Заполнение реквизита ВидСтартовойДатыОжидаемогоСрока в контрактах ВЭД
		Выборка = Справочники.РЭЙ_КонтрактыВЭД.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Не ЗначениеЗаполнено(Выборка.ВидСтартовойДатыОжидаемогоСрока) Тогда
				текОбъект = Выборка.ПолучитьОбъект();
				текОбъект.ВидСтартовойДатыОжидаемогоСрока = Перечисления.РЭЙ_ВидыСтартовыхДатОжидаемогоСрока.ДатаДокумента;
				текОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_18_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.18.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.17.3" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		// Сроки представления паспорта сделки
		РегистрыСведений.РЭЙ_СрокиПредставленияПаспортаСделки.УстановитьИнициализационныеНастройки();
		
		// Справочник "Виды задач пользователей" установка флага "Использование"
		Справочники.РЭЙ_ВидыЗадачПользователей.УстановитьИнициализационныеНастройки();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_19_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.19.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.18.1" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
				
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_20_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.20.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.19.1" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
				
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_0_21_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.0.21.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.20.1" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		Справочники.РЭЙ_ВидыПодтверждающихДокументов.Инициализировать();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_5_0_1()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.5.0.1";

	Если ТекущаяВерсияПодсистемыВЭД = "2.0.21.1" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		Справочники.РЭЙ_ВидыВалютныхОпераций.Инициализировать();
		Справочники.РЭЙ_ВидыПодтверждающихДокументов.Инициализировать();
		
		// Настройки параметров валютного контроля
		НаборЗаписей = РегистрыСведений.РЭЙ_НастройкиПараметровВалютногоКонтроля.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.ЛимитБезПредоставленияДокументовВБанк = Запись.ЛимитБезПостановкиНаУчетКонтрактаИмпорт;
			Запись.ЛимитБезПостановкиНаУчетКонтрактаЭкспорт = Запись.ЛимитБезПостановкиНаУчетКонтрактаИмпорт;
			Запись.ЛимитБезПостановкиНаУчетКредитногоДоговора = Запись.ЛимитБезПостановкиНаУчетКонтрактаИмпорт;
		КонецЦикла;
		НаборЗаписей.Записать();
		
		РегистрыСведений.РЭЙ_НастройкиПараметровВалютногоКонтроля.УстановитьИнициализационныеНастройки();
		
		// Заполение суммы в рублях РФ в регистре "Поставки"
		ВалютаРублиРФ = Справочники.Валюты.НайтиПоКоду(643);
		НаборЗаписей = РегистрыСведений.РЭЙ_ПоставкиПоКонтрактамВЭД.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.СуммаВРубляхРФ = РЭЙ_СлужебныйСервер.ПересчитатьИзВалютыВВалюту(Запись.СуммаВВалютеДокумента, Запись.ПодтверждающийДокумент.Дата, Запись.ПодтверждающийДокумент.ВалютаДокумента, ВалютаРублиРФ);
		КонецЦикла;
		НаборЗаписей.Записать();
		
		// Заполение суммы в рублях РФ в регистре "Платеж"
		ВалютаРублиРФ = Справочники.Валюты.НайтиПоКоду(643);
		НаборЗаписей = РегистрыСведений.РЭЙ_ПлатежиПоКонтрактамВЭД.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.СуммаВРубляхРФ = РЭЙ_СлужебныйСервер.ПересчитатьИзВалютыВВалюту(Запись.СуммаВВалютеДокумента, Запись.РасчетныйДокумент.Дата, Запись.РасчетныйДокумент.ВалютаДокумента, ВалютаРублиРФ);
		КонецЦикла;
		НаборЗаписей.Записать();
		
		// Сроки представления паспорта сделки
		РегистрыСведений.РЭЙ_СрокиПредставленияПаспортаСделки.УстановитьИнициализационныеНастройки();
		
		// Сроки представления справки о валютных операциях
		РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях.УстановитьИнициализационныеНастройки();
		
		// Сроки представления справки о подтверждающих документах
		РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.УстановитьИнициализационныеНастройки();
		
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_5_0_2()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.5.0.2";

	Если ТекущаяВерсияПодсистемыВЭД = "2.5.0.1" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_5_0_3()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.5.0.3";

	Если ТекущаяВерсияПодсистемыВЭД = "2.5.0.2" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
		
		РегистрыСведений.РЭЙ_НастройкиПараметровВалютногоКонтроля.ОчиститьРегистр(Дата(2018,01,01));
		РегистрыСведений.РЭЙ_НастройкиПараметровВалютногоКонтроля.УстановитьИнициализационныеНастройки();
		
		РегистрыСведений.РЭЙ_СрокиКонтроляПриближенияОжидаемыхСроков.ОчиститьРегистр(Дата(2018,01,01));
		РегистрыСведений.РЭЙ_СрокиКонтроляПриближенияОжидаемыхСроков.УстановитьИнициализационныеНастройки();
		
		РегистрыСведений.РЭЙ_СрокиПредставленияПаспортаСделки.ОчиститьРегистр(Дата(2018,01,01));
		РегистрыСведений.РЭЙ_СрокиПредставленияПаспортаСделки.УстановитьИнициализационныеНастройки();
		
		РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях.ОчиститьРегистр(Дата(2018,01,01));
		РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях.УстановитьИнициализационныеНастройки();
		
		РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.ОчиститьРегистр(Дата(2018,01,01));
		РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.УстановитьИнициализационныеНастройки();
		
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_5_0_4()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.5.0.4";

	Если ТекущаяВерсияПодсистемыВЭД = "2.5.0.3" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
				
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

Процедура ВыполнитьОбновление_2_5_0_5()
	ТекущаяВерсияПодсистемыВЭД = Константы.РЭЙ_НомерВерсииПодсистемыВЭД.Получить();
	НоваяВерсияПодсистемыВЭД = "2.5.0.5";

	Если ТекущаяВерсияПодсистемыВЭД = "2.5.0.4" И ТекущаяВерсияПодсистемыВЭД <> НоваяВерсияПодсистемыВЭД Тогда
		НачатьТранзакцию();
				
		УстановитьНомерВерсии(НоваяВерсияПодсистемыВЭД); 
		ЗафиксироватьТранзакцию();
		
		ВывестиИнформациюОбОбновлении(ТекущаяВерсияПодсистемыВЭД, НоваяВерсияПодсистемыВЭД);
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти