
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	ДЗ = РеквизитФормыВЗначение("НастройкиБота");
	Попытка
		МассивСтруктур = CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(Объект.НастройкиБота);
		ЗаполнитьДеревоЗначенийИзМассиваСтруктур(ДЗ, МассивСтруктур);
	Исключение
	КонецПопытки;
	Если ДЗ.Строки.Количество() = 0 Тогда
		СтрокаСтарт = ДЗ.Строки.Добавить();
		СтрокаСтарт.callback_data = "/start";
	КонецЕсли;
	ЗначениеВРеквизитФормы(ДЗ, "НастройкиБота");
	Если Параметры.Свойство("Прокси") И Параметры.Прокси<>Неопределено Тогда
		Объект.ПроксиСервер = Параметры.Прокси.Сервер;
		Объект.ПроксиПорт = Параметры.Прокси.Порт;
		Если Параметры.Прокси.Свойство("Пользователь") Тогда
			Объект.ПроксиПользователь = Параметры.Прокси.Пользователь;
			Объект.ПроксиПароль = Параметры.Прокси.Пароль;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСправка(Команда)

	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("АРМДиалоги"));

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	Попытка
		ПроверитьПодключениеКTelegram();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Подключение прошло успешно.'"));
	Исключение
		Инфо = ИнформацияОбОшибке();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Инфо.Причина.Описание);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	Если ПроверитьЗаполнение() Тогда
		ПараметрыДоступа = Новый Структура;
		ПараметрыДоступа.Вставить("Токен", Объект.Токен);
		Если ЗначениеЗаполнено(Объект.ПроксиСервер) Тогда
			ПараметрыДоступа.Вставить("Прокси", Новый Структура("Сервер, Порт, Пользователь, Пароль",
						Объект.ПроксиСервер, Объект.ПроксиПорт, Объект.ПроксиПользователь, Объект.ПроксиПароль));
		Иначе
			ПараметрыДоступа.Вставить("Прокси", Неопределено);
		КонецЕсли;
		Объект.НастройкиБота = СформироватьТекстОтвета();
		ПараметрыДоступа.Вставить("НастройкиБота", Объект.НастройкиБота);
		Закрыть(ПараметрыДоступа);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьПодключениеКTelegram()
	Если ЗначениеЗаполнено(Объект.ПроксиСервер) Тогда
		HTTPПрокси = Новый Структура("Сервер, Порт, Пользователь, Пароль", Объект.ПроксиСервер, Объект.ПроксиПорт, Объект.ПроксиПользователь, Объект.ПроксиПароль);
	Иначе
		HTTPПрокси = Неопределено;
	КонецЕсли;
	ДанныеБота = Обработки.CRM_РаботаСМессенджеромTelegram.ДанныеБотаTelegram(Объект.Токен, HTTPПрокси);
КонецПроцедуры

#Область ДействияБота

Функция СформироватьТекстОтвета()
	ДЗ = РеквизитФормыВЗначение("НастройкиБота");
	МассивСтруктур = ДеревоЗначенийВМассивСтруктур(ДЗ);
	ТекстКнопок = ПолучитьСтрокуJSON(МассивСтруктур);
	Возврат ТекстКнопок;
КонецФункции

Функция ПолучитьСтрокуJSON(Значение)
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет,,Истина));
	ЗаписатьJSON(ЗаписьJSON, Значение);
	Возврат ЗаписьJSON.Закрыть();
КонецФункции
	
Функция ДеревоЗначенийВМассивСтруктур(Дерево, ИменаКолонок = "")
	Результат = Новый Массив;
	
	Если ИменаКолонок = "" Тогда
		ИменаКолонок = "Строки";
		Для Каждого Колонка Из Дерево.Колонки Цикл
			ИменаКолонок = ИменаКолонок + "," + Колонка.Имя;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Строка Из Дерево.Строки Цикл
		СтруктураСтроки = Новый Структура(ИменаКолонок);
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, Строка);
		СтруктураСтроки.Строки = ДеревоЗначенийВМассивСтруктур(Строка, ИменаКолонок);
		Результат.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Процедура ЗаполнитьДеревоЗначенийИзМассиваСтруктур(Дерево, МассивСтруктур) 
	Если ТипЗнч(Дерево) = Тип("ДеревоЗначений") Тогда 
		СтруктураКолонок = МассивСтруктур[0];
		Для Каждого Поле Из СтруктураКолонок Цикл
			Если Поле.Ключ = "Строки" Тогда Продолжить КонецЕсли;
			Если Дерево.Колонки.Найти(Поле.Ключ) = Неопределено Тогда
				Дерево.Колонки.Добавить(Поле.Ключ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли; 
	Для Каждого Строка Из МассивСтруктур Цикл
		СтрокаДЗ = Дерево.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДЗ, Строка);
		ЗаполнитьДеревоЗначенийИзМассиваСтруктур(СтрокаДЗ, Строка.Строки)
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

