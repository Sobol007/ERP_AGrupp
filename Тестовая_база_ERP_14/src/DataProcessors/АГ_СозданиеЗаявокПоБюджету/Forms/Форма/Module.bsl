
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ДатаПлатежа = ТекущаяДата();
	Объект.Основание = Параметры.Основание;
	Объект.Подразделение = Параметры.Основание.Подразделение;
	Объект.Организация = Объект.Основание.Аналитика1;
	ЗаполнитьТаблицуЛимитов();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЛимитов()

	//Статус = Перечисления.СтатусыПланов.ВПодготовке;
	Объект.Организация = Объект.Основание.Аналитика1;
	Объект.Подразделение = Объект.Основание.Подразделение;

	Сценарий = Объект.Основание.Сценарий;
	НачалоПериода = Объект.Основание.НачалоПериода;
	ОкончаниеПериода = Объект.Основание.ОкончаниеПериода;
	ВидБюджета = Объект.Основание.ВидБюджета; 
	
	ГраницаФактДанных = Объект.Основание.ГраницаФактДанных;
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОборотыБюджетовОбороты.СтатьяБюджетов КАК СтатьяБюджетов,
	               |	ОборотыБюджетовОбороты.Валюта КАК Валюта,
	               |	ОборотыБюджетовОбороты.Аналитика1 КАК СтатьяДДС,
	               |	ОборотыБюджетовОбороты.Аналитика2 КАК Контрагент,
	               |	ОборотыБюджетовОбороты.Аналитика3 КАК Договор,
	               |	ОборотыБюджетовОбороты.Аналитика5 КАК СтатьяРасходов,
	               |	СУММА(ОборотыБюджетовОбороты.СуммаУпрОборот) КАК СуммаЛимита,
	               |	СУММА(ОборотыБюджетовОбороты.СуммаВВалютеОборот) КАК СуммаВВалюте
	               |ИЗ
	               |	РегистрНакопления.ОборотыБюджетов.Обороты(, , Авто, ) КАК ОборотыБюджетовОбороты
	               |ГДЕ
	               |	ОборотыБюджетовОбороты.Регистратор = &Регистратор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОборотыБюджетовОбороты.СтатьяБюджетов,
	               |	ОборотыБюджетовОбороты.Валюта,
	               |	ОборотыБюджетовОбороты.Аналитика1,
	               |	ОборотыБюджетовОбороты.Аналитика2,
	               |	ОборотыБюджетовОбороты.Аналитика3,
	               |	ОборотыБюджетовОбороты.Аналитика5
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ОборотыБюджетовОбороты.Аналитика1";
	
	Запрос.УстановитьПараметр("Регистратор", Объект.Основание);
	Рез = Запрос.Выполнить().Выгрузить();
	Рез.Колонки.Добавить("ХозяйственнаяОперация",Неопределено);
	Рез.ЗаполнитьЗначения(Перечисления.ХозяйственныеОперации.ПустаяСсылка(),"ХозяйственнаяОперация");
	Рез.Колонки.Добавить("СуммаЗаявки",Неопределено);
	Рез.ЗаполнитьЗначения(0,"СуммаЗаявки");
	Для Каждого Стр Из Рез Цикл
		Если Стр.СтатьяДДС.ХозяйственныеОперации.Количество() = 1 Тогда
			Стр.ХозяйственнаяОперация = Стр.СтатьяДДС.ХозяйственныеОперации[0].ХозяйственнаяОперация;
		КонецЕсли;
		
		Условие = "";	
		Запрос.УстановитьПараметр("ДатаНП",НачалоПериода);
		Запрос.УстановитьПараметр("ДатаКП",Объект.ДатаПлатежа);		
	
		Запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
		Запрос.УстановитьПараметр("Аналитика1",Стр.СтатьяДДС); 
		
		Запрос.УстановитьПараметр("Валюта",Стр.Валюта);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЛимитыДСПоЗаявкамОбороты.СуммаОплатыОборот КАК СуммаОплаты
		               |ИЗ
		               |	РегистрНакопления.АГ_ЛимитыДСПоЗаявкам.Обороты(
		               |			&ДатаНП,
		               |			&ДатаКП,
		               |			Авто,
		               |				Подразделение = &Подразделение
		               |				И ВалютаПлатежа = &Валюта) КАК ЛимитыДСПоЗаявкамОбороты
		               |ГДЕ
		               |	ЛимитыДСПоЗаявкамОбороты.Аналитика1 = &Аналитика1
		               |	И ЛимитыДСПоЗаявкамОбороты.Аналитика1Использование = ИСТИНА
					   |	#Условие#";

		Если ЗначениеЗаполнено(Стр.Контрагент) Тогда
			Условие = Условие + "	И ЛимитыДСПоЗаявкамОбороты.Аналитика2 = &Аналитика2 И ЛимитыДСПоЗаявкамОбороты.Аналитика2Использование = ИСТИНА"; 
			Запрос.УстановитьПараметр("Аналитика2",Стр.Контрагент); 
		Иначе
			Условие = Условие + "	И ЛимитыДСПоЗаявкамОбороты.Аналитика2Использование = Ложь"; 	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Стр.Договор) Тогда
			Условие = Условие + "	И ЛимитыДСПоЗаявкамОбороты.Аналитика3 = &Аналитика3 И ЛимитыДСПоЗаявкамОбороты.Аналитика3Использование = ИСТИНА"; 
			Запрос.УстановитьПараметр("Аналитика3",Стр.Договор); 
		Иначе
			Условие = Условие + "	И ЛимитыДСПоЗаявкамОбороты.Аналитика3Использование = Ложь"; 	
		КонецЕсли;		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"#Условие#", Условие);
			
		РезФакт = Запрос.Выполнить().Выгрузить();		
		Если РезФакт.Количество() > 0 Тогда
			Стр.СуммаЛимита = Стр.СуммаЛимита - РезФакт.Итог("СуммаОплаты");
		КонецЕсли;
		Стр.СуммаЗаявки = Стр.СуммаЛимита;
	КонецЦикла;
	
	
	Объект.ТаблицаЛимитов.Загрузить(Рез);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкуПоСтроке(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Сообщить("Необходимо заполнить организацию!");
		Возврат;
	КонецЕсли;
	Если Элементы.ТаблицаЛимитов.ТекущиеДанные.СуммаЗаявки <= 0 Тогда
		Сообщить("Сумма заявки должна быть больше 0!");
		Возврат;
	КонецЕсли;		
	ФормаПодчиненного = ПолучитьФорму("Документ.ЗаявкаНаРасходованиеДенежныхСредств.Форма.ФормаДокумента");
	ОбъектФормы = ФормаПодчиненного.Объект;
	СоздатьЗаявкуПоСтрокеНаСервере(ОбъектФормы);
	КопироватьДанныеФормы(ОбъектФормы, ФормаПодчиненного.Объект);
	ФормаПодчиненного.Модифицированность = Истина;
	ФормаПодчиненного.Открыть();
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаявкуПоСтрокеНаСервере(ОбъектФормы)
	ТекСтрока = Объект.ТаблицаЛимитов[Элементы.ТаблицаЛимитов.ТекущаяСтрока];
	ДокументОбъект = ДанныеФормыВЗначение(ОбъектФормы, Тип("ДокументОбъект.ЗаявкаНаРасходованиеДенежныхСредств"));
	
	ДокументОбъект.Дата = ТекущаяДата();
	ДокументОбъект.ДатаПлатежа = Объект.ДатаПлатежа;
		
	ДокументОбъект.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована;
	ДокументОбъект.ФормаОплатыЗаявки = Перечисления.ФормыОплаты.Безналичная;
	ДокументОбъект.ХозяйственнаяОперация = ТекСтрока.ХозяйственнаяОперация;
	ДокументОбъект.Организация = Объект.Организация;
	ДокументОбъект.Подразделение = Объект.Подразделение;
	ДокументОбъект.Контрагент = ТекСтрока.Контрагент;
	ДокументОбъект.Договор = ТекСтрока.Договор;
	ДокументОбъект.СтатьяДвиженияДенежныхСредств = ТекСтрока.СтатьяДДС;
	ДокументОбъект.Валюта = Справочники.Валюты.НайтиПоКоду("643");
	ДокументОбъект.АГ_ПланОснование = Объект.Основание;
	ДокументОбъект.АГ_СтатьяРасходов = ТекСтрока.СтатьяРасходов; 
	СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
	СтруктураПараметров.Организация = ДокументОбъект.Организация;
	СтруктураПараметров.ФормаОплаты = ДокументОбъект.ФормаОплатыЗаявки;
	СтруктураПараметров.БанковскийСчет = ДокументОбъект.БанковскийСчет;
	СтруктураПараметров.Валюта = ДокументОбъект.Валюта;
	ДокументОбъект.БанковскийСчет = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);

		
	СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияКассыОрганизацииПоУмолчанию();
	СтруктураПараметров.Организация = ДокументОбъект.Организация;
	СтруктураПараметров.ФормаОплаты = ДокументОбъект.ФормаОплатыЗаявки;
	СтруктураПараметров.Касса       = ДокументОбъект.Касса;
	СтруктураПараметров.Валюта = ДокументОбъект.Валюта;
	ДокументОбъект.Касса = ЗначениеНастроекПовтИсп.ПолучитьКассуОрганизацииПоУмолчанию(СтруктураПараметров);
	
	ДокументОбъект.БанковскийСчетКонтрагента = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(ДокументОбъект.Контрагент, ДокументОбъект.Валюта);
	
	Справочники.БанковскиеСчетаОрганизаций.НайтиПоРеквизиту("ОсновнойБанковскийСчет",Истина,,ДокументОбъект.Организация);
	ДокументОбъект.СуммаДокумента = ТекСтрока.СуммаЗаявки;
	
	ДокументОбъект.ЖелательнаяДатаПлатежа = Объект.ДатаПлатежа;
	ДокументОбъект.КтоЗаявил = ПараметрыСеанса.ТекущийПользователь;

	СтрРасшифровка = ДокументОбъект.РасшифровкаПлатежа[0];
	СтрРасшифровка.Партнер = ТекСтрока.Контрагент.Партнер;
	СтрРасшифровка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20;
	СтрРасшифровка.Сумма = ТекСтрока.СуммаЗаявки;
	СтрРасшифровка.СтатьяДвиженияДенежныхСредств = ТекСтрока.СтатьяДДС;
	СтрРасшифровка.СуммаВзаиморасчетов = ТекСтрока.СуммаЗаявки;
	СтрРасшифровка.ВалютаВзаиморасчетов =ДокументОбъект.Валюта;		
	
	СтрокаРаспределение = ДокументОбъект.РаспределениеПоСчетам.Добавить();
	//СтрокаРаспределение.БанковскийСчетКасса = Объект.БанковскийСчетОрганизации;
	СтрокаРаспределение.ДатаПлатежа = Объект.ДатаПлатежа;
	СтрокаРаспределение.Сумма = ТекСтрока.СуммаЗаявки;
		//
		//
		//

	ТекПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(СтрРасшифровка.СтавкаНДС);
	СтрРасшифровка.СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СтрРасшифровка.Сумма, СтрРасшифровка.СтавкаНДС, Истина);			
	ЗначениеВДанныеФормы(ДокументОбъект, ОбъектФормы);
КонецПроцедуры



