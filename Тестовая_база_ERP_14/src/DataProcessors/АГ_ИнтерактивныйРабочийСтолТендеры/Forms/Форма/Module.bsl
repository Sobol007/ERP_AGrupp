#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьЦветомОбозначениеСтатусовПриИзменении(Элемент)
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ТендерыПриАктивизацииСтроки(Элемент)
	
	ОбновитьБлокИнформации();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьВЭксель(Команда)
	ОткрытьФорму("Обработка.АГ_ИнтерактивныйРабочийСтолТендеры.Форма.ФормаВыгрузки",,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлы(Команда)
	
	ТекущийТендер	= Элементы.Тендеры.ТекущиеДанные.Ссылка;
	
	ЗначениеОтбора  = Новый Структура("ВладелецФайла", ТекущийТендер);
	ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
	ПараметрыВыбора.Вставить("ЗаголовокФормы","Файлы по документу:"+ТекущийТендер);
	ОткрытьФорму("Справочник.АГ_ТендерПрисоединенныеФайлы.Форма.ФормаПросмотраПеречняФайлов", ПараметрыВыбора);
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетПоСтатистике(Команда)
	
	ТекущийТендер	= Элементы.Тендеры.ТекущиеДанные;
	Если ТекущийТендер=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина);
	
	Отбор = Новый Структура("Партнер", ТекущийТендер.Партнер);
	ПараметрыОткрытия.Вставить("Отбор",Отбор);
	
	
	ФормаОтчета = ПолучитьФорму("Отчет.АГ_ИсторияТендеров.Форма", ПараметрыОткрытия,ЭтаФорма);
    НовыеПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
    ФормаОтчета.Отчет.КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(НовыеПользовательскиеНастройки);
    ОткрытьФорму(ФормаОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Тендеры.УсловноеОформление.Элементы.Очистить();
	
	
	//Тендеры у которых от текущей даты до даты ОПЗ меньше суток выделять красным шрифтом
	
	ЭлементУсловногоОформления = Тендеры.УсловноеОформление.Элементы.Добавить();

	ГруппаЭлементовОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОПЗ");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ЭлементОтбора.ПравоеЗначение = ТекущаяДатаСеанса()+3600*24;
	
	ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОПЗ");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбора.ПравоеЗначение = ТекущаяДатаСеанса();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Томатный);
	
	//Тендеры у которых меньше суток до даты контрольного ответа – выделять зеленым шрифтом
	
	ЭлементУсловногоОформления = Тендеры.УсловноеОформление.Элементы.Добавить();

	ГруппаЭлементовОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаЭлементовОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтрольнаяДатаОтвета");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ЭлементОтбора.ПравоеЗначение = ТекущаяДатаСеанса()+3600*24;
	
	ЭлементОтбора = ГруппаЭлементовОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КонтрольнаяДатаОтвета");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбора.ПравоеЗначение = ТекущаяДатаСеанса();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ЛимонноЗеленый);
	
	Если ВыделитьЦветомОбозначениеСтатусов Тогда
		//победы с желтым фоном
		
		ЭлементУсловногоОформления = Тендеры.УсловноеОформление.Элементы.Добавить();
		
		ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СтатусТендера");
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Перечисления.АГ_СтатусТендера.Победа;
		
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьБлокИнформации()
	
	ТекущийТендер	= Элементы.Тендеры.ТекущиеДанные;
	Если ТекущийТендер<>Неопределено Тогда
		СтруктураСвойств	= СтруктураСвойствТендера(ТекущийТендер.Ссылка);
	
		ЗаполнитьЗначенияСвойств(ЭтаФорма,СтруктураСвойств);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтруктураСвойствТендера(ТекущийТендер)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АГ_Тендер.Организация КАК Организация,
		|	АГ_Тендер.ДатаПубликации КАК ДатаПубликации,
		|	АГ_Тендер.КонтрольнаяДатаОтвета КАК КонтрольнаяДатаОтвета,
		|	АГ_Тендер.ОПЗ КАК ОПЗ,
		|	АГ_Тендер.ДатаЗаключенияДоговора КАК ДатаЗаключенияДоговора,
		|	АГ_Тендер.ДатаПодведенияИтогов КАК ДатаПодведенияИтогов,
		|	АГ_Тендер.НМЦ КАК НМЦ,
		|	АГ_Тендер.ПериодПоставки КАК ПериодПоставки,
		|	АГ_Тендер.УсловияОплаты КАК УсловияОплаты,
		|	АГ_Тендер.ЗакупкаДляМСП КАК ЗакупкаДляМСП,
		|	АГ_Тендер.ОбеспечениеЗаявки КАК ОбеспечениеЗаявки,
		|	АГ_Тендер.ОбеспечениеДоговора КАК ОбеспечениеДоговора,
		|	АГ_Тендер.ГОЗ КАК ГОЗ,
		|	АГ_Тендер.ВидПодачиПредложения КАК ВидПодачиПредложения,
		|	АГ_Тендер.Сортамент КАК Сортамент
		|ИЗ
		|	Документ.АГ_Тендер КАК АГ_Тендер
		|ГДЕ
		|	АГ_Тендер.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АГ_ТендерКритерииОценки.КритерийОценки КАК КритерийОценки,
		|	АГ_ТендерКритерииОценки.Процент КАК Процент
		|ИЗ
		|	Документ.АГ_Тендер.КритерииОценки КАК АГ_ТендерКритерииОценки
		|ГДЕ
		|	АГ_ТендерКритерииОценки.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	АГ_ТендерКритерииОценки.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", ТекущийТендер);
	
	мРезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураСтвойств	= ОбщегоНазначения.ТаблицаЗначенийВМассив(мРезультатЗапроса[0].Выгрузить())[0];
	
	КритерииОценки	= "";
	ВыборкаДетальныеЗаписи = мРезультатЗапроса[1].Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если НЕ ПустаяСтрока(КритерииОценки) Тогда
			КритерииОценки	= КритерииОценки+", ";	
		КонецЕсли;	
		КритерииОценки	= КритерииОценки+ВыборкаДетальныеЗаписи.КритерийОценки+" "+ВыборкаДетальныеЗаписи.Процент+" % ";
	КонецЦикла;
	
	СтруктураСтвойств.Вставить("КритерииОценки",КритерииОценки);
	
	Возврат СтруктураСтвойств;
	
КонецФункции	

&НаКлиенте
Процедура ОткрытьОтчетАнализРаботыСТендерами(Команда)
	
	ФормаОтчета = ПолучитьФорму("Отчет.АГ_АнализРаботыСТендерами.Форма", ,ЭтаФорма);
    ОткрытьФорму(ФормаОтчета);
	
КонецПроцедуры


#КонецОбласти