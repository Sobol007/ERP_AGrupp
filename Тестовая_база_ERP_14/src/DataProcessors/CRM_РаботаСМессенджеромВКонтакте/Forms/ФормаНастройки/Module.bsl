
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	
	Элементы.ГруппаВебКлиент.Видимость = ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент();
	Элементы.ГруппаТонкийКлиент.Видимость = НЕ Элементы.ГруппаВебКлиент.Видимость;
	
	Если ЗначениеЗаполнено(Объект.Токен) Тогда
		ЗаполнитьСписокГрупп();
	Иначе
		ДанныеАккаунта = НСтр("ru = 'Авторизуйтесь на сайте ВКонтакте.'");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.IDГруппы) Тогда
		ЭлементСписка = Элементы.Группа.СписокВыбора.НайтиПоЗначению(Объект.IDГруппы);
		ПутьКСтраницеАвторизации = "https://oauth.vk.com/authorize?v=5.67&client_id=6086563&group_ids="+Объект.IDГруппы+"&scope=messages,manage,docs&redirect_uri=http://api.vk.com/blank.html&display=page&response_type=token";
		Если ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() Тогда
			//Оповещение = Новый ОписаниеОповещения("ОбработкаПредупрежденияПродолжение", ЭтотОбъект, ПутьКСтраницеАвторизации);
			//ПоказатьПредупреждение(Оповещение, НСтр("ru = 'Будет выполнен переход на страницу доступа к группе.
			//|После авторизации необходимо скопировать полученный токен (в адресной строке, после access_token_=) в поле ""Токен группы""'"));
			ОбработкаПредупрежденияПродолжение(ПутьКСтраницеАвторизации);
		Иначе
			ПараметрыАвторизации = Новый Структура("IDГруппы, ПутьКСтраницеАвторизации", Объект.IDГруппы, ПутьКСтраницеАвторизации);
			ОписаниеОповещения = Новый ОписаниеОповещения("ПолучениеТокенаГруппыVK", ЭтотОбъект);
			ОткрытьФорму("Обработка.CRM_РаботаСМессенджеромВКонтакте.Форма.ФормаАвторизации", ПараметрыАвторизации,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	Иначе
		Объект.Токен = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТокенПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Токен) Тогда
		ЗаполнитьСписокГрупп();
		//Если НЕ ЗначениеЗаполнено(Объект.IDГруппы) И Элементы.Группа.СписокВыбора.Количество()>0 Тогда
		//	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораГруппы", ЭтотОбъект);
		//	ПоказатьВыборИзСписка(ОписаниеОповещения, Элементы.Группа.СписокВыбора, Элементы.Группа2);
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	Если ПроверитьЗаполнение() Тогда
		ПараметрыДоступа = Новый Структура;
		ПараметрыДоступа.Вставить("Токен", Объект.Токен);
		ПараметрыДоступа.Вставить("ТокенГруппы", Объект.ТокенГруппы);
		ПараметрыДоступа.Вставить("IDГруппы", Объект.IDГруппы);
		Закрыть(ПараметрыДоступа);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Вход(Команда)
	ПутьКСтраницеАвторизации = "https://oauth.vk.com/authorize?v=5.67&client_id=6086563&scope=groups,offline,docs&redirect_uri=http://api.vk.com/blank.html&display=page&response_type=token";
	Если ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() Тогда
		//Оповещение = Новый ОписаниеОповещения("ОбработкаПредупрежденияПродолжение", ЭтотОбъект, ПутьКСтраницеАвторизации);
		//ПоказатьПредупреждение(Оповещение, НСтр("ru = 'Будет выполнен переход на сайт авторизации ВКонтакте.
		//|После авторизации необходимо скопировать полученный токен (в адресной строке, между access_token= и &expires_in) в поле ""Токен""'"));
		ОбработкаПредупрежденияПродолжение(ПутьКСтраницеАвторизации);
	Иначе
		ПараметрыАвторизации = Новый Структура("АвторизацияПользователя, ПутьКСтраницеАвторизации", Истина, ПутьКСтраницеАвторизации);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВходЗавершение", ЭтотОбъект);
		ОткрытьФорму("Обработка.CRM_РаботаСМессенджеромВКонтакте.Форма.ФормаАвторизации", ПараметрыАвторизации,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТокенГруппы(Команда)
	ГруппаПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСправка(Команда)

	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("АРМДиалоги"));

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	Попытка
		Если ЗначениеЗаполнено(Объект.IDГруппы) Тогда
			ПроверитьПодключениеСервер();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Подключение прошло успешно.'"));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбрана группа!'"));
		КонецЕсли;
	Исключение
		Инфо = ИнформацияОбОшибке();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Инфо.Причина.Описание);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТокенВК(Команда)
	Если ЗначениеЗаполнено(СсылкаАвторизацииВК) Тогда
		СтрокаНачалаТокена = "access_token=";
		Позиция = СтрНайти(СсылкаАвторизацииВК, СтрокаНачалаТокена);
		Если Позиция>0 Тогда
			Объект.Токен = Сред(СсылкаАвторизацииВК, Позиция+СтрДлина(СтрокаНачалаТокена),  СтрНайти(СсылкаАвторизацииВК, "&expires_in=")-(Позиция+13));
			ТокенПриИзменении(Неопределено);
		Иначе
			
		КонецЕсли;	
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Не заполнена ссылка авторизации!'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТокенГруппы(Команда)
	Если ЗначениеЗаполнено(СсылкаАвторизацииГруппы) И ЗначениеЗаполнено(Объект.IDГруппы) Тогда
		СтрокаНачалаТокена = "access_token_"+Объект.IDГруппы+"=";
		Позиция = СтрНайти(СсылкаАвторизацииГруппы, СтрокаНачалаТокена);
		Если Позиция>0 Тогда
			Объект.ТокенГруппы = Сред(СсылкаАвторизацииГруппы, Позиция+СтрДлина(СтрокаНачалаТокена));
		Иначе
			
		КонецЕсли;	
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Не заполнена ссылка разрешений группы или не выбрана группа!'"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаПредупрежденияПродолжение(Результат)
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(Новый ОписаниеОповещения("ОбработкаКомандыПродолжение", ЭтотОбъект, Результат), НСтр("ru='Для продолжения необходимо установить расширение для работы с файлами.';en='Continue, install the file operation extension.'"));	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыПродолжение(Результат, ДопПараметры) Экспорт
	//НачатьЗапускПриложения (Новый ОписаниеОповещения("ОбработкаКомандыЗавершение", ЭтотОбъект, Новый Структура), ДопПараметры);
	ПерейтиПоНавигационнойСсылке(ДопПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыЗавершение(Результат, ДопПараметры) Экспорт
	РезультирующаяСтрока = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВходЗавершение(ТокенСтруктура, ДопПараметры) Экспорт
	Если ТокенСтруктура<>Неопределено Тогда
		ВходЗавершениеНаСервере(ТокенСтруктура);
		Если НЕ ЗначениеЗаполнено(Объект.IDГруппы) И Элементы.Группа.СписокВыбора.Количество()>0 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораГруппы", ЭтотОбъект);
			ПоказатьВыборИзСписка(ОписаниеОповещения, Элементы.Группа.СписокВыбора, Элементы.Группа);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВходЗавершениеНаСервере(ТокенСтруктура)
	ВходЗавершениеВКонтакте(ТокенСтруктура);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокГрупп()
	Попытка
		ДанныеАккаунта = НСтр("ru = 'Запись авторизована под пользователем'") + ": " + Обработки.CRM_РаботаСМессенджеромВКонтакте.ДанныеГруппы(Объект.Токен);
		Элементы.ДанныеАккаунта.ЦветТекста = WebЦвета.ТемноЗеленый;
		Элементы.ДанныеАккаунта1.ЦветТекста = WebЦвета.ТемноЗеленый;
		Элементы.Вход.Картинка = БиблиотекаКартинок.CRM_ВиджетЦельВыполнена;
	Исключение
		ДанныеАккаунта = НСтр("ru = 'Авторизуйтесь на сайте ВКонтакте.'");
	КонецПопытки;
	СписокГрупп = Обработки.CRM_РаботаСМессенджеромВКонтакте.ПолучитьСписокГруппПользователя(Объект.Токен);
	Элементы.Группа.СписокВыбора.Очистить();
	Элементы.Группа2.СписокВыбора.Очистить();
	Если СписокГрупп <> Неопределено Тогда
		Для каждого Группа из СписокГрупп Цикл
			Элементы.Группа.СписокВыбора.Добавить(Группа.Значение, Группа.Представление);
			Элементы.Группа2.СписокВыбора.Добавить(Группа.Значение, Группа.Представление);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВходЗавершениеВКонтакте(ТокенСтруктура)
	Объект.Токен = ТокенСтруктура.Токен;
	ЗаполнитьСписокГрупп();
	ТекущийЭлемент = ?(Элементы.ГруппаВебКлиент.Видимость, Элементы.Группа2, Элементы.Группа);
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеТокенаГруппыVK(ТокенСтруктура, IDГруппы) Экспорт
	Если ТокенСтруктура<>Неопределено Тогда
		Объект.ТокенГруппы = ТокенСтруктура.Токен;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораГруппы(ВыбранныйЭлемент, ДопПараметры) Экспорт
	Если ВыбранныйЭлемент<>Неопределено Тогда
		Объект.IDГруппы = ВыбранныйЭлемент.Значение;
		ГруппаПриИзменении(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПроверитьПодключениеСервер()
	ДанныеГруппы = Обработки.CRM_РаботаСМессенджеромВКонтакте.ДанныеГруппы(Объект.ТокенГруппы);
КонецПроцедуры

#КонецОбласти




