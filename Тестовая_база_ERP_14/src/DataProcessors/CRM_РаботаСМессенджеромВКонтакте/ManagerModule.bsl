#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбязательныеМетодыПрограмногоИнтерфейса

Функция ПолучитьСообщения(УчетнаяЗапись) Экспорт
	
	СтруктураПараметровДоступа = CRM_РаботаСМессенджерамиСерверПовтИсп.СтруктураПараметровДоступа(УчетнаяЗапись);
	Если СтруктураПараметровДоступа=Неопределено Тогда Возврат Новый Массив; КонецЕсли;
	
	РесурсПрочтение = "/method/messages.markAsRead?v=5.80&access_token="+СтруктураПараметровДоступа.ТокенГруппы+"&start_message_id=";
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СообщениеМессенджера.ID_Пользователя КАК ID_Пользователя,
	                      |	CRM_СообщениеМессенджера.ID_Сообщения КАК ID_Сообщения,
	                      |	CRM_СообщениеМессенджера.Дата КАК Дата
	                      |ПОМЕСТИТЬ Сообщения
	                      |ИЗ
	                      |	Документ.CRM_СообщениеМессенджера КАК CRM_СообщениеМессенджера
	                      |ГДЕ
	                      |	CRM_СообщениеМессенджера.УчетнаяЗапись = &УчетнаяЗапись
	                      |	И CRM_СообщениеМессенджера.Группа = &Группа
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Сообщения.ID_Пользователя КАК ID_Пользователя,
	                      |	МАКСИМУМ(Сообщения.Дата) КАК Дата
	                      |ПОМЕСТИТЬ МаксДаты
	                      |ИЗ
	                      |	Сообщения КАК Сообщения
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Сообщения.ID_Пользователя
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	МАКСИМУМ(Сообщения.ID_Сообщения) КАК ID_Сообщения
	                      |ИЗ
	                      |	Сообщения КАК Сообщения
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксДаты КАК МаксДаты
	                      |		ПО Сообщения.Дата = МаксДаты.Дата
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Сообщения.ID_Пользователя КАК ID_Пользователя,
	                      |	МАКСИМУМ(Сообщения.ID_Сообщения) КАК ID_Сообщения
	                      |ИЗ
	                      |	Сообщения КАК Сообщения
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксДаты КАК МаксДаты
	                      |		ПО Сообщения.ID_Пользователя = МаксДаты.ID_Пользователя
	                      |			И Сообщения.Дата = МаксДаты.Дата
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Сообщения.ID_Пользователя");
	Запрос.УстановитьПараметр("Группа", СтруктураПараметровДоступа.IDГруппы);
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	Выборка = МассивРезультатов[2].Выбрать();
	Ресурс = "/method/messages.getConversations?v=5.80&count=200&extended=1&access_token="+СтруктураПараметровДоступа.ТокенГруппы;
	
	МассивСообщений = Новый Массив;
	СтруктураОтвета=CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
	Если СтруктураОтвета.Свойство("error") Тогда
		ВызватьИсключение СтруктураОтвета.error.error_msg;
	ИначеЕсли СтруктураОтвета.response.count > 0 Тогда
		Выборка = МассивРезультатов[3].Выбрать();
		Для каждого Диалог из СтруктураОтвета.response.items Цикл
			Выборка.Сбросить();
			user_id = Формат(Диалог.last_message.peer_id, "ЧГ=");
			Если Выборка.НайтиСледующий(user_id, "ID_Пользователя") Тогда
				Если Формат(Диалог.last_message.id, "ЧГ=") <> Выборка.ID_Сообщения Тогда
					РесурсИсторияДиалога = "/method/messages.getHistory?v=5.67&count=200&offset=-200&user_id="+user_id+"&start_message_id="+Выборка.ID_Сообщения+"&access_token="+СтруктураПараметровДоступа.ТокенГруппы;
				Иначе
					Продолжить;
				КонецЕсли;
			Иначе
				РесурсИсторияДиалога = "/method/messages.getHistory?v=5.67&count=200&user_id="+user_id+"&start_message_id="+Формат(Диалог.last_message.id, "ЧГ=")+"&access_token="+СтруктураПараметровДоступа.ТокенГруппы;
			КонецЕсли;
			МассивСообщенийДиалога = ПолучитьСообщенияVK(РесурсИсторияДиалога, РесурсПрочтение, УчетнаяЗапись, СтруктураПараметровДоступа.IDГруппы, СтруктураПараметровДоступа.ТокенГруппы);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивСообщений, МассивСообщенийДиалога);
		КонецЦикла;
	КонецЕсли;
	Возврат МассивСообщений;
	
КонецФункции

Функция ОтправитьСообщение(Сообщение, УчетнаяЗапись, IDПользователя, СписокФайлов, ДопПараметры) Экспорт
	
	СтруктураПараметровДоступа = CRM_РаботаСМессенджерамиСерверПовтИсп.СтруктураПараметровДоступа(УчетнаяЗапись);
	Токен = СтруктураПараметровДоступа.ТокенГруппы;
	Ресурс = "/method/messages.send?v=5.67&message="+Сообщение+"&user_id="+IDПользователя+"&access_token="+Токен;
	Если СписокФайлов<>Неопределено И СписокФайлов.Количество()> 0 Тогда
		attachment = "";
		Для каждого Вложение из СписокФайлов Цикл
			Файл = ЗагрузитьФайлНаСервер(Вложение.Значение, Вложение.Представление, IDПользователя, Токен);
			attachment = attachment + ?(attachment="", "", ",") + Файл;
		КонецЦикла;
		Ресурс = Ресурс + "&attachment="+attachment;
	КонецЕсли;
	СтруктураОтвета=CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
	Если СтруктураОтвета.Свойство("error") Тогда
		ВызватьИсключение СтруктураОтвета.error.error_msg;
	Иначе
		Возврат Формат(СтруктураОтвета.response, "ЧГ=");
	КонецЕсли;
	
КонецФункции

Процедура ОжиданиеСобытий(УчетнаяЗапись) Экспорт
	
	СтруктураПараметровДоступа = CRM_РаботаСМессенджерамиСерверПовтИсп.СтруктураПараметровДоступа(УчетнаяЗапись);
	Токен = СтруктураПараметровДоступа.ТокенГруппы;
	IDГруппы = СтруктураПараметровДоступа.IDГруппы;
	
	Ресурс = "/method/messages.getLongPollServer?v=5.67&lp_version=2&need_pts=0&access_token="+Токен;
	РесурсПрочтение = "/method/messages.markAsRead?v=5.67&access_token="+Токен+"&message_ids=";
	СтруктураОтвета=CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
	Если СтруктураОтвета.Свойство("error") Тогда
		ВызватьИсключение СтруктураОтвета.error.error_msg;
	Иначе
		Позиция = СтрНайти(СтруктураОтвета.response.server, "/");
		Сервер = Лев(СтруктураОтвета.response.server, Позиция-1);
		Путь = Сред(СтруктураОтвета.response.server, Позиция);
		ts = СтруктураОтвета.response.ts;
		Ресурс = Путь+"?act=a_check&key="+СтруктураОтвета.response.key+"&ts={$ts}&wait=25&mode=2&version=2";
	КонецЕсли;
	Ошибок = 0;
	Пока Ошибок < 5 Цикл
		Ресурс1 = СтрЗаменить(Ресурс, "{$ts}", Формат(ts, "ЧГ="));
		СтруктураОтвета=CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос(Сервер,"",Ресурс1));
		Если СтруктураОтвета.Свойство("error") Тогда
			ВызватьИсключение СтруктураОтвета.error.error_msg;
		ИначеЕсли СтруктураОтвета.Свойство("failed") Тогда
			Ошибок = Ошибок + 1;
			Если СтруктураОтвета.Свойство("ts") Тогда
				ts = СтруктураОтвета.ts;
			КонецЕсли;
		Иначе
			ts = СтруктураОтвета.ts;
			МассивСообщений = Новый Массив;
			Для каждого Событие из СтруктураОтвета.updates Цикл
				Если Событие[0] = 4 Тогда
					ID_Сообщения = Формат(Событие[1], "ЧГ=");
					РесурсСообщение = "/method/messages.getById?v=5.67&message_ids="+ID_Сообщения+"&access_token="+Токен;
					МассивСообщений = ПолучитьСообщенияVK(РесурсСообщение, РесурсПрочтение, УчетнаяЗапись, IDГруппы, Токен);
				ИначеЕсли Событие[0] = 7 Тогда
					ID_Пользователя = Формат(Событие[1], "ЧГ=");
					CRM_РаботаСМессенджерамиСервер.ПометитьИсходящиеКакПрочтенные(УчетнаяЗапись, IDГруппы, ID_Пользователя);
					CRM_РаботаСМессенджерамиСервер.ЗаписатьСобытиеМессенджера(Перечисления.CRM_СобытияМессенджеров.ПрочитаныСообщения, УчетнаяЗапись, ID_Пользователя);
				КонецЕсли;
				CRM_РаботаСМессенджерамиСервер.СоздатьСообщенияИзПолученныхДанных(УчетнаяЗапись, МассивСообщений);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьВидКИМессенджера(Контакт) Экспорт
	
	Наименование = "ВКонтакте";
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	                      |	ВидыКонтактнойИнформации.ПометкаУдаления КАК ПометкаУдаления
	                      |ИЗ
	                      |	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	                      |ГДЕ
	                      |	ВидыКонтактнойИнформации.Наименование = &Наименование
	                      |	И ВидыКонтактнойИнформации.Тип = &Тип
	                      |	И ВидыКонтактнойИнформации.Родитель = &Родитель");
	
	Если ТипЗнч(Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
		Родитель = Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыЧастноеЛицо;
	ИначеЕсли ТипЗнч(Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
		Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров;
	ИначеЕсли ТипЗнч(Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		Родитель = Справочники.ВидыКонтактнойИнформации.СправочникCRM_ПотенциальныеКлиенты;
	КонецЕсли;
	
	ТипКИ = ТипКИМессенджера();
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Тип", ТипКИ);
	Запрос.УстановитьПараметр("Родитель", Родитель);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ПометкаУдаления Тогда
			Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Ложь);
		КонецЕсли;
		Возврат Выборка.Ссылка;
	Иначе
		УстановитьПривилегированныйРежим(Истина);
		НовыйВидКИ = Справочники.ВидыКонтактнойИнформации.СоздатьЭлемент();
		НовыйВидКИ.Родитель = Родитель;
		НовыйВидКИ.Наименование = Наименование;
		НовыйВидКИ.Тип = ТипКИ;
		НовыйВидКИ.Используется = Истина;
		НовыйВидКИ.Записать();
		УстановитьПривилегированныйРежим(Ложь);
		Возврат НовыйВидКИ.Ссылка;
	КонецЕсли;
	
КонецФункции

Функция ТипКИМессенджера() Экспорт
	
	Возврат Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
	
КонецФункции

Функция НачалоАдресаСтраницыПользователя() Экспорт
	Возврат "https://vk.com/id";
КонецФункции

Функция ПутьКДиалогуВБраузере(Структура) Экспорт
	Возврат "https://vk.com/gim"+Структура.Группа+"?sel="+Структура.ID_Пользователя
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеМетоды

Функция ПолучитьСписокГруппПользователя(Токен) Экспорт
	Ресурс = "/method/groups.get?v=5.67&extended=1&filter=admin&access_token="+Токен;
	СтруктураОтвета=CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
	Если СтруктураОтвета.Свойство("error") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтруктураОтвета.error.error_msg);
	Иначе
		СписокГрупп = Новый СписокЗначений;
		Для каждого Группа из СтруктураОтвета.response.items Цикл
			СписокГрупп.Добавить(Формат(Группа.id, "ЧГ="), Группа.name);
		КонецЦикла;
		Возврат СписокГрупп;
	КонецЕсли;
КонецФункции

Функция ЗагрузитьФайлНаСервер(АдресВХранилище, ИмяФайла, IDПользователя, Токен)
	
	Ресурс = "/method/docs.getMessagesUploadServer?v=5.67&peer_id="+IDПользователя+"&access_token="+Токен;
	СтруктураОтвета=CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
	Если СтруктураОтвета.Свойство("error") Тогда
		ВызватьИсключение СтруктураОтвета.error.error_msg;
	Иначе
		СерверЗагрузки = СтрЗаменить(СтруктураОтвета.response.upload_url, "https://", "");
	КонецЕсли;
	
	Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");

	Тело         = Новый ПотокВПамяти();
    ЗаписьДанных = Новый ЗаписьДанных(Тело,КодировкаТекста.ANSI);
    ЗаписьДанных.ЗаписатьСтроку("--"+Boundary);
    ЗаписьДанных.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename="""+ИмяФайла+"""");
    ЗаписьДанных.ЗаписатьСтроку("");
	ЗаписьДанных.Записать(ПолучитьИзВременногоХранилища(АдресВХранилище));
	ЗаписьДанных.ЗаписатьСтроку("");
    ЗаписьДанных.ЗаписатьСтроку("--"+Boundary);

    ДвоичныеДанныеДляОтправки = Тело.ЗакрытьИПолучитьДвоичныеДанные();
    ЗаголовокHTTP = Новый Соответствие;
    ЗаголовокHTTP.Вставить("Content-Type", "multipart/form-data; boundary="+Boundary);
    ЗаголовокHTTP.Вставить("Content-Length", XMLСтрока(ДвоичныеДанныеДляОтправки.Размер()));
        
    Соединение = Новый HTTPСоединение(СерверЗагрузки,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
       
    ЗапросHTTP      = Новый HTTPЗапрос("",ЗаголовокHTTP);
    ЗапросHTTP.УстановитьТелоИзДвоичныхДанных(ДвоичныеДанныеДляОтправки);
    
	Ответ = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
	
    ТекстОтвета = Ответ.ПолучитьТелоКакСтроку();
	СтруктураОтвета = CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(ТекстОтвета);
	Если СтруктураОтвета.Свойство("error") Тогда
		ВызватьИсключение СтруктураОтвета.error.error_msg;
	Иначе
		Ресурс = "/method/docs.save?v=5.67&file="+СтруктураОтвета.file+"&access_token="+Токен;
		СтруктураОтвета=CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
		Если СтруктураОтвета.Свойство("error") Тогда
			ВызватьИсключение СтруктураОтвета.error.error_msg;
		КонецЕсли;
		Ответ = СтруктураОтвета.response[0];
		Документ = "doc"+Формат(Ответ.owner_id, "ЧГ=")+"_"+Формат(Ответ.id, "ЧГ=");
	КонецЕсли;
	
	Возврат Документ;
	
КонецФункции

Функция CRM_ПолучитьФайл(Сервер, Ресурс, ИмяФайла) Экспорт  
	
	HTTP =  Новый HTTPСоединение(Сервер,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	
	HTTPОтвет = HTTP.Получить(Ресурс, ИмяФайла);
	ПутьКФайлу = HTTPОтвет.Заголовки.Получить("Location");
	Если ПутьКФайлу<>Неопределено Тогда
		КопироватьФайл(ПутьКФайлу, ИмяФайла);
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСообщенияVK(РесурсИсторияДиалога, РесурсПрочтение, УчетнаяЗапись, IDГруппы, Токен)
	
	МассивСообщений = Новый Массив;
	СтруктураОтветаДиалог = CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",РесурсИсторияДиалога));
	Если СтруктураОтветаДиалог.Свойство("error") Тогда
		ВызватьИсключение СтруктураОтветаДиалог.error.error_msg;
	ИначеЕсли СтруктураОтветаДиалог.response.count > 0 Тогда
		Для каждого ТекСообщение из СтруктураОтветаДиалог.response.items Цикл
			user_id = Формат(ТекСообщение.user_id, "ЧГ=");
			Контакт = CRM_РаботаСМессенджерамиСерверПовтИсп.НайтиКонтактПоКонтактнойИнформации("https://vk.com/id"+user_id, УчетнаяЗапись, Перечисления.ТипыКонтактнойИнформации.ВебСтраница);
			ИмяПользователя = ПолучитьИмяПользователя(user_id, Токен);
			Дата = МестноеВремя(Дата(1970,1,1)+ТекСообщение.date);
			Сообщение = CRM_РаботаСМессенджерамиСервер.СтруктураСообщенияМесенджера();
			Сообщение.Дата = Дата;
			Сообщение.ID_Сообщения = Формат(ТекСообщение.id, "ЧГ=");
			Сообщение.ТекстСообщения = СтрЗаменить(ТекСообщение.body, "<br>", Символы.ПС);
			Сообщение.ВидСообщения = ?(ТекСообщение.out = 0, "Входящее", "Исходящее");
			Сообщение.ID_Пользователя = user_id;
			Если ЗначениеЗаполнено(Контакт) Тогда
				Сообщение.Контакт = Контакт;
			КонецЕсли;
			Сообщение.КонтактПредставление = ИмяПользователя;
			Сообщение.Группа = IDГруппы;
			ТекСообщение.Свойство("read_state", Сообщение.Прочитано);
			Если ТекСообщение.Свойство("attachments") Тогда
				КаталогВременныхФайлов = КаталогВременныхФайлов();
				Для каждого Вложение из ТекСообщение.attachments Цикл
					Если Вложение.type = "doc" Тогда
						ПутьКФайлу = Вложение.doc.url;
						Попытка
							CRM_ПолучитьФайл("vk.com", СтрЗаменить(ПутьКФайлу, "https://vk.com", ""), КаталогВременныхФайлов+Вложение.doc.title);
							Данные = Новый ДвоичныеДанные(КаталогВременныхФайлов+Вложение.doc.title);
							АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(Данные);
							ПараметрыФайла = Новый Структура;
							ПараметрыФайла.Вставить("ВладелецФайлов", Неопределено);
							ПараметрыФайла.Вставить("Автор", Неопределено);
							ПараметрыФайла.Вставить("ИмяБезРасширения", Лев(Вложение.doc.title, СтрНайти(Вложение.doc.title, ".")-1));
							ПараметрыФайла.Вставить("РасширениеБезТочки", Вложение.doc.ext);
							ПараметрыФайла.Вставить("ВремяИзменения", Неопределено);
							ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", Неопределено);
							ПараметрыФайла.Вставить("АдресФайлаВХранилище", АдресФайлаВХранилище);
							Сообщение.Вложения.Добавить(ПараметрыФайла);
							УдалитьФайлы(КаталогВременныхФайлов+Вложение.doc.title);
						Исключение
							
						КонецПопытки;
					ИначеЕсли Вложение.type = "photo" Тогда
						СписокРазмеров = Новый СписокЗначений;
						Для каждого Свойство из Вложение.photo Цикл
							Если СтрНайти(Свойство.Ключ, "photo_") = 1 Тогда
								СписокРазмеров.Добавить(Число(Сред(Свойство.Ключ, 7)));
							КонецЕсли;
						КонецЦикла;
						Если СписокРазмеров.Количество()>0 Тогда
							СписокРазмеров.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
							Размер = СписокРазмеров[0].Значение;
							ПутьКФайлу = Вложение.photo["photo_"+Формат(Размер, "ЧГ=")];
							МассивПодстрок = СтрРазделить(ПутьКФайлу, "/", Ложь);
							ИмяФайла = МассивПодстрок[МассивПодстрок.Количество()-1];
							Попытка
								КопироватьФайл(ПутьКФайлу, КаталогВременныхФайлов+ИмяФайла);
								Данные = Новый ДвоичныеДанные(КаталогВременныхФайлов+ИмяФайла);
								АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(Данные);
								ПараметрыФайла = Новый Структура;
								ПараметрыФайла.Вставить("ВладелецФайлов", Неопределено);
								ПараметрыФайла.Вставить("Автор", Неопределено);
								ПараметрыФайла.Вставить("ИмяБезРасширения", Лев(ИмяФайла, СтрНайти(ИмяФайла, ".")-1));
								ПараметрыФайла.Вставить("РасширениеБезТочки", Сред(ИмяФайла, СтрНайти(ИмяФайла, ".")+1));
								ПараметрыФайла.Вставить("ВремяИзменения", Неопределено);
								ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", Неопределено);
								ПараметрыФайла.Вставить("АдресФайлаВХранилище", АдресФайлаВХранилище);
								Сообщение.Вложения.Добавить(ПараметрыФайла);
								УдалитьФайлы(КаталогВременныхФайлов+ИмяФайла);
							Исключение
								
							КонецПопытки;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			МассивСообщений.Добавить(Сообщение);
		КонецЦикла;
		Если МассивСообщений.Количество()>0 Тогда
			СтруктураОтвета=CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",РесурсПрочтение+Сообщение.ID_Сообщения+"&peer_id="+user_id));
		КонецЕсли;
	КонецЕсли;
	Возврат МассивСообщений;

КонецФункции
	
Функция ПолучитьИмяПользователя(IDПользователя = "", Токен = "") Экспорт
	Если ЗначениеЗаполнено(IDПользователя) Тогда
		Ресурс = "/method/users.get?v=5.67&fields=id,name&user_ids="+IDПользователя+"&access_token="+Токен;
	Иначе
		Ресурс = "/method/users.get?v=5.67&fields=id,name&access_token="+Токен;
	КонецЕсли;
	СтруктураОтвета = CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
	Если СтруктураОтвета.Свойство("error") Тогда
		ВызватьИсключение СтруктураОтвета.error.error_msg;
	Иначе
		Для каждого Пользователь из СтруктураОтвета.response Цикл
			Возврат Пользователь.first_name +" "+ Пользователь.last_name;
		КонецЦикла;
	КонецЕсли;
КонецФункции

Функция ДанныеГруппы(Токен) Экспорт
	Ресурс = "/method/users.get?v=5.80&fields=id,name&access_token="+Токен;
	СтруктураОтвета = CRM_РаботаСМессенджерамиСервер.ПолучитьЗначениеИзОтветаJSON(CRM_РаботаСМессенджерамиСервер.ВыполнитьЗапрос("api.vk.com","",Ресурс));
	Если СтруктураОтвета.Свойство("error") Тогда
		ВызватьИсключение СтруктураОтвета.error.error_msg;
	Иначе
		Для каждого Пользователь из СтруктураОтвета.response Цикл
			Возврат Пользователь.first_name +" "+ Пользователь.last_name;
		КонецЦикла;
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
