#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ОчиститьПапку(Параметры, АдресХранилища) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЭлектронноеПисьмоВходящее.Ссылка КАК Ссылка,
	               |	ВЫБОР
	               |		КОГДА CRM_НепрочитанныеЭлектронныеПисьма.Письмо ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК НеПрочитано
	               |ИЗ
	               |	РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.CRM_НепрочитанныеЭлектронныеПисьма КАК CRM_НепрочитанныеЭлектронныеПисьма
	               |			ПО ЭлектронноеПисьмоВходящее.Ссылка = CRM_НепрочитанныеЭлектронныеПисьма.Письмо
	               |		ПО ПредметыПапкиВзаимодействий.Взаимодействие = ЭлектронноеПисьмоВходящее.Ссылка
	               |			И (ПредметыПапкиВзаимодействий.ПапкаЭлектронногоПисьма = &ПапкаЭлектронногоПисьма)
	               |ГДЕ
	               |	ЭлектронноеПисьмоВходящее.УчетнаяЗапись = &УчетнаяЗапись
	               |	И НЕ ЭлектронноеПисьмоВходящее.CRM_СкрытьИзСписка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЭлектронноеПисьмоИсходящее.Ссылка,
	               |	ЛОЖЬ
	               |ИЗ
	               |	РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектронноеПисьмоИсходящее КАК ЭлектронноеПисьмоИсходящее
	               |		ПО ПредметыПапкиВзаимодействий.Взаимодействие = ЭлектронноеПисьмоИсходящее.Ссылка
	               |			И (ПредметыПапкиВзаимодействий.ПапкаЭлектронногоПисьма = &ПапкаЭлектронногоПисьма)
	               |ГДЕ
	               |	ЭлектронноеПисьмоИсходящее.УчетнаяЗапись = &УчетнаяЗапись
	               |	И НЕ ЭлектронноеПисьмоИсходящее.CRM_СкрытьИзСписка";
	
	Запрос.УстановитьПараметр("УчетнаяЗапись",	Параметры.УчетнаяЗапись);
	Запрос.УстановитьПараметр("ПапкаЭлектронногоПисьма",		Параметры.Папка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПисьмоОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если НЕ ПисьмоОбъект.ПометкаУдаления Тогда
			ПисьмоОбъект.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
		
		ПисьмоОбъект.CRM_СкрытьИзСписка = Истина;
		
		Попытка
			ПисьмоОбъект.Записать();
		Исключение
		КонецПопытки;
		
		Если Выборка.НеПрочитано Тогда
			НаборНепрочитано = РегистрыСведений.CRM_НепрочитанныеЭлектронныеПисьма.СоздатьНаборЗаписей();
			НаборНепрочитано.Отбор.Письмо.Установить(Выборка.Ссылка);
			НаборНепрочитано.Записать(Истина);
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстСообщения = НСтр("ru='Очистка папки выполнена.';en='The folder is cleared.'");
	ПоместитьВоВременноеХранилище(ТекстСообщения, АдресХранилища);
	
КонецПроцедуры

Процедура ЗагрузитьПочтуПользователя(Параметры, АдресХранилища) Экспорт
	
	УчетнаяЗаписьОтбор = Параметры.УчетнаяЗаписьОтбор;
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДоступКУчетнымЗаписям.УчетнаяЗапись КАК УчетнаяЗапись
	|ПОМЕСТИТЬ ДоступныеУчетныеЗаписи
	|ИЗ
	|	РегистрСведений.CRM_УчетныеЗаписиЭлектроннойПочты КАК ДоступКУчетнымЗаписям
	|ГДЕ
	|	ДоступКУчетнымЗаписям.Пользователь В(&Пользователь)
	|	И ДоступКУчетнымЗаписям.Запись
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УчетныеЗаписи.Ссылка КАК Ссылка,
	|	УчетныеЗаписи.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты,
	|	УчетныеЗаписи.Наименование КАК Наименование,
	|	ЕСТЬNULL(НастройкиУчетныхЗаписей.ПомещатьПисьмоВПапкуПисьмаОснования, ЛОЖЬ) КАК ПомещатьПисьмоВПапкуПисьмаОснования,
	|	ЕСТЬNULL(НастройкиУчетныхЗаписей.ОтветственныйЗаОбработкуПисем, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОтветственныйЗаОбработкуПисем,
	|	УчетныеЗаписи.ОставлятьКопииСообщенийНаСервере КАК ОставлятьКопии,
	|	УчетныеЗаписи.ПериодХраненияСообщенийНаСервере КАК ОставлятьДней,
	|	УчетныеЗаписи.ПротоколВходящейПочты КАК ПротоколВходящейПочты,
	|	УчетныеЗаписи.ИмяПользователя КАК ИмяПользователя,
	|	УчетныеЗаписи.Пользователь КАК Пользователь,
	|	УчетныеЗаписи.CRM_ИсточникЛидов КАК CRM_ИсточникЛидов,
	|	ЕСТЬNULL(ДатыПоследнейЗагрузки.ДатаЗагрузкиПисем, ДАТАВРЕМЯ(1, 1, 1, 1, 1, 1)) КАК ДатаЗагрузкиПисем,
	|	ВЫБОР
	|		КОГДА УчетныеЗаписи.ПротоколВходящейПочты = ""IMAP""
	|			ТОГДА ЕСТЬNULL(НастройкиУчетныхЗаписей.ОбработкаПисемВыполняетсяВДругомПочтовомКлиенте, ЛОЖЬ)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОбработкаПисемВедетсяВДругомПочтовомКлиенте
	|ИЗ
	|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетныхЗаписейЭлектроннойПочты КАК НастройкиУчетныхЗаписей
	|		ПО (НастройкиУчетныхЗаписей.УчетнаяЗаписьЭлектроннойПочты = УчетныеЗаписи.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоследнейЗагрузкиПочтовыхСообщений КАК ДатыПоследнейЗагрузки
	|		ПО (ДатыПоследнейЗагрузки.УчетнаяЗапись = УчетныеЗаписи.Ссылка)
	|ГДЕ
	|	УчетныеЗаписи.ИспользоватьДляПолучения
	|	И (УчетныеЗаписи.Ссылка В
	|				(ВЫБРАТЬ
	|					ДоступныеУчетныеЗаписи.УчетнаяЗапись
	|				ИЗ
	|					ДоступныеУчетныеЗаписи)
	|			ИЛИ УчетныеЗаписи.CRM_ЭтоОбщаяУчетнаяЗапись)
	|	И НЕ ЕСТЬNULL(НастройкиУчетныхЗаписей.НеИспользоватьВоВстроенномПочтовомКлиенте, ЛОЖЬ)
	|	И НЕ УчетныеЗаписи.ПометкаУдаления";
	// Если НЕ УчетнаяЗаписьОтбор = Неопределено Тогда
	//	ТекстЗапроса = ТекстЗапроса + "
	//	|	И CRM_УчетныеЗаписиЭлектроннойПочты.УчетнаяЗапись = &УчетнаяЗаписьОтбор";
	// КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("УчетнаяЗаписьОтбор", УчетнаяЗаписьОтбор);
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	РолиПользователя = CRM_БизнесПроцессыСервер.ПолучитьРолиПоПользователю(ТекущийПользователь);
	РолиПользователя.Добавить(ТекущийПользователь);
	Запрос.УстановитьПараметр("Пользователь", РолиПользователя);
	
	УстановитьПривилегированныйРежим(Истина);
	// -CRM
	
	Выборка = Запрос.Выполнить().Выбрать();

	ПолученоПисем = 0;
	ДоступноУчетныхЗаписей = Выборка.Количество();
	Если ДоступноУчетныхЗаписей = 0 Тогда
		// +CRM
		// ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Нет доступных для получения почты учетных записей';en='Is not present mails of login accounts accessible to obtaining'"));
		Если УчетнаяЗаписьОтбор = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Нет доступных для получения почты учетных записей';en='Is not present mails of login accounts accessible to obtaining'"));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Учетная запись почты: "+ УчетнаяЗаписьОтбор +" не используется для получения.'"));
		КонецЕСли;
		// -CRM
		Возврат;
	КонецЕсли;
	
	// +CRM
	// УстановитьПривилегированныйРежим(Истина); // перенесено выше!
	СписокПолученныхПисем = Новый СписокЗначений;
	// -CRM
	ТекстыОшибок = "";
	Получено = 0;

	Пока Выборка.Следующий() Цикл
		ЕстьОшибки = Ложь;

		
		СтруктураМассивовПисем = CRM_УправлениеЭлектроннойПочтой.СтруктураМассиваПисем();
		ТекстСообщенияОбОшибке = "";
		CRM_УправлениеЭлектроннойПочтой.ПолучитьПисьма(Выборка, ЕстьОшибки, Получено, СтруктураМассивовПисем, ТекстСообщенияОбОшибке);
		Если ЕстьОшибки Тогда
			ТекстыОшибок = ТекстыОшибок + ТекстСообщенияОбОшибке+"
			|";
			Продолжить;
		КонецЕсли;	
		ПолученоПисем = ПолученоПисем + Получено;
		CRM_УправлениеЭлектроннойПочтой.ОпределитьЗагруженныеРанееПодчиненныеПисьма(Выборка.Ссылка, СтруктураМассивовПисем.ВсеПолученныеПисьма);
		Взаимодействия.ЗаполнитьКонтактыМассиваВзаимодействий(СтруктураМассивовПисем.ВсеПолученныеПисьма);
		Взаимодействия.УстановитьПапкиДляМассиваПисем(СтруктураМассивовПисем.ПисьмаДляОпределенияПапок);
		Взаимодействия.РассчитатьРассмотреноПоПредметам(СтруктураМассивовПисем.ВсеПолученныеПисьма);
		Взаимодействия.РассчитатьРассмотреноПоКонтактам(СтруктураМассивовПисем.ВсеПолученныеПисьма);
		
		// +CRM
		
		МассивПисем = СтруктураМассивовПисем.ВсеПолученныеПисьма;
		
		Для Каждого СтрокаМассива ИЗ МассивПисем Цикл
			СписокПолученныхПисем.Добавить(СтрокаМассива);
		КонецЦикла;
		// -CRM
		
	КонецЦикла;
	Если ТекстыОшибок = "" Тогда
		ТекстыОшибок = "Получено писем: "+Получено;
	КонецЕсли;	
	ПоместитьВоВременноеХранилище(ТекстыОшибок, АдресХранилища);
КонецПроцедуры

#КонецОбласти

#КонецЕсли