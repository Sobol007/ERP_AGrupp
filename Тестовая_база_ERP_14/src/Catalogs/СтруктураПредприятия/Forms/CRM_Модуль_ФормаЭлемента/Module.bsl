
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Элементы.ФормаCRM_УстановкаВесаПоказателей.Видимость = CRM_ЛицензированиеСервер.ВариантПоставкиКОРП();
	
	Если ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТеги") Тогда
		СписокВышестоящийхПодразделений = CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(Объект.Ссылка, Истина);
		ТегиПодразделения.Параметры.УстановитьЗначениеПараметра("ПодразделенияПоИерархии", СписокВышестоящийхПодразделений);
		ТегиПодразделения.Параметры.УстановитьЗначениеПараметра("ТекущееПодразделение", Объект.Ссылка);
	КонецЕсли; 
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРекивзиты");
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
		МодульУправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	КонецЕсли;
	
	КалендарьПредприятия = Константы.ОсновнойКалендарьПредприятия.Получить();
	Если НЕ КалендарьПредприятия.Пустая() Тогда
		Элементы.СтраницыКалендарьПредприятия.ТекущаяСтраница = Элементы.СтраницаКалендарьЗадан;
	Иначе
		Элементы.СтраницыКалендарьПредприятия.ТекущаяСтраница = Элементы.СтраницаКалендарьНеЗадан;
	КонецЕсли; 
	Элементы.ГрафикРаботы.Доступность = (ИспользованиеГрафикаРаботы = 1);
		
	// Подсистема запрета редактирования ключевых реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(СписокДоступа, "Подразделение", Объект.Ссылка, Истина);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;

	Элементы.ГруппаПараметрыПроизводственногоПодразделения.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	Элементы.ГруппаПараметрыОбособленногоУчета.Видимость = ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам");
	
	Элементы.ТипыУслуг.Видимость = ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТипыУслуг");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("Запись_СтруктураПредприятия");

	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
	Если ИмяСобытия = "ПослеЗаписиТега" Тогда
		Элементы.ТегиПодразделения.Обновить();	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ПеречислениеСсылка.ВариантыОбособленногоУчетаТоваров") Тогда
		
		Модифицированность = Истина;
		Объект.ВариантОбособленногоУчетаТоваров = ВыбранноеЗначение;
		ЗаполнитьПредставлениеПараметров();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТегиПодразделенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ	= Истина; 
	ПарамФормы	= Новый Структура;
	ПарамФормы.Вставить("Владелец",Объект.Ссылка);
	ОткрытьФорму("Справочник.CRM_Теги.ФормаОбъекта",ПарамФормы,ЭтотОбъект,,,,);

КонецПроцедуры

&НаКлиенте
Процедура ТегиПодразделенияПередНачаломИзменения(Элемент, Отказ)
	// Запрет на редактирование тегов другого подразделения.
	Если Элементы.ТегиПодразделения.ТекущиеДанные.Владелец <> Объект.Ссылка Тогда
		Отказ = Истина;
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
 
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ИмяФормыРазблокировки = "Справочник.СтруктураПредприятия.Форма.РазблокированиеРеквизитов";
	CRM_ОбщегоНазначенияКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект, ИмяФормыРазблокировки);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеВСхемахОбеспечения(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	// +CRM врезка чтобы код работал и в ERP/КА2 и в УТиВсК
	//ПараметрыФормы = Новый Структура("Подразделение", Объект.Ссылка);
	//ОткрытьФорму("РегистрСведений.СхемыОбеспеченияПроизводства.Форма.ИспользованиеВСхемахОбеспечения", ПараметрыФормы);
	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("РегистрыСведений", "СхемыОбеспеченияПроизводства") Тогда
		ПараметрыФормы = Новый Структура("Подразделение", Объект.Ссылка);
		ИмяФормы = "ИспользованиеВСхемахОбеспечения";
		ОткрытьФорму("РегистрСведений.СхемыОбеспеченияПроизводства.Форма." + ИмяФормы, ПараметрыФормы);
	КонецЕсли;
	// -CRM
	
	Возврат; // в УТ пустой обработчик
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПараметрыПроизводственногоПодразделения(Команда)
	
	ОткрытьФорму(
		"Справочник.СтруктураПредприятия.Форма.ПараметрыПроизводственногоПодразделения",
		Новый Структура("Ссылка, АдресХранилищаДанныеОбъекта", Объект.Ссылка, ДанныеОбъектаВХранилище()),
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ПараметрыПроизводственногоПодразделенияЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОбособленногоУчетаТоваров(Команда)
	
	ПараметрыФормы = Новый Структура("ВариантОбособленногоУчетаТоваров", Объект.ВариантОбособленногоУчетаТоваров);
	ОткрытьФорму("Справочник.СтруктураПредприятия.Форма.ПараметрыОбособленногоУчетаТоваров", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ДанныеОбъектаВХранилище()
	
	ДанныеОбъекта = Новый Структура;
	МетаданныеОбъекта = Объект.Ссылка.Метаданные();
	
	Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		ДанныеОбъекта.Вставить(Реквизит.Имя, Объект[Реквизит.Имя]);
	КонецЦикла;
	
	Для каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		ДанныеОбъекта.Вставить(ТабличнаяЧасть.Имя, Объект[ТабличнаяЧасть.Имя].Выгрузить());
	КонецЦикла;
	
	ДанныеОбъекта.Вставить("СкладМатериалов", СкладМатериалов);
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеОбъекта, УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ЗаполнитьПредставлениеПараметров()
	
	ЭтоКА = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");
	
	Если Объект.ПодразделениеДиспетчер
		И Объект.ПроизводствоПоЗаказам
		И Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение диспетчирует заказы на производство, производит продукцию по заказам и без заказов на производство.'");
			
	ИначеЕсли Объект.ПодразделениеДиспетчер  
		И Объект.ПроизводствоПоЗаказам 
		И Не Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение диспетчирует заказы на производство и производит продукцию по заказам.'");
			
	ИначеЕсли Объект.ПодразделениеДиспетчер
		И Не Объект.ПроизводствоПоЗаказам
		И Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение диспетчирует заказы на производство и производит продукцию без заказов.'");
		
	ИначеЕсли Объект.ПодразделениеДиспетчер
		И Не Объект.ПроизводствоПоЗаказам
		И Не Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение диспетчирует заказы на производство.'");
			
	ИначеЕсли Не Объект.ПодразделениеДиспетчер
		И Объект.ПроизводствоПоЗаказам
		И Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение производит продукцию по заказам и без заказов на производство.'");
			
	ИначеЕсли Не Объект.ПодразделениеДиспетчер
		И Объект.ПроизводствоПоЗаказам
		И Не Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение производит продукцию по заказам на производство.'");
			
	ИначеЕсли Не Объект.ПодразделениеДиспетчер
		И Не Объект.ПроизводствоПоЗаказам
		И Объект.ПроизводствоБезЗаказов
		И Не ЭтоКА Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение производит продукцию без заказов на производство.'");
			
	ИначеЕсли ЭтоКА И Объект.ПроизводствоБезЗаказов Тогда
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение производит продукцию.'");
			
	Иначе
		
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru = 'Подразделение не является производственным.'");
			
	КонецЕсли;
	
	Если Объект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.НеВедется Тогда
		ПредставлениеОбособленногоУчетаТоваров = НСтр("ru = 'Обособленный учет товаров не ведется.'");
	ИначеЕсли Объект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.ПоПодразделению Тогда
		ПредставлениеОбособленногоУчетаТоваров = НСтр("ru = 'Обособленный учет товаров ведется по подразделению.'");
	ИначеЕсли Объект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения Тогда
		ПредставлениеОбособленногоУчетаТоваров = НСтр("ru = 'Обособленный учет товаров ведется по менеджерам подразделения.'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	// +CRM врезка чтобы код работал и в ERP/КА2 и в УТиВсК
	//ЕстьПравоПросмотраСхемОбеспечения = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.СхемыОбеспеченияПроизводства);
	ИмяРегистра = "СхемыОбеспеченияПроизводства";
	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("РегистрыСведений", ИмяРегистра) Тогда
		ЕстьПравоПросмотраСхемОбеспечения = ПравоДоступа("Просмотр", Метаданные.РегистрыСведений[ИмяРегистра]);
	КонецЕсли;
	// -CRM
	
	ЗаполнитьСкладМатериалов();
	ЗаполнитьПредставлениеПараметров();
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
	//КешРеквизитов = КешРеквизитовФормы();
	// +CRM врезка чтобы код работал и в ERP/КА2 и в УТиВсК
	Если Константы.УправлениеПредприятием.Получить() Тогда
		КешРеквизитов = КешРеквизитовФормы();
	КонецЕсли;
	// -CRM
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если СтруктураРеквизитов.Свойство("ПроизводственноеПодразделение")
		ИЛИ СтруктураРеквизитов.Свойство("Ссылка")
		ИЛИ Инициализация Тогда
		Элементы.ИспользованиеВСхемахОбеспечения.Видимость = 
				Объект.ПроизводственноеПодразделение 
				И Форма.ЕстьПравоПросмотраСхемОбеспечения
				И ЗначениеЗаполнено(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСкладМатериалов()
	
	// +CRM врезка чтобы код работал и в ERP/КА2 и в УТиВсК
	ИмяРегистра = "НастройкаПередачиМатериаловВПроизводство";
	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("РегистрыСведений", ИмяРегистра) Тогда
		УстановитьПривилегированныйРежим(Истина);
		//НастройкаПередачиМатериалов = РегистрыСведений.НастройкаПередачиМатериаловВПроизводство.ПолучитьНастройкуПередачиМатериаловПроизводство(Объект.Ссылка);
		НастройкаПередачиМатериалов = РегистрыСведений[ИмяРегистра].ПолучитьНастройкуПередачиМатериаловПроизводство(Объект.Ссылка);
		УстановитьПривилегированныйРежим(Ложь);
		
		СкладМатериалов = НастройкаПередачиМатериалов.Склад;
	КонецЕсли;
	// -CRM
	
	Возврат; // В УТ обработчик пустой
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КешРеквизитовФормы()
	
	СписокРеквизитов =
	"ИспользоватьМетодикуББВ,
	|ИспользоватьМетодикуПооперационноеПланирование,
	|ИспользоватьМетодикуРегистрацияОпераций,
	|ИспользоватьПооперационноеУправление,
	|ИспользоватьПооперационноеПланирование";
	
	ЗначенияРеквизитов = Константы.СоздатьНабор(СписокРеквизитов);
	ЗначенияРеквизитов.Прочитать();
	
	Результат = Новый Структура(СписокРеквизитов);
	ЗаполнитьЗначенияСвойств(Результат, ЗначенияРеквизитов);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПараметрыПроизводственногоПодразделенияЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Если РезультатЗакрытия <> Неопределено Тогда
		
		ЗагрузитьДанныеОбъектаИзХранилища(РезультатЗакрытия);
		
		НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "ПроизводственноеПодразделение");
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеОбъектаИзХранилища(АдресХранилищаДанныеОбъекта)
	
	Если НЕ ЭтоАдресВременногоХранилища(АдресХранилищаДанныеОбъекта) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеОбъекта = ПолучитьИзВременногоХранилища(АдресХранилищаДанныеОбъекта);
	МетаданныеОбъекта = Объект.Ссылка.Метаданные();
	
	Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		Объект[Реквизит.Имя] = ДанныеОбъекта[Реквизит.Имя];
	КонецЦикла;
	
	Для каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		Объект[ТабличнаяЧасть.Имя].Загрузить(ДанныеОбъекта[ТабличнаяЧасть.Имя]);
	КонецЦикла;
	
	СкладМатериалов = ДанныеОбъекта.СкладМатериалов;
	
	ЗаполнитьПредставлениеПараметров();
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура CRM_ФормулаРасчетаПотенциалаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Объект.Ссылка.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Поле = "Объект."+Элемент.Имя;
		Сообщение.Текст = "Нельзя редактировать формулу для незаписанного подразделения!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Подразделение", Объект.Ссылка);
	ПараметрыФормы.Вставить("Формула", Объект.CRM_ФормулаРасчетаПотенциала);
	ПараметрыФормы.Вставить("ПериодРасчета", Объект.CRM_ПериодРасчетаПотенциала);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("РегистрСведений.CRM_ВесаПоказателейПотенциала.Форма.ФормаНастройкиПотенциала", ПараметрыФормы, Элемент, Объект.Ссылка, , , , РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаКлиенте
Процедура CRM_УстановкаВесаПоказателей(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Текст = "Нельзя редактировать вес показателей для незаписанного подразделения!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Подразделение", Объект.Ссылка);
	ПараметрыФормы.Вставить("Формула", Объект.CRM_ФормулаРасчетаПотенциала);
	ПараметрыФормы.Вставить("ПериодРасчета", Объект.CRM_ПериодРасчетаПотенциала);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("РегистрСведений.CRM_ВесаПоказателейПотенциала.Форма.ФормаНастройкиПотенциала", ПараметрыФормы, Элементы.CRM_ФормулаРасчетаПотенциала, Объект.Ссылка, , , , РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьГрафикПредприятияПриИзменении(Элемент)

	Если ИспользованиеГрафикаРаботы = 0 И НЕ Объект.ГрафикРаботы.Пустая() Тогда
		Объект.ГрафикРаботы = ПредопределенноеЗначение("Справочник.Календари.ПустаяСсылка");
	КонецЕсли;
	Элементы.ГрафикРаботы.Доступность = (ИспользованиеГрафикаРаботы = 1);

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИндивидуальныйГрафикПриИзменении(Элемент)
	Элементы.ГрафикРаботы.Доступность = (ИспользованиеГрафикаРаботы = 1);
КонецПроцедуры

&НаКлиенте
Процедура СписокДоступаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ CRM_ЛицензированиеСервер.ВариантПоставкиКОРП() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Функция доступна только для ""КОРП"" поставки конфигурации!'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо записать элемент!'"));
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(СписокДоступа, "Подразделение", Объект.Ссылка, Истина);
КонецПроцедуры

#КонецОбласти


