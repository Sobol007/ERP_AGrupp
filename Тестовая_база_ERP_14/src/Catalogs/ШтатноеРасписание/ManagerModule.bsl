#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК Т
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодчиненностьПодразделенийОрганизаций КАК Т2 
	|	ПО Т2.Подразделение = Т.Подразделение
	|;
	|РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Т2.ВышестоящееПодразделение)
	|	И ЗначениеРазрешено(Т.Владелец)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// См. ЗапретРедактированияРеквизитовОбъектовПереопределяемый.ПриОпределенииОбъектовСЗаблокированнымиРеквизитами
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	БлокируемыеРеквизиты.Добавить("Владелец;Владелец");
	БлокируемыеРеквизиты.Добавить("Подразделение");
	БлокируемыеРеквизиты.Добавить("Должность");
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		МодульОрганизационнаяСтруктура = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		МодульОрганизационнаяСтруктура.ШтатноеРасписаниеПриПолученииБлокируемыхРеквизитов(БлокируемыеРеквизиты);
	КонецЕсли;

	Возврат БлокируемыеРеквизиты;	
	
КонецФункции	

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

// ЗарплатаКадрыРасширеннаяПодсистемы.ПодключаемыеХарактеристики

// Возвращаемое значение:
//  Строка - имя плана видов характеристик, в котором хранятся подключаемые характеристики элементов этого объекта.
//
Функция ИмяПланаВидовПодключаемыхХарактеристикЗарплатаКадры() Экспорт
	Возврат "ШтатноеРасписаниеПодключаемыеХарактеристики";
КонецФункции

// Конец ЗарплатаКадрыРасширеннаяПодсистемы.ПодключаемыеХарактеристики

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	УправлениеШтатнымРасписаниемВызовСервера.ОбработкаПолученияДанныхВыбораСправочникаШтатноеРасписание(ДанныеВыбора, Параметры, СтандартнаяОбработка);	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Описание позиции штатного расписания.
//
Функция ДанныеПозицииШтатногоРасписания(ПозицияШтатногоРасписания) Экспорт
	
	ДанныеПозиции = Новый Структура(
		"Должность,
		|Организация,
		|Подразделение,
		|ФОТ");
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ШтатноеРасписание.Ссылка КАК Ссылка,
		|	ШтатноеРасписание.Должность КАК Должность,
		|	ШтатноеРасписание.Владелец КАК Организация,
		|	ШтатноеРасписание.Подразделение КАК Подразделение,
		|	ШтатноеРасписание.ФОТ КАК ФОТ
		|ИЗ
		|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|ГДЕ
		|	ШтатноеРасписание.Ссылка = &Позиция");
		
	Запрос.УстановитьПараметр("Позиция", ПозицияШтатногоРасписания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(ДанныеПозиции, Выборка);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		МодульОрганизационнаяСтруктура = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		МодульОрганизационнаяСтруктура.ДополнитьДанныеПозицииШтатногоРасписания(ДанныеПозиции, ПозицияШтатногоРасписания);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ХарактеристикиПерсонала") Тогда
		МодульХарактеристикиПерсонала = ОбщегоНазначения.ОбщийМодуль("ХарактеристикиПерсонала");
		МодульХарактеристикиПерсонала.ДополнитьДанныеПозицииШтатногоРасписания(ДанныеПозиции, ПозицияШтатногоРасписания);
	КонецЕсли;
	
	Возврат ДанныеПозиции;
	
КонецФункции

// используется при загрузке данных
Процедура РассчитатьФОТПозиции(ПозицияОбъект) Экспорт

	КоллекцияПозиций     = УправлениеШтатнымРасписанием.ПустаяТаблицаКоллекцииПозицийДляРасчетаФОТ();
	КоллекцияНачислений  = УправлениеШтатнымРасписанием.ПустаяТаблицаКоллекцииНачисленийДляРасчетаФОТ();
	КоллекцияПоказателей = УправлениеШтатнымРасписанием.ПустаяТаблицаКоллекцииПоказателейДляРасчетаФОТ();

	ЗаполнитьЗначенияСвойств(КоллекцияПозиций.Добавить(), ПозицияОбъект); 
	
	Для каждого СтрокаНачислений Из ПозицияОбъект.Начисления Цикл
		ЗаполнитьЗначенияСвойств(КоллекцияНачислений.Добавить(), СтрокаНачислений);
	КонецЦикла;
	
	Для каждого СтрокаПоказателей Из ПозицияОбъект.Показатели Цикл
		ЗаполнитьЗначенияСвойств(КоллекцияПоказателей.Добавить(), СтрокаПоказателей);
	КонецЦикла;
	
	ОписаниеПозиций = Новый Структура;
	ОписаниеПозиций.Вставить("Организация", ПозицияОбъект.Владелец);
	ОписаниеПозиций.Вставить("ДатаВступленияВСилу", ТекущаяДатаСеанса());
	ОписаниеПозиций.Вставить("Позиции", КоллекцияПозиций);
	ОписаниеПозиций.Вставить("Начисления", КоллекцияНачислений);
	ОписаниеПозиций.Вставить("Показатели", КоллекцияПоказателей);
	
	УправлениеШтатнымРасписанием.РассчитатьФОТНесколькихПозиций(ОписаниеПозиций);
	
	Для каждого СтруктураПозиции Из ОписаниеПозиций.Позиции Цикл
		
		ЗаполнитьЗначенияСвойств(ПозицияОбъект, СтруктураПозиции, "ОкладТариф,ОкладТарифМин,ОкладТарифМакс,ФОТ,ФОТМин,ФОТМакс,РайонныйКоэффициентРазмер,РайонныйКоэффициентРазмерМин,РайонныйКоэффициентРазмерМакс");
		
		СтрокиНачислений = ОписаниеПозиций.Начисления.НайтиСтроки(Новый Структура("ИдентификаторСтрокиПозиции", СтруктураПозиции.ИдентификаторСтрокиПозиции));
		Для каждого СтрокаНачислений Из СтрокиНачислений Цикл
			СтрокиПозиции = ПозицияОбъект.Начисления.НайтиСтроки(Новый Структура("Начисление", СтрокаНачислений.Начисление));
			Для каждого СтрокаПозиции Из СтрокиПозиции Цикл
				ЗаполнитьЗначенияСвойств(СтрокаПозиции, СтрокаНачислений, "Размер,РазмерМин,РазмерМакс");
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.КадроваяИсторияСотрудников) Тогда
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
		КомандаПечати.Идентификатор = "ШтатноеРасписаниеНаПодпись";
		КомандаПечати.Представление = НСтр("ru = 'Штатное расписание на подпись';
											|en = 'Staff list to sign '");
		КомандаПечати.СписокФорм = "ФормаСписка";
		КомандаПечати.Обработчик = "УправлениеШтатнымРасписаниемКлиент.ОткрытьОтчетШтатноеРасписание";
		КомандаПечати.Порядок = 20;
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
		КомандаПечати.Идентификатор = "СоблюдениеШтатногоРасписания";
		КомандаПечати.Представление = НСтр("ru = 'Соблюдение штатного расписания';
											|en = 'Compliance with staff list'");
		КомандаПечати.СписокФорм = "ФормаСписка";
		КомандаПечати.Обработчик = "УправлениеШтатнымРасписаниемКлиент.ОткрытьОтчетСостояниеШтатногоРасписания";
		КомандаПечати.Порядок = 30;
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
		КомандаПечати.Идентификатор = "АнализШтатногоРасписания";
		КомандаПечати.Представление = НСтр("ru = 'Анализ штатного расписания';
											|en = 'Staff list analysis'");
		КомандаПечати.СписокФорм = "ФормаСписка";
		КомандаПечати.Обработчик = "УправлениеШтатнымРасписаниемКлиент.ОткрытьОтчетСостояниеШтатногоРасписания";
		КомандаПечати.Порядок = 40;
		
		ФОИспользоватьВилкуСтавокВШтатномРасписании = ПолучитьФункциональнуюОпцию("ИспользоватьВилкуСтавокВШтатномРасписании");
		Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ИсторияНачисленийПоШтатномуРасписанию) Тогда
			
			КомандаПечати = КомандыПечати.Добавить();
			КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
			КомандаПечати.Идентификатор = "Т3";
			КомандаПечати.Представление = НСтр("ru = 'Штатное расписание (Т-3)';
												|en = 'Staff list (T-3)'");
			КомандаПечати.СписокФорм = "ФормаСписка";
			КомандаПечати.Обработчик = "УправлениеШтатнымРасписаниемКлиент.ОткрытьОтчетШтатноеРасписаниеНачисления";
			КомандаПечати.Порядок = 10;
			
			Если ФОИспользоватьВилкуСтавокВШтатномРасписании Тогда
				
				КомандаПечати = КомандыПечати.Добавить();
				КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
				КомандаПечати.Идентификатор = "НачисленияПозицийШтатногоРасписанияИспользуетсяВилкаСтавок";
				КомандаПечати.Представление = НСтр("ru = 'Начисления позиций штатного расписания';
													|en = 'Accruals of staff list positions'");
				КомандаПечати.СписокФорм = "ФормаСписка";
				КомандаПечати.Обработчик = "УправлениеШтатнымРасписаниемКлиент.ОткрытьОтчетШтатноеРасписаниеНачисления";
				КомандаПечати.Порядок = 50;
				
				КомандаПечати = КомандыПечати.Добавить();
				КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
				КомандаПечати.Идентификатор = "ШтатноеРасписаниеКроссТаблицаИспользуетсяВилкаСтавок";
				КомандаПечати.Представление = НСтр("ru = 'Оклады, надбавки и ФОТ по штатному расписанию';
													|en = 'Base salary, standard bonuses and salary budget by staff list'");
				КомандаПечати.СписокФорм = "ФормаСписка";
				КомандаПечати.Обработчик = "УправлениеШтатнымРасписаниемКлиент.ОткрытьОтчетШтатноеРасписаниеНачисления";
				КомандаПечати.Порядок = 60;
				
			Иначе
				
				КомандаПечати = КомандыПечати.Добавить();
				КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
				КомандаПечати.Идентификатор = "НачисленияПозицийШтатногоРасписания";
				КомандаПечати.Представление = НСтр("ru = 'Начисления позиций штатного расписания';
													|en = 'Accruals of staff list positions'");
				КомандаПечати.СписокФорм = "ФормаСписка";
				КомандаПечати.Обработчик = "УправлениеШтатнымРасписаниемКлиент.ОткрытьОтчетШтатноеРасписаниеНачисления";
				КомандаПечати.Порядок = 50;
				
				КомандаПечати = КомандыПечати.Добавить();
				КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
				КомандаПечати.Идентификатор = "ШтатноеРасписаниеКроссТаблица";
				КомандаПечати.Представление = НСтр("ru = 'Оклады, надбавки и ФОТ по штатному расписанию';
													|en = 'Base salary, standard bonuses and salary budget by staff list'");
				КомандаПечати.СписокФорм = "ФормаСписка";
				КомандаПечати.Обработчик = "УправлениеШтатнымРасписаниемКлиент.ОткрытьОтчетШтатноеРасписаниеНачисления";
				КомандаПечати.Порядок = 60;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьСтруктуруШтатногоРасписанияПоПодразделениям() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Проверка и устранение задвоенных групп.
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ШтатноеРасписание.Ссылка) КАК КоличествоСсылок,
		|	ШтатноеРасписание.Подразделение КАК Подразделение,
		|	ШтатноеРасписание.Владелец КАК Владелец
		|ПОМЕСТИТЬ ВТКоличествоГруппПодразделений
		|ИЗ
		|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|ГДЕ
		|	ШтатноеРасписание.ГруппаПозицийПодразделения
		|	И ШтатноеРасписание.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ШтатноеРасписание.Подразделение,
		|	ШтатноеРасписание.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КоличествоГруппПодразделений.Подразделение КАК Подразделение,
		|	КоличествоГруппПодразделений.Владелец КАК Владелец
		|ПОМЕСТИТЬ ВТГруппыСПовторяющимисяПодразделениями
		|ИЗ
		|	ВТКоличествоГруппПодразделений КАК КоличествоГруппПодразделений
		|ГДЕ
		|	КоличествоГруппПодразделений.КоличествоСсылок > 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ГруппыСПовторяющимисяПодразделениями.Подразделение КАК Подразделение,
		|	ГруппыСПовторяющимисяПодразделениями.Владелец КАК Владелец,
		|	ШтатноеРасписаниеРодители.Ссылка КАК Ссылка,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ШтатноеРасписаниеПодчиненные.Ссылка) КАК КоличествоПодчиненных
		|ПОМЕСТИТЬ ВТКоличествоПодчиненныхЭлементов
		|ИЗ
		|	ВТГруппыСПовторяющимисяПодразделениями КАК ГруппыСПовторяющимисяПодразделениями
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписаниеРодители
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписаниеПодчиненные
		|			ПО ШтатноеРасписаниеРодители.Ссылка = ШтатноеРасписаниеПодчиненные.Родитель
		|				И (ШтатноеРасписаниеРодители.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|				И ШтатноеРасписаниеРодители.Владелец = ШтатноеРасписаниеПодчиненные.Владелец
		|		ПО ГруппыСПовторяющимисяПодразделениями.Подразделение = ШтатноеРасписаниеРодители.Подразделение
		|			И ГруппыСПовторяющимисяПодразделениями.Владелец = ШтатноеРасписаниеРодители.Владелец
		|			И (ШтатноеРасписаниеРодители.ГруппаПозицийПодразделения)
		|
		|СГРУППИРОВАТЬ ПО
		|	ГруппыСПовторяющимисяПодразделениями.Подразделение,
		|	ГруппыСПовторяющимисяПодразделениями.Владелец,
		|	ШтатноеРасписаниеРодители.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КоличествоПодчиненныхЭлементов.Подразделение КАК Подразделение,
		|	КоличествоПодчиненныхЭлементов.Владелец КАК Владелец,
		|	МАКСИМУМ(КоличествоПодчиненныхЭлементов.КоличествоПодчиненных) КАК КоличествоПодчиненных
		|ПОМЕСТИТЬ ВТОставляемыеГруппыПредварительно
		|ИЗ
		|	ВТКоличествоПодчиненныхЭлементов КАК КоличествоПодчиненныхЭлементов
		|
		|СГРУППИРОВАТЬ ПО
		|	КоличествоПодчиненныхЭлементов.Подразделение,
		|	КоличествоПодчиненныхЭлементов.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КоличествоПодчиненныхЭлементов.Подразделение КАК Подразделение,
		|	КоличествоПодчиненныхЭлементов.Владелец КАК Владелец,
		|	МИНИМУМ(КоличествоПодчиненныхЭлементов.Ссылка) КАК Ссылка
		|ПОМЕСТИТЬ ВТОставляемыеПодразделения
		|ИЗ
		|	ВТКоличествоПодчиненныхЭлементов КАК КоличествоПодчиненныхЭлементов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОставляемыеГруппыПредварительно КАК ОставляемыеГруппыПредварительно
		|		ПО (КоличествоПодчиненныхЭлементов.Подразделение = КоличествоПодчиненныхЭлементов.Подразделение)
		|			И (КоличествоПодчиненныхЭлементов.Владелец = КоличествоПодчиненныхЭлементов.Владелец)
		|			И (КоличествоПодчиненныхЭлементов.КоличествоПодчиненных = КоличествоПодчиненныхЭлементов.КоличествоПодчиненных)
		|
		|СГРУППИРОВАТЬ ПО
		|	КоличествоПодчиненныхЭлементов.Подразделение,
		|	КоличествоПодчиненныхЭлементов.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШтатноеРасписание.Ссылка КАК Ссылка,
		|	ОставляемыеПодразделения.Ссылка КАК Родитель
		|ИЗ
		|	ВТОставляемыеПодразделения КАК ОставляемыеПодразделения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|		ПО ОставляемыеПодразделения.Подразделение = ШтатноеРасписание.Подразделение
		|			И ОставляемыеПодразделения.Владелец = ШтатноеРасписание.Владелец
		|			И ОставляемыеПодразделения.Ссылка <> ШтатноеРасписание.Родитель
		|			И (НЕ ШтатноеРасписание.ГруппаПозицийПодразделения)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбновляемыйОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ОбновляемыйОбъект.Родитель = Выборка.Родитель;
			УправлениеШтатнымРасписанием.ОтключитьОбновлениеСтруктурыШтатногоРасписания(ОбновляемыйОбъект);
			ОбновляемыйОбъект.Записать();
			
		КонецЦикла;
		
	КонецЕсли; 
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КоличествоПодчиненныхЭлементов.Ссылка
		|ИЗ
		|	ВТКоличествоПодчиненныхЭлементов КАК КоличествоПодчиненныхЭлементов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОставляемыеПодразделения КАК ОставляемыеПодразделения
		|		ПО КоличествоПодчиненныхЭлементов.Ссылка = ОставляемыеПодразделения.Ссылка
		|ГДЕ
		|	ОставляемыеПодразделения.Ссылка ЕСТЬ NULL ";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ЛишняяГруппа = Выборка.Ссылка.ПолучитьОбъект();
			Если ЛишняяГруппа <> Неопределено Тогда
				УправлениеШтатнымРасписанием.ОтключитьОбновлениеСтруктурыШтатногоРасписания(ЛишняяГруппа);
				ЛишняяГруппа.Удалить();
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Удаление лишних (пустых) групп.
	ПроверитьНеобходимостьУдаленияЛишнихГрупп = Истина;
	Пока ПроверитьНеобходимостьУдаленияЛишнихГрупп Цикл
		
		Запрос = Новый Запрос;
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ШтатноеРасписание.Ссылка,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ШтатноеРасписаниеПодчиненные.Ссылка) КАК КоличествоПодчиненных
			|ПОМЕСТИТЬ ВТГруппыПозицийСКоличествомПодчиненных
			|ИЗ
			|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ШтатноеРасписание.Ссылка КАК Ссылка,
			|			ШтатноеРасписание.Родитель КАК Родитель
			|		ИЗ
			|			Справочник.ШтатноеРасписание КАК ШтатноеРасписание) КАК ШтатноеРасписаниеПодчиненные
			|		ПО ШтатноеРасписание.Ссылка = ШтатноеРасписаниеПодчиненные.Родитель
			|ГДЕ
			|	ШтатноеРасписание.ГруппаПозицийПодразделения
			|
			|СГРУППИРОВАТЬ ПО
			|	ШтатноеРасписание.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ГруппыПозицийСКоличествомПодчиненных.Ссылка
			|ИЗ
			|	ВТГруппыПозицийСКоличествомПодчиненных КАК ГруппыПозицийСКоличествомПодчиненных
			|ГДЕ
			|	ГруппыПозицийСКоличествомПодчиненных.КоличествоПодчиненных = 0";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ПроверитьНеобходимостьУдаленияЛишнихГрупп = Ложь;
		Иначе
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ЛишняяГруппа = Выборка.Ссылка.ПолучитьОбъект();
				Если ЛишняяГруппа <> Неопределено Тогда
					УправлениеШтатнымРасписанием.ОтключитьОбновлениеСтруктурыШтатногоРасписания(ЛишняяГруппа);
					ЛишняяГруппа.Удалить();
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	// Создание недостающих групп позиций.
	ПроверитьНеобходимостьСозданияНовыхГрупп = Истина;	
	Пока ПроверитьНеобходимостьСозданияНовыхГрупп Цикл
		
		Запрос = Новый Запрос;
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ШтатноеРасписание.Подразделение КАК Подразделение,
			|	ШтатноеРасписание.Подразделение.Владелец КАК Владелец,
			|	ШтатноеРасписание.Подразделение.Родитель КАК ВышестоящееПодразделение
			|ПОМЕСТИТЬ ВТПодразделенияШтатногоРасписания
			|ИЗ
			|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|ГДЕ
			|	ШтатноеРасписание.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	И ШтатноеРасписание.Подразделение.Владелец <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПодразделенияШтатногоРасписания.Подразделение КАК Подразделение,
			|	ПодразделенияШтатногоРасписания.Владелец КАК Владелец,
			|	ПодразделенияШтатногоРасписания.ВышестоящееПодразделение КАК ВышестоящееПодразделение
			|ПОМЕСТИТЬ ВТОстатокСоздаваемых
			|ИЗ
			|	ВТПодразделенияШтатногоРасписания КАК ПодразделенияШтатногоРасписания
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|		ПО ПодразделенияШтатногоРасписания.Подразделение = ШтатноеРасписание.Подразделение
			|			И ПодразделенияШтатногоРасписания.Владелец = ШтатноеРасписание.Владелец
			|			И (ШтатноеРасписание.ГруппаПозицийПодразделения)
			|ГДЕ
			|	ШтатноеРасписание.Ссылка ЕСТЬ NULL
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПодразделенияШтатногоРасписания.ВышестоящееПодразделение,
			|	ПодразделенияШтатногоРасписания.Владелец,
			|	ВЫРАЗИТЬ(ПодразделенияШтатногоРасписания.ВышестоящееПодразделение КАК Справочник.ПодразделенияОрганизаций).Родитель
			|ИЗ
			|	ВТПодразделенияШтатногоРасписания КАК ПодразделенияШтатногоРасписания
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|		ПО ПодразделенияШтатногоРасписания.ВышестоящееПодразделение = ШтатноеРасписание.Подразделение
			|			И ПодразделенияШтатногоРасписания.Владелец = ШтатноеРасписание.Владелец
			|			И (ШтатноеРасписание.ГруппаПозицийПодразделения)
			|ГДЕ
			|	ПодразделенияШтатногоРасписания.ВышестоящееПодразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ОстатокСоздаваемых.Подразделение КАК Подразделение,
			|	ОстатокСоздаваемых.ВышестоящееПодразделение КАК ВышестоящееПодразделение,
			|	ОстатокСоздаваемых.Владелец КАК Владелец
			|ПОМЕСТИТЬ ВТПодразделенияШтатногоРасписанияКСозданию
			|ИЗ
			|	ВТОстатокСоздаваемых КАК ОстатокСоздаваемых
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПодразделенияШтатногоРасписанияКСозданию.Подразделение КАК Подразделение,
			|	ПРЕДСТАВЛЕНИЕ(ПодразделенияШтатногоРасписанияКСозданию.Подразделение) КАК Наименование,
			|	ЕСТЬNULL(ШтатноеРасписание.Ссылка, ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка)) КАК Родитель,
			|	ПодразделенияШтатногоРасписанияКСозданию.Владелец КАК Владелец
			|ИЗ
			|	ВТПодразделенияШтатногоРасписанияКСозданию КАК ПодразделенияШтатногоРасписанияКСозданию
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|		ПО ПодразделенияШтатногоРасписанияКСозданию.ВышестоящееПодразделение = ШтатноеРасписание.Подразделение
			|			И ПодразделенияШтатногоРасписанияКСозданию.Владелец = ШтатноеРасписание.Владелец
			|			И (ШтатноеРасписание.ГруппаПозицийПодразделения)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписаниеТекущийУровень
			|		ПО ПодразделенияШтатногоРасписанияКСозданию.Подразделение = ШтатноеРасписаниеТекущийУровень.Подразделение
			|			И ПодразделенияШтатногоРасписанияКСозданию.Владелец = ШтатноеРасписаниеТекущийУровень.Владелец
			|			И (ШтатноеРасписаниеТекущийУровень.ГруппаПозицийПодразделения)
			|ГДЕ
			|	ШтатноеРасписаниеТекущийУровень.Ссылка ЕСТЬ NULL";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ПроверитьНеобходимостьСозданияНовыхГрупп = Ложь;
		Иначе
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				НоваяГруппа = Справочники.ШтатноеРасписание.СоздатьЭлемент();
				ЗаполнитьЗначенияСвойств(НоваяГруппа, Выборка);
				НоваяГруппа.ГруппаПозицийПодразделения = Истина;
				УправлениеШтатнымРасписанием.ОтключитьОбновлениеСтруктурыШтатногоРасписания(НоваяГруппа);
				НоваяГруппа.Записать();
				
			КонецЦикла;
			
		КонецЕсли; 
		
	КонецЦикла;
	
	// Обновление иерархии групп
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ШтатноеРасписание.Ссылка,
		|	ЕСТЬNULL(ГруппыШтатногоРасписания.Ссылка, ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка)) КАК Родитель
		|ИЗ
		|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ГруппыШтатногоРасписания
		|		ПО ШтатноеРасписание.Подразделение.Родитель = ГруппыШтатногоРасписания.Подразделение
		|			И (ГруппыШтатногоРасписания.ГруппаПозицийПодразделения)
		|			И ШтатноеРасписание.Ссылка <> ГруппыШтатногоРасписания.Ссылка
		|			И ШтатноеРасписание.Владелец = ГруппыШтатногоРасписания.Владелец
		|			И (ГруппыШтатногоРасписания.Подразделение <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка))
		|ГДЕ
		|	ШтатноеРасписание.Родитель <> ЕСТЬNULL(ГруппыШтатногоРасписания.Ссылка, ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка))
		|	И ШтатноеРасписание.ГруппаПозицийПодразделения";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка= РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбновляемыйОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ОбновляемыйОбъект.Родитель = Выборка.Родитель;
			УправлениеШтатнымРасписанием.ОтключитьОбновлениеСтруктурыШтатногоРасписания(ОбновляемыйОбъект);
			ОбновляемыйОбъект.Записать();
			
		КонецЦикла;
		
	КонецЕсли; 
	
	// Обновление иерархии элементов.
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ШтатноеРасписание.Ссылка,
		|	ГруппыШтатногоРасписания.Ссылка КАК Родитель
		|ИЗ
		|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ГруппыШтатногоРасписания
		|		ПО ШтатноеРасписание.Подразделение = ГруппыШтатногоРасписания.Подразделение
		|			И ШтатноеРасписание.Владелец = ГруппыШтатногоРасписания.Владелец
		|			И (ГруппыШтатногоРасписания.ГруппаПозицийПодразделения)
		|ГДЕ
		|	ШтатноеРасписание.Родитель <> ГруппыШтатногоРасписания.Ссылка
		|	И НЕ ШтатноеРасписание.ГруппаПозицийПодразделения";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка= РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбновляемыйОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ОбновляемыйОбъект.Родитель = Выборка.Родитель;
			УправлениеШтатнымРасписанием.ОтключитьОбновлениеСтруктурыШтатногоРасписания(ОбновляемыйОбъект);
			ОбновляемыйОбъект.Записать();
			
		КонецЦикла;
		
	КонецЕсли; 
	
	// Обновление наименований групп штатного расписания.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ШтатноеРасписание.Подразделение КАК Подразделение,
		|	ШтатноеРасписание.Владелец КАК Владелец,
		|	МАКСИМУМ(ШтатноеРасписание.Утверждена) КАК Утверждена,
		|	МИНИМУМ(ШтатноеРасписание.Закрыта) КАК Закрыта
		|ПОМЕСТИТЬ ВТУтвержденностьЗакрытостьПодразделенийПредварительно
		|ИЗ
		|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|ГДЕ
		|	НЕ ШтатноеРасписание.ГруппаПозицийПодразделения
		|
		|СГРУППИРОВАТЬ ПО
		|	ШтатноеРасписание.Подразделение,
		|	ШтатноеРасписание.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШтатноеРасписание.Подразделение КАК Подразделение,
		|	ШтатноеРасписание.Владелец КАК Владелец,
		|	МАКСИМУМ(ШтатноеРасписаниеПодчиненное.Утверждена) КАК Утверждена,
		|	МИНИМУМ(ШтатноеРасписаниеПодчиненное.Закрыта) КАК Закрыта
		|ПОМЕСТИТЬ ВТУтвержденностьЗакрытостьПодразделений
		|ИЗ
		|	ВТУтвержденностьЗакрытостьПодразделенийПредварительно КАК ШтатноеРасписание
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПодчиненностьПодразделенийОрганизаций КАК ПодчиненностьПодразделенийОрганизаций
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТУтвержденностьЗакрытостьПодразделенийПредварительно КАК ШтатноеРасписаниеПодчиненное
		|			ПО ПодчиненностьПодразделенийОрганизаций.Подразделение = ШтатноеРасписаниеПодчиненное.Подразделение
		|				И ПодчиненностьПодразделенийОрганизаций.Организация = ШтатноеРасписаниеПодчиненное.Владелец
		|		ПО ШтатноеРасписание.Подразделение = ПодчиненностьПодразделенийОрганизаций.ВышестоящееПодразделение
		|			И ШтатноеРасписание.Владелец = ПодчиненностьПодразделенийОрганизаций.Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ШтатноеРасписание.Подразделение,
		|	ШтатноеРасписание.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШтатноеРасписание.Ссылка КАК ГруппаШтатногоРасписания,
		|	ШтатноеРасписание.Родитель КАК Родитель,
		|	ШтатноеРасписание.Владелец КАК Владелец,
		|	УтвержденностьЗакрытостьПодразделений.Утверждена КАК Утверждена,
		|	УтвержденностьЗакрытостьПодразделений.Закрыта КАК Закрыта,
		|	УтвержденностьЗакрытостьПодразделений.Подразделение.Наименование КАК Наименование
		|ПОМЕСТИТЬ ВТУтвержденностьЗакрытостьГрупп
		|ИЗ
		|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУтвержденностьЗакрытостьПодразделений КАК УтвержденностьЗакрытостьПодразделений
		|		ПО ШтатноеРасписание.Подразделение = УтвержденностьЗакрытостьПодразделений.Подразделение
		|			И ШтатноеРасписание.Владелец = УтвержденностьЗакрытостьПодразделений.Владелец
		|ГДЕ
		|	ШтатноеРасписание.ГруппаПозицийПодразделения
		|	И (ШтатноеРасписание.Наименование <> УтвержденностьЗакрытостьПодразделений.Подразделение.Наименование
		|			ИЛИ ШтатноеРасписание.Утверждена <> УтвержденностьЗакрытостьПодразделений.Утверждена
		|			ИЛИ ШтатноеРасписание.Закрыта <> УтвержденностьЗакрытостьПодразделений.Закрыта)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УтвержденностьЗакрытостьГрупп.ГруппаШтатногоРасписания КАК ГруппаШтатногоРасписания,
		|	УтвержденностьЗакрытостьГрупп.Родитель КАК Родитель,
		|	УтвержденностьЗакрытостьГрупп.Утверждена КАК Утверждена,
		|	УтвержденностьЗакрытостьГрупп.Закрыта КАК Закрыта,
		|	УтвержденностьЗакрытостьГрупп.Наименование КАК Наименование
		|ИЗ
		|	ВТУтвержденностьЗакрытостьГрупп КАК УтвержденностьЗакрытостьГрупп";
		
	РезультатЗапроса = Запрос.Выполнить();
	Пока Не РезультатЗапроса.Пустой() Цикл
		
		Выборка= РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОбновляемыйОбъект = Выборка.ГруппаШтатногоРасписания.ПолучитьОбъект();
			ОбновляемыйОбъект.Наименование = Выборка.Наименование;
			ОбновляемыйОбъект.Утверждена = Выборка.Утверждена;
			ОбновляемыйОбъект.Закрыта = Выборка.Закрыта;
			УправлениеШтатнымРасписанием.ОтключитьОбновлениеСтруктурыШтатногоРасписания(ОбновляемыйОбъект);
			ОбновляемыйОбъект.Записать();
			
		КонецЦикла;
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	УтвержденностьЗакрытостьГрупп.Родитель КАК ГруппаШтатногоРасписания,
			|	УтвержденностьЗакрытостьГрупп.Владелец КАК Владелец,
			|	УтвержденностьЗакрытостьГрупп.Родитель.Родитель КАК Родитель,
			|	МАКСИМУМ(ШтатноеРасписание.Утверждена) КАК Утверждена,
			|	МИНИМУМ(ШтатноеРасписание.Закрыта) КАК Закрыта
			|ПОМЕСТИТЬ ВТУтвержденностьЗакрытостьРодителейПодразделений
			|ИЗ
			|	ВТУтвержденностьЗакрытостьГрупп КАК УтвержденностьЗакрытостьГрупп
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|		ПО УтвержденностьЗакрытостьГрупп.Родитель = ШтатноеРасписание.Родитель
			|			И УтвержденностьЗакрытостьГрупп.Владелец = ШтатноеРасписание.Владелец
			|ГДЕ
			|	УтвержденностьЗакрытостьГрупп.Родитель <> ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка)
			|
			|СГРУППИРОВАТЬ ПО
			|	УтвержденностьЗакрытостьГрупп.Родитель,
			|	УтвержденностьЗакрытостьГрупп.Владелец,
			|	УтвержденностьЗакрытостьГрупп.Родитель.Родитель
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТУтвержденностьЗакрытостьГрупп
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ШтатноеРасписание.Ссылка КАК ГруппаШтатногоРасписания,
			|	ШтатноеРасписание.Родитель КАК Родитель,
			|	ШтатноеРасписание.Владелец КАК Владелец,
			|	ШтатноеРасписание.Подразделение.Наименование КАК Наименование,
			|	УтвержденностьЗакрытостьПодразделений.Утверждена КАК Утверждена,
			|	УтвержденностьЗакрытостьПодразделений.Закрыта КАК Закрыта
			|ПОМЕСТИТЬ ВТУтвержденностьЗакрытостьГрупп
			|ИЗ
			|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУтвержденностьЗакрытостьРодителейПодразделений КАК УтвержденностьЗакрытостьПодразделений
			|		ПО ШтатноеРасписание.Ссылка = УтвержденностьЗакрытостьПодразделений.ГруппаШтатногоРасписания
			|			И ШтатноеРасписание.Владелец = УтвержденностьЗакрытостьПодразделений.Владелец
			|ГДЕ
			|	ШтатноеРасписание.ГруппаПозицийПодразделения
			|	И (ШтатноеРасписание.Наименование <> ШтатноеРасписание.Подразделение.Наименование
			|			ИЛИ ШтатноеРасписание.Утверждена <> УтвержденностьЗакрытостьПодразделений.Утверждена
			|			ИЛИ ШтатноеРасписание.Закрыта <> УтвержденностьЗакрытостьПодразделений.Закрыта)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТУтвержденностьЗакрытостьРодителейПодразделений
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	УтвержденностьЗакрытостьГрупп.ГруппаШтатногоРасписания КАК ГруппаШтатногоРасписания,
			|	УтвержденностьЗакрытостьГрупп.Родитель КАК Родитель,
			|	УтвержденностьЗакрытостьГрупп.Утверждена КАК Утверждена,
			|	УтвержденностьЗакрытостьГрупп.Закрыта КАК Закрыта,
			|	УтвержденностьЗакрытостьГрупп.Наименование КАК Наименование
			|ИЗ
			|	ВТУтвержденностьЗакрытостьГрупп КАК УтвержденностьЗакрытостьГрупп";
		
		РезультатЗапроса = Запрос.Выполнить();
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура ЗаполнитьКлассыУсловийТруда() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШтатноеРасписание.Ссылка
	|ИЗ
	|	РегистрСведений.КлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|		ПО КлассыУсловийТрудаПоДолжностям.Должность = ШтатноеРасписание.Ссылка";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		// Обновление уже выполнялось
		Возврат;
		
	КонецЕсли;
	
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ШтатноеРасписание.Ссылка КАК Должность,
	|	КлассыУсловийТрудаПоДолжностям.Период,
	|	КлассыУсловийТрудаПоДолжностям.КлассУсловийТруда,
	|	КлассыУсловийТрудаПоДолжностям.ДатаРегистрацииИзменений
	|ИЗ
	|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должности КАК Должности
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
	|			ПО Должности.Ссылка = КлассыУсловийТрудаПоДолжностям.Должность
	|		ПО ШтатноеРасписание.Должность = Должности.Ссылка
	|ГДЕ
	|	КлассыУсловийТрудаПоДолжностям.КлассУсловийТруда ЕСТЬ НЕ NULL ";
	
	НаборЗаписей = РегистрыСведений.КлассыУсловийТрудаПоДолжностям.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаписьНабора = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьНабора, Выборка);
	КонецЦикла;
	
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура УстановитьЗначениеРеквизитаГруппаПозицийПодразделения(ПараметрыОбновления = Неопределено) Экспорт
	
	ОбработкаЗавершена = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШтатноеРасписание.Родитель КАК Родитель
		|ИЗ
		|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|ГДЕ
		|	НЕ ШтатноеРасписание.Родитель.ГруппаПозицийПодразделения";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ОбработкаЗавершена = Ложь;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(
				ПараметрыОбновления, "Справочник.ШтатноеРасписание", "Ссылка", Выборка.Родитель) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			ПозицияОбъект = Выборка.Родитель.ПолучитьОбъект();
			ПозицияОбъект.ГруппаПозицийПодразделения = Истина;
			УправлениеШтатнымРасписанием.ОтключитьОбновлениеСтруктурыШтатногоРасписания(ПозицияОбъект);
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ПозицияОбъект);
			
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
		Справочники.ШтатноеРасписание.ОбновитьСтруктуруШтатногоРасписанияПоПодразделениям();
		
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", ОбработкаЗавершена);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
