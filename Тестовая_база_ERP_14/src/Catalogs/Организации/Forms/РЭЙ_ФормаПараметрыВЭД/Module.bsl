#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПрочитатьРеквизитыИзВременногоХранилища();
	ПоказатьАдрес();
	
	Элементы.ОбъектРЭЙ_НаименованияДляКлиентБанкаНаименование.СписокВыбора.Добавить(Объект.Наименование);
	Элементы.ОбъектРЭЙ_НаименованияДляКлиентБанкаНаименование.СписокВыбора.Добавить(Объект.НаименованиеПолное);
	
	ДобавитьУсловноеОформление_НаименованияДляКлиентБанка();
	УстановитьОтображение_ДекорацияДатаВнесенияВГосРеестрМеньше01072002();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда 
		Если Модифицированность Тогда
			Отказ = Истина;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	КонтрольДублейСтрок_НаименованияДляКлиентБанка(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПеренестиНаФормуЭлемента = Истина;
	
	ПараметрыЗакрытия = Новый Структура;
	
	Если Модифицированность Тогда 
		АдресХранилища = ПоместитьРеквизитыВоВременноеХранилище();
		ПараметрыЗакрытия.Вставить("АдресХранилища", АдресХранилища);
	КонецЕсли;
	
	ПараметрыЗакрытия.Вставить("Модифицированность", Модифицированность);
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗакрытии, ПараметрыЗакрытия); 
	ОписаниеОповещенияОЗакрытии = Неопределено;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапки

&НаКлиенте
Процедура ПризнакРезидентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ПризнакиРезидента.ЮрЛицо"));
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ПризнакиРезидента.ФизЛицоИП"));
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ПризнакиРезидента.ФизЛицоЧП"));
КонецПроцедуры

&НаКлиенте
Процедура ПечататьАдресПрописнымиПриИзменении(Элемент)
	Если Не Объект.РЭЙ_ПечататьАдресПрописными тогда 
		Режим = РежимДиалогаВопрос.ДаНет;
		ТекстВопроса = "При снятии флага ""Печатать адрес прописными буквами"" поля адреса будут перезаполнены юридическим адресом из карточки организации. Продолжить?";
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПечататьАдресПрописнымиПриИзменении_Завершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Режим);
	Иначе
		ИзменениеРеквизитовАдреса();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПечататьАдресПрописнымиПриИзменении_Завершение(Результат, ДополнительныеПараметры) Экспорт 
	Если Результат = КодВозвратаДиалога.Нет Тогда
    	Возврат;
	КонецЕсли;
	
	ИзменениеРеквизитовАдреса();
КонецПроцедуры	

&НаКлиенте
Процедура РЭЙ_ДатаВнесенияВГосРеестрПриИзменении(Элемент)
	УстановитьОтображение_ДекорацияДатаВнесенияВГосРеестрМеньше01072002();
КонецПроцедуры

#КонецОбласти

#Область Отображение

&НаСервере
Процедура ДобавитьУсловноеОформление_НаименованияДляКлиентБанка()
	// Текст для незаполненной колонки "Наименование"
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ОбъектРЭЙ_НаименованияДляКлиентБанкаНаименование");
	
	ПолеОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РЭЙ_НаименованияДляКлиентБанка.Наименование");
    ПолеОтбора.ПравоеЗначение = "";
    ПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", "Укажите произвольное или выберите из списка");
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ДекорацияДатаВнесенияВГосРеестрМеньше01072002()
	Если Объект.РЭЙ_ДатаВнесенияВГосРеестр < Дата(2002,07,01) Тогда
		Элементы.ДекорацияДатаВнесенияВГосРеестрМеньше01072002.Видимость = Истина;
	Иначе
		Элементы.ДекорацияДатаВнесенияВГосРеестрМеньше01072002.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьРеквизитыИзВременногоХранилища()
	
	Если Параметры.Свойство("АдресВременногоХранилища")  Тогда 
		
		ИменаРеквизитовФормы = Новый Массив;
		ИменаРеквизитовФормы.Добавить("Ссылка");
		
		РЭЙ_СлужебныйСервер.ЗаполнитьСвойстваОбъектаИзВременногоХранилища(Объект, Параметры.АдресВременногоХранилища, ЭтотОбъект, ИменаРеквизитовФормы);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПоместитьРеквизитыВоВременноеХранилище()
	
	МетаданныеОбъекта = РеквизитФормыВЗначение("Объект").Метаданные();
	АдресХранилища = РЭЙ_СлужебныйСервер.ВременноеХранилищеРеквизитов(Объект, МетаданныеОбъекта, УникальныйИдентификатор);
	
	Возврат АдресХранилища;
	
КонецФункции

&НаСервере
Процедура ПоказатьАдрес()
	// TODO не заполняются все реквизиты
	
	ЮрАдресОрг = ПолучитьЮрАдрес(Ссылка);
	
	Если Объект.РЭЙ_Регион = "" тогда
		
		Если ЮрАдресОрг.Свойство("Регион") Тогда
			Объект.РЭЙ_Регион = ЮрАдресОрг.Регион;
			Модифицированность = Истина;
		КонецЕсли;
		
		Если ЮрАдресОрг.Свойство("СубъектРФ") Тогда
			Объект.РЭЙ_Регион = ЮрАдресОрг.СубъектРФ;
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.РЭЙ_Район = "" тогда
		
		Если ЮрАдресОрг.Свойство("Район") Тогда
			Объект.РЭЙ_Район = ЮрАдресОрг.Район;
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.РЭЙ_Город = "" тогда
		
		Если ЮрАдресОрг.Свойство("Город") Тогда
			Объект.РЭЙ_Город = ЮрАдресОрг.Город;
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.РЭЙ_НаселенныйПункт = "" тогда
		
		Если ЮрАдресОрг.Свойство("НаселенныйПункт") Тогда
			Объект.РЭЙ_НаселенныйПункт = ЮрАдресОрг.НаселенныйПункт;
			Модифицированность = Истина;
		КонецЕсли;
		
		Если ЮрАдресОрг.Свойство("НаселПункт") Тогда
			Объект.РЭЙ_НаселенныйПункт = ЮрАдресОрг.НаселПункт;
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.РЭЙ_Улица = "" тогда
		
		Если ЮрАдресОрг.Свойство("Улица") Тогда
			Объект.РЭЙ_Улица = ЮрАдресОрг.Улица;
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.РЭЙ_Дом = "" тогда
		
		Если ЮрАдресОрг.Свойство("Дом") Тогда
			Объект.РЭЙ_Дом = ЮрАдресОрг.Дом;
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.РЭЙ_Корпус = "" тогда
		
		Если ЮрАдресОрг.Свойство("Корпус") Тогда
			Объект.РЭЙ_Корпус = ЮрАдресОрг.Корпус;
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.РЭЙ_Квартира = "" тогда
		
		Если ЮрАдресОрг.Свойство("Квартира") Тогда
			Объект.РЭЙ_Квартира = ЮрАдресОрг.Квартира;
			Модифицированность = Истина;
		КонецЕсли;

	КонецЕсли;
	
	Если Объект.РЭЙ_ПечататьАдресПрописными тогда
		
		Объект.РЭЙ_Регион = ВРег(Объект.РЭЙ_Регион);
		Объект.РЭЙ_Район = ВРег(Объект.РЭЙ_Район);
		Объект.РЭЙ_Город = ВРег(Объект.РЭЙ_Город);
		Объект.РЭЙ_НаселенныйПункт = ВРег(Объект.РЭЙ_НаселенныйПункт);
		Объект.РЭЙ_Улица = ВРег(Объект.РЭЙ_Улица);
		
		Объект.РЭЙ_Дом = ВРег(Объект.РЭЙ_Дом);
		Объект.РЭЙ_Корпус = ВРег(Объект.РЭЙ_Корпус);
		Объект.РЭЙ_Квартира = ВРег(Объект.РЭЙ_Квартира);
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ИзменениеРеквизитовАдреса()
	
	ЮрАдресОрг = ПолучитьЮрАдрес(Ссылка);
	
	Если Объект.РЭЙ_Регион = "" тогда
		Если ЮрАдресОрг.Свойство("Регион") Тогда
			Объект.РЭЙ_Регион = ЮрАдресОрг.Регион;
		КонецЕсли;	
		
		Если ЮрАдресОрг.Свойство("СубъектРФ") Тогда
			Объект.РЭЙ_Регион = ЮрАдресОрг.СубъектРФ;
		КонецЕсли;

	КонецЕсли;
	
	Если Объект.РЭЙ_Район = "" тогда
		Если ЮрАдресОрг.Свойство("Район") Тогда
			Объект.РЭЙ_Район = ЮрАдресОрг.Район;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РЭЙ_Город = "" тогда
		Если ЮрАдресОрг.Свойство("Город") Тогда
			Объект.РЭЙ_Город = ЮрАдресОрг.Город;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РЭЙ_НаселенныйПункт = "" тогда
		
		Если ЮрАдресОрг.Свойство("НаселенныйПункт") Тогда
			Объект.РЭЙ_НаселенныйПункт = ЮрАдресОрг.НаселенныйПункт;
		КонецЕсли;
		
		Если ЮрАдресОрг.Свойство("НаселПункт") Тогда
			Объект.РЭЙ_НаселенныйПункт = ЮрАдресОрг.НаселПункт;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.РЭЙ_Улица = "" тогда
		Если ЮрАдресОрг.Свойство("Улица") Тогда
			Объект.РЭЙ_Улица = ЮрАдресОрг.Улица;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.РЭЙ_ПечататьАдресПрописными тогда
		
		Объект.РЭЙ_Регион = ВРег(Объект.РЭЙ_Регион);
		Объект.РЭЙ_Район = ВРег(Объект.РЭЙ_Район);
		Объект.РЭЙ_Город = ВРег(Объект.РЭЙ_Город);
		Объект.РЭЙ_НаселенныйПункт	= ВРег(Объект.РЭЙ_НаселенныйПункт);
		Объект.РЭЙ_Улица = ВРег(Объект.РЭЙ_Улица);
		
	Иначе
		
		Если ЮрАдресОрг.Свойство("Регион") Тогда
			Объект.РЭЙ_Регион = ЮрАдресОрг.Регион;
		ИначеЕсли ЮрАдресОрг.Свойство("СубъектРФ") Тогда
			Объект.РЭЙ_Регион = ЮрАдресОрг.СубъектРФ; 
		Иначе 
			Объект.РЭЙ_Регион = "";
		КонецЕсли;
		
		Если ЮрАдресОрг.Свойство("Район") Тогда
			Объект.РЭЙ_Район = ЮрАдресОрг.Район;
		Иначе	
			Объект.РЭЙ_Район = "";	
		КонецЕсли;
		
		Если ЮрАдресОрг.Свойство("Город") Тогда
			Объект.РЭЙ_Город = ЮрАдресОрг.Город;
		Иначе 
			Объект.РЭЙ_Город = "";
		КонецЕсли;
		
		Если ЮрАдресОрг.Свойство("НаселенныйПункт") Тогда
			Объект.РЭЙ_НаселенныйПункт = ЮрАдресОрг.НаселенныйПункт;
		ИначеЕсли ЮрАдресОрг.Свойство("НаселПункт") Тогда
			Объект.РЭЙ_НаселенныйПункт = ЮрАдресОрг.НаселПункт;
		Иначе 
			Объект.РЭЙ_НаселенныйПункт = "";
		КонецЕсли;

		Если ЮрАдресОрг.Свойство("Улица") Тогда
			Объект.РЭЙ_Улица = ЮрАдресОрг.Улица;
		Иначе
			Объект.РЭЙ_Улица = "";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьЮрАдрес(ЮрФизЛицо) 
	
	СтруктураАдреса	= Новый Структура;
	
	Если НЕ ЗначениеЗаполнено(ЮрФизЛицо) Тогда
		Возврат СтруктураАдреса;
	КонецЕсли; 
	
	ЭтоФизЛицо	= Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	
	Отбор = Новый Структура;
	
	Если НЕ ЭтоФизЛицо Тогда
		КонтактнаяИнформация = Объект.КонтактнаяИнформация;
		Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	Иначе	
		КонтактнаяИнформация = Объект.ИндивидуальныйПредприниматель.КонтактнаяИнформация;
		Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
	КонецЕсли;	
	
	Отбор.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	СтрокиКонтактнойИнформации = КонтактнаяИнформация.НайтиСтроки(Отбор);
	
	Если СтрокиКонтактнойИнформации.Количество() > 0 Тогда 
		
		СтруктураАдреса	= РаботаСАдресами.АдресВФорматеКЛАДР(СтрокиКонтактнойИнформации[0].ЗначенияПолей);
		
	КонецЕсли;	
	
	Возврат СтруктураАдреса;
КонецФункции

&НаСервереБезКонтекста
Функция РазложитьСписокВСтруктуру(СписокЗначений)
	
	РазложеннаяСтруктура = Новый Структура;

	Если ТипЗнч(СписокЗначений) = Тип("СписокЗначений") Тогда 
		
		Для Каждого СтрокаСпискаЗначений Из  СписокЗначений Цикл
			РазложеннаяСтруктура.Вставить(СтрокаСпискаЗначений.Представление, СтрокаСпискаЗначений.Значение);	
		КонецЦикла;	
		
	ИначеЕсли ТипЗнч(СписокЗначений) = Тип("Строка") Тогда 
		
		ЗначениеИницализировано	= Ложь;
		
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(СписокЗначений);
		
		Пока ЧтениеXML.Прочитать() Цикл
			
			Если ЧтениеXML.ИмеетЗначение Тогда 
				Значение = ЧтениеXML.Значение;
				ЗначениеИницализировано	= Истина; 
			КонецЕсли;
			
			Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЗначениеИницализировано Тогда 
				
				Ключ = ЧтениеXML.Имя; 
				
				ЗначениеИницализировано	= Ложь;
				РазложеннаяСтруктура.Вставить(Ключ, Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	Возврат РазложеннаяСтруктура;
	
КонецФункции	

&НаСервере
Процедура КонтрольДублейСтрок_НаименованияДляКлиентБанка(Отказ)
	ТаблицаНаименованийДляКлиентБанка = Объект.РЭЙ_НаименованияДляКлиентБанка.Выгрузить();
	ТаблицаНаименованийДляКлиентБанка.Колонки.Добавить("КоличествоВхождений");
	Для Каждого СтрокаТЧ Из ТаблицаНаименованийДляКлиентБанка Цикл
		СтрокаТЧ.КоличествоВхождений = 1;
	КонецЦикла;
	ТаблицаНаименованийДляКлиентБанка.Свернуть("ТипКлиентБанка", "КоличествоВхождений");
	ТекстОшибки = "";
	Для Каждого СтрокаТЧ Из ТаблицаНаименованийДляКлиентБанка Цикл
		Если СтрокаТЧ.КоличествоВхождений > 1 Тогда
			СтрокиТЧ = Объект.РЭЙ_НаименованияДляКлиентБанка.НайтиСтроки(Новый Структура("ТипКлиентБанка", СтрокаТЧ.ТипКлиентБанка));
			ИндексСтроки = Формат(Объект.РЭЙ_НаименованияДляКлиентБанка.Индекс(СтрокиТЧ[1]), "ЧГ=0");
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Обнаружены дубли строк для типа клиент-банка " + СтрокаТЧ.ТипКлиентБанка + ".";
			СообщениеПользователю.Поле = "Объект.РЭЙ_НаименованияДляКлиентБанка[" + ИндексСтроки + "].ТипКлиентБанка";
			СообщениеПользователю.Сообщить();
			
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
