#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПрочитатьРеквизитыИзВременногоХранилища();
	УстановитьОтборПоВладельцуСчетаКорреспондентыНаСервере();	
	УстановитьОтображение_ЗависитОт_НеЯвляетсяРезидентом();

	ЗаполнениеРеквизитовПоУмолчанию();
	
	Если Не РЭЙ_СлужебныйСервер.ЕстьОбработкаКлиентБанкВЭД() Тогда
		Элементы.РЭЙ_ВидПредоставленияДокументовПоСделке.Доступность = Ложь;
		Если Объект.РЭЙ_ВидПредоставленияДокументовПоСделке = 0 Тогда
			Объект.РЭЙ_ВидПредоставленияДокументовПоСделке = 1;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСписокВыбораНаименованийДляКлиентБанка();
	
	ДобавитьУсловноеОформление_НаименованияДляКлиентБанка();
	ДобавитьУсловноеОформление_КлиринговыеСистемы();
	ДобавитьУсловноеОформление_СчетаКорреспонденты()
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьОтображение_СделатьОсновным_КоррСчет();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда 
		Если Модифицированность Тогда
			Отказ = Истина;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	КонтрольКорректностиОсновнойКоррСчет();
	КонтрольКорректностиОсновнаяКлиринговаяСистема();
		
	ПараметрыЗакрытия = Новый Структура;
	
	Если Модифицированность Тогда 
		АдресХранилища = ПоместитьРеквизитыВоВременноеХранилище();
		ПараметрыЗакрытия.Вставить("АдресХранилища", АдресХранилища);
	КонецЕсли;
	
	ПараметрыЗакрытия.Вставить("Модифицированность", Модифицированность);
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗакрытии, ПараметрыЗакрытия); 
	ОписаниеОповещенияОЗакрытии = Неопределено;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапки

&НаКлиенте
Процедура НаименованиеПолноеПриИзменении(Элемент)
	ЗаполнитьСписокВыбораНаименованийДляКлиентБанка();
КонецПроцедуры

&НаКлиенте
Процедура СтранаПриИзменении(Элемент)
	СтранаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СтранаПриИзмененииНаСервере()
	Если Объект.РЭЙ_Страна = ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
		Объект.РЭЙ_НеЯвляетсяРезидентом = Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(Объект.РЭЙ_Страна) Тогда
		Объект.РЭЙ_НеЯвляетсяРезидентом = Ложь;
	Иначе
		Объект.РЭЙ_НеЯвляетсяРезидентом = Истина;
	КонецЕсли;

	УстановитьОтображение_ЗависитОт_НеЯвляетсяРезидентом();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_БанкиКорреспонденты

&НаКлиенте
Процедура КомандаСделатьОсновнымКоррСчет(Команда)
	Если Элементы.СписокСчетаКорреспонденты.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Объект.РЭЙ_ОсновнойКоррСчет = Элементы.СписокСчетаКорреспонденты.ТекущиеДанные.Ссылка Тогда
		Объект.РЭЙ_ОсновнойКоррСчет = ПредопределенноеЗначение("Справочник.РЭЙ_БанковскиеСчетаВалютные.ПустаяСсылка");
	Иначе
		Объект.РЭЙ_ОсновнойКоррСчет = Элементы.СписокСчетаКорреспонденты.ТекущиеДанные.Ссылка;
	КонецЕсли; 
	
	УстановитьОтображение_СделатьОсновным_КоррСчет();
КонецПроцедуры

&НаКлиенте
Процедура СписокСчетаКорреспондентыПриАктивизацииСтроки(Элемент)
	УстановитьОтображение_СделатьОсновным_КоррСчет();
КонецПроцедуры

&НаКлиенте
Процедура СписокСчетаКорреспондентыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Ссылка.Пустая() Тогда 
		ПоказатьПредупреждение(, "Перед добавлением кор. счетов необходимо записать текущий элемент на основной форме справочника!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если НЕ Копирование Тогда
		Отказ = Истина;
		
		Отбор = Новый Структура;
		Отбор.Вставить("РЭЙ_НеЯвляетсяРезидентом", Истина);
		
		ПараметрыОткрытия = Новый Структура("Отбор", Отбор);
		ПараметрыОткрытия.Вставить("Отображение", "Список"); 		
		
		ФормаВыбора	= ПолучитьФорму("Справочник.КлассификаторБанков.ФормаВыбора", ПараметрыОткрытия);
		ФормаВыбора.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбора.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("СписокСчетаКорреспондентыПередНачаломДобавления_Завершение", ЭтотОбъект);
		ФормаВыбора.Элементы.Список.Отображение	= ОтображениеТаблицы.Список;
		
		ЭлементОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ПравоеЗначение = Ссылка;
		
		ФормаВыбора.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокСчетаКорреспондентыПередНачаломДобавления_Завершение(Результат, ДополнительныеПараметры) Экспорт
	БанкКорреспондент = Результат;
	
	Если Не ЗначениеЗаполнено(БанкКорреспондент) Тогда 
		Возврат;
	КонецЕсли;	
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Владелец", Ссылка);
	ЗначенияЗаполнения.Вставить("Банк", БанкКорреспондент);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.РЭЙ_БанковскиеСчетаВалютные.ФормаОбъекта", ПараметрыОткрытия);
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_КлиринговыеСистемы

&НаКлиенте
Процедура КомандаСделатьОсновнымКлиринговуюСистему(Команда)
	Если Элементы.РЭЙ_КлиринговыеСистемы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Объект.РЭЙ_ОсновнаяКлиринговаяСистема = Элементы.РЭЙ_КлиринговыеСистемы.ТекущиеДанные.КлиринговаяСистема Тогда
		Объект.РЭЙ_ОсновнаяКлиринговаяСистема = ПредопределенноеЗначение("Справочник.РЭЙ_КлиринговыеСистемы.ПустаяСсылка");
	Иначе
		Объект.РЭЙ_ОсновнаяКлиринговаяСистема = Элементы.РЭЙ_КлиринговыеСистемы.ТекущиеДанные.КлиринговаяСистема;
	КонецЕсли; 
	
	УстановитьОтображение_СделатьОсновным_КлиринговаяСистема();
КонецПроцедуры

&НаКлиенте
Процедура КлиринговыеСистемыПриАктивизацииСтроки(Элемент)
	УстановитьОтображение_СделатьОсновным_КлиринговаяСистема();
КонецПроцедуры

#КонецОбласти

#Область Отображение

&НаСервере
Процедура ДобавитьУсловноеОформление_НаименованияДляКлиентБанка()
	// Текст для незаполненной колонки "Наименование"
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ОбъектРЭЙ_НаименованияДляКлиентБанкаНаименование");
	
	ПолеОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РЭЙ_НаименованияДляКлиентБанка.Наименование");
    ПолеОтбора.ПравоеЗначение = "";
    ПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", "Укажите произвольное или выберите из списка");
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформление_КлиринговыеСистемы()
	// Выделить жирным основную клиринговую систему
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("РЭЙ_КлиринговыеСистемы");
	
	ПолеОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РЭЙ_КлиринговыеСистемы.КлиринговаяСистема");
    ПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ПолеОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РЭЙ_КлиринговыеСистемы.КлиринговаяСистема");
    ПолеОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РЭЙ_ОсновнаяКлиринговаяСистема");
    ПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,, Истина));
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформление_СчетаКорреспонденты()
	// Выделить жирным основной корр. счет
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СписокСчетаКорреспонденты");
	
	ПолеОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокСчетаКорреспонденты.Ссылка");
    ПолеОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РЭЙ_ОсновнойКоррСчет");
    ПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,, Истина));
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ЗависитОт_НеЯвляетсяРезидентом()
	Элементы.СтраницаКлиринговыеСистемы.Видимость = Объект.РЭЙ_НеЯвляетсяРезидентом;
	Элементы.Страница_НаименованияДляКлиентБанка.Видимость = Не Объект.РЭЙ_НеЯвляетсяРезидентом;
	Элементы.РЭЙ_ТипКлиентБанка.Видимость = Не Объект.РЭЙ_НеЯвляетсяРезидентом;
	Элементы.ГруппаРегистрационныйНомер.Видимость = Не Объект.РЭЙ_НеЯвляетсяРезидентом;
	Элементы.Группа_ВидПредоставленияДокументовПоСделке.Видимость = Не Объект.РЭЙ_НеЯвляетсяРезидентом;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтображение_СделатьОсновным_КлиринговаяСистема()
	текКнопка = Элементы.КлиринговыеСистемыКомандаСделатьОсновнымКлиринговуюСистему;
	Если Элементы.РЭЙ_КлиринговыеСистемы.ТекущиеДанные = Неопределено Тогда	
		текКнопка.Доступность = Ложь;
		текКнопка.Пометка = Ложь;
	Иначе	
		текКнопка.Доступность = Истина;
		Если ЗначениеЗаполнено(Элементы.РЭЙ_КлиринговыеСистемы.ТекущиеДанные.КлиринговаяСистема) Тогда
			Если Элементы.РЭЙ_КлиринговыеСистемы.ТекущиеДанные.КлиринговаяСистема = Объект.РЭЙ_ОсновнаяКлиринговаяСистема Тогда
				текКнопка.Пометка = Истина;
			Иначе
				текКнопка.Пометка = Ложь;
			КонецЕсли;
		Иначе
			текКнопка.Пометка = Ложь;
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтображение_СделатьОсновным_КоррСчет()
	текКнопка = Элементы.СписокСчетаКорреспондентыКомандаСделатьОсновным;
	Если Элементы.СписокСчетаКорреспонденты.ТекущиеДанные = Неопределено Тогда
		текКнопка.Доступность = Ложь;
		текКнопка.Пометка = Ложь;	
	Иначе	
		текКнопка.Доступность = Истина;
		текКнопка.Пометка = (Элементы.СписокСчетаКорреспонденты.ТекущиеДанные.Ссылка = Объект.РЭЙ_ОсновнойКоррСчет);
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнениеРеквизитовПоУмолчанию()

	Если Не ЗначениеЗаполнено(Объект.РЭЙ_НаименованиеПолное) Тогда
		Объект.РЭЙ_НаименованиеПолное = Объект.Наименование;
		Модифицированность = Истина;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.Код) Тогда 
		
		Если Не ЗначениеЗаполнено(Объект.РЭЙ_СвифтБИК) Тогда 
			
			РеквизитыДляСвифт = ПолучитьРеквизитыДляСвифтПоБИК();
			
			Если РеквизитыДляСвифт.СвифтБИК <> "" Тогда
				Объект.РЭЙ_СвифтБИК = РеквизитыДляСвифт.СвифтБИК;
				Объект.РЭЙ_НаименованиеАнгл = РеквизитыДляСвифт.НаименованиеАнгл;
				Объект.РЭЙ_ГородАнгл = РеквизитыДляСвифт.ГородАнгл;
				Модифицированность = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.РЭЙ_НомерПаспортаСделки_10_13) Тогда
			
			текНомерПаспортаСделки_10_13 = ПолучитьРегистрационныйНомерБанкаПоБИК();
			
			Если текНомерПаспортаСделки_10_13 <> "" Тогда
				
				Объект.РЭЙ_НомерПаспортаСделки_10_13 = текНомерПаспортаСделки_10_13;
				Объект.РЭЙ_НомерПаспортаСделки_15_18 = "0000";
				
				ТекстСообщения	=  "Регистрационный номер банка в КГРКО (номер лицензии ЦБ РФ) был заполнен автоматически. Если банк является филиалом, заполните порядковый номер филиала.";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				Если Не ЗначениеЗаполнено(Объект.РЭЙ_Страна) Тогда
					Объект.РЭЙ_Страна = Справочники.СтраныМира.Россия;
					СтранаПриИзмененииНаСервере();
				КонецЕсли;
				
				Модифицированность = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораНаименованийДляКлиентБанка()
	Элементы.ОбъектРЭЙ_НаименованияДляКлиентБанкаНаименование.СписокВыбора.Очистить();
	Элементы.ОбъектРЭЙ_НаименованияДляКлиентБанкаНаименование.СписокВыбора.Добавить(Объект.Наименование);
	Элементы.ОбъектРЭЙ_НаименованияДляКлиентБанкаНаименование.СписокВыбора.Добавить(Объект.РЭЙ_НаименованиеПолное);
КонецПроцедуры	

&НаСервере
Процедура КонтрольКорректностиОсновнаяКлиринговаяСистема()
	Если ЗначениеЗаполнено(Объект.РЭЙ_ОсновнаяКлиринговаяСистема) Тогда 
		Отбор = Новый Структура("КлиринговаяСистема", Объект.РЭЙ_ОсновнаяКлиринговаяСистема);
		МассивСтрок = Объект.РЭЙ_КлиринговыеСистемы.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество() = 0 Тогда 
			Объект.РЭЙ_ОсновнаяКлиринговаяСистема = Неопределено;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура КонтрольКорректностиОсновнойКоррСчет()
	Если ЗначениеЗаполнено(Объект.РЭЙ_ОсновнойКоррСчет) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РЭЙ_БанковскиеСчетаВалютные.Ссылка
		|ИЗ
		|	Справочник.РЭЙ_БанковскиеСчетаВалютные КАК РЭЙ_БанковскиеСчетаВалютные
		|ГДЕ
		|	РЭЙ_БанковскиеСчетаВалютные.Ссылка = &ОсновнойКоррСчет
		|	И РЭЙ_БанковскиеСчетаВалютные.Владелец = &Владелец";
		
		Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
		Запрос.УстановитьПараметр("ОсновнойКоррСчет", Объект.РЭЙ_ОсновнойКоррСчет);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Объект.РЭЙ_ОсновнойКоррСчет = Неопределено;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьРеквизитыИзВременногоХранилища()
	Если Параметры.Свойство("АдресВременногоХранилища") Тогда 
		ИменаРеквизитовФормы = Новый Массив;
		ИменаРеквизитовФормы.Добавить("Ссылка");
		
		РЭЙ_СлужебныйСервер.ЗаполнитьСвойстваОбъектаИзВременногоХранилища(Объект, Параметры.АдресВременногоХранилища, ЭтотОбъект, ИменаРеквизитовФормы);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоВладельцуСчетаКорреспондентыНаСервере()
	ОтборВладелец = СписокСчетаКорреспонденты.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборВладелец.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Владелец");
	ОтборВладелец.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ОтборВладелец.ПравоеЗначение 	= Ссылка;
	ОтборВладелец.Использование 	= Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьРегистрационныйНомерБанкаПоБИК()
	Макет = Справочники.КлассификаторБанков.ПолучитьМакет("РЭЙ_КГРКО");
	КоличествоСтрок = Макет.ВысотаТаблицы;
	Результат = "";
	Для Счетчик = 3 По КоличествоСтрок Цикл
		Если СокрЛП(Макет.Область(Счетчик, 4).Текст) = СокрЛП(Объект.Код) Тогда 
			Результат = Макет.Область(Счетчик, 2).Текст; 
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ПолучитьРеквизитыДляСвифтПоБИК()
	Макет = Справочники.КлассификаторБанков.ПолучитьМакет("РЭЙ_СоответствиеБИКиСВИФТ");
	КоличествоСтрок = Макет.ВысотаТаблицы;
	Результат = Новый Структура("СвифтБИК, НаименованиеАнгл, ГородАнгл", "", "", "");
	Для Счетчик = 3 по КоличествоСтрок цикл
		Если СокрЛП(Макет.Область(Счетчик, 2).Текст) = СокрЛП(Объект.Код) Тогда 
			Результат.СвифтБИК = Макет.Область(Счетчик, 3).Текст; 
			Результат.НаименованиеАнгл = Макет.Область(Счетчик, 5).Текст; 
			Результат.ГородАнгл = Макет.Область(Счетчик, 6).Текст; 
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ПоместитьРеквизитыВоВременноеХранилище()
	МетаданныеОбъекта = РеквизитФормыВЗначение("Объект").Метаданные();
	АдресХранилища = РЭЙ_СлужебныйСервер.ВременноеХранилищеРеквизитов(Объект, МетаданныеОбъекта, УникальныйИдентификатор);
	
	Возврат АдресХранилища;
КонецФункции	

#КонецОбласти

