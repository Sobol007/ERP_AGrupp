
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
//++ НЕ УТКА
	ЗаполнитьРеквизитыФормыПоПараметрам();
	УстановитьЗаголовокФормы();
	НастроитьЭлементыФормыПоПараметрам();
	
	Если Параметры.ТолькоПросмотр Тогда
		
		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить(Элементы.Спецификация.Имя);
		МассивЭлементов.Добавить(Элементы.СпецификацияРемонта.Имя);
		МассивЭлементов.Добавить(Элементы.ПланироватьНеРанее.Имя);
		МассивЭлементов.Добавить(Элементы.ЭтапВыпуска.Имя);
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "КнопкаВыбора",   Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "КнопкаОчистки",  Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "КнопкаОткрытия", Истина);
		
	КонецЕсли;
	
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделиях.ПараметрыВыбораСпецификаций(Новый Структура(), Справочники.РесурсныеСпецификации);
	УправлениеДаннымиОбИзделияхКлиентСервер.УстановитьПараметрыВыбораСпецификаций(Элементы.Спецификация,        ПараметрыВыбораСпецификаций.Сборка);
	УправлениеДаннымиОбИзделияхКлиентСервер.УстановитьПараметрыВыбораСпецификаций(Элементы.СпецификацияРемонта, ПараметрыВыбораСпецификаций.Ремонт);
	
//-- НЕ УТКА
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
//++ НЕ УТКА
	
	Если СпособПолученияМатериала <> Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ЭтапВыпуска");
		
	КонецЕсли;
	
	Если СпособПолученияМатериала <> Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации
		ИЛИ НЕ ИспользуетсяПроизводство21 Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Спецификация");
		
	КонецЕсли;

	Если НЕ ОтметкаРемонтПоСпецификации Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("СпецификацияРемонта");
		
	КонецЕсли;
	
	Если НЕ ОтметкаПланироватьНеРанее Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПланироватьНеРанее");
		
	КонецЕсли;
	
//-- НЕ УТКА
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора <> Неопределено 
		И ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма")
		И (ИсточникВыбора.ИмяФормы = "Справочник.РесурсныеСпецификации.Форма.ФормаВыбораЭтапаВыпуска") Тогда
		
		Модифицированность = Истина;
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособПолученияМатериалаПриИзменении(Элемент)
	
//++ НЕ УТКА
	ПриИзмененииСпособаПолученияМатериала();
//-- НЕ УТКА
	Возврат; // пустой обработчик

КонецПроцедуры

&НаКлиенте
Процедура ЭтапВыпускаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Номенклатура", Номенклатура);
	ПараметрыФормы.Вставить("Характеристика", Характеристика);
	ПараметрыФормы.Вставить("АдресХранилища", АдресПолуфабрикаты);
	
	ОткрытьФорму("Справочник.РесурсныеСпецификации.Форма.ФормаВыбораЭтапаВыпуска", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
//++ НЕ УТКА
	ОчиститьСообщения();
	
	Если ПроверитьЗаполнение() Тогда
		
		Если Модифицированность Тогда
			Модифицированность = Ложь;
			ОповеститьОВыборе(ЗначениеВыбора());
		Иначе
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
//-- НЕ УТКА
	Возврат; // пустой обработчик

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТКА

&НаСервере
Процедура ЗаполнитьРеквизитыФормыПоПараметрам()
	
	Этап = Параметры.Этап;
	Владелец = Параметры.Владелец;
	
	Номенклатура = Параметры.Номенклатура;
	Характеристика = Параметры.Характеристика;
	
	СпособПолученияМатериала = Параметры.СпособПолученияМатериала;
	
	Если СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации Тогда
		
		Спецификация = Параметры.ИсточникПолученияПолуфабриката;
		
	ИначеЕсли СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе Тогда
		
		ЭтапВыпуска = Параметры.ИсточникПолученияПолуфабриката;
		
	КонецЕсли;
	
	ПланироватьНеРанее = Параметры.ПланироватьНеРанее;
	
	Если СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации
		И ЗначениеЗаполнено(ПланироватьНеРанее) Тогда
		
		ОтметкаПланироватьНеРанее = Истина;
	Иначе
		
		ОтметкаПланироватьНеРанее = Ложь;
	КонецЕсли;
	
	Если Параметры.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Ремонт Тогда
		
		Если СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе
			И ЗначениеЗаполнено(Параметры.СпецификацияРемонта) Тогда
			
			ОтметкаРемонтПоСпецификации = Истина;
		Иначе
			
			ОтметкаРемонтПоСпецификации = Ложь;
		КонецЕсли;
		
		СпецификацияРемонта = Параметры.СпецификацияРемонта;
		
	КонецЕсли;
	
	АдресПолуфабрикаты = Параметры.АдресПолуфабрикаты;
	
	ЭтоПервыйЭтап = (Этап.Пустая() ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Этап, "НомерЭтапа") = 1);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
	
		ТекстНоменклатура = СтрШаблон(НСтр("ru = 'Номенклатура: %1';
											|en = 'Products: %1'"), Номенклатура);
		
		Если ЗначениеЗаполнено(Характеристика) Тогда
			
			ТекстНоменклатура = ТекстНоменклатура + ", " + СтрШаблон(НСтр("ru = 'Характеристика: %1';
																			|en = 'Characteristic: %1'"), Характеристика);
			
		КонецЕсли;
		
		ЭтаФорма.АвтоЗаголовок = Ложь;
		ЭтаФорма.Заголовок = СтрШаблон(НСтр("ru = 'Способ получения материала (%1)';
											|en = 'Material receipt method (%1)'"), ТекстНоменклатура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормыПоПараметрам()
	
	НастройкиПодсистемыПроизводство = ПроизводствоСерверПовтИсп.НастройкиПодсистемыПроизводство();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, НастройкиПодсистемыПроизводство);
	
	Если ИспользуетсяПроизводство21 Тогда
		Элементы.Спецификация.АвтоОтметкаНезаполненного = Истина;
		Элементы.Спецификация.ПодсказкаВвода = "";
	Иначе
		Элементы.Спецификация.АвтоОтметкаНезаполненного = Ложь;
		Элементы.Спецификация.ПодсказкаВвода = НСтр("ru = '<основная спецификация>';
													|en = '<main BOM>'");
	КонецЕсли;
	
	Элементы.СпособПроизводитсяПоСпецификации.Доступность = (Параметры.СпособАвтовыбораНоменклатуры = Перечисления.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ
															ИЛИ Параметры.СпособАвтовыбораНоменклатуры = Перечисления.СпособыАвтовыбораНоменклатуры.ЗадаетсяВСвойствеПродукции);
	Элементы.СпособПроизводитсяНаЭтапе.Доступность = (Параметры.СпособАвтовыбораНоменклатуры = Перечисления.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ
														И НЕ ЭтоПервыйЭтап);
	
	Элементы.СпособОбеспечиватьОбособленно.Видимость = ИспользуетсяПроизводство22;
	Элементы.ГруппаПланироватьНеРанее.Видимость = НЕ ИспользуетсяПроизводство21;
	
	Если Параметры.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Ремонт Тогда
		Элементы.ГруппаРемонтПоСпецификации.Видимость = Истина;
	Иначе
		Элементы.ГруппаРемонтПоСпецификации.Видимость = Ложь
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ЭтапВыпуска.Видимость  = (Форма.СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе"));
	Элементы.Спецификация.Видимость = (Форма.СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации"));
	
	Элементы.ГруппаРемонтПоСпецификации.Доступность = (Форма.СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе"));
	Элементы.ГруппаПланироватьНеРанее.Доступность = (Форма.СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации"));
	
	Элементы.СпецификацияРемонта.Видимость = Форма.ОтметкаРемонтПоСпецификации;
	Элементы.ПланироватьНеРанее.Видимость = Форма.ОтметкаПланироватьНеРанее;
	
КонецПроцедуры

&НаКлиенте
Функция ЗначениеВыбора()
	
	Результат = Новый Структура;
	
	Результат.Вставить("СпособПолученияМатериала", СпособПолученияМатериала);
	Результат.Вставить("ИсточникПолученияПолуфабриката", ИсточникПолученияПолуфабриката());
	
	Если СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации")
		И ОтметкаПланироватьНеРанее Тогда
		
		Результат.Вставить("ПланироватьНеРанее", ПланироватьНеРанее);
	Иначе
		
		Результат.Вставить("ПланироватьНеРанее", ПредопределенноеЗначение("Справочник.ЭтапыПроизводства.ПустаяСсылка"));
	КонецЕсли;
	
	Если СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе")
		И ОтметкаРемонтПоСпецификации Тогда
		
		Результат.Вставить("СпецификацияРемонта", СпецификацияРемонта);
	Иначе
		
		Результат.Вставить("СпецификацияРемонта", ПредопределенноеЗначение("Справочник.РесурсныеСпецификации.ПустаяСсылка"));
	КонецЕсли;
	
	Если СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе")
		И ДобавитьПромежуточныйВыпускПриВыборе Тогда
		
		Результат.Вставить("ДобавитьПромежуточныйВыпускПриВыборе", ДобавитьПромежуточныйВыпускПриВыборе);
		
	КонецЕсли;
	Результат.Вставить("ПроизводитсяВПроцессе", УправлениеДаннымиОбИзделияхКлиентСервер.ПолуфабрикатПроизводимыйВПроцессе(Результат));
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ИсточникПолученияПолуфабриката()
	
	Если СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе") Тогда
		Результат = ЭтапВыпуска;
	Иначе
		Результат = Спецификация;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПриИзмененииСпособаПолученияМатериала()

	Если СпособПолученияМатериала <> Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации Тогда
		
		Спецификация = Справочники.РесурсныеСпецификации.ПустаяСсылка();
		ОтметкаПланироватьНеРанее = Ложь;
		
	КонецЕсли;

	Если СпособПолученияМатериала <> Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе Тогда
		
		ЭтапВыпуска = Справочники.ЭтапыПроизводства.ПустаяСсылка();
		ОтметкаРемонтПоСпецификации = Ложь;
		
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
КонецПроцедуры

//-- НЕ УТКА

#КонецОбласти