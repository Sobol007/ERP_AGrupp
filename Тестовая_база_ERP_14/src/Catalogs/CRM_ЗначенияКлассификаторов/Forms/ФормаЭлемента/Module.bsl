
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	CRM_КлассификаторыВызовСервера.ПриСозданииНаСервере(ЭтаФорма);
	УстановитьВидимостьДоступность(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	CRM_КлассификаторыВызовСервера.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)

	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Сначала необходимо записать значение.';en='First, you need to write down the value.'"));
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СформироватьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения,
				НСтр("ru='Перед формированием необходимо записать значение. Записать?';en='Before forming, you need to write down the value. Write down?'"),
				РежимДиалогаВопрос.ДаНет);
		
	Иначе
		СформироватьЗавершение(Неопределено, Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		Записать();
	КонецЕсли;

	CRM_КлассификаторыВызовСервера.Сформировать(Объект.Ссылка);
	ПоказатьОповещениеПользователя(
		НСтр("ru='Формирование состава значения классификатора';en='Formulation of the classifier value'"),,
		НСтр("ru='Состав значения сформирован.';en='The composition of the value is formed.'")
	);

КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)

	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru='Настройки значения классификатора ""%ИмяЗначения%""';en='The settings of the classifier value ""% NameValues%""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных, "%ИмяЗначения%", Объект.Наименование);
	
	Адреса = CRM_КлассификаторыВызовСервера.ПолучитьАдресаСхемыКомпоновкиДанныхВоВременномХранилище(
		Объект.Ссылка,
		Объект.ИмяШаблонаСКД,
		АдресСКД, 
		АдресНастроекСКД,
		УникальныйИдентификатор);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НастройкиЗавершение", ЭтотОбъект, Адреса);
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
			"АдресСхемыКомпоновкиДанных,
			|АдресНастроекКомпоновкиДанных,
			|ИсточникШаблонов,
			|Заголовок,
			|НеПомещатьНастройкиВСхемуКомпоновкиДанных,
			|НеНастраиватьУсловноеОформление,
			|НеНастраиватьПорядок,
			|НеНастраиватьВыбор,
			|УникальныйИдентификатор,
			|ИмяШаблонаСКД,
			|ВозвращатьИмяТекущегоШаблонаСКД",
			Адреса.СхемаКомпоновкиДанных,
			Адреса.НастройкиКомпоновкиДанных,
			Объект.Ссылка,
			ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
			Истина,
			Истина,
			Истина,
			Истина,
			УникальныйИдентификатор,
			Объект.ИмяШаблонаСКД,
			Истина),
			,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура НастройкиЗавершение(Результат, Адреса) Экспорт

	Если Результат <> Неопределено Тогда
			
		Объект.ИмяШаблонаСКД = Результат.ИмяТекущегоШаблонаСКД;
			
		Изменения = CRM_КлассификаторыВызовСервера.ПрименитьИзмененияКСхемеКомпоновкиДанных(
			Объект.Ссылка,
			Объект.ИмяШаблонаСКД, 
			Адреса.СхемаКомпоновкиДанных,
			Результат.АдресХранилищаНастройкиКомпоновщика,
			УникальныйИдентификатор);
		
		Объект.ИмяШаблонаСКД = Изменения.ИмяШаблонаСКД;
		ПредставлениеШаблонаСКД = Изменения.ПредставлениеШаблонаСКД;
		АдресСКД = Изменения.АдресСКД;
		АдресНастроекСКД = Изменения.АдресНастроекСКД;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(Форма)

	Форма.Элементы.ГруппаСКД.Видимость = 
		Форма.СпособФормирования = ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ПериодическиОбновлять");
		
	Если Форма.Элементы.Найти("Сформировать") <> Неопределено Тогда
		Форма.Элементы.Сформировать.Видимость = 
			Форма.СпособФормирования = ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ПериодическиОбновлять");
	КонецЕсли;

	Форма.Элементы.ДополнительныйРеквизит.Видимость = 
		Форма.ВидОтображения = ПредопределенноеЗначение("Перечисление.CRM_ВидыОтображенияКлассификаторов.ДополнительныйРеквизит");
		
КонецПроцедуры // УстановитьВидимостьДоступность()

#КонецОбласти
