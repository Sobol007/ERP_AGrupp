Перем Скопирован Экспорт;

Процедура ПриКопировании(ОбъектКопирования)
	Скопирован=Истина;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	Если Контрагент <> ДоговорКонтрагента[РЭЙ_Универсализация.Реквизит_Договор_Контрагент()] Тогда
		Контрагент = ДоговорКонтрагента[РЭЙ_Универсализация.Реквизит_Договор_Контрагент()];
	КонецЕсли;
	
	Если Организация <> ДоговорКонтрагента.Организация Тогда
		Организация = ДоговорКонтрагента.Организация;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СпрРЭЙ_КонтрактыВЭД.Ссылка
		|ИЗ
		|	Справочник.РЭЙ_КонтрактыВЭД КАК СпрРЭЙ_КонтрактыВЭД
		|ГДЕ
		|	СпрРЭЙ_КонтрактыВЭД.ДоговорКонтрагента = &ДоговорКонтрагента";
		
		Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
			Сообщить("По данному договору контрагента уже введен контракт ВЭД."+Символы.ПС+"Элемент справочника не может быть записан.");
			Отказ = Истина;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			Сообщить("Не задан договор контрагента."+Символы.ПС+"Элемент справочника не может быть записан.");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
// рк+ 2013.04.15 САС						
	Если НЕ Многосторонний Тогда	
		Если СтороныПоКонтракту.Количество() <> 1 Тогда
			СтороныПоКонтракту.Очистить();
			НовСтрока = СтороныПоКонтракту.Добавить();
			НовСтрока.Контрагент = Контрагент;
			НовСтрока.Страна = Контрагент.РЭЙ_Страна;
			Новстрока.Основной = ИСТИНА;
		КонецЕсли;
	КонецЕсли;
// рк- 2013.04.15 САС
КонецПроцедуры

Функция СформироватьНаименованиеПоНомеруИДате(НомерК, ДатаК, ПредметК,БезНомераК) Экспорт

	Возврат "Конт. "+
	 		//рк+
			//?(ПустаяСтрока(НомерК), "б/н", СокрЛП(НомерК))+ 
			?(БезНомераК,"б/н",?(ПустаяСтрока(НомерК), "","№"+СокрЛП(НомерК)))+ 
			//рк-
			?(ЗначениеЗаполнено(ДатаК)," от "+Формат(ДатаК,"ДФ=dd.MM.yyyy"), "")+
			?(ПустаяСтрока(ПредметК),""," ("+ПредметК+")");
			
КонецФункции // СформироватьНаименованиеПоНомеруИДате()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЕстьСчетВБанкеРезиденте = Ложь;
	
	Для Каждого СтрокаСчета Из БанковскиеСчета Цикл
		
		Если НЕ СтрокаСчета.БанковскийСчет.Банк.РЭЙ_НеЯвляетсяРезидентом Тогда
			
			ЕстьСчетВБанкеРезиденте = Истина;
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЕстьСчетВБанкеРезиденте Тогда
		
		Сообщение = Новый СообщениеПользователю;
		
		Сообщение.Текст = "Укажите банковский счет в банке УК";
		Сообщение.Поле 	= "БанковскиеСчета";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
		Возврат;
		
	КонецЕсли;
	
	Если Автопролонгация Тогда
		ПроверяемыеРеквизиты.Добавить("МинимальноеКоличествоДнейДляУведомленияОПрекращенииДействияКонтракта");
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения)= Тип("Структура") Тогда 
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьДатуЗавершенияОбязательствПоКонтракту() Экспорт
	Если ЗначениеЗаполнено(КонтрактДатаОкончания) Тогда
		ДатаЗавершенияОбязательствПоКонтракту = КонтрактДатаОкончания + (КоличествоДней + КоличествоДнейДополнительное) * 24*60*60;
	Иначе
		ДатаЗавершенияОбязательствПоКонтракту = Дата("00010101");
	КонецЕсли;
КонецПроцедуры

Скопирован=Ложь;
