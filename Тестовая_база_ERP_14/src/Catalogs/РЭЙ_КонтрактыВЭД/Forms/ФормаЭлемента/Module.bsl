
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Или Не ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
			ОтказОтОткрытия = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	МакетНастройкиЭлементов = Справочники.РЭЙ_КонтрактыВЭД.ПолучитьМакет("НастройкиЭлементов_2018");
	
	РасчетыВУсловныхЕдиницах = РЭЙ_Универсализация.ПолучитьФлагРасчетыВУсловныхЕдиницах(Объект.ДоговорКонтрагента);
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Если РасчетыВУсловныхЕдиницах И НЕ Объект.ВалютнаяОговорка Тогда
			Объект.ВалютнаяОговорка = Истина;
		КонецЕсли;
		
		Объект.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.ОжидаемыйСрок;
		ЗаполнениеНаименованияДоговора();
		ЗаполнитьДатуЗавершенияОбязательствПоКонтракту();
		
		Если Не ЗначениеЗаполнено(Объект.ВидСтартовойДатыОжидаемогоСрока) Тогда
			Объект.ВидСтартовойДатыОжидаемогоСрока = Перечисления.РЭЙ_ВидыСтартовыхДатОжидаемогоСрока.ДатаДокумента;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.КонтрактНомер)Тогда
			БезНомера = Истина;
		КонецЕсли;
	КонецЕсли;
		
	СтароеЗначение_КонтрактНомер = Объект.КонтрактНомер;
	СтароеЗначение_КонтрактДатаПодписания = Объект.КонтрактДатаПодписания;
	СтароеЗначение_КонтрактПредмет = Объект.КонтрактПредмет;
	СтароеЗначение_КонтрактПредметАнгл = Объект.КонтрактПредметАнгл;
	СтароеЗначение_БезНомера = БезНомера;
	
	УстановитьОтображениеВсехЭлементов();
	
	СформироватьПредставлениеВидаДокумента();
	
	ДобавитьУсловноеОформление_БанковскиеСчета();
	ДобавитьУсловноеОформление_ДопСоглашения();
	ДобавитьУсловноеОформление_СтороныПоКонтракту();
	
	Если Объект.НеДействует Тогда
		Элементы.КартинкаСтатус.Картинка = БиблиотекаКартинок.РЭЙ_СветофорКрасный;
	Иначе
		Элементы.КартинкаСтатус.Картинка = БиблиотекаКартинок.РЭЙ_СветофорЗеленый;
	КонецЕсли;
	
	ПрочитатьНаборыЗаписей();
	ЗаполнитьСписокДосье();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ОтказОтОткрытия Тогда
		ПоказатьПредупреждение(, "Контракт ВЭД может быть введен только из формы договора контрагента.");
		Отказ = Истина;	
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененСправочник_РЭЙ_Файлы" Тогда
		Если Элементы.СписокДосье.ТекущаяСтрока <> Неопределено Тогда
			текСсылка = СписокДосье.НайтиПоИдентификатору(Элементы.СписокДосье.ТекущаяСтрока).Ссылка;
		Иначе
			текСсылка = Неопределено;
		КонецЕсли;
		
		ЗаполнитьСписокДосье();
		Если текСсылка <> Неопределено Тогда
			СтрокиДосье = СписокДосье.НайтиСтроки(Новый Структура("Ссылка", текСсылка));
			Если СтрокиДосье.Количество() > 0 Тогда
				Элементы.СписокДосье.ТекущаяСтрока = СтрокиДосье[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьТаблицуПлатежи();
	ЗаполнитьТаблицуПоставки();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПустаяСтрока(Объект.КонтрактНомер) И НЕ БезНомера Тогда
		ТекстВопроса = "Номер не указан. Контракт ВЭД будет зарегистрирован без номера.";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ПередЗаписью_КонтрактБезНомера", ЭтотОбъект, ПараметрыЗаписи);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	Если Объект.КонтрактСумма = 0 И НЕ Объект.КонтрактБезСуммы Тогда 
		ТекстВопроса = "Сумма контракта не указана. Контракт ВЭД будет зарегистрирован без суммы.";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ПередЗаписью_КонтрактБезСуммы", ЭтотОбъект, ПараметрыЗаписи);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью_КонтрактБезНомера(Результат, Параметры) Экспорт 
	Если Результат = КодВозвратаДиалога.ОК Тогда
		БезНомера = Истина;
		БезНомераПриИзменении(Элементы.БезНомера);
		Записать(Параметры);
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
Процедура ПередЗаписью_КонтрактБезСуммы(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Объект.КонтрактБезСуммы = Истина;
		КонтрактБезСуммыПриИзменении(Элементы.КонтрактБезСуммы);
		Записать(Параметры);
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	НаборЗаписей = РеквизитФормыВЗначение("ДопСоглашения");
	НаборЗаписей.Записать();
	
	НаборЗаписей = РеквизитФормыВЗначение("СписокГрафикФинансирования");
	НаборЗаписей.Записать();
	
	НаборЗаписей = РеквизитФормыВЗначение("СписокГрафикПогашения");
	НаборЗаписей.Записать();
	
	НаборЗаписей = РеквизитФормыВЗначение("СписокРазрешенияВалютногоКонтроля");
	НаборЗаписей.Записать();
	
	НаборЗаписей = РеквизитФормыВЗначение("СписокКредитныйСиндикат");
	НаборЗаписей.Записать();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПрочитатьНаборыЗаписей();
	ЗаполнитьСписокДосье();
	
	РЭЙ_ЗадачиСервер.ДобавитьЗадачуКонтрактВЭД(ТекущийОбъект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УстановитьОтображениеВсехЭлементов();
	
	Оповестить("РЭЙ_ОбновитьФормуЗадач");
	Оповестить("РЭЙ_ЗаписанЭлементКонтрактыВЭД");
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура Файлы(Команда)
	Если Параметры.Ключ.Пустая() Тогда
		ТекстВопроса = "Элемент еще не записан. Записать?";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ФайлыВопросОЗаписи", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ОткрытьФормуФайлы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыВопросОЗаписи(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Если Записать() Тогда
			ОткрытьФормуФайлы();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуФайлы()
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОбъектВладелец", Объект.Ссылка);
	ОткрытьФорму("Справочник.РЭЙ_Файлы.ФормаСписка", ПараметрыОткрытия,, Новый УникальныйИдентификатор(),,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапки

&НаКлиенте
Процедура КонтрактНомерПриИзменении(Элемент)
	ЗаполнениеНаименованияДоговора();
КонецПроцедуры

&НаКлиенте
Процедура ПаспортСделкиНомерПаспортаСделкиОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ПаспортСделки) Тогда
		ПоказатьЗначение(, Объект.ПаспортСделки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонтрактСуммаПриИзменении(Элемент)
	ПроверитьНеобходимостьСозданияЗадачВЭД();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактДатаПодписанияПриИзменении(Элемент)
	КонтрактДатаПодписанияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрактДатаПодписанияПриИзмененииНаСервере()
	ЗаполнениеНаименованияДоговора();
	ПроверитьНеобходимостьСозданияЗадачВЭД();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактДатаОкончанияПриИзменении(Элемент)
	ЗаполнитьДатуЗавершенияОбязательствПоКонтракту();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактПредметПриИзменении(Элемент)
	ЗаполнениеНаименованияДоговора();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактПредметАнглПриИзменении(Элемент)
	ЗаполнениеНаименованияДоговора();
КонецПроцедуры

&НаКлиенте
Процедура МногостороннийПриИзменении(Элемент)
	МногостороннийПриИзмененииНаСервере();	
	
	Если Объект.Многосторонний Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_СтороныПоКонтракту;
		ЭтаФорма.ТекущийЭлемент = Элементы.Страницы;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура МногостороннийПриИзмененииНаСервере()
	УстановитьОтображение_Страница_СтороныПоКонтракту();	
	
	Если Объект.Многосторонний Тогда
		Отбор = Новый Структура("Контрагент", Объект.Контрагент);
		СтрокиПоКонтрагенту = Объект.СтороныПоКонтракту.НайтиСтроки(Отбор);
		Если СтрокиПоКонтрагенту.Количество() = 0 Тогда
			НоваяСтрока = Объект.СтороныПоКонтракту.Добавить();
			НоваяСтрока.Контрагент 	= Объект.Контрагент;
			НоваяСтрока.Страна 		= Объект.Контрагент.РЭЙ_Страна;
			НоваяСтрока.Основной 	= Истина;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КредитныйДоговорПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ВидКонтрактаВЭД) Тогда
		
		СписокВидовКонтрактов = ПолучитьСписокВидовКонтрактовВЭД();
		
		Если СписокВидовКонтрактов.НайтиПоЗначению(Объект.ВидКонтрактаВЭД) = Неопределено Тогда
			ТекстВопроса = 
			"При %1 флаге ""Кредитный"" вид контракта ВЭД ""%2"" не будет соответствовать виду договора ""%3"".
			|Перечень значений для вида контракта ВЭД будет очищен! 
			|Если Вы уверены в Ваших действиях, приведите значение вида контракта ВЭД в соответствие с видом договора. Продолжить?";
			ВидДоговора = РЭЙ_СлужебныйСервер.ПолучитьЗначениеРеквизита(Объект.ДоговорКонтрагента, "ВидДоговора");
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, ?(Объект.КредитныйДоговор, "установленном", "снятом"), Объект.ВидКонтрактаВЭД, ВидДоговора);
			
			ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("КредитныйДоговорПриИзменении_Завершение", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	КредитныйДоговорПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КредитныйДоговорПриИзменении_Завершение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда 
		Объект.ВидКонтрактаВЭД = Неопределено;
		ВидКонтрактаВЭДПриИзмененииНаСервере();
		КредитныйДоговорПриИзмененииНаСервере();
	Иначе
		Объект.КредитныйДоговор = НЕ Объект.КредитныйДоговор;
		Возврат;
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура КредитныйДоговорПриИзмененииНаСервере()
	// TODO Вид договора
	//Если Объект.КредитныйДоговор Тогда
	//	Если Объект.РамочныйКонтракт Тогда
	//		Объект.РамочныйКонтракт = Ложь;
	//		РамочныйКонтрактПриИзмененииНаСервере();
	//	КонецЕсли;
	//КонецЕсли;
	//УстановитьОтображение_РамочныйКонтракт();
	//
	//Если Объект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее И Объект.ПериодическиеФиксированныеПлатежи Тогда
	//	Объект.ПериодическиеФиксированныеПлатежи = Ложь;
	//	ПериодическиеФиксированныеПлатежиПриИзмененииНаСервере();
	//КонецЕсли;
	//
	//УстановитьОтображение_КоличествоДней();
	//УстановитьОтображение_ОтсрочкаПлатежаПредоплаты();
	//УстановитьОтображение_ПериодическиеФиксированныеПлатежи();
	//УстановитьОтображение_Страница_Кредит();
	//УстановитьОтображение_Страница_Поставки();
КонецПроцедуры

&НаКлиенте
Процедура БезНомераПриИзменении(Элемент)
	БезНомераПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура БезНомераПриИзмененииНаСервере()
	Если БезНомера И ЗначениеЗаполнено(Объект.КонтрактНомер) Тогда
		Объект.КонтрактНомер = "";
	КонецЕсли;
	ЗаполнениеНаименованияДоговора();
	УстановитьОтображение_КонтрактНомер();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактБезСуммыПриИзменении(Элемент)
	КонтрактБезСуммыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрактБезСуммыПриИзмененииНаСервере()
	Если Объект.КонтрактБезСуммы Тогда
		Объект.НеЯвляетсяОбъектомВалютногоКонтроля = Ложь;
	КонецЕсли;
	Если Объект.КонтрактБезСуммы и ЗначениеЗаполнено(Объект.КонтрактСумма) Тогда
		Объект.КонтрактСумма = 0;  		
	КонецЕсли;
	
	УстановитьОтображение_КонтрактСумма();
	УстановитьОтображение_НеЯвляетсяОбъектомВалютногоКонтроля();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_ВЭД

&НаКлиенте
Процедура ВидКонтрактаВЭДПриИзменении(Элемент)
	ВидКонтрактаВЭДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВидКонтрактаВЭДПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.ВидКонтрактаВЭД) Тогда
		СписокВидовКонтрактов = ПолучитьСписокВидовКонтрактовВЭД();
		Если СписокВидовКонтрактов.НайтиПоЗначению(Объект.ВидКонтрактаВЭД) = Неопределено Тогда
			Объект.ВидКонтрактаВЭД = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	//Импорт
	ИмпортНовоеЗначение = ПолучитьЗначениеНастройкиЭлемента("Импорт_Значение");
	Если Объект.Импорт <> ИмпортНовоеЗначение Тогда
		Объект.Импорт = ИмпортНовоеЗначение;
		ИмпортПриИзмененииНаСервере();
	КонецЕсли;
	
	//Экспорт
	ЭкспортНовоеЗначение = ПолучитьЗначениеНастройкиЭлемента("Экспорт_Значение");
	Если Объект.Экспорт <> ЭкспортНовоеЗначение Тогда
		Объект.Экспорт = ЭкспортНовоеЗначение;
		ЭкспортПриИзмененииНаСервере();
	КонецЕсли;
	
	//Контракт товарный
	КонтрактТоварныйНовоеЗначение = ПолучитьЗначениеНастройкиЭлемента("КонтрактТоварный_Значение");
	Если Объект.КонтрактТоварный <> КонтрактТоварныйНовоеЗначение Тогда
		Объект.КонтрактТоварный = КонтрактТоварныйНовоеЗначение;
		КонтрактТоварныйПриИзмененииНаСервере();
	КонецЕсли;
	
	Если Объект.ВидКонтрактаВЭД <> ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыКонтрактовВЭД.СмешаннаяСделка") Тогда
		Если ПолучитьМассивКодовПД().Найти(Объект.ВидДокумента) = Неопределено Тогда
			Объект.ВидДокумента = Неопределено;
			ВидДокументаПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
	
	Объект.ПредоставлениеЗайма = ПолучитьЗначениеНастройкиЭлемента("ПредоставлениеЗайма_Значение");
	Объект.ПривлечениеКредитаЗайма = ПолучитьЗначениеНастройкиЭлемента("ПривлечениеКредитаЗайма_Значение");
	
	УстановитьОтображение_Флаг_Импорт();
	УстановитьОтображение_Флаг_Экспорт();
	УстановитьОтображение_Флаг_КонтрактТоварный();
	УстановитьОтображение_Флаг_ПредоставлениеЗайма();
	УстановитьОтображение_Флаг_ПривлечениеКредитаЗайма();	
КонецПроцедуры

&НаКлиенте
Процедура ВидКонтрактаВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = ПолучитьСписокВидовКонтрактовВЭД();
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ВидКонтрактаВЭДНачалоВыбора_Завершение", ЭтотОбъект);
	ПоказатьВыборИзСписка(ОписаниеОповещенияОЗакрытии, СписокВыбора, Элемент); 
КонецПроцедуры

&НаКлиенте
Процедура ВидКонтрактаВЭДНачалоВыбора_Завершение(Результат, ДополниетельныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда 
		Модифицированность = Истина;
		Объект.ВидКонтрактаВЭД = Результат.Значение;
		ВидКонтрактаВЭДПриИзмененииНаСервере();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ВидДокументаПриИзмененииНаСервере()
	СформироватьПредставлениеВидаДокумента();
	
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		Объект.ПериодическиеФиксированныеПлатежи = Объект.ВидДокумента.ПериодическиеФиксированныеПлатежи;
		ПериодическиеФиксированныеПлатежиПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещенияОВводе = Новый ОписаниеОповещения("ВидДокументаНачалоВыбора_Завершение", ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("ТекущаяСтрока", Объект.ВидДокумента);
	Если Объект.ВидКонтрактаВЭД <> ПредопределенноеЗначение("Перечисление.РЭЙ_ВидыКонтрактовВЭД.СмешаннаяСделка") Тогда
		ПараметрыОткрытия.Вставить("Отбор", Новый Структура("Код", ПолучитьМассивКодовПД()));
	КонецЕсли;
	ОткрытьФорму("Справочник.РЭЙ_ВидыПодтверждающихДокументов.ФормаВыбора", ПараметрыОткрытия, ЭтотОбъект,,,, ОписаниеОповещенияОВводе, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаНачалоВыбора_Завершение(Результат, ДополнительныеПараметры) Экспорт 
	Если Результат <> Неопределено Тогда
		Объект.ВидДокумента = Результат;
		Модифицированность = Истина;
		
		ВидДокументаПриИзмененииНаСервере();
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ВидДокументаОчистка(Элемент, СтандартнаяОбработка)
	Объект.ВидДокумента = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ОтсрочкаПлатежаПредоплатыПриИзменении(Элемент)
	ОтсрочкаПлатежаПредоплатыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтсрочкаПлатежаПредоплатыПриИзмененииНаСервере()
	Если Объект.ОтсрочкаПлатежаПредоплаты <> Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.КоличествоКалендарныхДнейПоКонтракту Или Не Объект.Импорт Тогда 
		Объект.КоличествоДнейДляВозвратаАвансаПоИмпортномуКонтракту = 0;
	КонецЕсли;
	
	УстановитьОтображение_КоличествоДней();
КонецПроцедуры

&НаКлиенте
Процедура ОтсрочкаПлатежаПредоплатыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОтсрочкаПлатежаПредоплаты.ОжидаемыйСрок"));
	Если Объект.Импорт Тогда
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.РЭЙ_ОтсрочкаПлатежаПредоплаты.КоличествоКалендарныхДнейПоКонтракту"));
	КонецЕсли;
	
	ДанныеВыбора = СписокВыбора;
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейПриИзменении(Элемент)
	Если Объект.КоличествоДней > 1096 Тогда
		ПоказатьПредупреждение(, "Количество календарных дней не может превышать число 1096 (3 года).", 10);
		Объект.КоличествоДней = 0;
	КонецЕсли;
	
	ЗаполнитьДатуЗавершенияОбязательствПоКонтракту();
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейДополнительноеПриИзменении(Элемент)
	Если Объект.КоличествоДнейДополнительное > 366 Тогда
		ПоказатьПредупреждение(, "Количество календарных дней не может превышать число 366 (1 год).", 10);
		Объект.КоличествоДнейДополнительное = 0;
	КонецЕсли;
	
	ЗаполнитьДатуЗавершенияОбязательствПоКонтракту();
КонецПроцедуры

&НаКлиенте
Процедура ВидСтартовойДатыОжидаемогоСрокаПриИзменении(Элемент)
	ВидСтартовойДатыОжидаемогоСрокаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВидСтартовойДатыОжидаемогоСрокаПриИзмененииНаСервере()
	УстановитьОтображение_ДатаПоставкиОтгрузки();
	УстановитьОтображение_ДопСоглашенияДатаПоставкиОтгрузки();
КонецПроцедуры

&НаКлиенте
Процедура ИмпортПриИзменении(Элемент)
	ИмпортПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИмпортПриИзмененииНаСервере()
	Если Не Объект.Импорт Тогда 
		Если Объект.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.КоличествоКалендарныхДнейПоКонтракту Тогда
			Объект.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.ОжидаемыйСрок;
			ОтсрочкаПлатежаПредоплатыПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
	
	УстановитьОтображение_Поставки();
	УстановитьОтображение_ВидСтартовойДатыОжидаемогоСрока();
	УстановитьОтображение_ДатаПоставкиОтгрузки();
	УстановитьОтображение_ДопСоглашенияДатаПоставкиОтгрузки();
КонецПроцедуры

&НаКлиенте
Процедура ЭкспортПриИзменении(Элемент)
	ЭкспортПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЭкспортПриИзмененииНаСервере()
	УстановитьОтображение_ВидСтартовойДатыОжидаемогоСрока();
	УстановитьОтображение_ДатаПоставкиОтгрузки();
	УстановитьОтображение_ДопСоглашенияДатаПоставкиОтгрузки();
КонецПроцедуры

&НаКлиенте
Процедура КонтрактТоварныйПриИзменении(Элемент)
	КонтрактТоварныйПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрактТоварныйПриИзмененииНаСервере()
	УстановитьОтображение_Инкотермс();
КонецПроцедуры

&НаКлиенте
Процедура ПериодическиеФиксированныеПлатежиПриИзменении(Элемент)
	ПериодическиеФиксированныеПлатежиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПериодическиеФиксированныеПлатежиПриИзмененииНаСервере()
	УстановитьОтображение_КодПериодичностиФиксированныхПлатежей();
	УстановитьОтображение_ПериодФиксированныхПлатежей();
КонецПроцедуры

&НаКлиенте
Процедура ПериодФиксированныхПлатежейПриИзменении(Элемент)
	Если Объект.ПериодФиксированныхПлатежей > 366 Тогда
		ПоказатьПредупреждение(, "Количество календарных дней не может превышать число 366 (1 год).", 10);
		Объект.ПериодФиксированныхПлатежей = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РамочныйКонтрактПриИзменении(Элемент)
	РамочныйКонтрактПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РамочныйКонтрактПриИзмененииНаСервере()
	Если Объект.РамочныйКонтракт Тогда
		// TO FIX
		//ЗагрузкаДопСоглашений();
		УстановитьОтображение_РамочныйКонтракт();
	КонецЕсли;
	
	УстановитьОтображение_КоличествоДней();
	УстановитьОтображение_Страница_ДополнительныеСоглашения();
	
	УстановитьОтображение_ДатаПоставкиОтгрузки();
	УстановитьОтображение_ДопСоглашенияДатаПоставкиОтгрузки();

	Если Объект.РамочныйКонтракт Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_ДополнительныеСоглашения;
		ЭтаФорма.ТекущийЭлемент = Элементы.Страницы;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АвтопролонгацияПриИзменении(Элемент)
	Если Не Объект.Автопролонгация Тогда
		Объект.МинимальноеКоличествоДнейДляУведомленияОПрекращенииДействияКонтракта = 0;
	КонецЕсли;
	
	УстановитьОтображение_МинимальноеКоличествоДнейДляУведомленияОПрекращенииДействияКонтракта();
КонецПроцедуры

&НаКлиенте
Процедура РазрешенияВалКонтроляПриИзменении(Элемент)
	РазрешенияВалКонтроляПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РазрешенияВалКонтроляПриИзмененииНаСервере()
	УстановитьОтображение_Страница_РазрешенияВалютногоКонтроля();
КонецПроцедуры

&НаКлиенте
Процедура СписокРазрешенияВалютногоКонтроляПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Параметры.Ключ.Пустая() Тогда
		
		Отказ = Истина;
		
		ТекстВопроса = "Элемент еще не записан. Записать?";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ЗаписьТекущегоЭлементаПриДобавленииСтроки", ЭтотОбъект, Элементы.СписокРазрешенияВалютногоКонтроля);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);

	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокРазрешенияВалютногоКонтроляПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		Элемент.ТекущиеДанные.Объект = Объект.Ссылка;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_БанковскиеСчета

&НаКлиенте
Процедура БанковскиеСчета_СделатьОсновным(Команда)
	ТекущиеДанные = Элементы.БанковскиеСчета.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.БанковскийСчет) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Основной Тогда
		ТекущиеДанные.Основной = Ложь;
	Иначе
		ТекущиеДанные.Основной = Истина;
		Для Каждого ТекСтрока Из Объект.БанковскиеСчета Цикл
			Если ТекСтрока <> ТекущиеДанные И ТекСтрока.Основной Тогда
				ТекСтрока.Основной = Ложь;
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_Кредит_Условия

&НаКлиенте
Процедура ПроцентныеПлатежиПоКредитамВЭДПриИзменении(Элемент)
	ПроцентныеПлатежиПоКредитамВЭДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроцентныеПлатежиПоКредитамВЭДПриИзмененииНаСервере()
	УстановитьОтображение_ПроцентныеПлатежиПоКредитамВЭД();
КонецПроцедуры

&НаКлиенте
Процедура КредитныйСиндикатПриИзменении(Элемент)
	Если Не Объект.КредитныйСиндикат Тогда
		Если СписокКредитныйСиндикат.Количество() Тогда
			ТекстВопроса = "Данные о контрагентах-нерезидентах, являющихся кредиторами (займодателями) будут утрачены. Продолжить?";
			ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("КредитныйСиндикатПриИзменении_Завершение", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	КредитныйСиндикатПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КредитныйСиндикатПриИзменении_Завершение(Результат, Параметры) Экспорт 
	Если Результат = КодВозвратаДиалога.Да Тогда 
		СписокКредитныйСиндикат.Очистить();
		КредитныйСиндикатПриИзмененииНаСервере();
	Иначе
		Объект.КредитныйСиндикат = Истина;
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура КредитныйСиндикатПриИзмененииНаСервере(ОчиститьСписокКредитныйСиндикат = Ложь)
	 УстановитьОтображение_Страница_Кредит_Синдикат();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_Кредит_Финансирование

&НаКлиенте
Процедура СписокГрафикФинансированияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Параметры.Ключ.Пустая() Тогда
		Отказ = Истина;
		
		ТекстВопроса = "Элемент еще не записан. Записать?";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ЗаписьТекущегоЭлементаПриДобавленииСтроки", ЭтотОбъект, Элементы.СписокГрафикФинансирования);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокГрафикФинансированияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Договор = Объект.Ссылка;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_Кредит_Погашение

&НаКлиенте
Процедура СписокГрафикПогашенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Параметры.Ключ.Пустая() Тогда
		Отказ = Истина;
		
		ТекстВопроса = "Элемент еще не записан. Записать?";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ЗаписьТекущегоЭлементаПриДобавленииСтроки", ЭтотОбъект, Элементы.СписокГрафикПогашения);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокГрафикПогашенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда 
		Элемент.ТекущиеДанные.Договор = Объект.Ссылка;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_Кредит_Синдикат

&НаКлиенте
Процедура СписокКредитныйСиндикатПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Параметры.Ключ.Пустая() Тогда
		Отказ = Истина;
		
		ТекстВопроса = "Элемент еще не записан. Записать?";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ЗаписьТекущегоЭлементаПриДобавленииСтроки", ЭтотОбъект, Элементы.СписокКредитныйСиндикат);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокКредитныйСиндикатПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда 
		Элемент.ТекущиеДанные.Договор = Объект.Ссылка;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокКредитныйСиндикатКонтрагентПриИзменении(Элемент)
	ТекущиеДанные = Элементы.СписокКредитныйСиндикат.ТекущиеДанные;
	ТекущиеДанные.СтранаКонтрагента = РЭЙ_СлужебныйСервер.ПолучитьЗначениеРеквизита(ТекущиеДанные.Контрагент, "РЭЙ_Страна");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_Стороны

&НаКлиенте
Процедура СтороныПоКонтрактуПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Копирование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтороныПоКонтрактуПередНачаломИзменения(Элемент, Отказ)
	текКонтрагент = Элементы.СтороныПоКонтракту.ТекущиеДанные.Контрагент;
	Если текКонтрагент = Объект.Контрагент Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтороныПоКонтрактуПередУдалением(Элемент, Отказ)
	текКонтрагент = Элементы.СтороныПоКонтракту.ТекущиеДанные.Контрагент;
	Если текКонтрагент = Объект.Контрагент Тогда
		ПоказатьПредупреждение(, "Контрагент " + текКонтрагент + " является основным, удаление строки невозможно!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтороныПоКонтрактуКонтрагентПриИзменении(Элемент)
	ТекущиеДанные = Элементы.СтороныПоКонтракту.ТекущиеДанные;
	НайденныеСтроки = Объект.СтороныПоКонтракту.НайтиСтроки(Новый Структура("Контрагент", ТекущиеДанные.Контрагент));
	Если НайденныеСтроки.Количество() > 1 Тогда
		ПоказатьПредупреждение(, "Контрагент " + ТекущиеДанные.Контрагент + " уже есть в списке!");
		ТекущиеДанные.Контрагент = Неопределено;
	КонецЕсли;
	ТекущиеДанные.Страна = РЭЙ_СлужебныйСервер.ПолучитьЗначениеРеквизита(ТекущиеДанные.Контрагент, "РЭЙ_Страна");
КонецПроцедуры

&НаКлиенте
Процедура СтороныПоКонтрактуКонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
		
	ФормаВыбора = ПолучитьФорму("Справочник.Контрагенты.ФормаВыбора",, Элемент);
	
	Отбор = ФормаВыбора.Список.Отбор.Элементы;
	
	ЭлементОтбора = Отбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("РЭЙ_НеЯвляетсяРезидентом");
	ЭлементОтбора.ПравоеЗначение 	= Истина;
	
	Если Объект.СтороныПоКонтракту.Количество() > 0 Тогда
		СписокКонтрагентов = Новый Массив();
		Для Каждого СтрокаТЧ Из Объект.СтороныПоКонтракту Цикл
			Если ЗначениеЗаполнено(СтрокаТЧ.Контрагент) Тогда
				СписокКонтрагентов.Добавить(СтрокаТЧ.Контрагент);
			КонецЕсли;
		КонецЦикла;
		ЭлементОтбора = Отбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеВСписке;
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ПравоеЗначение 	= СписокКонтрагентов;
	КонецЕсли;
	
	ФормаВыбора.Открыть();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_ДополнительныеСоглашения

&НаКлиенте
Процедура ДопСоглашенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Параметры.Ключ.Пустая() Тогда
		ТекстВопроса = "Элемент еще не записан. Записать?";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ЗаписьТекущегоЭлементаПриДобавленииСтроки", ЭтотОбъект, Элементы.ДопСоглашения);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДопСоглашенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда 
		Элемент.ТекущиеДанные.Договор = Объект.Ссылка;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДопСоглашенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	УстановитьОтображение_РамочныйКонтракт();
КонецПроцедуры

&НаКлиенте
Процедура ДопСоглашенияПослеУдаления(Элемент)
	УстановитьОтображение_РамочныйКонтракт();
КонецПроцедуры

&НаКлиенте
Процедура ДопСоглашенияДопСоглашениеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ДопСоглашения.ТекущиеДанные;
	ТекущиеДанные.Валюта = РЭЙ_СлужебныйСервер.ПолучитьЗначениеРеквизита(ТекущиеДанные.ДопСоглашение, "ВалютаВзаиморасчетов");
КонецПроцедуры

&НаКлиенте
Процедура ДопСоглашенияДопСоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Отбор = Новый Структура;
	Если Не Объект.Многосторонний Тогда 
		Отбор.Вставить("Владелец", Объект.Контрагент);
	Иначе
		Владельцы = Новый Массив;
		Для Каждого СтрокаСтороныПоКонтракту Из Объект.СтороныПоКонтракту Цикл
			Владельцы.Добавить(СтрокаСтороныПоКонтракту.Контрагент);
		КонецЦикла;	
		Отбор.Вставить("Владелец", Владельцы);
	КонецЕсли;	
	Отбор.Вставить("Организация", Объект.Организация);
	
	ПараметрыОтрытия = Новый Структура;
	ПараметрыОтрытия.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаВыбора", ПараметрыОтрытия, Элемент); 
КонецПроцедуры

&НаКлиенте
Процедура ДопСоглашенияПродлениеКонтрактаПриИзменении(Элемент)
	Если Элементы.ДопСоглашения.ТекущиеДанные.ПродлениеКонтракта = Ложь Тогда
		Элементы.ДопСоглашения.ТекущиеДанные.ДатаОкончанияКонтракта = Дата(1,1,1);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_Платежи

&НаКлиенте
Процедура ПлатежиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение(, Элемент.ТекущиеДанные.РасчетныйДокумент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_Поставки

&НаКлиенте
Процедура ПоставкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение(, Элемент.ТекущиеДанные.ПодтверждающийДокумент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_Досье

&НаКлиенте
Процедура СписокДосьеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	текСсылка = СписокДосье.НайтиПоИдентификатору(ВыбраннаяСтрока).Ссылка;
	Если Поле.Имя = "СписокДосьеФайлы" Тогда
		Если ТипЗнч(текСсылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("ВладелецФайла", текСсылка);
			ОткрытьФорму("Справочник.ДоговорыКонтрагентовПрисоединенныеФайлы.ФормаСписка", ПараметрыОткрытия,, Новый УникальныйИдентификатор());
		Иначе
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("ОбъектВладелец", текСсылка);
			ОткрытьФорму("Справочник.РЭЙ_Файлы.ФормаСписка", ПараметрыОткрытия,, Новый УникальныйИдентификатор());
		КонецЕсли;
	Иначе
		ПоказатьЗначение(, текСсылка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Отображение

&НаСервере
Процедура ДобавитьУсловноеОформление_БанковскиеСчета()
	// Выделить жирным основной счет
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("БанковскиеСчета");
	
	ПолеОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.БанковскиеСчета.Основной");
    ПолеОтбора.ПравоеЗначение = Истина;
    ПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,, Истина));
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформление_ДопСоглашения()
	// Доступность колонки "Дата окончания контракта"
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ДопСоглашенияДатаОкончанияКонтракта");
	
	ПолеОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДопСоглашения.ПродлениеКонтракта");
    ПолеОтбора.ПравоеЗначение = Ложь;
    ПолеОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформление_СтороныПоКонтракту()
	// Выделить жирным основного контрагента
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СтороныПоКонтракту");
	
	ПолеОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.СтороныПоКонтракту.Основной");
    ПолеОтбора.ПравоеЗначение = Истина;
    ПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,, Истина));
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеВсехЭлементов()
	УстановитьОтображение_Инкотермс();
	УстановитьОтображение_КоличествоДней();
	УстановитьОтображение_КонтрактНомер();
	УстановитьОтображение_КонтрактСумма();
	УстановитьОтображение_КредитныйДоговор();
	УстановитьОтображение_МинимальноеКоличествоДнейДляУведомленияОПрекращенииДействияКонтракта();
	УстановитьОтображение_НеЯвляетсяОбъектомВалютногоКонтроля();
	УстановитьОтображение_ОтсрочкаПлатежаПредоплаты();
	УстановитьОтображение_ВидСтартовойДатыОжидаемогоСрока();
	УстановитьОтображение_ДатаПоставкиОтгрузки();
	УстановитьОтображение_ДопСоглашенияДатаПоставкиОтгрузки();
	УстановитьОтображение_ПериодическиеФиксированныеПлатежи();
	УстановитьОтображение_КодПериодичностиФиксированныхПлатежей();
	УстановитьОтображение_ПериодФиксированныхПлатежей();
	УстановитьОтображение_Поставки();
	УстановитьОтображение_ПроцентныеПлатежиПоКредитамВЭД();
	УстановитьОтображение_РамочныйКонтракт();
	УстановитьОтображение_Страница_Досье();
	УстановитьОтображение_Страница_ДополнительныеСоглашения();
	УстановитьОтображение_Страница_Кредит();
	УстановитьОтображение_Страница_Кредит_Синдикат();
	УстановитьОтображение_Страница_Платежи();
	УстановитьОтображение_Страница_Поставки();
	УстановитьОтображение_Страница_РазрешенияВалютногоКонтроля();
	УстановитьОтображение_Страница_СтороныПоКонтракту();
	УстановитьОтображение_Флаг_Импорт();
	УстановитьОтображение_Флаг_Экспорт();
	УстановитьОтображение_Флаг_КонтрактТоварный();
	УстановитьОтображение_Флаг_ПредоставлениеЗайма();
	УстановитьОтображение_Флаг_ПривлечениеКредитаЗайма();
КонецПроцедуры	

&НаСервере
Процедура УстановитьОтображение_ВидСтартовойДатыОжидаемогоСрока()
	Если Объект.Импорт И Не Объект.Экспорт Тогда
		ТекстЗаголовка = "Даты поставки";
	ИначеЕсли Объект.Экспорт И Не Объект.Импорт Тогда
		ТекстЗаголовка = "Даты отгрузки";
	Иначе
		ТекстЗаголовка = "Дата поставки/отгрузки";
	КонецЕсли;
	ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, " ", Символы.НПП);
	
	Элементы.ВидСтартовойДатыОжидаемогоСрока.СписокВыбора.НайтиПоЗначению(Перечисления.РЭЙ_ВидыСтартовыхДатОжидаемогоСрока.ДатаПоставкиОтгрузки).Представление = ТекстЗаголовка;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ДатаПоставкиОтгрузки()
	Если Объект.ВидСтартовойДатыОжидаемогоСрока = Перечисления.РЭЙ_ВидыСтартовыхДатОжидаемогоСрока.ДатаПоставкиОтгрузки И Объект.РамочныйКонтракт = Ложь Тогда
		Элементы.ДатаПоставкиОтгрузки.Видимость = Истина;
		
		Если Объект.Импорт И Не Объект.Экспорт Тогда
			ТекстЗаголовка = "Дата поставки";
		ИначеЕсли Объект.Экспорт И Не Объект.Импорт Тогда
			ТекстЗаголовка = "Дата отгрузки";
		Иначе
			ТекстЗаголовка = "Дата поставки/отгрузки";
		КонецЕсли;
		ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, " ", Символы.НПП);
		
		Элементы.ДатаПоставкиОтгрузки.Заголовок = ТекстЗаголовка;
	Иначе
		Элементы.ДатаПоставкиОтгрузки.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ДопСоглашенияДатаПоставкиОтгрузки()
	Если Объект.ВидСтартовойДатыОжидаемогоСрока = Перечисления.РЭЙ_ВидыСтартовыхДатОжидаемогоСрока.ДатаПоставкиОтгрузки И Объект.РамочныйКонтракт Тогда
		Элементы.ДопСоглашенияДатаПоставкиОтгрузки.Видимость = Истина;
		
		Если Объект.Импорт И Не Объект.Экспорт Тогда
			ТекстЗаголовка = "Дата поставки";
		ИначеЕсли Объект.Экспорт И Не Объект.Импорт Тогда
			ТекстЗаголовка = "Дата отгрузки";
		Иначе
			ТекстЗаголовка = "Дата поставки/отгрузки";
		КонецЕсли;
		
		Элементы.ДопСоглашенияДатаПоставкиОтгрузки.Заголовок = ТекстЗаголовка;
	Иначе
		Элементы.ДопСоглашенияДатаПоставкиОтгрузки.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Инкотермс()
	Элементы.Инкотермс.Доступность = Объект.КонтрактТоварный;
	Элементы.ПунктПереходаРисков.Доступность = Объект.КонтрактТоварный;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_КоличествоДней()
	текВидимостьВШапке = Ложь;
	текВидимостьВТаблице = Ложь;
	Если Не Объект.КредитныйДоговор Тогда
		Если (Объект.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.ОжидаемыйСрок 
			Или Объект.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.КоличествоКалендарныхДнейПоКонтракту) Тогда
			Если Объект.РамочныйКонтракт Тогда
				текВидимостьВТаблице = Истина;
			Иначе
				текВидимостьВШапке = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ОтсрочкаПлатежаПредоплаты = Перечисления.РЭЙ_ОтсрочкаПлатежаПредоплаты.КоличествоКалендарныхДнейПоКонтракту И Объект.Импорт Тогда 
		текДоступностьКоличествоДнейДляВозвратаАванса = Истина;
	Иначе
		текДоступностьКоличествоДнейДляВозвратаАванса = Ложь;
	КонецЕсли;
	
	
	Элементы.КоличествоДней.Видимость = текВидимостьВШапке;
	Элементы.КоличествоДнейДополнительное.Видимость = текВидимостьВШапке;
	Элементы.КоличествоДнейДляВозвратаАвансаПоИмпортномуКонтракту.Видимость = текВидимостьВШапке;
	Элементы.КоличествоДнейДляВозвратаАвансаПоИмпортномуКонтракту.Доступность = текДоступностьКоличествоДнейДляВозвратаАванса;
	
	Элементы.ДекорацияКоличествоДней1.Видимость = Не текВидимостьВШапке;
	Элементы.ДекорацияКоличествоДней2.Видимость = Не текВидимостьВШапке;
	Элементы.ДекорацияКоличествоДней3.Видимость = Не текВидимостьВШапке;
	
	Элементы.ДопСоглашения.ПодчиненныеЭлементы.ДопСоглашенияОжидаемоеКоличествоДней.Видимость = текВидимостьВТаблице;
	Элементы.ДопСоглашения.ПодчиненныеЭлементы.ДопСоглашенияОжидаемоеКоличествоДнейДополнительное.Видимость = текВидимостьВТаблице;
	Элементы.ДопСоглашения.ПодчиненныеЭлементы.ДопСоглашенияКоличествоДнейДляВозвратаАвансаПоИмпортномуКонтракту.Видимость = текВидимостьВТаблице;
	Элементы.ДопСоглашения.ПодчиненныеЭлементы.ДопСоглашенияКоличествоДнейДляВозвратаАвансаПоИмпортномуКонтракту.Доступность = текДоступностьКоличествоДнейДляВозвратаАванса;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_КонтрактНомер()
	Элементы.КонтрактНомер.Доступность = Не БезНомера;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_КонтрактСумма()
	Элементы.КонтрактСумма.Доступность = Не Объект.КонтрактБезСуммы;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_КредитныйДоговор()
	Если РЭЙ_Универсализация.ДоступенКредитныйДоговор(Объект.ДоговорКонтрагента) Тогда
		Элементы.КредитныйДоговор.Доступность = Истина;
	Иначе
		Элементы.КредитныйДоговор.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_МинимальноеКоличествоДнейДляУведомленияОПрекращенииДействияКонтракта()
	Если Объект.Автопролонгация Тогда
		Элементы.МинимальноеКоличествоДнейДляУведомленияОПрекращенииДействияКонтракта.Доступность = Истина;
	Иначе
		Элементы.МинимальноеКоличествоДнейДляУведомленияОПрекращенииДействияКонтракта.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_НеЯвляетсяОбъектомВалютногоКонтроля()
	Элементы.НеЯвляетсяОбъектомВалютногоКонтроля.Доступность = Не Объект.КонтрактБезСуммы;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ОтсрочкаПлатежаПредоплаты()
	Элементы.ОтсрочкаПлатежаПредоплаты.Видимость = Не Объект.КредитныйДоговор;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ПериодическиеФиксированныеПлатежи()
	Элементы.ПериодическиеФиксированныеПлатежи.Доступность = Не Объект.КредитныйДоговор;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_КодПериодичностиФиксированныхПлатежей()
	Элементы.КодПериодичностиФиксированныхПлатежей.Доступность = Объект.ПериодическиеФиксированныеПлатежи;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ПериодФиксированныхПлатежей()
	Элементы.ПериодФиксированныхПлатежей.Доступность = Объект.ПериодическиеФиксированныеПлатежи;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Поставки()
	Если Объект.Экспорт Тогда
		Элементы.Страница_Поставки.Заголовок = "Отгрузки";
		Элементы.ПоставкиДатаПоставки.Заголовок = "Дата отгрузки";
	Иначе
		Элементы.Страница_Поставки.Заголовок = "Поставки";
		Элементы.ПоставкиДатаПоставки.Заголовок = "Дата поставки";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ПроцентныеПлатежиПоКредитамВЭД()
	Если Объект.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ЛИБОР Тогда
		Элементы.СтраницыПроцентныеПлатежиПоКредитамВЭД.ТекущаяСтраница = Элементы.Страница_ПроцентныеПлатежиПоКредитамВЭД_ЛИБОР;
		Элементы.СтраницыПроцентныеПлатежиПоКредитамВЭД_Заголовки.ТекущаяСтраница = Элементы.Страница_ПроцентныеПлатежиПоКредитамВЭД_ЛИБОР_Заголовок;
	ИначеЕсли Объект.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ФиксированнаяСтавка Тогда
		Элементы.СтраницыПроцентныеПлатежиПоКредитамВЭД.ТекущаяСтраница = Элементы.Страница_ПроцентныеПлатежиПоКредитамВЭД_ФиксированнаяСтавка;
		Элементы.СтраницыПроцентныеПлатежиПоКредитамВЭД_Заголовки.ТекущаяСтраница = Элементы.Страница_ПроцентныеПлатежиПоКредитамВЭД_ФиксированнаяСтавка_Заголовок;
	ИначеЕсли Объект.ПроцентныеПлатежиПоКредитамВЭД = Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ДругиеСтавки Тогда
		Элементы.СтраницыПроцентныеПлатежиПоКредитамВЭД.ТекущаяСтраница = Элементы.Страница_ПроцентныеПлатежиПоКредитамВЭД_ДругиеСтавки;
		Элементы.СтраницыПроцентныеПлатежиПоКредитамВЭД_Заголовки.ТекущаяСтраница = Элементы.Страница_ПроцентныеПлатежиПоКредитамВЭД_ДругиеСтавки_Заголовок;
	Иначе
		Элементы.СтраницыПроцентныеПлатежиПоКредитамВЭД.ТекущаяСтраница = Элементы.Страница_ПроцентныеПлатежиПоКредитамВЭД_Пустая;
		Элементы.СтраницыПроцентныеПлатежиПоКредитамВЭД_Заголовки.ТекущаяСтраница = Элементы.Страница_ПроцентныеПлатежиПоКредитамВЭД_Пустая_Заголовок;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПроцентныеПлатежиПоКредитамВЭД) 
		И Объект.ПроцентныеПлатежиПоКредитамВЭД <> Перечисления.РЭЙ_ПроцентныеПлатежиПоКредитамВЭД.ФиксированнаяСтавка Тогда
		Элементы.РазмерПроцентнойНадбавки.Доступность = Истина;
	Иначе
		Элементы.РазмерПроцентнойНадбавки.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_РамочныйКонтракт()
	Если Объект.КредитныйДоговор Тогда
		Элементы.РамочныйКонтракт.Доступность = Ложь;
	Иначе
		Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
			Элементы.РамочныйКонтракт.Доступность = Истина;
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РЭЙ_ДопСоглашения.ДопСоглашение
			|ИЗ
			|	РегистрСведений.РЭЙ_ДопСоглашения КАК РЭЙ_ДопСоглашения
			|ГДЕ
			|	РЭЙ_ДопСоглашения.Договор = &КонтрактВЭД
			|	И РЭЙ_ДопСоглашения.ДопСоглашение <> &Договор";
			
			Запрос.УстановитьПараметр("КонтрактВЭД", Объект.Ссылка);
			Запрос.УстановитьПараметр("Договор", Объект.ДоговорКонтрагента);
			
			РезультатЗапроса = Запрос.Выполнить();
			Если РезультатЗапроса.Пустой() Тогда
				Элементы.РамочныйКонтракт.Доступность = Истина;
			Иначе
				Элементы.РамочныйКонтракт.Доступность = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_ДополнительныеСоглашения()
	Элементы.Страница_ДополнительныеСоглашения.Видимость = Объект.РамочныйКонтракт;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_Досье()
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		текВидимость = Ложь;
	Иначе
		текВидимость = Истина;
	КонецЕсли;
	
	Элементы.Страница_Досье.Видимость = текВидимость;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_Кредит()
	Элементы.Страница_Кредит.Видимость = Объект.КредитныйДоговор;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_Кредит_Синдикат()
	Элементы.Синдикат.Видимость = Объект.КредитныйСиндикат;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_Платежи()
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		текВидимость = Ложь;
	Иначе
		текВидимость = Истина;
	КонецЕсли;
	
	Элементы.Страница_Платежи.Видимость = текВидимость;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_Поставки()
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		текВидимость = Ложь;
	Иначе
		Если Объект.КредитныйДоговор Тогда
			текВидимость = Ложь;
		Иначе
			текВидимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Страница_Поставки.Видимость = текВидимость;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_СтороныПоКонтракту()
	Элементы.Страница_СтороныПоКонтракту.Видимость = Объект.Многосторонний;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_РазрешенияВалютногоКонтроля()
	Элементы.РазрешенияВалютногоКонтроля.Видимость = Объект.РазрешенияВалКонтроля;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Флаг_Импорт()
	Элементы.Импорт.Доступность = ПолучитьЗначениеНастройкиЭлемента("Импорт_Доступность");
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Флаг_Экспорт()
	Элементы.Экспорт.Доступность = ПолучитьЗначениеНастройкиЭлемента("Экспорт_Доступность");
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Флаг_КонтрактТоварный()
	Элементы.КонтрактТоварный.Доступность = ПолучитьЗначениеНастройкиЭлемента("КонтрактТоварный_Доступность");
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Флаг_ПредоставлениеЗайма()
	Элементы.ПредоставлениеЗайма.Доступность = ПолучитьЗначениеНастройкиЭлемента("ПредоставлениеЗайма_Доступность");
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Флаг_ПривлечениеКредитаЗайма()
	Элементы.ПривлечениеКредитаЗайма.Доступность = ПолучитьЗначениеНастройкиЭлемента("ПривлечениеКредитаЗайма_Доступность");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаписьТекущегоЭлементаПриДобавленииСтроки(Результат, ЭлементУправления) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Если Записать() Тогда 
			Если ЭлементУправления <> Неопределено Тогда
				ЭлементУправления.ДобавитьСтроку();
			КонецЕсли;	
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ЗаполнениеНаименованияДоговора()
	Если ПустаяСтрока(Объект.Наименование) 
		Или Объект.Наименование = СформироватьНаименованиеКонтракта(СтароеЗначение_КонтрактНомер, СтароеЗначение_КонтрактДатаПодписания, СтароеЗначение_КонтрактПредмет, СтароеЗначение_БезНомера) 
		Или СокрЛП(Объект.Наименование) = "Основной договор" Тогда
		
		Объект.Наименование = СформироватьНаименованиеКонтракта(Объект.КонтрактНомер, Объект.КонтрактДатаПодписания, Объект.КонтрактПредмет, БезНомера);
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.НаименованиеАнгл) 
		Или (Объект.НаименованиеАнгл = Справочники.РЭЙ_КонтрактыВЭД.СформироватьНаименованиеКонтрактаАнгл(СтароеЗначение_КонтрактНомер, СтароеЗначение_КонтрактДатаПодписания, СтароеЗначение_КонтрактПредметАнгл, СтароеЗначение_БезНомера)) Тогда
		Объект.НаименованиеАнгл = Справочники.РЭЙ_КонтрактыВЭД.СформироватьНаименованиеКонтрактаАнгл(Объект.КонтрактНомер, Объект.КонтрактДатаПодписания, Объект.КонтрактПредметАнгл, БезНомера);
	КонецЕсли;
	
	СтароеЗначение_КонтрактНомер = Объект.КонтрактНомер;
	СтароеЗначение_КонтрактДатаПодписания = Объект.КонтрактДатаПодписания;
	СтароеЗначение_КонтрактПредмет = Объект.КонтрактПредмет;
	СтароеЗначение_КонтрактПредметАнгл = Объект.КонтрактПредметАнгл;
	СтароеЗначение_БезНомера = БезНомера;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуЗавершенияОбязательствПоКонтракту()
	Если ЗначениеЗаполнено(Объект.КонтрактДатаОкончания) Тогда
		Объект.ДатаЗавершенияОбязательствПоКонтракту = Объект.КонтрактДатаОкончания + (Объект.КоличествоДней + Объект.КоличествоДнейДополнительное) * 24*60*60;
	Иначе
		Объект.ДатаЗавершенияОбязательствПоКонтракту = Дата("00010101");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДосье()

	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Возврат;
	КонецЕсли;
	
	СписокДосье.Очистить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КонтрактВЭД", Объект.Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РЭЙ_Файлы.ОбъектВладелец,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РЭЙ_Файлы.Ссылка) КАК КоличествоФайлов
	|ПОМЕСТИТЬ ВТ_Файлы_Количество
	|ИЗ
	|	Справочник.РЭЙ_Файлы КАК РЭЙ_Файлы
	|
	|СГРУППИРОВАТЬ ПО
	|	РЭЙ_Файлы.ОбъектВладелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Файлы_Количество.ОбъектВладелец,
	|	ЕСТЬNULL(РЭЙ_Файлы.ПолноеНаименование, ""Несколько файлов"") КАК Файлы,
	|	ЕСТЬNULL(РЭЙ_Файлы.ИндексКартинки, 2) КАК ИндексКартинки
	|ПОМЕСТИТЬ ВТ_Файлы
	|ИЗ
	|	ВТ_Файлы_Количество КАК Файлы_Количество
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РЭЙ_Файлы КАК РЭЙ_Файлы
	|		ПО Файлы_Количество.ОбъектВладелец = РЭЙ_Файлы.ОбъектВладелец
	|			И (Файлы_Количество.КоличествоФайлов = 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПС.Ссылка,
	|	ПС.МоментВремени
	|ПОМЕСТИТЬ ВТ_Документы
	|ИЗ
	|	Документ.РЭЙ_ПаспортСделки КАК ПС
	|ГДЕ
	|	ПС.КонтрактВЭД = &КонтрактВЭД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СПД.Ссылка,
	|	СПД.МоментВремени
	|ИЗ
	|	Документ.РЭЙ_СправкаОПодтверждающихДокументах КАК СПД
	|ГДЕ
	|	СПД.КонтрактВЭД = &КонтрактВЭД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СВО.Ссылка,
	|	СВО.Ссылка.МоментВремени
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК СВО
	|ГДЕ
	|	СВО.КонтрактВЭД = &КонтрактВЭД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СВО_Ручные.Ссылка,
	|	СВО_Ручные.Ссылка.МоментВремени
	|ИЗ
	|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперацииРучные КАК СВО_Ручные
	|ГДЕ
	|	СВО_Ручные.КонтрактВЭД = &КонтрактВЭД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗБ.Ссылка,
	|	ЗБ.МоментВремени
	|ИЗ
	|	Документ.РЭЙ_ЗаявлениеВБанкПС КАК ЗБ
	|ГДЕ
	|	ЗБ.ПаспортаСделок.ПаспортСделки.КонтрактВЭД = &КонтрактВЭД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Документы.Ссылка,
	|	ВТ_Документы.МоментВремени КАК МоментВремени,
	|	ВТ_Файлы.Файлы,
	|	ЕСТЬNULL(ВТ_Файлы.ИндексКартинки, -1) КАК ИндексКартинки
	|ИЗ
	|	ВТ_Документы КАК ВТ_Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Файлы КАК ВТ_Файлы
	|		ПО ВТ_Документы.Ссылка = ВТ_Файлы.ОбъектВладелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени";

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаДосье = СписокДосье.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДосье, Выборка);
		НоваяСтрокаДосье.ПредставлениеСсылки = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(НоваяСтрокаДосье.Ссылка);
	КонецЦикла;

	// Файлы из договора 
	Если Метаданные.Справочники.Найти("ДоговорыКонтрагентовПрисоединенныеФайлы") <> Неопределено Тогда		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентовПрисоединенныеФайлы.Ссылка,
		|	ДоговорыКонтрагентовПрисоединенныеФайлы.Наименование,
		|	ДоговорыКонтрагентовПрисоединенныеФайлы.Расширение
		|ИЗ
		|	Справочник.ДоговорыКонтрагентовПрисоединенныеФайлы КАК ДоговорыКонтрагентовПрисоединенныеФайлы
		|ГДЕ
		|	ДоговорыКонтрагентовПрисоединенныеФайлы.ВладелецФайла = &Объект";
		
		Запрос.УстановитьПараметр("Объект", Объект.ДоговорКонтрагента);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			НоваяСтрокаДосье = СписокДосье.Вставить(0);
			НоваяСтрокаДосье.Ссылка = Объект.ДоговорКонтрагента;
			НоваяСтрокаДосье.ПредставлениеСсылки = Объект.ДоговорКонтрагента;
			НоваяСтрокаДосье.Файлы = Выборка.Наименование + "." + Выборка.Расширение;
			НоваяСтрокаДосье.ИндексКартинки = РЭЙ_СлужебныйСервер.ПолучитьИндексПиктограммыФайла(Выборка.Расширение);
		ИначеЕсли Выборка.Количество() > 1 Тогда
			НоваяСтрокаДосье = СписокДосье.Вставить(0);
			НоваяСтрокаДосье.Ссылка = Объект.ДоговорКонтрагента;
			НоваяСтрокаДосье.ПредставлениеСсылки = Объект.ДоговорКонтрагента;
			НоваяСтрокаДосье.Файлы = "Несколько файлов";
			НоваяСтрокаДосье.ИндексКартинки = 2;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПлатежи()
	Если Параметры.Ключ.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ПлатежиТаблицаЗначений = ДанныеФормыВЗначение(Платежи, Тип("ТаблицаЗначений"));
	
	ПлатежиТаблицаЗначений.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РЭЙ_ПлатежиПоКонтрактамВЭД.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РЭЙ_ПлатежиПоКонтрактамВЭД.ДатаОплаты КАК ДатаОплаты,
	|	РЭЙ_ПлатежиПоКонтрактамВЭД.РасчетныйДокумент.Валюта КАК ВалютаДокумента,
	|	РЭЙ_ПлатежиПоКонтрактамВЭД.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента,
	|	РЭЙ_ПлатежиПоКонтрактамВЭД.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	РЭЙ_ПлатежиПоКонтрактамВЭД.СуммаВДолларахСША КАК СуммаВДолларахСША,
	|	РЭЙ_ПлатежиПоКонтрактамВЭД.СуммаВРубляхРФ КАК СуммаВРубляхРФ
	|ИЗ
	|	РегистрСведений.РЭЙ_ПлатежиПоКонтрактамВЭД КАК РЭЙ_ПлатежиПоКонтрактамВЭД
	|ГДЕ
	|	РЭЙ_ПлатежиПоКонтрактамВЭД.КонтрактВЭД = &КонтрактВЭД
	|
	|УПОРЯДОЧИТЬ ПО
	|	РЭЙ_ПлатежиПоКонтрактамВЭД.ДатаОплаты";
	
	Запрос.УстановитьПараметр("КонтрактВЭД", Объект.Ссылка);
	
	Платежи.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого СтрокаТЧ Из Платежи Цикл
		СтрокаТЧ.РасчетныйДокументКраткоеПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.РасчетныйДокумент);
	КонецЦикла;
	
	Элементы.ПлатежиСуммаВВалютеКонтракта.ТекстПодвала = Формат(Платежи.Итог("СуммаВВалютеКонтракта"), "ЧДЦ=2");
	Элементы.ПлатежиСуммаВВалютеКонтракта.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.ПлатежиСуммаВДолларахСША.ТекстПодвала = Формат(Платежи.Итог("СуммаВДолларахСША"), "ЧДЦ=2");
	Элементы.ПлатежиСуммаВДолларахСША.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.ПлатежиСуммаВРубляхРФ.ТекстПодвала = Формат(Платежи.Итог("СуммаВРубляхРФ"), "ЧДЦ=2");
	Элементы.ПлатежиСуммаВРубляхРФ.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПоставки()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РЭЙ_ПоставкиПоКонтрактамВЭД.ПодтверждающийДокумент КАК ПодтверждающийДокумент,
	|	РЭЙ_ПоставкиПоКонтрактамВЭД.ДатаПоставки КАК ДатаПоставки,
	|	РЭЙ_ПоставкиПоКонтрактамВЭД.ПодтверждающийДокумент.Валюта КАК ВалютаДокумента,
	|	РЭЙ_ПоставкиПоКонтрактамВЭД.СуммаВВалютеДокумента КАК СуммаВВалютеДокумента,
	|	РЭЙ_ПоставкиПоКонтрактамВЭД.СуммаВВалютеКонтракта КАК СуммаВВалютеКонтракта,
	|	РЭЙ_ПоставкиПоКонтрактамВЭД.СуммаВДолларахСША КАК СуммаВДолларахСША,
	|	РЭЙ_ПоставкиПоКонтрактамВЭД.СуммаВРубляхРФ КАК СуммаВРубляхРФ
	|ИЗ
	|	РегистрСведений.РЭЙ_ПоставкиПоКонтрактамВЭД КАК РЭЙ_ПоставкиПоКонтрактамВЭД
	|ГДЕ
	|	РЭЙ_ПоставкиПоКонтрактамВЭД.КонтрактВЭД = &КонтрактВЭД
	|
	|УПОРЯДОЧИТЬ ПО
	|	РЭЙ_ПоставкиПоКонтрактамВЭД.ДатаПоставки";
	
	Запрос.УстановитьПараметр("КонтрактВЭД", Объект.Ссылка);
	
	Поставки.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого СтрокаТЧ Из Поставки Цикл
		СтрокаТЧ.ПодтверждающийДокументКраткоеПредставление = РЭЙ_СлужебныйСервер.КраткоеПредставлениеДокумента(СтрокаТЧ.ПодтверждающийДокумент);
	КонецЦикла;
	
	Элементы.ПоставкиСуммаВВалютеКонтракта.ТекстПодвала = Формат(Поставки.Итог("СуммаВВалютеКонтракта"), "ЧДЦ=2");
	Элементы.ПоставкиСуммаВВалютеКонтракта.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.ПоставкиСуммаВДолларахСША.ТекстПодвала = Формат(Поставки.Итог("СуммаВДолларахСША"), "ЧДЦ=2");
	Элементы.ПоставкиСуммаВДолларахСША.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
	Элементы.ПоставкиСуммаВРубляхРФ.ТекстПодвала = Формат(Поставки.Итог("СуммаВРубляхРФ"), "ЧДЦ=2");
	Элементы.ПоставкиСуммаВРубляхРФ.ГоризонтальноеПоложениеВПодвале = ГоризонтальноеПоложениеЭлемента.Право;
КонецПроцедуры

&НаСервере
Процедура ПроверитьНеобходимостьСозданияЗадачВЭД()
	Если Не ЗначениеЗаполнено(Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов)
		Или Не ЗначениеЗаполнено(Объект.КонтрактДатаПодписания) 
		Или Объект.КонтрактСумма = 0 Тогда
		
		Возврат;
	КонецЕсли;
	
	Лимит = РегистрыСведений.РЭЙ_НастройкиПараметровВалютногоКонтроля.ПолучитьЛимитПоКонтракту(Объект, Объект.КонтрактДатаПодписания);
	Если Лимит.Сумма = 0 Или Не ЗначениеЗаполнено(Лимит.Валюта) Тогда
		Возврат;
	КонецЕсли;
	
	СуммаКонтрактаВВалютеЛимита = РЭЙ_СлужебныйСервер.ПересчитатьИзВалютыВВалюту(Объект.КонтрактСумма, Объект.КонтрактДатаПодписания, Объект.ДоговорКонтрагента.ВалютаВзаиморасчетов, Лимит.Валюта);
	
	Если СуммаКонтрактаВВалютеЛимита < Лимит.Сумма Тогда
		Сообщить("Сумма контракта меньше, чем установленный лимит валютного контроля! Контракт не подлежит постановке на учет.", СтатусСообщения.ОченьВажное);
		Объект.НеЯвляетсяОбъектомВалютногоКонтроля = Истина;
	Иначе
		Сообщить("Сумма контракта больше, чем установленный лимит валютного контроля! Контракт необходимо поставить на учет!", СтатусСообщения.ОченьВажное);
		Объект.НеЯвляетсяОбъектомВалютногоКонтроля = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписей(ИмяРеквизитаФормы, ИмяОтбора, ЗначениеОтбора)
	НаборЗаписей = РеквизитФормыВЗначение(ИмяРеквизитаФормы);
	НаборЗаписей.Отбор[ИмяОтбора].Установить(ЗначениеОтбора);
	НаборЗаписей.Прочитать();
	ЗначениеВРеквизитФормы(НаборЗаписей, ИмяРеквизитаФормы);	
КонецПроцедуры	

&НаСервере
Процедура ПрочитатьНаборыЗаписей()
	ПрочитатьНаборЗаписей("ДопСоглашения", "Договор", Параметры.Ключ);
	ПрочитатьНаборЗаписей("СписокГрафикФинансирования", "Договор", Параметры.Ключ);
	ПрочитатьНаборЗаписей("СписокГрафикПогашения", "Договор", Параметры.Ключ);
	ПрочитатьНаборЗаписей("СписокРазрешенияВалютногоКонтроля", "Объект", Параметры.Ключ);
	ПрочитатьНаборЗаписей("СписокКредитныйСиндикат", "Договор", Параметры.Ключ);
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеВидаДокумента()
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		ВидДокумента_Представление = СокрЛП(Объект.ВидДокумента.Код) + " - " + СокрЛП(Объект.ВидДокумента.Наименование);
	Иначе
		ВидДокумента_Представление = "";
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяЗначенияПеречисления(текЗначениеПеречисления)
	
	Если НЕ ЗначениеЗаполнено(текЗначениеПеречисления) Тогда
		
		Возврат "";
		
	КонецЕсли;
	
	МетаданныеПеречисления = текЗначениеПеречисления.Метаданные();
	
	ИндексЗначенияПеречисления = Перечисления[МетаданныеПеречисления.Имя].Индекс(текЗначениеПеречисления);
	
	МетаданныеЗначенияПеречисления = МетаданныеПеречисления.ЗначенияПеречисления[ИндексЗначенияПеречисления];
	
	Возврат МетаданныеЗначенияПеречисления.Имя;
	
КонецФункции

&НаСервере
Функция ПолучитьЗначениеНастройкиЭлемента(текИмяНастройки, текВидКонтрактаВЭД = Неопределено)
	Если текВидКонтрактаВЭД = Неопределено Тогда
		текВидКонтрактаВЭД = Объект.ВидКонтрактаВЭД;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(текВидКонтрактаВЭД) Тогда
		текНомерСтроки = Перечисления.РЭЙ_ВидыКонтрактовВЭД.Индекс(текВидКонтрактаВЭД) + 5;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	текНомерКолонки = 0;
	Для НомерКолонки = 2 По МакетНастройкиЭлементов.ШиринаТаблицы Цикл
		Если МакетНастройкиЭлементов.Область(4, НомерКолонки).Текст = текИмяНастройки Тогда
			текНомерКолонки = НомерКолонки;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если текНомерКолонки = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	текЗначение = МакетНастройкиЭлементов.Область(текНомерСтроки, текНомерКолонки).Текст;
	
	Если текЗначение = "*" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьМассивКодовПД()
	МассивКодовПД = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.ВидКонтрактаВЭД) Тогда
		текНомерСтроки = Перечисления.РЭЙ_ВидыКонтрактовВЭД.Индекс(Объект.ВидКонтрактаВЭД) + 5;
		
		Для текНомерКолонки = 18 По 46 Цикл
			текЗначение = МакетНастройкиЭлементов.Область(текНомерСтроки, текНомерКолонки).Текст;
			
			Если текЗначение = "*" Тогда
				МассивКодовПД.Добавить(МакетНастройкиЭлементов.Область(4, текНомерКолонки).Текст);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивКодовПД;
КонецФункции

&НаСервере
Функция ПолучитьСписокВидовКонтрактовВЭД()
	Если Объект.КредитныйДоговор Тогда
		текИмяНастройки = "Кредитный_";
	Иначе
		текИмяНастройки = "Контракт_";
	КонецЕсли;
	
	текИмяНастройки = текИмяНастройки + ПолучитьИмяЗначенияПеречисления(Объект.ДоговорКонтрагента.ТипДоговора);
	
	СписокВыбора = Новый СписокЗначений;
	
	Для Каждого текВидКонтрактаВЭД Из Перечисления.РЭЙ_ВидыКонтрактовВЭД Цикл
		Если ПолучитьЗначениеНастройкиЭлемента(текИмяНастройки, текВидКонтрактаВЭД) Тогда
			СписокВыбора.Добавить(текВидКонтрактаВЭД);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокВыбора;
КонецФункции

&НаСервере
Функция СформироватьНаименованиеКонтракта(парНомер, парДата, парПредмет, парБезНомера) Экспорт
	Результат = 
	"Конт. " +
	?(парБезНомера, "б/н", ?(ПустаяСтрока(парНомер), "", "№" + СокрЛП(парНомер))) + 
	?(ЗначениеЗаполнено(парДата)," от " + Формат(парДата, "ДФ=dd.MM.yyyy"), "") +
	?(ПустаяСтрока(парПредмет), "", " (" + парПредмет + ")");
	
	Возврат Результат;
КонецФункции

#КонецОбласти

