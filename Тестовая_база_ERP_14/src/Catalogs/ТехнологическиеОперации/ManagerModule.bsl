#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает очередной номер операции внутри заданной маршрутной карты.
//
// Параметры:
//  МаршрутнаяКарта	- СправочникСсылка.МаршрутныеКарты - владелец операций в рамках которого
//		необходимо получить очередной номер.
//
// Возвращаемое значение:
//   Число - Новый номер операции.
//
Функция НовыйНомерОперации(МаршрутнаяКарта) Экспорт
	
	Если МаршрутнаяКарта.Пустая() Тогда
		Возврат 1;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ТехнологическиеОперации.НомерОперации КАК НомерОперации
	               |ИЗ
	               |	Справочник.ТехнологическиеОперации КАК ТехнологическиеОперации
	               |ГДЕ
	               |	ТехнологическиеОперации.Владелец = &МаршрутнаяКарта
	               |	И НЕ ТехнологическиеОперации.ПометкаУдаления
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерОперации УБЫВ";
	
	Запрос.УстановитьПараметр("МаршрутнаяКарта", МаршрутнаяКарта);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 1;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.НомерОперации + 1;

КонецФункции

// Возвращает очередной Идентификатор внутри заданной маршрутной карты.
//
// Параметры:
//  МаршрутнаяКарта	 - СправочникСсылка.МаршрутныеКарты	 - владелец операций
//  Отказ			 - Булево							 - признак отказа от выполнения действия.
// 
// Возвращаемое значение:
//  Число - Новый Идентификатор операции.
//
Функция НовыйИдентификаторОперации(МаршрутнаяКарта) Экспорт
	
	Если Не ТранзакцияАктивна() Тогда
		ВызватьИсключение НСтр("ru = 'Получение нового идентификатора операции может выполняться только в транзакции.';
								|en = 'New operation ID can be received only in a transaction.'");
	КонецЕсли;
	
	Если МаршрутнаяКарта.Пустая() Тогда
		Возврат 1;
	КонецЕсли;

	БлокировкаДанных = Новый БлокировкаДанных;
	
	ЭлементБлокировки = БлокировкаДанных.Добавить("Справочник.ТехнологическиеОперации");
	ЭлементБлокировки.УстановитьЗначение("Владелец", МаршрутнаяКарта);
	
	Попытка
		
		БлокировкаДанных.Заблокировать();
		
	Исключение
		
		ТекстИсключения = СтрШаблон(
			НСтр("ru = 'Не удалось получить новый идентификатор операции маршрутной карты %1.';
				|en = 'Cannot receive new ID of the %1 operations sheet operation.'"),
			МаршрутнаяКарта);
		ВызватьИсключение ТекстИсключения;
		
	КонецПопытки;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТехнологическиеОперации.Идентификатор КАК Идентификатор
		|ИЗ
		|	Справочник.ТехнологическиеОперации КАК ТехнологическиеОперации
		|ГДЕ
		|	ТехнологическиеОперации.Владелец = &МаршрутнаяКарта
		|	И НЕ ТехнологическиеОперации.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Идентификатор УБЫВ");
	
	Запрос.УстановитьПараметр("МаршрутнаяКарта", МаршрутнаяКарта);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 1;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Идентификатор + 1;

КонецФункции

// Создает новый элемент справочника копированием существующего, затем записывает.
//  (используется при копировании маршрутной карты).
//
// Параметры:
//  Источник - СправочникСсылка.ТехнологическиеОперации	 - операция-источник
//  Владелец - СправочникСсылка.МаршрутныеКарты			 - владелец операций.
// 
// Возвращаемое значение:
//  СправочникСсылка.ТехнологическиеОперации - новая операция.
//
Функция СкопироватьТехнологическуюОперацию(Источник, Владелец) Экспорт
	
	СсылкаНаОперацию = Справочники.ТехнологическиеОперации.ПустаяСсылка();
	
	НачатьТранзакцию();
	Попытка
		
		ОперацияОбъект = Источник.Скопировать();
		ОперацияОбъект.Владелец = Владелец;
		
		ОперацияОбъект.ЗаполнитьСлужебныеРеквизиты();
		
		ОперацияОбъект.ОбменДанными.Загрузка = Истина;
		ОперацияОбъект.Записать();
		
		СсылкаНаОперацию = ОперацияОбъект.Ссылка;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИмяСобытия = НСтр("ru = 'Выполнение операции';
							|en = 'Performing transaction'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		
		ЗаписьЖурналаРегистрации(
			ИмяСобытия,
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ТехнологическиеОперации,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
	Возврат СсылкаНаОперацию;
	
КонецФункции

// Определяет наличие зацикливания операций
//
// Параметры:
//  ПроверяемаяМаршрутнаяКарта	- СправочникСсылка.МаршрутныеКарты - маршрутная карта
//								операции которой (и все подчиненные) будут проверены на зацикливание
//  ИсходнаяМаршрутнаяКарта		- СправочникСсылка.МаршрутныеКарты - маршрутная карта на которую не должно быть ссылок
//  Отказ						- Булево - признак отказа от выполнения действия.
//
// Возвращаемое значение:
//   Булево   - Истина, если есть зацикливание операций.
//
Функция ЕстьЗацикливание(ПроверяемаяМаршрутнаяКарта, ИсходнаяМаршрутнаяКарта, Отказ = Ложь) Экспорт

	Если ПроверяемаяМаршрутнаяКарта = ИсходнаяМаршрутнаяКарта Тогда
		Отказ = Истина;
		Возврат Истина;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТехнологическиеОперации.Ссылка КАК Ссылка,
	|	ТехнологическиеОперации.ВложенныйМаршрут КАК ВложенныйМаршрут
	|ИЗ
	|	Справочник.ТехнологическиеОперации КАК ТехнологическиеОперации
	|ГДЕ
	|	НЕ ТехнологическиеОперации.ПометкаУдаления
	|	И ТехнологическиеОперации.Владелец В(&ПроверяемыеМаршрутныеКарты)
	|	И ТехнологическиеОперации.СодержитВложенныйМаршрут";
	
	Запрос.УстановитьПараметр("ИсходнаяМаршрутнаяКарта", ИсходнаяМаршрутнаяКарта);
	
	ПроверяемыеМаршрутныеКарты = Новый Массив;
	ПроверяемыеМаршрутныеКарты.Добавить(ПроверяемаяМаршрутнаяКарта);
	
	Пока ПроверяемыеМаршрутныеКарты.Количество() <> 0 Цикл
		
		Запрос.УстановитьПараметр("ПроверяемыеМаршрутныеКарты", ПроверяемыеМаршрутныеКарты);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		ПроверяемыеМаршрутныеКарты.Очистить();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.ВложенныйМаршрут = ИсходнаяМаршрутнаяКарта Тогда
				Отказ = Истина;
				Возврат Истина;
			Иначе
				ПроверяемыеМаршрутныеКарты.Добавить(Выборка.ВложенныйМаршрут);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;

	Возврат Ложь;
	
КонецФункции

// Возвращает нормативные значения дополнительных реквизитов операции.
//
// Параметры:
//  Ссылка - СправочникСсылка.ТехнологическиеОперации - операция для которой необходимо получить нормативы.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - нормативы с колонками:
//		* Свойство - ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения - ссылка на реквизит.
//		* ЗначениеМин - Число - нижнее нормативное значение.
//		* ЗначениеМакс - Число - верхнее нормативное значение.
//		* Формат - Строка - формат редактирования и отображения реквизита.
//
Функция НормативыЗначенийДопРеквизитов(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	
	ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВидОперации");
	
	Если ВидОперации.Пустая() Тогда
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Нормативы.Свойство     КАК Свойство,
			|	Нормативы.ЗначениеМин  КАК ЗначениеМин,
			|	Нормативы.ЗначениеМакс КАК ЗначениеМакс,
			|	""""                   КАК Формат
			|ИЗ
			|	Справочник.ТехнологическиеОперации.НормативыВидаОперации КАК Нормативы
			|ГДЕ
			|	Нормативы.Ссылка = &Ссылка";
		
	Иначе
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Справочники.ВидыТехнологическихОпераций.СоздатьВТСвойстваНабора(ВидОперации, МенеджерВременныхТаблиц, Истина, Ложь);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Нормативы.Свойство                            КАК Свойство,
			|	Нормативы.ЗначениеМин                         КАК ЗначениеМин,
			|	Нормативы.ЗначениеМакс                        КАК ЗначениеМакс,
			|	ЕСТЬNULL(СвойстваНабора.ФорматСвойства, """") КАК Формат
			|ИЗ
			|	Справочник.ТехнологическиеОперации.НормативыВидаОперации КАК Нормативы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСвойстваНабора КАК СвойстваНабора
			|		ПО Нормативы.Свойство = СвойстваНабора.Свойство
			|ГДЕ
			|	Нормативы.Ссылка = &Ссылка";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает текст запроса получения реквизитов исполнителя операции
//
// Параметры:
//  ИмяТаблицыОперации	 - Строка	 - имя таблицы ТехнологическиеОперации.
// 
// Возвращаемое значение:
//   - Строка - текст запроса получения реквизитов расчета времени выполнения операции.
//
Функция ТекстЗапросаРеквизитыИсполнителяОперации(ИмяТаблицыОперации) Экспорт
	
	ТекстЗапроса =
		"ВЫБОР
		|	КОГДА ТехнологическиеОперации.РабочийЦентр ССЫЛКА Справочник.ВидыРабочихЦентров
		|		ТОГДА ТехнологическиеОперации.РабочийЦентр
		|	ИНАЧЕ ТехнологическиеОперации.РабочийЦентр.ВидРабочегоЦентра
		|КОНЕЦ КАК ВидРабочегоЦентра,
		|
		|ТехнологическиеОперации.РабочийЦентр КАК РабочийЦентр,
		|
		|ВЫБОР
		|	КОГДА ТехнологическиеОперации.РабочийЦентр = НЕОПРЕДЕЛЕНО
		|			ИЛИ ТехнологическиеОперации.РабочийЦентр = ЗНАЧЕНИЕ(Справочник.ВидыРабочихЦентров.ПустаяСсылка)
		|			ИЛИ ТехнологическиеОперации.РабочийЦентр = ЗНАЧЕНИЕ(Справочник.РабочиеЦентры.ПустаяСсылка)
		|		ТОГДА ЛОЖЬ
		|	КОГДА ТехнологическиеОперации.РабочийЦентр ССЫЛКА Справочник.ВидыРабочихЦентров
		|		ТОГДА ТехнологическиеОперации.РабочийЦентр.ПараллельнаяЗагрузка
		|	ИНАЧЕ ТехнологическиеОперации.РабочийЦентр.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|КОНЕЦ КАК ПараллельнаяЗагрузка";
		
	Возврат СтрЗаменить(ТекстЗапроса, "ТехнологическиеОперации" ,ИмяТаблицыОперации);
	
КонецФункции

// Возвращает текст запроса получения реквизитов расчета времени выполнения операции.
//
// Параметры:
//  ИмяТаблицыОперации	 - Строка	 - имя таблицы ТехнологическиеОперации.
// 
// Возвращаемое значение:
//   - Строка - текст запроса получения реквизитов расчета времени выполнения операции.
//
Функция ТекстЗапросаРеквизитыРасчетаВремениВыполненияОперации(ИмяТаблицыОперации) Экспорт
	
	ТекстЗапроса = 
		"ВЫБОР
		|		КОГДА ТехнологическиеОперации.РабочийЦентр ССЫЛКА Справочник.ВидыРабочихЦентров
		|			ТОГДА ВЫБОР
		|					КОГДА ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.ВидыРабочихЦентров).ПараллельнаяЗагрузка
		|							И ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.ВидыРабочихЦентров).ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|						ТОГДА ВЫБОР
		|								КОГДА ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.ВидыРабочихЦентров).ИспользуютсяВариантыНаладки
		|									ТОГДА ТехнологическиеОперации.ВариантНаладки.ВремяРаботы
		|								ИНАЧЕ ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.ВидыРабочихЦентров).ВремяРаботы
		|							КОНЕЦ
		|					ИНАЧЕ ТехнологическиеОперации.ВремяШтучное
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.РабочиеЦентры).ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|						И ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.РабочиеЦентры).ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|					ТОГДА ВЫБОР
		|							КОГДА ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.РабочиеЦентры).ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|								ТОГДА ТехнологическиеОперации.ВариантНаладки.ВремяРаботы
		|							ИНАЧЕ ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.РабочиеЦентры).ВидРабочегоЦентра.ВремяРаботы
		|						КОНЕЦ
		|				ИНАЧЕ ТехнологическиеОперации.ВремяШтучное
		|			КОНЕЦ
		|	КОНЕЦ КАК ВремяШтучное,
		|	ВЫБОР
		|		КОГДА ТехнологическиеОперации.РабочийЦентр ССЫЛКА Справочник.ВидыРабочихЦентров
		|			ТОГДА ВЫБОР
		|					КОГДА ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.ВидыРабочихЦентров).ПараллельнаяЗагрузка
		|							И ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.ВидыРабочихЦентров).ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|						ТОГДА ВЫБОР
		|								КОГДА ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.ВидыРабочихЦентров).ИспользуютсяВариантыНаладки
		|									ТОГДА ТехнологическиеОперации.ВариантНаладки.ЕдиницаИзмерения
		|								ИНАЧЕ ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.ВидыРабочихЦентров).ЕдиницаИзмерения
		|							КОНЕЦ
		|					ИНАЧЕ ТехнологическиеОперации.ВремяШтучноеЕдИзм
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.РабочиеЦентры).ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|						И ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.РабочиеЦентры).ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|					ТОГДА ВЫБОР
		|							КОГДА ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.РабочиеЦентры).ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|								ТОГДА ТехнологическиеОперации.ВариантНаладки.ЕдиницаИзмерения
		|							ИНАЧЕ ВЫРАЗИТЬ(ТехнологическиеОперации.РабочийЦентр КАК Справочник.РабочиеЦентры).ВидРабочегоЦентра.ЕдиницаИзмерения
		|						КОНЕЦ
		|				ИНАЧЕ ТехнологическиеОперации.ВремяШтучноеЕдИзм
		|			КОНЕЦ
		|	КОНЕЦ КАК ВремяШтучноеЕдИзм,
		|	ТехнологическиеОперации.ВремяПЗ КАК ВремяПЗ,
		|	ВЫБОР
		|		КОГДА ТехнологическиеОперации.ВремяПЗ <> 0
		|			ТОГДА ТехнологическиеОперации.ВремяПЗЕдИзм
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.ПустаяСсылка)
		|	КОНЕЦ КАК ВремяПЗЕдИзм";
		
	Возврат СтрЗаменить(ТекстЗапроса, "ТехнологическиеОперации" ,ИмяТаблицыОперации);
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

	УправлениеДаннымиОбИзделияхВызовСервера.ТехнологическиеОперацииОбработкаПолученияФормы(
				ВидФормы, 
				Параметры, 
				ВыбраннаяФорма, 
				СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция ДлинаИдентификатораОперации() Экспорт
	
	Возврат 5;
	
КонецФункции

Функция РассчитатьКоэффициентПересчетаНормативов(Операция, Количество) Экспорт
	
	Если ЗначениеЗаполнено(Количество) Тогда
		
		КоличествоОперация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Операция, "Количество");
		
		Если ЗначениеЗаполнено(КоличествоОперация) Тогда
			Результат = Количество / КоличествоОперация;
		Иначе
			Результат = 1;
		КонецЕсли;
		
	Иначе
		
		Результат = 1;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли