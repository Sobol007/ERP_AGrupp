#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		Если ЗначениеЗаполнено(Параметры.Основание) Тогда
			ЗаполнитьНаОсновании(Параметры.Основание, Отказ);
		КонецЕсли;

		Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
			ОтказОтОткрытия = Истина;
			ТекстСообщенияПриОтказеОтОткрытия = "Не указан владелец банковского счета!";
			Возврат;
		КонецЕсли;  	
		
		Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка." + РЭЙ_Универсализация.ИмяСправочника_Банки()) Тогда 
			Если Не ЗначениеЗаполнено(Объект.Банк) Тогда
				ОтказОтОткрытия = Истина;
				ТекстСообщенияПриОтказеОтОткрытия = "Банковский валютный счет может быть введен только из формы ""Параметры ВЭД"" элемента справочника ""Банки"".";
				Возврат;
			КонецЕсли;
		Иначе
			Если Не ЗначениеЗаполнено(Объект.БанковскийСчет) Или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
				ОтказОтОткрытия = Истина;
				ТекстСообщенияПриОтказеОтОткрытия = "Банковский валютный счет может быть введен только из формы банковского счета.";
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСписокВидовСчетов();
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ЗаполнитьНовыйЭлемент();
	КонецЕсли;
	ПрочитатьДополнительныеРеквизиты_КлиринговаяСистема();
	
	Заголовок = Заголовок + " (" + Строка(Объект.Владелец) + ")";
	
	АвтоНаименование = СформироватьАвтоНаименование();
	
	СтароеЗначение_ВалютаДенежныхСредств = Объект.ВалютаДенежныхСредств;
	
	УстановитьОтображение_ВалютаДенежныхСредств();
	УстановитьОтображение_НаименованиеВидаВладельца();
	УстановитьОтображение_НомерСчета();
	УстановитьОтображение_ПрямыеРасчеты();
	УстановитьОтображение_Страница_БанкиПосредники();
	УстановитьОтображение_Страница_РазрешенияЦБ();
		
	Если Объект.ИБАН Тогда
		ДлинаНомераИБАН = 0;
		БанкИспользуетИБАН();
		УстановитьМаскуНомерСчета();
	КонецЕсли;
	
	Прочитать_СписокСчетаКорреспонденты();	
	
	ДобавитьУсловноеОформление_СчетаКорреспонденты();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ОтказОтОткрытия Тогда
		ПоказатьПредупреждение(, ТекстСообщенияПриОтказеОтОткрытия);
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	УстановитьОтображение_СделатьОсновным_КоррСчет();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	НаборЗаписей = РеквизитФормыВЗначение("СписокРазрешенияВалютногоКонтроля");
	НаборЗаписей.Записать();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПрочитатьНаборыЗаписей();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("РЭЙ_ЗаписанЭлементБанковскиеСчетаВалютные", Объект.Ссылка, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапки

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	Если Объект.ИБАН Тогда
		КонтрольКорректности_НомерСчетаИБАН();
    	ЗаполнитьНаименование();
	Иначе
		КонтрольКорректности_НомерСчетаОбычный();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИБАНПриИзменении(Элемент)
	ИБАНПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИБАНПриИзмененииНаСервере()
	БанкИспользуетИБАН();
	УстановитьМаскуНомерСчета();
	УстановитьНомерСчета();
	УстановитьОтображение_НомерСчета();
КонецПроцедуры

&НаКлиенте
Процедура ВидСчетаПриИзменении(Элемент)
    ЗаполнитьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	Если Объект.ВалютаДенежныхСредств <> СтароеЗначение_ВалютаДенежныхСредств И ЗначениеЗаполнено(Объект.НомерСчета) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВалютаДенежныхСредствПриИзмененииОбработкаРезультатаВопроса", ЭтотОбъект);
		ТекстВопроса = "Валюта счета изменена. Номер банковского счета будет очищен.";
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
        Возврат;
	КонецЕсли;
	
	ВалютаДенежныхСредствПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзмененииОбработкаРезультатаВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
    Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
        Объект.ВалютаДенежныхСредств = СтароеЗначение_ВалютаДенежныхСредств;
        Возврат;
    Иначе
        Объект.НомерСчета = "";
    КонецЕсли;
    
    ВалютаДенежныхСредствПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВалютаДенежныхСредствПриИзмененииНаСервере()
    СтароеЗначение_ВалютаДенежныхСредств = Объект.ВалютаДенежныхСредств;
    
    УстановитьИБАН();
    УстановитьКлиринговуюСистему();
    
    ЗаполнитьНаименование();
    
    УстановитьОтображение_НомерСчета();
    Прочитать_СписокСчетаКорреспонденты();
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ТекущаяСтрока", Объект.ВалютаДенежныхСредств);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	
	ФормаВыбора	= ПолучитьФорму("Справочник.Валюты.ФормаВыбора", ПараметрыОткрытия, Элемент);
	ФормаВыбора.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	
	ЭлементОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ПравоеЗначение = СформироватьСписокИсключаемыхВалют();
	
	ФормаВыбора.Открыть();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_Банк

&НаКлиенте
Процедура ОбновитьБанк(Команда)
	ОбновитьБанкНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьБанкНаСервере()
	УстановитьИБАН();
	УстановитьКлиринговуюСистему();
	ЗаполнитьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура КлиринговаяСистемаПриИзменении(Элемент)
	ПрочитатьДополнительныеРеквизиты_КлиринговаяСистема();
КонецПроцедуры

&НаКлиенте
Процедура КлиринговаяСистемаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.ЗагрузитьЗначения(СформироватьСписокКлиринговыхСистем());	

	ОписаниеОповещения = Новый ОписаниеОповещения("КлиринговаяСистемаНачалоВыбора_Завершение", ЭтотОбъект);
	
	ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбора, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура КлиринговаяСистемаНачалоВыбора_Завершение(Результат, ДополнительныеПарметры) Экспорт 
	Если Результат <> Неопределено Тогда 
		Объект.КлиринговаяСистема = Результат.Значение;
		КлиринговаяСистемаПриИзменении(Элементы.КлиринговаяСистема);
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ПрямыеРасчетыПриИзменении(Элемент)
	УстановитьОтображение_Страница_БанкиПосредники();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_БанкиПосредники

&НаКлиенте
Процедура КомандаСделатьОсновнымКоррСчет(Команда)
	Если Элементы.СписокСчетаКорреспонденты.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Объект.ОсновнойКоррСчет = Элементы.СписокСчетаКорреспонденты.ТекущиеДанные.Ссылка Тогда
		Объект.ОсновнойКоррСчет = Неопределено;
	Иначе
		Объект.ОсновнойКоррСчет = Элементы.СписокСчетаКорреспонденты.ТекущиеДанные.Ссылка;
	КонецЕсли; 
	
	УстановитьОтображение_СделатьОсновным_КоррСчет();
КонецПроцедуры

&НаКлиенте
Процедура СписокСчетаКорреспондентыПриАктивизацииСтроки(Элемент)
	УстановитьОтображение_СделатьОсновным_КоррСчет();
КонецПроцедуры

&НаКлиенте
Процедура СписокСчетаКорреспондентыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если НЕ Копирование Тогда
		Отказ = Истина;
		
		Отбор = Новый Структура;
		Отбор.Вставить("РЭЙ_НеЯвляетсяРезидентом", Истина);
		
		ПараметрыОткрытия = Новый Структура("Отбор", Отбор);
		ПараметрыОткрытия.Вставить("Отображение", "Список"); 		
		
		ФормаВыбора	= ПолучитьФорму("Справочник." + РЭЙ_Универсализация.ИмяСправочника_Банки() + ".ФормаВыбора", ПараметрыОткрытия);
		ФормаВыбора.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбора.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("СписокСчетаКорреспондентыПередНачаломДобавления_Завершение", ЭтотОбъект);
		ФормаВыбора.Элементы.Список.Отображение	= ОтображениеТаблицы.Список;
		
		ЭлементОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ПравоеЗначение = Объект.Банк;
		
		ФормаВыбора.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокСчетаКорреспондентыПередНачаломДобавления_Завершение(Результат, ДополнительныеПараметры) Экспорт
	БанкКорреспондент = Результат;
	
	Если Не ЗначениеЗаполнено(БанкКорреспондент) Тогда 
		Возврат;
	КонецЕсли;	
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Владелец", Объект.Банк);
	ЗначенияЗаполнения.Вставить("Банк", БанкКорреспондент);
	ЗначенияЗаполнения.Вставить("ВалютаДенежныхСредств", Объект.ВалютаДенежныхСредств);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.РЭЙ_БанковскиеСчетаВалютные.ФормаОбъекта", ПараметрыОткрытия);
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиСобытийСтраницы_РазрешенияЦБ

&НаКлиенте
Процедура СписокРазрешенияВалютногоКонтроляПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Параметры.Ключ.Пустая() Тогда
		Отказ = Истина;
		
		ТекстВопроса = "Элемент еще не записан. Записать?";
		ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ЗаписьТекущегоЭлементаПриДобавленииСтроки", ЭтотОбъект, Элементы.СписокГрафикПогашения);
		ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокРазрешенияВалютногоКонтроляПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда 
		Элемент.ТекущиеДанные.Объект = Объект.Ссылка;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область Отображение

&НаСервере
Процедура ДобавитьУсловноеОформление_СчетаКорреспонденты()
	// Выделить жирным основной корр. счет
    ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Использование = Истина;
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("СписокСчетаКорреспонденты");
	
	ПолеОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ПолеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокСчетаКорреспонденты.Ссылка");
    ПолеОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОсновнойКоррСчет");
    ПолеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,, Истина));
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ВалютаДенежныхСредств()
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка." + РЭЙ_Универсализация.ИмяСправочника_Банки()) Тогда
		Элементы.ВалютаДенежныхСредств.ТолькоПросмотр = Ложь;		
	Иначе
		Элементы.ВалютаДенежныхСредств.ТолькоПросмотр = Истина;		
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_НаименованиеВидаВладельца()
	НаименованиеВидаВладельца = Объект.Владелец.Метаданные().Синоним;		
КонецПроцедуры	

&НаСервере
Процедура УстановитьОтображение_НомерСчета()
	Если Объект.ИБАН Тогда
		Элементы.ДекорацияНомерСчета.Заголовок = "IBAN:";
	Иначе
		Элементы.ДекорацияНомерСчета.Заголовок = "Номер счета:";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка." + РЭЙ_Универсализация.ИмяСправочника_Банки()) Тогда
		Элементы.НомерСчета.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.НомерСчета.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтображение_СделатьОсновным_КоррСчет()
	текКнопка = Элементы.СписокСчетаКорреспондентыКомандаСделатьОсновным;
	Если Элементы.СписокСчетаКорреспонденты.ТекущиеДанные = Неопределено Тогда
		текКнопка.Доступность = Ложь;
		текКнопка.Пометка = Ложь;	
	Иначе	
		текКнопка.Доступность = Истина;
		текКнопка.Пометка = (Элементы.СписокСчетаКорреспонденты.ТекущиеДанные.Ссылка = Объект.ОсновнойКоррСчет);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ПрямыеРасчеты()
	Если ТипЗнч(Объект.Владелец) <> Тип("СправочникСсылка." + РЭЙ_Универсализация.ИмяСправочника_Банки()) Тогда
		Элементы.ПрямыеРасчеты.Видимость = Истина;
	Иначе
		Элементы.ПрямыеРасчеты.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_БанкиПосредники()
	Если (Не Объект.ПрямыеРасчеты) И ТипЗнч(Объект.Владелец) <> Тип("СправочникСсылка." + РЭЙ_Универсализация.ИмяСправочника_Банки()) Тогда
		Элементы.СтраницаБанкиПосредники.Видимость = Истина;
	Иначе
		Элементы.СтраницаБанкиПосредники.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_Страница_РазрешенияЦБ()
	текВидимость = Ложь;
	Если Объект.Банк.РЭЙ_НеЯвляетсяРезидентом Тогда
		Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка." + РЭЙ_Универсализация.ИмяСправочника_Банки()) Тогда
			Если Объект.Владелец.РЭЙ_НеЯвляетсяРезидентом = Ложь Тогда
				текВидимость = Истина;
			КонецЕсли;
		ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
			Если Объект.Владелец.Метаданные().Реквизиты.Найти("ИностраннаяОрганизация") <> Неопределено Тогда
				Если Объект.Владелец.ИностраннаяОрганизация = Ложь Тогда
					текВидимость = Истина;
				КонецЕсли;
			Иначе
				текВидимость = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.СтраницаРазрешенияЦБ.Видимость = текВидимость;
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЗаполения

&НаСервере
Процедура ЗаполнитьНаОсновании(ДанныеЗаполнения, Отказ)
	Если СтрНайти(ДанныеЗаполнения.Метаданные().Имя, "БанковскиеСчета") > 0 Тогда
		Объект.БанковскийСчет = ДанныеЗаполнения;
		Если ДанныеЗаполнения.Метаданные().Реквизиты.Найти("ВидСчета") <> Неопределено Тогда
			Объект.ВидСчета = ДанныеЗаполнения.ВидСчета;
		КонецЕсли;
		Объект.Владелец = ДанныеЗаполнения.Владелец;
		Объект.Банк = ДанныеЗаполнения.Банк;
		Объект.ВалютаДенежныхСредств = ДанныеЗаполнения.ВалютаДенежныхСредств;
		Объект.Владелец = ДанныеЗаполнения.Владелец;
		
		Объект.НомерСчета = ДанныеЗаполнения.НомерСчета;
		
		Если ДанныеЗаполнения.Метаданные().Реквизиты.Найти("МесяцПрописью") <> Неопределено Тогда
			Объект.МесяцПрописью = ДанныеЗаполнения.МесяцПрописью;
		КонецЕсли;
		Если ДанныеЗаполнения.Метаданные().Реквизиты.Найти("ДатаОткрытия") <> Неопределено Тогда
			Объект.ДатаОткрытия = ДанныеЗаполнения.ДатаОткрытия;
		КонецЕсли;
		Если ДанныеЗаполнения.Метаданные().Реквизиты.Найти("ДатаЗакрытия") <> Неопределено Тогда
			Объект.ДатаЗакрытия = ДанныеЗаполнения.ДатаЗакрытия;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаписьТекущегоЭлементаПриДобавленииСтроки(Результат, ЭлементУправления) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Если Записать() Тогда 
			Если ЭлементУправления <> Неопределено Тогда
				ЭлементУправления.ДобавитьСтроку();
			КонецЕсли;	
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьНаименование()
	Если Объект.Наименование = АвтоНаименование Тогда
		Объект.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	АвтоНаименование = СформироватьАвтоНаименование();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНовыйЭлемент()	
	Если Не ЗначениеЗаполнено(Объект.ВидСчета) Тогда
		Объект.ВидСчета = Элементы.ВидСчета.СписокВыбора[0];
	КонецЕсли;
	
	Если ТипЗнч(Объект.Владелец) <> Тип("СправочникСсылка." + РЭЙ_Универсализация.ИмяСправочника_Банки()) Тогда
		Объект.ПрямыеРасчеты = Объект.Банк.РЭЙ_НеЯвляетсяРезидентом;
	Иначе
		Объект.ПрямыеРасчеты = Истина;
	КонецЕсли;
	
	УстановитьИБАН();
	УстановитьКлиринговуюСистему();
	
	Объект.Наименование = СформироватьАвтоНаименование();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВидовСчетов()
	СписокВидСчета = Элементы.ВидСчета.СписокВыбора;
	Если ТипЗнч(Объект.Владелец) <> Тип("СправочникСсылка." + РЭЙ_Универсализация.ИмяСправочника_Банки()) Тогда
		СписокВидСчета.Добавить("Расчетный");
		СписокВидСчета.Добавить("Депозитный");
		СписокВидСчета.Добавить("Ссудный");
		СписокВидСчета.Добавить("Аккредитивный");
		СписокВидСчета.Добавить("Текущий");
		СписокВидСчета.Добавить("Транзитный");
		СписокВидСчета.Добавить("Карточный");
		СписокВидСчета.Добавить("Контокоррентный");
		СписокВидСчета.Добавить("Иной");
	КонецЕсли;
	СписокВидСчета.Добавить("Корреспондентский");
КонецПроцедуры

&НаКлиенте
Процедура КонтрольКорректности_НомерСчетаОбычный()
	СписокЗапрещенныхСимоволов = Новый СписокЗначений();
	Если Найти(Объект.НомерСчета, " ") <> 0 Тогда
		СписокЗапрещенныхСимоволов.Добавить("пробел");
	КонецЕсли;
	
	Если Найти(Объект.НомерСчета, "-") <> 0 Тогда
		СписокЗапрещенныхСимоволов.Добавить("тире");
	КонецЕсли;
	
	Если Найти(Объект.НомерСчета, "\") <> 0 Тогда
		СписокЗапрещенныхСимоволов.Добавить("прямой слеш");
	КонецЕсли;
	
	Если Найти(Объект.НомерСчета, "/") <> 0 Тогда
		СписокЗапрещенныхСимоволов.Добавить("обратный слеш");
	КонецЕсли;
	
	Если СписокЗапрещенныхСимоволов.Количество() = 0 Тогда
		ЗаполнитьНаименование();
	Иначе
		Если СписокЗапрещенныхСимоволов.Количество() = 1 Тогда
			ТекстВопроса = 
			"В номере счета обнаружен символ " + СписокЗапрещенныхСимоволов[0].Значение + ".
			|Удалить недопустимый символ?";
		Иначе
			ТекстВопроса = "В номере счета обнаружены символы: ";
			Для Каждого текЗапрещенныйСимвол из СписокЗапрещенныхСимоволов Цикл
				ТекстВопроса = ТекстВопроса + "
				|" + текЗапрещенныйСимвол.Значение;
			КонецЦикла;
			ТекстВопроса = ТекстВопроса + ".
			|Удалить недопустимые символы?";
		Конецесли;	
		
		ОписаниеОповещения = Новый ОписаниеОповещения("КонтрольКорректности_НомерСчетаОбычныйЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонтрольКорректности_НомерСчетаОбычныйЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
        Объект.НомерСчета = СтрЗаменить(Объект.НомерСчета, " ", "");
        Объект.НомерСчета = СтрЗаменить(Объект.НомерСчета, "-", "");
        Объект.НомерСчета = СтрЗаменить(Объект.НомерСчета, "/", "");
        Объект.НомерСчета = СтрЗаменить(Объект.НомерСчета, "\", "");
    КонецЕсли;
	ЗаполнитьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура КонтрольКорректности_НомерСчетаИБАН()
	//Проверка длины
	Если ДлинаНомераИБАН > 0 Тогда
		Если СтрДлина(СокрЛП(Объект.НомерСчета)) <> ДлинаНомераИБАН Тогда
			ПоказатьПредупреждение(, "Разрядная сетка номера счета IBAN не соответствует длине в " + ДлинаНомераИБАН + " символов, определяемой стандартом ISO 13616 для страны " + ПолучитьСтрануБанка() + ".");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//Проверка недопустимых символов
	текНомерСчета = Объект.НомерСчета;
	Если ДлинаНомераИБАН = 0 Тогда
		текНомерСчета = СокрЛП(текНомерСчета);
	КонецЕсли;
		
	Для т = 1 По СтрДлина(текНомерСчета) Цикл
		Если (КодСимвола(Сред(текНомерСчета, т, 1)) >= КодСимвола("0") И КодСимвола(Сред(текНомерСчета, т, 1)) <= КодСимвола("9")) ИЛИ
				(КодСимвола(Сред(текНомерСчета, т, 1)) >= КодСимвола("A") И КодСимвола(Сред(текНомерСчета, т, 1)) <= КодСимвола("Z")) Тогда
		Иначе
			ПоказатьПредупреждение(, "В номере счета IBAN обнаружен недопустимый символ """ + Сред(текНомерСчета, т, 1) + """.");
			Возврат;
		КонецЕсли;
	КонецЦикла;
		
	//Проверка контрольного числа
	Если СтрДлина(текНомерСчета) > 4 Тогда
		СтрокаЦифр = "";
		Для т = 5 По СтрДлина(текНомерСчета) Цикл
			Если (КодСимвола(Сред(текНомерСчета, т, 1)) >= КодСимвола("0") И КодСимвола(Сред(текНомерСчета, т, 1)) <= КодСимвола("9")) Тогда
				СтрокаЦифр = СтрокаЦифр + Сред(текНомерСчета, т, 1);
			Иначе
				СтрокаЦифр = СтрокаЦифр + (КодСимвола(Сред(текНомерСчета, т, 1)) - КодСимвола("A") + 10);
			КонецЕсли;
		КонецЦикла;
		Для т = 1 По 4 Цикл
			Если (КодСимвола(Сред(текНомерСчета, т, 1)) >= КодСимвола("0") И КодСимвола(Сред(текНомерСчета, т, 1)) <= КодСимвола("9")) Тогда
				СтрокаЦифр = СтрокаЦифр + Сред(текНомерСчета, т, 1);
			Иначе
				СтрокаЦифр = СтрокаЦифр + (КодСимвола(Сред(текНомерСчета, т, 1)) - КодСимвола("A") + 10);
			КонецЕсли;
		КонецЦикла;
		
		ИспользуемоеКоличествоЦифр = 9;
		КонтрольноеЧисло = 0;
		Пока СтрДлина(СтрокаЦифр) > 0 Цикл
			текЧисло = Число("" + КонтрольноеЧисло + Сред(СтрокаЦифр, 1, ИспользуемоеКоличествоЦифр));
			КонтрольноеЧисло = текЧисло % 97;
			СтрокаЦифр = Сред(СтрокаЦифр, ИспользуемоеКоличествоЦифр + 1);
			ИспользуемоеКоличествоЦифр = 7;
		КонецЦикла;
		Если КонтрольноеЧисло <> 1 Тогда
			ПоказатьПредупреждение(, "Номер счета IBAN не прошел проверку на контрольное число. Проверьте корректность ввода символов!");
		КонецЕсли;			
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтрануБанка()
	Возврат Объект.Банк.РЭЙ_Страна;
КонецФункции

&НаСервере
Процедура ПрочитатьНаборЗаписей(ИмяРеквизитаФормы, ИмяОтбора, ЗначениеОтбора)
	НаборЗаписей = РеквизитФормыВЗначение(ИмяРеквизитаФормы);
	НаборЗаписей.Отбор[ИмяОтбора].Установить(ЗначениеОтбора);
	НаборЗаписей.Прочитать();
	ЗначениеВРеквизитФормы(НаборЗаписей, ИмяРеквизитаФормы);	
КонецПроцедуры	

&НаСервере
Процедура ПрочитатьНаборыЗаписей()
	ПрочитатьНаборЗаписей("СписокРазрешенияВалютногоКонтроля", "Объект", Параметры.Ключ);
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДополнительныеРеквизиты_КлиринговаяСистема()
	тКодБанкаВКлирСистеме = "";
	тСтрока = Объект.Банк.РЭЙ_КлиринговыеСистемы.Найти(Объект.КлиринговаяСистема, "КлиринговаяСистема");
	Если тСтрока <> Неопределено Тогда
		тКодБанкаВКлирСистеме = СокрЛП(тСтрока.КодВКлиринговойСистеме);
	КонецЕсли;
	КодВКлиринговойСистеме = тКодБанкаВКлирСистеме;	
КонецПроцедуры

&НаСервере
Процедура Прочитать_СписокСчетаКорреспонденты()
	СписокСчетаКорреспонденты.Отбор.Элементы.Очистить();
	
	ЭлементОтбора = СписокСчетаКорреспонденты.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
	ЭлементОтбора.ПравоеЗначение = Объект.Банк;
	
	ЭлементОтбора = СписокСчетаКорреспонденты.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВалютаДенежныхСредств");
	ЭлементОтбора.ПравоеЗначение = Объект.ВалютаДенежныхСредств;
КонецПроцедуры

&НаСервере
Процедура УстановитьИБАН()
	Если Объект.ВалютаДенежныхСредств.Код = "978" И БанкИспользуетИБАН() Тогда
		Если Объект.ИБАН = Ложь Тогда
			Объект.ИБАН = Истина;
			УстановитьМаскуНомерСчета();
			УстановитьНомерСчета();
			УстановитьОтображение_НомерСчета();
		КонецЕсли;
	Иначе
		Если Объект.ИБАН = Истина Тогда
			Объект.ИБАН = Ложь;
			УстановитьМаскуНомерСчета();
			УстановитьНомерСчета();
			УстановитьОтображение_НомерСчета();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьКлиринговуюСистему()
	Если Объект.КлиринговаяСистема.Валюта <> Объект.ВалютаДенежныхСредств Тогда
		Объект.КлиринговаяСистема = Неопределено;
		ПрочитатьДополнительныеРеквизиты_КлиринговаяСистема();
	КонецЕсли;
	
	Если Объект.Банк.РЭЙ_ОсновнаяКлиринговаяСистема.Валюта = Объект.ВалютаДенежныхСредств Тогда
		Если Не ЗначениеЗаполнено(Объект.КлиринговаяСистема) Тогда
			Объект.КлиринговаяСистема = Объект.Банк.РЭЙ_ОсновнаяКлиринговаяСистема;
			ПрочитатьДополнительныеРеквизиты_КлиринговаяСистема();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьМаскуНомерСчета()
	Если Не Элементы.НомерСчета.ТолькоПросмотр Тогда
		Если Объект.ИБАН Тогда
			МаскаВвода = "^^";
			Если ДлинаНомераИБАН > 0 Тогда
				текДлинаНомераСчета = ДлинаНомераИБАН;
			Иначе
				текДлинаНомераСчета = Объект.Ссылка.Метаданные().Реквизиты.НомерСчета.Тип.КвалификаторыСтроки.Длина;
			КонецЕсли;
			Для т = 3 по текДлинаНомераСчета Цикл
				МаскаВвода = МаскаВвода + "U";
			КонецЦикла;
			Элементы.НомерСчета.Маска = МаскаВвода;
		Иначе
			Элементы.НомерСчета.Маска = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьНомерСчета()
	Если Не Элементы.НомерСчета.ТолькоПросмотр Тогда
		Если Объект.ИБАН Тогда
			Объект.НомерСчета = Объект.Банк.РЭЙ_Страна.КодАльфа2;
		Иначе
			Объект.НомерСчета = "";
		КонецЕсли;
		ЗаполнитьНаименование();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция БанкИспользуетИБАН()
	Результат = Ложь;
	Если ЗначениеЗаполнено(Объект.Банк.РЭЙ_Страна) Тогда
		Если Объект.Банк.РЭЙ_Страна <> Справочники.СтраныМира.Россия Тогда
			Если ЗначениеЗаполнено(Объект.Банк.РЭЙ_Страна.КодАльфа3) Тогда
				МакетИБАН = Справочники.РЭЙ_БанковскиеСчетаВалютные.ПолучитьМакет("РЭЙ_IBAN");
				
				текЯчейка = МакетИБАН.НайтиТекст(Объект.Банк.РЭЙ_Страна.КодАльфа3,, МакетИБАН.Область(,5,,5), Истина, Ложь, Истина, Истина);
				
				Если текЯчейка <> Неопределено Тогда
					Результат = Истина;
					ДлинаНомераИБАН = Число(МакетИБАН.Область(текЯчейка.Верх, 6).Текст);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Результат = Ложь Тогда
		ДлинаНомераИБАН = 0;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервере
Функция СформироватьАвтоНаименование()
	СтрокаНаименования = РЭЙ_СлужебныйСервер.СформироватьНаименованиеВалютногоБанковскогоСчета(Объект);
	СтрокаНаименования = Лев(СтрокаНаименования, 100);
	
	Элементы.Наименование.СписокВыбора.Очистить();
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
	Возврат СтрокаНаименования;
КонецФункции

&НаСервере
Функция СформироватьСписокИсключаемыхВалют()
	СписокИсключаемыхВалют = Новый СписокЗначений();
	СписокИсключаемыхВалют.Добавить(Константы.ВалютаРегламентированногоУчета.Получить());
	
	ЗапросУЕ = Новый Запрос();
	ЗапросУЕ.Текст = 
	"ВЫБРАТЬ
	|	Валюты.Ссылка
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	Валюты.Наименование ПОДОБНО ""%""+""у"" + ""%"" + ""е"" + ""%""";
	ВыборкаУЕ = ЗапросУЕ.Выполнить().Выбрать();
	Пока ВыборкаУЕ.Следующий() Цикл
		СписокИсключаемыхВалют.Добавить(ВыборкаУЕ.Ссылка);
	КонецЦикла;
	
	Возврат СписокИсключаемыхВалют;
КонецФункции

&НаСервере
Функция СформироватьСписокКлиринговыхСистем()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БанкиКлиринговыеСистемы.КлиринговаяСистема
	|ИЗ
	|	Справочник." + РЭЙ_Универсализация.ИмяСправочника_Банки() + ".РЭЙ_КлиринговыеСистемы КАК БанкиКлиринговыеСистемы
	|ГДЕ
	|	БанкиКлиринговыеСистемы.Ссылка = &Банк
	|	И БанкиКлиринговыеСистемы.КлиринговаяСистема.Валюта = &Валюта";
	Запрос.УстановитьПараметр("Банк", Объект.Банк);
	Запрос.УстановитьПараметр("Валюта", Объект.ВалютаДенежныхСредств);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КлиринговаяСистема");
КонецФункции

#КонецОбласти
