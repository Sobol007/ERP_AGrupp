
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	CRM_ОбщегоНазначенияСервер.СбросНастроекПоложенияОкна(ЭтотОбъект);
	
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ДанныеУсловий = ОбъектЗначение.НастройкиУсловий.Получить();
	АдресНастроекУсловий = ПоместитьВоВременноеХранилище(ДанныеУсловий, УникальныйИдентификатор);		
	ДанныеДействий = ОбъектЗначение.НастройкиДействий.Получить();
	АдресНастроекДействий = ПоместитьВоВременноеХранилище(ДанныеДействий, УникальныйИдентификатор);	
	СхемаСКД = ОбъектЗначение.ХранилищеСхемыКомпоновкиДанных.Получить();
	Если СхемаСКД = Неопределено Тогда 
		СхемаСКД = Новый СхемаКомпоновкиДанных();
	КонецЕсли;	
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
	НастройкиСКД = ОбъектЗначение.ХранилищеНастроекКомпоновкиДанных.Получить();
	Если НастройкиСКД = Неопределено Тогда 
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
		НастройкиСКД = КомпоновщикНастроек.Настройки;
	КонецЕсли;
	АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
	КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпановщикНастроекУсловий.ЗагрузитьНастройки(НастройкиСКД);
	КомпановщикНастроекУсловий.Восстановить();
	
	Если Параметры.Свойство("УсловиеСрабатывания") Тогда
		Объект.УсловиеСрабатывания = Параметры.УсловиеСрабатывания;
	КонецЕсли;
	Если Параметры.Свойство("СостояниеИнтереса") Тогда
		Объект.СостояниеИнтереса = Параметры.СостояниеИнтереса;
		НовыеПараметрыВыбора = Новый Массив;
		НовыеПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Родитель", Параметры.СостояниеИнтереса.Родитель));
		Элементы.СостояниеИнтереса.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметрыВыбора);
		Элементы.СостояниеИнтереса.Видимость = Ложь;
		Элементы.ВключатьВЛоги.Видимость = Ложь;
		Элементы.Наименование.Видимость = Ложь;
		Элементы.Декорация1.Ширина = 5;
		Элементы.Декорация2.Ширина = 5;
	Иначе	
		ИдентификаторИнтерес = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_Интерес);
		Элементы.СостояниеИнтереса.Видимость = (Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыбореНовогоСостоянияИнтереса)
			ИЛИ (Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриИзмененииТекущегоСостоянияИнтереса)
			ИЛИ (Объект.УсловиеСрабатывания.ОбъектДействия = ИдентификаторИнтерес)
			ИЛИ (Объект.УсловиеСрабатывания.ОбъектыОбработки.НайтиСтроки(Новый Структура("ОбъектОбработки", ИдентификаторИнтерес)).Количество() > 0);
		Элементы.Декорация1.Ширина = 12;
		Элементы.Декорация2.Ширина = 12;
	КонецЕсли;
	Если Параметры.Свойство("Действие") Тогда
		Объект.Действие = Параметры.Действие;
	КонецЕсли;
	
	Если Параметры.Свойство("ФильтрОбъектДействия") Тогда
		НовыеПараметрыВыбора = Новый Массив;
		НовыеПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ОбъектДействия", Параметры.ФильтрОбъектДействия));
		Элементы.УсловиеСрабатывания.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметрыВыбора);
	КонецЕсли;
	Элементы.Действует.Доступность = Не Объект.ПометкаУдаления;
	Если Не ЗначениеЗаполнено(Объект.ПредставлениеНастроекДействия) Тогда
		Объект.ПредставлениеНастроекДействия = НСтр("ru = 'Настройки действия'");
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.ПредставлениеНастроекУсловия) Тогда
		Объект.ПредставлениеНастроекУсловия = НСтр("ru = 'Настройки условия'");
	КонецЕсли;
	Элементы.ПредставлениеНастроекДействия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекДействия);
	Элементы.ПредставлениеНастроекУсловия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекУсловия);
	Элементы.ГруппаОтложеноНа.Видимость = Объект.ОтложенноеВыполнение;
	Элементы.ГруппаВыполнятьВСостоянииИнтереса.Видимость = (ЗначениеЗаполнено(Объект.СостояниеИнтереса) И (Объект.ОтложенноеВыполнение ИЛИ ЗначениеЗаполнено(Объект.ПовторятьПриОшибке)));
	Элементы.ГруппаНастройкиТриггераПриЗаписи.Видимость = (Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи ИЛИ Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеВидимостьюЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьУсловия(Команда)
	Если НЕ Объект.УсловиеСрабатывания.Пустая() Тогда
		Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД") Тогда
			ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("НастроитьУсловияЗавершениеСКД", ЭтотОбъект);
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("АдресСхемыКомпоновкиДанных", АдресСхемыКомпоновкиДанных);
			ПараметрыОткрытия.Вставить("НастройкиСКД", КомпановщикНастроекУсловий.Настройки);
			ОткрытьФорму("Справочник.CRM_Триггеры.Форма.ФормаРЕдактированияСКД", ПараметрыОткрытия, ЭтаФорма,,,, ОписаниеОповещенияЗавершения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе	
			ВернутьОбработкуУсловий();
			ПараметрыОткрытия = Новый Структура;
			ПередаваемыеНастройки = ПолучитьИзВременногоХранилища(АдресНастроекУсловий);
			ПараметрыОткрытия.Вставить("Настройки", ?(ПередаваемыеНастройки = Неопределено, Новый Структура, ПередаваемыеНастройки));
			ПараметрыОткрытия.Вставить("УсловиеСрабатывания", Объект.УсловиеСрабатывания);
			ОповещениеЗакрытия = Новый ОписаниеОповещения("НастроитьУсловияЗавершение", ЭтотОбъект);
			
			ФормаНастройки = ПолучитьФорму("ВнешняяОбработка." + CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "НазваниеОбработки") + ".Форма", ПараметрыОткрытия, ЭтаФорма);
			ФормаНастройки.АвтоЗаголовок = Ложь;
			ФормаНастройки.Заголовок = НСтр("ru='Настройка условия';en='Setting the condition'")+" ("+Строка(Объект.УсловиеСрабатывания)+")";
			ФормаНастройки.ОписаниеОповещенияОЗакрытии = ОповещениеЗакрытия;
			ФормаНастройки.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			ФормаНастройки.Открыть();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействие(Команда)
	Если НЕ Объект.Действие.Пустая() Тогда
		ВернутьОбработкуДействия();
		ПараметрыОткрытия = Новый Структура;
		ПередаваемыеНастройки = ПолучитьИзВременногоХранилища(АдресНастроекДействий);
		Если ПередаваемыеНастройки = Неопределено Тогда
			ПередаваемыеНастройки = Новый Структура();
			
		КонецЕсли;	
		ПередаваемыеНастройки.Вставить("УсловиеСрабатывания", Объект.УсловиеСрабатывания);
		ПараметрыОткрытия.Вставить("Настройки", ПередаваемыеНастройки);
		ОповещениеЗакрытия = Новый ОписаниеОповещения("НастроитьДействияЗавершение", ЭтотОбъект);
		ФормаНастройки = ПолучитьФорму("ВнешняяОбработка." + CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "НазваниеОбработки") + ".Форма", ПараметрыОткрытия, ЭтаФорма);
		ФормаНастройки.АвтоЗаголовок = Ложь;
		ФормаНастройки.Заголовок = НСтр("ru = 'Настройка действия'")+" ("+Строка(Объект.Действие)+")";
		ФормаНастройки.ОписаниеОповещенияОЗакрытии = ОповещениеЗакрытия;
		ФормаНастройки.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаНастройки.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
		Если Результат.Свойство("ПредставлениеНастроекДействия") Тогда
			Объект.ПредставлениеНастроекДействия = Результат.ПредставлениеНастроекДействия;
			Элементы.ПредставлениеНастроекДействия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекДействия);
		КонецЕсли;
		Если Объект.Ссылка.Пустая() И Результат.Свойство("УсловиеСрабатыванияПоУмолчанию") Тогда
			УстановитьУсловиеПоУмолчанию(Результат.УсловиеСрабатыванияПоУмолчанию);
			УсловиеСрабатыванияПриИзменении(Неопределено);
		КонецЕсли;
		Если НЕ Открыта() Тогда
			Записать();
			Оповестить("ЗаписанТриггер", Объект.СостояниеИнтереса);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.НастройкиУсловий = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекУсловий));
	ТекущийОбъект.НастройкиДействий = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекДействий));
	ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных));
	ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
КонецПроцедуры

&НаСервере
Процедура УсловиеСрабатыванияПриИзмененииНаСервере()
	
	Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД") Тогда
		ОбъектЗначение = РеквизитФормыВЗначение("Объект");
		СхемаСКД = ОбъектЗначение.УсловиеСрабатывания.ХранилищеСхемыКомпоновкиДанных.Получить();
		Если СхемаСКД = Неопределено Тогда 
			СхемаСКД = Новый СхемаКомпоновкиДанных();
		КонецЕсли;
		АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
		НастройкиСКД = ОбъектЗначение.УсловиеСрабатывания.ХранилищеНастроекКомпоновкиДанных.Получить();
		Если НастройкиСКД = Неопределено Тогда 
			КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
			КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
			КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
			НастройкиСКД = КомпоновщикНастроек.Настройки;
		КонецЕсли;
		АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
		КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
		КомпановщикНастроекУсловий.ЗагрузитьНастройки(НастройкиСКД);
		КомпановщикНастроекУсловий.Восстановить();
	Иначе	
		ВернутьОбработкуУсловий();
	КонецЕсли;
	ИдентификаторИнтерес = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_Интерес);
	Элементы.СостояниеИнтереса.Видимость = (Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыбореНовогоСостоянияИнтереса
		ИЛИ Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриИзмененииТекущегоСостоянияИнтереса
		ИЛИ Объект.УсловиеСрабатывания.ОбъектДействия = ИдентификаторИнтерес
		ИЛИ Объект.УсловиеСрабатывания.ОбъектыОбработки.НайтиСтроки(Новый Структура("ОбъектОбработки", ИдентификаторИнтерес)).Количество() > 0);
	Если Элементы.СостояниеИнтереса.Видимость Тогда
		Элементы.Декорация1.Ширина = 12;
		Элементы.Декорация2.Ширина = 12;
	Иначе	
		Элементы.Декорация1.Ширина = 5;
		Элементы.Декорация2.Ширина = 5;
	КонецЕсли;
	Объект.РазрешитьПовторноеСрабатывание = (Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриВыбореНовогоСостоянияИнтереса
		ИЛИ Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПриИзмененииТекущегоСостоянияИнтереса	
		ИЛИ Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения);	
	Объект.ВключатьВЛоги = (Объект.УсловиеСрабатывания.ОбъектДействия = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Метаданные.Документы.CRM_Интерес));	
	Если ЗначениеЗаполнено(Объект.СостояниеИнтереса) И НЕ Элементы.СостояниеИнтереса.Видимость Тогда
		Объект.СостояниеИнтереса = Справочники.CRM_СостоянияИнтересов.ПустаяСсылка();
	КонецЕсли;
	Объект.Наименование = Объект.Действие.Наименование+", "+НРег(Лев(Объект.УсловиеСрабатывания.Наименование,1))+Сред(Объект.УсловиеСрабатывания.Наименование, 2);
	Элементы.ГруппаНастройкиТриггераПриЗаписи.Видимость = (Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ПриЗаписи ИЛИ Объект.УсловиеСрабатывания.Событие = Перечисления.CRM_СобытияТриггеров.ОбработкаПроведения);
			
КонецПроцедуры

&НаКлиенте
Процедура УсловиеСрабатыванияПриИзменении(Элемент) Экспорт
	
	Если НЕ Объект.УсловиеСрабатывания.Пустая() Тогда
		
		Если Объект.УсловиеСрабатывания <> ПредопределенноеЗначение("Справочник.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию") Тогда
			Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД") Тогда
				УсловиеСрабатыванияПриИзмененииНаСервере();
			Иначе
				
				#Если Не ВебКлиент Тогда
					Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "РежимОтладки") Тогда
						ИмяФайлаОбработки = ПолучитьИмяФайлаОбработкиУсловий();
						НачатьПомещениеФайла(Новый ОписаниеОповещения("ИзменитьУсловияПродолжение", ЭтотОбъект), АдресОбработкиУсловий, ИмяФайлаОбработки, Ложь, УникальныйИдентификатор);
					Иначе
						АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
						УсловиеСрабатыванияПриИзмененииНаСервере();
						УправлениеВидимостьюЭлементов();
					КонецЕсли;
				#Иначе
					АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
					УсловиеСрабатыванияПриИзмененииНаСервере();
					УправлениеВидимостьюЭлементов();
				#КонецЕсли	
			КонецЕсли;
		КонецЕсли;
	Иначе
		АдресОбработкиУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
		АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	КонецЕсли;
	Объект.ПредставлениеНастроекУсловия = НСтр("ru = 'Настройки условия'");
	Элементы.ПредставлениеНастроекУсловия.Высота = 1;
	УправлениеВидимостьюЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьУсловияПродолжение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	АдресОбработкиУсловий = Адрес; 
	АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	УсловиеСрабатыванияПриИзмененииНаСервере();
	УправлениеВидимостьюЭлементов();
КонецПроцедуры

&НаСервере
Процедура УсловиеСрабатыванияОчисткаНаСервере()
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	СхемаСКД = Новый СхемаКомпоновкиДанных();
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
	НастройкиСКД = КомпоновщикНастроек.Настройки;
	АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
	КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпановщикНастроекУсловий.ЗагрузитьНастройки(НастройкиСКД);
	КомпановщикНастроекУсловий.Восстановить();
	Если ЗначениеЗаполнено(Объект.УсловиеСрабатывания) Тогда
		// Элементы.ГруппаНастройки.Видимость = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД"); 
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УсловиеСрабатыванияОчистка(Элемент, СтандартнаяОбработка)
	УсловиеСрабатыванияОчисткаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНастроекДействияНажатие(Элемент, СтандартнаяОбработка)
	НастроитьДействие(Неопределено);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеНастроекУсловияНажатие(Элемент, СтандартнаяОбработка)
	НастроитьУсловия(Неопределено);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетОРаботе(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта", "Основной");
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
	ФормаРасшифровки = ПолучитьФорму("Отчет.CRM_РаботаТриггеров.Форма", ПараметрыФормы);
	ОтборТриггер = Новый ПолеКомпоновкиДанных("Триггер"); 
	Для каждого ЭлементОтбора из ФормаРасшифровки.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЭлементОтбора.ЛевоеЗначение = ОтборТриггер; 
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
			ЭлементОтбора.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	ФормаРасшифровки.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюЭлементов()
	ЭтоТриггерСобытия = (Объект.УсловиеСрабатывания <> ПредопределенноеЗначение("Справочник.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию"));
	Элементы.НастроитьРасписание.Видимость = НЕ ЭтоТриггерСобытия;
	Если НЕ Объект.УсловиеСрабатывания.Пустая() Тогда
		Элементы.ПредставлениеНастроекУсловия.Видимость = ЭтоТриггерСобытия;
	Иначе
		Элементы.ГруппаНастройки.Видимость = Ложь;	
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРасписаниеНаСервере(УникальныйИдентификаторЗадания)
	Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
		СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
		Если СписокЗаданий.Количество()>0 Тогда
			Возврат СписокЗаданий[0].Расписание;
		Иначе
			Возврат Новый РасписаниеРегламентногоЗадания;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ЗаписатьРасписаниеНаСервере(УникальныйИдентификаторЗадания, Расписание, Включен)
	Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
		СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
		Для Каждого Задание Из СписокЗаданий Цикл
			ПараметрыЗадания = Новый Структура("Использование", (Строка(Расписание) <> "один день; один раз в день" И Включен));
			ПараметрыЗадания.Вставить("Расписание", Расписание);
			РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
		КонецЦикла;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.УникальныйИдентификаторЗадания) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Триггер не записан, настройка расписания не доступна!';en='Trigger not recorded, schedule setting is not available!'"));
		Возврат;
	КонецЕсли;
	Расписание = ПолучитьРасписаниеНаСервере(Объект.УникальныйИдентификаторЗадания);
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	Если Расписание<>Неопределено Тогда
		ЗаписатьРасписаниеНаСервере(Объект.УникальныйИдентификаторЗадания, Расписание, Объект.Действует);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ВернутьОбработкуДействия()
	ОбработкаПроверки = ПолучитьДвоичныеДанныеИзХранилища("Действие", "ОбработкаДействия");
	// ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	// ОбработкаПроверки.Записать(ИмяВременногоФайла);
	//
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий"+"");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = ЛОЖЬ;                                            
	//
	// Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	АдресОбработкиДействий = ПоместитьВоВременноеХранилище(ОбработкаПроверки, УникальныйИдентификатор);
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресОбработкиДействий, Объект.Действие.НазваниеОбработки, Ложь, ПараметрыЗащиты), Ложь);
	Возврат Истина;
КонецФункции

&НаСервере
Функция ВернутьОбработкуУсловий()
	ОбработкаПроверки = ПолучитьДвоичныеДанныеИзХранилища("УсловиеСрабатывания", "ОбработкаПроверки");
	// ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	// ОбработкаПроверки.Записать(ИмяВременногоФайла);
	//
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий"+"");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = ЛОЖЬ;                                            
	//
	// Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	АдресОбработкиУсловий = ПоместитьВоВременноеХранилище(ОбработкаПроверки, УникальныйИдентификатор);
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресОбработкиУсловий, Объект.УсловиеСрабатывания.НазваниеОбработки, Ложь, ПараметрыЗащиты), Ложь);
	Возврат Истина;
КонецФункции

&НаСервере
Функция ПроверитьСовместимостьОбработки()
	Если Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию Тогда
		Возврат Истина;
	КонецЕсли;
	Если Объект.УсловиеСрабатывания.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сначала выберите условие срабатывания триггера";
		Сообщение.Сообщить();
		Объект.Действие = Справочники.CRM_ДействияТриггеров.ПустаяСсылка();
		Возврат Ложь;
	КонецЕсли;	
	ОбработкаПроверки = ПолучитьДвоичныеДанныеИзХранилища("Действие", "ОбработкаДействия");
	// ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	// ОбработкаПроверки.Записать(ИмяВременногоФайла);
	//
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий"+"");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = ЛОЖЬ;                                            
	//
	// Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	АдресОбработкиДействий = ПоместитьВоВременноеХранилище(ОбработкаПроверки, УникальныйИдентификатор);
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресОбработкиДействий, Объект.Действие.НазваниеОбработки, Ложь, ПараметрыЗащиты), Ложь);
	Если Объект.УсловиеСрабатывания.УдалитьТипОбъекта = "Документ" Тогда
		ТипОбъекта = "ДокументОбъект";	
	ИначеЕсли Объект.УсловиеСрабатывания.УдалитьТипОбъекта = "Справочник" Тогда
		ТипОбъекта = "СправочникОбъект";	
	ИначеЕсли Объект.УсловиеСрабатывания.УдалитьТипОбъекта = "Бизнес-процесс" Тогда
		ТипОбъекта = "БизнесПроцессОбъект";	
	ИначеЕсли Объект.УсловиеСрабатывания.УдалитьТипОбъекта = "Задача" Тогда
		ТипОбъекта = "ЗадачаОбъект";	
	КонецЕсли;
	ПроверяемыеТипы = Новый Массив;
	Если ЗначениеЗаполнено(Объект.УсловиеСрабатывания.ОбъектДействия) Тогда
		ПроверяемыйТип = Тип(ОбщегоНазначения.ВидОбъектаПоТипу(ТипЗнч(Объект.УсловиеСрабатывания.ОбъектДействия.ЗначениеПустойСсылки))
			+"Объект."+Объект.УсловиеСрабатывания.ОбъектДействия.Имя);
		ПроверяемыеТипы.Добавить(ПроверяемыйТип);
	Иначе
		Для каждого Строка из Объект.УсловиеСрабатывания.ОбъектыОбработки Цикл
			ПроверяемыйТип = Тип(ОбщегоНазначения.ВидОбъектаПоТипу(ТипЗнч(Строка.ОбъектОбработки.ЗначениеПустойСсылки))
				+"Объект."+Строка.ОбъектОбработки.Имя);
			ПроверяемыеТипы.Добавить(ПроверяемыйТип);
		КонецЦикла;
	КонецЕсли;
	Если Обработка.Метаданные().Реквизиты.Найти("ОбъектДействия") <> Неопределено Тогда
		Если CRM_ОбщегоНазначенияКлиентСервер.ПересечениеМножеств(Обработка.Метаданные().Реквизиты.ОбъектДействия.Тип.Типы(), ПроверяемыеТипы).Количество() > 0 Тогда
			Возврат Истина;
		Иначе
			Если Обработка.Метаданные().Реквизиты.ОбъектДействия.Тип.Типы().Количество() = 0 Тогда // проверка для произвольного типа
				Возврат Истина;
			КонецЕсли;	
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Данное действие не подходит для обработки триггера (несоответствие типов объектов обработки)";
			Сообщение.Сообщить();
			Объект.Действие = Справочники.CRM_ДействияТриггеров.ПустаяСсылка();
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;	
КонецФункции

&НаСервере
Процедура ДействиеПриИзмененииНаСервере()
	Если Объект.Действие <> Справочники.CRM_ДействияТриггеров.ПустаяСсылка() Тогда
		ПроверитьСовместимостьОбработки();
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
	КонецЕсли;
		Объект.Наименование = Объект.Действие.Наименование+", "+НРег(Лев(Объект.УсловиеСрабатывания.Наименование,1))+Сред(Объект.УсловиеСрабатывания.Наименование, 2);
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент) Экспорт
	Если НЕ Объект.Действие.Пустая() Тогда
	
		#Если Не ВебКлиент Тогда
			Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "РежимОтладки") Тогда
				ИмяФайлаОбработки = ПолучитьИмяФайлаОбработкиДействий();
				НачатьПомещениеФайла(Новый ОписаниеОповещения("ИзменитьДействиеПродолжение", ЭтотОбъект), "", ИмяФайлаОбработки, Ложь, УникальныйИдентификатор);
			Иначе
				АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
				ДействиеПриИзмененииНаСервере();
			КонецЕсли;
		#Иначе
			АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
			ДействиеПриИзмененииНаСервере();
		#КонецЕсли
		
		
	Иначе
		АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
	КонецЕсли;
	Объект.ПредставлениеНастроекДействия = НСтр("ru = 'Настройки действия'");
	Элементы.ПредставлениеНастроекДействия.Высота = 1;
	НастроитьДействие(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДействиеПродолжение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	АдресОбработкиДействий = Адрес; 
	АдресНастроекДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ДействиеПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяФайлаОбработкиУсловий()
	
	#Если Не ВебКлиент Тогда
		Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "РежимОтладки") Тогда
			ИмяВременногоФайла = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ПутьКОбработке");
		Иначе
			ДанныеФайла =  ПолучитьДвоичныеДанныеИзХранилища("УсловиеСрабатывания", "ОбработкаПроверки");
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
			ДанныеФайла.Записать(ИмяВременногоФайла);
		КонецЕсли;
	#Иначе
		ИмяВременногоФайла = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ПутьКОбработке");
	#КонецЕсли
	Возврат ИмяВременногоФайла;
КонецФункции	

&НаСервере
Процедура ОбновитьНастройкиСКД()
	КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпановщикНастроекУсловий.ЗагрузитьНастройки(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	КомпановщикНастроекУсловий.Восстановить();
КонецПроцедуры	

&НаКлиенте
Процедура НастроитьУсловияЗавершениеСКД(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
		ОбновитьНастройкиСКД();
		Объект.ПредставлениеНастроекУсловия = Строка(Результат.Отбор);
		Элементы.ПредставлениеНастроекУсловия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекУсловия);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьУсловияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
		Если Результат.Свойство("ПредставлениеНастроекУсловия") Тогда
			Если ЗначениеЗаполнено(Результат.ПредставлениеНастроекУсловия) Тогда
				Объект.ПредставлениеНастроекУсловия = Результат.ПредставлениеНастроекУсловия;
			Иначе
				Объект.ПредставлениеНастроекУсловия = НСтр("ru = 'Настройки условия'");
			КонецЕсли;
			Элементы.ПредставлениеНастроекУсловия.Высота = СтрЧислоСтрок(Объект.ПредставлениеНастроекУсловия);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьДвоичныеДанныеИзХранилища(ОбъектПолучения, Реквизит)
	тмпОбъект = РеквизитФормыВЗначение("Объект");
	Возврат(тмпОбъект[ОбъектПолучения][Реквизит].Получить());
КонецФункции

&НаКлиенте
Функция ПолучитьИмяФайлаОбработкиДействий()
	#Если Не ВебКлиент Тогда
		Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "РежимОтладки") Тогда
			ИмяВременногоФайла = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "ПутьКОбработке");
		Иначе
			ДанныеФайла =  ПолучитьДвоичныеДанныеИзХранилища("Действие", "ОбработкаДействия");
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
			ДанныеФайла.Записать(ИмяВременногоФайла);
		КонецЕсли;	
	#Иначе
		ИмяВременногоФайла = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "ПутьКОбработке");
	#КонецЕсли
	Возврат ИмяВременногоФайла;

КонецФункции

&НаСервере
Процедура УстановитьУсловиеПоУмолчанию(Условие)
	Если ТипЗнч(Условие) = Тип("СправочникСсылка.CRM_УсловияСрабатыванияТриггеров") Тогда
		Объект.УсловиеСрабатывания = Условие;
	ИначеЕсли ТипЗнч(Условие) = Тип("Структура") Тогда
		Если Условие.Свойство("Событие") И Условие.Свойство("ОбъектОбработки") Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	CRM_УсловияСрабатыванияТриггеровОбъектыОбработки.Ссылка КАК Условие
			                      |ИЗ
			                      |	Справочник.CRM_УсловияСрабатыванияТриггеров.ОбъектыОбработки КАК CRM_УсловияСрабатыванияТриггеровОбъектыОбработки
			                      |ГДЕ
			                      |	CRM_УсловияСрабатыванияТриггеровОбъектыОбработки.ОбъектОбработки = &ОбъектОбработки
			                      |	И CRM_УсловияСрабатыванияТриггеровОбъектыОбработки.Ссылка.Событие = &Событие
			                      |	И (CRM_УсловияСрабатыванияТриггеровОбъектыОбработки.Ссылка.ОбъектДействия = &ОбъектОбработки
			                      |			ИЛИ CRM_УсловияСрабатыванияТриггеровОбъектыОбработки.Ссылка.ОбъектДействия = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка))");
			
			Запрос.УстановитьПараметр("Событие", Условие.Событие);
			Запрос.УстановитьПараметр("ОбъектОбработки", Условие.ОбъектОбработки);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Объект.УсловиеСрабатывания = Выборка.Условие;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтложенноеВыполнениеПриИзменении(Элемент)
	Элементы.ГруппаОтложеноНа.Видимость = Объект.ОтложенноеВыполнение;
	Элементы.ГруппаВыполнятьВСостоянииИнтереса.Видимость = (ЗначениеЗаполнено(Объект.СостояниеИнтереса) И (Объект.ОтложенноеВыполнение ИЛИ ЗначениеЗаполнено(Объект.ПовторятьПриОшибке)));
КонецПроцедуры

&НаКлиенте
Процедура ПовторятьПриОшибкеПриИзменении(Элемент)
	Элементы.ГруппаВыполнятьВСостоянииИнтереса.Видимость = (ЗначениеЗаполнено(Объект.СостояниеИнтереса) И (Объект.ОтложенноеВыполнение ИЛИ ЗначениеЗаполнено(Объект.ПовторятьПриОшибке)));
КонецПроцедуры

&НаКлиенте
Процедура СостояниеИнтересаПриИзменении(Элемент)
	Элементы.ГруппаВыполнятьВСостоянииИнтереса.Видимость = (ЗначениеЗаполнено(Объект.СостояниеИнтереса) И (Объект.ОтложенноеВыполнение ИЛИ ЗначениеЗаполнено(Объект.ПовторятьПриОшибке)));
КонецПроцедуры

#КонецОбласти 


