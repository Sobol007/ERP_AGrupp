#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	Если УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию Тогда
		СписокЗаданий = Новый Массив;
		Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
			СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
		КонецЕсли;
		
		Если СписокЗаданий.Количество() = 0 Тогда
			ПараметрыЗадания = Новый Структура("Использование", Ложь);
			ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.CRM_ВыполнениеТриггеров);
			УникальныйИдентификаторЗадания = Строка(Новый УникальныйИдентификатор);
			ПараметрыЗадания.Вставить("Ключ", УникальныйИдентификаторЗадания);
			ПараметрыЗадания.Вставить("Наименование", "Периодическое выполнение триггера: "+Наименование);
			ПараметрыСтруктура = Новый Структура;
			ПараметрыСтруктура.Вставить("УникальныйИдентификаторЗадания", УникальныйИдентификаторЗадания);
			ПараметрыВыполненияЗадания = Новый Массив;
			ПараметрыВыполненияЗадания.Добавить(ПараметрыСтруктура);
			ПараметрыЗадания.Вставить("Параметры", ПараметрыВыполненияЗадания);
			РегламентноеЗадание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
		Иначе	
			Для Каждого Задание Из СписокЗаданий Цикл
				ПараметрыЗадания = Новый Структура("Использование", (Строка(Задание.Расписание) <> "один день; один раз в день" И Действует));
				ПараметрыЗадания.Вставить("Наименование", "Периодическое выполнение триггера: "+Наименование);
				ПараметрыСтруктура = Новый Структура;
				ПараметрыСтруктура.Вставить("УникальныйИдентификаторЗадания", УникальныйИдентификаторЗадания);
				ПараметрыВыполненияЗадания = Новый Массив;
				ПараметрыВыполненияЗадания.Добавить(ПараметрыСтруктура);
				ПараметрыЗадания.Вставить("Параметры", ПараметрыВыполненияЗадания);
				РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
			КонецЦикла;
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
			СписокЗаданий = РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", УникальныйИдентификаторЗадания));
			Для Каждого Задание Из СписокЗаданий Цикл
				ПараметрыЗадания = Новый Структура("Использование", Ложь);
				РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, ПараметрыЗадания);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если ПометкаУдаления Тогда
		Действует = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	Если ПометкаУдаления Тогда
		Если ЗначениеЗаполнено(УникальныйИдентификаторЗадания) Тогда
			GUIDЗадания = Новый УникальныйИдентификатор(УникальныйИдентификаторЗадания);
			РегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(GUIDЗадания);
			РегламентноеЗадание.Удалить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#КонецЕсли