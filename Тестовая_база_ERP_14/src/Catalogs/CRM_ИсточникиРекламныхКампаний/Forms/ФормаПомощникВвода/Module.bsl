&НаКлиенте
Процедура СценарийАнатиликиПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементов();
	ЕСли не ЗначениеЗАполнено(ВыборДействия) тогда
		ВыборДействия = 0;
		УстановитьУсловноеОформлениеДействия();
	КонецЕСли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	
	Если Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ЯндексМетрика")
		ИЛИ Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
		
		Элементы.ГруппаПочтовыеСообщения.Видимость = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
		Элементы.ГруппаВыбораЗначения.Видимость = Истина;
		ЗаполнитьПоказателиСпискаВыбора();
		
	ИначеЕсли Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ВнешняяОбработка") Тогда
		
		Элементы.ГруппаGoogleYandex.Видимость = Ложь;
		Элементы.ГруппаПочтовыеСообщения.Видимость = Ложь;
		Элементы.ГруппаВнешняяОбработка.Видимость = Истина;
		Элементы.ГруппаВыбораЗначения.Видимость = Ложь;
		
	КонецЕсли;
	
	Объект.Наименование = Объект.СценарийАнатилики;
	Заголовок = "Источник аналитики " + Объект.СценарийАнатилики;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьЗаголовкиКнопок()
	
	Для Каждого Стр Из Элементы.ВыборДействия.СписокВыбора Цикл
		
		Стр.Представление = СтрЗаменить(Стр.Представление,"#1",Объект.СценарийАнатилики);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоказателиСпискаВыбора()
	
	УстановитьЗаголовкиКнопок();
	УстановитьУсловноеОформлениеДействия();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьЭлементов();
	
	УстановитьНадписьРасписанияОбмена();
	
	Объект.ПоказательВизиты = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаДалее(Команда)
	
	Если Элементы.ФормаКнопкаДалее.Заголовок = "Записать и закрыть" Тогда		
		ЭтотОбъект.Записать();
		Закрыть();
	КонецЕсли;
	
	ТекСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	
	Если ТекСтраница = Элементы.СтраницаОновныеНастройки Тогда
		
		СоответствиеПроверки = Новый Соответствие;
		ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.АдресРасписания",Объект.АдресРасписания,"Адрес расписания");
		
		Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
		
		Если Не Отказ Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборСценария;
			Элементы.СтраницаВыборСценария.Видимость = Истина;
			Элементы.СтраницаОновныеНастройки.Видимость = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаВыборСценария Тогда
		
		Если Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ЯндексМетрика") Тогда 
			
			Если ВыборДействия = "1" Тогда 
				
				СоответствиеПроверки = Новый Соответствие;
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.Наименование",Объект.Наименование,"Наименование");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.СценарийАнатилики",Объект.СценарийАнатилики,"Сценарий анатилики");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.OAuthТокен",Объект.OAuthТокен,"Токен доступа");

			ИначеЕсли ВыборДействия = "0" Тогда 
				
				СоответствиеПроверки = Новый Соответствие;
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.Наименование",Объект.Наименование,"Наименование");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.СценарийАнатилики",Объект.СценарийАнатилики,"Сценарий анатилики");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.Client_id",Объект.Client_id,"Client id");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.Client_secret",Объект.Client_secret,"Client secret");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Code",Code,"Код подтверждения");
				НастройкаИсточника = "0";
				
			КонецЕсли;
			
		Элементы.ПоказательРекламнаяКампания.Подсказка = СтрЗаменить(Элементы.ПоказательРекламнаяКампания.Подсказка,"%1","Яндекс direct");
		ИначеЕсли Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда 
			
			Если ВыборДействия = "1" Тогда 
				
				СоответствиеПроверки = Новый Соответствие;
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.Наименование",Объект.Наименование,"Наименование");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.СценарийАнатилики",Объект.СценарийАнатилики,"Сценарий анатилики");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.OAuthТокен",Объект.OAuthТокен,"Токен доступа");
				
			ИначеЕсли ВыборДействия = "0" Тогда 
				
				СоответствиеПроверки = Новый Соответствие;
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.Наименование",Объект.Наименование,"Наименование");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.СценарийАнатилики",Объект.СценарийАнатилики,"Сценарий анатилики");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.Client_id",Объект.Client_id,"Client id");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.Client_secret",Объект.Client_secret,"Client secret");
				
			КонецЕсли;
		Элементы.ПоказательРекламнаяКампания.Подсказка = СтрЗаменить(Элементы.ПоказательРекламнаяКампания.Подсказка,"%1","Google analitics");
		
		ИначеЕсли Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ВнешняяОбработка") Тогда
			
			СоответствиеПроверки = Новый Соответствие;
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.Наименование",Объект.Наименование,"Наименование");
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.СценарийАнатилики",Объект.СценарийАнатилики,"Сценарий анатилики");
			ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.НазваниеОбработки",Объект.НазваниеОбработки,"Файл обработки");

		КонецЕсли;
		
		Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);

		Если Не Отказ Тогда
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПоказатели;
			Элементы.СтраницаПоказатели.Видимость = Истина;
			Элементы.СтраницаВыборСценария.Видимость = Ложь;
			
			НастройкаИсточника = "0";
			
			//ТестированиеСервисаДанных();
			
		КонецЕсли
		
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаПоказатели Тогда
		// добавлено +
		Если Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ЯндексМетрика") Тогда
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЯндексДиректа;
			Элементы.СтраницаПоказатели.Видимость = Ложь;
			Элементы.СтраницаЯндексДиректа.Видимость = Истина;
			
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЛидогенерация;
			Элементы.СтраницаЛидогенерация.Видимость = Истина;
			Элементы.ФормаКнопкаДалее.Заголовок = "Записать и закрыть";
		КонецЕсли;
		
		ВыборДействияДирект = "0";
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаЯндексДиректа Тогда
		// добавлено +
		
		Если Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ЯндексМетрика") Тогда 
			
			Если ВыборДействияДирект = "1" Тогда 
				
				СоответствиеПроверки = Новый Соответствие;
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.YD_Login",Объект.YD_Login,"Логин");
				ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.YD_Token",Объект.YD_Token,"Токен");
				
			ИначеЕсли ВыборДействияДирект = "0" Тогда 
				СоответствиеПроверки = Новый Соответствие;
			КонецЕсли;
			
		Иначе
			
			СоответствиеПроверки = Новый Соответствие;
			
		КонецЕсли;
		
		Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
		
		Если Не Отказ Тогда
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЛидогенерация;
			Элементы.СтраницаЛидогенерация.Видимость = Истина;
			//Элементы.ФормаКнопкаДалее.Заголовок = "Записать и закрыть";
			Элементы.СтраницаЯндексДиректа.Видимость = Ложь;
			
			ЕстьТокенЯндексДирект = "1";
			Элементы.НастройкаЛидогенерации.Видимость = Истина;
			ТестированиеСервисаДанных();
		КонецЕсли;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаЛидогенерация Тогда
		// добавлено +
		Если НастройкаИсточника = "0" Тогда
			
			Если КоличествоЛидовПустое() Тогда
				
				ПараметрыФормы = новый Структура;
				ПараметрыФормы.Вставить("CRM_ИспользоватьCallTracking",Истина);
				
				ОткрытьФорму("Справочник.CRM_ИсточникиПолученияЛидов.Форма.ФормаЭлемента",ПараметрыФормы,ЭтотОбъект);
				
			Иначе
				
				ОткрытьФорму("Справочник.CRM_ИсточникиПолученияЛидов.Форма.ФормаВыбора",,ЭтотОбъект);
				
			КонецЕсли;

		Иначе
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаНастройкаИсточника;
			Элементы.ФормаКнопкаДалее.Заголовок = "Записать и закрыть";
			Элементы.СтраницаНастройкаИсточника.Видимость = Истина;
			
		КонецЕсли;
	//	
	//	// добавлено -
	//ИначеЕсли ТекСтраница = Элементы.СтраницаНастройкаИсточника Тогда
	//	
	//	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,Поле,Значение,Представление)
	
	СоответствиеЗначение = Новый Соответствие;
	СоответствиеЗначение.Вставить(Представление,Значение);
	СоответствиеПроверки.Вставить(Поле,СоответствиеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ТестированиеСервисаДанных()
	
	ОбъектДанных = РеквизитФормыВЗначение("Объект");
	СтруктураДанных = ОбъектДанных.ПолучитьИнформациюПоПодключению(); 
	
	Если Не ЗначениеЗаполнено(СтруктураДанных) Тогда 
		
		Элементы.ФормаКнопкаДалее.Заголовок = "Далее";
		Элементы.ДекорацияКартинкаСветофор.Картинка		= БиблиотекаКартинок.CRM_СинхронизацияПроблема;
		Элементы.ДекорацияКартинкаСветофор.Подсказка 	= "В обработке отсутствует или неправильно настроен метод ""ПолучитьИнформациюПоПодключению"".";
		Элементы.ДекорацияСервис.Заголовок				= "Ошибка авторизации при подключении к сервису " + Объект.СценарийАнатилики;
		
	Иначе
		
		Если СтруктураДанных.ЕстьОшибка Тогда // 1 час
			
			//Элементы.ФормаКнопкаДалее.Заголовок = "Далее";
			Элементы.ДекорацияКартинкаСветофор.Картинка		= БиблиотекаКартинок.CRM_СинхронизацияПроблема;
			Элементы.ДекорацияКартинкаСветофор.Подсказка 	= СтруктураДанных.Текст;
			Элементы.ДекорацияСервис.Заголовок				= "Ошибка авторизации при подключении к сервесу " + Объект.СценарийАнатилики;
			
		Иначе
			
			Элементы.ДекорацияКартинкаСветофор.Картинка 	= БиблиотекаКартинок.CRM_СинхронизацияНетПроблем;
			Элементы.ДекорацияКартинкаСветофор.Подсказка 	= "Подключение пройдено";
			Элементы.ДекорацияСервис.Заголовок				= "Подключение к сервису " + Объект.СценарийАнатилики + " успешно установлено";
			
		КонецЕсли;
		
	КонецЕсли;
			 
КонецПроцедуры

&НаСервере
Функция ВыполнитьпроверкуРеквизитовПоСоответствию(Соответствие)
	
	Отказ = Ложь;
	
	Для Каждого Стр Из Соответствие Цикл
		
		СоответствиеПроверки = Стр.Значение;
		
		Для Каждого СтрЗначения Из СоответствиеПроверки Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрЗначения.Значение) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить обязательное поле: " + СтрЗначения.Ключ,,Стр.Ключ);
				Отказ = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура ДекорацияРасписаниеНажатие(Элемент)
	
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьРасписаниеОбмена", ЭтотОбъект);
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	Диалог.Показать(ОписаниеОповещения);
	
	ЗаполнитьРасписаниеЗапуска();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасписаниеЗапуска()
	
	Адрес = ПоместитьВоВременноеХранилище(РасписаниеРегламентногоЗадания,Новый УникальныйИдентификатор);
	Объект.АдресРасписания = Адрес;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРасписаниеОбмена(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("РасписаниеРегламентногоЗадания") Тогда
		РасписаниеРегламентногоЗадания = Результат;
		
		УстановитьНадписьРасписанияОбмена();
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНадписьРасписанияОбмена()
	
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		ТекстЗаголовка = НСтр("en='To configure the schedule of the exchange';ru='Настроить расписание обмена'");
	Иначе
		ТекстЗаголовка = РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Элементы.ДекорацияРасписание.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.АдресРасписания) Тогда
		ЗаполнитьРасписаниеЗапуска();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНазад(Команда)
	
	ТекСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	Если Элементы.ФормаКнопкаДалее.Заголовок = "Записать и закрыть" Тогда
		Элементы.ФормаКнопкаДалее.Заголовок = "Далее";
	КонецЕсли;
	
	Если ТекСтраница = Элементы.СтраницаНастройкаИсточника Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЛидогенерация;
		Элементы.СтраницаНастройкаИсточника.Видимость = Ложь;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаЛидогенерация Тогда
		
		Элементы.ФормаКнопкаДалее.Доступность = Истина;
		Элементы.СтраницаЛидогенерация.Видимость = Ложь;
		Элементы.СтраницаЯндексДиректа.Видимость = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЯндексДиректа;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаЯндексДиректа Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПоказатели;
		Элементы.СтраницаЯндексДиректа.Видимость = Ложь;
		Элементы.СтраницаПоказатели.Видимость = Истина;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаПоказатели Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборСценария;
		Элементы.СтраницаПоказатели.Видимость = Ложь;
		Элементы.СтраницаВыборСценария.Видимость = Истина;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаВыборСценария Тогда
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОновныеНастройки;
		Элементы.СтраницаВыборСценария.Видимость = Ложь;
		Элементы.СтраницаОновныеНастройки.Видимость = Истина;
		
	КонецЕсли;
	
	ОбновитьОтображениеДанных(Элементы.ГруппаСтраницы);
	
КонецПроцедуры

&НаКлиенте
Процедура Client_secretПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Client_id) И ЗначениеЗаполнено(Объект.Client_secret) И Элементы.ДекорацияПолучениеКода.Видимость = Ложь Тогда
		Элементы.ДекорацияПолучениеКода.Видимость = Истина;
		Элементы.ДекорацияСрок.Заголовок = "Срок действия токена 1 год.";
		ИзменитьДекорациюНадпись();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Client_idПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Client_id) И ЗначениеЗаполнено(Объект.Client_secret) И Элементы.ДекорацияПолучениеКода.Видимость = Ложь Тогда
		Элементы.ДекорацияПолучениеКода.Видимость = Истина;
		ИзменитьДекорациюНадпись();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДекорациюНадпись()
	
	НоваяСтр = Новый Массив();
	
	НоваяСтр.Добавить("Для дальнейшей работы необходимо получить код приложения, для этого перейдите по ссылке: `");
	НоваяСтр.Добавить(Новый ФорматированнаяСтрока("https://oauth.yandex.ru/authorize?response_type=code&client_id="+Объект.Client_id,,,,"https://oauth.yandex.ru/authorize?response_type=code&client_id="+Объект.Client_id));
	НоваяСтр.Добавить(" от имени пользователя, аккаунт которого вы хотите использовать. Разрешите доступ к Вашему приложению. Код доступа появится на экране, скопируйте его.");
	
	Элементы.ДекорацияПолучениеКода.Заголовок = Новый ФорматированнаяСтрока(НоваяСтр);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПолучениеКодаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Элементы.КодПодтверждения.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьТокенНаСервере(Код, Отказ)
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ПолучитьТокен(Код, Отказ);
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура УменяЕстьТокенПриИзменении(Элемент)
	
	Если УменяЕстьТокен Тогда
		
		Если объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
			Элементы.OAuthТокен.Видимость = Истина;
			Элементы.ГруппаЯндекс.Видимость = Ложь;
			Элементы.ГруппаGoogle.Видимость = Истина;
			Элементы.Декорация_gl.Видимость = Ложь;
		Иначе
			Элементы.OAuthТокен.Видимость = Истина;
			Элементы.ГруппаЯндекс.Видимость = Ложь;
			Элементы.ГруппаGoogle.Видимость = Ложь;
		КонецЕсли;
		
	Иначе
		
		Элементы.OAuthТокен.Видимость = ложь;
		
		Если объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
			Элементы.ГруппаGoogle.Видимость = Истина;
			Элементы.Декорация_gl.Видимость = Истина;
			Элементы.ГруппаЯндекс.Видимость = Ложь;
		Иначе
			Элементы.ГруппаЯндекс.Видимость = Истина;
			Элементы.ГруппаGoogle.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеНачинаяПриИзменении(Элемент)
	
	Если ДозагрузитьДанные Тогда
		Элементы.ДатаДозагрузки.Видимость = Истина;
	Иначе
		Элементы.ДатаДозагрузки.Видимость = Ложь;
		Объект.ДатаДозагрузки = Дата(1,1,1);
	КонецЕсли;
	
КонецПроцедуры

#Область ВнешняяОбработка
&НаСервере
Функция ПолучитьДвоичныеДанныеИзХранилища()
	ОбъектПолучения = РеквизитФормыВЗначение("Объект");
	Возврат(ОбъектПолучения.ОбработкаДействия.Получить());
КонецФункции

&НаСервере
Процедура ПодготовитьКВыгрузкеОбработкуНаСервере()
	ДанныеФайла = ПолучитьДвоичныеДанныеИзХранилища();
	АдресФайла = ПоместитьВоВременноеХранилище(ДанныеФайла, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОбработку(Команда)
	
	ПодготовитьКВыгрузкеОбработкуНаСервере();
	
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(
	Новый ОписаниеОповещения(
	"ВыгрузитьОбработкуПродолжение",
	ЭтотОбъект,
	Новый Структура),
	НСтр("en='Continue, install the file operation extension.';ru='Для продолжения необходимо установить расширение для работы с файлами.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОбработкуПродолжение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект);
	ИмяФайла = Объект.НазваниеОбработки+".epf";
	Файл = Новый ОписаниеПередаваемогоФайла(ИмяФайла, АдресФайла);
	ПолучаемыеФайлы = Новый Массив;
	ПолучаемыеФайлы.Добавить(Файл);
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогОткрытияФайла.Фильтр = "(*.epf)|*.epf";
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	НачатьПолучениеФайлов(ОписаниеОповещения, ПолучаемыеФайлы, ДиалогОткрытияФайла, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ПереданныйФайл Из ПомещенныеФайлы Цикл
		Объект.ПутьКОбработке 		= ПереданныйФайл.Имя;
		ЭтотОбъект.Модифицированность = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбработкуКлиент(Команда)
	
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(
	Новый ОписаниеОповещения(
	"ЗагрузитьОбработкуПродолжение",
	ЭтотОбъект,
	Новый Структура),
	НСтр("en='Continue, install the file operation extension.';ru='Для продолжения необходимо установить расширение для работы с файлами.'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбработкуПродолжение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Объект.НазваниеОбработки) Тогда
		ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("ВопросЗагрузитьОбработку", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияЗавершения, НСтр("en='Download a new treatment from the disk?';ru='Загрузить новую обработку с диска?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		ВопросЗагрузитьОбработку(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗагрузитьОбработку(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьОбработкуЗавершение", ЭтотОбъект);
		ИмяФайла = Объект.НазваниеОбработки+".epf";
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.Фильтр = "(*.epf)|*.epf";
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбработкуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		АдресФайла = Результат[0].Хранение;
		Объект.ПутьКОбработке = Результат[0].Имя;
		ЗагрузитьОбработку();
		ЭтотОбъект.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОбработку()
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий"+"");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
	
	Объект.ИспользуетсяСтандартнаяОбработка = Ложь;
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресФайла,,Ложь, ПараметрыЗащиты), Ложь);
	Объект.НазваниеОбработки = Обработка.Метаданные().Имя;
	Если Объект.Наименование = "" Тогда
		Объект.Наименование = Обработка.Метаданные().Синоним;
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЕСли Объект.СценарийАнатилики=Перечисления.CRM_СценарииПолученияАналитики.ВнешняяОбработка тогда
		Если ЗначениеЗАполнено(АдресФайла) тогда
			ТекущийОбъект.ОбработкаДействия = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресФайла));
			
		КонецЕСли;
	КонецЕСли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКодАктивацииЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено И ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Свойство("Code") Тогда
			Code = Результат.Code;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПолучитьКодАвторизации_glНажатие(Элемент)
	
	стрHTML = "https://accounts.google.com/o/oauth2/v2/auth?response_type=code&" +
	"client_id=" + СокрП(Объект.Client_id) +
	"&redirect_uri=http://localhost&access_type=offline&scope=https://www.googleapis.com/auth/analytics.readonly";
	//ПарамСтруктура = Новый Структура;
	//ПарамСтруктура.Вставить("стрHTML", стрHTML);
	//ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьКодАктивацииЗавершение", ЭтотОбъект);
	//ОткрытьФорму("Справочник.CRM_ИсточникиРекламныхКампаний.Форма.ФормаПолученияКода", ПарамСтруктура, 
	//ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор,,, ОписаниеОповещения);	
	
КонецПроцедуры

&НаСервере
Функция jsonПрочитать(Значение)
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Значение);
	ОтветСервера = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Возврат ОтветСервера;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВыбранноеЗначение = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо указать источник получения лидов");
		Возврат;
	КонецЕсли;
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.CRM_ИсточникиПолученияЛидов.Форма.ФормаЭлемента" ИЛИ
		ИсточникВыбора.ИмяФормы = "Справочник.CRM_ИсточникиПолученияЛидов.Форма.ФормаВыбора" Тогда
		
		Объект.ИсточникиПолученияЛидов = ВыбранноеЗначение;
		
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаНастройкаИсточника;
	Элементы.ФормаКнопкаДалее.Заголовок = "Записать и закрыть";
	Элементы.СтраницаНастройкаИсточника.Видимость = Истина;
	
	Если Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
		
		Элементы.ЯндексДирект.Видимость = Ложь;
		Элементы.СтраницаЯндексДиректа.Видимость = Ложь;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	CRM_СистемаСквознойАналитикиСервер.Справочник_CRM_ИсточникиРекламныхКампаний_ФормаПомощникВвода_ПриСозданииНаСервере();
	Если не значениеЗаполнено(Объект.Ссылка) тогда
		Объект.СценарийАнатилики = Перечисления.CRM_СценарииПолученияАналитики.ВнешняяОбработка; 
	КонецЕСли;
	
	
	РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
	РасписаниеРегламентногоЗадания.ПериодПовтораДней  = 1;
	ДозагрузитьДанные = Истина;
	
	Объект.ДатаДозагрузки = ДобавитьМесяц(НачалоМесяца(ТекущаяДата()),-3);
	ЗаполнитьРасписаниеЗапуска();
	
КонецПроцедуры

&НаСервере
Функция КоличествоЛидовПустое()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_ИсточникиПолученияЛидов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.CRM_ИсточникиПолученияЛидов КАК CRM_ИсточникиПолученияЛидов
		|ГДЕ
		|	НЕ CRM_ИсточникиПолученияЛидов.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить().Пустой();

	Возврат РезультатЗапроса;
	
КонецФункции

#КонецОбласти

#Область ЯндексДирект

&НаКлиенте
Процедура ЯндексДиректПриИзменении(Элемент)
	Если Объект.ПоказательЯндексДирект Тогда 
		Элементы.СтраницаЯндексДиректа.Видимость = Истина;		
		Элементы.КомандаДалееЯндексДиректа.Видимость = Ложь;
		Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница = Элементы.СтраницаЗагрузки;
		Элементы.СтраницаЗагрузки.Видимость = Истина;
		Элементы.ЕстьТокенЯндексДирект.Видимость = Ложь;
		
		Если Не ЗначениеЗаполнено(Объект.YD_Token) Тогда
			Элементы.КомандаДалееЯндексДиректа.Видимость = Истина;
			Элементы.КомандаНазадЯндексДирект.Доступность = Ложь;
			Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница = Элементы.СтраницаЗапросКода;
			Элементы.СтраницаПолучениеТокена.Видимость = Истина;
			Элементы.ЕстьТокенЯндексДирект.Видимость = Истина;
		КонецЕсли;
		
	Иначе
		Элементы.СтраницаЯндексДиректа.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура YD_КомандаДалее(Команда)
	
	ТекСтраница = Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница;
	
	Если ТекСтраница = Элементы.СтраницаЗапросКода Тогда
		
		СоответствиеПроверки = Новый Соответствие;
		ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.YD_Login",Объект.YD_Login,"Login"); 
		
		Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);

		Если Не Отказ Тогда
			Элементы.ЕстьТокенЯндексДирект.Видимость = Ложь;
			Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница = Элементы.СтраницаПодтверждениеКода;
			Элементы.СтраницаПодтверждениеКода.Видимость = Истина;
			Элементы.КомандаНазадЯндексДирект.Доступность = Истина;
			ЗапросКодаНаСервере();
		КонецЕсли;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаПодтверждениеКода Тогда
		
		Элементы.ЕстьТокенЯндексДирект.Видимость = Ложь;
		Элементы.КомандаНазадЯндексДирект.Доступность = Истина;
		
		СоответствиеПроверки = Новый Соответствие;
		ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.YD_КодПодтверждения",Объект.YD_КодПодтверждения,"Код подтверждения Яндекс");
		
		Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
		
		Если Не Отказ Тогда
			
			Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница = Элементы.СтраницаПолучениеТокена;		
			Элементы.СтраницаПолучениеТокена.Видимость = Истина;
			ПолучитьТокенЯндексНаСервере();
			
		КонецЕсли;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаПолучениеТокена Тогда
		
		Элементы.ЕстьТокенЯндексДирект.Видимость = Ложь;
		Элементы.КомандаНазадЯндексДирект.Доступность = Истина;
		
		СоответствиеПроверки = Новый Соответствие;
		ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.YD_Token",Объект.YD_Token,"Тиокен Яндекс");
		
		Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
		
		Если Не Отказ Тогда
			
			Элементы.КомандаДалееЯндексДиректа.Видимость = Ложь;
			Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница = Элементы.СтраницаЗагрузки;		
			Элементы.СтраницаЗагрузки.Видимость = Истина;
			Элементы.ГруппаКнопокЯндексДиректа.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗапросКодаНаСервере()
	
	СтруктураПараметров = Новый Структура("Client_id,YD_device_code,YD_КодПодтверждения");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров,Объект);
	CRM_СистемаСквознойАналитикиСервер.ЗапросКода(УникальныйИдентификатор,СтруктураПараметров);
	ЗаполнитьЗначенияСвойств(Объект,СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьТокенЯндексНаСервере()
	
	СтруктураПараметров = Новый Структура("Client_id,Client_secret,YD_device_code,YD_Token");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров,Объект);
	CRM_СистемаСквознойАналитикиСервер.ПолучитьТокен(СтруктураПараметров);
	ЗаполнитьЗначенияСвойств(Объект,СтруктураПараметров);
	
	Если ЗначениеЗаполнено(СтруктураПараметров.ТекстИсключения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка авторизации : " + СтруктураПараметров.ТекстИсключения);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаЗатратНаСервере()
	
	СтруктураПараметров = Новый Структура("ДатаДозагрузки,YD_Валюта,YD_Token,YD_Login");	
	ЗаполнитьЗначенияСвойств(СтруктураПараметров,Объект);
	CRM_СистемаСквознойАналитикиСервер.ЗагрузкаЗатрат(СтруктураПараметров);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаЗатрат(Команда)
	
	Состояние("Загрузка данных.");
	ЗагрузкаЗатратНаСервере();	
	Состояние("Готово!");
	
КонецПроцедуры

&НаКлиенте
Процедура YD_КомандаНазад(Команда)
	
	Элементы.ЕстьТокенЯндексДирект.Видимость = Ложь;
	Элементы.КомандаНазадЯндексДирект.Доступность = Истина;
	
	ТекСтраница = Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница;
	
	Если ТекСтраница = Элементы.СтраницаПолучениеТокена Тогда
		
		Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница = Элементы.СтраницаЗапросКода;
		Элементы.ЕстьТокенЯндексДирект.Видимость = Истина;
		Элементы.КомандаНазадЯндексДирект.Доступность = Ложь;
		Элементы.КомандаНазадЯндексДирект.Видимость = Истина;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаЗагрузки Тогда
		
		Элементы.КомандаДалееЯндексДиректа.Видимость = Истина;
		Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница = Элементы.СтраницаПолучениеТокена;
		
	ИначеЕсли ТекСтраница = Элементы.СтраницаПодтверждениеКода  Тогда
		
		Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница = Элементы.СтраницаЗапросКода;
		Элементы.ЕстьТокенЯндексДирект.Видимость = Истина;
		Элементы.КомандаНазадЯндексДирект.Доступность = Ложь;
		Элементы.КомандаДалееЯндексДиректа.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьТокен(Команда)
	
	Если ЗначениеЗаполнено(Объект.YD_Login) Тогда 	
		Элементы.КомандаНазадЯндексДирект.Доступность = Истина;
		Элементы.ЕстьТокенЯндексДирект.Видимость = Ложь;
		Элементы.ГруппаСтраницыЯндексДиректа.ТекущаяСтраница = Элементы.СтраницаПолучениеТокена;
		Элементы.СтраницаПолучениеТокена.Видимость = Истина;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить обязательное поле: YD_Login");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Client_secret_glПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Client_id) И ЗначениеЗаполнено(Объект.Client_secret) Тогда
		Элементы.ДекорацияПолучитьКодАвторизации_gl.Видимость = Истина;
		СформироватьСсылку();
	Иначе
		Элементы.ДекорацияПолучитьКодАвторизации_gl.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПолучитьКодАвторизации_glОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Элементы.КодПодтверждения.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСсылку()
	
	АдресОтладочногоТокена = "accounts.google.com";
	ПараметрыСчетчика = "";
	
	redirect_uri = "urn:ietf:wg:oauth:2.0:oob";
	
	Ресурс = "/o/oauth2/v2/auth";
	
	ПараметрыСчетчика = ПараметрыСчетчика + "?response_type=code";
	
	ПараметрыСчетчика = ПараметрыСчетчика + "&client_id=" + ОБъект.Client_id;
	ПараметрыСчетчика = ПараметрыСчетчика + "&redirect_uri=" + redirect_uri;
	ПараметрыСчетчика = ПараметрыСчетчика + "&access_type=offline";
	ПараметрыСчетчика = ПараметрыСчетчика + "&scope=https://www.googleapis.com/auth/analytics.readonly";
	
	АдресРесурса = Ресурс + ПараметрыСчетчика;
	
	СтрокаПодключения = "https://" + АдресОтладочногоТокена + АдресРесурса; 
	
	НоваяСтр = Новый Массив();
	
	НоваяСтр.Добавить("Для предоставления токена доступа, необходимо разрешить доступ к `");
	НоваяСтр.Добавить(Новый ФорматированнаяСтрока("Analytics API",,,,СтрокаПодключения));
	НоваяСтр.Добавить(". Google показывает пользователю диалоговое окно с предложением авторизовать приложение для запроса этих данных. Если пользователь соглашается, Google предоставляет приложению токен доступа с коротким сроком действия.");
	
	Элементы.ДекорацияПолучитьКодАвторизации_gl.Заголовок = Новый ФорматированнаяСтрока(НоваяСтр);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьТокенНаСервереGoogle(ОтладочныйТокен, Отказ)
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ПолучитьТокенGoogle(ОтладочныйТокен, Отказ);
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ВыборДействияПриИзменении(Элемент)
	УстановитьУсловноеОформлениеДействия();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьУсловноеОформлениеДействия()
	
	Если ВыборДействия = "1" И ЗначениеЗаполнено(Объект.СценарийАнатилики) Тогда
		Элементы.ДекорацияВыбор.Заголовок = "Я подключен к сервису """ + Объект.СценарийАнатилики + """. У меня есть токен авторизации ";
		УменяЕстьТокен = Истина;
	ИначеЕсли ВыборДействия = "0" И ЗначениеЗаполнено(Объект.СценарийАнатилики) Тогда
		Элементы.ДекорацияВыбор.Заголовок = "Я хочу подключиться к сервису """ + Объект.СценарийАнатилики + """ ";
		УменяЕстьТокен = Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(Объект.СценарийАнатилики) Тогда
		ПоказатьПредупреждение(,"Укажите сценарий аналитики");
		Возврат;
	Иначе
		Возврат;
	КонецЕсли;
	
	Элементы.КодПодтверждения.Видимость = Ложь;
	Code = ""; 
	Элементы.ГруппаGoogleYandex.Видимость = Истина;
	Элементы.ГруппаПочтовыеСообщения.Видимость = Ложь;
	Элементы.ГруппаВнешняяОбработка.Видимость = Ложь;
	Элементы.ГруппаGoogle.Видимость = Ложь;
	Элементы.СтраницаЯндексДиректа.Видимость = Ложь;
	УменяЕстьТокенПриИзменении(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаИсточникаПриИзменении(Элемент)
	
	Если НастройкаИсточника = "0" Тогда
		
		Элементы.НастройкаЛидогенерации.Видимость = Истина;
		Элементы.ФормаКнопкаДалее.Заголовок = "Далее";

	Иначе
		
		Элементы.НастройкаЛидогенерации.Видимость = Ложь;
		Элементы.ФормаКнопкаДалее.Заголовок = "Записать и закрыть";

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодПодтвержденияПриИзменении(Элемент)
	
	Отказ = Ложь;
	
	Если Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.ЯндексМетрика") Тогда
		
		ПолучитьТокенНаСервере(Code, Отказ);
				
	ИначеЕсли Объект.СценарийАнатилики = ПредопределенноеЗначение("Перечисление.CRM_СценарииПолученияАналитики.GoogleAnalytics") Тогда
		
		ПолучитьТокенНаСервереGoogle(Code, Отказ);

		Если не Отказ Тогда Элементы.RefreshТокен.Видимость = Истина КонецЕсли;
	
	КонецЕсли;
	
	Если Не Отказ Тогда 
		
		Элементы.КодПодтверждения.Видимость = Ложь;				
		Элементы.OAuthТокен.Видимость = Истина;		
		//Code = "";
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка получения токена. Пожалуйста, убедитесь, что данные верны и попробуйте снова.",,"Code");
		Code = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборДействияДиректПриИзменении(Элемент)
	
	УстановитьУсловноеОформлениеДействияЯндексДирект();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьУсловноеОформлениеДействияЯндексДирект()
	
	Если ВыборДействияДирект = "1" И ЗначениеЗаполнено(Объект.СценарийАнатилики) Тогда
		Элементы.ДекорацияВыбор1.Заголовок = "У меня есть токен авторизации для Яндекс direct";
		Объект.ПоказательЯндексДирект = Истина;
		Элементы.YD_Login.Видимость = Истина;
	ИначеЕсли ВыборДействияДирект = "0" И ЗначениеЗаполнено(Объект.СценарийАнатилики) Тогда
		Объект.ПоказательЯндексДирект = Ложь;
		Элементы.ДекорацияВыбор1.Заголовок = "";
		Элементы.YD_Login.Видимость = Ложь;
		Элементы.ГруппаСтраницаЗапросКода.Видимость = Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(Объект.СценарийАнатилики) Тогда
		ПоказатьПредупреждение(,"Укажите  аналитики");
		Возврат;
	Иначе
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура YD_LoginПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.YD_Login) Тогда
		Элементы.ГруппаСтраницаЗапросКода.Видимость = Истина;
		ЕстьТокенЯндексДирект = "1";
		Элементы.СтраницаПолучениеТокена.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьТокенЯндексДирект1ПриИзменении(Элемент)
	
	Если ЕстьТокенЯндексДирект = "1" Тогда
		Элементы.СтраницаПолучениеТокена.Видимость = Истина;
		Элементы.ГруппаНовыйТокен.Видимость = Ложь;
	ИначеЕсли ЕстьТокенЯндексДирект = "0" И ЗначениеЗаполнено(Объект.СценарийАнатилики) Тогда
		Элементы.СтраницаПолучениеТокена.Видимость = Ложь;
		Элементы.ГруппаНовыйТокен.Видимость = Истина;
		СоответствиеПроверки = Новый Соответствие;
		ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.YD_Login",Объект.YD_Login,"Login"); 
		
		Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
		
		Если Не Отказ Тогда
			ЗапросКодаНаСервере();
		КонецЕсли;

		Элементы.СтраницаПодтверждениеКода.Видимость = Истина;
		
	ИначеЕсли Не ЗначениеЗаполнено(Объект.СценарийАнатилики) Тогда
		ПоказатьПредупреждение(,"Укажите  аналитики");
		Возврат;
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТокенДирект(Команда)
	
	СоответствиеПроверки = Новый Соответствие;
	ВставитьПолеВСоответствиеПроверки(СоответствиеПроверки,"Объект.YD_КодПодтверждения",Объект.YD_КодПодтверждения,"Код подтверждения Яндекс");
	
	Отказ = ВыполнитьпроверкуРеквизитовПоСоответствию(СоответствиеПроверки);
	
	Если Не Отказ Тогда
		
		ПолучитьТокенЯндексНаСервере();
		
		Элементы.YD_Token1.Видимость = Истина;
		
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсточник(Команда)
	
	ПоказатьЗначение(,Объект.ИсточникиПолученияЛидов);
	
КонецПроцедуры

#КонецОбласти