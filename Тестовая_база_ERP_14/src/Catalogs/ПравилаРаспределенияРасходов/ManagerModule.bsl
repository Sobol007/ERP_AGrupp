#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	Результат = Новый Массив;
	Результат.Добавить("НазначениеПравила");
	Результат.Добавить("НаправлениеРаспределения");
	Результат.Добавить("БазаРаспределения");
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		НаПартии = ПредопределенноеЗначение("Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства");
		ПоПодразделениям = ПредопределенноеЗначение("Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоПодразделениям");
		
		Ключ = Неопределено;
		Если Параметры.Свойство("Ключ", Ключ) Тогда
			
			ЗначенияРеквизитов = ОбщегоНазначенияУТВызовСервера.ЗначенияРеквизитовОбъекта(Ключ, "НазначениеПравила, Устаревшее");
			
			Если ЗначенияРеквизитов.НазначениеПравила = НаПартии
				И Не ЗначенияРеквизитов.Устаревшее Тогда
				
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаНастроек";
				
				Возврат;
				
			КонецЕсли;
			
			Если ЗначенияРеквизитов.НазначениеПравила = ПоПодразделениям
				И Не ЗначенияРеквизитов.Устаревшее Тогда
				
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаПоказателя";
				
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если (Параметры.Свойство("ЗначенияЗаполнения")
			И Параметры.ЗначенияЗаполнения.Свойство("НазначениеПравила")
			И Параметры.ЗначенияЗаполнения.НазначениеПравила = НаПартии)
			Или (Параметры.Свойство("ЗначениеКопирования")
			И Параметры.ЗначениеКопирования.НазначениеПравила = НаПартии) Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаНастроек";
			
		КонецЕсли;
		
		Если (Параметры.Свойство("ЗначенияЗаполнения")
			И Параметры.ЗначенияЗаполнения.Свойство("НазначениеПравила")
			И Параметры.ЗначенияЗаполнения.НазначениеПравила = ПоПодразделениям)
			Или (Параметры.Свойство("ЗначениеКопирования")
			И Параметры.ЗначениеКопирования.НазначениеПравила = ПоПодразделениям) Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаПоказателя";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Прочее

Функция ПредставлениеОтобранныхПозиций(ОтобранныеПозиции, ПараметрыПредметаИсчисления = Неопределено) Экспорт

	Если ОтобранныеПозиции.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Если ОтобранныеПозиции.Количество() = 1 Тогда
		Возврат СокрЛП(ОтобранныеПозиции[0]);
	КонецЕсли;
	
	Если ПараметрыПредметаИсчисления = Неопределено Тогда
		ПредметИсчисления = "позиция, позиции, позиций";
	Иначе
		ПредметИсчисления = ПараметрыПредметаИсчисления;
	КонецЕсли;
	
	КоличествоПозиций = ОтобранныеПозиции.Количество() - 1;
	ДляСклонения = ЧислоПрописью(КоличествоПозиций, "Л = ru_RU;", ПредметИсчисления);
	
	НачалоПредмета = СтрНайти(ДляСклонения, Лев(ПредметИсчисления, 3));
	СклоненныйПредмет = Сред(ДляСклонения, НачалоПредмета, СтрНайти(ДляСклонения, " ",, НачалоПредмета) - НачалоПредмета);
	
	Представление = НСтр("ru = '%1 и еще %2 %3';
						|en = '%1 and also %2 %3'");
	
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Представление, 
		СокрЛП(ОтобранныеПозиции[0]), КоличествоПозиций, 
		СклоненныйПредмет);
		
	Возврат Представление;
	
КонецФункции

Функция ПолучитьПредставлениеПравила(Материалы, ВидыРабот, Продукция, БазаРаспределения) Экспорт
	
	Если ТипЗнч(Материалы) = Тип("Массив") Тогда
		
		ПредставлениеОтобранныхПозиций = ПредставлениеОтобранныхПозиций(Материалы);
		ПредставлениеОтобранныхПозиций = ПредставлениеОтобранныхПозиций 
			+ ПредставлениеОтобранныхПозиций(ВидыРабот);
		ПредставлениеОтобранныхПозиций = ПредставлениеОтобранныхПозиций 
			+ ПредставлениеОтобранныхПозиций(Продукция);
		
	Иначе	
			
		ПредставлениеОтобранныхПозиций = ПредставлениеОтобранныхПозиций(Материалы.ВыгрузитьКолонку("Материал"));
		ПредставлениеОтобранныхПозиций = ПредставлениеОтобранныхПозиций 
			+ ПредставлениеОтобранныхПозиций(ВидыРабот.ВыгрузитьКолонку("ВидРабот"));
		ПредставлениеОтобранныхПозиций = ПредставлениеОтобранныхПозиций 
			+ ПредставлениеОтобранныхПозиций(Продукция.ВыгрузитьКолонку("Продукция"));
			
	КонецЕсли;
		
	ПредставлениеПравила = "";
	Если БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов Тогда
		ПредставлениеПравила = НСтр("ru = 'Количество работ:';
									|en = 'Number of works:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда Тогда
		ПредставлениеПравила = НСтр("ru = 'Нормативная стоимость работ:';
									|en = 'Standard work cost:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда Тогда
		ПредставлениеПравила = НСтр("ru = 'Стоимость работ:';
									|en = 'Work cost:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов Тогда
		ПредставлениеПравила = НСтр("ru = 'Количество материалов:';
									|en = 'Quantity of materials:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов Тогда
		ПредставлениеПравила = НСтр("ru = 'Объем материалов:';
									|en = 'Volume of materials:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат Тогда
		ПредставлениеПравила = НСтр("ru = 'Стоимость материалов:';
									|en = 'Material cost:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов Тогда
		ПредставлениеПравила = НСтр("ru = 'Вес материалов:';
									|en = 'Weight of materials:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ВесПродукции Тогда
		ПредставлениеПравила = НСтр("ru = 'Вес продукции:';
									|en = 'Product weight:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукции Тогда
		ПредставлениеПравила = НСтр("ru = 'Количество продукции:';
									|en = 'Product quantity:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемПродукции Тогда
		ПредставлениеПравила = НСтр("ru = 'Объем продукции:';
									|en = 'Volume of products:'");
	ИначеЕсли БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции Тогда
		ПредставлениеПравила = НСтр("ru = 'Плановая стоимость продукции:';
									|en = 'Target product cost:'");
	КонецЕсли;
	
	Возврат СокрЛП(ПредставлениеПравила + " " + ПредставлениеОтобранныхПозиций);
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецЕсли
