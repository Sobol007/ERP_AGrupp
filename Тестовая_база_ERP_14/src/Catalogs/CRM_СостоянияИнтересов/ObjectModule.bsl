
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	Если ЭтоНовый() И ЗначениеЗаполнено(Родитель) И Не ЗначениеЗаполнено(ВидСостояния) И НЕ ДополнительныеСвойства.Свойство("РеквизитаУпорядочиванияУстановлен") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	МАКСИМУМ(CRM_СостоянияИнтересов.РеквизитДопУпорядочивания) КАК РеквизитДопУпорядочивания
		                      |ИЗ
		                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
		                      |ГДЕ
		                      |	НЕ CRM_СостоянияИнтересов.Завершено
		                      |	И CRM_СостоянияИнтересов.Родитель = &Родитель");
		
		Запрос.УстановитьПараметр("Родитель", Родитель);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ДополнительныеСвойства.Вставить("РеквизитаУпорядочиванияУстановлен", Истина);
			РеквизитДопУпорядочивания = Выборка.РеквизитДопУпорядочивания + 1;
		КонецЕсли;
	КонецЕсли;
	Если НЕ ЭтоНовый() И ЗначениеЗаполнено(Родитель) Тогда
		Если ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.Первое И РеквизитДопУпорядочивания<>1 Тогда
			РеквизитДопУпорядочивания = 1;
		ИначеЕсли ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение И РеквизитДопУпорядочивания<>98 Тогда
			РеквизитДопУпорядочивания = 98;
		ИначеЕсли ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение И РеквизитДопУпорядочивания<>99 Тогда
			РеквизитДопУпорядочивания = 99;
		ИначеЕсли ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.ПустаяСсылка() И (РеквизитДопУпорядочивания < 2 ИЛИ РеквизитДопУпорядочивания >97) Тогда
			РеквизитДопУпорядочивания = Ссылка.РеквизитДопУпорядочивания;
		КонецЕсли;
	КонецЕсли;
	Если ПометкаУдаления Тогда
		Если ЗначениеЗаполнено(Родитель) И ЗначениеЗаполнено(ВидСостояния) И НЕ Родитель.ПометкаУдаления Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Нельзя пометить на удаление основные состояния сценария!';en='You can not mark the basic states of the script for deletion!'"));
		Иначе
			Используется = Ложь;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ВидСостояния) Тогда	
		Используется = Истина;
	КонецЕсли;
	Если ЭтоНовый() И ЗначениеЗаполнено(Родитель) И Не ЗначениеЗаполнено(ИндексЦвета) Тогда
		Если ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение Тогда
			ИндексЦвета = 19;
		ИначеЕсли ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение Тогда
			ИндексЦвета = 15;
		Иначе
			СписокЦветовПоУмолчанию = CRM_ОбщегоНазначенияКлиентСервер.ПолучитьСписокЦветовПоУмолчанию();
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	CRM_СостоянияИнтересов.ИндексЦвета КАК ИндексЦвета
			                      |ИЗ
			                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
			                      |ГДЕ
			                      |	CRM_СостоянияИнтересов.Родитель = &Родитель");
			Запрос.УстановитьПараметр("Родитель", Родитель);
			Выборка = Запрос.Выполнить().Выбрать();
			Для каждого ЦветПоУмолчанию из СписокЦветовПоУмолчанию Цикл
				Если НЕ Выборка.НайтиСледующий(Новый Структура("ИндексЦвета", ЦветПоУмолчанию.Значение)) Тогда
					ИндексЦвета = ЦветПоУмолчанию.Значение;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Не ЗначениеЗаполнено(ИндексЦвета) Тогда
				ИндексЦвета = 17;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("НеОбновлятьВоронкуПродаж") И ВидСостояния <> Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение Тогда
		Справочники.CRM_ВоронкиПродаж.ОбновитьВоронкуПродаж(Ссылка);
	КонецЕсли;
	
	Если ДополнительныеСвойства.ЭтоНовый И НЕ ДополнительныеСвойства.Свойство("НеСоздаватьОбязательные") И НЕ ЗначениеЗаполнено(Родитель) Тогда
		Справочники.CRM_СостоянияИнтересов.СоздатьОбязательныеСостоянияСценария(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ЗначениеЗаполнено(ЗавершатьЗапланированныеАктивности) Тогда
		ПроверяемыеРеквизиты.Добавить("ОтборЗавершаемыхАктивностей");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

