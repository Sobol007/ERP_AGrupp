#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы.

// Процедура выполняет заполнение предопределенных элементов справочника.
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьПредопределенныеЭлементы() Экспорт
	
	// Сценарий по умолчанию
	Сценарий = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	Сценарий.Наименование = НСтр("ru='Продажа';en='Sale'");
	Сценарий.ВидДела = Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	Сценарий.ДополнительныеСвойства.Вставить("НеСоздаватьОбязательные", Истина);
	Сценарий.ДополнительныеСвойства.Вставить("НеОбновлятьВоронкуПродаж", Истина);
	Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
	Сценарий.Записать();
	
	Воронка = Справочники.CRM_ВоронкиПродаж.Интересы.ПолучитьОбъект();
	Воронка.СценарийИнтереса = Сценарий.Ссылка;
	Воронка.Записать();
	
	// Элемент "ПервичныйИнтерес"
	ЭлементСправочника = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	ЭлементСправочника.Родитель					= Сценарий.Ссылка;
	ЭлементСправочника.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.Первое;
	ЭлементСправочника.Наименование = НСтр("ru = 'Переговоры'");
	ЭлементСправочника.ВероятностьСделки			= 10;
	ЭлементСправочника.ВидДела						= Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	ЭлементСправочника.Завершено					= Ложь;
	ЭлементСправочника.Используется					= Истина;
	ЭлементСправочника.ОбязательноеПланированиеАктивности = Перечисления.CRM_ПланируемыеТипыАктивности.ВзаимодействиеИлиЗадача;
	ЭлементСправочника.ИдентификаторПредопределенногоЭлемента = "95829933-6e17-4f3d-bcc2-39972430f2e0";
	ЭлементСправочника.ИндексЦвета = 16;
	ЭлементСправочника.Записать();
	
	// Элемент "ВыявлениеПотребностей"
	//ЭлементСправочника = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	//ЭлементСправочника.Родитель					= Сценарий.Ссылка;
	//ЭлементСправочника.Наименование = НСтр("ru='Выявление потребностей';en='Identification of needs'");
	//ЭлементСправочника.ВероятностьСделки			= 40;
	//ЭлементСправочника.ВидДела						= Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	//ЭлементСправочника.Завершено					= Ложь;
	//ЭлементСправочника.Используется					= Истина;
	//ЭлементСправочника.ОбязательноеПланированиеАктивности = Перечисления.CRM_ПланируемыеТипыАктивности.ВзаимодействиеИлиЗадача;
	//ЭлементСправочника.ИдентификаторПредопределенногоЭлемента = "9d995389-bb8e-44c1-a84a-f4e7ac02f4d2";
	//ЭлементСправочника.Записать();
	
	// Элемент "Предложение"
	ЭлементСправочника = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	ЭлементСправочника.Родитель					= Сценарий.Ссылка;
	ЭлементСправочника.Наименование = НСтр("ru='Счет';en='Account'");
	ЭлементСправочника.ВероятностьСделки			= 60;
	ЭлементСправочника.ВидДела						= Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	ЭлементСправочника.Завершено					= Ложь;
	ЭлементСправочника.Используется					= Истина;
	ЭлементСправочника.ОбязательноеЗаполнениеКлиента= Истина;
	ЭлементСправочника.ОбязательноеПланированиеАктивности = Перечисления.CRM_ПланируемыеТипыАктивности.ВзаимодействиеИлиЗадача;
	ЭлементСправочника.ИдентификаторПредопределенногоЭлемента = "6965b336-b89d-4a4a-81eb-9db37d0dd087";
	ЭлементСправочника.ИндексЦвета = 22;
	ЭлементСправочника.Записать();
	
	// Элемент "ВыполнениеДоговора"
	ЭлементСправочника = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	ЭлементСправочника.Родитель					= Сценарий.Ссылка;
	ЭлементСправочника.Наименование = НСтр("ru='Отгрузка';en='Shipment'");
	ЭлементСправочника.ВероятностьСделки			= 100;
	ЭлементСправочника.ВидДела						= Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	ЭлементСправочника.Завершено					= Ложь;
	ЭлементСправочника.Используется					= Истина;
	ЭлементСправочника.ОбязательноеЗаполнениеКлиента= Истина;
	ЭлементСправочника.ОбязательноеПланированиеАктивности = Перечисления.CRM_ПланируемыеТипыАктивности.ВзаимодействиеИлиЗадача;
	ЭлементСправочника.ИдентификаторПредопределенногоЭлемента = "b1bdc813-af6d-4103-86a2-77d73c84eae3";
	ЭлементСправочника.ИндексЦвета = 4;
	ЭлементСправочника.Записать();
	
	// Элемент "ИнтересЗакрыт"
	ЭлементСправочника = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	ЭлементСправочника.Родитель					= Сценарий.Ссылка;
	ЭлементСправочника.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение;
	ЭлементСправочника.Наименование = НСтр("ru='Завершен успешно';en='Finished successfully'");
	ЭлементСправочника.ВероятностьСделки			= 100;
	ЭлементСправочника.ВидДела						= Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	ЭлементСправочника.Завершено					= Истина;
	ЭлементСправочника.Используется					= Истина;
	ЭлементСправочника.ОбязательноеЗаполнениеКлиента= Истина;
	ЭлементСправочника.ЗавершатьЗапланированныеАктивности = Перечисления.CRM_ЗавершаемыеТипыАктивности.ВзаимодействияИЗадачи;
	ЭлементСправочника.ОтборЗавершаемыхАктивностей = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ВсеЗапланированные;
	ЭлементСправочника.РеквизитДопУпорядочивания	= 98;
	ЭлементСправочника.ДополнительныеСвойства.Вставить("РеквизитаУпорядочиванияУстановлен", Истина);
	ЭлементСправочника.ИдентификаторПредопределенногоЭлемента = "e9477c0f-e2f9-476b-8c82-122c95f87514";
	ЭлементСправочника.ИндексЦвета = 19;
	ЭлементСправочника.Записать();
	
	// Элемент "ИнтересПотерян"
	ЭлементСправочника = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	ЭлементСправочника.Родитель					= Сценарий.Ссылка;
	ЭлементСправочника.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение;
	ЭлементСправочника.Наименование = НСтр("ru='Завершен неудачно';en='Unsuccessful'");
	ЭлементСправочника.ВероятностьСделки			= 0;
	ЭлементСправочника.ВидДела						= Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	ЭлементСправочника.Завершено					= Истина;
	ЭлементСправочника.Используется					= Истина;
	ЭлементСправочника.ЗавершатьЗапланированныеАктивности = Перечисления.CRM_ЗавершаемыеТипыАктивности.ВзаимодействияИЗадачи;
	ЭлементСправочника.ОтборЗавершаемыхАктивностей = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ВсеЗапланированные;
	ЭлементСправочника.РеквизитДопУпорядочивания	= 99;
	ЭлементСправочника.ДополнительныеСвойства.Вставить("РеквизитаУпорядочиванияУстановлен", Истина);
	ЭлементСправочника.ИдентификаторПредопределенногоЭлемента = "48f2b1da-3a47-4602-961e-d1aef3701d95";
	ЭлементСправочника.ИндексЦвета = 15;
	ЭлементСправочника.Записать();
	
КонецПроцедуры // ЗаполнитьПредопределенныеЭлементы()

Процедура УстановитьИдентификаторыПредопределенных() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.Родитель <> ЗНАЧЕНИЕ(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка)
	                      |	И CRM_СостоянияИнтересов.Код = ""00000001""");
	Если Запрос.Выполнить().Пустой() Тогда
		БылиПредопределенные = Ложь;
	Иначе
		БылиПредопределенные = Истина;
	КонецЕсли;
	
	Выборка = Справочники.CRM_СостоянияИнтересов.Выбрать();
	РодительОбработан = Ложь;
	Пока Выборка.Следующий() Цикл
		
		Если БылиПредопределенные Тогда
			Если Выборка.Код = "00000001" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "95829933-6e17-4f3d-bcc2-39972430f2e0";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;	
			ИначеЕсли Выборка.Код = "00000002" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "9d995389-bb8e-44c1-a84a-f4e7ac02f4d2";
				Состояние.Записать();	
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			ИначеЕсли Выборка.Код = "00000003" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "6965b336-b89d-4a4a-81eb-9db37d0dd087";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			ИначеЕсли Выборка.Код = "00000004" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "d433549b-f2b1-48a3-ae47-689627e42842";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			ИначеЕсли Выборка.Код = "00000005" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "b1bdc813-af6d-4103-86a2-77d73c84eae3";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			ИначеЕсли Выборка.Код = "00000006" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "e9477c0f-e2f9-476b-8c82-122c95f87514";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			ИначеЕсли Выборка.Код = "00000007" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "48f2b1da-3a47-4602-961e-d1aef3701d95";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если Выборка.Код = "00000002" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "95829933-6e17-4f3d-bcc2-39972430f2e0";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;	
			ИначеЕсли Выборка.Код = "00000003" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "9d995389-bb8e-44c1-a84a-f4e7ac02f4d2";
				Состояние.Записать();	
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			ИначеЕсли Выборка.Код = "00000004" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "6965b336-b89d-4a4a-81eb-9db37d0dd087";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			ИначеЕсли Выборка.Код = "00000005" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "b1bdc813-af6d-4103-86a2-77d73c84eae3";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			ИначеЕсли Выборка.Код = "00000006" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "e9477c0f-e2f9-476b-8c82-122c95f87514";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			ИначеЕсли Выборка.Код = "00000007" Тогда
				Состояние = Выборка.ПолучитьОбъект();
				Состояние.ИдентификаторПредопределенногоЭлемента = "48f2b1da-3a47-4602-961e-d1aef3701d95";
				Состояние.Записать();
				Если НЕ РодительОбработан Тогда
					Сценарий = Состояние.Родитель.ПолучитьОбъект();	
					Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
					Сценарий.Записать();
					РодительОбработан = Истина;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры	

Процедура ОтказОтПредопределенныхЭлементов() Экспорт
	
	ЗапросСоответствияВоронке = Новый Запрос("ВЫБРАТЬ
	                                         |	CRM_ВоронкиПродаж.Ссылка КАК Ссылка,
	                                         |	CRM_ВоронкиПродажСостав.ТочкаМаршрута КАК ТочкаМаршрута
	                                         |ПОМЕСТИТЬ ЭтапыВоронки
	                                         |ИЗ
	                                         |	Справочник.CRM_ВоронкиПродаж КАК CRM_ВоронкиПродаж
	                                         |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.CRM_ВоронкиПродаж.Состав КАК CRM_ВоронкиПродажСостав
	                                         |		ПО (CRM_ВоронкиПродажСостав.Ссылка = CRM_ВоронкиПродаж.Ссылка)
	                                         |ГДЕ
	                                         |	CRM_ВоронкиПродаж.Родитель = &Воронка
	                                         |;
	                                         |
	                                         |////////////////////////////////////////////////////////////////////////////////
	                                         |ВЫБРАТЬ
	                                         |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка
	                                         |ПОМЕСТИТЬ Состояния
	                                         |ИЗ
	                                         |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                                         |ГДЕ
	                                         |	CRM_СостоянияИнтересов.Код <> ""00000007""
	                                         |;
	                                         |
	                                         |////////////////////////////////////////////////////////////////////////////////
	                                         |ВЫБРАТЬ
	                                         |	CRM_СостоянияИнтересов.Ссылка КАК Состояние,
	                                         |	ЭтапыВоронки.Ссылка КАК Этап
	                                         |ПОМЕСТИТЬ Соответствие
	                                         |ИЗ
	                                         |	Состояния КАК CRM_СостоянияИнтересов
	                                         |		ПОЛНОЕ СОЕДИНЕНИЕ ЭтапыВоронки КАК ЭтапыВоронки
	                                         |		ПО (ЭтапыВоронки.ТочкаМаршрута = CRM_СостоянияИнтересов.Ссылка)
	                                         |;
	                                         |
	                                         |////////////////////////////////////////////////////////////////////////////////
	                                         |ВЫБРАТЬ
	                                         |	Соответствие.Состояние КАК Состояние,
	                                         |	Соответствие.Этап КАК Этап,
	                                         |	ВЫБОР
	                                         |		КОГДА Соответствие.Состояние ЕСТЬ NULL
	                                         |			ТОГДА 1
	                                         |		ИНАЧЕ 0
	                                         |	КОНЕЦ КАК НетСостояния,
	                                         |	ВЫБОР
	                                         |		КОГДА Соответствие.Этап ЕСТЬ NULL
	                                         |			ТОГДА 1
	                                         |		ИНАЧЕ 0
	                                         |	КОНЕЦ КАК НетЭтапа
	                                         |ИЗ
	                                         |	Соответствие КАК Соответствие
	                                         |ИТОГИ
	                                         |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Состояние),
	                                         |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Этап),
	                                         |	СУММА(НетСостояния),
	                                         |	СУММА(НетЭтапа)
	                                         |ПО
	                                         |	ОБЩИЕ");
	ЗапросСоответствияВоронке.УстановитьПараметр("Воронка", Справочники.CRM_ВоронкиПродаж.Интересы);
	Выборка = ЗапросСоответствияВоронке.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВоронкаСоответствует = Истина;
	Если Выборка.Следующий() Тогда
		ВоронкаСоответствует = НЕ (Выборка.Состояние <> Выборка.Этап ИЛИ Выборка.НетСостояния>0 ИЛИ Выборка.НетЭтапа>0);
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.Наименование = ""Продажа""
	                      |	И CRM_СостоянияИнтересов.Родитель = Значение(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если НЕ Выборка.Следующий() Тогда
		
		Сценарий = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
		Сценарий.Наименование = НСтр("ru='Продажа';en='Sale'");
		Сценарий.ВидДела = Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
		Сценарий.ДополнительныеСвойства.Вставить("НеСоздаватьОбязательные", Истина);
		Если ВоронкаСоответствует Тогда
			Сценарий.ДополнительныеСвойства.Вставить("НеОбновлятьВоронкуПродаж", Истина);
		КонецЕсли;
		Сценарий.ИдентификаторПредопределенногоЭлемента = "445f4824-5aa6-41ca-b0ab-947f8daf7d17";
		Сценарий.Записать();
		
		Если ВоронкаСоответствует Тогда
			Воронка = Справочники.CRM_ВоронкиПродаж.Интересы.ПолучитьОбъект();
			Воронка.СценарийИнтереса = Сценарий.Ссылка;
			Воронка.Записать();
		КонецЕсли;

		Выборка = Справочники.CRM_СостоянияИнтересов.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.Ссылка = Сценарий.Ссылка Тогда Продолжить; КонецЕсли;
			
			Состояние = Выборка.ПолучитьОбъект();
			Состояние.Родитель = Сценарий.Ссылка;
			Если Выборка.Код = "00000001" Тогда
				Состояние.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.Первое;
				Состояние.ПометкаУдаления = Ложь;
				Состояние.Используется = Истина;
				Состояние.ИдентификаторПредопределенногоЭлемента = "95829933-6e17-4f3d-bcc2-39972430f2e0";
				Запрос = Новый Запрос("ВЫБРАТЬ
				                      |	CRM_ВидыВзаимодействий.Ссылка КАК Ссылка
				                      |ИЗ
				                      |	Справочник.CRM_ВидыВзаимодействий КАК CRM_ВидыВзаимодействий
				                      |ГДЕ
				                      |	CRM_ВидыВзаимодействий.СостояниеИнтереса = &СостояниеИнтереса
				                      |	И CRM_ВидыВзаимодействий.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Входящее)");
				Запрос.УстановитьПараметр("СостояниеИнтереса", Выборка.Ссылка);
				ВыборкаВида = Запрос.Выполнить().Выбрать();
				Пока ВыборкаВида.Следующий() Цикл
					ВидВзаимодействия = ВыборкаВида.Ссылка.ПолучитьОбъект();
					ВидВзаимодействия.СостояниеИнтереса = Справочники.CRM_СостоянияИнтересов.ПустаяСсылка();
					ВидВзаимодействия.Записать();
				КонецЦикла;
			ИначеЕсли Выборка.Код = "00000006" Тогда
				Состояние.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение;
				Состояние.Завершено = Истина;
				Состояние.РеквизитДопУпорядочивания	= 98;
				Состояние.ПометкаУдаления = Ложь;
				Состояние.ОбязательноеЗаполнениеКлиента= Истина;
				Состояние.Используется = Истина;
				Состояние.ИдентификаторПредопределенногоЭлемента = "e9477c0f-e2f9-476b-8c82-122c95f87514";
			ИначеЕсли Выборка.Код = "00000007" Тогда
				Состояние.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение;
				Состояние.Завершено = Истина;
				Состояние.РеквизитДопУпорядочивания	= 99;
				Состояние.ПометкаУдаления = Ложь;
				Состояние.Используется = Истина;
				Состояние.ИдентификаторПредопределенногоЭлемента = "48f2b1da-3a47-4602-961e-d1aef3701d95";
			ИначеЕсли Выборка.Код = "00000002"
				ИЛИ Выборка.Код = "00000003"
				ИЛИ Выборка.Код = "00000004"
				ИЛИ Выборка.Код = "00000005" Тогда
				Если Выборка.Код <> "00000002" Тогда
					Состояние.ОбязательноеЗаполнениеКлиента= Истина;
				КонецЕсли;
				Если Выборка.Код = "00000002"  Тогда
					Состояние.ИдентификаторПредопределенногоЭлемента = "9d995389-bb8e-44c1-a84a-f4e7ac02f4d2";
				ИначеЕсли Выборка.Код = "00000003"  Тогда
					Состояние.ИдентификаторПредопределенногоЭлемента = "6965b336-b89d-4a4a-81eb-9db37d0dd087";
				ИначеЕсли Выборка.Код = "00000004"  Тогда
					Состояние.ИдентификаторПредопределенногоЭлемента = "d433549b-f2b1-48a3-ae47-689627e42842";
				ИначеЕсли Выборка.Код = "00000005"  Тогда
					Состояние.ИдентификаторПредопределенногоЭлемента = "b1bdc813-af6d-4103-86a2-77d73c84eae3";
				КонецЕсли;
	
				Состояние.ПометкаУдаления = Ложь;
				Состояние.Используется = Истина;
			КонецЕсли;
			Состояние.ДополнительныеСвойства.Вставить("РеквизитаУпорядочиванияУстановлен", Истина);
			Если ВоронкаСоответствует Тогда
				Состояние.ДополнительныеСвойства.Вставить("НеОбновлятьВоронкуПродаж", Истина);
			КонецЕсли;
			Состояние.Записать();
		КонецЦикла;
		
		Запрос.Текст ="ВЫБРАТЬ
		              |	CRM_КартыМаршрутов.Ссылка КАК Ссылка
		              |ИЗ
		              |	Справочник.CRM_КартыМаршрутов КАК CRM_КартыМаршрутов
		              |ГДЕ
		              |	НЕ CRM_КартыМаршрутов.ПометкаУдаления
		              |	И НЕ CRM_КартыМаршрутов.Редактируется
		              |	И CRM_КартыМаршрутов.ТипПроцесса = ЗНАЧЕНИЕ(Перечисление.bpmТипыПроцессов.ПроцессОбъекта)
		              |	И CRM_КартыМаршрутов.ВидОбъектаСтрокой = &ИмяДокумента";
		Запрос.УстановитьПараметр("ИмяДокумента", "CRM_Интерес");
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Карта = Выборка.Ссылка.ПолучитьОбъект();
			Карта.СценарийИнтереса = Сценарий.Ссылка;
			Карта.Записать();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнениеНастроекПриПереходе() Экспорт
	УказыватьРезультат = Константы.Удалить_CRM_ОбязательноУказыватьРезультатПриИзмененииСостоянияИнтереса.Получить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.Родитель <> ЗНАЧЕНИЕ(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НужноВыводитьВероятностьВПредставление = Константы.УдалитьCRM_ОтображатьВероятностьСделки.Получить();
	
	Пока Выборка.Следующий() Цикл
		Состояние = Выборка.Ссылка.ПолучитьОбъект();
		
		Состояние.ДобавитьВероятностьВпредставлениеСостояния =  НужноВыводитьВероятностьВПредставление;
		
		Если Состояние.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.Первое Тогда
			Состояние.ОбязательноеПланированиеАктивности = Перечисления.CRM_ПланируемыеТипыАктивности.ВзаимодействиеИлиЗадача;
		ИначеЕсли Состояние.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение Тогда
			Состояние.ЗавершатьЗапланированныеАктивности = Перечисления.CRM_ЗавершаемыеТипыАктивности.ВзаимодействияИЗадачи;
			Состояние.ОтборЗавершаемыхАктивностей = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ВсеЗапланированные;
			Состояние.УказыватьДостигнутыйРезультат = УказыватьРезультат;
		ИначеЕсли Состояние.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение Тогда
			Состояние.ЗавершатьЗапланированныеАктивности = Перечисления.CRM_ЗавершаемыеТипыАктивности.ВзаимодействияИЗадачи;
			Состояние.ОтборЗавершаемыхАктивностей = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ВсеЗапланированные;
		Иначе
			Состояние.ОбязательноеПланированиеАктивности = Перечисления.CRM_ПланируемыеТипыАктивности.Взаимодействие;
			Состояние.УказыватьДостигнутыйРезультат = УказыватьРезультат;
			Состояние.ИнтерактивноеПланированиеАктивностей = УказыватьРезультат;
			Если УказыватьРезультат Тогда
				Состояние.ЗавершатьЗапланированныеАктивности = Перечисления.CRM_ЗавершаемыеТипыАктивности.ВзаимодействияИЗадачи;
				Состояние.ОтборЗавершаемыхАктивностей = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ВсеЗапланированные;
			КонецЕсли;
		КонецЕсли;
		Состояние.Записать();
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Данные.ДобавитьВероятностьВпредставлениеСостояния = Истина И ЗначениеЗаполнено(Данные.ВероятностьСделки) Тогда
		Представление = Данные.Наименование + " (" + Данные.ВероятностьСделки + "%)";
	Иначе
		Представление = Данные.Наименование;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("Наименование");
	Поля.Добавить("ВероятностьСделки");
	Поля.Добавить("ДобавитьВероятностьВпредставлениеСостояния");

КонецПроцедуры


Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	Если ВидФормы = "ФормаОбъекта" И Параметры.Свойство("Ключ") Тогда
		СтандартнаяОбработка = Ложь;
		Если НЕ ЗначениеЗаполнено(Параметры.Ключ.Родитель) Тогда
			ВыбраннаяФорма = "Справочник.CRM_СостоянияИнтересов.Форма.ФормаЭлементаСценария";
		Иначе
			ВыбраннаяФорма = "Справочник.CRM_СостоянияИнтересов.Форма.ФормаЭлемента";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СоздатьОбязательныеСостоянияСценария(Сценарий) Экспорт
	
	НовыйЭлемент = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	НовыйЭлемент.Родитель = Сценарий;
	НовыйЭлемент.Наименование = НСтр("ru = 'Переговоры'");
	НовыйЭлемент.ВидДела = Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	НовыйЭлемент.Завершено = Ложь;
	НовыйЭлемент.РеквизитДопУпорядочивания = 1;
	НовыйЭлемент.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.Первое;
	НовыйЭлемент.Используется = Истина;
	НовыйЭлемент.ОбязательноеПланированиеАктивности = Перечисления.CRM_ПланируемыеТипыАктивности.ВзаимодействиеИлиЗадача;
	НовыйЭлемент.Записать();
	
	НовыйЭлемент = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	НовыйЭлемент.Родитель = Сценарий;
	НовыйЭлемент.Наименование = НСтр("ru='Завершен успешно';en='Finished successfully'");
	НовыйЭлемент.ВидДела = Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	НовыйЭлемент.Завершено = Истина;
	НовыйЭлемент.РеквизитДопУпорядочивания = 98;
	НовыйЭлемент.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение;
	НовыйЭлемент.Используется = Истина;
	НовыйЭлемент.ВероятностьСделки = 100;
	НовыйЭлемент.ОбязательноеЗаполнениеКлиента= Истина;
	НовыйЭлемент.УказаниеОжидаемойВыручки		= Истина;
	НовыйЭлемент.ЗавершатьЗапланированныеАктивности = Перечисления.CRM_ЗавершаемыеТипыАктивности.ВзаимодействияИЗадачи;
	НовыйЭлемент.ОтборЗавершаемыхАктивностей = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ВсеЗапланированные;
	НовыйЭлемент.ДополнительныеСвойства.Вставить("РеквизитаУпорядочиванияУстановлен", Истина);
	НовыйЭлемент.Записать();
	
	НовыйЭлемент = Справочники.CRM_СостоянияИнтересов.СоздатьЭлемент();
	НовыйЭлемент.Родитель = Сценарий;
	НовыйЭлемент.Наименование = НСтр("ru='Завершен неудачно';en='Unsuccessful'");
	НовыйЭлемент.ВидДела = Справочники.CRM_ВидыДелВзаимодействий.Документ_CRM_Интерес;
	НовыйЭлемент.Завершено = Истина;
	НовыйЭлемент.РеквизитДопУпорядочивания = 99;
	НовыйЭлемент.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение;
	НовыйЭлемент.Используется = Истина;
	НовыйЭлемент.ВероятностьСделки = 0;
	НовыйЭлемент.ЗавершатьЗапланированныеАктивности = Перечисления.CRM_ЗавершаемыеТипыАктивности.ВзаимодействияИЗадачи;
	НовыйЭлемент.ОтборЗавершаемыхАктивностей = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ВсеЗапланированные;
	НовыйЭлемент.ДополнительныеСвойства.Вставить("РеквизитаУпорядочиванияУстановлен", Истина);
	НовыйЭлемент.Записать();
	
КонецПроцедуры

Функция ПервичноеСостояниеСценария(Сценарий) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.ВидСостояния = &ВидСостояния
	                      |	И CRM_СостоянияИнтересов.Родитель = &Родитель");
	
	Запрос.УстановитьПараметр("Родитель", Сценарий);
	Запрос.УстановитьПараметр("ВидСостояния", Перечисления.CRM_ВидыСостоянияИнтереса.Первое);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе	
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция УспешноеЗавершениеСценария(Сценарий) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.ВидСостояния = &ВидСостояния
	                      |	И CRM_СостоянияИнтересов.Родитель = &Родитель");
	
	Запрос.УстановитьПараметр("Родитель", Сценарий);
	Запрос.УстановитьПараметр("ВидСостояния", Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе	
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция НеудачноеЗавершениеСценария(Сценарий) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.ВидСостояния = &ВидСостояния
	                      |	И CRM_СостоянияИнтересов.Родитель = &Родитель");
	
	Запрос.УстановитьПараметр("Родитель", Сценарий);
	Запрос.УстановитьПараметр("ВидСостояния", Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе	
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция МассивСостоянийПоСценарию(Сценарий) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.Родитель = &Родитель");
	Запрос.УстановитьПараметр("Родитель", Сценарий);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

Процедура УстановитьЦветаСостояниям() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияИнтересов.Родитель КАК Родитель,
	                      |	CRM_СостоянияИнтересов.Ссылка КАК Ссылка,
	                      |	CRM_СостоянияИнтересов.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания
	                      |ИЗ
	                      |	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	                      |ГДЕ
	                      |	CRM_СостоянияИнтересов.Родитель <> ЗНАЧЕНИЕ(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	РеквизитДопУпорядочивания
	                      |ИТОГИ ПО
	                      |	Родитель");
	ВыборкаРодитель = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СписокЦветовПоУмолчанию = CRM_ОбщегоНазначенияКлиентСервер.ПолучитьСписокЦветовПоУмолчанию();
	Пока ВыборкаРодитель.Следующий() Цикл
		Индекс = 0;
		Выборка = ВыборкаРодитель.Выбрать();
		Пока Выборка.Следующий() Цикл
			Состояние = Выборка.Ссылка.ПолучитьОбъект();
			Если Состояние.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.УспешноеЗавершение Тогда
				Состояние.ИндексЦвета = 19;
			ИначеЕсли Состояние.ВидСостояния = Перечисления.CRM_ВидыСостоянияИнтереса.НеудачноеЗавершение Тогда
				Состояние.ИндексЦвета = 22;
			Иначе
				Если Индекс>7 Тогда
					Состояние.ИндексЦвета = 17;
				Иначе
					Состояние.ИндексЦвета = СписокЦветовПоУмолчанию[Индекс].Значение;
				КонецЕсли;
				Индекс = Индекс + 1;
			КонецЕсли;
			Состояние.Записать();
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли