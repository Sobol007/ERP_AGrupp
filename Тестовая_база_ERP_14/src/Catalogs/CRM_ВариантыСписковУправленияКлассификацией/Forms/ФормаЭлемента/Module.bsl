
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	CRM_КлассификаторыВызовСервера.ЗаполнитьИменаСписковУправленияКлассификацией(Элементы.ИмяСписка.СписокВыбора);	
	
	Если Параметры.ЗначениеКопирования.Пустая() Тогда
		СхемаИНастройки = Справочники.CRM_ВариантыСписковУправленияКлассификацией.ОписаниеИСхемаКомпоновкиДанныхНастройкиПоИмениМакета(Объект.Ссылка, Объект.СхемаКомпоновкиДанных);
	Иначе
		СхемаИНастройки = Справочники.CRM_ВариантыСписковУправленияКлассификацией.ОписаниеИСхемаКомпоновкиДанныхНастройкиПоИмениМакета(Параметры.ЗначениеКопирования, Параметры.ЗначениеКопирования.СхемаКомпоновкиДанных);
	КонецЕсли;
	
	Если ПустаяСтрока(СхемаИНастройки.Описание) Тогда
		Объект.СхемаКомпоновкиДанных = "";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка)
	  И ЗначениеЗаполнено(Объект.ИмяСписка) Тогда
		Объект.СхемаКомпоновкиДанных = "НаборДанных" + Объект.ИмяСписка;
	КонецЕсли;
	
	Адреса = АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище();
	
	АдресСхемыКомпоновкиДанных = Адреса.СхемаКомпоновкиДанных;
	АдресНастроекКомпоновкиДанных = Адреса.НастройкиКомпоновкиДанных;	
	
	УстановитьДоступностьИВидимостьЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если Не ЗначениеЗаполнено(Объект.СхемаКомпоновкиДанных) Тогда
		Если НЕ ПустаяСтрока(АдресСхемыКомпоновкиДанных) Тогда
			ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных));
		Иначе
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо настроить схему компоновки данных.';en='You must configure the layout of the data.'"), Объект.Ссылка, "Объект.СхемаКомпоновкиДанных",,Отказ);
		КонецЕсли;
		
	Иначе
		ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(АдресНастроекКомпоновкиДанных) Тогда
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	Иначе
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	ТекущийОбъект.ИмяСпискаПредставление = Элементы.ИмяСписка.СписокВыбора.НайтиПоЗначению(ТекущийОбъект.ИмяСписка).Представление;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписьВариантаСпискаКлассификации", Объект.Ссылка, Объект.ИмяСписка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанных(Команда)
	
	// Открыть редактор настроек схемы компоновки данных
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru='Настройка набора данных списка""%1""';en='Setting the list data set ""%1""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных, "%1", Объект.ИмяСписка);
	
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
						"НеПомещатьНастройкиВСхемуКомпоновкиДанных,
						|НеРедактироватьСхемуКомпоновкиДанных,
						|НеНастраиватьУсловноеОформление,
						|НеНастраиватьВыбор,
						|НеНастраиватьПорядок,
						|УникальныйИдентификатор,
						|АдресСхемыКомпоновкиДанных,
						|АдресНастроекКомпоновкиДанных,
						|Заголовок,
						|ИсточникШаблонов,
						|ИмяШаблонаСКД,
						|ВозвращатьИмяТекущегоШаблонаСКД",
						Истина,
						Ложь,
						Истина,
						Истина,
						Ложь,
						УникальныйИдентификатор,
						АдресСхемыКомпоновкиДанных,
						АдресНастроекКомпоновкиДанных,
						ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
						Неопределено,
						Неопределено,
						Истина),,,,, Новый ОписаниеОповещения("РедактироватьСхемуКомпоновкиДанныхЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	АдресаНастроек = Результат;
    
    Если ЗначениеЗаполнено(АдресаНастроек) Тогда        
        Объект.СхемаКомпоновкиДанных = АдресаНастроек.ИмяТекущегоШаблонаСКД;
        
        Если АдресаНастроек.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
            АдресНастроекКомпоновкиДанных = АдресаНастроек.АдресХранилищаНастройкиКомпоновщика;
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяСпискаПриИзменении(Элемент)	
	
	Если ЗначениеЗаполнено(Объект.ИмяСписка) Тогда
		Объект.СхемаКомпоновкиДанных = "НаборДанных" + Объект.ИмяСписка;
	КонецЕсли;
	
	Адреса = АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище();
	
	АдресСхемыКомпоновкиДанных = Адреса.СхемаКомпоновкиДанных;
	АдресНастроекКомпоновкиДанных = Адреса.НастройкиКомпоновкиДанных;	
	
	УстановитьДоступностьИВидимостьЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВспомогательныеПроцедурыФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьИВидимостьЭлементовФормы(Форма)
	Форма.Элементы.РедактироватьСхемуКомпоновкиДанных.Доступность = ЗначениеЗаполнено(Форма.Объект.ИмяСписка);
КонецПроцедуры // УстановитьДоступностьИВидимостьЭлементовФормы()

#КонецОбласти

#Область Прочее

&НаСервере 
Функция АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище()
	
	Возврат Справочники.CRM_ВариантыСписковУправленияКлассификацией.АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(Объект);
	
КонецФункции

#КонецОбласти

#КонецОбласти