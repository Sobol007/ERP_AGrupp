#Область ОбработчикиКомандФормы
&НаСервере
Процедура ВычислитьОбщееЧислоУчастников()
	КоличествоУчастников = ПартнерыИКонтактныеЛица.Количество()+CRM_СвоиУчастники.Количество();
КонецПроцедуры


&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	Если ДатаНачала > ДатаОкончания Тогда
		ДатаОкончания = ДатаНачала;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	Если ДатаОкончания < ДатаНачала Тогда
		ДатаНачала = ДатаОкончания;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьСтороннихУчастниковПоРезультатамОтчета(Команда)
	Если ПартнерыИКонтактныеЛица.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОчисткаСтороннихУчастниковПослеВопроса", ЭтотОбъект, Команда);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Список будет очищен. Продолжить?';en='The list will be cleared. Continue?'"), РежимДиалогаВопрос.ДаНет);
		Возврат
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаЗаполнитьСтороннихУчастниковПоРезультатамОтчетаЗавершение", ЭтотОбъект);
	CRM_ОбщегоНазначенияКлиент.ОткрытьФормуЗаполненияПоРезультатамОтчета(ЭтотОбъект, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьСтороннихУчастниковПоРезультатамОтчетаЗавершение(НаименованиеСохраненногоСписка, ДополнительныеПараметры) Экспорт
	
	Если НаименованиеСохраненногоСписка <> Неопределено Тогда
		СохраненныйСписок = CRM_ОбщегоНазначенияСервер.ПолучитьСохраненныйРезультатОтчетаПоНаименованию(НаименованиеСохраненногоСписка);
		Если СохраненныйСписок <> Неопределено Тогда
			ДопустимыеТипы = Новый ОписаниеТипов("СправочникСсылка.Партнеры");
			Для Каждого СтрокаСписка Из СохраненныйСписок Цикл
				Если ДопустимыеТипы.СодержитТип(ТипЗнч(СтрокаСписка.Значение)) Тогда
					НоваяСтрока = ПартнерыИКонтактныеЛица.Добавить();
					НоваяСтрока.Партнер = СтрокаСписка.Значение;
				КонецЕсли;
			КонецЦикла;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	ВычислитьОбщееЧислоУчастников();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчисткаСтороннихУчастниковПослеВопроса(Ответ, Команда) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПартнерыИКонтактныеЛица.Очистить();
		КомандаЗаполнитьСтороннихУчастниковПоРезультатамОтчета(Команда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СвоиУчастникиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Не Копирование Тогда
		Отказ = Истина;
		НоваяСтрока = CRM_СвоиУчастники.Добавить();
		Если ЗначениеЗаполнено(ДатаНачала) Тогда
			НоваяСтрока.ДатаНачала = НачалоДня(ДатаНачала);
		КонецЕсли;
		Если ЗначениеЗаполнено(ДатаОкончания) Тогда
			НоваяСтрока.ДатаОкончания = КонецДня(ДатаОкончания);
		КонецЕсли;
		
		// Уберем секунды
		Если ЗначениеЗаполнено(НоваяСтрока.ДатаОкончания) Тогда
			НоваяСтрока.ДатаОкончания = НоваяСтрока.ДатаОкончания - Секунда(НоваяСтрока.ДатаОкончания);
		КонецЕсли;
		
		Элементы.СвоиУчастники.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		
		Модифицированность = Истина;
	КонецЕсли;
ВычислитьОбщееЧислоУчастников();
КонецПроцедуры

&НаКлиенте
Процедура СвоиУчастникиДатаНачалаПриИзменении(Элемент)
	ТекДанные = Элементы.СвоиУчастники.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекДанные.ДатаНачала) Тогда Возврат; КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) Или ЗначениеЗаполнено(ДатаОкончания) Тогда
		Если ТекДанные.ДатаНачала < НачалоДня(ДатаНачала) Тогда
			ТекДанные.ДатаНачала = НачалоДня(ДатаНачала);
		ИначеЕсли ТекДанные.ДатаНачала > КонецДня(ДатаОкончания) Тогда
			ТекДанные.ДатаНачала = НачалоДня(ДатаОкончания);
		КонецЕсли;
	КонецЕсли;
	
	// Уберем секунды
	Если Секунда(ТекДанные.ДатаНачала) > 0 Тогда
		ТекДанные.ДатаНачала = ТекДанные.ДатаНачала - Секунда(ТекДанные.ДатаНачала);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.ДатаОкончания) И ТекДанные.ДатаНачала > ТекДанные.ДатаОкончания Тогда
		ТекДанные.ДатаОкончания = ТекДанные.ДатаНачала;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвоиУчастникиДатаОкончанияПриИзменении(Элемент)
	ТекДанные = Элементы.СвоиУчастники.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекДанные.ДатаОкончания) Тогда Возврат; КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) Или ЗначениеЗаполнено(ДатаОкончания) Тогда
		Если ТекДанные.ДатаОкончания > КонецДня(ДатаОкончания) Тогда
			ТекДанные.ДатаОкончания = КонецДня(ДатаОкончания);
		ИначеЕсли ТекДанные.ДатаОкончания < НачалоДня(ДатаНачала) Тогда
			ТекДанные.ДатаОкончания = КонецДня(ДатаНачала);
		КонецЕсли;
	КонецЕсли;
	
	// Уберем секунды
	Если Секунда(ТекДанные.ДатаОкончания) > 0 Тогда
		ТекДанные.ДатаОкончания = ТекДанные.ДатаОкончания - Секунда(ТекДанные.ДатаОкончания);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.ДатаНачала) И ТекДанные.ДатаОкончания < ТекДанные.ДатаНачала Тогда
		ТекДанные.ДатаОкончания = ТекДанные.ДатаНачала;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПартнерыИКонтактныеЛицаПриИзменении(Элемент)
	ВычислитьОбщееЧислоУчастников();
КонецПроцедуры

&НаКлиенте
Процедура СвоиУчастникиПриИзменении(Элемент)
	ВычислитьОбщееЧислоУчастников();
КонецПроцедуры


&НаКлиенте
Процедура ПодборУчастников()
	МассивУчастников = Новый Массив();
	Для Каждого СтрокаТаблицы Из CRM_СвоиУчастники Цикл
		Если	ЗначениеЗаполнено(СтрокаТаблицы.Участник)
			И	ТипЗнч(СтрокаТаблицы.Участник) = Тип("СправочникСсылка.Пользователи")
			И	ЗначениеЗаполнено(СтрокаТаблицы.ДатаНачала)
			И	ЗначениеЗаполнено(СтрокаТаблицы.ДатаОкончания) Тогда
			//
			МассивУчастников.Добавить(Новый Структура("Пользователь,НачалоПериода,ОкончаниеПериода", СтрокаТаблицы.Участник, СтрокаТаблицы.ДатаНачала, СтрокаТаблицы.ДатаОкончания));
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыСтруктура = Новый Структура();
	ПараметрыСтруктура.Вставить("Пользователи",		МассивУчастников);
	ПараметрыСтруктура.Вставить("ПериодНачало",		ДатаНачала);
	ПараметрыСтруктура.Вставить("ПериодОкончание",	ДатаОкончания);
	ПараметрыСтруктура.Вставить("ВыбиратьПериоды");
	ПараметрыСтруктура.Вставить("ПоказыватьТаблицуПериодов");
	ПараметрыСтруктура.Вставить("ИнтервалШкалыВремени", 60);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодборУчастниковЗавершение", ЭтотОбъект, МассивУчастников);
	ОткрытьФорму("ОбщаяФорма.CRM_ПодборПользователейПоКалендарю", ПараметрыСтруктура, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ПодборУчастниковЗавершение(РезультатОткрытия, МассивУчастников) Экспорт
	Если ТипЗнч(РезультатОткрытия) = Тип("Массив") Тогда
		МинимальнаяВыбраннаяДата = Неопределено;
		МаксимальнаяВыбраннаяДата = Неопределено;
		МассивВыбранныеПользователи = Новый Массив();
		Для Каждого ДобавляемыйПользователь Из РезультатОткрытия Цикл
			МассивВыбранныеПользователи.Добавить(ДобавляемыйПользователь.Пользователь);
			
			СтруктураПоиска = Новый Структура("Участник,ДатаНачала,ДатаОкончания", ДобавляемыйПользователь.Пользователь, ДобавляемыйПользователь.НачалоПериода, ДобавляемыйПользователь.ОкончаниеПериода);
			Если CRM_СвоиУчастники.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
				НоваяСтрока = CRM_СвоиУчастники.Добавить();
				НоваяСтрока.Участник		= ДобавляемыйПользователь.Пользователь;
				НоваяСтрока.ДатаНачала		= ДобавляемыйПользователь.НачалоПериода;
				НоваяСтрока.ДатаОкончания	= ДобавляемыйПользователь.ОкончаниеПериода;
			КонецЕсли;
			Если МинимальнаяВыбраннаяДата = Неопределено Или МинимальнаяВыбраннаяДата > ДобавляемыйПользователь.НачалоПериода Тогда
				МинимальнаяВыбраннаяДата = ДобавляемыйПользователь.НачалоПериода;
			КонецЕсли;
			Если МаксимальнаяВыбраннаяДата = Неопределено Или МаксимальнаяВыбраннаяДата < ДобавляемыйПользователь.ОкончаниеПериода Тогда
				МаксимальнаяВыбраннаяДата = ДобавляемыйПользователь.ОкончаниеПериода;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого УдаляемыйПользователь Из МассивУчастников Цикл
			Если МассивВыбранныеПользователи.Найти(УдаляемыйПользователь.Пользователь) = Неопределено Тогда
				НайденныеСтроки = CRM_СвоиУчастники.НайтиСтроки(Новый Структура("Участник", УдаляемыйПользователь.Пользователь));
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					CRM_СвоиУчастники.Удалить(НайденнаяСтрока);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(МинимальнаяВыбраннаяДата) И ЗначениеЗаполнено(МаксимальнаяВыбраннаяДата) Тогда
			ДатаНачала = МинимальнаяВыбраннаяДата;
			ДатаОкончания = МаксимальнаяВыбраннаяДата;
			
			ДатаНачалаПриИзменении(Неопределено);
			ДатаОкончанияПриИзменении(Неопределено);
		КонецЕсли;
		
		Модифицированность = Истина;
		ВычислитьОбщееЧислоУчастников();
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура КомандаПодборСвоихУчастников(Команда)
	ПодборУчастников();
КонецПроцедуры

&НаКлиенте
Процедура КомандаСортироватьУчастниковПоВозростанию(Команда)
	CRM_СвоиУчастники.Сортировать("Участник ВОЗР");
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСортироватьУчастниковПоУбыванию(Команда)
	CRM_СвоиУчастники.Сортировать("Участник УБЫВ");
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодборКлиентов(Команда)
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", 		  Истина);
	ПараметрыФормы.Вставить("ПрограммноеОткрытие",Истина);		
	
	ОткрытьФорму("Справочник.Партнеры.ФормаВыбора", ПараметрыФормы, Элементы.ПартнерыИКонтактныеЛица);

КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ЭтотОбъект.ПартнерыИКонтактныеЛица.Загрузить(Параметры.ПартнерыИКонтактныеЛица.Выгрузить());
	ЭтотОбъект.CRM_СвоиУчастники.Загрузить(Параметры.CRM_СвоиУчастники.Выгрузить());
	ДатаОкончания = Параметры.ДатаОкончания;
	ДатаНачала = Параметры.ДатаНачала;
КонецПроцедуры


&НаСервереБезКонтекста
Функция ВернутьКЛПартнера(ТекПартнер)
	
	Возврат ТекПартнер.CRM_ОсновноеКонтактноеЛицо;
	
КонецФункции


&НаКлиенте
Процедура ПартнерыИКонтактныеЛицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда	
		Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл			
			ТекДанные = ПартнерыИКонтактныеЛица.Добавить();
			ТекДанные.Партнер = ЭлементМассива;
			ТекДанные.КонтактноеЛицо = ВернутьКЛПартнера(ТекДанные.Партнер);	
		КонецЦикла;		
		ВычислитьОбщееЧислоУчастников();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
		
	Если Не ТолькоПросмотр Тогда
		СохранитьПараметры = Истина;
	КонецЕсли;
	 Результат =новый Структура("CRM_СвоиУчастники,ПартнерыИКонтактныеЛица",ЭтотОбъект.CRM_СвоиУчастники,ЭтотОбъект.ПартнерыИКонтактныеЛица);
	Закрыть(Результат);

КонецПроцедуры

#КонецОбласти
