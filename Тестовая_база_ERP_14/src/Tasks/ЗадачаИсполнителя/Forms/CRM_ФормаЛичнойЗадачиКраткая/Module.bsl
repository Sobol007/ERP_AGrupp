#Область ОписаниеПеременных

&НаКлиенте
Перем ЗакрыватьПослеЗаписи;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() И Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Объект.ДатаНачала = ТекущаяДатаСеанса();
		Объект.Автор = ТекущийПользователь();
		Объект.Исполнитель = ТекущийПользователь();
		Объект.CRM_Личная = Истина;
	КонецЕсли;
	 
	Заголовок = "Личная задача" + " от " +Формат(Объект.Дата, "ДФ='d MMMM yyyy'; ДЛФ=DD") + ", " + Формат(Объект.Дата, "ДФ=HH:mm; ДЛФ=T");
	
	ПризнакЕстьПодчиненныеЗадачи = CRM_БизнесПроцессыИЗадачиВызовСервера.ЕстьПодчиненныеЗадачи(Объект.Ссылка);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВариантСрока = Перечисления.CRM_ВариантыУстановкиДаты.ЧерезДень;
		Объект.СрокИсполнения = Объект.ДатаНачала + 86400;
	Иначе
		ВариантСрока = Перечисления.CRM_ВариантыУстановкиДаты.Вручную;
	КонецЕсли;
	
	Если Параметры.Свойство("Начало") Тогда
		Объект.ДатаНачала = Параметры.Начало;
	КонецЕсли;
	Если Параметры.Свойство("Окончание") Тогда
		Объект.СрокИсполнения = Параметры.Окончание;
		ВариантСрока = Перечисления.CRM_ВариантыУстановкиДаты.Вручную;
	КонецЕсли;
	Если Параметры.Свойство("Наименование") Тогда
		Объект.Наименование = Параметры.Наименование;
	КонецЕсли;
	
	ЗаполнитьДанныеФормыСервер();
	НачальныйПризнакВыполнения = Объект.Выполнена;
	
	ТолькоПросмотр = (НЕ Объект.Автор = ТекущийПользователь()) И (НЕ Объект.Исполнитель = ТекущийПользователь());
	Если Объект.Предмет <> Неопределено И НЕ Объект.Предмет.Пустая() Тогда
		Если ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			Если Параметры.Свойство("РежимОткрытияОкна") Тогда
				РежимОткрытияОкна = Параметры.РежимОткрытияОкна;
			КонецЕсли;
			Элементы.ДатаОкончание.АвтоОтметкаНезаполненного = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ИспользоватьДатуИВремяВСрокахЗадач	= ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	
	УстановитьСвойстваЭлементов();
	
	//Если НЕ Объект.Ссылка.Пустая() Тогда
	//	Элементы.Исполнитель.ТолькоПросмотр = Истина;
	//КонецЕсли;
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ТекущийЭлемент = Элементы.РезультатВыполнения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ПроверитьНаКорректность() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПризнакНовойЗадачи = ТекущийОбъект.Ссылка.Пустая();
	
	Если НЕ ПризнакНовойЗадачи Тогда
		Если НЕ ПроверитьЗаполнение() Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		Если НЕ ТекущийОбъект.ДатаНачала = ТекущийОбъект.Ссылка.ДатаНачала Тогда
			ПризнакИзмененаДата = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ТекущийОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьСвойстваЭлементов();
	
	Оповестить("СохраненаЛичнаяЗадача",Объект.Предмет);
	
	Если ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда
		Оповестить("ОбновленыДанныеСобытия", Новый Структура("СсылкаНаОбъект, ОбновлятьКалендарь", Неопределено, Параметры.ОбновлятьКалендарь), ЭтотОбъект);
	КонецЕсли;
	
	Оповестить("ОбновитьНапоминания", Новый Структура("ОткрыватьАктивизироватьФормуНапоминаний", Ложь), ЭтотОбъект);
	Оповестить("ОбновитьПланировщик");
	Оповестить("ОбновитьАРМ");
	
	Если ЗакрыватьПослеЗаписи Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ЗакрыватьПослеЗаписи = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВремяНачалоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Элемент", Элемент);
	Дополнительно.Вставить("Данные", "ВремяНачало");
	Дополнительно.Вставить("Обработчик", "ДатаВремяНачалаПриИзменении");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОповещенияВыбранногоВремени", ЭтотОбъект, Дополнительно);
	CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ВремяНачало, Элемент,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Элемент", Элемент);
	Дополнительно.Вставить("Данные", "ВремяОкончание");
	Дополнительно.Вставить("Обработчик", "ДатаВремяОкончанияПриИзменении");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОповещенияВыбранногоВремени", ЭтотОбъект, Дополнительно);
	Если НачалоДня(ДатаНачало) = НачалоДня(ДатаОкончание) Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ВремяОкончание, Элемент, ВремяНачало, Истина, ОписаниеОповещения);
	Иначе
		CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ВремяОкончание, Элемент,,, ОписаниеОповещения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаВремяНачалаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ДатаОкончание) Тогда
		Если ДатаНачало > ДатаОкончание Тогда
			ДатаОкончание = ДатаНачало;
			ВремяОкончание = ВремяНачало;
		ИначеЕсли (ДатаОкончание = ДатаНачало) И (ВремяОкончание < ВремяНачало) Тогда
			ВремяОкончание = ВремяНачало;
		КонецЕсли;
	КонецЕсли;
	
	СкорректироватьДатыЗадачи();
КонецПроцедуры

&НаКлиенте
Процедура ДатаВремяОкончанияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ДатаОкончание) Тогда
		Если ДатаОкончание < ДатаНачало Тогда
			ДатаНачало = ДатаОкончание;
			ВремяНачало = ВремяОкончание;
		ИначеЕсли (ДатаОкончание = ДатаНачало) И (ВремяОкончание < ВремяНачало) Тогда
			ВремяОкончание = ВремяНачало;
		КонецЕсли;
	КонецЕсли;
	
	СкорректироватьДатыЗадачи();
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриИзменении(Элемент)
	УстановитьВидимость();	
КонецПроцедуры

&НаКлиенте
Процедура РезультатИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Элементы.Выполнить.Видимость = ЗначениеЗаполнено(Текст);
	Элементы.Выполнить.КнопкаПоУмолчанию = Элементы.Выполнить.Видимость;
	Элементы.ЗаписатьИЗакрыть.КнопкаПоУмолчанию = НЕ Элементы.Выполнить.КнопкаПоУмолчанию;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть()
	
	ЗакрыватьПослеЗаписи = Истина;
	Если ВыполнитьЗадачу Тогда
		Записать(Новый Структура("ВыполнитьЗадачу", Истина));
	Иначе
		Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИЗакрыть(Команда)
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	Если Не Объект.Выполнена Тогда
		ВыполнитьЗадачу = Истина;
		БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтотОбъект, Истина);
		
		ВыполнитьЗадачу = Ложь;
	Иначе
		Объект.Выполнена = Ложь;
		ЗакрыватьПослеЗаписи = Истина;
		Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗадачу(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьЗадачуНачало", ЭтотОбъект);
	ПроверкаВопросЗаписатьДанные(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗадачуНачало(Продолжать, ДополнительныеПараметры) Экспорт
	
	Если Продолжать Тогда
		Если Не Объект.Выполнена Тогда
			
			ЗавершитьЗадачуЗавершение(Дата(1,1,1), ДополнительныеПараметры);
			
		Иначе
			Объект.Выполнена = Ложь;
			Если Записать() Тогда
				УстановитьСвойстваЭлементов();
				Оповестить("СохраненаЛичнаяЗадача",Объект.Предмет);
				Закрыть();
			КонецЕсли;
			Оповестить("ОбновитьНапоминания", Новый Структура("ОткрыватьАктивизироватьФормуНапоминаний", Ложь), ЭтотОбъект);
			Оповестить("ОбновитьАРМ");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗадачуЗавершение(ДатаПереноса, ДополнительныеПараметы)
	Если ДатаПереноса = Неопределено  Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗавершитьЗадачуССобытиями(ДополнительныеПараметы.СобытияЗадачи, ДополнительныеПараметы.ВариантЗавершенияСобытий, ДатаПереноса) Тогда
		Если ДополнительныеПараметы.СобытияЗадачи.Количество() > 0 Тогда
			// Нужно чтобы обновился календарь.
			Оповестить("ОбновленыДанныеСобытия", Новый Структура("СсылкаНаОбъект, ОбновлятьКалендарь", Неопределено, Параметры.ОбновлятьКалендарь), ЭтотОбъект);
		КонецЕсли;
		ОповеститьОбИзменении(Объект.Ссылка);
		Оповестить("СохраненаЛичнаяЗадача",Объект.Предмет);
		
		Если (ЗначениеЗаполнено(Объект.Предмет) И ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее")) И Объект.Выполнена Тогда
			
			УчетнаяЗапись = CRM_УправлениеЭлектроннойПочтой.ПолучитьУчетнуюЗаписьПоПисьму(Объект.Предмет);				
			ФормаПисьма = ПолучитьФорму("Документ.ЭлектронноеПисьмоВходящее.Форма.CRM_ФормаДокумента",Новый Структура("Ключ",Объект.Предмет)); 
			
			Если НЕ (ФормаПисьма = Неопределено) Тогда
				ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьЗадачуЗавершениеПереносВПапку", ЭтотОбъект, ФормаПисьма);
				CRM_УправлениеЭлектроннойПочтойКлиент.ВопросПеренестиПисьмоВПапкуОбработанные(УчетнаяЗапись, ФормаПисьма.Папка, ОписаниеОповещения);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Закрыть();
	КонецЕсли;
	
	
	Оповестить("ОбновитьНапоминания", Новый Структура("ОткрыватьАктивизироватьФормуНапоминаний", Ложь), ЭтотОбъект);
	
	Оповестить("ОбновитьАРМ");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗадачуЗавершениеПереносВПапку(ПапкаОтработанные, ФормаПисьма) Экспорт
	
	Если НЕ (ПапкаОтработанные = ПредопределенноеЗначение("Справочник.ПапкиЭлектронныхПисем.ПустаяСсылка")) Тогда
		CRM_УправлениеЭлектроннойПочтой.ПеренестиПисьмоВПапку(Объект.Предмет, ПапкаОтработанные);
		Оповестить("CRM_УстановленФлагОбработано",, ФормаПисьма);
		//Если ФормаПисьма.Открыта() Тогда
		//	Если НЕ ПапкаОтработанные = ПредопределенноеЗначение("Справочник.ПапкиЭлектронныхПисем.ПустаяСсылка") Тогда
		//		ФормаПисьма.Папка = ПапкаОтработанные;
		//	КонецЕсли;
		//	ФормаПисьма.Объект.Удалить_Рассмотрено = Истина;
		//	ФормаПисьма.Модифицированность = Истина;
		//Иначе
		//	CRM_УправлениеЭлектроннойПочтой.ПеренестиПисьмоВПапку(Объект.Предмет, ПапкаОтработанные);
		//	Оповестить("CRM_УстановленФлагОбработано");
		//КонецЕсли;
	КонецЕсли;
	
	Закрыть();
	
	Оповестить("ОбновитьНапоминания", Новый Структура("ОткрыватьАктивизироватьФормуНапоминаний", Ложь), ЭтотОбъект);
	Оповестить("ОбновитьАРМ");
	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	Если ПроверитьЗаполнение() И ПроверитьНаКорректность() Тогда
		Если Модифицированность Тогда
			Записать();
		КонецЕсли;	
		ОткрытьФорму("Задача.ЗадачаИсполнителя.ФормаОбъекта", Новый Структура("Ключ, ИзСпискаАктивностей", Объект.Ссылка, Ложь), ВладелецФормы);
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	
	ТекстВопроса = НСтр("ru = 'Задача будет удалена. Продолжить?'");
	ОповещениеЗавершения = Новый ОписаниеОповещения("УдалитьЗавершение", ЭтотОбъект, Новый Структура);
	ПоказатьВопрос(ОповещениеЗавершения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Модифицированность = Ложь;
		Закрыть();
	Иначе
		Объект.ПометкаУдаления = Истина;
		Записать();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
// Функция возвращает текущего пользователя.
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	СправочникСсылка	- Текущий пользователь.
//
Функция ТекущийПользователь()
	Возврат Пользователи.ТекущийПользователь();
КонецФункции // ТекущийПользователь()

&НаСервере
Процедура ЗаполнитьДанныеФормыСервер()
	ДатаВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Объект.ДатаНачала);
	ДатаНачало	= ДатаВремя.Дата;
	ВремяНачало	= ДатаВремя.Время;
	
	ДатаВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Объект.СрокИсполнения);
	ДатаОкончание	= ДатаВремя.Дата;
	ВремяОкончание	= ДатаВремя.Время;
КонецПроцедуры

&НаКлиенте
Функция ПроверитьНаКорректность()
	Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Дата начала должна быть заполнена!';en='The date started should be fill!'"),, "ДатаНачало");
		Возврат Ложь;
	КонецЕсли;
	
	//Если Не ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Срок должен быть заполнен!';en='Period should be fill!'"),, "ДатаОкончание");
	//	Возврат Ложь;
	//КонецЕсли;
	
	Если ТипЗнч(Объект.Предмет) = Тип("ДокументСсылка.CRM_Интерес") И Не ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнен срок!';en='The deadline is not filled!'"),, "ДатаОкончание");
		Возврат Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.СрокИсполнения) И (Объект.СрокИсполнения < Объект.ДатаНачала) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Срок должен быть больше даты начала!';en='Period should be more date started!'"),, "ДатаОкончание");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаСервере
Процедура СкорректироватьДатыЗадачи()
	
	Объект.ДатаНачала		= CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаНачало, ВремяНачало);
	Объект.СрокИсполнения	= CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаОкончание, ВремяОкончание);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваЭлементов()
	Если Объект.Выполнена Тогда
		Элементы.Выполнить.Заголовок = НСтр("ru='Отменить выполнение';en='Cancelled execution'");
	Иначе
		Элементы.Выполнить.Заголовок = НСтр("ru='Выполнить';en='Execute'");
	КонецЕсли;
	
	Элементы.ГруппаПериодДаты.ТолькоПросмотр = ПризнакЕстьПодчиненныеЗадачи;
	Элементы.ГруппаПериодВремя.ТолькоПросмотр = ПризнакЕстьПодчиненныеЗадачи;
		
КонецПроцедуры

&НаСервере
Функция ЗавершитьЗадачуССобытиями(СобытияЗадачи, ВариантЗавершенияСобытий, ДатаПереноса)
	СтруктураЗаписи = Новый Структура("ВыполнитьЗадачу", Истина);
	Записать(СтруктураЗаписи);
	
	РезультатВыполнения = Объект.Выполнена;
	
	Если РезультатВыполнения И СобытияЗадачи.Количество() > 0 И ВариантЗавершенияСобытий <> Неопределено Тогда
		РезультатВыполнения = CRM_БизнесПроцессыИЗадачиВызовСервера.ПеренестиСобытияЗадачи(СобытияЗадачи, Объект.ДатаНачала, ВариантЗавершенияСобытий, ДатаПереноса);
	КонецЕсли;
	
	УстановитьСвойстваЭлементов();
	
	Возврат РезультатВыполнения;
КонецФункции

&НаКлиенте
Процедура ПроверкаВопросЗаписатьДанные(ОписаниеОповещенияОЗавершении)
	Если Объект.Ссылка.Пустая() Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаВопросЗаписатьДанныеЗавершение", ЭтотОбъект, ОписаниеОповещенияОЗавершении);
		ПоказатьВопрос(ОписаниеОповещения, НСтр(	"ru = 'Данные еще не записаны.
								|Добавление события возможно только после записи данных.
								|Данные будут записаны.'"), РежимДиалогаВопрос.ОКОтмена);
		//
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаВопросЗаписатьДанныеЗавершение(Ответ, ОписаниеОповещенияОЗавершении) Экспорт
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Записать();
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Истина);
		Иначе
			ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Ложь);
		КонецЕсли;
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
// Процедура обработки выбора времени из списка.
//
Процедура ОбработкаОповещенияВыбранногоВремени(ВыбранноеВремя, Дополнительно) Экспорт
	Если ВыбранноеВремя <> Неопределено Тогда
		ЭтотОбъект[Дополнительно.Данные] = ВыбранноеВремя.Значение;
		Если Дополнительно.Обработчик = "ДатаВремяОкончанияПриИзменении" Тогда
			ДатаВремяОкончанияПриИзменении(Дополнительно.Элемент);
		КонецЕсли;	
		Если Дополнительно.Обработчик = "ДатаВремяНачалаПриИзменении" Тогда
			ДатаВремяНачалаПриИзменении(Дополнительно.Элемент);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьСрокОповещенияПоВарианту()

	ТекущаяДатадляСрока = ТекущаяДатаСеанса();
	
	Если ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.Сейчас Тогда
		
		Объект.СрокИсполнения	= ТекущаяДатадляСрока;
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.Через15Минут Тогда	
		
		Объект.СрокИсполнения	= ТекущаяДатадляСрока + 900;
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.ЧерезЧас Тогда	
		
		Объект.СрокИсполнения	= ТекущаяДатадляСрока + 3600;
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.Через4Часа Тогда	
		
		Объект.СрокИсполнения	= ТекущаяДатадляСрока + 14400;
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.Через8Часов Тогда	
		
		Объект.СрокИсполнения	= ТекущаяДатадляСрока + 28800;
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.ЧерезДень Тогда	
		
		Объект.СрокИсполнения	= ТекущаяДатадляСрока + 86400;
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.ЧерезТриДня Тогда	
		
		Объект.СрокИсполнения	= ТекущаяДатадляСрока + 259200;
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.ЧерезНеделю Тогда	
		
		Объект.СрокИсполнения	= ТекущаяДатадляСрока + 604800;
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.ЧерезДвеНедели Тогда	
		
		Объект.СрокИсполнения	= ТекущаяДатадляСрока + 1209600;
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.ЧерезМесяц Тогда	
		
		Объект.СрокИсполнения	= ДобавитьМесяц(ТекущаяДатадляСрока,1);
		
	ИначеЕсли ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.ЧерезТриМесяца Тогда	
		
		Объект.СрокИсполнения	= ДобавитьМесяц(ТекущаяДатадляСрока,3);
		
	Иначе //Если Объект.ВариантСрока=Перечисления.CRM_ВариантыУстановкиДаты.Вручную Тогда	
		
		Если Объект.СрокИсполнения=Дата(1,1,1) Тогда
		
			Объект.СрокИсполнения	= ТекущаяДатадляСрока;	
		
		КонецЕсли; 
		
	КонецЕсли;	
	
	ДатаВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Объект.СрокИсполнения);
	ДатаОкончание	= ДатаВремя.Дата;
	ВремяОкончание	= ДатаВремя.Время;
	
	
КонецПроцедуры // ПолучитьСрокОповещенияПоВарианту()

&НаКлиенте
Процедура ВариантВыбораПериодаПриИзменении(Элемент)
	ПолучитьСрокОповещенияПоВарианту();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.Выполнить.Видимость = ЗначениеЗаполнено(Объект.РезультатВыполнения);
	Элементы.Выполнить.КнопкаПоУмолчанию = Элементы.Выполнить.Видимость;
	Элементы.ЗаписатьИЗакрыть.КнопкаПоУмолчанию = НЕ Элементы.Выполнить.КнопкаПоУмолчанию;
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

НеПроверятьОповещения = Ложь;
ЗакрыватьПослеЗаписи = Ложь;

#КонецОбласти

