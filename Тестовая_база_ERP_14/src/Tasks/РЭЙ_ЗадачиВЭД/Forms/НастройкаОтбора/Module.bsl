
&НаКлиенте
Процедура КомандаОК(Команда)
	
	Результат = КомандаОКНаСервере();
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Функция ОбработатьВидСравненияДляЗапроса(текВидСравнения)
	
	стрНе = "";
	стрУсловие = "";
	
	Если текВидСравнения = ВидСравнения.Равно Тогда
		стрУсловие = "=";
	ИначеЕсли текВидСравнения = ВидСравнения.НеРавно Тогда
		стрУсловие = "<>";
	ИначеЕсли текВидСравнения = ВидСравнения.ВСписке Тогда
		стрУсловие = "В";
	ИначеЕсли текВидСравнения = ВидСравнения.ВСпискеПоИерархии Тогда
		стрУсловие = "В ИЕРАРХИИ";
	ИначеЕсли текВидСравнения = ВидСравнения.НеВСписке Тогда
		стрНе = "НЕ";
		стрУсловие = "В";
	ИначеЕсли текВидСравнения = ВидСравнения.НеВСпискеПоИерархии Тогда
		стрНе = "НЕ";
		стрУсловие = "В ИЕРАРХИИ";
	ИначеЕсли текВидСравнения = ВидСравнения.ВИерархии Тогда
		стрУсловие = "В ИЕРАРХИИ";
	ИначеЕсли текВидСравнения = ВидСравнения.НеВИерархии Тогда
		стрНе = "НЕ";
		стрУсловие = "В ИЕРАРХИИ";
	КонецЕсли;
	
	Возврат Новый Структура("Не, Условие", стрНе, стрУсловие);
	
КонецФункции

&НаСервере
Процедура ОбработатьЗапрос(Запрос, ОтборыУстановлены, ТаблицаНастройкиОтбора)

	Если  Организация_Использование Тогда 
		
		СтрокиСравнения = ОбработатьВидСравненияДляЗапроса(Организация_ВидСравнения);
		
		Запрос.Текст = Запрос.Текст + "
		|	И " + СтрокиСравнения.Не + " Задачи.Организация" + " " +  СтрокиСравнения.Условие + " (&Организация)";
		
		Если ТипЗнч(Организация) = Тип("СписокЗначений") Тогда
			Запрос.УстановитьПараметр("Организация", Организация.ВыгрузитьЗначения());
		Иначе
			Запрос.УстановитьПараметр("Организация", Организация);
		КонецЕсли;
		
		НоваяСтрокаОтбора = ТаблицаНастройкиОтбора.Добавить();
		НоваяСтрокаОтбора.Имя = "Организация";
		НоваяСтрокаОтбора.ВидСравнения = Организация_ВидСравнения;
		НоваяСтрокаОтбора.Значение = Организация;
		
		ОтборыУстановлены = Истина;
		
	КонецЕсли;	
	
	Если  Контрагент_Использование Тогда 
		
		СтрокиСравнения = ОбработатьВидСравненияДляЗапроса(Контрагент_ВидСравнения);

		Запрос.Текст = Запрос.Текст + "
		|	И " + СтрокиСравнения.Не + " Задачи.КонтрактВЭД.Контрагент" + " " +  СтрокиСравнения.Условие + " (&Контрагент)";
		
		Если ТипЗнч(Контрагент) = Тип("СписокЗначений") Тогда
			Запрос.УстановитьПараметр("Контрагент", Контрагент.ВыгрузитьЗначения());
		Иначе
			Запрос.УстановитьПараметр("Контрагент", Контрагент);
		КонецЕсли;
		
		НоваяСтрокаОтбора = ТаблицаНастройкиОтбора.Добавить();
		НоваяСтрокаОтбора.Имя = "Контрагент";
		НоваяСтрокаОтбора.ВидСравнения = Контрагент_ВидСравнения;
		НоваяСтрокаОтбора.Значение = Контрагент;

		ОтборыУстановлены = Истина;
		
	КонецЕсли;
	
	Если  КонтрактВЭД_Использование Тогда 
		
		СтрокиСравнения = ОбработатьВидСравненияДляЗапроса(КонтрактВЭД_ВидСравнения);

		Запрос.Текст = Запрос.Текст + "
		|	И " + СтрокиСравнения.Не + " Задачи.КонтрактВЭД" + " " +  СтрокиСравнения.Условие + " (&КонтрактВЭД)";
		
		Если ТипЗнч(КонтрактВЭД) = Тип("СписокЗначений") Тогда
			Запрос.УстановитьПараметр("КонтрактВЭД", КонтрактВЭД.ВыгрузитьЗначения());
		Иначе
			Запрос.УстановитьПараметр("КонтрактВЭД", КонтрактВЭД);
		КонецЕсли;
		
		НоваяСтрокаОтбора = ТаблицаНастройкиОтбора.Добавить();
		НоваяСтрокаОтбора.Имя = "КонтрактВЭД";
		НоваяСтрокаОтбора.ВидСравнения = КонтрактВЭД_ВидСравнения;
		НоваяСтрокаОтбора.Значение = КонтрактВЭД;

		ОтборыУстановлены = Истина;
		
	КонецЕсли;
	
	Если  ПаспортСделки_Использование Тогда
		
		СтрокиСравнения = ОбработатьВидСравненияДляЗапроса(ПаспортСделки_ВидСравнения);
		
		Запрос.Текст = Запрос.Текст + "
		|	И " + СтрокиСравнения.Не + " Задачи.ПаспортСделки" + " " +  СтрокиСравнения.Условие + " (&ПаспортСделки)";
		
		Если ТипЗнч(ПаспортСделки) = Тип("СписокЗначений") Тогда
			Запрос.УстановитьПараметр("ПаспортСделки", ПаспортСделки.ВыгрузитьЗначения());
		Иначе
			Запрос.УстановитьПараметр("ПаспортСделки", ПаспортСделки);
		КонецЕсли;
		
		НоваяСтрокаОтбора = ТаблицаНастройкиОтбора.Добавить();
		НоваяСтрокаОтбора.Имя = "ПаспортСделки";
		НоваяСтрокаОтбора.ВидСравнения = ПаспортСделки_ВидСравнения;
		НоваяСтрокаОтбора.Значение = ПаспортСделки;

		ОтборыУстановлены = Истина;
		
	КонецЕсли;
	
	Если  СтатусЗадачи_Использование Тогда
		
		СтрокиСравнения = ОбработатьВидСравненияДляЗапроса(СтатусЗадачи_ВидСравнения);
		Запрос.Текст = Запрос.Текст + "
		|	И " + СтрокиСравнения.Не + " Задачи.СтатусСправкиОВалютномКонтроле" + " " +  СтрокиСравнения.Условие + " (&СтатусЗадачи)";
		
		Запрос.УстановитьПараметр("СтатусЗадачи", СтатусЗадачи);
		
		НоваяСтрокаОтбора = ТаблицаНастройкиОтбора.Добавить();
		НоваяСтрокаОтбора.Имя = "СтатусЗадачи";
		НоваяСтрокаОтбора.ВидСравнения = СтатусЗадачи_ВидСравнения;
		НоваяСтрокаОтбора.Значение = СтатусЗадачи;
		
		ОтборыУстановлены = Истина;
		
	КонецЕсли;
	
	//Если  ПаспортСделки_Использование Тогда
	//	
	//	СтрокиСравнения = ОбработатьВидСравненияДляЗапроса(ПаспортСделки_ВидСравнения);
	//	Запрос.Текст = Запрос.Текст + "
	//	|	И " + СтрокиСравнения.Не + " Задачи.ПаспортСделки" + " " +  СтрокиСравнения.Условие + " (&ПаспортСделки)";
	//	
	//	Если ТипЗнч(ПаспортСделки) = Тип("СписокЗначений") Тогда
	//		Запрос.УстановитьПараметр("ПаспортСделки", ПаспортСделки.ВыгрузитьЗначения());
	//	Иначе
	//		Запрос.УстановитьПараметр("ПаспортСделки", ПаспортСделки);
	//	КонецЕсли;
	//	
	//	НоваяСтрокаОтбора = ТаблицаНастройкиОтбора.Добавить();
	//	НоваяСтрокаОтбора.Имя = "ПаспортСделки";
	//	НоваяСтрокаОтбора.ВидСравнения = ПаспортСделки_ВидСравнения;
	//	НоваяСтрокаОтбора.Значение = ПаспортСделки;
	//	
	//	ОтборыУстановлены	= Истина;
	//	
	//КонецЕсли;
	
	Если  Валюта_Использование Тогда
		
		СтрокиСравнения = ОбработатьВидСравненияДляЗапроса(Валюта_ВидСравнения);
		Запрос.Текст = Запрос.Текст + "
		|	И " + СтрокиСравнения.Не + " 
		|ВЫБОР
		|	КОГДА Задачи.ОбъектЗадачи ССЫЛКА Справочник.РЭЙ_КонтрактыВЭД
		|		ТОГДА Задачи.ОбъектЗадачи.ДоговорКонтрагента.ВалютаВзаиморасчетов
		|	ИНАЧЕ Задачи.ОбъектЗадачи.ВалютаДокумента
		|КОНЕЦ 	 " +  СтрокиСравнения.Условие + " (&Валюта)";
		
		Запрос.УстановитьПараметр("Валюта", Валюта);
		
		НоваяСтрокаОтбора = ТаблицаНастройкиОтбора.Добавить();
		НоваяСтрокаОтбора.Имя = "Валюта";
		НоваяСтрокаОтбора.ВидСравнения = Валюта_ВидСравнения;
		НоваяСтрокаОтбора.Значение = Валюта;
		
		ОтборыУстановлены = Истина;
		
	КонецЕсли;
	
	
	
КонецПроцедуры	

&НаСервере
Функция КомандаОКНаСервере()
	
	ТаблицаНастройкиОтбора = Новый ТаблицаЗначений;
	ТаблицаНастройкиОтбора.Колонки.Добавить("Имя");
	ТаблицаНастройкиОтбора.Колонки.Добавить("ВидСравнения");
	ТаблицаНастройкиОтбора.Колонки.Добавить("Значение");
	
	ОтборыУстановлены = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Задачи.Ссылка
	|ИЗ
	|	Задача.РЭЙ_ЗадачиВЭД КАК Задачи
	|ГДЕ
	|	Задачи.Выполнена = ЛОЖЬ";
	
	ОбработатьЗапрос(Запрос, ОтборыУстановлены, ТаблицаНастройкиОтбора);
	//Вид документа валютного контроля
	Если ВидДокументаВалютногоКонтроля_Использование Тогда
		
		ВидыЗадач = Новый Массив;
		Если ВидДокументаВалютногоКонтроля = Метаданные.Документы.РЭЙ_СправкаОВалютныхОперациях.Синоним Тогда
			
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.ПоступлениеДенежныхСредствВИностраннойВалюте);
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.ПоступлениеДенежныхСредствНаРублевыеСчета);
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.ПоступлениеДенежныхСредствЧерезСчетаЗаРубежом);
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.СписаниеДенежныхСредствСВалютныхСчетов);
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.СписаниеДенежныхСредствСРублевыхСчетов);
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.СписаниеДенежныхСредствЧерезСчетаЗаРубежом);
			
		ИначеЕсли ВидДокументаВалютногоКонтроля = Метаданные.Документы.РЭЙ_СправкаОПодтверждающихДокументах.Синоним Тогда
			
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.ПоступлениеДопРасходов);
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.РеализацияТоваровУслуг);
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.ПоступлениеТоваровУслуг);
			
		ИначеЕсли ВидДокументаВалютногоКонтроля = Метаданные.Документы.РЭЙ_ПаспортСделки.Синоним Тогда
			
			ВидыЗадач.Добавить(Справочники.РЭЙ_ВидыЗадачПользователей.КонтрактВЭД);
			
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|	И  Задачи.ВидЗадачи В (&ВидыЗадач)";
		
		Запрос.УстановитьПараметр("ВидыЗадач", ВидыЗадач);
		
		ОтборыУстановлены = Истина;
		
		НоваяСтрокаОтбора = ТаблицаНастройкиОтбора.Добавить();
		НоваяСтрокаОтбора.Имя = "ВидДокументаВалютногоКонтроля";
		НоваяСтрокаОтбора.ВидСравнения = ВидДокументаВалютногоКонтроля_ВидСравнения;
		НоваяСтрокаОтбора.Значение = ВидДокументаВалютногоКонтроля;
		
	КонецЕсли;
	
	//Вид расчетного документа
	Если ВидРасчетногоДокумента_Использование Тогда
		
		Если ПустаяСтрока(ВидРасчетногоДокумента) Тогда
			
			ТипОбъектЗадачи = "Неопределено";
			
			Запрос.Текст = Запрос.Текст + "
			|	И Задачи.ОбъектЗадачи = "+ТипОбъектЗадачи;
			
		Иначе
			
			ТипОбъектЗадачи = ВидРасчетногоДокумента;//СоответствиеСинонимовИТиповРасчетногоДокумента.Получить(ВидРасчетногоДокумента);
			
			Если ВРег(ВидРасчетногоДокумента) = ВРег("Контракт ВЭД") Тогда
				
				ИмяДокумента		= "Справочник.РЭЙ_КонтрактыВЭД";//текОписаниеТипов.ПривестиЗначение(Неопределено).Метаданные().Имя;
			
			Иначе
				
				ИмяДокумента		= "Документ."+ВидРасчетногоДокумента;//текОписаниеТипов.ПривестиЗначение(Неопределено).Метаданные().Имя;
			
			КонецЕсли; 
			
			Запрос.Текст = Запрос.Текст + "
			|	И Задачи.ОбъектЗадачи Ссылка "+ИмяДокумента;
			
		КонецЕсли;
		
		ОтборыУстановлены = Истина;
		
		НоваяСтрокаОтбора = ТаблицаНастройкиОтбора.Добавить();
		НоваяСтрокаОтбора.Имя = "ВидРасчетногоДокумента";
		НоваяСтрокаОтбора.ВидСравнения = ВидРасчетногоДокумента_ВидСравнения;
		НоваяСтрокаОтбора.Значение = ВидРасчетногоДокумента;
		
	КонецЕсли;
	
	//Результаты
	Результат = Новый Структура;
	Результат.Вставить("ОтборыУстановлены", ОтборыУстановлены);
	Результат.Вставить("АдресТаблицыНастроекОтбора", ПоместитьВоВременноеХранилище(ТаблицаНастройкиОтбора, Новый УникальныйИдентификатор()));
	
	Если ОтборыУстановлены Тогда
		Ссылки = Новый СписокЗначений;
		Ссылки.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
		Результат.Вставить("Ссылки", Ссылки);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции	

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть(Неопределено);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого ЭлементФормы	Из Элементы Цикл
		
		Если Прав(ЭлементФормы.Имя, 13) = "_ВидСравнения" <> 0 И Найти(ЭлементФормы.Имя, "КонтекстноеМеню") = 0 Тогда 
			

			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.Больше;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.БольшеИлиРавно;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.ВИерархии;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.ВСписке;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.ВСпискеПоИерархии;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.Меньше;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.МеньшеИлиРавно;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.НеВИерархии;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.НеВСписке;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.НеВСпискеПоИерархии;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.НеРавно;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.НеСодержит;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.Равно;
			
			НовыйЭлементВидСравнения = ЭлементФормы.СписокВыбора.Добавить();
			НовыйЭлементВидСравнения.Значение = ВидСравнения.Содержит;
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Равно	= ВидСравнения.Равно;
	Если УстановленныеЗначенияОтбора.НайтиПоЗначению("Организация") = Неопределено Тогда
		Организация_ВидСравнения = Равно;
	КонецЕсли;
	Если УстановленныеЗначенияОтбора.НайтиПоЗначению("КонтрактВЭД") = Неопределено Тогда
		КонтрактВЭД_ВидСравнения = Равно;  	
	КонецЕсли;
	Если УстановленныеЗначенияОтбора.НайтиПоЗначению("ПаспортСделки") = Неопределено Тогда
		ПаспортСделки_ВидСравнения = Равно;
	КонецЕсли;
	Если УстановленныеЗначенияОтбора.НайтиПоЗначению("СтатусЗадачи") = Неопределено Тогда
		СтатусЗадачи_ВидСравнения = Равно;
	КонецЕсли;
	Если УстановленныеЗначенияОтбора.НайтиПоЗначению("Контрагент") = Неопределено Тогда
		Контрагент_ВидСравнения	= Равно;
	КонецЕсли;
	Если УстановленныеЗначенияОтбора.НайтиПоЗначению("ВидРасчетногоДокумента") = Неопределено Тогда
		ВидРасчетногоДокумента_ВидСравнения = Равно;
	КонецЕсли;
	Если УстановленныеЗначенияОтбора.НайтиПоЗначению("ВидДокументаВалютногоКонтроля") = Неопределено Тогда
		ВидДокументаВалютногоКонтроля_ВидСравнения = Равно;
	КонецЕсли;
	Если УстановленныеЗначенияОтбора.НайтиПоЗначению("Валюта") = Неопределено Тогда
		Валюта_ВидСравнения = Равно;
	КонецЕсли;
	
	Элементы.Организация.ОграничениеТипа = ПолучитьОписаниеТипов("СправочникСсылка.Организации");
	Элементы.Контрагент.ОграничениеТипа	= ПолучитьОписаниеТипов("СправочникСсылка.Контрагенты");
	Элементы.КонтрактВЭД.ОграничениеТипа = ПолучитьОписаниеТипов("СправочникСсылка.РЭЙ_КонтрактыВЭД");
	Элементы.СтатусЗадачи.ОграничениеТипа = ПолучитьОписаниеТипов("ПеречислениеСсылка.РЭЙ_СтатусыСправокВалютногоКонтроля");
	Элементы.Валюта.ОграничениеТипа = ПолучитьОписаниеТипов("СправочникСсылка.Валюты");		
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписаниеТипов(ТекстОписание) 
	
	Массив = Новый Массив;
	Массив.Добавить(Тип(ТекстОписание));
	Возврат Новый ОписаниеТипов(Массив);
	
КонецФункции	// ПолучитьОписаниеТиповЧисла()

&НаКлиенте
Процедура Организация_ВидСравненияПриИзменении(Элемент)
	
	ЗадатьОграниченияТипа(Элементы.Организация, Организация_ВидСравнения, "СправочникСсылка.Организации", Организация);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьОграниченияТипа(Элемент, ТекущийВидСравнения, ИмяТипа, ЗначениеРеквизита)
	
	Если ТекущийВидСравнения = ВидСравнения.ВСписке Или ТекущийВидСравнения = ВидСравнения.НеВСписке Тогда 
		
		Элемент.ОграничениеТипа	= ПолучитьОписаниеТипов("СписокЗначений");	
		
		ЗначениеРеквизита = Элемент.ОграничениеТипа.ПривестиЗначение(ЗначениеРеквизита);
		ЗначениеРеквизита.ТипЗначения = ПолучитьОписаниеТипов(ИмяТипа);
		
	Иначе	
		
		Элемент.ОграничениеТипа	= ПолучитьОписаниеТипов(ИмяТипа);
		ЗначениеРеквизита = Элемент.ОграничениеТипа.ПривестиЗначение(ЗначениеРеквизита);

	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура Контрагент_ВидСравненияПриИзменении(Элемент)
	
	ЗадатьОграниченияТипа(Элементы.Контрагент, Контрагент_ВидСравнения, "СправочникСсылка.Контрагенты", Контрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрактВЭД_ВидСравненияПриИзменении(Элемент)
	
	ЗадатьОграниченияТипа(Элементы.КонтрактВЭД, КонтрактВЭД_ВидСравнения, "СправочникСсылка.РЭЙ_КонтрактыВЭД", КонтрактВЭД);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Организация_Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	Контрагент_Использование = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрактВЭДПриИзменении(Элемент)
	
	КонтрактВЭД_Использование = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаВалютногоКонтроляПриИзменении(Элемент)
	
	ВидДокументаВалютногоКонтроля_Использование	= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидРасчетногоДокументаПриИзменении(Элемент)
	
	ВидРасчетногоДокумента_Использование = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусЗадачиПриИзменении(Элемент)
	
	СтатусЗадачи_Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	Валюта_Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда 
		
		СтандартнаяОбработка = Ложь;
			
		СписокКонтрагентов = ПолучитьМассивКонтрагентовНаСервереБезКонтекста();	

		ПараметрыОткрытия = Новый Структура;
		Отбор = Новый Структура;
		
		Отбор.Вставить("Ссылка", СписокКонтрагентов);
		
		ПараметрыОткрытия.Вставить("Отбор", Отбор);
		ПараметрыОткрытия.Вставить("ПараметрТекущаяСтрока", Контрагент);
		
		ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", ПараметрыОткрытия, Элемент);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивКонтрагентовНаСервереБезКонтекста()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РЭЙ_КонтрактыВЭД.Контрагент
	|ИЗ
	|	Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
	|ГДЕ
	|	РЭЙ_КонтрактыВЭД.Контрагент.РЭЙ_НеЯвляетсяРезидентом";
	
	СписокКонтрагентов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Контрагент");
	
	Возврат СписокКонтрагентов;
	
КонецФункции	

&НаКлиенте
Процедура КонтрактВЭДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	
	Отбор = Новый Структура;
	
	ДанныеДляОтбора	= Новый Структура;
	
	ДанныеДляОтбора.Вставить("Контрагент", Контрагент);
	ДанныеДляОтбора.Вставить("Организация", Организация);
	
	ДобваитьВОтборКонтрактыВЭД(Отбор, ДанныеДляОтбора);
	
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("ПараметрТекущаяСтрока", КонтрактВЭД);
	ПараметрыФормы.Вставить("РежимВыбора", Истина); 
	
	ОткрытьФорму("Справочник.РЭЙ_КонтрактыВЭД.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобваитьВОтборКонтрактыВЭД(Отбор, ДанныеДляОтбора)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РЭЙ_КонтрактыВЭД.Ссылка
	|ИЗ
	|	Справочник.РЭЙ_КонтрактыВЭД КАК РЭЙ_КонтрактыВЭД
	|ГДЕ
	|	ИСТИНА";
		
	Если ЗначениеЗаполнено(ДанныеДляОтбора.Контрагент) Тогда
		Запрос.Текст = Запрос.Текст + " 
		|	И РЭЙ_КонтрактыВЭД.Контрагент = &Контрагент";
		Запрос.УстановитьПараметр("Контрагент", ДанныеДляОтбора.Контрагент);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДляОтбора.Организация) Тогда
		Запрос.Текст = Запрос.Текст + " 
		|	И РЭЙ_КонтрактыВЭД.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", ДанныеДляОтбора.Организация);
	КонецЕсли;
	
	СписокКонтрактыВЭД = Новый СписокЗначений;
	СписокКонтрактыВЭД.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0));
	
	Отбор.Вставить("Ссылка", СписокКонтрактыВЭД);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПаспортСделкиПриИзменении(Элемент)
	
	ПаспортСделки_Использование	= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПаспортСделкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТипЗнч(ПаспортСделки) <> Тип("СписокЗначений") Тогда
		
		СтандартнаяОбработка = Ложь;
	
		ПараметрыОткрытия = Новый Структура;
		Отбор = Новый Структура;
		
		Если ЗначениеЗаполнено(Организация) Тогда
			Отбор.Вставить("Организация", Организация);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Контрагент) Тогда
			Отбор.Вставить("Контрагент", Контрагент);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтрактВЭД) Тогда
			Отбор.Вставить("КонтрактВЭД", КонтрактВЭД);
		КонецЕсли;
		
		ПараметрыОткрытия.Вставить("Отбор", Отбор);
		ПараметрыОткрытия.Вставить("ПараметрТекущаяСтрока", ПаспортСделки); 
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина); 
		
		ОткрытьФорму("Документ.РЭЙ_ПаспортСделки.ФормаВыбора", ПараметрыОткрытия, Элемент);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	текТипы = Метаданные.Задачи.РЭЙ_ЗадачиВЭД.Реквизиты.ОбъектЗадачи.Тип.Типы();
	
	Для Каждого текТип Из текТипы Цикл
		
		Если Документы.ТипВсеСсылки().СодержитТип(текТип) Тогда
			
			текМассивТипов = Новый Массив;
			текМассивТипов.Добавить(текТип);
			текОписаниеТипов = Новый ОписаниеТипов(текМассивТипов);
			СинонимДокумента = текОписаниеТипов.ПривестиЗначение(Неопределено).Метаданные().Синоним;
			ИмяДокумента = текОписаниеТипов.ПривестиЗначение(Неопределено).Метаданные().Имя;
			
			Элементы.ВидРасчетногоДокумента.СписокВыбора.Добавить(ИмяДокумента, СинонимДокумента);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ВидРасчетногоДокумента.СписокВыбора.Добавить("Контракт ВЭД", "Контракт ВЭД");
	
	Элементы.ВидРасчетногоДокумента.СписокВыбора.СортироватьПоЗначению();
	
	Если Не ПустаяСтрока(Параметры.АдресТаблицыНастроекОтбора) Тогда
		
		ТаблицаНастройкиОтбора = ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыНастроекОтбора);
			
			Для Каждого СтрокаНастроекОтбора Из ТаблицаНастройкиОтбора Цикл
				
				Если СтрокаНастроекОтбора.Имя = "Организация"	Тогда
					
					Организация	= СтрокаНастроекОтбора.Значение;
					Организация_ВидСравнения = СтрокаНастроекОтбора.ВидСравнения;
					Организация_Использование = Истина;
					
					УстановленныеЗначенияОтбора.Добавить("Организация");
					
				ИначеЕсли СтрокаНастроекОтбора.Имя = "Контрагент"	Тогда
					
					Контрагент	= СтрокаНастроекОтбора.Значение;
					Контрагент_ВидСравнения	= СтрокаНастроекОтбора.ВидСравнения;
					Контрагент_Использование = Истина;
					
					УстановленныеЗначенияОтбора.Добавить("Контрагент");
					
				ИначеЕсли СтрокаНастроекОтбора.Имя = "КонтрактВЭД" Тогда
					
					КонтрактВЭД	= СтрокаНастроекОтбора.Значение;
					КонтрактВЭД_ВидСравнения = СтрокаНастроекОтбора.ВидСравнения;
					КонтрактВЭД_Использование = Истина;
					
					УстановленныеЗначенияОтбора.Добавить("КонтрактВЭД");
					
				ИначеЕсли СтрокаНастроекОтбора.Имя = "ПаспортСделки" Тогда
					
					ПаспортСделки = СтрокаНастроекОтбора.Значение;
					ПаспортСделки_ВидСравнения = СтрокаНастроекОтбора.ВидСравнения;
					ПаспортСделки_Использование	= Истина;
					
					УстановленныеЗначенияОтбора.Добавить("ПаспортСделки");
					
				ИначеЕсли СтрокаНастроекОтбора.Имя = "ВидДокументаВалютногоКонтроля" Тогда
					
					ВидДокументаВалютногоКонтроля = СтрокаНастроекОтбора.Значение;
					ВидДокументаВалютногоКонтроля_ВидСравнения = СтрокаНастроекОтбора.ВидСравнения;
					ВидДокументаВалютногоКонтроля_Использование	= Истина;
					
					УстановленныеЗначенияОтбора.Добавить("ВидДокументаВалютногоКонтроля");
					
				ИначеЕсли СтрокаНастроекОтбора.Имя = "ВидРасчетногоДокумента" Тогда
					
					ВидРасчетногоДокумента = СтрокаНастроекОтбора.Значение;
					ВидРасчетногоДокумента_ВидСравнения	= СтрокаНастроекОтбора.ВидСравнения;
					ВидРасчетногоДокумента_Использование = Истина;
					
					УстановленныеЗначенияОтбора.Добавить("ВидРасчетногоДокумента");
					
				ИначеЕсли СтрокаНастроекОтбора.Имя = "СтатусЗадачи" Тогда	
					
					СтатусЗадачи = СтрокаНастроекОтбора.Значение;
					СтатусЗадачи_ВидСравнения = СтрокаНастроекОтбора.ВидСравнения;
					СтатусЗадачи_Использование = Истина;
					
					УстановленныеЗначенияОтбора.Добавить("СтатусЗадачи");
					
				ИначеЕсли СтрокаНастроекОтбора.Имя = "Валюта" Тогда	
					
					Валюта = СтрокаНастроекОтбора.Значение;
					Валюта_ВидСравнения	= СтрокаНастроекОтбора.ВидСравнения;
					Валюта_Использование = Истина;
					
					УстановленныеЗначенияОтбора.Добавить("Валюта");
					
				КонецЕсли;	
				
			КонецЦикла;	
				
		
	КонецЕсли;	
		
КонецПроцедуры

