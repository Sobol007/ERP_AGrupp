#Область ОбработчикиСобытий_Форма

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИнформерКурсыВалют();
	ЗаполнитьТекущегоПользователя();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "РЭЙ_ОбновитьФормуЗадач" Тогда
		ОбновитьФорму();
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий_Список	

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ДоступностьКнопкиПечати();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд_Список	

&НаКлиенте
Процедура КомандаВосстановить(Команда)
	СписокЗадач = ПолучитьСписокВыполненныхЗадачПоВЭД();

	ВыбрЗадача = Неопределено;
	СписокЗадач.ОтметитьЭлементы("Выберите выполненные задачи для восстановления"); 
	
	КомандаВосстановитьНаСервере(СписокЗадач);
	
	ОбновитьФорму();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КомандаВосстановитьНаСервере(СписокЗадач)
	Для Каждого Элемент из СписокЗадач Цикл
        Если Элемент.Пометка Тогда
           	ДокОсн = Элемент.Значение.ОбъектЗадачи;
			РЭЙ_ЗадачиСервер.СнятьПризнакЗадачаВыполнена(ДокОсн);
        КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура КомандаВыполнитьЗадачу(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РЭЙ_СлужебныйКлиент.ВыполнитьЗадачу(ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьСписокЗадач(Команда)
	ОбновитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтключитьОтбор(Команда)
	ОчиститьОтбор();
	Элементы.КомандаОтключитьОтбор.Доступность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьДляПечати(Команда)
	ДанныеСтроки = Элементы.Список.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаОбъектПечати = ПолучитьСсылкуНаОбъектПечати(ДанныеСтроки.Ссылка);
	
	Если СсылкаНаОбъектПечати <> Неопределено Тогда 
		ПоказатьЗначение(, СсылкаНаОбъектПечати);
	Иначе 
		ПоказатьПредупреждение(, "По данному документу справка еще не создана.");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьЗадачу(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ПоказатьЗначение(, ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменитьЗадачу(Команда)
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат
	ИначеЕсли Элементы.Список.ВыделенныеСтроки.Количество() = 1 Тогда
		ТекстВопроса = "Отменить задачу?";
	ИначеЕсли Элементы.Список.ВыделенныеСтроки.Количество() > 1 Тогда
		ТекстВопроса = "Отменить задачи?";
	КонецЕсли;
	
	ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("КомандаОтменитьЗадачу_Продолжение", ЭтотОбъект, Новый Структура("НомерСтроки", 0));
	ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменитьЗадачу_Продолжение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		текНомерСтроки = ДополнительныеПараметры.НомерСтроки;
		текСтрока = Элементы.Список.ДанныеСтроки(Элементы.Список.ВыделенныеСтроки[текНомерСтроки]);
		КомандаОтменитьЗадачуНаСервере(текСтрока.Ссылка);
		
		текНомерСтроки = текНомерСтроки + 1;
		Если текНомерСтроки < Элементы.Список.ВыделенныеСтроки.Количество() Тогда
			КомандаОтменитьЗадачу_Продолжение(Результат, Новый Структура("НомерСтроки", текНомерСтроки));
		Иначе
			НадписьОбщееКоличествоЗадачПоВЭД = Строка(ПолучитьОбщееКоличествоЗадачПоВЭД());
			Элементы.Список.Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КомандаОтменитьЗадачуНаСервере(текЗадача)
	НачатьТранзакцию();
	
	ЗадачаОбъект = текЗадача.ПолучитьОбъект();	
	ЗадачаОбъект.Выполнена = Истина;
	ЗадачаОбъект.Записать();
	
	Если ЗадачаОбъект.ВидЗадачи = Справочники.РЭЙ_ВидыЗадачПользователей.КонтрактВЭДПодтверждениеАвтопролонгации Тогда
		КонтрактВЭД_Объект = текЗадача.ОбъектЗадачи.ПолучитьОбъект();
		КонтрактВЭД_Объект.Автопролонгация = Ложь;
		КонтрактВЭД_Объект.Записать();
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры	

&НаКлиенте
Процедура КомандаУдалитьЗадачу(Команда)
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат
	ИначеЕсли Элементы.Список.ВыделенныеСтроки.Количество() = 1 Тогда
		ТекстВопроса = "Удалить элемент?";
	ИначеЕсли Элементы.Список.ВыделенныеСтроки.Количество() > 1 Тогда
		ТекстВопроса = "Удалить элементы?";
	КонецЕсли;
	
	ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("КомандаУдалитьЗадачу_Продолжение1", ЭтотОбъект, Новый Структура("НомерСтроки", 0));
	ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьЗадачу_Продолжение1(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		текНомерСтроки = ДополнительныеПараметры.НомерСтроки;
		текСтрока = Элементы.Список.ДанныеСтроки(Элементы.Список.ВыделенныеСтроки[текНомерСтроки]);
		Если текСтрока.ВидЗадачи = ПредопределенноеЗначение("Справочник.РЭЙ_ВидыЗадачПользователей.ПаспортСделкиПереоформлениеСрок") Тогда
			ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("КомандаУдалитьЗадачу_Продолжение2", ЭтотОбъект, Новый Структура("НомерСтроки", текНомерСтроки));
			ТекстВопроса = "Сделать контракт " + текСтрока.КонтрактВЭД + " не действующим?";
			ПоказатьВопрос(ОписаниеОповещенияВопрос, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Иначе
			КомандаУдалитьЗадачуНаСервере(текСтрока.Ссылка);
			
			текНомерСтроки = текНомерСтроки + 1;
			Если текНомерСтроки < Элементы.Список.ВыделенныеСтроки.Количество() Тогда
				КомандаУдалитьЗадачу_Продолжение1(Результат, Новый Структура("НомерСтроки", текНомерСтроки));
			Иначе
				НадписьОбщееКоличествоЗадачПоВЭД = Строка(ПолучитьОбщееКоличествоЗадачПоВЭД());
				Элементы.Список.Обновить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьЗадачу_Продолжение2(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	Иначе
		текНомерСтроки = ДополнительныеПараметры.НомерСтроки;
		текСтрока = Элементы.Список.ДанныеСтроки(Элементы.Список.ВыделенныеСтроки[текНомерСтроки]);
		Если Результат = КодВозвратаДиалога.Да Тогда
			СделатьКонтрактНедействующим(текСтрока.КонтрактВЭД);
		КонецЕсли;
		КомандаУдалитьЗадачуНаСервере(текСтрока.Ссылка);
		
		текНомерСтроки = текНомерСтроки + 1;
		Если текНомерСтроки < Элементы.Список.ВыделенныеСтроки.Количество() Тогда
			КомандаУдалитьЗадачу_Продолжение1(Результат, Новый Структура("НомерСтроки", текНомерСтроки));
		Иначе
			НадписьОбщееКоличествоЗадачПоВЭД = Строка(ПолучитьОбщееКоличествоЗадачПоВЭД());
			Элементы.Список.Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КомандаУдалитьЗадачуНаСервере(текЗадача)
	ЗадачаОбъект = текЗадача.ПолучитьОбъект();	
	ЗадачаОбъект.Удалить();
КонецПроцедуры	

&НаКлиенте
Процедура КомандаУстановитьОтбор(Команда)
	ПараметрыОтркытия = Новый Структура;
	ПараметрыОтркытия.Вставить("АдресТаблицыНастроекОтбора", АдресТаблицыНастроекОтбора); 	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаУстановитьОтбор_Завершение", ЭтотОбъект);
	ОткрытьФорму("Задача.РЭЙ_ЗадачиВЭД.Форма.НастройкаОтбора", ПараметрыОтркытия,,,,, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьОтбор_Завершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		
		ОчиститьОтбор();
		
		Если Результат.ОтборыУстановлены Тогда
			
			ЭлементыОтбора = Список.Отбор.Элементы;
			
			ПолеКомпоновкиДанныхСсылка = Новый ПолеКомпоновкиДанных("Ссылка");
			
			БылОтборПоСсылке = Ложь;
			
			Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
				
				Если ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиДанныхСсылка Тогда
					
					ЭлементОтбора.ЛевоеЗначение	= Результат.Ссылки;
					
					ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Организация");
					ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.ВСписке;
					ЭлементОтбора.ПравоеЗначение 	= Результат.Ссылки;
					ЭлементОтбора.Использование		= Истина;
					
					БылОтборПоСсылке = Истина;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если Не БылОтборПоСсылке Тогда
				
				ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбора.ЛевоеЗначение		= ПолеКомпоновкиДанныхСсылка;
				ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.ВСписке;
				ЭлементОтбора.ПравоеЗначение	= Результат.Ссылки;
				ЭлементОтбора.Использование		= Истина;
				
			КонецЕсли;	
			
			АдресТаблицыНастроекОтбора = Результат.АдресТаблицыНастроекОтбора;
			
		КонецЕсли;
		
		Элементы.КомандаОтключитьОтбор.Доступность	= Результат.ОтборыУстановлены;
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДоступностьКнопкиПечати()
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные.СтатусСправкиОВалютномКонтроле = ПредопределенноеЗначение("Перечисление.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаСоздана") Или
		ТекущиеДанные.СтатусСправкиОВалютномКонтроле = ПредопределенноеЗначение("Перечисление.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаРаспечатана") Или	
		ТекущиеДанные.СтатусСправкиОВалютномКонтроле = ПредопределенноеЗначение("Перечисление.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаСозданаДокументПерезаписан") Или	
		ТекущиеДанные.СтатусСправкиОВалютномКонтроле = ПредопределенноеЗначение("Перечисление.РЭЙ_СтатусыСправокВалютногоКонтроля.СправкаРаспечатанаДокументПерезаписан") Тогда	
		
		Элементы.СписокКонтекстноеМенюКомандаОткрытьДляПечати.Доступность = Истина;
	Иначе
		Элементы.СписокКонтекстноеМенюКомандаОткрытьДляПечати.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьТекущегоПользователя()
	Исполнитель	= ПараметрыСеанса.ТекущийПользователь;
	
	Если СокрЛП(Исполнитель.Код) = "<Не указан>" Тогда
		НадписьТекущийПользователь = "Задачи";
	Иначе
		НадписьТекущийПользователь = "Задачи (" + ПредставлениеРаботника(Строка(Исполнитель))+ ")";
		НадписьОбщееКоличествоЗадачПоВЭД = Строка(ПолучитьОбщееКоличествоЗадачПоВЭД());
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИнформерКурсыВалют()
	
	Запрос = Новый Запрос;
	
	СсылкаЕвро = Справочники.Валюты.ПустаяСсылка();
	СсылкаДолл = Справочники.Валюты.ПустаяСсылка();
	
	СсылкаЕвро = Справочники.Валюты.НайтиПоКоду("978");
	СсылкаДолл = Справочники.Валюты.НайтиПоКоду("840");
	
	ИнфоСтрока = "";
	ДатаКурса = Дата(1,1,1);
	
	Если ЗначениеЗаполнено(СсылкаДолл) Тогда
		
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |		КурсыВалют.Период КАК Период,
		               |		КурсыВалют.Валюта КАК Валюта,
		               |		КурсыВалют.Курс КАК Курс,
		               |		КурсыВалют.Кратность КАК Кратность
		               |	ИЗ
		               |		РегистрСведений.КурсыВалют КАК КурсыВалют
		               |	ГДЕ
		               |		КурсыВалют.Валюта = &СсылкаВалюта
		               |	
		               |	УПОРЯДОЧИТЬ ПО
		               |		Период УБЫВ";
		
		Запрос.УстановитьПараметр("СсылкаВалюта", СсылкаДолл);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Если Выборка.Количество()>0 Тогда
			ИнфоСтрока = ИнфоСтрока +
						?(ПустаяСтрока(ИнфоСтрока), "", "  ") +
						Выборка.Валюта.Наименование + " " + Формат(Выборка.Курс, "ЧДЦ=4; ЧРД=.") ;
						
			ДатаКурса = Макс(ДатаКурса, Выборка.Период);
		КонецЕсли;
	КонецЕсли;	
	Если ЗначениеЗаполнено(СсылкаЕвро) Тогда
		
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |		КурсыВалют.Период КАК Период,
		               |		КурсыВалют.Валюта КАК Валюта,
		               |		КурсыВалют.Курс КАК Курс,
		               |		КурсыВалют.Кратность КАК Кратность
		               |	ИЗ
		               |		РегистрСведений.КурсыВалют КАК КурсыВалют
		               |	ГДЕ
		               |		КурсыВалют.Валюта = &СсылкаВалюта
		               |	
		               |	УПОРЯДОЧИТЬ ПО
		               |		Период УБЫВ";
		
		Запрос.УстановитьПараметр("СсылкаВалюта", СсылкаЕвро);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Если Выборка.Количество()>0 Тогда
			ИнфоСтрока = ИнфоСтрока +
						?(ПустаяСтрока(ИнфоСтрока), "", "  ") +
						Выборка.Валюта.Наименование + " " + Формат(Выборка.Курс, "ЧДЦ=4; ЧРД=.") ;
						
			ДатаКурса = Макс(ДатаКурса, Выборка.Период);
		КонецЕсли;
	КонецЕсли;
	
	НадписьКурсыВалют = Формат(ДатаКурса, "ДФ=dd.MM.yyyy") + "    " + ИнфоСтрока;
	ИсходнаяНадписьКурсыВалют = НадписьКурсыВалют;
	
		
	ЦветТекста = ПолучитьЦветТекстСообщенияИнформации();
	
	Элементы.НадписьКурсыВалют.ЦветТекста = ЦветТекста;
	Элементы.НадписьОбщееКоличествоЗадачПоВЭД.ЦветТекста = ЦветТекста;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	ОбновитьФормуНаСервере();	
	ДоступностьКнопкиПечати();
КонецПроцедуры	

&НаСервере
Процедура ОбновитьФормуНаСервере()
	РЭЙ_ЗадачиСервер.КонтрольДатыИсполненияЗадачи();
	НадписьОбщееКоличествоЗадачПоВЭД = Строка(ПолучитьОбщееКоличествоЗадачПоВЭД());
	
	Элементы.Список.Обновить();
КонецПроцедуры	

&НаКлиенте
Процедура ОчиститьОтбор()
	Список.Отбор.Элементы.Очистить();
	АдресТаблицыНастроекОтбора = "";
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура СделатьКонтрактНедействующим(текКонтрактВЭД)
	КонтрактОбъект = текКонтрактВЭД.ПолучитьОбъект();
	КонтрактОбъект.НеДействует = Истина;
	КонтрактОбъект.Записать();
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПолучитьОбщееКоличествоЗадачПоВЭД()
	СписокРолей = Новый СписокЗначений;
	Если РольДоступна("РЭЙ_ВалютныйКонтролер") Тогда
		СписокРолей.Добавить(Справочники.РЭЙ_РолиИсполнителей.РЭЙ_ВалютныйКонтролер);
	КонецЕсли;
	Если РольДоступна("РЭЙ_ЮристПоВЭД") Тогда
		СписокРолей.Добавить(Справочники.РЭЙ_РолиИсполнителей.Юрист);
	КонецЕсли;
	
	Запрос = Новый Запрос;	
	Запрос.УстановитьПараметр("Выполнена", Ложь);
	Запрос.УстановитьПараметр("Роль", СписокРолей);
	
	Запрос = Новый Запрос;	
	Запрос.УстановитьПараметр("Роль", СписокРолей);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Задачи.Ссылка), 0) КАК КоличествоЗадач
	|ИЗ
	|	Задача.РЭЙ_ЗадачиВЭД КАК Задачи
	|ГДЕ
	|	Задачи.Выполнена = ЛОЖЬ
	|	И Задачи.Роль В(&Роль)";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.КоличествоЗадач;
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьСписокВыполненныхЗадачПоВЭД()
	Перем СписокВыбора;
	Перем Запрос;
	
	СписокВыбора = Новый СписокЗначений; 
	
	
	Запрос = Новый Запрос;	
	
	Запрос.УстановитьПараметр("Выполнена",	Истина);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Задачи.Ссылка
	|ИЗ
	|	Задача.РЭЙ_ЗадачиВЭД КАК Задачи
	|ГДЕ
	|	Задачи.Выполнена = &Выполнена 
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокВыбора.Добавить(Выборка.Ссылка,Выборка.Ссылка.Наименование);
	КонецЦикла;
	
	Возврат СписокВыбора;
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаОбъектПечати(Ссылка)
	СсылаНаОбъектПечати	= Неопределено;
	
	ОбъектЗадачи = Ссылка.ОбъектЗадачи;
	
	Если ТипЗнч(ОбъектЗадачи) = Тип("СправочникСсылка.РЭЙ_КонтрактыВЭД") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РЭЙ_ПаспортСделки.Ссылка
		|ИЗ
		|	Документ.РЭЙ_ПаспортСделки КАК РЭЙ_ПаспортСделки
		|ГДЕ
		|	РЭЙ_ПаспортСделки.КонтрактВЭД = &КонтрактВЭД
		|	И РЭЙ_ПаспортСделки.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	РЭЙ_ПаспортСделки.Дата УБЫВ";
		Запрос.УстановитьПараметр("КонтрактВЭД", ОбъектЗадачи);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СсылаНаОбъектПечати	= Выборка.Ссылка;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ОбъектЗадачи) = Тип("ДокументСсылка.РЭЙ_ПаспортСделки") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка
		|ИЗ
		|	Документ.РЭЙ_ЗаявлениеВБанкПС.ПаспортаСделок КАК РЭЙ_ЗаявлениеВБанкПСПаспортаСделок
		|ГДЕ
		|	РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.ПаспортСделки = &ПаспортСделки
		|	И РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	РЭЙ_ЗаявлениеВБанкПСПаспортаСделок.Ссылка.Дата УБЫВ";
		
		Запрос.УстановитьПараметр("ПаспортСделки", ОбъектЗадачи);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СсылаНаОбъектПечати	= Выборка.Ссылка;
		КонецЕсли;
	Иначе
		
		ВидДокумента = ВРег(СокрЛП(ОбъектЗадачи.Метаданные().Имя));
		
		ТаблицаВидовРасчетныхДокументов = РЭЙ_СлужебныйСервер.ПолучитьТаблицуРасчетныхДокументов();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Документ", ОбъектЗадачи);
		
		Если ТаблицаВидовРасчетныхДокументов.Найти(ВидДокумента, "ВидВРег") <> Неопределено Тогда
			// СВО
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	СВО.Ссылка
			|ИЗ
			|	Документ.РЭЙ_СправкаОВалютныхОперациях.ВалютныеОперации КАК СВО
			|ГДЕ
			|	СВО.Ссылка.ПометкаУдаления = ЛОЖЬ
			|	И СВО.РасчетныйДокумент = &Документ
			|
			|УПОРЯДОЧИТЬ ПО
			|	СВО.Ссылка.Дата УБЫВ";
			Выборка = Запрос.Выполнить().Выбрать();
		Иначе
			// СПД
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	СПД.Ссылка
			|ИЗ
			|	Документ.РЭЙ_СправкаОПодтверждающихДокументах.ПодтверждающиеДокументы КАК СПД
			|ГДЕ
			|	СПД.Ссылка.ПометкаУдаления = ЛОЖЬ
			|	И СПД.Документ В (&Документ)
			|
			|УПОРЯДОЧИТЬ ПО
			|	СПД.Ссылка.Дата УБЫВ";
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Количество() = 0 Тогда
				Если ВРег(ОбъектЗадачи.Метаданные().Имя) = ВРег("ГТДИмпорт") Тогда
					ЗапросГТД = Новый Запрос;
					ЗапросГТД.Текст =
					"ВЫБРАТЬ
					|	ГТДИмпортТовары.ДокументПартии
					|ИЗ
					|	Документ.ГТДИмпорт.Товары КАК ГТДИмпортТовары
					|ГДЕ
					|	ГТДИмпортТовары.Ссылка = &Документ";
					
					ЗапросГТД.УстановитьПараметр("Документ", ОбъектЗадачи);
					
					РезультатЗапросаГТД = ЗапросГТД.Выполнить();
					
					Если Не РезультатЗапросаГТД.Пустой() Тогда
						Запрос.УстановитьПараметр("Документ", РезультатЗапросаГТД.Выгрузить().ВыгрузитьКолонку("ДокументПартии"));
						Выборка = Запрос.Выполнить().Выбрать();
					КонецЕсли;
				КонецЕсли;
				Если ВРег(ОбъектЗадачи.Метаданные().Имя) = ВРег("ТаможеннаяДекларацияИмпорт") Тогда
					ЗапросГТД = Новый Запрос;
					ЗапросГТД.Текст =
					"ВЫБРАТЬ
					|	ГТДИмпортТовары.ДокументПоступления
					|ИЗ
					|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ГТДИмпортТовары
					|ГДЕ
					|	ГТДИмпортТовары.Ссылка = &Документ";
					
					ЗапросГТД.УстановитьПараметр("Документ", ОбъектЗадачи);
					
					РезультатЗапросаГТД = ЗапросГТД.Выполнить();
					
					Если Не РезультатЗапросаГТД.Пустой() Тогда
						Запрос.УстановитьПараметр("Документ", РезультатЗапросаГТД.Выгрузить().ВыгрузитьКолонку("ДокументПоступления"));
						Выборка = Запрос.Выполнить().Выбрать();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.Следующий() Тогда
			СсылаНаОбъектПечати	= Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СсылаНаОбъектПечати;
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьЦветТекстСообщенияИнформации()
	ИмяЭлементаСтиля = "ЦветЗаголовкаИнформационнойПанели";
	Если Метаданные.ЭлементыСтиля.Найти(ИмяЭлементаСтиля) <> Неопределено Тогда
		Возврат ЦветаСтиля[ИмяЭлементаСтиля];
	Иначе
		Возврат Новый Цвет(0, 150, 70);
	КонецЕсли;
КонецФункции	

&НаСервере
Функция ПредставлениеРаботника(Работник, Знач Падеж = 1, Знач Пол = Неопределено)
	ТипДанных = ТипЗнч(Работник);
	Если ТипДанных = Тип("Строка") Тогда
		РаботникФИО = Работник;
		РаботникПол = Пол;
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Работник", Работник);
		Если ТипДанных = Тип("СправочникСсылка.Сотрудники") Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	СотрудникиОрганизаций.Наименование,
			|	СотрудникиОрганизаций.ФизическоеЛицо.Пол КАК Пол
			|ИЗ
			|	Справочник.Сотрудники КАК СотрудникиОрганизаций
			|ГДЕ
			|	СотрудникиОрганизаций.Ссылка = &Работник";
		Иначе
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ФизическиеЛица.Наименование,
			|	ФизическиеЛица.Пол
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|ГДЕ
			|	ФизическиеЛица.Ссылка = &Работник";
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			РаботникФИО = Выборка.Наименование;
			РаботникПол = Выборка.Пол;
		Иначе
			Возврат ""
		КонецЕсли;
	КонецЕсли;
	
	ФИО = ФизическиеЛицаКлиентСервер.ФамилияИнициалыФизЛица(РаботникФИО);
	
	ПозицияПервогоПробела = Найти(ФИО + " "," ");
	Фамилия  = Лев(ФИО,ПозицияПервогоПробела-1);
	Инициалы = Сред(ФИО,ПозицияПервогоПробела+1);
	
	РезультатСклонения = "";
	ФИО = Фамилия + " " + Инициалы;	
	
	Возврат ФИО
КонецФункции

#КонецОбласти


