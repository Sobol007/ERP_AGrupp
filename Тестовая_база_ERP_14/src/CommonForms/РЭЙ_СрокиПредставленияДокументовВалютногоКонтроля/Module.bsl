
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НарисоватьФорму();
	
	ПрочитатьДанные();
КонецПроцедуры

&НаСервере
Процедура НарисоватьФорму()
	НарисоватьГруппуЭлементов("СВО_ВалютныеСчета_Зачисление", Элементы.Страница_СВО_ВалютныеСчета_Зачисление, "1, 2, 6");
	НарисоватьГруппуЭлементов("СВО_ВалютныеСчета_Списание", Элементы.Страница_СВО_ВалютныеСчета_Списание, "1, 2, 6");
	НарисоватьГруппуЭлементов("СВО_ВалютныеСчета_ТретьиЛица", Элементы.Страница_СВО_ВалютныеСчета_ТретьиЛица, "1, 2, 6");
	НарисоватьГруппуЭлементов("СВО_РублевыеСчета_Зачисление", Элементы.Страница_СВО_РублевыеСчета_Зачисление, "1, 2, 6");
	НарисоватьГруппуЭлементов("СВО_РублевыеСчета_Списание", Элементы.Страница_СВО_РублевыеСчета_Списание, "1, 2, 6");
	НарисоватьГруппуЭлементов("СВО_РублевыеСчета_ТретьиЛица", Элементы.Страница_СВО_РублевыеСчета_ТретьиЛица, "1, 2, 6");
	НарисоватьГруппуЭлементов("СВО_СчетаЗаРубежом_Зачисление", Элементы.Страница_СВО_СчетаЗаРубежом_Зачисление, "1, 2, 6");
	НарисоватьГруппуЭлементов("СВО_СчетаЗаРубежом_Списание", Элементы.Страница_СВО_СчетаЗаРубежом_Списание, "1, 2, 6");
	НарисоватьГруппуЭлементов("СВО_СчетаЗаРубежом_ТретьиЛица", Элементы.Страница_СВО_СчетаЗаРубежом_ТретьиЛица, "1, 2, 6");
	
	НарисоватьГруппуЭлементов("СПД_СПодачейГТД_Поступление", Элементы.Страница_СПД_СПодачейГТД_Поступление, "2, 3, 4, 12, 6");
	НарисоватьГруппуЭлементов("СПД_СПодачейГТД_Реализация", Элементы.Страница_СПД_СПодачейГТД_Реализация, "2, 3, 4, 12, 6");
	НарисоватьГруппуЭлементов("СПД_БезПодачиГТД_Поступление", Элементы.Страница_СПД_БезПодачиГТД_Поступление, "2, 3, 4, 12, 6");
	НарисоватьГруппуЭлементов("СПД_БезПодачиГТД_Реализация", Элементы.Страница_СПД_БезПодачиГТД_Реализация, "2, 3, 4, 12, 6");
	
	НарисоватьГруппуЭлементов("ПаспортСделки_Создание", Элементы.ПаспортСделки_Страница_Создание, "7, 6");
	НарисоватьГруппуЭлементов("ПаспортСделки_ПереоформлениеСумма", Элементы.ПаспортСделки_Переоформление_Страница_Сумма, "9, 6");
	НарисоватьГруппуЭлементов("ПаспортСделки_ПереоформлениеСрок", Элементы.ПаспортСделки_Переоформление_Страница_Срок, "10, 6");
	НарисоватьГруппуЭлементов("ПаспортСделки_Автопролонгация", Элементы.ПаспортСделки_Страница_Автопролонгация, "11, 6");
	
	НарисоватьГруппуЭлементов("ОжидаемыйСрок_СВО", Элементы.СВО_Страница_ОжидаемыйСрок, "8, 6", "Предупреждать до даты");
	НарисоватьГруппуЭлементов("ОжидаемыйСрок_СПД", Элементы.СПД_Страница_ОжидаемыйСрок, "8, 6", "Предупреждать до даты");
КонецПроцедуры

&НаСервере
Процедура НарисоватьГруппуЭлементов(ИмяГруппы, ЭлементРодитель, СтрокаВариантов_ДатаСтартаТаймера, Заголовок_ДатаСтартаТаймера = "Дата старта таймера")
	МассивДобавляемыхРеквизитов = Новый Массив; 
    МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяГруппы + "_КоличествоДней", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0))));
    МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяГруппы + "_Дни", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0))));
    МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяГруппы + "_ДниПредставление", Новый ОписаниеТипов("Строка")));
    МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяГруппы + "_ДатаСтартаТаймера", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0))));
    МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяГруппы + "_ДатаСтартаТаймераПредставление", Новый ОписаниеТипов("Строка")));
	
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	ГруппаДни = Элементы.Добавить(ИмяГруппы + "_ГруппаДни", Тип("ГруппаФормы"), ЭлементРодитель);
	ГруппаДни.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаДни.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	ГруппаДни.ОтображатьЗаголовок = Ложь;
	ГруппаДни.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	КоличествоДней = Элементы.Добавить(ИмяГруппы + "_КоличествоДней", Тип("ПолеФормы"), ГруппаДни);
	КоличествоДней.Вид = ВидПоляФормы.ПолеВвода;
	КоличествоДней.ПутьКДанным = ИмяГруппы + "_КоличествоДней";
	КоличествоДней.Заголовок = "Количество дней";
	КоличествоДней.Ширина = 2;
	
	Дни = Элементы.Добавить(ИмяГруппы + "_Дни", Тип("ПолеФормы"), ГруппаДни);
	Дни.Вид = ВидПоляФормы.ПолеВвода;
	Дни.ПутьКДанным = ИмяГруппы + "_ДниПредставление";
	Дни.Заголовок = "Дни";
	Дни.РедактированиеТекста = Ложь;
	Дни.КнопкаВыпадающегоСписка = Истина;
	Дни.УстановитьДействие("ПриИзменении", "ДниПриИзменении");
	ЗаполнитьСписок_Дни(Дни);
		
	ДатаСтартаТаймера = Элементы.Добавить(ИмяГруппы + "_ДатаСтартаТаймера", Тип("ПолеФормы"), ЭлементРодитель);
	ДатаСтартаТаймера.Вид = ВидПоляФормы.ПолеВвода;
	ДатаСтартаТаймера.ПутьКДанным = ИмяГруппы + "_ДатаСтартаТаймераПредставление";	
	ДатаСтартаТаймера.Заголовок = Заголовок_ДатаСтартаТаймера;
	ДатаСтартаТаймера.РедактированиеТекста = Ложь;
	ДатаСтартаТаймера.КнопкаВыпадающегоСписка = Истина;
	ДатаСтартаТаймера.УстановитьДействие("ПриИзменении", "ДатаСтартаТаймераПриИзменении");
	ДатаСтартаТаймера.АвтоМаксимальнаяШирина = Ложь;
	ДатаСтартаТаймера.МаксимальнаяШирина = 50;
	ЗаполнитьСписок_ДатаСтартаТаймера(ДатаСтартаТаймера, СтрокаВариантов_ДатаСтартаТаймера);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок_Дни(ЭлементУправления)
	Для текИндекс = 1 По 2 Цикл
		ЭлементУправления.СписокВыбора.Добавить(текИндекс, РЭЙ_СлужебныйСервер.ПредставлениеДни(текИндекс));
	КонецЦикла;
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСписок_ДатаСтартаТаймера(ЭлементУправления, СтрокаВариантов)
	СтрокаВариантов = СтрЗаменить(СтрокаВариантов, " ", "");
	Пока СтрокаВариантов <> "" Цикл
		ПозицияРазделителя = Найти(СтрокаВариантов, ",");
		Если ПозицияРазделителя = 0 Тогда
			текИндекс = Число(СтрокаВариантов);
			СтрокаВариантов = "";
		Иначе
			текИндекс = Число(Сред(СтрокаВариантов, 1, ПозицияРазделителя - 1));
			СтрокаВариантов = Сред(СтрокаВариантов, ПозицияРазделителя + 1);
		КонецЕсли;
		ЭлементУправления.СписокВыбора.Добавить(текИндекс, РЭЙ_СлужебныйСервер.ПредставлениеДатаСтартаТаймера(текИндекс));
	КонецЦикла;
КонецПроцедуры	

&НаКлиенте
Процедура ДниПриИзменении(Элемент)
	ИмяРеквизитаЗначение = Элемент.Имя;
	ИмяРеквизитаПредставление = Элемент.Имя + "Представление";
	
	ЭтотОбъект[ИмяРеквизитаЗначение] = Число(ЭтотОбъект[ИмяРеквизитаПредставление]);
	ЭтотОбъект[ИмяРеквизитаПредставление] = РЭЙ_СлужебныйСервер.ПредставлениеДни(ЭтотОбъект[ИмяРеквизитаЗначение]);
КонецПроцедуры

&НаКлиенте
Процедура ДатаСтартаТаймераПриИзменении(Элемент)
	ИмяРеквизитаЗначение = Элемент.Имя;
	ИмяРеквизитаПредставление = Элемент.Имя + "Представление";
	
	ЭтотОбъект[ИмяРеквизитаЗначение] = Число(ЭтотОбъект[ИмяРеквизитаПредставление]);
	ЭтотОбъект[ИмяРеквизитаПредставление] = РЭЙ_СлужебныйСервер.ПредставлениеДатаСтартаТаймера(ЭтотОбъект[ИмяРеквизитаЗначение]);
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанные()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях.Период) КАК Дата
	|ИЗ
	|	РегистрСведений.РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях КАК РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.Период)
	|ИЗ
	|	РегистрСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах КАК РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(РЭЙ_СрокиПредставленияПаспортаСделки.Период)
	|ИЗ
	|	РегистрСведений.РЭЙ_СрокиПредставленияПаспортаСделки КАК РЭЙ_СрокиПредставленияПаспортаСделки";
	
	ДатаЗаписи = Дата(2012,01,01);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.Дата) = Тип("Дата") Тогда
			ДатаЗаписи = Макс(ДатаЗаписи, Выборка.Дата);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Период КАК Дата,
	|	ВидСправки КАК ВидСправки,
	|	НаправлениеПлатежа КАК НаправлениеПлатежа,
	|	Дни КАК Дни,
	|	ДатаСтартаТаймера КАК ДатаСтартаТаймера,
	|	КоличествоДней КАК КоличествоДней
	|ИЗ
	|	РегистрСведений.РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях.СрезПоследних(&ДатаПолучения, )";
	Запрос.УстановитьПараметр("ДатаПолучения",	ДатаЗаписи);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если (Выборка.ВидСправки = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОВалютныхОперациях) И (Выборка.НаправлениеПлатежа = 1) Тогда
			ИмяГруппы = "СВО_ВалютныеСчета_Зачисление"
		ИначеЕсли (Выборка.ВидСправки = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОВалютныхОперациях) И (Выборка.НаправлениеПлатежа = 2) Тогда
			ИмяГруппы = "СВО_ВалютныеСчета_Списание"
		ИначеЕсли (Выборка.ВидСправки = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОВалютныхОперациях) И (Выборка.НаправлениеПлатежа = 9) Тогда
			ИмяГруппы = "СВО_ВалютныеСчета_ТретьиЛица"
		ИначеЕсли (Выборка.ВидСправки = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОПоступленииВалютыРФ) И (Выборка.НаправлениеПлатежа = 1) Тогда
			ИмяГруппы = "СВО_РублевыеСчета_Зачисление"
		ИначеЕсли (Выборка.ВидСправки = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОПоступленииВалютыРФ) И (Выборка.НаправлениеПлатежа = 2) Тогда
			ИмяГруппы = "СВО_РублевыеСчета_Списание"
		ИначеЕсли (Выборка.ВидСправки = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОПоступленииВалютыРФ) И (Выборка.НаправлениеПлатежа = 9) Тогда
			ИмяГруппы = "СВО_РублевыеСчета_ТретьиЛица"
		ИначеЕсли (Выборка.ВидСправки = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОРасчетахЧерезСчетаЗаРубежом) И (Выборка.НаправлениеПлатежа = 1) Тогда
			ИмяГруппы = "СВО_СчетаЗаРубежом_Зачисление"
		ИначеЕсли (Выборка.ВидСправки = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОРасчетахЧерезСчетаЗаРубежом) И (Выборка.НаправлениеПлатежа = 2) Тогда
			ИмяГруппы = "СВО_СчетаЗаРубежом_Списание"
		ИначеЕсли (Выборка.ВидСправки = Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОРасчетахЧерезСчетаЗаРубежом) И (Выборка.НаправлениеПлатежа = 9) Тогда
			ИмяГруппы = "СВО_СчетаЗаРубежом_ТретьиЛица"
		КонецЕсли; 
		ПрочитатьИзРегистраСведений(ИмяГруппы, Выборка);
	КонецЦикла;
	
	Запрос = Новый Запрос;	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Сроки.Период КАК Дата,
	|	Сроки.ПроцедураДекларирования КАК ПроцедураДекларирования,
	|	Сроки.НаправлениеПоставки КАК НаправлениеПоставки,
	|	Сроки.Дни КАК Дни,
	|	Сроки.ДатаСтартаТаймера КАК ДатаСтартаТаймера,
	|	Сроки.КоличествоДней КАК КоличествоДней
	|ИЗ
	|	РегистрСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.СрезПоследних(&ДатаПолучения, ) КАК Сроки";
	
	Запрос.УстановитьПараметр("ДатаПолучения",	ДатаЗаписи);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если (Выборка.ПроцедураДекларирования = Перечисления.РЭЙ_ПроцедураДекларирования.ПодачаГТДДоВыпускаСТаможни) И (Выборка.НаправлениеПоставки = 1) Тогда
			ИмяГруппы = "СПД_СПодачейГТД_Поступление"
		ИначеЕсли (Выборка.ПроцедураДекларирования = Перечисления.РЭЙ_ПроцедураДекларирования.ПодачаГТДДоВыпускаСТаможни) И (Выборка.НаправлениеПоставки = 2) Тогда
			ИмяГруппы = "СПД_СПодачейГТД_Реализация"
		ИначеЕсли (Выборка.ПроцедураДекларирования = Перечисления.РЭЙ_ПроцедураДекларирования.БезПодачиГТД) И (Выборка.НаправлениеПоставки = 1) Тогда
			ИмяГруппы = "СПД_БезПодачиГТД_Поступление"
		ИначеЕсли (Выборка.ПроцедураДекларирования = Перечисления.РЭЙ_ПроцедураДекларирования.БезПодачиГТД) И (Выборка.НаправлениеПоставки = 2) Тогда
			ИмяГруппы = "СПД_БезПодачиГТД_Реализация"
		КонецЕсли; 
		ПрочитатьИзРегистраСведений(ИмяГруппы, Выборка);
	КонецЦикла;
	
	// Паспорт сделки
	Запрос = Новый Запрос;	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Регистр.Период КАК Дата,
	|	Регистр.Процедура,
	|	Регистр.Дни КАК Дни,
	|	Регистр.ДатаСтартаТаймера КАК ДатаСтартаТаймера,
	|	Регистр.КоличествоДней КАК КоличествоДней
	|ИЗ
	|	РегистрСведений.РЭЙ_СрокиПредставленияПаспортаСделки.СрезПоследних(&ДатаПолучения, ) КАК Регистр";
	Запрос.УстановитьПараметр("ДатаПолучения", ДатаЗаписи);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ИмяГруппы = "ПаспортСделки_" + Выборка.Процедура; 
		ПрочитатьИзРегистраСведений(ИмяГруппы, Выборка);
	КонецЦикла;
	
	
	//Ожидаемый срок
	Запрос = Новый Запрос;	
	Запрос.УстановитьПараметр("ДатаПолучения", ДатаЗаписи);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Регистр.Период КАК Дата,
	|	Регистр.ВидСправки КАК ВидСправки,
	|	Регистр.Дни КАК Дни,
	|	Регистр.ДатаСтартаТаймера КАК ДатаСтартаТаймера,
	|	Регистр.КоличествоДней КАК КоличествоДней
	|ИЗ
	|	РегистрСведений.РЭЙ_СрокиКонтроляПриближенияОжидаемыхСроков.СрезПоследних(&ДатаПолучения, ) КАК Регистр";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ИмяГруппы = "ОжидаемыйСрок_" + Выборка.ВидСправки; 
		ПрочитатьИзРегистраСведений(ИмяГруппы, Выборка);
	КонецЦикла;
КонецПроцедуры	

&НаСервере
Процедура ПрочитатьИзРегистраСведений(ИмяГруппы, Выборка)
	ЭтотОбъект[ИмяГруппы + "_КоличествоДней"] = Выборка.КоличествоДней;
	ЭтотОбъект[ИмяГруппы + "_Дни"] = Выборка.Дни;
	ЭтотОбъект[ИмяГруппы + "_ДниПредставление"] = РЭЙ_СлужебныйСервер.ПредставлениеДни(Выборка.Дни);
	ЭтотОбъект[ИмяГруппы + "_ДатаСтартаТаймера"] = Выборка.ДатаСтартаТаймера;
	ЭтотОбъект[ИмяГруппы + "_ДатаСтартаТаймераПредставление"] = РЭЙ_СлужебныйСервер.ПредставлениеДатаСтартаТаймера(Выборка.ДатаСтартаТаймера);
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	// СВО
	НаборЗаписей = РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаЗаписи);
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СВО_ВалютныеСчета_Зачисление", Новый Структура("ВидСправки, НаправлениеПлатежа", Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОВалютныхОперациях, 1));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СВО_ВалютныеСчета_Списание", Новый Структура("ВидСправки, НаправлениеПлатежа", Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОВалютныхОперациях, 2));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СВО_ВалютныеСчета_ТретьиЛица", Новый Структура("ВидСправки, НаправлениеПлатежа", Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОВалютныхОперациях, 9));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СВО_РублевыеСчета_Зачисление", Новый Структура("ВидСправки, НаправлениеПлатежа", Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОПоступленииВалютыРФ, 1));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СВО_РублевыеСчета_Списание", Новый Структура("ВидСправки, НаправлениеПлатежа", Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОПоступленииВалютыРФ, 2));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СВО_РублевыеСчета_ТретьиЛица", Новый Структура("ВидСправки, НаправлениеПлатежа", Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОПоступленииВалютыРФ, 9));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СВО_СчетаЗаРубежом_Зачисление", Новый Структура("ВидСправки, НаправлениеПлатежа", Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОРасчетахЧерезСчетаЗаРубежом, 1));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СВО_СчетаЗаРубежом_Списание", Новый Структура("ВидСправки, НаправлениеПлатежа", Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОРасчетахЧерезСчетаЗаРубежом, 2));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СВО_СчетаЗаРубежом_ТретьиЛица", Новый Структура("ВидСправки, НаправлениеПлатежа", Перечисления.РЭЙ_ВидыОперацийСправкаОВалютныхОперациях.СправкаОРасчетахЧерезСчетаЗаРубежом, 9));
	НаборЗаписей.Записать(Истина);

	// СПД
	НаборЗаписей = РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаЗаписи);
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СПД_СПодачейГТД_Поступление", Новый Структура("ПроцедураДекларирования, НаправлениеПоставки", Перечисления.РЭЙ_ПроцедураДекларирования.ПодачаГТДДоВыпускаСТаможни, 1));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СПД_СПодачейГТД_Реализация", Новый Структура("ПроцедураДекларирования, НаправлениеПоставки", Перечисления.РЭЙ_ПроцедураДекларирования.ПодачаГТДДоВыпускаСТаможни, 2));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СПД_БезПодачиГТД_Поступление", Новый Структура("ПроцедураДекларирования, НаправлениеПоставки", Перечисления.РЭЙ_ПроцедураДекларирования.БезПодачиГТД, 1));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "СПД_БезПодачиГТД_Реализация", Новый Структура("ПроцедураДекларирования, НаправлениеПоставки", Перечисления.РЭЙ_ПроцедураДекларирования.БезПодачиГТД, 2));
	НаборЗаписей.Записать(Истина);
	
	// Паспорт сделки
	НаборЗаписей = РегистрыСведений.РЭЙ_СрокиПредставленияПаспортаСделки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаЗаписи);
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "ПаспортСделки_Создание", Новый Структура("Процедура", "Создание"));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "ПаспортСделки_ПереоформлениеСумма", Новый Структура("Процедура", "ПереоформлениеСумма"));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "ПаспортСделки_ПереоформлениеСрок", Новый Структура("Процедура", "ПереоформлениеСрок"));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "ПаспортСделки_Автопролонгация", Новый Структура("Процедура", "Автопролонгация"));
	НаборЗаписей.Записать(Истина);
	
	// Ожидаемый срок
	НаборЗаписей = РегистрыСведений.РЭЙ_СрокиКонтроляПриближенияОжидаемыхСроков.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаЗаписи);
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "ОжидаемыйСрок_СВО", Новый Структура("ВидСправки", "СВО"));
	ЗаписатьВРегистрСведений(НаборЗаписей, ДатаЗаписи, "ОжидаемыйСрок_СПД", Новый Структура("ВидСправки", "СПД"));
	НаборЗаписей.Записать(Истина);	
	
	//Очистка записей после устанавливаемой даты
	РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях.ОчиститьРегистр(КонецДня(ДатаЗаписи) + 1);
	РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.ОчиститьРегистр(КонецДня(ДатаЗаписи) + 1);
	РегистрыСведений.РЭЙ_СрокиПредставленияПаспортаСделки.ОчиститьРегистр(КонецДня(ДатаЗаписи) + 1);
	РегистрыСведений.РЭЙ_СрокиКонтроляПриближенияОжидаемыхСроков.ОчиститьРегистр(КонецДня(ДатаЗаписи) + 1);
КонецПроцедуры

&НаСервере 
Процедура ЗаписатьВРегистрСведений(НаборЗаписей, Период, ИмяГруппы, ДанныеИзмерений)
	Запись = НаборЗаписей.Добавить();
	Запись.Период = Период;
	ЗаполнитьЗначенияСвойств(Запись, ДанныеИзмерений);
	Запись.КоличествоДней = ЭтотОбъект[ИмяГруппы + "_КоличествоДней"];
	Запись.Дни = ЭтотОбъект[ИмяГруппы + "_Дни"];
	Запись.ДатаСтартаТаймера = ЭтотОбъект[ИмяГруппы + "_ДатаСтартаТаймера"];
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСогласноИнструкции(Команда)
	ТекстВопроса = "Вы уверены, что хотите заполнить сроки предоставления документов валютного контроля согласно инструкции Банка России от 16.08.2017 №181-И?";
	Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьСогласноИнструкции", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьСогласноИнструкции(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьСогласноИнструкцииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСогласноИнструкцииНаСервере()
	РегистрыСведений.РЭЙ_СрокиПредставленияПаспортаСделки.УстановитьИнициализационныеНастройки();
	РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОВалютныхОперациях.УстановитьИнициализационныеНастройки();
	РегистрыСведений.РЭЙ_СрокиПредставленияСправкиОПодтверждающихДокументах.УстановитьИнициализационныеНастройки();
	РегистрыСведений.РЭЙ_СрокиКонтроляПриближенияОжидаемыхСроков.УстановитьИнициализационныеНастройки();
	
	ПрочитатьДанные();
КонецПроцедуры
