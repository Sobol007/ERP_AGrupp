
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Метаданные.ЭлементыСтиля.Найти("CRM_ОсновнойГолубой") <> Неопределено Тогда
		ЦветФонаГиперссылки = Новый Цвет(163, 173, 187);
		ЦветФонаОсновнойКнопки = ЦветаСтиля["CRM_ОсновнойГолубой"];
		ЦветФонаВыбраннойГиперссылки = ЦветаСтиля["CRM_ОсновнойГолубой"];
		ЦветТекстаГиперссылки = ЦветаСтиля["CRM_ОсновнойГолубой"];
		ЦветТекстаКнопки = WebЦвета.Белый;
		ЦветТекстаВыбраннойГиперссылки = Новый Цвет(0, 160, 242);
		
	Иначе
		ЦветФонаГиперссылки = Новый Цвет();
		ЦветФонаОсновнойКнопки = Новый Цвет();
		ЦветФонаВыбраннойГиперссылки = ЦветаСтиля["ЦветГиперссылки"];
		ЦветТекстаГиперссылки = ЦветаСтиля["ЦветГиперссылки"];
		ЦветТекстаКнопки = Новый Цвет();
		ЦветТекстаВыбраннойГиперссылки = Новый Цвет();
	КонецЕсли;
	
	МассивДействийЗвонка = сфпСофтФонПроСерверПереопределяемый.сфпПолучитьМассивДоступныхДействий();
	
	Для Каждого ТекДействие Из МассивДействийЗвонка Цикл
		Если ПустаяСтрока(ТекДействие.Действие) ИЛИ ТекДействие.Действие = "сфпОткрытьПанельЗвонка" Тогда
			Продолжить;
		КонецЕсли;
		
		ДействияПоЗвонку.Добавить(ТекДействие.Действие, ТекДействие.Наименование);
	КонецЦикла;
	
	ТекущийПользователь = сфпСофтФонПроСервер.сфпТекущийПользователь();
	
	Если Параметры.Свойство("ИдентификаторЗвонка") Тогда
		ИдентификаторЗвонка = Параметры.ИдентификаторЗвонка;
		ТекущийЗвонокКонтакт = Параметры.Контакт;
		ТекущийЗвонокПредставлениеКонтакта = ?(ЗначениеЗаполнено(Параметры.Контакт), Параметры.Контакт, НСтр("ru='Неизвестный абонент'"));
		Если ЗначениеЗаполнено(Параметры.Контакт) И ТипЗнч(Параметры.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ТекущийЗвонокВладелецКонтакта = Параметры.Контакт.Владелец;
		КонецЕсли;	
		ТекущийЗвонокНомерАбонента = Параметры.НомерТелефона;
		
		Элементы.ДекорацияВходящий.Видимость = Параметры.Входящий;
		Элементы.ДекорацияИсходящий.Видимость = НЕ Параметры.Входящий;
		
	Иначе
		Запрос = Новый Запрос("
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	АбонентКонтакт,
		|	АбонентКонтакт.Владелец КАК ВладелецКонтакта,
		|	НомерТелефона,
		|	ИдентификаторЗвонка,
		|	Входящий
		|ИЗ
		|	РегистрСведений.сфпТекущиеЗвонки
		|ГДЕ
		|	Пользователь = &Пользователь
		|УПОРЯДОЧИТЬ ПО
		|	ДатаЗвонка УБЫВ");
		Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);

		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ИдентификаторЗвонка = Выборка.ИдентификаторЗвонка;
			ТекущийЗвонокКонтакт = Выборка.АбонентКонтакт;
			ТекущийЗвонокПредставлениеКонтакта = ?(ЗначениеЗаполнено(Выборка.АбонентКонтакт), Выборка.АбонентКонтакт, НСтр("ru='Неизвестный абонент'"));
			ТекущийЗвонокВладелецКонтакта = Выборка.ВладелецКонтакта;
			ТекущийЗвонокНомерАбонента = Выборка.НомерТелефона;
			
			Элементы.ДекорацияВходящий.Видимость = Выборка.Входящий;
			Элементы.ДекорацияИсходящий.Видимость = НЕ Выборка.Входящий;
		КонецЕсли;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийЗвонокКонтакт) Тогда
		ДанныеКонтакта = сфпСофтФонПроСервер.ПолучитьДанныеПредставленияКонтакта(ТекущийЗвонокКонтакт, УникальныйИдентификатор);
		Если ЗначениеЗаполнено(ДанныеКонтакта.Аватар) Тогда
			ТекущийЗвонокАватарКонтакта = ДанныеКонтакта.Аватар;
			Элементы.ТекущийЗвонокПустойАватар.Видимость = Ложь;
			Элементы.ТекущийЗвонокАватарКонтакта.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;	
		
	Элементы.ТекущийЗвонокДлительность.Видимость = Ложь;
	
	Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		Элементы.ВыбратьДействиеНет.Видимость = Ложь;
		Элементы.ВыбратьДействиеДа.Видимость = Истина;
	КонецЕсли;

	сфпЛицензированиеСервер.ЗаполнитьАбонентовОблачнойАТС(ЭтаФорма);
	сфпСофтФонПроСервер.ОбновитьКонтактыПанелиЗвонка(ЭтаФорма);
	
	ТекущийФильтрЗвонков = "Все";
	
	ЗаголовокСтатуса = "Нет линии";
	ВнутреннийНомер = сфпСофтФонПроСервер.ПолучитьВнутреннийНомерПоПользователю(ТекущийПользователь);
	Если ЗначениеЗаполнено(ВнутреннийНомер) Тогда
		ЗаголовокСтатуса = "Линия " + ВнутреннийНомер;
	КонецЕсли;
	ЭтаФорма.Заголовок = "" + ТекущийПользователь + " (" + ЗаголовокСтатуса + ")";

	ДоступностьКомандAPI = сфпСофтФонПроСервер.ПолучитьДоступностьКомандAPI();
	ДоступностьКомандAPI_Ответ = ДоступностьКомандAPI.Ответ;
	ДоступностьКомандAPI_Завершить = ДоступностьКомандAPI.Завершить;
	ДоступностьКомандAPI_Пауза = ДоступностьКомандAPI.Пауза;
	ДоступностьКомандAPI_Перевод = ДоступностьКомандAPI.Перевод;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтборыТелефонныхЗвонков();
	сфпСофтФонПроКлиент.УстановитьДоступностьКомандПанелиЗвонка(ЭтаФорма);

	ТекГруппировка = АбонентыТелефонныхКниг.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ТекГруппировка.Использование = Истина;
	ТекГруппировка.Поле = Новый ПолеКомпоновкиДанных("ТелефоннаяКнига");

	УстановитьОтображениеГруппыЕще("Контакты");

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ЗакрыватьФорму = Ложь;
	
	Если ИмяСобытия = "сфпКонецРазговора" Тогда
		Если Параметр.ИдентификаторЗвонка = ЭтаФорма.ИдентификаторЗвонка Тогда
			ЗакрыватьФорму = Истина;
        КонецЕсли;
	КонецЕсли;
	
	сфпСофтФонПроКлиент.ОбработкаОповещенияПанелиЗвонка(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Если ЗакрыватьФорму Тогда
		ЭтаФорма.Закрыть();
    КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомеронабирательУдалитьНажатие(Элемент)
	НабранныйНомер = Лев(НабранныйНомер, СтрДлина(НабранныйНомер) - 1);
КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		НастроитьОтображениеКонтактов("Развернуть", ВыбраннаяСтрока.Ключ);
		
	ИначеЕсли НЕ ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		ПоднятьТрубку();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПриАктивизации()
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		ДоступенНаборНомераДокумента = Ложь;
		
		ТекДанные = Элементы.АбонентыТелефонныхКниг.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			Если НЕ ТекДанные.Свойство("ГруппировкаСтроки") И ЗначениеЗаполнено(ТекДанные.НомерТелефона) Тогда
				ТекущийЗвонокНомерАбонента = ТекДанные.НомерТелефона;
				ДоступенНаборНомераДокумента = ЗначениеЗаполнено(ТекДанные.НомерТелефона);
				ТекущийЗвонокПредставлениеКонтакта = ТекДанные.Контакт;
				ТекущийЗвонокВладелецКонтакта = ТекДанные.Владелец;
				ТекущийЭлементДанныхКонтакта = Элементы.АбонентыТелефонныхКниг.Имя;

			Иначе
				ТекущийЗвонокНомерАбонента = "";
				ТекущийЗвонокПредставлениеКонтакта = "";
				ТекущийЗвонокВладелецКонтакта = "";
				ТекущийЭлементДанныхКонтакта = "";
			КонецЕсли;	
		КонецЕсли;
		
		сфпСофтФонПроКлиент.УстановитьДоступностьКомандПанелиЗвонка(ЭтаФорма, ТекДанные <> Неопределено);
		
		Если ТекДанные = Неопределено И Элементы.ТелефонныеЗвонки.ТекущиеДанные <> Неопределено Тогда
			//ТелефонныеЗвонкиПриАктивизации();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПриАктивизацииСтроки(Элемент)
	АбонентыТелефонныхКнигПриАктивизации();
КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПриАктивизацииПоля(Элемент)
	АбонентыТелефонныхКнигПриАктивизации();
КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПриАктивизацииЯчейки(Элемент)
	АбонентыТелефонныхКнигПриАктивизации();
КонецПроцедуры

&НаКлиенте
Процедура АбонентыТелефонныхКнигПередРазворачиванием(Элемент, Строка, Отказ)
	
	Отказ = Истина;
	НастроитьОтображениеКонтактов("Развернуть", Строка.Ключ);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область УправлениеТекущимЗвонком

&НаКлиенте
Процедура ПоднятьТрубку(Команда = Неопределено)
	
	СтруктураЗвонка = Новый Структура("НомерТелефона,АбонентКонтакт,ДанныеЗаполнения,ИдентификаторЗвонка");
	
	Если ЗначениеЗаполнено(НабранныйНомер) Тогда
		СтруктураЗвонка.НомерТелефона = НабранныйНомер;
		НабранныйНомер = "";
		Элементы.ДекорацияПодтвердитьПеревод.Видимость = Ложь;
		
	Иначе	
		ТекДанные = Элементы.ТелефонныеЗвонки.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			Если ЗначениеЗаполнено(ТекДанные.АбонентКакСвязаться) Тогда
				СтруктураЗвонка.НомерТелефона = ТекДанные.АбонентКакСвязаться;
				СтруктураЗвонка.АбонентКонтакт = ТекДанные.АбонентКонтакт;
				СтруктураЗвонка.ДанныеЗаполнения = Новый Структура("ВзаимодействиеОснование", ТекДанные.Ссылка);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.НомерТелефона) Тогда
		Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.АбонентКонтакт) Тогда
			ГолыйНомерТелефона = сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(СтруктураЗвонка.НомерТелефона);
			МассивЗвонящих = сфпСофтФонПроСервер.сфпНайтиОбъектВРегистреПоТелефону(ГолыйНомерТелефона);
			Если МассивЗвонящих.Количество() > 0 Тогда
				СтруктураЗвонка.АбонентКонтакт = МассивЗвонящих[0];
			КонецЕсли;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
			Если ТекущийЗвонокДлительность = '00010101' Тогда
				РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ПереводНеотвеченногоЗвонка", ИдентификаторЗвонка, СтруктураЗвонка.НомерТелефона, ВнутреннийНомер, Истина);
				
			Иначе
				РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ПереводОтвеченногоЗвонка", ИдентификаторЗвонка, СтруктураЗвонка.НомерТелефона, ВнутреннийНомер, Истина);
			КонецЕсли;
		
		Иначе	
			сфпСофтФонПроКлиент.сфпПозвонить(СтруктураЗвонка.НомерТелефона, СтруктураЗвонка.АбонентКонтакт, СтруктураЗвонка.ДанныеЗаполнения);
			
			сфпСофтФонПроКлиент.ОбработкаОповещенияПанелиЗвонка(ЭтаФорма, "сфпНовыйИсходящийЗвонок", СтруктураЗвонка, ЭтаФорма);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоложитьТрубку(Команда)
	
	//Если Событие <> Неопределено Тогда
	//	ЗаписатьДанныеЗвонка(Событие,, ТекущаяДатаСеанса(),, Ложь, Контрагент, НомерКому, ДанныеПользователяАТС.ВнутреннийНомер, Сотрудник);
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ЗавершениеВызова", ИдентификаторЗвонка);
		//Сообщить("Успешно: " + РезультатЗапроса.Успешно + "; json: " + РезультатЗапроса.json + "; Результат: " + РезультатЗапроса.Результат + "; Ошибка: " + РезультатЗапроса.Ошибка);
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ПереключитьЗвонок(Команда)
	
	Если НЕ Элементы.ГруппаЕщё.Видимость Тогда
		ДекорацияПокаатьЕщёНажатие();		
	КонецЕсли;
	
	ПоказатьНомеронабиратель();
	ЭтаФорма.ТекущийЭлемент = Элементы.НабранныйНомер;

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура НомеронабирательНажатие(Команда)
	
	ИмяЭлемента = СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "Номеронабиратель", "");
	Если ИмяЭлемента = "Символ1" Тогда
		ВведенноеЗначение = "*";

	ИначеЕсли ИмяЭлемента = "Символ2" Тогда
		ВведенноеЗначение = "#";

	Иначе
		ВведенноеЗначение = Число(ИмяЭлемента);
	КонецЕсли;	
	
	НабранныйНомер = НабранныйНомер + ВведенноеЗначение;
	
	Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
		Если НЕ Элементы.ДекорацияПодтвердитьПеревод.Видимость Тогда
			Элементы.ДекорацияПодтвердитьПеревод.Видимость = Истина;
		КонецЕсли;
		
	Иначе
		ТекущийЗвонокНомерАбонента = НабранныйНомер;
	КонецЕсли;
	
	Элементы.ДекорацияОтветНет.Видимость = Ложь;
	Элементы.ДекорацияОтветДа.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтображениеГруппыЕще(Группа)

	Элементы.ПоказатьКонтакты.ЦветФона = ?(Группа = "Контакты", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ПоказатьЖурнал.ЦветФона = ?(Группа = "Журнал", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ПоказатьНомеронабиратель.ЦветФона = ?(Группа = "Номеронабиратель", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ПоказатьНомеронабиратель.Картинка = ?(Группа = "Номеронабиратель", БиблиотекаКартинок.сфпПанельЗвонка_НомеронабирательДа, БиблиотекаКартинок.сфпПанельЗвонка_НомеронабирательНет);
	
	Элементы.СтраницыЕще.ТекущаяСтраница = Элементы["Страница" + Группа];

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтакты(Команда)
	УстановитьОтображениеГруппыЕще("Контакты");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЖурнал(Команда)
	УстановитьОтображениеГруппыЕще("Журнал");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНомеронабиратель(Команда = Неопределено)
	УстановитьОтображениеГруппыЕще("Номеронабиратель");
КонецПроцедуры

&НаКлиенте
Процедура ФильтрЗвонковПоВиду(Фильтр)
	
	ТекущийФильтрЗвонков = Фильтр;
	
	Элементы.ФильтрПринятые.ЦветФона = ?(ТекущийФильтрЗвонков = "Принятые", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ФильтрПринятые.ЦветТекста = ?(ТекущийФильтрЗвонков = "Принятые", ЦветТекстаКнопки, ЦветТекстаКнопки);
	
	Элементы.ФильтрНепринятые.ЦветФона = ?(ТекущийФильтрЗвонков = "Непринятые", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ФильтрНепринятые.ЦветТекста = ?(ТекущийФильтрЗвонков = "Непринятые", ЦветТекстаКнопки, ЦветТекстаКнопки);
	
	Элементы.ФильтрНабранные.ЦветФона = ?(ТекущийФильтрЗвонков = "Набранные", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ФильтрНабранные.ЦветТекста = ?(ТекущийФильтрЗвонков = "Набранные", ЦветТекстаКнопки, ЦветТекстаКнопки);
	
	Элементы.ФильтрВсе.ЦветФона = ?(ТекущийФильтрЗвонков = "Все", ЦветФонаВыбраннойГиперссылки, ЦветФонаГиперссылки);
	Элементы.ФильтрВсе.ЦветТекста = ?(ТекущийФильтрЗвонков = "Все", ЦветТекстаКнопки, ЦветТекстаКнопки);

	УстановитьОтборыТелефонныхЗвонков();

КонецПроцедуры

&НаКлиенте
Процедура ФильтрПринятые(Команда)
	ФильтрЗвонковПоВиду("Принятые");
КонецПроцедуры

&НаКлиенте
Процедура ФильтрНепринятые(Команда)
	ФильтрЗвонковПоВиду("Непринятые");
КонецПроцедуры

&НаКлиенте
Процедура ФильтрНабранные(Команда)
	ФильтрЗвонковПоВиду("Набранные");
КонецПроцедуры

&НаКлиенте
Процедура ФильтрВсе(Команда)
	ФильтрЗвонковПоВиду("Все");
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьДлительностьРазговораПанелиЗвонка() Экспорт
	ТекущийЗвонокДлительность = '00010101' + (ТекущаяДата() - ТекущийЗвонокНачалоРазговора);	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДействие(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПриВыбореДействияПоЗвонку", ЭтаФорма);
	ПоказатьВыборИзМеню(Оповещение, ДействияПоЗвонку, Элементы.ВыбратьДействиеДа);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореДействияПоЗвонку(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		СтруктураЗвонка = Новый Структура();
		Если ЗначениеЗаполнено(ИдентификаторЗвонка) Тогда
			СтруктураЗвонка = Новый Структура("ИдентификаторЗвонка,Контакт,НомерТелефона",
				ИдентификаторЗвонка, ТекущийЗвонокКонтакт, ТекущийЗвонокНомерАбонента);
			
		Иначе
			ТекДанные = Элементы.ТелефонныеЗвонки.ТекущиеДанные;
			Если ТекДанные <> Неопределено Тогда
				МассивЗвонящих = Новый Массив();
				МассивЗвонящих.Добавить(ТекДанные.АбонентКонтакт);
				
				СтруктураЗвонка = Новый Структура("ИдентификаторЗвонка,Контакт,НомерТелефона,НовыйЗвонок,МассивЗвонящих",
					ТекДанные.сфпИдентификаторЗвонка, ТекДанные.АбонентКонтакт, ТекДанные.АбонентКакСвязаться, ТекДанные.Ссылка, МассивЗвонящих);
			КонецЕсли;
		КонецЕсли;
		
		Если СтруктураЗвонка.Свойство("ИдентификаторЗвонка") Тогда
			ИндексДействия = 2 + ДействияПоЗвонку.Индекс(ВыбранныйЭлемент);
			сфпСофтФонПроКлиентПереопределяемый.сфпВыполнитьДоступноеДействие(ИндексДействия, СтруктураЗвонка);
		КонецЕсли;	
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьПеревод(Команда)
	
	Если ЗначениеЗаполнено(ИдентификаторЗвонка) И ЗначениеЗаполнено(НабранныйНомер) Тогда
		Если ТекущийЗвонокДлительность = '00010101' Тогда
			РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ПереводНеотвеченногоЗвонка", ИдентификаторЗвонка, НабранныйНомер, ВнутреннийНомер, Ложь);
			
		Иначе
			РезультатЗапроса = сфпЛицензированиеСервер.ВыполнитьЗапросОблачнойАТС("ПереводОтвеченногоЗвонка", ИдентификаторЗвонка, НабранныйНомер, ВнутреннийНомер, Ложь);
		КонецЕсли;
		
		Если РезультатЗапроса.Успешно Тогда
			НабранныйНомер = "";
			Элементы.ДекорацияПодтвердитьПеревод.Видимость = Ложь;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьДлительностьРазговораПанелиЗвонка() Экспорт
	ТекущийЗвонокДлительность = '00010101' + (ТекущаяДата() - ТекущийЗвонокНачалоРазговора);	
КонецПроцедуры

&НаКлиенте
// Процедура устанавливает текущие отборы списка Телефонных звонков
//
// Параметры:
//	Нет.
//
Процедура УстановитьОтборыТелефонныхЗвонков()
	
    ЭлементыСпискаОтбора = ТелефонныеЗвонки.КомпоновщикНастроек.Настройки.Отбор.Элементы;
	Для Каждого ТекущийОтбор Из ЭлементыСпискаОтбора Цикл
		Если ТекущийОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный Тогда
			Если ТекущийОтбор.Представление = "Внутренний номер" Тогда
				ТекущийОтбор.ПравоеЗначение = ВнутреннийНомер;
				
			ИначеЕсли ТекущийОтбор.Представление = "Принятые" Тогда
				Если ТекущийФильтрЗвонков = "Принятые" Тогда
					ТекущийОтбор.Использование = Истина;
				Иначе
					ТекущийОтбор.Использование = Ложь;
				КонецЕсли;

			ИначеЕсли ТекущийОтбор.Представление = "Набранные" Тогда
				Если ТекущийФильтрЗвонков = "Набранные" Тогда
					ТекущийОтбор.Использование = Истина;
			    Иначе
		            ТекущийОтбор.Использование = Ложь;
				КонецЕсли;

			ИначеЕсли ТекущийОтбор.Представление = "Не принятые" Тогда
				Если ТекущийФильтрЗвонков = "Непринятые" Тогда
					ТекущийОтбор.Использование	= Истина;
			    Иначе
		            ТекущийОтбор.Использование	= Ложь;
				КонецЕсли;
			КонецЕсли;
        КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УстановитьОтборыТелефонныхЗвонков()

&НаКлиенте
Процедура ДекорацияПокаатьЕщёНажатие(Элемент = Неопределено)

	Элементы.ГруппаПоказатьЕщё.Видимость = Ложь;
	Элементы.ГруппаЕщё.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Скрыть(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеКонтактов(Режим, Группировка = "")
	
	Если ТипЗнч(Группировка) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;

	ТекущаяГруппировкаКонтактов.Очистить();
	
	Если Режим = "Развернуть" Тогда
		НоваяСтрока = ТекущаяГруппировкаКонтактов.Добавить();
		НоваяСтрока.Группировка = Группировка;
		
		Элементы.ТекущаяГруппировкаКонтактов.Видимость = Истина;

		Элементы.АбонентыТелефонныхКнигКонтактПредставление.ГиперссылкаЯчейки = Ложь;
		
		АбонентыТелефонныхКниг.Группировка.Элементы[0].Использование = Ложь;
		АбонентыТелефонныхКниг.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].Использование = Истина;
		АбонентыТелефонныхКниг.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].ПравоеЗначение = Группировка;
		
	Иначе
		Элементы.АбонентыТелефонныхКниг.ТекущаяСтрока = Неопределено;

		Элементы.ТекущаяГруппировкаКонтактов.Видимость = Ложь;
		
		Элементы.АбонентыТелефонныхКнигКонтактПредставление.ГиперссылкаЯчейки = Истина;
		
		АбонентыТелефонныхКниг.Группировка.Элементы[0].Использование = Истина;
		АбонентыТелефонныхКниг.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].Использование = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьКонтакт(Команда)
	
	ТекДанные = Элементы.АбонентыТелефонныхКниг.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ТипЗнч(ТекДанные) = Тип("ДанныеФормыСтруктура") Тогда
		Попытка ПоказатьЗначение(, ТекДанные.Контакт);
		Исключение КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущаяГруппировкаКонтактовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НастроитьОтображениеКонтактов("Свернуть");
	
КонецПроцедуры

#КонецОбласти