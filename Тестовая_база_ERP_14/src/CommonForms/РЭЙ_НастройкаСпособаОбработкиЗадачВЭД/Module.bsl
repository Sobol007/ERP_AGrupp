
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Константы.РЭЙ_ИспользоватьРегламентныеЗаданияДляОбработкиЗадачВЭД.Получить() Тогда
		ОбработкаЗадачВРегалментномЗадании = 1;
	Иначе
		ОбработкаЗадачВКлиентскомСеансе = 1;
	КонецЕсли;
	
	Отбор = Новый Структура("Метаданные", Метаданные.РегламентныеЗадания.РЭЙ_ОбработкаЗадачВЭД);
	МассивЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	Если МассивЗаданий.Количество() > 0 Тогда
		РегламентноеЗадание = МассивЗаданий[0];
		Расписание = РегламентноеЗадание.Расписание;
	Иначе
		РегламентноеЗадание = Неопределено;
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Если ОбработкаЗадачВРегалментномЗадании = 1 Тогда
		ПроверитьКорректностьРасписания();
	КонецЕсли;
	УстановитьОтображение_ОткрытьРасписание();
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактирование(Команда)
	Если Не ПроверитьКорректностьРасписания() Тогда
		ПоказатьПредупреждение(, "Необходимо заполнить расписание!");
		Возврат;
	КонецЕсли;
	
	ЗакончитьРедактированиеНаСервере();
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура ЗакончитьРедактированиеНаСервере()
	НачатьТранзакцию();
	
	Отбор = Новый Структура("Метаданные", Метаданные.РегламентныеЗадания.РЭЙ_ОбработкаЗадачВЭД);
	МассивЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	Если МассивЗаданий.Количество() > 0 Тогда
		РегламентноеЗадание = МассивЗаданий[0];
	Иначе
		РегламентноеЗадание = Неопределено;
	КонецЕсли;
	
	Если ОбработкаЗадачВРегалментномЗадании = 1 Тогда
		Константы.РЭЙ_ИспользоватьРегламентныеЗаданияДляОбработкиЗадачВЭД.Установить(Истина);
		
		// добавление или изменение
		Если РегламентноеЗадание = Неопределено Тогда
			РегламентноеЗадание = РегламентныеЗадания.СоздатьРегламентноеЗадание(Метаданные.РегламентныеЗадания.РЭЙ_ОбработкаЗадачВЭД);
		КонецЕсли;
		
		РегламентноеЗадание.Наименование = Метаданные.РегламентныеЗадания.РЭЙ_ОбработкаЗадачВЭД.Синоним;
		РегламентноеЗадание.Использование = Истина;
		РегламентноеЗадание.КоличествоПовторовПриАварийномЗавершении = 3;
		РегламентноеЗадание.ИнтервалПовтораПриАварийномЗавершении = 10;
		РегламентноеЗадание.Расписание = Расписание;
		РегламентноеЗадание.Записать();
	Иначе
		Константы.РЭЙ_ИспользоватьРегламентныеЗаданияДляОбработкиЗадачВЭД.Установить(Ложь);
		
		// удаление
		Если РегламентноеЗадание <> Неопределено Тогда
			РегламентноеЗадание.Удалить();
		КонецЕсли;
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗадачВКлиентскомСеансеПриИзменении(Элемент)
	ОбработкаЗадачВРегалментномЗадании = 0;
	ПроверитьКорректностьРасписания();
	УстановитьОтображение_ОткрытьРасписание();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗадачВРегалментномЗаданииПриИзменении(Элемент)
	ОбработкаЗадачВКлиентскомСеансе = 0;
	ПроверитьКорректностьРасписания();
	УстановитьОтображение_ОткрытьРасписание();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписание(Команда)
	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ДиалогРасписания.Показать(Новый ОписаниеОповещения("ОткрытьРасписание_Завершение", ЭтотОбъект));
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображение_ОткрытьРасписание()
	Если ОбработкаЗадачВРегалментномЗадании = 1 Тогда
		Элементы.ОткрытьРасписание.Доступность = Истина;
	Иначе
		Элементы.ОткрытьРасписание.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписание_Завершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Расписание = Результат;
		ПроверитьКорректностьРасписания();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьКорректностьРасписания()
	ЕстьКорректноеРасписание = Ложь;
	Если ОбработкаЗадачВРегалментномЗадании = 1 Тогда
		Если Расписание.ДетальныеРасписанияДня.Количество() = 0 И Расписание.ВремяНачала <> Дата(1,1,1,0,0,0) Тогда
			ЕстьКорректноеРасписание = Истина
		ИначеЕсли Расписание.ДетальныеРасписанияДня.Количество() > 0 Тогда
			Для т = 0 По Расписание.ДетальныеРасписанияДня.Количество() - 1 Цикл
				Если Расписание.ДетальныеРасписанияДня[т].ВремяНачала <> Дата(1,1,1,0,0,0) Тогда
					ЕстьКорректноеРасписание = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	Иначе
		ЕстьКорректноеРасписание = Истина;
	КонецЕсли;
	
	Если ЕстьКорректноеРасписание Тогда
		Элементы.ОткрытьРасписание.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
		Команды.Найти("ОткрытьРасписание").Подсказка = "";
		Возврат Истина;
	Иначе
		Элементы.ОткрытьРасписание.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Команды.Найти("ОткрытьРасписание").Подсказка = 
		"Расписание не установлено или установлено некорректно.
		|Рекомендуется установить время начала 08:00.";
		Возврат Ложь;
	КонецЕсли;
КонецФункции
