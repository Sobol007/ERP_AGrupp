#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Пользователи.РолиДоступны("ОтправкаSMS, ПолныеПрава") Тогда
		
		ТекстПредупреждения = НСтр("ru='Недостаточно прав для настройки работы с SMS сообщениями.';en='There are not enough rights to configure SMS messaging.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстПредупреждения,,,, Отказ);
		Возврат;
		
	КонецЕсли;
	
	ВерсияМодуля = SMS4B_ОтправкаSMS.SMS4B_ВерсияМодуля();
	
	НастройкиСервиса = SMS4B_ОтправкаSMS.SMS4B_ПрочитатьНастройкиСервиса();
	
	ПериодЗапрета = НастройкиСервиса.ПериодЗапрета;
	НачалоПериодаЗапрета = ПериодЗапрета.ДатаНачала;
	КонецПериодаЗапрета = ПериодЗапрета.ДатаОкончания;
	СрокЖизниСообщений = НастройкиСервиса.СрокЖизниСообщений;
	
	Баланс = Формат(НастройкиСервиса.ОстатокПоСчету, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00" ) + НСтр("ru=' руб.'");
	КорректировкаUTC = Формат(НастройкиСервиса.КорректировкаUTC/3600, "ЧДЦ=; ЧО=2") + НСтр("ru = ' ч.'");
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьПовторноИспользуемыеЗначения();
	Оповестить("Запись_НастройкиОтправкиSMS", ПараметрыЗаписи, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияЛичныйКабинетНажатие(Элемент)
	
	SMS4B_ВзаимодействияКлиент.SMS4B_ОткрытьЛичныйКабинетСервиса(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокЖизниСообщенийПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПериодЗапретаОтправкиПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПолучениеСообщенийПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучатьТолькоПолныеСообщенияПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаЗапретаПриИзменении(Элемент)
	
	НачалоПериодаЗапрета = НачалоЧаса(НачалоПериодаЗапрета);
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаЗапретаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НачалоПериодаЗапрета = Дата('00010101') И (Направление = -1) Тогда
		НачалоПериодаЗапрета = НачалоПериодаЗапрета + 82800;
	Иначе	
		НачалоПериодаЗапрета = НачалоПериодаЗапрета + 3600 * Направление;
	КонецЕсли;
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаЗапретаПриИзменении(Элемент)
	
	КонецПериодаЗапрета = НачалоЧаса(КонецПериодаЗапрета);
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаЗапретаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если КонецПериодаЗапрета = Дата('00010101') И (Направление = -1) Тогда
		КонецПериодаЗапрета = КонецПериодаЗапрета + 82800;
	Иначе	
		КонецПериодаЗапрета = КонецПериодаЗапрета + 3600 * Направление;
	КонецЕсли;
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПоследнегоВходящегоСообщенияПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьНастройки(Команда)
	
	Если ОбновитьНастройкиСервиса() Тогда
		ТекстОповещения = НСтр("ru='Обновление параметров SMS4B';en='Update SMS4B settings'");
		ТекстПояснения = НСтр("ru='Параметры сервиса SMS4B успешно обновлены.';en='SMS4B service parameters have been successfully updated.'");
		ПоказатьОповещениеПользователя(ТекстОповещения,, ТекстПояснения, БиблиотекаКартинок.Информация32, СтатусОповещенияПользователя.Информация, "SMS4B");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НачалоПериодаЗапрета" Или РеквизитПутьКДанным = "КонецПериодаЗапрета" Тогда
		ПериодЗапрета = Новый Структура;
		ПериодЗапрета.Вставить("ДатаНачала", НачалоПериодаЗапрета);
		ПериодЗапрета.Вставить("ДатаОкончания", КонецПериодаЗапрета);
		
		НастройкиСервиса = SMS4B_ОтправкаSMS.SMS4B_ПрочитатьНастройкиСервиса();
		НастройкиСервиса.ПериодЗапрета = Новый ФиксированнаяСтруктура(ПериодЗапрета);
		
		SMS4B_ОтправкаSMS.SMS4B_ЗаписатьНастройкиСервиса(НастройкиСервиса);
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "СрокЖизниСообщений" Тогда
		НастройкиСервиса = SMS4B_ОтправкаSMS.SMS4B_ПрочитатьНастройкиСервиса();
		НастройкиСервиса.СрокЖизниСообщений = СрокЖизниСообщений;
		
		SMS4B_ОтправкаSMS.SMS4B_ЗаписатьНастройкиСервиса(НастройкиСервиса);
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если (РеквизитПутьКДанным = "НаборКонстант.SMS4B_ИспользоватьПолучениеСообщений" Или РеквизитПутьКДанным = "") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "НастройкаПолучения",
			"Доступность", НаборКонстант.SMS4B_ИспользоватьПолучениеСообщений);
		
	КонецЕсли;
	
	Если (РеквизитПутьКДанным = "НаборКонстант.SMS4B_ИспользоватьПериодЗапретаОтправки" Или РеквизитПутьКДанным = "") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "НачалоИКонецПериодаЗапрета",
			"Доступность", НаборКонстант.SMS4B_ИспользоватьПериодЗапретаОтправки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбновитьНастройкиСервиса()
	
	РезультатПодключения = SMS4B_ОтправкаSMS.SMS4B_ОбновитьНастройкиСервиса();
	Если РезультатПодключения.Ошибка Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПодключения.ОписаниеОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	НастройкиСервиса = РезультатПодключения.НастройкиСервиса;
	
	ПериодЗапрета = НастройкиСервиса.ПериодЗапрета;
	НачалоПериодаЗапрета = ПериодЗапрета.ДатаНачала;
	КонецПериодаЗапрета = ПериодЗапрета.ДатаОкончания;
	СрокЖизниСообщений = НастройкиСервиса.СрокЖизниСообщений;
	
	Баланс = Формат(НастройкиСервиса.ОстатокПоСчету, "ЧДЦ=2; ЧРГ=' '; ЧН=0,00" ) + НСтр("ru=' руб.'");
	КорректировкаUTC = Формат(НастройкиСервиса.КорректировкаUTC/3600, "ЧДЦ=; ЧО=2") + НСтр("ru = ' ч.'");
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
