
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ сфпСофтФонПроСервер.сфпРолиДоступны("ПолныеПрава, сфпУправлениеМаршрутизацией") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Недостаточно прав для настройки СофтФон!';en='Not enough rights to configure SoftFon!'"));
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
	КонецЕсли;
	
	ВозможноИспользованиеСофтФон = Истина;
	#Если Вебклиент Тогда
		ВозможноИспользованиеСофтФон = Ложь;
	#КонецЕсли
	
	Если НЕ ВозможноИспользованиеСофтФон ИЛИ Константы.ИспользоватьРазделениеПоОбластямДанных.Получить() Тогда
	    Элементы.ДекорацияНадписьДоступности.Видимость = Истина;
		Элементы.ГруппаИспользоватьСофтФон.Видимость = Ложь;
		Элементы.сфпГруппаНастройки.Видимость = Ложь;
		ЭтаФорма.КоманднаяПанель.Видимость = Ложь;
		ЭтаФорма.ТолькоПросмотр = Истина;
		
		ВозможноИспользованиеСофтФон = Ложь;
	КонецЕсли;

КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события формы "ПриОткрытии"
//
Процедура ПриОткрытии(Отказ)
	
	Если ВозможноИспользованиеСофтФон Тогда
		сфпКоличествоВзаимодействийДляМаршрутизацииПриИзменении(Элементы.сфпКоличествоВзаимодействийДляМаршрутизации);
		сфпИспользоватьСпрут7ПриИзменении(Элементы.сфпИспользоватьСпрут7);
		сфпИспользоватьCLONПриИзменении(Элементы.сфпИспользоватьCLON);
		сфпИспользоватьМаршрутизациюПриИзменении(НаборКонстант.сфпИспользоватьМаршрутизацию);
		сфпИспользоватьРегламентноеЗаданиеИсторииЗвонковПриИзменении(Элементы.сфпИспользоватьРегламентноеЗаданиеИсторииЗвонков);
		сфпИспользоватьРегламентноеЗаданиеТелефонныхКнигПриИзменении(Элементы.сфпИспользоватьРегламентноеЗаданиеТелефонныхКниг);
		сфпИспользоватьCoMagicПриИзменении(Элементы.сфпИспользоватьCoMagic);
		сфпПланНумерацииАвтоопределениеБизнесРегионаПриИзменении(Элементы.сфпПланНумерацииАвтоопределениеБизнесРегиона);
	КонецЕсли;

КонецПроцедуры // ПриОткрытии()

&НаКлиенте
// Процедура - обработчик события формы "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	#Если Вебклиент Тогда
		ИспользоватьСофтФон = Ложь;
	#Иначе
		ИспользоватьСофтФон = НаборКонстант.сфпИспользоватьСофтФон;
	#КонецЕсли
	
	НаборКонстант.сфпИспользоватьСофтФон = ИспользоватьСофтФон;
	
	Если ИспользоватьСофтФон Тогда
		НаборКонстант.сфпИспользуемаяВерсияСофтФон = ПредопределенноеЗначение("Перечисление.сфпВерсииСофтФон.СофтФотПроф");
		НаборКонстант.сфпИспользуемаяАТС = ПредопределенноеЗначение("Перечисление.сфпДоступныеАТС.ПустаяСсылка");
		НаборКонстант.сфпИспользоватьОблачнуюТелефонию = Ложь;
		НаборКонстант.сфпИспользоватьМобильнуюТелефонию = Ложь;
		
		Если НЕ (НаборКонстант.сфпИспользоватьСпрут7 ИЛИ НаборКонстант.сфпИспользоватьCLON) Тогда
			НаборКонстант.сфпИспользоватьЗаписьПереговоров = Ложь;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НаборКонстант.сфпДатаИсторииЗвонков) Тогда
			НаборКонстант.сфпДатаИсторииЗвонков = НачалоДня(сфпСофтФонПроСервер.сфпТекущаяДата());
		КонецЕсли;	

	Иначе
		НаборКонстант.сфпИспользуемаяВерсияСофтФон = "";
		НаборКонстант.сфпИспользуемаяАТС = "";
		НаборКонстант.сфпИспользоватьОблачнуюТелефонию = Ложь;
		НаборКонстант.сфпИспользоватьМобильнуюТелефонию = Ложь;
		НаборКонстант.сфпИспользоватьЗаписьПереговоров = Ложь;
		НаборКонстант.сфпДатаИсторииЗвонков = "";
		НаборКонстант.сфпПланНумерацииАвтоопределениеБизнесРегиона = Ложь;
		НаборКонстант.сфпИспользоватьРегламентноеЗаданиеИсторииЗвонков = Ложь;
		НаборКонстант.сфпИспользоватьРегламентноеЗаданиеТелефонныхКниг = Ложь;
	КонецЕсли;

	сфпУстановитьИспользованиеРегламентныхЗаданий();

КонецПроцедуры // ПередЗаписью()

&НаКлиенте
// Процедура - обработчик события формы "ПослеЗаписи"
//
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ИспользоватьСофтФон = сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпИспользоватьСофтФон");
	
	Если НЕ ИспользоватьСофтФон Тогда
		сфпСофтФонПроКлиент.сфпОтключитьСофтФон();

	ИначеЕсли сфпПанельУправления = Неопределено Тогда
		сфпСофтФонПроКлиент.сфпПодключитьСофтФон();
	КонецЕсли;

	Если ИспользоватьСофтФон Тогда
		Если сфпРегистрПоискаПустой() Тогда
			сфпСофтФонПроКлиент.сфпПерезаполнитьРегистрПоискаПоНомерам();
		КонецЕсли;
	КонецЕсли;

	ОбновитьИнтерфейс();

КонецПроцедуры // ПослеЗаписи()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ОБРАБОТЧИКИ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура сфпИспользоватьСофтФонПриИзменении(Элемент)
	
	#Если Вебклиент Тогда
		ИспользоватьСофтФон = Ложь;
	#Иначе
		ИспользоватьСофтФон = НаборКонстант.сфпИспользоватьСофтФон;
	#КонецЕсли
	
	Элементы.сфпГруппаНастройки.Доступность = ИспользоватьСофтФон;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "сфпДекорацияПерезаполнитьРегистрПоискаПоНомерам"
//
Процедура сфпДекорацияПерезаполнитьРегистрПоискаПоНомерамНажатие(Элемент)
	сфпСофтФонПроКлиент.сфпПерезаполнитьРегистрПоискаПоНомерам();
КонецПроцедуры // сфпДекорацияПерезаполнитьРегистрПоискаПоНомерамНажатие()

&НаКлиенте
Процедура сфпДекорацияДополнительнаяИнформацияКонтактовНажатие(Элемент)
	ОткрытьФорму("ОбщаяФорма.сфпВыборДополнительнойИнформацииКонтактов",,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура сфпИспользоватьСпрут7ПриИзменении(Элемент)
	НаборКонстант.сфпИспользоватьЗаписьПереговоров	= (НаборКонстант.сфпИспользоватьCLON ИЛИ НаборКонстант.сфпИспользоватьСпрут7);
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "сфпИспользоватьCLON"
//
Процедура сфпИспользоватьCLONПриИзменении(Элемент)
	
	Элементы.сфпCLONType.Видимость = НаборКонстант.сфпИспользоватьCLON;
	Элементы.сфпПодключитьCLON.Видимость = НаборКонстант.сфпИспользоватьCLON;
	Элементы.сфпГруппаНастроекCLON.Видимость = НаборКонстант.сфпИспользоватьCLON;
	
	НаборКонстант.сфпИспользоватьЗаписьПереговоров = (НаборКонстант.сфпИспользоватьCLON ИЛИ НаборКонстант.сфпИспользоватьСпрут7);
	
КонецПроцедуры // сфпИспользоватьCLONПриИзменении()

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "сфпИспользоватьМаршрутизацию"
//
Процедура сфпИспользоватьМаршрутизациюПриИзменении(Элемент)
	Элементы.сфпДекорацияИспользованиеМаршрутизации.Видимость = НЕ НаборКонстант.сфпИспользоватьМаршрутизацию;	
	Элементы.сфпКоличествоВзаимодействийДляМаршрутизации.Видимость = НаборКонстант.сфпИспользоватьМаршрутизацию;
	Элементы.сфпИспользоватьВнутреннийНомерИзКИПользователя.Видимость = НаборКонстант.сфпИспользоватьМаршрутизацию;		
КонецПроцедуры // сфпИспользоватьМаршрутизациюПриИзменении()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "сфпДекорацияМастерНастройкиAgatUX"
//
Процедура сфпДекорацияМастерНастройкиAgatUXНажатие(Элемент)
	сфпСофтФонПроКлиент.сфпЗапуститьМастерНастройкиAgatUX()
КонецПроцедуры // сфпДекорацияМастерНастройкиAgatUXНажатие()

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "сфпИспользоватьРегламентноеЗаданиеТелефонныхКниг"
//
Процедура сфпИспользоватьРегламентноеЗаданиеТелефонныхКнигПриИзменении(Элемент)
	Элементы.сфпНастройкаРасписанияТелефонныхКниг.Видимость = НаборКонстант.сфпИспользоватьРегламентноеЗаданиеТелефонныхКниг;	
КонецПроцедуры // сфпИспользоватьРегламентноеЗаданиеТелефонныхКнигПриИзменении()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "сфпДекорацияТелефонныеКнигиСофтФон"
//
Процедура сфпДекорацияТелефонныеКнигиСофтФонНажатие(Элемент)
	ИспользоватьСофтФон = сфпСофтФонПроСервер.сфпИспользоватьСофтФон();
	Если ИспользоватьСофтФон Тогда
		ОткрытьФорму("Справочник.сфпТелефонныеКниги.ФормаСписка");	
	ИначеЕсли НаборКонстант.сфпИспользоватьСофтФон Тогда
		ДополнительныеПараметры = Новый Структура;
		ОповещениеОтвета = Новый ОписаниеОповещения("сфпОткрытьТелефонныеКниги", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru='Перед открытием телефонных книг необходимо записать настройки. Записать?';en='Before opening the phone book, you need to save the settings. Write down?'");
		ПоказатьВопрос(ОповещениеОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , , "Внимание!");
	КонецЕсли; 
КонецПроцедуры // сфпДекорацияТелефонныеКнигиСофтФонНажатие()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "сфпНастройкаРасписанияТелефонныхКниг"
//
Процедура сфпНастройкаРасписанияТелефонныхКнигНажатие(Элемент)
	сфпСофтФонПроКлиент.ПоказатьРасписаниеРегламентногоЗадания("сфпОбновлениеТелефонныхКниг");
КонецПроцедуры // сфпНастройкаРасписанияТелефонныхКнигНажатие()

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "сфпИспользоватьРегламентноеЗаданиеИсторииЗвонков"
//
Процедура сфпИспользоватьРегламентноеЗаданиеИсторииЗвонковПриИзменении(Элемент)
	
	ИспользоватьЗаданиеИсторииЗвонков = НаборКонстант.сфпИспользоватьРегламентноеЗаданиеИсторииЗвонков;
	
	Элементы.ГруппаДатаИсторииЗвонков.Видимость = ИспользоватьЗаданиеИсторииЗвонков;
	Элементы.сфпНастройкаРасписанияИсторииЗвонков.Видимость = ИспользоватьЗаданиеИсторииЗвонков;
	Элементы.ГруппаОповещатьОПропущенныхЗвонках.Видимость = ИспользоватьЗаданиеИсторииЗвонков;
	Элементы.сфпДатаИсторииЗвонков.Видимость = ИспользоватьЗаданиеИсторииЗвонков;
	
	Если НЕ ЗначениеЗаполнено(НаборКонстант.сфпДатаИсторииЗвонков) Тогда
		НаборКонстант.сфпДатаИсторииЗвонков = НачалоДня(сфпСофтФонПроСервер.сфпТекущаяДата());
	КонецЕсли;

	Если НЕ ИспользоватьЗаданиеИсторииЗвонков Тогда
		НаборКонстант.сфпОповещатьОПропущенныхЗвонках = Ложь;
		НаборКонстант.сфпДействиеПриОшибкеЗагрузкиИсторииЗвонков = ПредопределенноеЗначение("Перечисление.сфпДействияПриОшибкеЗагрузкиИсторииЗвонков.ПродолжитьВыполнение");
	КонецЕсли;
	
	сфпОповещатьОПропущенныхЗвонкахПриИзменении(Элемент);

КонецПроцедуры // сфпИспользоватьРегламентноеЗаданиеИсторииЗвонковПриИзменении()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "сфпНастройкаРасписанияИсторииЗвонков"
//
Процедура сфпНастройкаРасписанияИсторииЗвонковНажатие(Элемент)
	сфпСофтФонПроКлиент.ПоказатьРасписаниеРегламентногоЗадания("сфпПолучитьИсториюЗвонков");
КонецПроцедуры // сфпНастройкаРасписанияИсторииЗвонковНажатие()

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "сфпОповещатьОПропущенныхЗвонках"
//
Процедура сфпОповещатьОПропущенныхЗвонкахПриИзменении(Элемент)
	Элементы.сфпПользовательДляОповещений.Доступность = НаборКонстант.сфпОповещатьОПропущенныхЗвонках;
КонецПроцедуры // сфпОповещатьОПропущенныхЗвонкахПриИзменении()

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "сфпИспользоватьCoMagic"
//
Процедура сфпИспользоватьCoMagicПриИзменении(Элемент)
	Элементы.сфпЛогинCoMagic.Видимость = НаборКонстант.сфпИспользоватьCoMagic;
	Элементы.сфпПарольCoMagic.Видимость = НаборКонстант.сфпИспользоватьCoMagic;
КонецПроцедуры  // сфпИспользоватьCoMagicПриИзменении()

&НаКлиенте
Процедура сфпПланНумерацииАвтоопределениеБизнесРегионаПриИзменении(Элемент)
	Элементы.сфпНастройкаРасписанияЗагрузкаПланаНумерации.Видимость = НаборКонстант.сфпПланНумерацииАвтоопределениеБизнесРегиона;
КонецПроцедуры

&НаКлиенте
Процедура сфпНастройкаРасписанияЗагрузкаПланаНумерацииНажатие(Элемент)
	сфпСофтФонПроКлиент.ПоказатьРасписаниеРегламентногоЗадания("сфпЗагрузкаПланаНумерации");
КонецПроцедуры

&НаКлиенте
Процедура сфпКоличествоВзаимодействийДляМаршрутизацииПриИзменении(Элемент)
	
	ТекЗаголовок = "звонков";
	
	КоличествоГудков = НаборКонстант.сфпКоличествоВзаимодействийДляМаршрутизации;
	Если КоличествоГудков = 1 Тогда
		ТекЗаголовок = "звонка";
	КонецЕсли;
		
	Элементы.сфпИспользоватьВнутреннийНомерИзКИПользователя.Заголовок = ТекЗаголовок + " на номер пользователя";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
// Процедура - обработчик команды формы "ПодключитьCLON"
//
Процедура сфпПодключитьCLON(Команда)
	сфпЗаписатьНастройкиCLON();
	сфпСофтФонПроКлиент.сфпПодключитьCLON();
	Если НЕ (сфпObjCLON = Неопределено) Тогда
		Состояние("Вы успешно подключились к системе записи разговоров CLON");
	КонецЕсли;	
КонецПроцедуры // сфпПодключитьCLON()

&НаКлиенте
Процедура сфпКомандаОписаниеCoMagic(Команда)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("ИнтеграцияCoMagic"));
КонецПроцедуры // сфпКомандаОписаниеCoMagic()

&НаКлиенте
Процедура сфпСправка(Команда)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("ИнтеграцияСофтФон"));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
// Процедура сохраняет настройки подключения к системе CLON
//
// Параметры:
//	Нет.
//
Процедура сфпЗаписатьНастройкиCLON()
	Константы.сфпCLONServerIP.Установить(НаборКонстант.сфпCLONServerIP);
	Константы.сфпCLONServerPort.Установить(НаборКонстант.сфпCLONServerPort);
	Константы.сфпCLONType.Установить(НаборКонстант.сфпCLONType);
	Константы.сфпCLONServerLogin.Установить(НаборКонстант.сфпCLONServerLogin);
	Константы.сфпCLONServerPassword.Установить(НаборКонстант.сфпCLONServerPassword);
КонецПроцедуры // сфпЗаписатьНастройкиCLON()

&НаСервереБезКонтекста
// Функция проверяет наличие записей в регистре поиска по номеру теефона
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	Булево	- Признак наличия записей в регистре
//
Функция сфпРегистрПоискаПустой()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	сфпНомераТелефоновДляПоиска.Представление
	               |ИЗ
	               |	РегистрСведений.сфпНомераТелефоновДляПоиска КАК сфпНомераТелефоновДляПоиска";
	Возврат Запрос.Выполнить().Пустой();
КонецФункции // сфпРегистрПоискаПустой()

&НаСервере
// Процедура устанавливает использование регламентных заданий
//
// Параметры:
//	Нет.
//
Процедура сфпУстановитьИспользованиеРегламентныхЗаданий()
	
	Если НЕ ОбщегоНазначения.РазделениеВключено() Тогда // для Fresh отключаем.
		ТекИспользование = (НаборКонстант.сфпИспользоватьИсториюЗвонков И НаборКонстант.сфпИспользоватьРегламентноеЗаданиеИсторииЗвонков);
		сфпСофтФонПроСервер.УстановитьИспользованиеРегламентногоЗадания("сфпПолучитьИсториюЗвонков", ТекИспользование);
		сфпСофтФонПроСервер.УстановитьИспользованиеРегламентногоЗадания("сфпОбновлениеТелефонныхКниг", НаборКонстант.сфпИспользоватьРегламентноеЗаданиеТелефонныхКниг);
		сфпСофтФонПроСервер.УстановитьИспользованиеРегламентногоЗадания("сфпЗагрузкаПланаНумерации", НаборКонстант.сфпПланНумерацииАвтоопределениеБизнесРегиона);
	КонецЕсли;

КонецПроцедуры // сфпУстановитьИспользованиеРегламентныхЗаданий()

&НаКлиенте
// Процедура - обработчик открытия телефонных книг
//
// Параметры:
//	Ответ					- КодВозвратаДиалога	- Ответ на вопрос
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров
//
Процедура сфпОткрытьТелефонныеКниги(Ответ, ДополнительныеПараметры) Экспорт
	ИспользоватьСофтФон = Ложь;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Попытка
			Записать();
			ИспользоватьСофтФон = Истина;
		Исключение
		    ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не удалось записать настройки';en='It were not possible to write down settings'"));
		КонецПопытки;
	КонецЕсли; 
	Если НЕ ИспользоватьСофтФон Тогда Возврат; КонецЕсли;
	ОткрытьФорму("Справочник.сфпТелефонныеКниги.ФормаСписка");	
КонецПроцедуры // сфпОткрытьТелефонныеКниги()

#КонецОбласти