
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Пользователь") Тогда
		Пользователь = Параметры.Пользователь;
	Иначе	
		Пользователь = Пользователи.АвторизованныйПользователь();
	КонецЕсли;	
	Подразделение = Пользователь.Подразделение;
	тмпПользователь = Пользователь;
	тмпПодразделение = Подразделение;
	СтруктураИнтерфейсаРабочегоСтола  = CRM_РабочийСтолСервер.СтруктураИнтерфейсаРабочегоСтола();
	Если СтруктураИнтерфейсаРабочегоСтола.ДанныеЛоготипа <> Неопределено Тогда
		Попытка
			АдресХранилищаКартинки = ПоместитьВоВременноеХранилище(СтруктураИнтерфейсаРабочегоСтола.ДанныеЛоготипа, ЭтаФорма.УникальныйИдентификатор);
		Исключение
			АдресХранилищаКартинки = ПоместитьВоВременноеХранилище(СтруктураИнтерфейсаРабочегоСтола.ДвоичныеДанныеЛоготипаПоУмолчанию, ЭтаФорма.УникальныйИдентификатор);
		КонецПопытки;
	Иначе
		АдресХранилищаКартинки = ПоместитьВоВременноеХранилище(Неопределено, ЭтаФорма.УникальныйИдентификатор);
	КонецЕсли;
	
	ЗаполнитьФорму();
	ПраваОграничены =  РольДоступна("CRM_НастройкаРабочегоСтола") или РольДоступна("ПолныеПрава");
	Элементы.ГруппаСтраницы.ТекущаяСтраница = ?(НЕ ПраваОграничены, Элементы.ГруппаПользователи, Элементы.ГруппаОбщие);
	Элементы[?(НЕ ПраваОграничены, "КнопкаГруппаПользователи", "КнопкаГруппаОбщие")].ЦветФона = ЦветаСтиля.CRM_ОсновнойГолубой;
	Если ПраваОграничены Тогда
		ЭтотОбъект.Заголовок = "Настройка рабочего стола: общие настройки";
	Иначе
		ЭтотОбъект.Заголовок = "Настройка рабочего стола: "+Пользователь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы Тогда
		Если ЭтаФорма.Модифицированность Тогда
			ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("ВопросСохранитьНастройки", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещенияЗавершения, НСтр("ru = 'Сохранить измененные настройки?'; en = 'Do you want to save the changed settings?'"), РежимДиалогаВопрос.ДаНетОтмена);
			Отказ = Истина;
			Возврат;
		КонецЕсли;	
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НастройкиПриИзменении(Элемент)
	ЭтаФорма.Модифицированность = Истина;
	БлокироватьИнтерфейсОбщие = ?(НЕ ОкрыватьРабочийСтолОбщие, Ложь, БлокироватьИнтерфейсОбщие);
	БлокироватьИнтерфейсПользователь = ?(НЕ ОкрыватьРабочийСтолПользователь, Ложь, БлокироватьИнтерфейсПользователь);
	БлокироватьИнтерфейсПодразделение = ?(НЕ ОкрыватьРабочийСтолПодразделение, Ложь, БлокироватьИнтерфейсПодразделение);
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	Если ЭтаФорма.Модифицированность Тогда
		ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("ВопросСохранитьНастройкиПодразделения", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияЗавершения, НСтр("ru = 'Сохранить измененные настройки?'; en = 'Do you want to save the changed settings?'"), РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ПодразделениеПриИзмененииНаСервере();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	Если ЭтаФорма.Модифицированность Тогда
		ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("ВопросСохранитьНастройкиПользователя", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияЗавершения, НСтр("ru = 'Сохранить измененные настройки?'; en = 'Do you want to save the changed settings?'"), РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ПользовательПриИзмененииНаСервере();	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПоказатьНастройкиНажатие(Элемент)
	Элементы.ГруппаНастройкиОткрытия.Видимость = НЕ Элементы.ГруппаНастройкиОткрытия.Видимость;
	Если Элементы.ГруппаНастройкиОткрытия.Видимость Тогда
		Элементы.ДекорацияПоказатьНастройки.Заголовок = "Скрыть настройки всех пользователей";
	Иначе	
		Элементы.ДекорацияПоказатьНастройки.Заголовок = "Показать настройки всех пользователей";
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура АдресХранилищаКартинкиНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(
			Новый ОписаниеОповещения(
				"ЗагрузитьЛоготипПродолжение",
				ЭтотОбъект,
				Новый Структура),
			НСтр("ru='Для продолжения необходимо установить расширение для работы с файлами.';en='Continue, install the file operation extension.'"));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаДоступныхФорм2

&НаКлиенте
Процедура ТаблицаДоступныхФорм2Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТаблицаДоступныхФорм2.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	ДобавитьНаСервере("ТаблицаФормПользователи", ТекСтрока.ИмяФормы, ТекСтрока.ПредставлениеФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаФормПользователи

&НаКлиенте
Процедура ТаблицаФормПользователиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТаблицаФормПользователи.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	УдалитьНаСервере("ТаблицаФормПользователи", ТекСтрока.ИмяФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаДоступныхФорм1

&НаКлиенте
Процедура ТаблицаДоступныхФорм1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТаблицаДоступныхФорм1.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	ДобавитьНаСервере("ТаблицаФормПодразделения", ТекСтрока.ИмяФормы, ТекСтрока.ПредставлениеФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаФормПодразделения

&НаКлиенте
Процедура ТаблицаФормПодразделенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТаблицаФормПодразделения.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	УдалитьНаСервере("ТаблицаФормПодразделения", ТекСтрока.ИмяФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаДоступныхФорм

&НаКлиенте
Процедура ТаблицаДоступныхФормВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТаблицаДоступныхФорм.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	ДобавитьНаСервере("ТаблицаФормОбщие", ТекСтрока.ИмяФормы, ТекСтрока.ПредставлениеФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаФормОбщие

&НаКлиенте
Процедура ТаблицаФормОбщиеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТаблицаФормОбщие.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	УдалитьНаСервере("ТаблицаФормОбщие", ТекСтрока.ИмяФормы);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСкрытыхФормПодразделения

&НаКлиенте
Процедура ТаблицаСкрытыхФормПодразделенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТаблицаСкрытыхФормПодразделения.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	УдалитьНаСервере("ТаблицаСкрытыхФормПодразделения", ТекСтрока.ИмяФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСкрытыхФормПользователи

&НаКлиенте
Процедура ТаблицаСкрытыхФормПользователиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекСтрока = Элементы.ТаблицаСкрытыхФормПользователи.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	УдалитьНаСервере("ТаблицаСкрытыхФормПользователи", ТекСтрока.ИмяФормы);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоУмолчаниюПодразделение(Команда)
	ЗаполнитьПоУмолчаниюПодразделениеНаСервере();
	Этаформа.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПодразделение(Команда)
	ТекСтрока = Элементы.ТаблицаДоступныхФорм1.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	Если Команда.Имя = "ДобавитьПодразделение" Тогда
		ДобавитьНаСервере("ТаблицаФормПодразделения", ТекСтрока.ИмяФормы, ТекСтрока.ПредставлениеФормы);
	Иначе
		ДобавитьНаСервере("ТаблицаСкрытыхФормПодразделения", ТекСтрока.ИмяФормы, ТекСтрока.ПредставлениеФормы);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПодразделение(Команда)
	Если Команда.Имя = "УдалитьПодразделение" Тогда
		ТекСтрока = Элементы.ТаблицаФормПодразделения.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		УдалитьНаСервере("ТаблицаФормПодразделения", ТекСтрока.ИмяФормы);
	Иначе
		ТекСтрока = Элементы.ТаблицаСкрытыхФормПодразделения.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		УдалитьНаСервере("ТаблицаСкрытыхФормПодразделения", ТекСтрока.ИмяФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПользователь(Команда)
	ТекСтрока = Элементы.ТаблицаДоступныхФорм2.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	Если Команда.Имя = "ДобавитьПользователь" Тогда
		ДобавитьНаСервере("ТаблицаФормПользователи", ТекСтрока.ИмяФормы, ТекСтрока.ПредставлениеФормы);
	Иначе
		ДобавитьНаСервере("ТаблицаСкрытыхФормПользователи", ТекСтрока.ИмяФормы, ТекСтрока.ПредставлениеФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПользователь(Команда)
	Если Команда.Имя = "УдалитьПользователь" Тогда
		ТекСтрока = Элементы.ТаблицаФормПользователи.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		УдалитьНаСервере("ТаблицаФормПользователи", ТекСтрока.ИмяФормы);
	Иначе
		ТекСтрока = Элементы.ТаблицаСкрытыхФормПользователи.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		УдалитьНаСервере("ТаблицаСкрытыхФормПользователи", ТекСтрока.ИмяФормы);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбщее(Команда)
	ТекСтрока = Элементы.ТаблицаДоступныхФорм.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
	Если Команда.Имя = "ДобавитьОбщее" Тогда
		ДобавитьНаСервере("ТаблицаФормОбщие", ТекСтрока.ИмяФормы, ТекСтрока.ПредставлениеФормы);
	Иначе
		ДобавитьНаСервере("ТаблицаСкрытыхФормОбщие", ТекСтрока.ИмяФормы, ТекСтрока.ПредставлениеФормы);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОбщее(Команда)
	
	Если Команда.Имя = "УдалитьОбщее" Тогда
		ТекСтрока = Элементы.ТаблицаФормОбщие.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		УдалитьНаСервере("ТаблицаФормОбщие", ТекСтрока.ИмяФормы);
	Иначе
		ТекСтрока = Элементы.ТаблицаСкрытыхФормОбщие.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		УдалитьНаСервере("ТаблицаСкрытыхФормОбщие", ТекСтрока.ИмяФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	ЗаписатьИзменения();
	ЗаполнитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура Сдвинуть(Команда)
	ЭтаФорма.Модифицированность = Истина;
	Если Команда.Имя = "СдвинутьВверхОщее" Тогда
		ТекСтрока = Элементы.ТаблицаФормОбщие.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаФормОбщие.Индекс(ТекСтрока);
		Если ИндексСтроки = 0 Тогда
			ПересчитатьПорядок("ТаблицаФормОбщие", ИндексСтроки, ТаблицаФормОбщие.Количество()-1);
		Иначе	
			ПересчитатьПорядок("ТаблицаФормОбщие", ИндексСтроки, -1);
		КонецЕсли;	
	КонецЕсли;	
	
	Если Команда.Имя = "СдвинутьВверхОбщееСкрытые" Тогда
		ТекСтрока = Элементы.ТаблицаСкрытыхФормОбщие.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаСкрытыхФормОбщие.Индекс(ТекСтрока);
		Если ИндексСтроки = 0 Тогда
			ПересчитатьПорядок("ТаблицаСкрытыхФормОбщие", ИндексСтроки, ТаблицаСкрытыхФормОбщие.Количество()-1);
		Иначе	
			ПересчитатьПорядок("ТаблицаСкрытыхФормОбщие", ИндексСтроки, -1);
		КонецЕсли;	
	КонецЕсли;
	
	Если Команда.Имя = "СдвинутьВнизОбщее" Тогда
		ТекСтрока = Элементы.ТаблицаФормОбщие.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаФормОбщие.Индекс(ТекСтрока);
		КоличествоСтрок = ТаблицаФормОбщие.Количество();
		Если ИндексСтроки = КоличествоСтрок-1 Тогда
			ПересчитатьПорядок("ТаблицаФормОбщие", ИндексСтроки, -(КоличествоСтрок-1));
		Иначе	
			ПересчитатьПорядок("ТаблицаФормОбщие", ИндексСтроки, 1);
		КонецЕсли;
	КонецЕсли;
	
	Если Команда.Имя = "СдвинутьВнизОбщееСкрытые" Тогда
		ТекСтрока = Элементы.ТаблицаСкрытыхФормОбщие.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаСкрытыхФормОбщие.Индекс(ТекСтрока);
		КоличествоСтрок = ТаблицаСкрытыхФормОбщие.Количество();
		Если ИндексСтроки = КоличествоСтрок-1 Тогда
			ПересчитатьПорядок("ТаблицаСкрытыхФормОбщие", ИндексСтроки, -(КоличествоСтрок-1));
		Иначе	
			ПересчитатьПорядок("ТаблицаСкрытыхФормОбщие", ИндексСтроки, 1);
		КонецЕсли;
	КонецЕсли;
	
	Если Команда.Имя = "СдвинутьВверхПользователи" Тогда
		ТекСтрока = Элементы.ТаблицаФормПользователи.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаФормПользователи.Индекс(ТекСтрока);
		Если ИндексСтроки = 0 Тогда
			ПересчитатьПорядок("ТаблицаФормПользователи", ИндексСтроки, ТаблицаФормПользователи.Количество()-1);
		Иначе	
			ПересчитатьПорядок("ТаблицаФормПользователи", ИндексСтроки, -1);
		КонецЕсли;	
	КонецЕсли;	
	
	Если Команда.Имя = "СдвинутьВверхПользователиСкрытые" Тогда
		ТекСтрока = Элементы.ТаблицаСкрытыхФормПользователи.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаСкрытыхФормПользователи.Индекс(ТекСтрока);
		Если ИндексСтроки = 0 Тогда
			ПересчитатьПорядок("ТаблицаСкрытыхФормПользователи", ИндексСтроки, ТаблицаСкрытыхФормПользователи.Количество()-1);
		Иначе	
			ПересчитатьПорядок("ТаблицаСкрытыхФормПользователи", ИндексСтроки, -1);
		КонецЕсли;	
	КонецЕсли;
	
	Если Команда.Имя = "СдвинутьВнизПользователи" Тогда
		ТекСтрока = Элементы.ТаблицаФормПользователи.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаФормПользователи.Индекс(ТекСтрока);
		КоличествоСтрок = ТаблицаФормПользователи.Количество();
		Если ИндексСтроки = КоличествоСтрок-1 Тогда
			ПересчитатьПорядок("ТаблицаФормПользователи", ИндексСтроки, -(КоличествоСтрок-1));
		Иначе	
			ПересчитатьПорядок("ТаблицаФормПользователи", ИндексСтроки, 1);
		КонецЕсли;
	КонецЕсли;
	
	Если Команда.Имя = "СдвинутьВнизПользователиСкрытые" Тогда
		ТекСтрока = Элементы.ТаблицаСкрытыхФормПользователи.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаСкрытыхФормПользователи.Индекс(ТекСтрока);
		КоличествоСтрок = ТаблицаСкрытыхФормПользователи.Количество();
		Если ИндексСтроки = КоличествоСтрок-1 Тогда
			ПересчитатьПорядок("ТаблицаСкрытыхФормПользователи", ИндексСтроки, -(КоличествоСтрок-1));
		Иначе	
			ПересчитатьПорядок("ТаблицаСкрытыхФормПользователи", ИндексСтроки, 1);
		КонецЕсли;
	КонецЕсли;

	Если Команда.Имя = "СдвинутьВверхПодразделения" Тогда
		ТекСтрока = Элементы.ТаблицаФормПодразделения.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаФормПодразделения.Индекс(ТекСтрока);
		Если ИндексСтроки = 0 Тогда
			ПересчитатьПорядок("ТаблицаФормПодразделения", ИндексСтроки, ТаблицаФормПодразделения.Количество()-1);
		Иначе	
			ПересчитатьПорядок("ТаблицаФормПодразделения", ИндексСтроки, -1);
		КонецЕсли;	
	КонецЕсли;	
	
	Если Команда.Имя = "СдвинутьВверхПодразделенияСкрытые" Тогда
		ТекСтрока = Элементы.ТаблицаСкрытыхФормПодразделения.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаСкрытыхФормПодразделения.Индекс(ТекСтрока);
		Если ИндексСтроки = 0 Тогда
			ПересчитатьПорядок("ТаблицаСкрытыхФормПодразделения", ИндексСтроки, ТаблицаСкрытыхФормПодразделения.Количество()-1);
		Иначе	
			ПересчитатьПорядок("ТаблицаСкрытыхФормПодразделения", ИндексСтроки, -1);
		КонецЕсли;	
	КонецЕсли;
	
	Если Команда.Имя = "СдвинутьВнизПодразделения" Тогда
		ТекСтрока = Элементы.ТаблицаФормПодразделения.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаФормПодразделения.Индекс(ТекСтрока);
		КоличествоСтрок = ТаблицаФормПодразделения.Количество();
		Если ИндексСтроки = КоличествоСтрок-1 Тогда
			ПересчитатьПорядок("ТаблицаФормПодразделения", ИндексСтроки, -(КоличествоСтрок-1));
		Иначе	
			ПересчитатьПорядок("ТаблицаФормПодразделения", ИндексСтроки, 1);
		КонецЕсли;
	КонецЕсли;
	
	Если Команда.Имя = "СдвинутьВнизПодразделенияСкрытые" Тогда
		ТекСтрока = Элементы.ТаблицаСкрытыхФормПодразделения.ТекущиеДанные;
		Если ТекСтрока = Неопределено Тогда Возврат КонецЕсли;
		ИндексСтроки = ТаблицаСкрытыхФормПодразделения.Индекс(ТекСтрока);
		КоличествоСтрок = ТаблицаСкрытыхФормПодразделения.Количество();
		Если ИндексСтроки = КоличествоСтрок-1 Тогда
			ПересчитатьПорядок("ТаблицаСкрытыхФормПодразделения", ИндексСтроки, -(КоличествоСтрок-1));
		Иначе	
			ПересчитатьПорядок("ТаблицаСкрытыхФормПодразделения", ИндексСтроки, 1);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУмолчаниюОбщие(Команда)
	ЗаполнитьПоУмолчаниюОбщиеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУмолчаниюПользователь(Команда)
	ЗаполнитьПоУмолчаниюПользовательНаСервере();
	Этаформа.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЛоготип(Команда)
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(
			Новый ОписаниеОповещения(
				"ЗагрузитьЛоготипПродолжение",
				ЭтотОбъект,
				Новый Структура),
			НСтр("ru='Для продолжения необходимо установить расширение для работы с файлами.';en='Continue, install the file operation extension.'"));
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЛоготипПоУмолчанию(Команда)
	УстановитьЛоготипПоУмолчаниюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЛоготип(Команда)
	ОчиститьЛоготипНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьиЗакрыть(Команда)
	ЗаписатьИзменения();
	CRM_РабочийСтолКлиент.ПереинициализироватьРабочийСтолКлиент();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Справка(Команда)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("УниверсальныйРабочийСтол"));
КонецПроцедуры

&НаКлиенте
Процедура ОбщиеНастройки(Команда)
	ИзменитьСтраницуНаСервере("ГруппаОбщие");
	ЭтотОбъект.Заголовок = НСтр("ru = 'Настройка рабочего стола: общие настройки'");
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПодразделения(Команда)
	ИзменитьСтраницуНаСервере("ГруппаПодразделения");
	ЭтотОбъект.Заголовок = "Настройка рабочего стола: "+Подразделение;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПользователей(Команда)
	ИзменитьСтраницуНаСервере("ГруппаПользователи");
	ЭтотОбъект.Заголовок = "Настройка рабочего стола: "+Пользователь;
КонецПроцедуры

&НаКлиенте
Процедура ВсеНастройки(Команда)
	ИзменитьСтраницуНаСервере("ГруппаНастройкиОткрытия");
	ЭтотОбъект.Заголовок = "Настройка рабочего стола: все настройки";
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПоУмолчаниюПодразделениеНаСервере()
	СписокФорм = CRM_РабочийСтолСервер.ПолучитьСписокДоступныхФорм();
	ТаблицаДоступныхФормПодразделение.Очистить();
	ТаблицаФормПодразделения.Очистить();
	ТаблицаСкрытыхФормПодразделения.Очистить();
	Для Каждого Значение Из СписокФорм Цикл
		Стр = ТаблицаДоступныхФормПодразделение.Добавить();
		Стр.ИмяФормы = Значение.Значение;
		Стр.ПредставлениеФормы = Значение.Представление;
	КонецЦикла;
	Для Каждого Строка Из ТаблицаФормОбщие Цикл
		Стр = ТаблицаФормПодразделения.Добавить();
		ЗаполнитьЗначенияСвойств(Стр, Строка);
		Стр.Объект = Подразделение;
		Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
	КонецЦикла;
	Для Каждого Строка Из ТаблицаСкрытыхФормОбщие Цикл
		Стр = ТаблицаСкрытыхФормПодразделения.Добавить();
		ЗаполнитьЗначенияСвойств(Стр, Строка);
		Стр.Объект = Подразделение;
		Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
	КонецЦикла;	
	Для Каждого Строка Из ТаблицаФормПодразделения Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормПодразделение.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПодразделение.Удалить(ТаблицаДоступныхФормПодразделение.Индекс(СтрФорм[0]));
		КонецЕсли;
	КонецЦикла;
	Для Каждого Строка Из ТаблицаСкрытыхФормПодразделения Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормПодразделение.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПодразделение.Удалить(ТаблицаДоступныхФормПодразделение.Индекс(СтрФорм[0]));
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПересчитатьПорядок(ТаблицаФормы, Строка, Движение)
	Если ТаблицаФормы = "ТаблицаФормОбщие" Тогда
		ТаблицаФормыДляИзменения = ТаблицаФормОбщие;
	КонецЕсли;	
	Если ТаблицаФормы = "ТаблицаФормПодразделения" Тогда
		ТаблицаФормыДляИзменения = ТаблицаФормПодразделения;
	КонецЕсли;
	Если ТаблицаФормы = "ТаблицаФормПользователи" Тогда
		ТаблицаФормыДляИзменения = ТаблицаФормПользователи;
	КонецЕсли;
	Если ТаблицаФормы = "ТаблицаСкрытыхФормОбщие" Тогда
		ТаблицаФормыДляИзменения = ТаблицаСкрытыхФормОбщие;
	КонецЕсли;
	Если ТаблицаФормы = "ТаблицаСкрытыхФормПодразделения" Тогда
		ТаблицаФормыДляИзменения = ТаблицаСкрытыхФормПодразделения;
	КонецЕсли;
	Если ТаблицаФормы = "ТаблицаСкрытыхФормПользователи" Тогда
		ТаблицаФормыДляИзменения = ТаблицаСкрытыхФормПользователи;
	КонецЕсли;
	ТаблицаФормыДляИзменения.Сдвинуть(Строка, Движение);
	Для Каждого СтрокаТЗ Из ТаблицаФормыДляИзменения Цикл
		СтрокаТЗ.Порядок = ТаблицаФормыДляИзменения.Индекс(СтрокаТЗ)+1;
		//СтруктураПоиска = Новый Структура("Объект, ИмяФормы", СтрокаТЗ.Объект, СтрокаТЗ.ИмяФормы);
		//СтрокиРегистра = ТаблицаФормРегистр.НайтиСтроки(СтруктураПоиска);
		//СтрокиРегистра[0].Порядок = СтрокаТЗ.Порядок;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменения()
	
	Набор = РегистрыСведений.CRM_НастройкиРабочегоСтола.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить("Общие настройки");
	Набор.Прочитать();
	Набор.Очистить();
	Набор.Загрузить(ДанныеФормыВЗначение(ТаблицаФормОбщие, Тип("ТаблицаЗначений")));
	Для Каждого СтрокаСкрытые Из ТаблицаСкрытыхФормОбщие Цикл
		Стр = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Стр, СтрокаСкрытые);
	КонецЦикла;	
	Набор.Записать(Истина);
	
	Набор = РегистрыСведений.CRM_НастройкиРабочегоСтола.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(тмпПользователь);
	Набор.Прочитать();
	Набор.Очистить();
	Если ИндивидуальныеНастройкиПользователь Тогда
		Набор.Загрузить(ДанныеФормыВЗначение(ТаблицаФормПользователи, Тип("ТаблицаЗначений")));
		Для Каждого СтрокаСкрытые Из ТаблицаСкрытыхФормПользователи Цикл
			Стр = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, СтрокаСкрытые);
		КонецЦикла;	
	КонецЕсли;
	Набор.Записать(Истина);

	Набор = РегистрыСведений.CRM_НастройкиРабочегоСтола.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(тмпПодразделение);
	Набор.Прочитать();
	Набор.Очистить();
	Если ИндивидуальныеНастройкиПодразделение Тогда
		Набор.Загрузить(ДанныеФормыВЗначение(ТаблицаФормПодразделения, Тип("ТаблицаЗначений")));
		Для Каждого СтрокаСкрытые Из ТаблицаСкрытыхФормПодразделения Цикл
			Стр = Набор.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, СтрокаСкрытые);
		КонецЦикла;
	КонецЕсли;
	Набор.Записать(Истина);

	
	КартинкаЛоготипа = ПолучитьИзВременногоХранилища(АдресХранилищаКартинки);
	ХранилищеКартинки = Новый ХранилищеЗначения(КартинкаЛоготипа);
	Константы.CRM_ЛоготипРабочегоСтола.Установить(ХранилищеКартинки);
	
	Набор = РегистрыСведений.CRM_НастройкиОткрытияРабочегоСтола.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить("Общие настройки");
	Набор.Прочитать();
	Набор.Очистить();
	Запись = Набор.Добавить();
	Запись.Объект = "Общие настройки";
	Запись.БлокироватьИнтерфейс = БлокироватьИнтерфейсОбщие;
	Запись.ИзменятьРежимЗапуска = ИзменятьРежимЗапускаОбщие;
	Запись.ИзменятьСоставРабочегоСтола = ИзменятьСоставРабочегоСтолаОбщие;
	Запись.ОкрыватьРабочийСтол = ОкрыватьРабочийСтолОбщие;
	Набор.Записать(Истина);
	
	
	Набор = РегистрыСведений.CRM_НастройкиОткрытияРабочегоСтола.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(тмпПользователь);
	Набор.Прочитать();
	Набор.Очистить();
	Если ИндивидуальныеНастройкиПользователь Тогда	
		Запись = Набор.Добавить();
		Запись.Объект = тмпПользователь;
		Запись.БлокироватьИнтерфейс = БлокироватьИнтерфейсПользователь;
		Запись.ИзменятьРежимЗапуска = ИзменятьРежимЗапускаПользователь;
		Запись.ИзменятьСоставРабочегоСтола = ИзменятьСоставРабочегоСтолаПользователь;
		Запись.ОкрыватьРабочийСтол = ОкрыватьРабочийСтолПользователь;
		Запись.ИндивидуальныеНастройки = ИндивидуальныеНастройкиПользователь;
	КонецЕсли;
	Набор.Записать(Истина);
	
	
	Набор = РегистрыСведений.CRM_НастройкиОткрытияРабочегоСтола.СоздатьНаборЗаписей();
	Набор.Отбор.Объект.Установить(тмпПодразделение);
	Набор.Прочитать();
	Набор.Очистить();
	Если ИндивидуальныеНастройкиПодразделение Тогда	
		Запись = Набор.Добавить();
		Запись.Объект = тмпПодразделение;
		Запись.БлокироватьИнтерфейс = БлокироватьИнтерфейсПодразделение;
		Запись.ИзменятьРежимЗапуска = ИзменятьРежимЗапускаПодразделение;
		Запись.ИзменятьСоставРабочегоСтола = ИзменятьСоставРабочегоСтолаПодразделение;
		Запись.ОкрыватьРабочийСтол = ОкрыватьРабочийСтолПодразделение;
		Запись.ИндивидуальныеНастройки = ИндивидуальныеНастройкиПодразделение;
	КонецЕсли;
	Набор.Записать(Истина);
	
	ЭтаФорма.Модифицированность = Ложь;	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьНастройки(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзменения();
		CRM_РабочийСтолКлиент.ПереинициализироватьРабочийСтолКлиент();
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда	
		ЭтаФорма.Модифицированность = Ложь;	
		Закрыть();
	Иначе	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуПодразделение()
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиОткрытияРабочегоСтола.ОкрыватьРабочийСтол КАК ОкрыватьРабочийСтол,
	|	CRM_НастройкиОткрытияРабочегоСтола.БлокироватьИнтерфейс КАК БлокироватьИнтерфейс,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьСоставРабочегоСтола КАК ИзменятьСоставРабочегоСтола,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьРежимЗапуска КАК ИзменятьРежимЗапуска
	|ИЗ
	|	РегистрСведений.CRM_НастройкиОткрытияРабочегоСтола КАК CRM_НастройкиОткрытияРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиОткрытияРабочегоСтола.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Подразделение);
	ТаблицаНастроек = Запрос.Выполнить().Выгрузить();
	Если ТаблицаНастроек.Количество() > 0 Тогда
		ОкрыватьРабочийСтолПодразделение = ТаблицаНастроек[0].ОкрыватьРабочийСтол;
		БлокироватьИнтерфейсПодразделение = ТаблицаНастроек[0].БлокироватьИнтерфейс;
		ИзменятьСоставРабочегоСтолаПодразделение = ТаблицаНастроек[0].ИзменятьСоставРабочегоСтола;
		ИзменятьРежимЗапускаПодразделение = ТаблицаНастроек[0].ИзменятьРежимЗапуска;
		ИндивидуальныеНастройкиПодразделение = Истина;
	Иначе
		ОкрыватьРабочийСтолПодразделение = Ложь;
		БлокироватьИнтерфейсПодразделение = Ложь;
		ИзменятьСоставРабочегоСтолаПодразделение = Ложь;
		ИзменятьРежимЗапускаПодразделение = Ложь;
		ИндивидуальныеНастройкиПодразделение = Ложь;	
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиОткрытияРабочегоСтола.ОкрыватьРабочийСтол КАК ОкрыватьРабочийСтол,
	|	CRM_НастройкиОткрытияРабочегоСтола.БлокироватьИнтерфейс КАК БлокироватьИнтерфейс,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьСоставРабочегоСтола КАК ИзменятьСоставРабочегоСтола,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьРежимЗапуска КАК ИзменятьРежимЗапуска
	|ИЗ
	|	РегистрСведений.CRM_НастройкиОткрытияРабочегоСтола КАК CRM_НастройкиОткрытияРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиОткрытияРабочегоСтола.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", "Общие настройки");
	ТаблицаНастроек = Запрос.Выполнить().Выгрузить();
	Если ТаблицаНастроек.Количество() > 0 Тогда
		ОкрыватьРабочийСтолОбщие = ТаблицаНастроек[0].ОкрыватьРабочийСтол;
		БлокироватьИнтерфейсОбщие = ТаблицаНастроек[0].БлокироватьИнтерфейс;
		ИзменятьСоставРабочегоСтолаОбщие = ТаблицаНастроек[0].ИзменятьСоставРабочегоСтола;
		ИзменятьРежимЗапускаОбщие = ТаблицаНастроек[0].ИзменятьРежимЗапуска;
		Если НЕ ИндивидуальныеНастройкиПодразделение Тогда
			ОкрыватьРабочийСтолПодразделение = ТаблицаНастроек[0].ОкрыватьРабочийСтол;
			БлокироватьИнтерфейсПодразделение = ТаблицаНастроек[0].БлокироватьИнтерфейс;
			ИзменятьСоставРабочегоСтолаПодразделение = ТаблицаНастроек[0].ИзменятьСоставРабочегоСтола;
			ИзменятьРежимЗапускаПодразделение = ТаблицаНастроек[0].ИзменятьРежимЗапуска;
		КонецЕсли;
	Иначе
		ОкрыватьРабочийСтолОбщие = Ложь;
		БлокироватьИнтерфейсОбщие = Ложь;
		ИзменятьСоставРабочегоСтолаОбщие = Ложь;
		ИзменятьРежимЗапускаОбщие = Ложь;
		ИндивидуальныеНастройкиОбщие = Ложь;	
	КонецЕсли;
	
	
	
	СписокФорм = CRM_РабочийСтолСервер.ПолучитьСписокДоступныхФорм();
	ТаблицаДоступныхФормПодразделение.Очистить();
	Для Каждого Значение Из СписокФорм Цикл
		Стр = ТаблицаДоступныхФормПодразделение.Добавить();
		Стр.ИмяФормы = Значение.Значение;
		Стр.ПредставлениеФормы = Значение.Представление;
	КонецЦикла;
		
	ЗАпрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиРабочегоСтола.ИмяФормы КАК ИмяФормы,
	|	CRM_НастройкиРабочегоСтола.Идентификатор КАК Идентификатор,
	|	CRM_НастройкиРабочегоСтола.Наименование КАК Наименование,
	|	CRM_НастройкиРабочегоСтола.Порядок КАК Порядок,
	|	CRM_НастройкиРабочегоСтола.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.CRM_НастройкиРабочегоСтола КАК CRM_НастройкиРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиРабочегоСтола.Объект = &Объект
	|	И НЕ CRM_НастройкиРабочегоСтола.Скрытая
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	ТаблицаФормПодразделения.Очистить();	
	Запрос.УстановитьПараметр("Объект", Подразделение);
	Если ИндивидуальныеНастройкиПодразделение Тогда
		ТаблицаФормПодразделения.Загрузить(Запрос.Выполнить().Выгрузить());
	Иначе
		Для Каждого Строка Из ТаблицаФормОбщие Цикл
			Стр = ТаблицаФормПодразделения.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, Строка);
			Стр.Объект = Подразделение;
			Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		КонецЦикла;
	КонецЕсли;	
	
	ЗАпрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиРабочегоСтола.ИмяФормы КАК ИмяФормы,
	|	CRM_НастройкиРабочегоСтола.Идентификатор КАК Идентификатор,
	|	CRM_НастройкиРабочегоСтола.Наименование КАК Наименование,
	|	CRM_НастройкиРабочегоСтола.Порядок КАК Порядок,
	|	CRM_НастройкиРабочегоСтола.Объект КАК Объект,
	|	CRM_НастройкиРабочегоСтола.Скрытая КАК Скрытая
	|ИЗ
	|	РегистрСведений.CRM_НастройкиРабочегоСтола КАК CRM_НастройкиРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиРабочегоСтола.Объект = &Объект
	|	И CRM_НастройкиРабочегоСтола.Скрытая
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	ТаблицаСкрытыхФормПодразделения.Очистить();	
	Запрос.УстановитьПараметр("Объект", Подразделение);
	Если ИндивидуальныеНастройкиПодразделение Тогда
		ТаблицаСкрытыхФормПодразделения.Загрузить(Запрос.Выполнить().Выгрузить());
	Иначе
		Для Каждого Строка Из ТаблицаСкрытыхФормОбщие Цикл
			Стр = ТаблицаСкрытыхФормПодразделения.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, Строка);
			Стр.Объект = Подразделение;
			Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		КонецЦикла;
	КонецЕсли;	
	
	Для Каждого Строка Из ТаблицаФормПодразделения Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормПодразделение.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПодразделение.Удалить(ТаблицаДоступныхФормПодразделение.Индекс(СтрФорм[0]));
		КонецЕсли;

	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаСкрытыхФормПодразделения Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормПодразделение.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПодразделение.Удалить(ТаблицаДоступныхФормПодразделение.Индекс(СтрФорм[0]));
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуПользователь()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиОткрытияРабочегоСтола.ОкрыватьРабочийСтол КАК ОкрыватьРабочийСтол,
	|	CRM_НастройкиОткрытияРабочегоСтола.БлокироватьИнтерфейс КАК БлокироватьИнтерфейс,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьСоставРабочегоСтола КАК ИзменятьСоставРабочегоСтола,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьРежимЗапуска КАК ИзменятьРежимЗапуска
	|ИЗ
	|	РегистрСведений.CRM_НастройкиОткрытияРабочегоСтола КАК CRM_НастройкиОткрытияРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиОткрытияРабочегоСтола.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Пользователь);
	ТаблицаНастроек = Запрос.Выполнить().Выгрузить();
	Если ТаблицаНастроек.Количество() > 0 Тогда
		ОкрыватьРабочийСтолПользователь = ТаблицаНастроек[0].ОкрыватьРабочийСтол;
		БлокироватьИнтерфейсПользователь = ТаблицаНастроек[0].БлокироватьИнтерфейс;
		ИзменятьСоставРабочегоСтолаПользователь = ТаблицаНастроек[0].ИзменятьСоставРабочегоСтола;
		ИзменятьРежимЗапускаПользователь = ТаблицаНастроек[0].ИзменятьРежимЗапуска;
		ИндивидуальныеНастройкиПользователь = Истина;
	Иначе
		ОкрыватьРабочийСтолПользователь = Ложь;
		БлокироватьИнтерфейсПользователь = Ложь;
		ИзменятьСоставРабочегоСтолаПользователь = Ложь;
		ИзменятьРежимЗапускаПользователь = Ложь;
		ИндивидуальныеНастройкиПользователь = Ложь;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиОткрытияРабочегоСтола.ОкрыватьРабочийСтол КАК ОкрыватьРабочийСтол,
	|	CRM_НастройкиОткрытияРабочегоСтола.БлокироватьИнтерфейс КАК БлокироватьИнтерфейс,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьСоставРабочегоСтола КАК ИзменятьСоставРабочегоСтола,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьРежимЗапуска КАК ИзменятьРежимЗапуска
	|ИЗ
	|	РегистрСведений.CRM_НастройкиОткрытияРабочегоСтола КАК CRM_НастройкиОткрытияРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиОткрытияРабочегоСтола.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Пользователь.Подразделение);
	ТаблицаНастроекПодразделение = Запрос.Выполнить().Выгрузить();
	Если ТаблицаНастроекПодразделение.Количество() > 0 Тогда
		Если НЕ ИндивидуальныеНастройкиПользователь Тогда
			ОкрыватьРабочийСтолПользователь = ТаблицаНастроекПодразделение[0].ОкрыватьРабочийСтол;
			БлокироватьИнтерфейсПользователь = ТаблицаНастроекПодразделение[0].БлокироватьИнтерфейс;
			ИзменятьСоставРабочегоСтолаПользователь = ТаблицаНастроекПодразделение[0].ИзменятьСоставРабочегоСтола;
			ИзменятьРежимЗапускаПользователь = ТаблицаНастроекПодразделение[0].ИзменятьРежимЗапуска;
		КонецЕсли;	
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиОткрытияРабочегоСтола.ОкрыватьРабочийСтол КАК ОкрыватьРабочийСтол,
	|	CRM_НастройкиОткрытияРабочегоСтола.БлокироватьИнтерфейс КАК БлокироватьИнтерфейс,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьСоставРабочегоСтола КАК ИзменятьСоставРабочегоСтола,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИзменятьРежимЗапуска КАК ИзменятьРежимЗапуска
	|ИЗ
	|	РегистрСведений.CRM_НастройкиОткрытияРабочегоСтола КАК CRM_НастройкиОткрытияРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиОткрытияРабочегоСтола.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", "Общие настройки");
	ТаблицаНастроек = Запрос.Выполнить().Выгрузить();
	Если ТаблицаНастроек.Количество() > 0 Тогда
		Если НЕ ИндивидуальныеНастройкиПользователь И ТаблицаНастроекПодразделение.Количество() = 0 Тогда
			ОкрыватьРабочийСтолПользователь = ТаблицаНастроек[0].ОкрыватьРабочийСтол;
			БлокироватьИнтерфейсПользователь = ТаблицаНастроек[0].БлокироватьИнтерфейс;
			ИзменятьСоставРабочегоСтолаПользователь = ТаблицаНастроек[0].ИзменятьСоставРабочегоСтола;
			ИзменятьРежимЗапускаПользователь = ТаблицаНастроек[0].ИзменятьРежимЗапуска;
		КонецЕсли;
	КонецЕсли;
	
	
	
	СписокФорм = CRM_РабочийСтолСервер.ПолучитьСписокДоступныхФорм();
	ТаблицаДоступныхФормПользователь.Очистить();
	Для Каждого Значение Из СписокФорм Цикл
		Стр = ТаблицаДоступныхФормПользователь.Добавить();
		Стр.ИмяФормы = Значение.Значение;
		Стр.ПредставлениеФормы = Значение.Представление;
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиОткрытияРабочегоСтола.Объект КАК Объект,
	|	CRM_НастройкиОткрытияРабочегоСтола.ИндивидуальныеНастройки КАК ИндивидуальныеНастройки
	|ИЗ
	|	РегистрСведений.CRM_НастройкиОткрытияРабочегоСтола КАК CRM_НастройкиОткрытияРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиОткрытияРабочегоСтола.ИндивидуальныеНастройки";
	ТабНастроек = Запрос.Выполнить().Выгрузить();
	НастройкиПользователя = ТабНастроек.Найти(Пользователь, "Объект");
	НастройкиПодразделения = ТабНастроек.Найти(Пользователь.Подразделение, "Объект");
	
	
	ЗАпрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиРабочегоСтола.ИмяФормы КАК ИмяФормы,
	|	CRM_НастройкиРабочегоСтола.Идентификатор КАК Идентификатор,
	|	CRM_НастройкиРабочегоСтола.Наименование КАК Наименование,
	|	CRM_НастройкиРабочегоСтола.Порядок КАК Порядок,
	|	CRM_НастройкиРабочегоСтола.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.CRM_НастройкиРабочегоСтола КАК CRM_НастройкиРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиРабочегоСтола.Объект = &Объект
	|	И НЕ CRM_НастройкиРабочегоСтола.Скрытая
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	Запрос.УстановитьПараметр("Объект", "Общие настройки");
	ТаблицаОбщие = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("Объект", Пользователь.Подразделение);
	ТаблицаПодразделения = Запрос.Выполнить().Выгрузить();
	ТаблицаФормПользователи.Очистить();
	Запрос.УстановитьПараметр("Объект", Пользователь);
	Если ИндивидуальныеНастройкиПользователь Тогда
		ТаблицаФормПользователи.Загрузить(Запрос.Выполнить().Выгрузить());
	Иначе
		Если НастройкиПодразделения <> Неопределено Тогда
			Для Каждого Строка Из ТаблицаПодразделения Цикл
				Стр = ТаблицаФормПользователи.Добавить();
				ЗаполнитьЗначенияСвойств(Стр, Строка);
				Стр.Объект = Пользователь;
				Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
			КонецЦикла;
		Иначе
			Для Каждого Строка Из ТаблицаОбщие Цикл
				Стр = ТаблицаФормПользователи.Добавить();
				ЗаполнитьЗначенияСвойств(Стр, Строка);
				Стр.Объект = Пользователь;
				Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ЗАпрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиРабочегоСтола.ИмяФормы КАК ИмяФормы,
	|	CRM_НастройкиРабочегоСтола.Идентификатор КАК Идентификатор,
	|	CRM_НастройкиРабочегоСтола.Наименование КАК Наименование,
	|	CRM_НастройкиРабочегоСтола.Порядок КАК Порядок,
	|	CRM_НастройкиРабочегоСтола.Объект КАК Объект,
	|	CRM_НастройкиРабочегоСтола.Скрытая КАК Скрытая
	|ИЗ
	|	РегистрСведений.CRM_НастройкиРабочегоСтола КАК CRM_НастройкиРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиРабочегоСтола.Объект = &Объект
	|	И CRM_НастройкиРабочегоСтола.Скрытая
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	Запрос.УстановитьПараметр("Объект", "Общие настройки");
	ТаблицаОбщие = Запрос.Выполнить().Выгрузить();
	
	
	Запрос.УстановитьПараметр("Объект", Пользователь.Подразделение);
	ТаблицаПодразделения = Запрос.Выполнить().Выгрузить();
	ТаблицаСкрытыхФормПользователи.Очистить();
	Запрос.УстановитьПараметр("Объект", Пользователь);
	Если ИндивидуальныеНастройкиПользователь Тогда
		ТаблицаСкрытыхФормПользователи.Загрузить(Запрос.Выполнить().Выгрузить());
	Иначе
		Если НастройкиПодразделения <> Неопределено Тогда
			Для Каждого Строка Из ТаблицаПодразделения Цикл
				Стр = ТаблицаСкрытыхФормПользователи.Добавить();
				ЗаполнитьЗначенияСвойств(Стр, Строка);
				Стр.Объект = Пользователь;
				Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
			КонецЦикла;
		Иначе
			Для Каждого Строка Из ТаблицаОбщие Цикл
				Стр = ТаблицаСкрытыхФормПользователи.Добавить();
				ЗаполнитьЗначенияСвойств(Стр, Строка);
				Стр.Объект = Пользователь;
				Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	
	Для Каждого Строка Из ТаблицаФормПользователи Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормПользователь.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПользователь.Удалить(ТаблицаДоступныхФормПользователь.Индекс(СтрФорм[0]));
		КонецЕсли;

	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаСкрытыхФормПользователи Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормПользователь.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПользователь.Удалить(ТаблицаДоступныхФормПользователь.Индекс(СтрФорм[0]));
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорму()
	СписокФорм = CRM_РабочийСтолСервер.ПолучитьСписокДоступныхФорм();
	ТаблицаДоступныхФормОбщие.Очистить();
	Для Каждого Значение Из СписокФорм Цикл
		Стр = ТаблицаДоступныхФормОбщие.Добавить();
		Стр.ИмяФормы = Значение.Значение;
		Стр.ПредставлениеФормы = Значение.Представление;
	КонецЦикла;
	ЗАпрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиРабочегоСтола.ИмяФормы КАК ИмяФормы,
	|	CRM_НастройкиРабочегоСтола.Идентификатор КАК Идентификатор,
	|	CRM_НастройкиРабочегоСтола.Наименование КАК Наименование,
	|	CRM_НастройкиРабочегоСтола.Порядок КАК Порядок,
	|	CRM_НастройкиРабочегоСтола.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.CRM_НастройкиРабочегоСтола КАК CRM_НастройкиРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиРабочегоСтола.Объект = &Объект
	|	И НЕ CRM_НастройкиРабочегоСтола.Скрытая
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	ТаблицаФормПодразделения.Очистить();	
	Запрос.УстановитьПараметр("Объект", "Общие настройки");
	ТаблицаФормОбщие.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого Строка Из ТаблицаФормОбщие Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормОбщие.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормОбщие.Удалить(ТаблицаДоступныхФормОбщие.Индекс(СтрФорм[0]));
		КонецЕсли;

	КонецЦикла;

	
	ЗАпрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ
	|	CRM_НастройкиРабочегоСтола.ИмяФормы КАК ИмяФормы,
	|	CRM_НастройкиРабочегоСтола.Идентификатор КАК Идентификатор,
	|	CRM_НастройкиРабочегоСтола.Наименование КАК Наименование,
	|	CRM_НастройкиРабочегоСтола.Порядок КАК Порядок,
	|	CRM_НастройкиРабочегоСтола.Объект КАК Объект,
	|	CRM_НастройкиРабочегоСтола.Скрытая КАК Скрытая
	|ИЗ
	|	РегистрСведений.CRM_НастройкиРабочегоСтола КАК CRM_НастройкиРабочегоСтола
	|ГДЕ
	|	CRM_НастройкиРабочегоСтола.Объект = &Объект
	|	И CRM_НастройкиРабочегоСтола.Скрытая
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	ТаблицаФормПодразделения.Очистить();	
	Запрос.УстановитьПараметр("Объект", "Общие настройки");
	ТаблицаСкрытыхФормОбщие.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого Строка Из ТаблицаСкрытыхФормОбщие Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормОбщие.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормОбщие.Удалить(ТаблицаДоступныхФормОбщие.Индекс(СтрФорм[0]));
		КонецЕсли;

	КонецЦикла;
	
	ЗаполнитьФормуПодразделение();
 	ЗаполнитьФормуПользователь();	
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	ПраваОграничены =  РольДоступна("CRM_НастройкаРабочегоСтола") или РольДоступна("ПолныеПрава");
	Элементы.ГруппаОбщие.Видимость = ПраваОграничены;
	Элементы.КнопкаГруппаОбщие.Видимость = ПраваОграничены;
	Элементы.ГруппаПодразделения.Видимость = ПраваОграничены;
	Элементы.КнопкаГруппаПодразделения.Видимость = ПраваОграничены;
	Элементы.ГруппаНастройкиОткрытия.Видимость = ПраваОграничены;
	Элементы.КнопкаГруппаНастройкиОткрытия.Видимость = ПраваОграничены;
	Элементы.Группа20.Видимость = ПраваОграничены;
	Элементы.Пользователь.Доступность = ПраваОграничены;
	
	Элементы.ОкрыватьРабочийСтолПользователь.Доступность =  ИзменятьРежимЗапускаПользователь или ПраваОграничены;
	Элементы.БлокироватьИнтерфейсПользователь.Доступность = ИзменятьРежимЗапускаПользователь или ПраваОграничены;
	
	Элементы.ОкрыватьРабочийСтолПользователь.Видимость =  ИндивидуальныеНастройкиПользователь;
	Элементы.БлокироватьИнтерфейсПользователь.Видимость = ИндивидуальныеНастройкиПользователь;
	
	Элементы.ИзменятьСоставРабочегоСтолаПользователь.Видимость = ПраваОграничены И ИндивидуальныеНастройкиПользователь;
	Элементы.ИзменятьРежимЗапускаПользователь.Видимость = ПраваОграничены И ИндивидуальныеНастройкиПользователь;	
	
	Элементы.ИндивидуальныеНастройкиПользователь.Видимость = ПраваОграничены или ИзменятьСоставРабочегоСтолаПользователь или ИзменятьРежимЗапускаПользователь;	
	
	Элементы.Группа4.Доступность = ИндивидуальныеНастройкиПользователь И (ИзменятьСоставРабочегоСтолаПользователь или ПраваОграничены);
	Элементы.Группа30.Доступность = ИндивидуальныеНастройкиПользователь И (ИзменятьСоставРабочегоСтолаПользователь или ПраваОграничены);
	Элементы.ТаблицаФормПользователи.Доступность = ИндивидуальныеНастройкиПользователь И (ИзменятьСоставРабочегоСтолаПользователь или ПраваОграничены);
	Элементы.ТаблицаСкрытыхФормПользователи.Доступность = ИндивидуальныеНастройкиПользователь И (ИзменятьСоставРабочегоСтолаПользователь или ПраваОграничены);
	Элементы.ТаблицаДоступныхФорм2.Доступность = Элементы.ТаблицаФормПользователи.Доступность;
	
	Элементы.ОкрыватьРабочийСтолПодразделение.Видимость =  ИндивидуальныеНастройкиПодразделение;
	Элементы.БлокироватьИнтерфейсПодразделение.Видимость = ИндивидуальныеНастройкиПодразделение;
	
	Элементы.ИзменятьСоставРабочегоСтолаПодразделение.Видимость = ИндивидуальныеНастройкиПодразделение;
	Элементы.ИзменятьРежимЗапускаПодразделение.Видимость = ИндивидуальныеНастройкиПодразделение;
	
	Элементы.Группа3.Доступность = ИндивидуальныеНастройкиПодразделение;
	Элементы.Группа24.Доступность = ИндивидуальныеНастройкиПодразделение;
	Элементы.ТаблицаФормПодразделения.Доступность = ИндивидуальныеНастройкиПодразделение;
	Элементы.ТаблицаСкрытыхФормПодразделения.Доступность = ИндивидуальныеНастройкиПодразделение;
	Элементы.ТаблицаДоступныхФорм1.Доступность = Элементы.ТаблицаФормПодразделения.Доступность;
	
	Элементы.БлокироватьИнтерфейсОбщие.Видимость = ОкрыватьРабочийСтолОбщие;
	Элементы.БлокироватьИнтерфейсПользователь.Видимость = ОкрыватьРабочийСтолПользователь И ИндивидуальныеНастройкиПользователь;
	Элементы.БлокироватьИнтерфейсПодразделение.Видимость = ОкрыватьРабочийСтолПодразделение И ИндивидуальныеНастройкиПодразделение;

	Элементы.ГруппаИнфоНадпись.Видимость = НЕ Элементы.ТаблицаФормПользователи.Доступность И НЕ ПраваОграничены;
	
		
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКнопок()
	Элементы.КнопкаДобавитьПодразделение.Доступность = НЕ Подразделение.Пустая();
	Элементы.КнопкаУдалитьПодразделение.Доступность = НЕ Подразделение.Пустая();
	Элементы.КнопкаДобавитьПользователь.Доступность = НЕ Пользователь.Пустая();
	Элементы.КнопкаУдалитьПользователь.Доступность = НЕ Пользователь.Пустая();
КонецПроцедуры	

&НаСервере
Процедура УдалитьНаСервере(Таблица, ИмяФормы)
	ЭтаФорма.Модифицированность = Истина;
	СтруктураОтбора = Новый Структура("ИмяФормы", ИмяФормы);
	Если Таблица = "ТаблицаФормОбщие" Тогда
		СтруктураОтбора.Вставить("Объект", "Общие настройки");
		Стр = ТаблицаФормОбщие.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			СтрДостуные = ТаблицаДоступныхФормОбщие.Добавить();
			СтрДостуные.ИмяФормы = Стр[0].ИмяФормы;
			СтрДостуные.ПредставлениеФормы = Стр[0].Наименование;
			ТаблицаФормОбщие.Удалить(ТаблицаФормОбщие.Индекс(Стр[0]));
		КонецЕсли;
	ИначеЕсли Таблица = "ТаблицаСкрытыхФормОбщие" Тогда
		СтруктураОтбора.Вставить("Объект", "Общие настройки");
		Стр = ТаблицаСкрытыхФормОбщие.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			СтрДостуные = ТаблицаДоступныхФормОбщие.Добавить();
			СтрДостуные.ИмяФормы = Стр[0].ИмяФормы;
			СтрДостуные.ПредставлениеФормы = Стр[0].Наименование;
			ТаблицаСкрытыхФормОбщие.Удалить(ТаблицаСкрытыхФормОбщие.Индекс(Стр[0]));
		КонецЕсли;	
	ИначеЕсли Таблица = "ТаблицаФормПодразделения" Тогда
		СтруктураОтбора.Вставить("Объект", Подразделение);
		Стр = ТаблицаФормПодразделения.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			СтрДостуные = ТаблицаДоступныхФормПодразделение.Добавить();
			СтрДостуные.ИмяФормы = Стр[0].ИмяФормы;
			СтрДостуные.ПредставлениеФормы = Стр[0].Наименование;
			ТаблицаФормПодразделения.Удалить(ТаблицаФормПодразделения.Индекс(Стр[0]));
		КонецЕсли;
	ИначеЕсли Таблица = "ТаблицаСкрытыхФормПодразделения" Тогда
		СтруктураОтбора.Вставить("Объект", Подразделение);
		Стр = ТаблицаСкрытыхФормПодразделения.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			СтрДостуные = ТаблицаДоступныхФормПодразделение.Добавить();
			СтрДостуные.ИмяФормы = Стр[0].ИмяФормы;
			СтрДостуные.ПредставлениеФормы = Стр[0].Наименование;
			ТаблицаСкрытыхФормПодразделения.Удалить(ТаблицаСкрытыхФормПодразделения.Индекс(Стр[0]));
		КонецЕсли;
	
	ИначеЕсли Таблица = "ТаблицаФормПользователи" Тогда
		СтруктураОтбора.Вставить("Объект", Пользователь);
		Стр = ТаблицаФормПользователи.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			СтрДостуные = ТаблицаДоступныхФормПользователь.Добавить();
			СтрДостуные.ИмяФормы = Стр[0].ИмяФормы;
			СтрДостуные.ПредставлениеФормы = Стр[0].Наименование;
			ТаблицаФормПользователи.Удалить(ТаблицаФормПользователи.Индекс(Стр[0]));
		КонецЕсли;
	ИначеЕсли Таблица = "ТаблицаСкрытыхФормПользователи" Тогда
		СтруктураОтбора.Вставить("Объект", Пользователь);
		Стр = ТаблицаСкрытыхФормПользователи.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			СтрДостуные = ТаблицаДоступныхФормПользователь.Добавить();
			СтрДостуные.ИмяФормы = Стр[0].ИмяФормы;
			СтрДостуные.ПредставлениеФормы = Стр[0].Наименование;
			ТаблицаСкрытыхФормПользователи.Удалить(ТаблицаСкрытыхФормПользователи.Индекс(Стр[0]));
		КонецЕсли;	
	КонецЕсли;
	Стр = ТаблицаФормРегистр.НайтиСтроки(СтруктураОтбора);
	Если Стр.Количество() > 0 Тогда
		ТаблицаФормРегистр.Удалить(ТаблицаФормРегистр.Индекс(Стр[0]));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьНаСервере(Таблица, ИмяФормы, Наименование)
	ЭтаФорма.Модифицированность = Истина;
	СтруктураОтбора = Новый Структура("ИмяФормы", ИмяФормы);
	Если Таблица = "ТаблицаФормОбщие" Тогда
		Стр = ТаблицаФормОбщие.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Форма """+Наименование+""" уже добавлена.";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;	
		Порядок = ?(ТаблицаФормОбщие.Количество() = 0 , 1, ТаблицаФормОбщие[ТаблицаФормОбщие.Количество()-1].Порядок + 1);
		Стр = ТаблицаФормОбщие.Добавить();
		Стр.ИмяФормы = ИмяФормы;
		Стр.Наименование = Наименование;
		Стр.Объект = "Общие настройки";
		Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		Стр.Порядок = Порядок;
		СтрФорм = ТаблицаДоступныхФормОбщие.НайтиСтроки(СтруктураОтбора);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормОбщие.Удалить(ТаблицаДоступныхФормОбщие.Индекс(СтрФорм[0]));
		КонецЕсли;
	ИначеЕсли Таблица = "ТаблицаСкрытыхФормОбщие" Тогда
		Стр = ТаблицаСкрытыхФормОбщие.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Форма """+Наименование+""" уже добавлена.";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;	
		Порядок = ?(ТаблицаСкрытыхФормОбщие.Количество() = 0 , 1, ТаблицаСкрытыхФормОбщие[ТаблицаСкрытыхФормОбщие.Количество()-1].Порядок + 1);
		Стр = ТаблицаСкрытыхФормОбщие.Добавить();
		Стр.ИмяФормы = ИмяФормы;
		Стр.Наименование = Наименование;
		Стр.Объект = "Общие настройки";
		Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		Стр.Порядок = Порядок;
		Стр.Скрытая = Истина;
		СтрФорм = ТаблицаДоступныхФормОбщие.НайтиСтроки(СтруктураОтбора);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормОбщие.Удалить(ТаблицаДоступныхФормОбщие.Индекс(СтрФорм[0]));
		КонецЕсли;	
	ИначеЕсли Таблица = "ТаблицаФормПодразделения" Тогда
		Стр = ТаблицаФормПодразделения.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Форма """+Наименование+""" уже добавлена.";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;	
		Порядок = ?(ТаблицаФормПодразделения.Количество() = 0 , 1, ТаблицаФормПодразделения[ТаблицаФормПодразделения.Количество()-1].Порядок + 1);
		Стр = ТаблицаФормПодразделения.Добавить();
		Стр.ИмяФормы = ИмяФормы;
		Стр.Наименование = Наименование;
		Стр.Объект = Подразделение;
		Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		Стр.Порядок = Порядок;	
		СтрФорм = ТаблицаДоступныхФормПодразделение.НайтиСтроки(СтруктураОтбора);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПодразделение.Удалить(ТаблицаДоступныхФормПодразделение.Индекс(СтрФорм[0]));
		КонецЕсли;
	ИначеЕсли Таблица = "ТаблицаСкрытыхФормПодразделения" Тогда
		Стр = ТаблицаСкрытыхФормПодразделения.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Форма """+Наименование+""" уже добавлена.";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;	
		Порядок = ?(ТаблицаСкрытыхФормПодразделения.Количество() = 0 , 1, ТаблицаСкрытыхФормПодразделения[ТаблицаСкрытыхФормПодразделения.Количество()-1].Порядок + 1);
		Стр = ТаблицаСкрытыхФормПодразделения.Добавить();
		Стр.ИмяФормы = ИмяФормы;
		Стр.Наименование = Наименование;
		Стр.Объект = Подразделение;
		Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		Стр.Порядок = Порядок;	
		Стр.Скрытая = Истина;
		СтрФорм = ТаблицаДоступныхФормПодразделение.НайтиСтроки(СтруктураОтбора);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПодразделение.Удалить(ТаблицаДоступныхФормПодразделение.Индекс(СтрФорм[0]));
		КонецЕсли;
	
	ИначеЕсли Таблица = "ТаблицаФормПользователи" Тогда
		Стр = ТаблицаФормПользователи.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Форма """+Наименование+""" уже добавлена.";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;	
		Порядок = ?(ТаблицаФормПользователи.Количество() = 0 , 1, ТаблицаФормПользователи[ТаблицаФормПользователи.Количество()-1].Порядок + 1);
		Стр = ТаблицаФормПользователи.Добавить();
		Стр.ИмяФормы = ИмяФормы;
		Стр.Наименование = Наименование;
		Стр.Объект = Пользователь;
		Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		Стр.Порядок = Порядок;	
		СтрФорм = ТаблицаДоступныхФормПользователь.НайтиСтроки(СтруктураОтбора);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПользователь.Удалить(ТаблицаДоступныхФормПользователь.Индекс(СтрФорм[0]));
		КонецЕсли;
	ИначеЕсли Таблица = "ТаблицаСкрытыхФормПользователи" Тогда
		Стр = ТаблицаСкрытыхФормПользователи.НайтиСтроки(СтруктураОтбора);
		Если Стр.Количество() > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Форма """+Наименование+""" уже добавлена.";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;	
		Порядок = ?(ТаблицаСкрытыхФормПользователи.Количество() = 0 , 1, ТаблицаСкрытыхФормПользователи[ТаблицаСкрытыхФормПользователи.Количество()-1].Порядок + 1);
		Стр = ТаблицаСкрытыхФормПользователи.Добавить();
		Стр.ИмяФормы = ИмяФормы;
		Стр.Наименование = Наименование;
		Стр.Объект = Пользователь;
		Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		Стр.Порядок = Порядок;	
		Стр.Скрытая = Истина;
		СтрФорм = ТаблицаДоступныхФормПользователь.НайтиСтроки(СтруктураОтбора);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПользователь.Удалить(ТаблицаДоступныхФормПользователь.Индекс(СтрФорм[0]));
		КонецЕсли;	
	КонецЕсли;
	СтрокаРегистр = ТаблицаФормРегистр.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаРегистр, Стр);
КонецПроцедуры	

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	
	
	тмпПодразделение = Подразделение;
	ЗаполнитьФормуПодразделение();
	УстановитьДоступностьКнопок();
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьНастройкиПодразделения(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзменения();
		ПодразделениеПриИзмененииНаСервере();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда	
		ЭтаФорма.Модифицированность = Ложь;
		ПодразделениеПриИзмененииНаСервере();
	Иначе	
		Подразделение = тмпПодразделение;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПользовательПриИзмененииНаСервере()
		
	тмпПользователь = Пользователь;	
	
 	ЗаполнитьФормуПользователь();	
	УстановитьДоступностьКнопок();
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьНастройкиПользователя(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИзменения();
		ПользовательПриИзмененииНаСервере();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ЭтаФорма.Модифицированность = Ложь;
		ПользовательПриИзмененииНаСервере();
	Иначе	
		Пользователь = тмпПользователь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоУмолчаниюПользовательНаСервере()
	СписокФорм = CRM_РабочийСтолСервер.ПолучитьСписокДоступныхФорм();
	ТаблицаДоступныхФормПользователь.Очистить();
	Для Каждого Значение Из СписокФорм Цикл
		Стр = ТаблицаДоступныхФормПользователь.Добавить();
		Стр.ИмяФормы = Значение.Значение;
		Стр.ПредставлениеФормы = Значение.Представление;
	КонецЦикла;	
	
	ТаблицаФормПользователи.Очистить();
	Если ТаблицаФормПодразделения.Количество()>0 Тогда
		Для Каждого Строка Из ТаблицаФормПодразделения Цикл
			Стр = ТаблицаФормПользователи.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, Строка);
			Стр.Объект = Пользователь;
			Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		КонецЦикла;
	Иначе
		Для Каждого Строка Из ТаблицаФормОбщие Цикл
			Стр = ТаблицаФормПользователи.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, Строка);
			Стр.Объект = Пользователь;
			Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		КонецЦикла;
	КонецЕсли;
	

	ТаблицаСкрытыхФормПользователи.Очистить();
	Если ТаблицаСкрытыхФормПодразделения.Количество()>0 Тогда
		Для Каждого Строка Из ТаблицаСкрытыхФормПодразделения Цикл
			Стр = ТаблицаСкрытыхФормПользователи.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, Строка);
			Стр.Объект = Пользователь;
			Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		КонецЦикла;
	Иначе
		Для Каждого Строка Из ТаблицаСкрытыхФормОбщие Цикл
			Стр = ТаблицаСкрытыхФормПользователи.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, Строка);
			Стр.Объект = Пользователь;
			Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		КонецЦикла;
	КонецЕсли;
	
	
	Для Каждого Строка Из ТаблицаФормПользователи Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормПользователь.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПользователь.Удалить(ТаблицаДоступныхФормПользователь.Индекс(СтрФорм[0]));
		КонецЕсли;

	КонецЦикла;
	
	Для Каждого Строка Из ТаблицаСкрытыхФормОбщие Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормПользователь.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормПользователь.Удалить(ТаблицаДоступныхФормПользователь.Индекс(СтрФорм[0]));
		КонецЕсли;

	КонецЦикла;
 		
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоУмолчаниюОбщиеНаСервере()
	СписокФорм = CRM_РабочийСтолСервер.ПолучитьСписокДоступныхФорм();
	СписокФормПоУмолчанию = CRM_РабочийСтолСервер.ПолучитьСписокФормПоУмолчанию();
	ТаблицаДоступныхФормОбщие.Очистить();
	ТаблицаСкрытыхФормОбщие.Очистить();
	Для Каждого Значение Из СписокФорм Цикл
		Стр = ТаблицаДоступныхФормОбщие.Добавить();
		Стр.ИмяФормы = Значение.Значение;
		Стр.ПредставлениеФормы = Значение.Представление;
	КонецЦикла;
	ТаблицаФормОбщие.Очистить();
	НомерПорядка = 1;
	Для Каждого Строка Из ТаблицаДоступныхФормОбщие Цикл
		Если СписокФормПоУмолчанию.НайтиПоЗначению(Строка.ИмяФормы) = Неопределено Тогда Продолжить КонецЕсли;
		Стр = ТаблицаФормОбщие.Добавить();
		ЗаполнитьЗначенияСвойств(Стр, Строка);
		Стр.Наименование = Строка.ПредставлениеФормы;
		Стр.Объект = "Общие настройки";
		Стр.Порядок = НомерПорядка;
		Стр.Идентификатор = Строка(Новый УникальныйИдентификатор);
		НомерПорядка = НомерПорядка +1;
	КонецЦикла;
	Для Каждого Строка Из ТаблицаФормОбщие Цикл
		СтруктураОтбораФорм = Новый Структура("ИмяФормы", Строка.ИмяФормы);
		СтрФорм = ТаблицаДоступныхФормОбщие.НайтиСтроки(СтруктураОтбораФорм);
		Если СтрФорм.Количество() > 0 Тогда
			ТаблицаДоступныхФормОбщие.Удалить(ТаблицаДоступныхФормОбщие.Индекс(СтрФорм[0]));
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЛоготипПродолжение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

	ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("ВопросЗагрузитьЛоготип", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещенияЗавершения, "Вы хотите загрузить новый логотип ?", РежимДиалогаВопрос.ДаНет);
    
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗагрузитьЛоготип(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьЛоготипЗавершение", ЭтаФорма);
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.Фильтр = CRM_ОбщегоНазначенияКлиент.ФильтрФайловИзображений();
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЛоготипЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		АдресХранилищаКартинки = Результат[0].Хранение;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьЛоготипПоУмолчаниюНаСервере()
	АдресХранилищаКартинки = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.CRM_ЛоготипРабочийСтол, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ОчиститьЛоготипНаСервере()
	АдресХранилищаКартинки = ПоместитьВоВременноеХранилище(Новый Картинка(), ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ИзменитьСтраницуНаСервере(ИмяСтраницы)
	Элементы["Кнопка"+Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя].ЦветФона = ЦветаСтиля.CRM_СерыйДляВторостепенныхФункций;
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[ИмяСтраницы];
	Элементы["Кнопка"+ИмяСтраницы].ЦветФона = ЦветаСтиля.CRM_ОсновнойГолубой;
КонецПроцедуры	

#КонецОбласти









