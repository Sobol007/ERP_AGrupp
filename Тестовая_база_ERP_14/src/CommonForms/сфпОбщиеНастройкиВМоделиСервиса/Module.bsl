
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	сфпИспользоватьСофтФон = Константы.сфпИспользоватьСофтФон.Получить();
	сфпПланНумерацииАвтоопределениеБизнесРегиона = Константы.сфпПланНумерацииАвтоопределениеБизнесРегиона.Получить();
		
	НастройкиТелефонии = Константы.сфпОбщиеНастройкиТелефонии.Получить();
	Если ЗначениеЗаполнено(НастройкиТелефонии) И ТипЗнч(НастройкиТелефонии) = Тип("Строка") Тогда
		НастройкиТелефонии = ЗначениеИзСтрокиВнутр(НастройкиТелефонии);
		Если ТипЗнч(НастройкиТелефонии) = Тип("Структура") Тогда
			НастройкиТелефонии.Свойство("АдресСервераОсновнойПубликации", ЭтаФорма.сфпАдресСервераПубликацииСервисовТелефонии);
			НастройкиТелефонии.Свойство("АдресРесурсаОсновнойПубликации", ЭтаФорма.сфпИмяПубликацииСервисовТелефонии);
		КонецЕсли;
	КонецЕсли;	
	
	сфпСтрокаАвторизацииVRDФайла = сфпСофтФонПроСервер.СлужебныйПользовательТелефонииАвторизацияВСтрокеПодключения();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события формы "ПриОткрытии"
//
Процедура ПриОткрытии(Отказ)
	
	сфпИспользоватьСофтФонПриИзменении();
	сфпПланНумерацииАвтоопределениеБизнесРегионаПриИзменении(Неопределено);
	
КонецПроцедуры // ПриОткрытии()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура сфпИспользоватьСофтФонПриИзменении(Элемент = Неопределено)
	
	Элементы.сфпПланНумерации.Доступность = сфпИспользоватьСофтФон;
	Элементы.сфпГруппаПубликацияСервисовТелефонии.Доступность = сфпИспользоватьСофтФон;
	
КонецПроцедуры

&НаКлиенте
Процедура сфпПланНумерацииАвтоопределениеБизнесРегионаПриИзменении(Элемент)
	Элементы.сфпНастройкаРасписанияЗагрузкаПланаНумерации.Видимость = сфпПланНумерацииАвтоопределениеБизнесРегиона;
КонецПроцедуры

&НаКлиенте
Процедура сфпНастройкаРасписанияЗагрузкаПланаНумерацииНажатие(Элемент)
	сфпСофтФонПроКлиент.ПоказатьРасписаниеРегламентногоЗадания("сфпЗагрузкаПланаНумерации");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьЗакрыть(Команда)
	
	ЗаписатьНаСервере();
	ОбновитьИнтерфейс();
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик команды формы "сфпКомандаОписаниеСофтФон"
//
Процедура сфпКомандаОписаниеСофтФон(Команда)
	ПерейтиПоНавигационнойСсылке(CRM_ОбщегоНазначенияСервер.ПолучитьСсылкуНаРазделСправки("ИнтеграцияСофтФон"));
КонецПроцедуры // сфпКомандаОписаниеСофтФон()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура сфпСохранитьНастройкиПубликацииСервисовТелефонии(АдресСервераПубликации, АдресРесурсаПубликации)
	
	Если Прав(АдресСервераПубликации, 1) = "/" Тогда
		АдресСервераПубликации = Лев(АдресСервераПубликации, СтрДлина(АдресСервераПубликации) - 1);
	КонецЕсли;
	Если Лев(АдресРесурсаПубликации, 1) = "/" Тогда
		АдресРесурсаПубликации = Сред(АдресРесурсаПубликации, 2);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(АдресСервераПубликации) И НЕ ЗначениеЗаполнено(АдресРесурсаПубликации) Тогда
		Настройки = Неопределено;
		
	Иначе
		Настройки = Новый Структура();
		Настройки.Вставить("АдресСервераОсновнойПубликации", АдресСервераПубликации);
		Настройки.Вставить("АдресРесурсаОсновнойПубликации", АдресРесурсаПубликации);
		
		//Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		//	Шаблон = "[АдресСервера]/[АдресПубликации]/[ОбластьДанных]/hs/[КорневойURLСервиса]";
		//Иначе
			Шаблон = "[АдресСервера]/[АдресПубликации]/hs/[КорневойURLСервиса]";
		//КонецЕсли;
		
		ПараметрыСтроки = Новый Структура();
		Если ЗначениеЗаполнено(АдресСервераПубликации) Тогда
			ПараметрыСтроки.Вставить("АдресСервера", АдресСервераПубликации);
		КонецЕсли;
		Если ЗначениеЗаполнено(АдресРесурсаПубликации) Тогда
			ПараметрыСтроки.Вставить("АдресПубликации", АдресРесурсаПубликации);
		КонецЕсли;
		
		НастройкиПубликации = Новый Соответствие();
		
		ПараметрыСтроки.Вставить("КорневойURLСервиса", Метаданные.HTTPСервисы.softphoneWebModuleApi.КорневойURL);
		ПолныйПутьПубликации = сфпОбщегоНазначенияКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, ПараметрыСтроки);
	    НастройкиПубликации.Вставить(Перечисления.сфпДоступныеАТС.СофтФонWebModule, Новый Структура("АдресРесурсаОсновнойПубликации", ПолныйПутьПубликации));
		
		ПараметрыСтроки.Вставить("КорневойURLСервиса", Метаданные.HTTPСервисы.softphoneMangoApi.КорневойURL);
		ПолныйПутьПубликации = сфпОбщегоНазначенияКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, ПараметрыСтроки);
		НастройкиПубликации.Вставить(Перечисления.сфпДоступныеАТС.MangoOffice, Новый Структура("АдресРесурсаОсновнойПубликации", ПолныйПутьПубликации));
		
		ПараметрыСтроки.Вставить("КорневойURLСервиса", Метаданные.HTTPСервисы.softphoneYandexTelephonyApi.КорневойURL);
		ПолныйПутьПубликации = сфпОбщегоНазначенияКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, ПараметрыСтроки);
		НастройкиПубликации.Вставить(Перечисления.сфпДоступныеАТС.Яндекс, Новый Структура("АдресРесурсаОсновнойПубликации", ПолныйПутьПубликации));
		
		КорневойURLСервиса = сфпСофтФонПроСервер.КорневойURLСервисаОсновнойПубликации(Перечисления.сфпДоступныеАТС.Билайн);
		ПараметрыСтроки.Вставить("КорневойURLСервиса", КорневойURLСервиса);
		ПолныйПутьПубликации = сфпОбщегоНазначенияКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, ПараметрыСтроки);
		НастройкиПубликации.Вставить(Перечисления.сфпДоступныеАТС.Билайн, Новый Структура("АдресРесурсаОсновнойПубликации", ПолныйПутьПубликации));
		
		КорневойURLСервиса = сфпСофтФонПроСервер.КорневойURLСервисаОсновнойПубликации(Перечисления.сфпДоступныеАТС.УниверсальныйItoolabs);
		ПараметрыСтроки.Вставить("КорневойURLСервиса", КорневойURLСервиса);
		ПолныйПутьПубликации = сфпОбщегоНазначенияКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, ПараметрыСтроки);
		НастройкиПубликации.Вставить(Перечисления.сфпДоступныеАТС.УниверсальныйItoolabs, Новый Структура("АдресРесурсаОсновнойПубликации", ПолныйПутьПубликации));
		
		КорневойURLСервиса = сфпСофтФонПроСервер.КорневойURLСервисаОсновнойПубликации(Перечисления.сфпДоступныеАТС.МТТ);
		ПараметрыСтроки.Вставить("КорневойURLСервиса", КорневойURLСервиса);
		ПолныйПутьПубликации = сфпОбщегоНазначенияКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, ПараметрыСтроки);
		НастройкиПубликации.Вставить(Перечисления.сфпДоступныеАТС.МТТ, Новый Структура("АдресРесурсаОсновнойПубликации", ПолныйПутьПубликации));
		
		Настройки.Вставить("НастройкиПубликации", НастройкиПубликации);		
	КонецЕсли;
	
	Константы.сфпОбщиеНастройкиТелефонии.Установить(ЗначениеВСтрокуВнутр(Настройки));
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()

	Если сфпИспользоватьСофтФон Тогда
		Константы.сфпИспользоватьСофтФон.Установить(Истина);
		Константы.сфпИспользуемаяВерсияСофтФон.Установить(Перечисления.сфпВерсииСофтФон.СофтФотPROSTO);
		Константы.сфпПланНумерацииАвтоопределениеБизнесРегиона.Установить(сфпПланНумерацииАвтоопределениеБизнесРегиона);
		
	Иначе
		Константы.сфпИспользоватьСофтФон.Установить(Ложь);
		Константы.сфпИспользуемаяВерсияСофтФон.Установить("");
		Константы.сфпПланНумерацииАвтоопределениеБизнесРегиона.Установить(Ложь);
	КонецЕсли;
		
	сфпСохранитьНастройкиПубликацииСервисовТелефонии(сфпАдресСервераПубликацииСервисовТелефонии, сфпИмяПубликацииСервисовТелефонии);

КонецПроцедуры

#КонецОбласти

