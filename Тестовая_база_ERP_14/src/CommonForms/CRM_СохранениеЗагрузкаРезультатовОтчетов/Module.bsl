
#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ CRM_ЛицензированиеСервер.ПодсистемаCRMИспользуется() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Невозможно открыть форму сохранения/загрузки результатов. Подсистема 1С:CRM не используется! (см. Персональные настройки пользователя)';en='Unable to open the form of saving / loading results. Subsystem 1C: CRM is not used! (see Personal settings of the user)'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПриСозданиеНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	Если Не Параметры.Свойство("Режим") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Режим = Параметры.Режим;
	Если Режим <> "Сохранение" И Режим <> "Загрузка" Тогда
		Режим = "Загрузка";
	КонецЕсли;
	
	Если Режим = "Сохранение" Тогда
		АдресДереваЗначенийВоВременномХранилище = Параметры.АдресДереваЗначенийВоВременномХранилище;
		Если Параметры.Свойство("НазваниеОтчета") Тогда
			НазваниеОтчета = Параметры.НазваниеОтчета;
		КонецЕсли;
		Если Параметры.Свойство("НазваниеВарианта") Тогда
			НазваниеВарианта = Параметры.НазваниеВарианта;
		КонецЕсли;
		
		ЗаполнитьДоступныеПоля();
		
		Заголовок = НСтр("ru='Сохранение результата отчета';en='Saving of result of report'");
		
		бУстановленаПометка = Ложь;
		МассивТипов = Новый Массив();
		МассивТипов.Добавить(Тип("СправочникСсылка.Партнеры"));
		МассивТипов.Добавить(Тип("СправочникСсылка.КонтактныеЛицаПартнеров"));
		МассивТипов.Добавить(Тип("СправочникСсылка.Пользователи"));
		
		Для Каждого ТипДанных Из МассивТипов Цикл
			Для Каждого СтрокаТаблицы Из ТаблицаДоступныеПоля Цикл
				Если СтрокаТаблицы.ТипЗначения.СодержитТип(ТипДанных) Тогда
					СтрокаТаблицы.Пометка = Истина;
					бУстановленаПометка = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если бУстановленаПометка Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не бУстановленаПометка И ТаблицаДоступныеПоля.Количество() > 0 Тогда
			ТаблицаДоступныеПоля[0].Пометка = Истина
		КонецЕсли;
		
		ЗаполнитьСписокРезультат();
		
		Если Не ПризнакНаименованиеИзмененоВручную Тогда
			Наименование = СформироватьНаименование(ЭтотОбъект);
		КонецЕсли;
		
		Элементы.Наименование.РежимВыбораИзСписка = Ложь;
	Иначе
		Список = CRM_ОбщегоНазначенияСервер.ПолучитьСписокВыбораНаименованийСохраненныхРезультатовОтчетов();
		Если Список.Количество() > 0 Тогда
			Наименование = Список[0].Значение;
		КонецЕсли;
		
		Заголовок = НСтр("ru='Загрузка результата отчета';en='Loading of result of report'");
		
		ЗаполнитьСписокПоНаименованию(ЭтотОбъект);
		
		Элементы.Наименование.РежимВыбораИзСписка = Истина;
	КонецЕсли;
	
	НастроитьВидимостьИДоступностьФормы();
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗакрытием".
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	Если Модифицированность Тогда
		Отказ = Истина;
		ОбратныйВызов = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОбратныйВызов, НСтр("ru='Данные были изменены. Сохранить данные?';en='Data has been changed. Save data?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;	
КонецПроцедуры // ПередЗакрытием()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Если Режим = "Сохранение" Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
	ПризнакНаименованиеИзмененоВручную = Истина;
	
	Если Режим = "Загрузка" Тогда
		ЗаполнитьСписокПоНаименованию(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.СписокВыбора.Очистить();
	Если Режим <> "Загрузка" Тогда 
		Возврат; 
	КонецЕсли;
	
	СохраненныйСписокВыбора = CRM_ОбщегоНазначенияСервер.ПолучитьСписокВыбораНаименованийСохраненныхРезультатовОтчетов();
	Для Каждого ЭлементСписка Из СохраненныйСписокВыбора Цикл
		Элемент.СписокВыбора.Добавить(ЭлементСписка.Значение);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаДоступныеПоля

&НаКлиенте
Процедура ТаблицаДоступныеПоляПометкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ТаблицаДоступныеПоля.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	ИдентификаторТекущихДанных = ТекущиеДанные.ПолучитьИдентификатор();
	
	бЕстьУстановленнаяПометка = Ложь;
	Для Каждого СтрокаТаблицы Из ТаблицаДоступныеПоля Цикл
		Если СтрокаТаблицы.ПолучитьИдентификатор() <> ИдентификаторТекущихДанных Тогда
			СтрокаТаблицы.Пометка = Ложь;
		КонецЕсли;
		Если СтрокаТаблицы.Пометка Тогда
			бЕстьУстановленнаяПометка = Истина;
		КонецЕсли;
	КонецЦикла;
	Если Не бЕстьУстановленнаяПометка Тогда
		ТекущиеДанные.Пометка = Истина;
	КонецЕсли;
	
	ЗаполнитьСписокРезультат();
	
	Если Не ПризнакНаименованиеИзмененоВручную Тогда
		Наименование = СформироватьНаименование(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	Если Режим = "Сохранение" Тогда
		Если ПроверитьСохранить() Тогда
			Модифицированность = Ложь;
			Закрыть();
		КонецЕсли;
	Иначе
		Модифицированность = Ложь;
		Закрыть(Наименование);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьНаименование(Форма)
	СтрокаНаименование = Форма.НазваниеОтчета;
	Если ЗначениеЗаполнено(Форма.НазваниеВарианта) Тогда
		СтрокаНаименование = СтрокаНаименование + ?(ЗначениеЗаполнено(СтрокаНаименование), " ", "") + "(" + Форма.НазваниеВарианта + ")";
	КонецЕсли;
	
	ВыбраннаяКолонка = Неопределено;
	Для Каждого СтрокаТаблицы Из Форма.ТаблицаДоступныеПоля Цикл
		Если СтрокаТаблицы.Пометка Тогда
			ВыбраннаяКолонка = СтрокаТаблицы.Представление;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ВыбраннаяКолонка) Тогда
		Если ЗначениеЗаполнено(СтрокаНаименование) Тогда
			СтрокаНаименование = СтрокаНаименование + "; ";
		КонецЕсли;
		
		СтрокаНаименование = СтрокаНаименование + НСтр("ru='Поле:';en='Field:'") + " " + ВыбраннаяКолонка;
	КонецЕсли;
	
	Возврат СтрокаНаименование;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокПоНаименованию(Форма)
	Форма.СписокРезультат.Очистить();
	
	СохраненныйСписок = CRM_ОбщегоНазначенияСервер.ПолучитьСохраненныйРезультатОтчетаПоНаименованию(Форма.Наименование);
	Если СохраненныйСписок <> Неопределено Тогда
		Для Каждого ЭлементСписка Из СохраненныйСписок Цикл
			Форма.СписокРезультат.Добавить(ЭлементСписка.Значение);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеПоля()
	ТаблицаДоступныеПоля.Очистить();
	
	Таблица = ПолучитьИзВременногоХранилища(АдресДереваЗначенийВоВременномХранилище);
	
	МассивДобавляемыеКолонки = Новый Массив();
	Для Каждого Колонка Из Таблица.Колонки Цикл
		НоваяСтрока = ТаблицаДоступныеПоля.Добавить();
		НоваяСтрока.Имя = Колонка.Имя;
		НоваяСтрока.Представление = Колонка.Заголовок;
		
		КолонкаОписаниеТипов = Новый ОписаниеТипов(Колонка.ТипЗначения,, "NULL");
		НоваяСтрока.ТипЗначения = КолонкаОписаниеТипов;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРезультат()
	CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ОбщаяФорма_CRM_ЗагрузкаРезультатовОтчетовВОтбор_ЗаполнитьСписокРезультат(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьИДоступностьФормы()
	Если Режим = "Сохранение" Тогда
		Элементы.СтраницаСохранение.Видимость = Истина;
		Элементы.СтраницаЗагрузка.Видимость = Ложь;
		
		Элементы.Наименование.КнопкаСпискаВыбора = Ложь;
	Иначе
		Элементы.СтраницаЗагрузка.Видимость = Истина;
		Элементы.СтраницаСохранение.Видимость = Ложь;
		
		Элементы.Наименование.КнопкаСпискаВыбора = Истина;
	КонецЕсли;
	
	Элементы.Наименование.РедактированиеТекста = (Режим = "Сохранение");
КонецПроцедуры

&НаКлиенте
Процедура СообщитьПользователю(ТекстСообщения, ИмяРеквизита = Неопределено)
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = ТекстСообщения;
	Если ИмяРеквизита <> Неопределено Тогда
		Сообщение.Поле = ИмяРеквизита;
	КонецЕсли;
	Сообщение.Сообщить();
КонецПроцедуры

&НаКлиенте
Функция ПроверитьСохранить()
	Если Режим = "Сохранение" Тогда
		Если Не ЗначениеЗаполнено(Наименование) Тогда
			СообщитьПользователю(НСтр("ru='Наименование должно быть заполнено!';en='The name should be fill!'"), "Наименование");
			Возврат Ложь;
		КонецЕсли;
		
		Если СписокРезультат.Количество() = 0 Тогда
			СообщитьПользователю(НСтр("ru='Список пустой!';en='List empty!'"), "СписокРезультат");
			Возврат Ложь;
		КонецЕсли;
		
		CRM_ОбщегоНазначенияСервер.СохранитьРезультатОтчетаВПараметрахСеанса(Наименование, СписокРезультат);
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
// Процедура - обработчик ответа на вопрос перед закрытием формы.
//
// Параметры:
//	Результат				- КодВозвратаДиалога	- Ответ на вопрос.
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров.
//
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
		Если ПроверитьСохранить() Тогда
			Модифицированность	= Ложь;
			Закрыть();
		КонецЕсли;
	Иначе
		Модифицированность	= Ложь;
		Закрыть();
    КонецЕсли;
КонецПроцедуры // ПередЗакрытиемЗавершение()

#КонецОбласти
