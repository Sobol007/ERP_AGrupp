
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнениеИсточниковЛидовПриОбновлении() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_УчетныеЗаписиМессенджеров.Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_УчетныеЗаписиМессенджеров КАК CRM_УчетныеЗаписиМессенджеров
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	УчетныеЗаписиЭлектроннойПочты.Ссылка
	                      |ИЗ
	                      |	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		УчетнаяЗапись = Выборка.Ссылка.ПолучитьОбъект();
		УчетнаяЗапись.CRM_ИсточникЛидов = Истина;
		УчетнаяЗапись.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнениеСостоянийЛидовПриОбновлении(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаписатьСостояниеЛида(Лид, Состояние = Неопределено, СконвертированВОбъект = Неопределено, ПричинаОтклонения = Неопределено, Комментарий="", СвязанСКлиентом = Неопределено) Экспорт
	
	Если Лид.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_ЖурналДокументов.CRM_Интерес
	                      |ИЗ
	                      |	РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
	                      |ГДЕ
	                      |	CRM_ЖурналДокументов.Объект = &Объект
	                      |	И CRM_ЖурналДокументов.CRM_Интерес <> ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)");
	
	Запрос.УстановитьПараметр("Объект", Лид);
	Если НЕ Запрос.Выполнить().Пустой() И (Состояние = Неопределено ИЛИ Состояние = Справочники.CRM_СостоянияЛидов.Новый) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Лид) <> Тип("ДокументСсылка.CRM_Заявка") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
			|	CRM_СостоянияЛидов.Лид КАК Лид
			|ИЗ
			|	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
			|ГДЕ
			|	ИСТИНА И 
			|	CRM_СостоянияЛидов.Состояние = &Состояние");
		Запрос.УстановитьПараметр("Состояние", Справочники.CRM_СостоянияЛидов.Новый);
		Если ТипЗнч(Лид) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
			ТекстУсловия = "CRM_СостоянияЛидов.Лид.АбонентКакСвязаться = &АбонентКакСвязаться И ";
			Запрос.УстановитьПараметр("АбонентКакСвязаться", Лид.АбонентКакСвязаться);
		ИначеЕсли ТипЗнч(Лид) = Тип("ДокументСсылка.CRM_СообщениеМессенджера") Тогда
			ТекстУсловия = "CRM_СостоянияЛидов.Лид.ID_Пользователя = &ID_Пользователя И ";
			Запрос.УстановитьПараметр("ID_Пользователя", Лид.ID_Пользователя);
		ИначеЕсли ТипЗнч(Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
			ТекстУсловия = "CRM_СостоянияЛидов.Лид В (&ЦепочкаПисем) И ";
			Запрос.УстановитьПараметр("ЦепочкаПисем", ПолучитьЦепочкуПисем(Лид));
		КонецЕсли;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИСТИНА И", ТекстУсловия);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МенеджерЗаписи = РегистрыСведений.CRM_СостоянияЛидов.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Лид = Выборка.Лид;
			МенеджерЗаписи.Удалить();
		КонецЦикла;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.CRM_СостоянияЛидов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Лид = Лид;
	МенеджерЗаписи.Прочитать();
	МенеджерЗаписи.Лид = Лид;
	Если СвязанСКлиентом <> Неопределено Тогда
		МенеджерЗаписи.СвязанСКлиентом = СвязанСКлиентом;
	КонецЕсли;
	Если ТипЗнч(Лид) = Тип("ДокументСсылка.CRM_Заявка") Тогда
		МенеджерЗаписи.ВидКанала = Перечисления.CRM_ВидыКаналовПоступленияОбращений.Заявка;
		МенеджерЗаписи.КаналПолучения = Лид.ИсточникПолучения;
	ИначеЕсли ТипЗнч(Лид) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		МенеджерЗаписи.ВидКанала = Перечисления.CRM_ВидыКаналовПоступленияОбращений.ТелефонныйЗвонок;
	ИначеЕсли ТипЗнч(Лид) = Тип("ДокументСсылка.CRM_СообщениеМессенджера") Тогда
		МенеджерЗаписи.ВидКанала = Перечисления.CRM_ВидыКаналовПоступленияОбращений.Диалоги;
		МенеджерЗаписи.КаналПолучения = Лид.УчетнаяЗапись;
	ИначеЕсли ТипЗнч(Лид) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		МенеджерЗаписи.ВидКанала = Перечисления.CRM_ВидыКаналовПоступленияОбращений.ЭлектроннаяПочта;
		МенеджерЗаписи.КаналПолучения = Лид.УчетнаяЗапись;
	КонецЕсли;
	МенеджерЗаписи.Состояние = ?(ЗначениеЗаполнено(Состояние), Состояние, Справочники.CRM_СостоянияЛидов.Новый);
	МенеджерЗаписи.ПричинаОтклонения = ПричинаОтклонения;
	МенеджерЗаписи.СконвертированВОбъект = СконвертированВОбъект;
	МенеджерЗаписи.Комментарий = Комментарий;
	МенеджерЗаписи.Записать();
КонецПроцедуры

Функция ПолучитьЦепочкуПисем(Письмо)
	ТекПисьмо = Письмо;
	СписокЦепочки = Новый СписокЗначений;
	Выборка = КритерииОтбора.СвязанныеДокументы.Найти(Письмо);
	Пока CRM_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("ВзаимодействиеОснование", ТекПисьмо.Метаданные()) И ЗначениеЗаполнено(ТекПисьмо.ВзаимодействиеОснование) Цикл
		СписокЦепочки.Добавить(ТекПисьмо.ВзаимодействиеОснование);
		ТекПисьмо = ТекПисьмо.ВзаимодействиеОснование;
	КонецЦикла;
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СвязанныеДокументы.Ссылка
	|ИЗ
	|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы";
	
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора",Письмо);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		СписокЦепочки.Добавить(Выборка.Ссылка);
	КонецЦикла;
	Возврат СписокЦепочки;
КонецФункции

Процедура УдалитьСостояниеЛида(Лид) Экспорт
	НаборЗаписей = РегистрыСведений.CRM_СостоянияЛидов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Лид.Установить(Лид);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество()>0 Тогда
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЕсли;
КонецПроцедуры
	
Функция СсылкаЯвляетсяЛидом(Ссылка, СУказаниемПричиныОтклонения = Ложь) Экспорт
	ЭтоЛид = Ложь;
	Если Метаданные.РегистрыСведений.CRM_СостоянияЛидов.Измерения.Лид.Тип.СодержитТип(ТипЗнч(Ссылка)) Тогда
		МетаданныеОбъекта = Ссылка.Метаданные();
		Если CRM_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("УчетнаяЗапись", МетаданныеОбъекта) Тогда
			Если Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов Тогда
				Если МетаданныеОбъекта.Имя = "CRM_СообщениеМессенджера" И Ссылка.ВидСообщения = Перечисления.CRM_ВидыСообщенияМессенджера.Исходящее Тогда
					ЭтоЛид = Ложь;
				Иначе	
					Если СУказаниемПричиныОтклонения Тогда
						ЭтоЛид = Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов И Ссылка.УчетнаяЗапись.CRM_УказыватьПричинуОтклонения;
					Иначе	
						ЭтоЛид = Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
				Если Ссылка.Входящий Тогда
					Если СУказаниемПричиныОтклонения Тогда
						ЭтоЛид = Константы.CRM_ОбязательноУказыватьПричинуПотериЗвонков.Получить();
					Иначе
						ЭтоЛид = Истина;
					КонецЕсли;
				Иначе	
					ЭтоЛид = Ложь;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.CRM_Заявка") Тогда
				Если СУказаниемПричиныОтклонения Тогда
					ЭтоЛид = Ссылка.ИсточникПолучения.CRM_ИсточникЛидов И Ссылка.ИсточникПолучения.CRM_УказыватьПричинуОтклонения;
				Иначе	
					ЭтоЛид = Ссылка.ИсточникПолучения.CRM_ИсточникЛидов;
				КонецЕсли;
			Иначе	
				ЭтоЛид = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат ЭтоЛид;
КонецФункции

Функция ЕстьЛидыВМассивеСсылок(МассивСсылок, СУказаниемПричиныОтклонения) Экспорт
	Для каждого Ссылка из МассивСсылок Цикл
		Если СсылкаЯвляетсяЛидом(Ссылка, СУказаниемПричиныОтклонения) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

Функция ЭтоТекущийЛид(Ссылка) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияЛидов.Состояние
	                      |ИЗ
	                      |	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |ГДЕ
	                      |	CRM_СостоянияЛидов.Лид = &Лид
	                      |	И CRM_СостоянияЛидов.Состояние В (&СостоянияТекущихЛидов)");
	Запрос.УстановитьПараметр("Лид", Ссылка);
	СостоянияТекущихЛидов = Новый СписокЗначений;
	СостоянияТекущихЛидов.Добавить(Справочники.CRM_СостоянияЛидов.Новый);
	Запрос.УстановитьПараметр("СостоянияТекущихЛидов", СостоянияТекущихЛидов);
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ПолучитьТекущееСостояниеЛида(Ссылка) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияЛидов.Состояние КАК Состояние,
	                      |	CRM_СостоянияЛидов.Комментарий КАК Комментарий,
	                      |	CRM_СостоянияЛидов.ПричинаОтклонения КАК ПричинаОтклонения,
	                      |	CRM_СостоянияЛидов.СконвертированВОбъект КАК СконвертированВОбъект
	                      |ИЗ
	                      |	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |ГДЕ
	                      |	CRM_СостоянияЛидов.Лид = &Лид");
	Запрос.УстановитьПараметр("Лид", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Состояние = Новый Структура;
		Состояние.Вставить("Состояние", Выборка.Состояние);
		Состояние.Вставить("СконвертированВОбъект", Выборка.СконвертированВОбъект);
		Состояние.Вставить("Комментарий", Выборка.Комментарий);
		Состояние.Вставить("ПричинаОтклонения", Выборка.ПричинаОтклонения);
		Возврат Состояние;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти
