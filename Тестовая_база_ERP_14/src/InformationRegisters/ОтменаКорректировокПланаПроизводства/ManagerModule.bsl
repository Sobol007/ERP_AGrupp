#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записывает данные в регистр.
//
// Параметры:
//  Корректировки	 - ТаблицаЗначений - данные для записи.
//  ПланПроизводства - ДокументСсылка.ПланПроизводства - документ, к которому относятся корректировки.
//
Процедура ЗаписатьКорректировки(Корректировки, ПланПроизводства) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОтменаКорректировокПланаПроизводства.*
		|ИЗ
		|	РегистрСведений.ОтменаКорректировокПланаПроизводства КАК ОтменаКорректировокПланаПроизводства
		|ГДЕ
		|	ОтменаКорректировокПланаПроизводства.ПланПроизводства = &ПланПроизводства");
	Запрос.УстановитьПараметр("ПланПроизводства", ПланПроизводства);
	ВсеКорректировки = Запрос.Выполнить().Выгрузить();
	
	Если ВсеКорректировки.Количество() = 0 Тогда
		
		ВсеКорректировки = Корректировки;
		
	Иначе
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ПланПроизводства");
		СтруктураПоиска.Вставить("Номенклатура");
		СтруктураПоиска.Вставить("Характеристика");
		СтруктураПоиска.Вставить("Назначение");
		СтруктураПоиска.Вставить("Спецификация");
		СтруктураПоиска.Вставить("ДатаЗапуска");
		СтруктураПоиска.Вставить("ДатаВыпуска");
		СтруктураПоиска.Вставить("ДатаВыпускаПолуфабриката");
		СтруктураПоиска.Вставить("ЭтоПолуфабрикат");
		
		Для каждого Строка Из Корректировки Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
			НайденныеСтроки = ВсеКорректировки.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				ЗаполнитьЗначенияСвойств(ВсеКорректировки.Добавить(), Строка);
				
			Иначе
				
				ЗаполнитьЗначенияСвойств(НайденныеСтроки[0], Строка);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ОтменаКорректировокПланаПроизводства.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПланПроизводства.Установить(ПланПроизводства);
	НаборЗаписей.Загрузить(ВсеКорректировки);
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Проверяет наличие отмененных ручных корректровок плана производства.
//
// Параметры:
//  ПланПроизводства - ДокументСсылка.ПланПроизводства - документ для проверки.
// 
// Возвращаемое значение:
//  Булево - Истина если по плану производства имеются отмененные корректировки.
//
Функция ЕстьОтмененныеКорректировки(ПланПроизводства) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОтменаКорректировокПланаПроизводства.ПланПроизводства КАК ПланПроизводства
		|ИЗ
		|	РегистрСведений.ОтменаКорректировокПланаПроизводства КАК ОтменаКорректировокПланаПроизводства
		|ГДЕ
		|	ОтменаКорректировокПланаПроизводства.ПланПроизводства = &ПланПроизводства");
	
	Запрос.УстановитьПараметр("ПланПроизводства", ПланПроизводства);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли