
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НавигационнаяСсылка = "e1cib/app/" + ЭтотОбъект.ИмяФормы;
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("ЭлектронноеВзаимодействие.РаботаСНоменклатурой") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СтатистикаСопоставления(Элементы);
	
	РежимОтбора = "ВсяНоменклатура";
	ФонУправляющегоПоля = ЦветаСтиля.ЦветФонаШапкиТаблицы;
	ФонОбычный = ЦветаСтиля.ЦветФонаКнопки;
	Элементы.ОтборВсяНоменклатура.Гиперссылка = Ложь;
	
	ВариантыПоискаИндекс = Новый ФиксированноеСоответствие(Новый Соответствие);
	
	// Отображение поиска выполнять с сохранением данных.
	Элементы.ПоказатьВарианты.Пометка = Ложь;
	Элементы.ГруппаПоиска.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НайтиСоответствия();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПереключение(Элемент)
	
	РежимОтбора = СтрЗаменить(Элемент.Имя, "Отбор", "");
	УстановитьОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ПоказатьВарианты.Пометка Тогда
		ПодключитьОбработчикОжидания("ПоказатьСписокВариантов", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "СписокНоменклатура" Тогда
		
		ПоказатьЗначение(, ТекущиеДанные.Номенклатура);
		
	ИначеЕсли Поле.Имя = "СписокХарактеристика" Тогда
		
		ПоказатьЗначение(, ТекущиеДанные.Характеристика);
		
	ИначеЕсли Поле.Имя = "СписокПодтверждено" Тогда
		
		Если ТекущиеДанные.Подтверждено = Ложь
			И Не ЗначениеЗаполнено(ТекущиеДанные.ИдентификаторНоменклатурыСервиса) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать номенклатуру сервиса.';
											|en = 'Select products of the service.'"));
			Возврат;
		ИначеЕсли ТекущиеДанные.Подтверждено = Истина
			И ТекущиеДанные.КоличествоСовпадений > 1 Тогда
		КонецЕсли;
		
		// Изменение режима подтверждения.
		Отбор = Новый Структура("Номенклатура, Характеристика",
			ТекущиеДанные.Номенклатура, ТекущиеДанные.Характеристика);
		ИзменитьРеквизитыСписка(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Отбор));
		Элементы.Список.Обновить();
		
	ИначеЕсли Поле.Имя = "СписокПредставлениеНоменклатурыСервиса" Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ИдентификаторНоменклатурыСервиса) Тогда
			// Открытие формы карточки 1С:Номенклатура
			ОткрытьКарточкуНоменклатуры(ТекущиеДанные.ИдентификаторНоменклатурыСервиса, ТекущиеДанные.ИдентификаторХарактеристикиСервиса);
		Иначе
			
			Если Не Элементы.ПоказатьВарианты.Пометка Тогда
				ОтображатьПоискСервиса(Элемент);
			КонецЕсли;
			
			ЭтотОбъект.ТекущийЭлемент = Элементы.ВариантыПоиска;
			
		КонецЕсли;
		
	ИначеЕсли Поле.Имя = "СписокНайти" Тогда
		
		ОткрытьФормуПоискаНоменклатурыСервиса();
		
	ИначеЕсли Поле.Имя = "ГиперссылкаОчистить" Тогда	
		
		ОтменитьВыбор(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВарианты

&НаКлиенте
Процедура ВариантыПоискаПометкаПриИзменении(Элемент)
	
	// Установить в списке.
	ТекущиеДанныеСписка    = Элементы.Список.ТекущиеДанные;
	ТекущиеДанныеВариантов = Элементы.ВариантыПоиска.ТекущиеДанные;
	
	// Изменение режима подтверждения.
	Отбор = Новый Структура("Номенклатура, Характеристика",
		ТекущиеДанныеСписка.Номенклатура, ТекущиеДанныеСписка.Характеристика);
	
	НовыеРеквизиты = Новый Структура("Подтверждено,
		|ИдентификаторНоменклатурыСервиса, ИдентификаторХарактеристикиСервиса,
		|ПредставлениеНоменклатурыСервиса, ПредставлениеХарактеристикиСервиса");
	
	Если ТекущиеДанныеВариантов.Пометка Тогда
		ЗаполнитьЗначенияСвойств(НовыеРеквизиты, ТекущиеДанныеВариантов);
		НовыеРеквизиты.Подтверждено = Истина;
	ИначеЕсли ТекущиеДанныеСписка.КоличествоСовпадений = 1 Тогда
		НовыеРеквизиты = Новый Структура;
		НовыеРеквизиты.Вставить("Подтверждено", Ложь);
		НовыеРеквизиты.Вставить("ПредставлениеНоменклатурыСервиса", "");
		НовыеРеквизиты.Вставить("КоличествоСовпадений", 0);
	Иначе
		НовыеРеквизиты.Подтверждено = Ложь;
		Если ТекущиеДанныеСписка.КоличествоСовпадений > 0 Тогда
			НовыеРеквизиты.ПредставлениеНоменклатурыСервиса
				= СтрШаблон(НСтр("ru = '<Несколько вариантов (%1)>';
								|en = '<Several options (%1)>'"), ТекущиеДанныеСписка.КоличествоСовпадений);
		КонецЕсли;
		
	КонецЕсли;
	
	ИзменитьРеквизитыСписка(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Отбор), НовыеРеквизиты);
	ЗаполнитьЗначенияСвойств(ТекущиеДанныеСписка, НовыеРеквизиты);
	
	// Сбросить другие пометки.
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура",   ТекущиеДанныеСписка.Номенклатура);
	Отбор.Вставить("Характеристика", ТекущиеДанныеСписка.Характеристика);
	ВариантыПоискаТекущейНоменклатуры = ВариантыПоиска.НайтиСтроки(Отбор);
	Для каждого ЭлементКоллекции Из ВариантыПоискаТекущейНоменклатуры Цикл
		Если ЭлементКоллекции <> ТекущиеДанныеВариантов И ЭлементКоллекции.Пометка Тогда
			ЭлементКоллекции.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыПоискаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ВариантыПоиска.ТекущиеДанные;
	Если Не ТекущиеДанные.ЭтоГиперссылка Тогда
		// Открытие формы карточки 1СН.
		ОткрытьКарточкуНоменклатуры(ТекущиеДанные.ИдентификаторНоменклатурыСервиса, ТекущиеДанные.ИдентификаторХарактеристикиСервиса);
	Иначе
		// Открытие формы выбора.
		ОткрытьФормуПоискаНоменклатурыСервиса();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыПоискаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВариантыПоискаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтображатьПоискСервиса(Команда)
	
	Элементы.ПоказатьВарианты.Пометка = Не Элементы.ПоказатьВарианты.Пометка;
	Элементы.ГруппаПоиска.Видимость = Элементы.ПоказатьВарианты.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИЗакрыть(Команда)
	
	Отказ = Ложь;
	СохранитьСопоставленныеЗначения(Отказ);
	
	Если Не Отказ Тогда
		ПоказатьОповещениеПользователя("1С:Номенклатура",, НСтр("ru = 'Выполнено сопоставление номенклатуры';
																|en = 'Products mapped'"));
		Оповестить("ТорговыеПредложение_СопоставлениеНоменклатуры");
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискНоменклатурыСервиса(Команда)
	
	НайтиСоответствия();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	Отказ = Ложь;
	ТекстСообщения = "";
	ИзменитьРеквизитыСписка(Элементы.Список.ВыделенныеСтроки, Новый Структура("Подтверждено", Истина), Отказ, ТекстСообщения);
	
	Элементы.Список.Обновить();
	
	Если Отказ И ЗначениеЗаполнено(ТекстСообщения) Тогда
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	
	ИзменитьРеквизитыСписка(Элементы.Список.ВыделенныеСтроки, Новый Структура("Подтверждено", Ложь));
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВыбор(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтменитьВыбор(ТекущиеДанные)
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СтатистикаСопоставления(Элементы = Неопределено)
	
	Статистика = ТорговыеПредложенияСлужебный.СтатистикаСопоставления();
	НеточноеСовпадение = (Статистика.Количество - Статистика.ТочноеСовпадение);
	
	Статистика.Вставить("ВсяНоменклатураПредставление", НСтр("ru = 'Вся номенклатура';
															|en = 'All products'")
		+ ?(Статистика.Количество > 0, " (" + Формат(Статистика.Количество, "ЧН=0") + ")", ""));
	Статистика.Вставить("ТочноеСовпадениеПредставление", НСтр("ru = 'Точное совпадение';
																|en = 'Exact match'")
		+ ?(Статистика.ТочноеСовпадение > 0, " (" + Формат(Статистика.ТочноеСовпадение, "ЧН=0") + ")", ""));
	Статистика.Вставить("НеточноеСовпадениеПредставление", НСтр("ru = 'Неточное совпадение';
																|en = 'Fuzzy match'")
		+ ?(НеточноеСовпадение > 0, " (" + Формат(НеточноеСовпадение, "ЧН=0") + ")", ""));
	Статистика.Вставить("СохранениеСопоставления", НСтр("ru = 'Сохранить сопоставление';
														|en = 'Save mapping'")
		+ ?(Статистика.КоличествоПодготовлено = 0, "", " (" + Формат(Статистика.КоличествоПодготовлено, "ЧН=0") + ")"));
	
	Если ЗначениеЗаполнено(Элементы) Тогда
		Элементы.ОтборВсяНоменклатура.Заголовок    = Статистика.ВсяНоменклатураПредставление;
		Элементы.ОтборТочноеСовпадение.Заголовок   = Статистика.ТочноеСовпадениеПредставление;
		Элементы.ОтборНеточноеСовпадение.Заголовок = Статистика.НеточноеСовпадениеПредставление;
		Элементы.СохранитьСопоставление.Заголовок  = Статистика.СохранениеСопоставления;
	КонецЕсли;
	
	Возврат Статистика;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьСопоставленныеЗначения(Отказ)

	// Выборка из регистра ПоискНоменклатурыРаботаСНоменклатурой
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоответствиеПоискаРаботаСНоменклатурой.Номенклатура КАК Номенклатура,
	|	СоответствиеПоискаРаботаСНоменклатурой.Характеристика КАК Характеристика,
	|	СоответствиеПоискаРаботаСНоменклатурой.ИдентификаторНоменклатурыСервиса КАК ИдентификаторНоменклатурыСервиса,
	|	СоответствиеПоискаРаботаСНоменклатурой.ИдентификаторХарактеристикиСервиса КАК ИдентификаторХарактеристикиСервиса,
	|	СоответствиеПоискаРаботаСНоменклатурой.ПредставлениеНоменклатурыСервиса КАК ПредставлениеНоменклатурыСервиса,
	|	СоответствиеПоискаРаботаСНоменклатурой.ПредставлениеХарактеристикиСервиса КАК ПредставлениеХарактеристикиСервиса
	|ИЗ
	|	РегистрСведений.СоответствиеПоискаРаботаСНоменклатурой КАК СоответствиеПоискаРаботаСНоменклатурой
	|ГДЕ
	|	СоответствиеПоискаРаботаСНоменклатурой.Подтверждено";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Создание набора записей
	
	МодульРаботаСНоменклатурой = ОбщегоНазначения.ОбщийМодуль("РаботаСНоменклатурой");
	ДанныеЗаполнения = МодульРаботаСНоменклатурой.ПараметрыЗаписиСоответствияНоменклатуры();
	
	МенеджерЗаписи = РегистрыСведений["СоответствиеНоменклатурыРаботаСНоменклатурой"].СоздатьМенеджерЗаписи();
	УдаляемаяЗапись = РегистрыСведений.СоответствиеПоискаРаботаСНоменклатурой.СоздатьМенеджерЗаписи();
	
	// Запись в регистр СоответствиеНоменклатурыРаботаСНоменклатурой
	СчетчикТранзакции = 0;
	НачатьТранзакцию();
	Попытка
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Выборка);
			ДанныеЗаполнения.ОбновляетсяАвтоматически = Ложь;
			МодульРаботаСНоменклатурой.ЗаписатьСоответствиеНоменклатурыИХарактеристик(Выборка.Номенклатура, Выборка.Характеристика,
				ДанныеЗаполнения);
			Если СчетчикТранзакции = 1000 Тогда
				СчетчикТранзакции = 0;
				ЗафиксироватьТранзакцию();
				НачатьТранзакцию();
			Иначе
				СчетчикТранзакции = СчетчикТранзакции + 1;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(УдаляемаяЗапись, Выборка);
			УдаляемаяЗапись.Прочитать();
			УдаляемаяЗапись.Удалить();
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru = 'Ошибка сохранения сопоставления номенклатуры сервиса.';
								|en = 'Error saving service products mapping.'")
			+ Символы.ПС + НСтр("ru = 'Подробности см. в журнале регистрации.';
								|en = 'See details in log.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		ЭлектронноеВзаимодействиеСлужебный.ВыполнитьЗаписьСобытияПоЭДВЖурналРегистрации(
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()), "БизнесСеть");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор()
	
	Элементы.ГруппаОтборВсяНоменклатура.ЦветФона = ?(РежимОтбора = "ВсяНоменклатура", ФонУправляющегоПоля, ФонОбычный);
	Элементы.ОтборВсяНоменклатура.Гиперссылка = РежимОтбора <> "ВсяНоменклатура";
	
	Элементы.ГруппаОтборТочноеСовпадение.ЦветФона = ?(РежимОтбора = "ТочноеСовпадение", ФонУправляющегоПоля, ФонОбычный);
	Элементы.ОтборТочноеСовпадение.Гиперссылка = РежимОтбора <> "ТочноеСовпадение";
	
	Элементы.ГруппаОтборНеточноеСовпадение.ЦветФона = ?(РежимОтбора = "НеточноеСовпадение", ФонУправляющегоПоля, ФонОбычный);
	Элементы.ОтборНеточноеСовпадение.Гиперссылка = РежимОтбора <> "НеточноеСовпадение";
	
	ОбновитьОтборСписка();
	
	Если РежимОтбора = "ТочноеСовпадение" Тогда
		
		Если Элементы.ПоказатьВарианты.Пометка Тогда
			Элементы.ГруппаПоиска.Видимость = Ложь;
			Элементы.ПоказатьВарианты.Пометка = Ложь;
		КонецЕсли;
		
	Иначе
		
		Если РежимОтбора = "НеточноеСовпадение"
			И Не Элементы.ПоказатьВарианты.Пометка Тогда
			Элементы.ПоказатьВарианты.Пометка = Истина;
			Элементы.ГруппаПоиска.Видимость = Истина;
			ПоказатьСписокВариантов();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтборСписка()
	
	Список.Отбор.Элементы.Очистить();
	
	Если РежимОтбора = "ТочноеСовпадение" Тогда
		ОтборЭлемента = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСовпадений");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = 1;
	ИначеЕсли РежимОтбора = "НеточноеСовпадение" Тогда
		ОтборЭлемента = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСовпадений");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = 0;
	КонецЕсли;
	
КонецПроцедуры

// Изменить строк списка.
//
// Параметры:
//  Отбор			 - Структура - отбор для изменений:
///  * Номенклатура - СправочникСсылка - изменяемая номенклатура.
//  НовыеРеквизиты	 - Структура - значения изменяемых реквизитов:
//   * ИдентификаторНоменклатурыСервиса - Строка - идентификатор номенклатуры сервиса.
//	 * ИдентификаторХарактеристикиСервиса - Строка - идентификатор характеристики сервиса.
//	 * ПредставлениеНоменклатурыСервиса - Строка - представление номенклатуры сервиса.
//	 * ПредставлениеХарактеристикиСервиса - Строка - представление характеристики сервиса.
//	 * КоличествоСовпадений - Число - количество найденных совпадений в сервисе сервиса.
//	 * Подтверждено - Булево - флаг подтверждения сопоставления.
//  Отказ			 - Булево - признак ошибки выполнения.
//  ТекстСообщения	 - Строка - текст ошибки выполнения.
//
&НаСервере
Процедура ИзменитьРеквизитыСписка(Знач Отбор, НовыеРеквизиты = Неопределено, Отказ = Ложь, ТекстСообщения = "");
	
	Запись = РегистрыСведений.СоответствиеПоискаРаботаСНоменклатурой.СоздатьМенеджерЗаписи();
	
	СчетчикТранзакции = 0;
	НачатьТранзакцию();
	
	Попытка
		
		Для каждого ЭлементКоллекции Из Отбор Цикл
		
			Запись.Номенклатура = ЭлементКоллекции.Номенклатура;
			Запись.Характеристика = ЭлементКоллекции.Характеристика;
			Запись.Прочитать();
			
			Если НовыеРеквизиты = Неопределено Тогда
				Запись.Подтверждено = Не Запись.Подтверждено;
			Иначе
				ЗаполнитьЗначенияСвойств(Запись, НовыеРеквизиты);
			КонецЕсли;
			
			Если Запись.Подтверждено И Не ЗначениеЗаполнено(Запись.ИдентификаторНоменклатурыСервиса) Тогда
				Отказ = Истина;
				ТекстСообщения = НСтр("ru = 'Необходимо выбрать номенклатуру сервиса.';
										|en = 'Select products of the service.'");
				Прервать;
			КонецЕсли;
			
			Запись.Записать(Истина);
			
			Если СчетчикТранзакции = 1000 Тогда
				СчетчикТранзакции = 0;
				ЗафиксироватьТранзакцию();
				НачатьТранзакцию();
			КонецЕсли;
			
		КонецЦикла;
		
		Если Отказ Тогда
			ОтменитьТранзакцию();
		Иначе
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	Исключение
		
		ОтменитьТранзакцию();
		ЭлектронноеВзаимодействие.ОбработатьОшибку(НСтр("ru = 'Изменение сопоставления 1С:Номенклатура.';
														|en = '1С:Products mapping change.'"),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),
			НСтр("ru = 'Ошибка изменения сопоставления 1С:Номенклатура для публикации торговых предложений.';
				|en = 'Error changing 1С:Products mapping for sales proposition publishing.'"), "БизнесСеть");
			
	КонецПопытки;
	
	СтатистикаСопоставления(Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуНоменклатуры(ИдентификаторНоменклатуры, ИдентификаторХарактеристики)
	
	Идентификаторы = Новый Структура;
	Идентификаторы.Вставить("ИдентификаторНоменклатуры", ИдентификаторНоменклатуры);
	Идентификаторы.Вставить("ИдентификаторХарактеристики", ИдентификаторХарактеристики);
	ОбщийМодуль = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСНоменклатуройКлиент");
	ОбщийМодуль.ОткрытьФормуКарточкиНоменклатуры(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Идентификаторы),
		ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Скрытие характеристики номенклатуры.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокХарактеристика.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.Характеристика");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Скрытие характеристики номенклатуры сервиса.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПредставлениеХарактеристикиСервиса.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ИдентификаторХарактеристикиСервиса");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Видимость гиперссылки Выбрать для списка (показать, если не выбрано значение).
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокНайти.Имя);
	ОтборГруппа = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ОтборГруппа.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ОтборЭлемента = ОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ИдентификаторНоменклатурыСервиса");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ОтборЭлемента = ОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.КоличествоСовпадений");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Выбрать';
																					|en = 'Select'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Истина);
	
	// Видимость гиперссылки Выбрать для списка (скрыть, если выбрано значение).
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокНайти.Имя);
	ОтборГруппа = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ОтборГруппа.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	ОтборЭлемента = ОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ИдентификаторНоменклатурыСервиса");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	ОтборЭлемента = ОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.КоличествоСовпадений");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 0;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Видимость номенклатуры сервиса (скрыть, если не выбрано значение).
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПредставлениеНоменклатурыСервиса.Имя);
	ОтборГруппа = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ОтборГруппа.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ОтборЭлемента = ОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ИдентификаторНоменклатурыСервиса");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ОтборЭлемента = ОтборГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.КоличествоСовпадений");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Скрытие характеристики варианта номенклатуры сервиса.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыПоискаХарактеристикаСервиса.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыПоиска.ИдентификаторХарактеристикиСервиса");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Гиперссылка показать все варианты (скрыть основные поля, если гиперссылка).
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыПоискаПометка.Имя);
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыПоискаНоменклатураСервиса.Имя);
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыПоискаХарактеристикаСервиса.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыПоиска.ЭтоГиперссылка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Гиперссылка показать все варианты (скрыть если гиперссылка).
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыПоискаПоказатьВсе.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыПоиска.ЭтоГиперссылка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Гиперссылка показать все варианты (показать если гиперссылка).
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантыПоискаПоказатьВсе.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыПоиска.ЭтоГиперссылка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Истина);
	
	// Гиперссылка списка формы Очистить - пусто.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ГиперссылкаОчистить.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПредставлениеНоменклатурыСервиса");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст","");
	
	// Гиперссылка списка формы Очистить - Х.
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ГиперссылкаОчистить.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПредставлениеНоменклатурыСервиса");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЭДЦвет);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Х';
																					|en = 'H'"));
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиСоответствия()
	
	ДлительнаяОперация = НайтиСоответствияНаСервере();
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	Если Не ДлительнаяОперация = Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		Элементы.ГруппаПоискаСостояние.Видимость = Истина;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Поиск соответствий 1С:Номенклатура.';
											|en = 'Search for 1С:Products match.'");
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	ДлительнаяОперацияЗавершение = Новый ОписаниеОповещения(
		"НайтиСоответствияЗавершение", ЭтотОбъект, ПараметрыОжидания);
		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ДлительнаяОперацияЗавершение,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиСоответствияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТорговыеПредложенияКлиент.ОбработатьОшибкиФоновогоЗадания(Результат);
	
	Элементы.ГруппаПоискаСостояние.Видимость = Ложь;
	ОбновитьСтатистикуСопоставленияНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатистикуСопоставленияНаКлиенте()
	
	Статистика = СтатистикаСопоставления();
	Элементы.ОтборВсяНоменклатура.Заголовок    = Статистика.ВсяНоменклатураПредставление;
	Элементы.ОтборТочноеСовпадение.Заголовок   = Статистика.ТочноеСовпадениеПредставление;
	Элементы.ОтборНеточноеСовпадение.Заголовок = Статистика.НеточноеСовпадениеПредставление;
	Элементы.СохранитьСопоставление.Заголовок  = Статистика.СохранениеСопоставления;

КонецПроцедуры

&НаСервере
Функция НайтиСоответствияНаСервере()
	
	Результат = Новый Структура;
	Результат.Вставить("Статус",    "Выполняется");
	Результат.Вставить("ИдентификаторЗадания", Неопределено);
	Результат.Вставить("АдресРезультата", "");
	Результат.Вставить("АдресДополнительногоРезультата", "");
	Результат.Вставить("КраткоеПредставлениеОшибки", "");
	Результат.Вставить("ПодробноеПредставлениеОшибки", "");
	Результат.Вставить("Сообщения", Новый ФиксированныйМассив(Новый Массив));
	
	// Поиск запущенного ранее регламентного задания.
	АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("ИмяМетода, Состояние",
		"ТорговыеПредложения.НайтиНоменклатуруСервисаДляСопоставления", СостояниеФоновогоЗадания.Активно));
	
	Если АктивныеЗадания.Количество() Тогда
		ЗаполнитьЗначенияСвойств(Результат, АктивныеЗадания[0]);
		Результат.ИдентификаторЗадания = АктивныеЗадания[0].УникальныйИдентификатор;
		Возврат Результат;
	КонецЕсли;
	
	// Поиск запущенного ранее фонового задания из формы.
	НаименованиеЗадания = НСтр("ru = '1С:Бизнес-сеть. Поиск соответствий 1С:Номенклатура.';
								|en = '1C:Business network. Search for 1С:Products match.'");
	
	АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Наименование, Состояние",
		НаименованиеЗадания, СостояниеФоновогоЗадания.Активно));
	
	Если АктивныеЗадания.Количество() Тогда
		ЗаполнитьЗначенияСвойств(Результат, АктивныеЗадания[0]);
		Результат.ИдентификаторЗадания = АктивныеЗадания[0].УникальныйИдентификатор;
		Возврат Результат;
	КонецЕсли;
	
	Задание = Новый Структура("ИмяПроцедуры, Наименование, ПараметрыПроцедуры");
	Задание.Наименование = НаименованиеЗадания;
	Задание.ИмяПроцедуры = "ТорговыеПредложенияСлужебный.ПоискСоответствийНоменклатурыСервиса";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = Задание.Наименование;
	ПараметрыВыполнения.КлючФоновогоЗадания = "";
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	ВариантыПоиска.Очистить();
	ВариантыПоискаИндекс = Новый ФиксированноеСоответствие(Новый Соответствие);
	ТекущийКлючВариантов = "";
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(Задание.ИмяПроцедуры,
		Задание.ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ПоказатьСписокВариантов()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Если Элементы.ГруппаПоискаСтраницы.ТекущаяСтраница <> Элементы.ГруппаНичегоНеВыбрано Тогда
			Элементы.ГруппаПоискаСтраницы.ТекущаяСтраница = Элементы.ГруппаНичегоНеВыбрано;
		КонецЕсли;
		ТекущийКлючВариантов = "";
		Возврат;
	КонецЕсли;
	
	НовыйКлюч = "" + ТекущиеДанные.Номенклатура.УникальныйИдентификатор() + "-" + ТекущиеДанные.Характеристика.УникальныйИдентификатор();
	Если ТекущийКлючВариантов = НовыйКлюч Тогда
		Возврат;
	Иначе
		ТекущийКлючВариантов = НовыйКлюч;
	КонецЕсли;
	
	Если ТекущиеДанные.КоличествоСовпадений = 1
		И ЗначениеЗаполнено(ТекущиеДанные.ИдентификаторНоменклатурыСервиса) Тогда
		
		Если ВариантыПоискаИндекс.Получить(ТекущийКлючВариантов) = Неопределено Тогда
			
			СтрокаВарианта = ВариантыПоиска.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВарианта, ТекущиеДанные);
			СтрокаВарианта.Пометка = Истина;
			
			ВариантыПоискаИндексОбновленный = Новый Соответствие(ВариантыПоискаИндекс);
			ВариантыПоискаИндексОбновленный.Вставить(ТекущийКлючВариантов, Истина);
			ВариантыПоискаИндекс = Новый ФиксированноеСоответствие(ВариантыПоискаИндексОбновленный);
			
		КонецЕсли;
		
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура",   ТекущиеДанные.Номенклатура);
		Отбор.Вставить("Характеристика", ТекущиеДанные.Характеристика);
		Элементы.ВариантыПоиска.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
		
		Если Элементы.ГруппаПоискаСтраницы.ТекущаяСтраница <> Элементы.ГруппаВарианты Тогда
			Элементы.ГруппаПоискаСтраницы.ТекущаяСтраница = Элементы.ГруппаВарианты;
		КонецЕсли;
		
	Иначе
		
		Если ВариантыПоискаИндекс.Получить(ТекущийКлючВариантов) = Неопределено Тогда
			
			ПараметрыПодбораВариантов = Новый Структура;
			ПараметрыПодбораВариантов.Вставить("КлючВариантов",  ТекущийКлючВариантов);
			ПараметрыПодбораВариантов.Вставить("Номенклатура",   ТекущиеДанные.Номенклатура);
			ПараметрыПодбораВариантов.Вставить("Характеристика", ТекущиеДанные.Характеристика);
			ПараметрыПодбораВариантов.Вставить("ИдентификаторНоменклатурыСервиса",
				ТекущиеДанные.ИдентификаторНоменклатурыСервиса);
			ПараметрыПодбораВариантов.Вставить("ИдентификаторХарактеристикиСервиса",
				ТекущиеДанные.ИдентификаторХарактеристикиСервиса);
			
			НачатьОбновлениеВариантовСопоставления(ПараметрыПодбораВариантов);
			
		Иначе
			
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",   ТекущиеДанные.Номенклатура);
			Отбор.Вставить("Характеристика", ТекущиеДанные.Характеристика);
			
			Элементы.ВариантыПоиска.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
			
			Если Элементы.ГруппаПоискаСтраницы.ТекущаяСтраница <> Элементы.ГруппаВарианты Тогда
				Элементы.ГруппаПоискаСтраницы.ТекущаяСтраница = Элементы.ГруппаВарианты;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОбновлениеВариантовСопоставления(ПараметрыПодбораВариантов)
	
	ДлительнаяОперация = ОбновитьВариантыСопоставленияВФоне(ПараметрыПодбораВариантов,
		ЭтотОбъект.УникальныйИдентификатор);
	
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	
	Если ДлительнаяОперация <> Неопределено
		И ДлительнаяОперация.Статус = "Выполняется" Тогда
		Элементы.ГруппаПоискаСтраницы.ТекущаяСтраница = Элементы.ГруппаВариантыДлительнаяОперация;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Поиск соответствий 1С:Номенклатура.';
											|en = 'Search for 1С:Products match.'");
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Ложь;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ОповещениеПользователя.Показать = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Вставить("ИдентификаторЗадания", ИдентификаторЗадания);
	
	ОбновитьВариантыСопоставленияЗавершение = Новый ОписаниеОповещения("ОбновитьВариантыСопоставленияЗавершение",
		ЭтотОбъект, ПараметрыПодбораВариантов);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация,
		ОбновитьВариантыСопоставленияЗавершение, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьВариантыСопоставленияВФоне(Знач ПараметрыПодбораВариантов, Знач ИдентификаторФормы)
	
	Результат = Новый Структура;
	Результат.Вставить("Статус",                         "Выполняется");
	Результат.Вставить("ИдентификаторЗадания",           Неопределено);
	Результат.Вставить("АдресРезультата",                "");
	Результат.Вставить("АдресДополнительногоРезультата", "");
	Результат.Вставить("КраткоеПредставлениеОшибки",     "");
	Результат.Вставить("ПодробноеПредставлениеОшибки",   "");
	Результат.Вставить("Сообщения",                      Новый ФиксированныйМассив(Новый Массив));
	
	// Поиск запущенного ранее фонового задания из формы.
	НаименованиеЗадания = НСтр("ru = '1С:Бизнес-сеть. Обновление вариантов сопоставления номенклатуры.';
								|en = '1C: Business network. Update product matching options.'");
	
	АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Наименование, Состояние",
		НаименованиеЗадания, СостояниеФоновогоЗадания.Активно));
	
	Если АктивныеЗадания.Количество() Тогда
		НайденноеЗадание = АктивныеЗадания[0];
		Если НайденноеЗадание.Ключ = ПараметрыПодбораВариантов.КлючВариантов Тогда
			ЗаполнитьЗначенияСвойств(Результат, НайденноеЗадание);
			Результат.ИдентификаторЗадания = АктивныеЗадания[0].УникальныйИдентификатор;
			Возврат Результат;
		Иначе
			НайденноеЗадание.Отменить();
		КонецЕсли;
	КонецЕсли;
	
	Задание                    = Новый Структура("ИмяПроцедуры, Наименование, ПараметрыПроцедуры");
	Задание.Наименование       = НаименованиеЗадания;
	Задание.ИмяПроцедуры       = "ТорговыеПредложенияСлужебный.ОбновитьВариантыСопоставленияНоменклатуры";
	Задание.ПараметрыПроцедуры = ПараметрыПодбораВариантов;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = Задание.Наименование;
	ПараметрыВыполнения.КлючФоновогоЗадания = ПараметрыПодбораВариантов.КлючВариантов;
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(Задание.ИмяПроцедуры,
		Задание.ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьВариантыСопоставленияЗавершение(Результат, ПараметрыПодбораВариантов) Экспорт
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		Элементы.ПоказатьВарианты.Пометка = Не Элементы.ПоказатьВарианты.Пометка;
		Элементы.ГруппаПоиска.Видимость = Элементы.ПоказатьВарианты.Пометка;
		
	ИначеЕсли Результат = Неопределено
		Или Результат.Статус <> "Выполнено"
		Или ПараметрыПодбораВариантов.Номенклатура <> ТекущиеДанные.Номенклатура
		Или ПараметрыПодбораВариантов.Характеристика <> ТекущиеДанные.Характеристика
		Или ВариантыПоискаИндекс.Получить(ПараметрыПодбораВариантов.КлючВариантов) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Сообщения <> Неопределено Тогда
		Для Каждого Сообщение Из Результат.Сообщения Цикл
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыОбновленияВариантов = Новый Структура;
	ПараметрыОбновленияВариантов.Вставить("ДанныеСервиса", Результат.АдресРезультата);
	ПараметрыОбновленияВариантов.Вставить("ТекущийВариант", ПараметрыПодбораВариантов);
	
	ОбновитьВариантыСопоставленияНаСервере(ПараметрыОбновленияВариантов)
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВариантыСопоставленияНаСервере(ПараметрыОбновленияВариантов)
	
	Если ЭтоАдресВременногоХранилища(ПараметрыОбновленияВариантов.ДанныеСервиса) Тогда
		ДанныеСервиса = ПолучитьИзВременногоХранилища(ПараметрыОбновленияВариантов.ДанныеСервиса);
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекущийВариант = ПараметрыОбновленияВариантов.ТекущийВариант;
	
	Если Не ЗначениеЗаполнено(ДанныеСервиса)
		Или Не ДанныеСервиса.Количество() Тогда
		
		Элементы.ПустойРезультатПоясняющийТекст.Заголовок = СтрШаблон(НСтр("ru = 'Не найдено вариантов для ""%1""';
																			|en = 'No options found for ""%1""'"),
			Строка(ТекущийВариант.Номенклатура));
		Элементы.ГруппаПоискаСтраницы.ТекущаяСтраница = Элементы.ГруппаПустойРезультат;
		
		Возврат;
		
	КонецЕсли;
	
	Элементы.ГруппаПоискаСтраницы.ТекущаяСтраница = Элементы.ГруппаВарианты;
	
	Для Каждого ДанныеВарианта Из ДанныеСервиса Цикл
		
		НоваяСтрока = ВариантыПоиска.Добавить();
		НоваяСтрока.Номенклатура                     = ТекущийВариант.Номенклатура;
		НоваяСтрока.Характеристика                   = ТекущийВариант.Характеристика;
		НоваяСтрока.ПредставлениеНоменклатурыСервиса = ДанныеВарианта.Наименование;
		НоваяСтрока.ИдентификаторНоменклатурыСервиса = ДанныеВарианта.Идентификатор;
		
	КонецЦикла;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура",   ТекущийВариант.Номенклатура);
	Отбор.Вставить("Характеристика", ТекущийВариант.Характеристика);
	
	Если ВариантыПоиска.НайтиСтроки(Отбор).Количество() >= 50 Тогда
		
		НоваяСтрока = ВариантыПоиска.Добавить();
		НоваяСтрока.Номенклатура   = ТекущийВариант.Номенклатура;
		НоваяСтрока.Характеристика = ТекущийВариант.Характеристика;
		НоваяСтрока.ВсеВарианты    = НСтр("ru = 'Показать все';
											|en = 'Show all'");
		НоваяСтрока.ЭтоГиперссылка = Истина;
		
	КонецЕсли;
	
	Элементы.ВариантыПоиска.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	
	// Установка текущего варианта.
	ОписаниеТекущегоВарианта = Новый Структура;
	ОписаниеТекущегоВарианта.Вставить("ИдентификаторНоменклатурыСервиса",
		ТекущийВариант.ИдентификаторНоменклатурыСервиса);
	ОписаниеТекущегоВарианта.Вставить("ИдентификаторХарактеристикиСервиса",
		ТекущийВариант.ИдентификаторХарактеристикиСервиса);
	ОписаниеТекущегоВарианта.Вставить("Номенклатура",
		ТекущийВариант.Номенклатура);
	ОписаниеТекущегоВарианта.Вставить("Характеристика",
		ТекущийВариант.Характеристика);
	
	Если ЗначениеЗаполнено(ОписаниеТекущегоВарианта.ИдентификаторНоменклатурыСервиса) Тогда
		
		ВыбранныйВариант = ВариантыПоиска.НайтиСтроки(ОписаниеТекущегоВарианта);
		
		Если ВыбранныйВариант.Количество() <> 0 Тогда
			ВыбранныйВариант[0].Пометка = Истина;
			Элементы.ВариантыПоиска.ТекущаяСтрока = ВариантыПоиска.Индекс(ВыбранныйВариант[0]);
		КонецЕсли;
		
	КонецЕсли;
	
	ВариантыПоискаИндексОбновленный = Новый Соответствие(ВариантыПоискаИндекс);
	ВариантыПоискаИндексОбновленный.Вставить(ТекущийВариант.КлючВариантов, Истина);
	
	ВариантыПоискаИндекс = Новый ФиксированноеСоответствие(ВариантыПоискаИндексОбновленный);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПоискаНоменклатурыСервиса(ЗаполнятьСтрокуПоиска = Истина)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбораНоменклатуры", Истина);
	
	Если ЗаполнятьСтрокуПоиска Тогда
		ПараметрыОткрытия.Вставить("СтрокаПоиска", Строка(Элементы.Список.ТекущиеДанные.Номенклатура));
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("НоменклатураСервисаВыборЗавершение", ЭтотОбъект);
	ОбщийМодульКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСНоменклатуройКлиент");
	ОбщийМодульКлиент.ОткрытьФормуЗагрузкиНоменклатуры(ПараметрыОткрытия, ЭтотОбъект, Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураСервисаВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТорговыеПредложенияКлиент.ОбработатьОшибкиФоновогоЗадания(Результат);
	
	Если Результат = Неопределено ИЛИ Результат.ВыбранныеОбъекты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаРезультата = Результат.ВыбранныеОбъекты[0];
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	НовыеРеквизиты = Новый Структура("Подтверждено,
		|ИдентификаторНоменклатурыСервиса, ИдентификаторХарактеристикиСервиса,
		|ПредставлениеНоменклатурыСервиса, ПредставлениеХарактеристикиСервиса");
	
	Отбор = Новый Структура("Номенклатура, Характеристика",
		ТекущиеДанные.Номенклатура, ТекущиеДанные.Характеристика);
		
	НовыеРеквизиты = Новый Структура;
	НовыеРеквизиты.Вставить("ИдентификаторНоменклатурыСервиса",   СтрокаРезультата.ИдентификаторНоменклатуры);
	НовыеРеквизиты.Вставить("ИдентификаторХарактеристикиСервиса", СтрокаРезультата.ИдентификаторХарактеристики);
	НовыеРеквизиты.Вставить("ПредставлениеНоменклатурыСервиса",   СтрокаРезультата.НаименованиеНоменклатуры);
	НовыеРеквизиты.Вставить("ПредставлениеХарактеристикиСервиса", СтрокаРезультата.НаименованиеХарактеристики);
	НовыеРеквизиты.Вставить("Подтверждено", Истина);
	
	ИзменитьРеквизитыСписка(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Отбор), НовыеРеквизиты);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, НовыеРеквизиты);
	
	ВариантыПоискаТекущейНоменклатуры = ВариантыПоиска.НайтиСтроки(Отбор);
	
	// Установка пометки у вариантов.
	Для каждого ЭлементКоллекции Из ВариантыПоискаТекущейНоменклатуры Цикл
		ЭлементКоллекции.Пометка = 
			ТекущиеДанные.ИдентификаторНоменклатурыСервиса = ЭлементКоллекции.ИдентификаторНоменклатурыСервиса  
			И ТекущиеДанные.ИдентификаторХарактеристикиСервиса = ЭлементКоллекции.ИдентификаторХарактеристикиСервиса;  
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПустойРезультатГиперссылкаНажатие(Элемент)
	
	ОткрытьФормуПоискаНоменклатурыСервиса(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыбор(ТекущиеДанные)
	
	НовыеРеквизиты = Новый Структура;
	НовыеРеквизиты.Вставить("ИдентификаторНоменклатурыСервиса",   "");
	НовыеРеквизиты.Вставить("ИдентификаторХарактеристикиСервиса", "");
	НовыеРеквизиты.Вставить("ПредставлениеНоменклатурыСервиса",   "");
	НовыеРеквизиты.Вставить("ПредставлениеХарактеристикиСервиса", "");
	НовыеРеквизиты.Вставить("КоличествоСовпадений",               0);
	НовыеРеквизиты.Вставить("Подтверждено", Ложь);
	
	ИзменитьРеквизитыСписка(Элементы.Список.ВыделенныеСтроки, НовыеРеквизиты);
	Элементы.Список.Обновить();
	
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура",   ТекущиеДанные.Номенклатура);
	Отбор.Вставить("Характеристика", ТекущиеДанные.Характеристика);
	
	ВариантыПоискаТекущейНоменклатуры = ВариантыПоиска.НайтиСтроки(Отбор);
	
	// Сбросить пометки с вариантов.
	Для каждого ЭлементКоллекции Из ВариантыПоискаТекущейНоменклатуры Цикл
		ЭлементКоллекции.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти