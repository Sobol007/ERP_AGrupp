#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(ГоловнаяОрганизация)
	|	И ЗначениеРазрешено(Сотрудник.ФизическоеЛицо)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура заполняет интервальный регистр сведений ГрафикРаботыСотрудниковИнтервальный.
//
Процедура ЗаполнитьИнтервальныйРегистр(ПараметрыОбновления = Неопределено) Экспорт
	
	ПараметрыПостроения = ПараметрыПостроенияИнтервальногоРегистра();
	ЗарплатаКадрыПериодическиеРегистры.ПеренестиВозвратныйРегистрВИнтервальныйРегистрСведений("ГрафикРаботыСотрудников", ПараметрыПостроения, ПараметрыОбновления);
	
КонецПроцедуры

#КонецОбласти


// Вызывается для формирования интервального регистра из обработчиков обновления основного.
// В передаваемом МенеджерВременныхТаблиц должна быть создана временная таблица ВТОтборДляПереформирования
// с колонкой Сотрудник.
//
Процедура СформироватьДвиженияИнтервальногоРегистра(МенеджерВременныхТаблиц, ПараметрыОбновления) Экспорт
	
	ПараметрыПостроения = ПараметрыПостроенияИнтервальногоРегистра();
	
	ПараметрыПостроения.Вставить("ПолноеПереформирование", Истина);
	ПараметрыПостроения.Вставить("РежимЗагрузки", Истина);
	
	ЗарплатаКадрыПериодическиеРегистры.СформироватьДвиженияИнтервальногоРегистра(
		"ГрафикРаботыСотрудников", МенеджерВременныхТаблиц, ПараметрыПостроения, ПараметрыОбновления);
	
КонецПроцедуры

Функция ПараметрыПостроенияИнтервальногоРегистра()
	
	ПараметрыРесурсов = ЗарплатаКадрыПериодическиеРегистры.ПараметрыНаследованияРесурсов("ГрафикРаботыСотрудников");
	
	ПараметрыПостроения = ЗарплатаКадрыПериодическиеРегистры.ПараметрыПостроенияИнтервальногоРегистра();
	ПараметрыПостроения.ОсновноеИзмерение = "Сотрудник";
	ПараметрыПостроения.ПараметрыРесурсов = ПараметрыРесурсов;
	
	Возврат ПараметрыПостроения;
	
КонецФункции

#КонецЕсли