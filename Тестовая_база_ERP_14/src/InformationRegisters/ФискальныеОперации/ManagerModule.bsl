//++ НЕ ГОСИС
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Обновление

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.ФискальныеОперации";
	//Сделать вычитку порциями
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналФискальныхОпераций.ДокументОснование КАК ДокументОснование,
	               |	ЖурналФискальныхОпераций.ИдентификаторЗаписи КАК ИдентификаторЗаписи
	               |ИЗ
	               |	РегистрСведений.ЖурналФискальныхОпераций КАК ЖурналФискальныхОпераций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	               |		ПО ЖурналФискальныхОпераций.ДокументОснование = ФискальныеОперации.ДокументОснование
	               |			И ЖурналФискальныхОпераций.ИдентификаторЗаписи = ФискальныеОперации.ИдентификаторЗаписи
	               |ГДЕ
	               |	ФискальныеОперации.ДокументОснование ЕСТЬ NULL";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить(), ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь,
		"РегистрСведений.ФискальныеОперации",
		МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	БлокировкиЖурналФискальныхОпераций = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"РегистрСведений.ЖурналФискальныхОпераций",
		МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналФискальныхОпераций.ДокументОснование КАК ДокументОснование,
	               |	ЖурналФискальныхОпераций.ИдентификаторЗаписи КАК ИдентификаторЗаписи,
	               |	ЖурналФискальныхОпераций.Дата КАК Дата,
	               |	ЖурналФискальныхОпераций.Организация КАК Организация,
	               |	ЖурналФискальныхОпераций.ТорговыйОбъект КАК ТорговыйОбъект,
	               |	ЕСТЬNULL(ПодключаемоеОборудование.СерийныйНомер, """") КАК ЗаводскойНомерФН,
	               |		ЕСТЬNULL(КассыККМ.РегистрационныйНомер, """") КАК РегистрационныйНомерККТ,
	               |	ВЫБОР ЖурналФискальныхОпераций.ТипОперации
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацииКассовогоУзла.ФискальнаяОперация)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыФискальныхДокументовККТ.КассовыйЧек)
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацииКассовогоУзла.ВнесениеДенежныхСредств)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыФискальныхДокументовККТ.Внесение)
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацииКассовогоУзла.ВыемкаДенежныхСредств)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыФискальныхДокументовККТ.Выемка)
	               |	КОНЕЦ КАК ТипДокумента,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияТипРасчета КАК ТипРасчета,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияНомерЧекаККМ КАК НомерЧекаККМ,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияНомерСменыККМ КАК НомерСменыККМ,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСумма КАК Сумма,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСуммаОплатыНаличные КАК ОплатаНаличные,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСуммаОплатыПлатежнаяКарта КАК ОплатаЭлектронно,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСуммаПредоплаты КАК ОплатаПредоплата,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСуммаКредит КАК ОплатаПостоплата,
	               |	ЖурналФискальныхОпераций.Данные КАК ДанныеXML
	               |ИЗ
	               |	&ВТДляОбработкиСсылка КАК СсылкиДляОбработки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналФискальныхОпераций КАК ЖурналФискальныхОпераций
	               |		ПО (ЖурналФискальныхОпераций.ДокументОснование = СсылкиДляОбработки.ДокументОснование)
	               |			И (ЖурналФискальныхОпераций.ИдентификаторЗаписи = СсылкиДляОбработки.ИдентификаторЗаписи)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК КассыККМ
	               |		ПО (ЖурналФискальныхОпераций.ТорговыйОбъект ССЫЛКА Справочник.КассыККМ)
	               |			И (КассыККМ.Ссылка = ЖурналФискальныхОпераций.ТорговыйОбъект)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	               |		ПО (ПодключаемоеОборудование.Ссылка = ЖурналФискальныхОпераций.Устройство)
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТБлокировки КАК ВТБлокировки
	               |		ПО (ВТБлокировки.ДокументОснование = СсылкиДляОбработки.ДокументОснование)
	               |			И (ВТБлокировки.ИдентификаторЗаписи = СсылкиДляОбработки.ИдентификаторЗаписи)
				   |ГДЕ 
				   |	ВТБлокировки.ДокументОснование ЕСТЬ NULL";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБлокировки", БлокировкиЖурналФискальныхОпераций.ИмяВременнойТаблицы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ФискальныеОперации");
 			ЭлементБлокировки.УстановитьЗначение("ДокументОснование", Выборка.ДокументОснование);
 			ЭлементБлокировки.УстановитьЗначение("ИдентификаторЗаписи", Выборка.ИдентификаторЗаписи);
 			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.ФискальныеОперации.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументОснование.Установить(Выборка.ДокументОснование);
			НаборЗаписей.Отбор.ИдентификаторЗаписи.Установить(Выборка.ИдентификаторЗаписи);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось сделать запись в журнал фискальных операций по причине: %Причина%';
									|en = 'Cannot make an entry to the fiscal operation journal due to: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,,,
				ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь,
		"РегистрСведений.ФискальныеОперации");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
//-- НЕ ГОСИС