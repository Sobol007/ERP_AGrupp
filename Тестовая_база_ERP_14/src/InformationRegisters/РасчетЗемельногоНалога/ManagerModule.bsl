#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Обновление информационной базы:
// перенос Периода строительства из ресурсов в измерения.
//
Процедура ПеренестиПериодСтроительстваИзРесурсовВИзмерения() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетЗемельногоНалога.Регистратор
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.УдалитьПериодСтроительства <> """"";
	
	ВыборкаЗаписи = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаЗаписи.Следующий() Цикл
	
		НаборЗаписей = РегистрыСведений.РасчетЗемельногоНалога.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаЗаписи.Регистратор);
		НаборЗаписей.Прочитать();
		
		Для каждого СтрокаНабора Из НаборЗаписей Цикл
			Если ЗначениеЗаполнено(СтрокаНабора.УдалитьПериодСтроительства) Тогда
				Если НЕ ЗначениеЗаполнено(СтрокаНабора.ПериодСтроительства) Тогда
					СтрокаНабора.ПериодСтроительства = СтрокаНабора.УдалитьПериодСтроительства;
				КонецЕсли;
				СтрокаНабора.УдалитьПериодСтроительства = "";
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		Исключение
			ШаблонСообщения	= НСтр("ru = 'Не выполнено обновление записей регистра сведений ""Расчет земельного налога""
                                    |%1';
                                    |en = 'The ""Land value tax calculation"" information register records are not updated
                                    |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.РасчетЗемельногоНалога,, 
				ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

// Обновление информационной базы:
// перенос Категории земель и Кадастровой стоимости из ресурсов в измерения.
//
Процедура ПеренестиКадастровуюСтоимостьИзРесурсовВИзмерения(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	РасчетЗемельногоНалога.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.РасчетЗемельногоНалога КАК РасчетЗемельногоНалога
	|ГДЕ
	|	РасчетЗемельногоНалога.УдалитьКадастроваяСтоимость <> 0";

	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;

	Параметры.ОбработкаЗавершена = Ложь;

	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	ВыборкаЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаЗаписи.Следующий() Цикл
	
		НачатьТранзакцию();
		Попытка
	
			НаборЗаписей = РегистрыСведений.РасчетЗемельногоНалога.СоздатьНаборЗаписей();
			
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаЗаписи.Регистратор);
			НаборЗаписей.Прочитать();
			
			Для каждого СтрокаНабора Из НаборЗаписей Цикл
				Если ЗначениеЗаполнено(СтрокаНабора.УдалитьКадастроваяСтоимость) Тогда
					Если НЕ ЗначениеЗаполнено(СтрокаНабора.КадастроваяСтоимость) Тогда
						СтрокаНабора.КадастроваяСтоимость = СтрокаНабора.УдалитьКадастроваяСтоимость;
					КонецЕсли;
					СтрокаНабора.УдалитьКадастроваяСтоимость = 0;
				КонецЕсли;
			КонецЦикла;
		
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);

			ЗафиксироватьТранзакцию();
			
			ОбъектовОбработано = ОбъектовОбработано + 1;

		Исключение
			ОтменитьТранзакцию();
		
			ШаблонСообщения	= НСтр("ru = 'Не выполнено обновление записей регистра сведений ""Расчет земельного налога""
                                    |%1';
                                    |en = 'The ""Land value tax calculation"" information register records are not updated
                                    |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.РасчетЗемельногоНалога,, 
				ТекстСообщения);

			// Если не удалось обработать какой-либо документ, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
				
		КонецПопытки;
		
	КонецЦикла;

	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ПеренестиКадастровуюСтоимостьИзРесурсовВИзмерения
				|не удалось обработать некоторые записи регистра ""Расчет земельного налога"" (пропущены): %1';
				|en = 'The ПеренестиКадастровуюСтоимостьИзРесурсовВИзмерения procedure 
				|cannot process some records in the ""Land value tax calculation"" register (skipped): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			Метаданные.РегистрыСведений.ЖурналУчетаСчетовФактур,
			,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ПеренестиКадастровуюСтоимостьИзРесурсовВИзмерения
					|обработала очередную порцию записей регистра ""Расчет земельного налога"": %1 документов';
					|en = 'The ПеренестиКадастровуюСтоимостьИзРесурсовВИзмерения
					|procedure has processed records in the ""Land value tax calculation"" register: %1 documents'"),
				ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли