#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура - Заполнить время окончания для взаимодействий
//  Процедура заполняет время окончания взаимодействия.
//
// Параметры:
//  Параметры	 - Структура - Структура параметров 
//  	ОбработкаЗавершена - Признак завершения обработки 
//
Процедура ЗаполнитьВремяОкончанияДляВзаимодействий(Параметры) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1000
	                      |	CRM_СобытияКалендаря.ПериодНачало КАК ПериодНачало,
	                      |	CRM_СобытияКалендаря.ПериодОкончание,
	                      |	CRM_СобытияКалендаря.Пользователь,
	                      |	CRM_СобытияКалендаря.Объект,
	                      |	CRM_СобытияКалендаря.Партнер
	                      |ИЗ
	                      |	РегистрСведений.CRM_СобытияКалендаря КАК CRM_СобытияКалендаря
	                      |ГДЕ
	                      |	CRM_СобытияКалендаря.ПериодОкончание = ДАТАВРЕМЯ(1, 1, 1)
	                      |	И CRM_СобытияКалендаря.Объект ССЫЛКА Документ.CRM_Взаимодействие
	                      |	И CRM_СобытияКалендаря.ПериодНачало <> НАЧАЛОПЕРИОДА(CRM_СобытияКалендаря.ПериодНачало, ДЕНЬ)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПериодНачало УБЫВ");
						  
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		Параметры.ОбработкаЗавершена = Ложь;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.CRM_СобытияКалендаря.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
		НаборЗаписей.Прочитать();
		
		Для каждого Запись из НаборЗаписей Цикл
			Если Запись.ПериодНачало <> НачалоДня(Запись.ПериодНачало) И НЕ ЗначениеЗаполнено(Запись.ПериодОкончание) Тогда
				Запись.ПериодОкончание = Запись.ПериодНачало + 30*60;
			КонецЕсли;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей,, Ложь, Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

#Область Календари

// Функция - Событие календаря по идентификатору
//  Функция возвращает запись регистра сведений CRM_СобытияКалендаря.
//
// Параметры:
//  Идентификатор	 - Строка					 - Идентификатор события.
//  Пользователь	 - СправочникСсылка.Пользователи - Пользователь, для которого записано событие.
// 
// Возвращаемое значение:
//  ЗаписьРегистра - Запись регистра сведений CRM_СобытияКалендаря.
//
Функция СобытиеКалендаряПоИдентификатору(Идентификатор, Пользователь) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаписиКалендаря.Объект КАК Ссылка
	|ИЗ
	|	РегистрСведений.CRM_СобытияКалендаря КАК ЗаписиКалендаря
	|ГДЕ
	|	ЗаписиКалендаря.Ключ = &Ключ
	|	И ЗаписиКалендаря.Пользователь = &Пользователь
	|	И ЗаписиКалендаря.Объект ССЫЛКА Документ.CRM_Взаимодействие");
	
	Запрос.УстановитьПараметр("Ключ", CRM_СинхронизацияКалендарей.КлючИзИдентификатора(
		Идентификатор, "РегистрыСведений.CRM_СобытияКалендаря.ОбъектПоИдентификатору()"));
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Результат = Документы.CRM_Взаимодействие.СоздатьДокумент();
		Результат.Заполнить(Новый Структура);
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка.ПолучитьОбъект();
	
КонецФункции

// Функция - Идентификаторы по событию календаря
//
// Параметры:
//  Объект		 - Ссылка						 - Событие календаря.
//  Пользователь - СправочникСсылка.Пользователи - Пользователь, для которого записано событие.
// 
// Возвращаемое значение:
//  Результат - Структура - Структура идентификаторов события.
//
Функция ИдентификаторыПоСобытиюКалендаря(Объект, Пользователь) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор",				"");
	Результат.Вставить("ETag",						"");
	Результат.Вставить("ИндексЦвета",				"");
	Результат.Вставить("Гиперссылка",				"");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаписиКалендаря.Идентификатор КАК Идентификатор,
	|	ЗаписиКалендаря.ETag КАК ETag,
	|	ЗаписиКалендаря.ИндексЦвета КАК ИндексЦвета,
	|	ЗаписиКалендаря.Гиперссылка КАК Гиперссылка
	|ИЗ
	|	РегистрСведений.CRM_СобытияКалендаря КАК ЗаписиКалендаря
	|ГДЕ
	|	ЗаписиКалендаря.Пользователь = &Пользователь
	|	И ЗаписиКалендаря.Объект = &Объект");
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("Объект", Объект);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли