#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытийФормы

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ВидыСчетовЗаписываемыеВРегистрТребующихсяНастроек = РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.НастраиваемыеВидыСчетов();
	МассивЗаписейДляУдаления = Новый Массив;
	КодОсновногоЯзыка = ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка();
	ШаблонСообщения = НСтр("ru = 'При записи счетов требующих настроек, ошибка: для вида счета ""%1""';
							|en = 'An error occurred when writing the accounts requiring settings: for the ""%1"" account kind'", КодОсновногоЯзыка);
	ОбъектМетаданных = Метаданные.РегистрыСведений.СчетаРеглУчетаТребующиеНастройки;
	ОтражаемыйДокумент = Неопределено;
	ДополнительныеСвойства.Свойство("Документ", ОтражаемыйДокумент);
	
	Для каждого СтрокаРегистра Из ЭтотОбъект Цикл
		
		Если ВидыСчетовЗаписываемыеВРегистрТребующихсяНастроек.Найти(СтрокаРегистра.ВидСчета) = Неопределено Тогда
			// Данный вид счета не настраивается в рабочем месте, поэтому его запись в данный регистр не имеет смысла.
			МассивЗаписейДляУдаления.Добавить(СтрокаРегистра);
			Продолжить;
		КонецЕсли;
		
		ОбязательныеИзмеренияРегистра = РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.СписокИзмеренийРегистраПоВидуСчета(СтрокаРегистра.ВидСчета, Истина);
		ОбязательныеИзмеренияРегистра.Добавить("ВидСчета");
		
		Для каждого ИзмерениеРегистра Из ОбязательныеИзмеренияРегистра Цикл
			Если Не ЗначениеЗаполнено(СтрокаРегистра[ИзмерениеРегистра]) Тогда
				ТекстСообщения = ШаблонСообщения + " " + НСтр("ru = 'не заполнено измерение регистра ""%2"".';
																|en = 'the ""%2"" register dimension is not filled in.'", КодОсновногоЯзыка);
				ТекстСообщения = СтрШаблон(ТекстСообщения, СтрокаРегистра.ВидСчета, ИзмерениеРегистра);
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Отражение в регламентированном учете';
												|en = 'Record in compliance accounting'", КодОсновногоЯзыка), 
					УровеньЖурналаРегистрации.Ошибка, ОбъектМетаданных, ОтражаемыйДокумент, ТекстСообщения);
				МассивЗаписейДляУдаления.Добавить(СтрокаРегистра);
			КонецЕсли;
		КонецЦикла;
		
		ОграничениеТипаМестоУчета = РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.ОграничениеТипаМестаУчетаПоВидуСчета(СтрокаРегистра.ВидСчета);
		Если ОграничениеТипаМестоУчета <> Неопределено И Не ОграничениеТипаМестоУчета.СодержитТип(ТипЗнч(СтрокаРегистра.МестоУчета)) Тогда
			ТекстСообщения = ШаблонСообщения + " " + НСтр("ru = 'тип значения измерения ""Место учета"" (%2) не соответствует требуемому.';
															|en = 'value type of the ""Registration place""  dimension (%2) does not conform to the required one.'", КодОсновногоЯзыка);
			ТекстСообщения = СтрШаблон(ТекстСообщения, СтрокаРегистра.ВидСчета, ТипЗнч(СтрокаРегистра.МестоУчета));
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Отражение в регламентированном учете';
											|en = 'Record in compliance accounting'", КодОсновногоЯзыка), 
				УровеньЖурналаРегистрации.Ошибка, ОбъектМетаданных, ОтражаемыйДокумент, ТекстСообщения);
			МассивЗаписейДляУдаления.Добавить(СтрокаРегистра);
		КонецЕсли;
		
		ОграничениеТипаАналитикаУчета = РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.ОграничениеТипаАналитикаУчетаПоВидуСчета(СтрокаРегистра.ВидСчета);
		Если ОграничениеТипаАналитикаУчета <> Неопределено И Не ОграничениеТипаАналитикаУчета.СодержитТип(ТипЗнч(СтрокаРегистра.АналитикаУчета)) Тогда
			ТекстСообщения = ШаблонСообщения + " " + НСтр("ru = 'тип значения измерения ""Аналитика учета"" (%2) не соответствует требуемому.';
															|en = 'value type of the ""Accounting dimension"" dimension (%2) does not conform to the required one.'", КодОсновногоЯзыка);
			ТекстСообщения = СтрШаблон(ТекстСообщения, СтрокаРегистра.ВидСчета, ТипЗнч(СтрокаРегистра.АналитикаУчета));
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Отражение в регламентированном учете';
											|en = 'Record in compliance accounting'", КодОсновногоЯзыка), 
				УровеньЖурналаРегистрации.Ошибка, ОбъектМетаданных, ОтражаемыйДокумент, ТекстСообщения);
			МассивЗаписейДляУдаления.Добавить(СтрокаРегистра);
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивЗаписейДляУдаления.Количество() Тогда
		Для каждого ЗаписьДляУдаления Из МассивЗаписейДляУдаления Цикл
			ЭтотОбъект.Удалить(ЗаписьДляУдаления);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли