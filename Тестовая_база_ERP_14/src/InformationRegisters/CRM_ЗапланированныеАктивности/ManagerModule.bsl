#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Процедура - Заполнение данных при обновлении
//  Процедура заполняет регистр CRM_ЗапланированныеАктивности при обновлении информационной базы.
//
Процедура ЗаполнениеДанныхПриОбновлении() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_Взаимодействие.Ссылка КАК ПланируемаяАктивность,
	                      |	CRM_Взаимодействие.ПлановаяДата КАК ПланируемаяДата,
	                      |	CRM_Взаимодействие.ДокументОснование КАК Объект,
	                      |	ЗНАЧЕНИЕ(Перечисление.CRM_ТипыАктивности.Взаимодействие) КАК ТипАктивности,
	                      |	CRM_Взаимодействие.Ответственный КАК Ответственный,
	                      |	CRM_Взаимодействие.Тема КАК Тема
	                      |ИЗ
	                      |	Документ.CRM_Взаимодействие КАК CRM_Взаимодействие
	                      |ГДЕ
	                      |	CRM_Взаимодействие.ДокументОснование ССЫЛКА Документ.CRM_Интерес
	                      |	И CRM_Взаимодействие.ДатаЗавершенияВзаимодействия = ДАТАВРЕМЯ(1, 1, 1)
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ЗадачаИсполнителя.Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА ЗадачаИсполнителя.СрокИсполнения <> ДАТАВРЕМЯ(1, 1, 1)
	                      |			ТОГДА ЗадачаИсполнителя.СрокИсполнения
	                      |		ИНАЧЕ ЗадачаИсполнителя.ДатаНачала
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА ЗадачаИсполнителя.CRM_Личная
	                      |			ТОГДА ЗадачаИсполнителя.Предмет
	                      |		ИНАЧЕ ЗадачаИсполнителя.БизнесПроцесс.Предмет
	                      |	КОНЕЦ,
	                      |	ЗНАЧЕНИЕ(Перечисление.CRM_ТипыАктивности.Задача),
	                      |	ВЫБОР
	                      |		КОГДА ЗадачаИсполнителя.Исполнитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	                      |			ТОГДА ЗадачаИсполнителя.РольИсполнителя
	                      |		ИНАЧЕ ЗадачаИсполнителя.Исполнитель
	                      |	КОНЕЦ,
	                      |	ЗадачаИсполнителя.Наименование
	                      |ИЗ
	                      |	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	                      |ГДЕ
	                      |	НЕ ЗадачаИсполнителя.Выполнена
	                      |	И (ЗадачаИсполнителя.CRM_Личная
	                      |				И ЗадачаИсполнителя.Предмет ССЫЛКА Документ.CRM_Интерес
	                      |			ИЛИ ЗадачаИсполнителя.БизнесПроцесс.Предмет ССЫЛКА Документ.CRM_Интерес
	                      |				И НЕ ЗадачаИсполнителя.БизнесПроцесс.Интерес ССЫЛКА Документ.CRM_Интерес)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.CRM_ЗапланированныеАктивности.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Записать();
	КонецЦикла;
	
КонецПроцедуры

// Функция - Следующая запланированная активность
//  Функция возвращает информацию о следующем взаимодействии или задаче выбранного интереса.
//
// Параметры:
//  Объект			- Ссылка, ДокументСсылка.CRM_Интерес			- Ссылка на интерес, 
//					по которому проверяются следующие запланированные активности.
//  ТипАктивности	- Ссылка, ПеречислениеСсылка.CRM_ТипыАктивности - Ссылка на тип активности, 
//					задача или взаимодействие.
// 
// Возвращаемое значение:
//  Результат		- Структура значений реквизитов записи регистра.
//  	ПланируемаяАктивность	- Ссылка,ДокументСсылка.CRM_Взаимодействие, ЗадачаСсылка.ЗадачаИсполнителя
//  	Ответственный	- Ссылка,СправочникСсылка.РолиИсполнителей, СправочникСсылка.Пользователи
//  	Тема			- Строка
//  	ПланируемаяДата	- Дата
//  	ТипАктивности	- ПеречислениеСсылка.CRM_ТипыАктивности
//
Функция СледующаяЗапланированнаяАктивность(Объект, ТипАктивности = Неопределено) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_ЗапланированныеАктивности.ПланируемаяАктивность КАК ПланируемаяАктивность,
	                      |	CRM_ЗапланированныеАктивности.Ответственный КАК Ответственный,
	                      |	CRM_ЗапланированныеАктивности.Тема КАК Тема,
	                      |	CRM_ЗапланированныеАктивности.ТипАктивности КАК ТипАктивности,
	                      |	CRM_ЗапланированныеАктивности.ПланируемаяДата КАК ПланируемаяДата
	                      |ИЗ
	                      |	РегистрСведений.CRM_ЗапланированныеАктивности КАК CRM_ЗапланированныеАктивности
	                      |ГДЕ
	                      |	CRM_ЗапланированныеАктивности.Объект = &Объект
	                      |	И CRM_ЗапланированныеАктивности.ТипАктивности = &ТипАктивности
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПланируемаяДата");
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Если ЗначениеЗаполнено(ТипАктивности) Тогда
		Запрос.УстановитьПараметр("ТипАктивности", ТипАктивности);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И CRM_ЗапланированныеАктивности.ТипАктивности = &ТипАктивности", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Новый Структура("ПланируемаяАктивность, Ответственный, Тема, ПланируемаяДата, ТипАктивности");
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		Возврат Результат;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаЗаписи" Тогда
		СтандартнаяОбработка = Ложь;
		Параметры.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Если ТипЗнч(Параметры.Ключ) = Тип("ДокументСсылка.CRM_Взаимодействие") Тогда
			Параметры.Вставить("ТолькоПросмотр", Ложь);
			ВыбраннаяФорма = "Документ.CRM_Взаимодействие.Форма.ФормаДокументаКраткая";
		ИначеЕсли ТипЗнч(Параметры.Ключ) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			Параметры.Вставить("ТолькоПросмотр", Ложь);
			Параметры.Вставить("ИзСпискаАктивностей", Истина);
			CRM_МетодыМодулейМенеджеровЗадач.ОбработкаПолученияФормОбъектовCRM(Задачи.ЗадачаИсполнителя, "ФормаОбъекта", Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Функция - Есть активности к завершению
//
// Параметры:
//  Объект			 - Ссылка, ДокументСсылка.CRM_Интерес							 - Ссылка на интерес,
//  							по которому проверяются наличие активности к завершению.
//  ТипАктивности	 - Ссылка, ПеречислениеСсылка.CRM_ТипыАктивности				 - Ссылка на тип активности,
//  				задача или взаимодействие.
//  ОтборЗавершаемых - Ссылка, ПеречислениеСсылка.CRM_ОтборыЗавершаемыхАктивностей	 - Ссылка на тип отбора по регистру.
// 
// Возвращаемое значение:
//  Булево - Признак наличия задач или взаимодействия готовых к завершению.
//
Функция ЕстьАктивностиКЗавершению(Объект, ТипАктивности = Неопределено, ОтборЗавершаемых) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_ЗапланированныеАктивности.ПланируемаяАктивность КАК ПланируемаяАктивность
	                      |ИЗ
	                      |	РегистрСведений.CRM_ЗапланированныеАктивности КАК CRM_ЗапланированныеАктивности
	                      |ГДЕ
	                      |	CRM_ЗапланированныеАктивности.Объект = &Объект
	                      |	И CRM_ЗапланированныеАктивности.ТипАктивности = &ТипАктивности
	                      |	И CRM_ЗапланированныеАктивности.ПланируемаяДата <= &ЗавершатьПоДату
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	CRM_ЗапланированныеАктивности.ПланируемаяДата");
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Если ЗначениеЗаполнено(ТипАктивности) Тогда
		Запрос.УстановитьПараметр("ТипАктивности", ТипАктивности);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И CRM_ЗапланированныеАктивности.ТипАктивности = &ТипАктивности", "");
	КонецЕсли;
	Если ОтборЗавершаемых = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ПросроченныеИНаСегодня Тогда
		ЗавершатьПоДату = КонецДня(ТекущаяДатаСеанса());
		Запрос.УстановитьПараметр("ЗавершатьПоДату", ЗавершатьПоДату);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И CRM_ЗапланированныеАктивности.ПланируемаяДата <= &ЗавершатьПоДату", "");
	КонецЕсли;
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Процедура - Завершить активности
//  Процедура переводит задачу или взаимодействие в статус "Завершено".
//
// Параметры:
//  Объект			 - Ссылка, ДокументСсылка.CRM_Интерес							 - Ссылка на интерес, который необходимо завершить.
//  Результат		 - Строка														 - Описание результата выполнения процедуры.
//  ТипАктивности	 - Ссылка, ПеречислениеСсылка.CRM_ТипыАктивности				 - Ссылка на тип активности, задача или взаимодействие.
//  ОтборЗавершаемых - Ссылка, ПеречислениеСсылка.CRM_ОтборыЗавершаемыхАктивностей	 - Ссылка на тип отбора по регистру.
//
Процедура ЗавершитьАктивности(Объект, Результат = "", ТипАктивности = Неопределено, ОтборЗавершаемых) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_ЗапланированныеАктивности.ПланируемаяАктивность КАК ПланируемаяАктивность
	                      |ИЗ
	                      |	РегистрСведений.CRM_ЗапланированныеАктивности КАК CRM_ЗапланированныеАктивности
	                      |ГДЕ
	                      |	CRM_ЗапланированныеАктивности.Объект = &Объект
	                      |	И CRM_ЗапланированныеАктивности.ТипАктивности = &ТипАктивности
	                      |	И CRM_ЗапланированныеАктивности.ПланируемаяДата <= &ЗавершатьПоДату
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	CRM_ЗапланированныеАктивности.ПланируемаяДата");
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Если ЗначениеЗаполнено(ТипАктивности) Тогда
		Запрос.УстановитьПараметр("ТипАктивности", ТипАктивности);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И CRM_ЗапланированныеАктивности.ТипАктивности = &ТипАктивности", "");
	КонецЕсли;
	Если ОтборЗавершаемых = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ПросроченныеИНаСегодня Тогда
		ЗавершатьПоДату = КонецДня(ТекущаяДатаСеанса());
		Запрос.УстановитьПараметр("ЗавершатьПоДату", ЗавершатьПоДату);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И CRM_ЗапланированныеАктивности.ПланируемаяДата <= &ЗавершатьПоДату", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.ПланируемаяАктивность) = Тип("ДокументСсылка.CRM_Взаимодействие") Тогда
			ПланируемаяАктивность = Выборка.ПланируемаяАктивность.ПолучитьОбъект();
			ПланируемаяАктивность.СтатусВзаимодействия = Справочники.CRM_СостоянияСобытий.Завершено;
			ПланируемаяАктивность.Результат = ?(ЗначениеЗаполнено(Результат), Результат, НСтр("ru='Завершено автоматически';en='Completed Automatically'"));
			ПланируемаяАктивность.ДатаЗавершенияВзаимодействия = ТекущаяДатаСеанса();
			ПланируемаяАктивность.Записать();
		ИначеЕсли ТипЗнч(Выборка.ПланируемаяАктивность) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") И Выборка.ПланируемаяАктивность.CRM_Личная Тогда
			ПланируемаяАктивность = Выборка.ПланируемаяАктивность.ПолучитьОбъект();
			ПланируемаяАктивность.Выполнена = Истина;
			ПланируемаяАктивность.РезультатВыполнения = ?(ЗначениеЗаполнено(Результат), Результат, НСтр("ru='Завершена автоматически';en='Finished automatically'"));
			ПланируемаяАктивность.Записать();
		КонецЕсли;
		Если ОтборЗавершаемых = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ПерваяЗапланированная Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Процедура - Отменить активности
//
// Параметры:
//  Объект			 - Ссылка, ДокументСсылка.CRM_Интерес							 - Ссылка на интерес,
//  																				   по которому отменяются активности.
//  Результат		 - Строка														 - Результат выполнения процедуры
//  ТипАктивности	 - Ссылка, ПеречислениеСсылка.CRM_ТипыАктивности				 - Ссылка на тип активности,
//  																				   задача или взаимодействие.
//  ОтборЗавершаемых - Ссылка, ПеречислениеСсылка.CRM_ОтборыЗавершаемыхАктивностей	 - Ссылка на тип отбора по регистру.
//
Процедура ОтменитьАктивности(Объект, Результат, ТипАктивности = Неопределено, ОтборЗавершаемых = Неопределено) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_ЗапланированныеАктивности.ПланируемаяАктивность КАК ПланируемаяАктивность
	                      |ИЗ
	                      |	РегистрСведений.CRM_ЗапланированныеАктивности КАК CRM_ЗапланированныеАктивности
	                      |ГДЕ
	                      |	CRM_ЗапланированныеАктивности.Объект = &Объект
	                      |	И CRM_ЗапланированныеАктивности.ТипАктивности = &ТипАктивности
	                      |	И CRM_ЗапланированныеАктивности.ПланируемаяДата <= &ЗавершатьПоДату");
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Если ЗначениеЗаполнено(ТипАктивности) Тогда
		Запрос.УстановитьПараметр("ТипАктивности", ТипАктивности);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И CRM_ЗапланированныеАктивности.ТипАктивности = &ТипАктивности", "");
	КонецЕсли;
	Если ОтборЗавершаемых = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ПросроченныеИНаСегодня Тогда
		ЗавершатьПоДату = КонецДня(ТекущаяДатаСеанса());
		Запрос.УстановитьПараметр("ЗавершатьПоДату", ЗавершатьПоДату);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И CRM_ЗапланированныеАктивности.ПланируемаяДата <= &ЗавершатьПоДату", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.ПланируемаяАктивность) = Тип("ДокументСсылка.CRM_Взаимодействие") Тогда
			ПланируемаяАктивность = Выборка.ПланируемаяАктивность.ПолучитьОбъект();
			ПланируемаяАктивность.СтатусВзаимодействия = Справочники.CRM_СостоянияСобытий.Отменено;
			ПланируемаяАктивность.Результат = Результат;
			ПланируемаяАктивность.Записать();
		ИначеЕсли ТипЗнч(Выборка.ПланируемаяАктивность) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") И Выборка.ПланируемаяАктивность.CRM_Личная Тогда
			ПланируемаяАктивность = Выборка.ПланируемаяАктивность.ПолучитьОбъект();
			ПланируемаяАктивность.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
		Если ОтборЗавершаемых = Перечисления.CRM_ОтборыЗавершаемыхАктивностей.ПерваяЗапланированная Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
