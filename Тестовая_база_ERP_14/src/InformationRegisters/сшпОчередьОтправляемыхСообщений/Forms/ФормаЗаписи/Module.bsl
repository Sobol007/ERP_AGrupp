
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Запись.ИдентификаторСообщения) тогда
		текЗапрос = Новый Запрос("ВЫБРАТЬ
		                         |	тбСостояние.СтатусСообщения,
		                         |	тбСостояние.ДатаИзменения,
		                         |	тбОчередь.Хранилище
		                         |ИЗ
		                         |	РегистрСведений.сшпОчередьОтправляемыхСообщений КАК тбОчередь
		                         |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.сшпСостояниеСообщений КАК тбСостояние
		                         |		ПО тбОчередь.ИдентификаторСообщения = тбСостояние.ИдентификаторСообщения
		                         |ГДЕ
		                         |	тбОчередь.ИдентификаторСообщения = &ИдентификаторСообщения");
								 текЗапрос.УстановитьПараметр("ИдентификаторСообщения", Запись.ИдентификаторСообщения);
								 текВыборка = текЗапрос.Выполнить().Выбрать();
								 текВыборка.Следующий();
		сткСообщение = текВыборка.Хранилище.Получить();						 
		Сообщение = сшпОбщегоНазначения.СформироватьСообщениеESB_HTTP(ФабрикаXDTO, сткСообщение);
		Статус = текВыборка.СтатусСообщения;
		ДатаИзменения = текВыборка.ДатаИзменения;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	ДатаИзменения = ПолучитьДатуСеанса();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	сшпРаботаСДанными.УстановитьСостояниеСообщения(Запись.ИдентификаторСообщения, Статус);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуСеанса()
	Возврат  ТекущаяДатаСеанса();
КонецФункции	

#КонецОбласти