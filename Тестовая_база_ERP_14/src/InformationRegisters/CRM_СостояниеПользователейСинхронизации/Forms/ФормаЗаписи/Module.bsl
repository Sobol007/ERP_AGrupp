
&НаКлиенте
Процедура ЭлектроннаяПочтаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СвоиЛицаАдресЗавершениеВыбора", ЭтотОбъект, Запись.Пользователь);
	СписокАдресов = СформироватьСписокАдресов(Запись.Пользователь);
	СписокАдресов.ПоказатьВыборЭлемента(ОписаниеОповещения, НСтр("ru='Выберите адрес';en='Choose an address'"));
КонецПроцедуры

&НаКлиенте
Процедура СвоиЛицаАдресЗавершениеВыбора(ЭлементСписка, ТекДанные) Экспорт
	Если ЭлементСписка = Неопределено Тогда Возврат; КонецЕсли;
	
	Адрес = ЭлементСписка.Значение;
	Если Не Адрес.Количество() = 0 Тогда
		Запись.ЭлектроннаяПочта = Адрес.Представление;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Запись.Пользователь) Тогда
		
		СписокАдресов = СформироватьСписокАдресов(Запись.Пользователь);
		Если СписокАдресов.Количество() > 0 Тогда
			Адрес = СписокАдресов[0].Значение;
			Если НЕ Адрес.Количество() = 0 Тогда
				Запись.ЭлектроннаяПочта = Адрес.Представление;
			Иначе
				Запись.ЭлектроннаяПочта					= "";
			КонецЕсли;
		Иначе
			Запись.ЭлектроннаяПочта					= "";
		КонецЕсли;
	Иначе
		Запись.ЭлектроннаяПочта					= "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьСписокАдресов(ТекущиеДанные, ВидКИ = Неопределено, ИспользоватьКИДляОповещений = Ложь)
	
	Если ТипЗнч(ТекущиеДанные) = Тип("Структура") Тогда
		Если ТипЗнч(ТекущиеДанные.Партнер) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
			Таб = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюПоТипуКИ(ТекущиеДанные.Партнер, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		Иначе
			Таб = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(?(ЗначениеЗаполнено(ТекущиеДанные.Партнер) И НЕ ТекущиеДанные.Партнер.ЭтоГруппа И НЕ ТекущиеДанные.Партнер.CRM_ОтписалсяОтEmailРассылок, ТекущиеДанные.Партнер, Неопределено),
											?(ЗначениеЗаполнено(ТекущиеДанные.КонтактноеЛицо),ТекущиеДанные.КонтактноеЛицо,Неопределено),
											Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, ВидКИ);
		КонецЕсли;
	Иначе
		Таб = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюПоТипуКИ(ТекущиеДанные, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	КонецЕсли;
	
	СписокАдресов = Новый СписокЗначений;	
	
	Если НЕ Таб = Неопределено Тогда
		
		Если ТипЗнч(ТекущиеДанные) = Тип("Структура") И ТипЗнч(ТекущиеДанные.Партнер) <> Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
			Таб.Сортировать("ПорядокВремТаб Возр, Порядок Возр, CRM_ОсновнойДляСвязи Убыв");
			МассивСтрок = Таб.НайтиСтроки(Новый Структура("ИспользоватьДляОповещений", Истина));
			
			НайтиВидКИ	= Таб.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.CRM_EmailРассылкиКонтактногоЛица));
			Если НайтиВидКИ.Количество() > 0 Тогда
				ПерваяСтрока = НайтиВидКИ[0];
			Иначе
				НайтиВидКИ	= Таб.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.CRM_EmailРассылкиЧастногоЛица));
				Если НайтиВидКИ.Количество() > 0 Тогда
					ПерваяСтрока = НайтиВидКИ[0];
				Иначе
					ПерваяСтрока = Неопределено;
				КонецЕсли;				
			КонецЕсли;	
		Иначе
			МассивСтрок = Таб.НайтиСтроки(Новый Структура("ИспользоватьДляОповещений", Истина));			
			ПерваяСтрока = Неопределено;
		КонецЕсли;
		
		СписокЗнач = Новый СписокЗначений;
		ТекСсылка = "";
		ПерваяСтрокаБыла = Ложь;
		
		Для Каждого СтрокаТаб Из МассивСтрок Цикл
			
			СтруктураАдреса = Новый Структура;
			
			Если НЕ ТекСсылка = СтрокаТаб.Ссылка Тогда
				
				Если ПерваяСтрока = Неопределено Тогда						
					СтруктураАдреса.Вставить("Адрес"		,СокрЛП(СтрокаТаб.АдресЭП));
					СтруктураАдреса.Вставить("Представление",СокрЛП(СтрокаТаб.Представление));
					СтруктураАдреса.Вставить("Объект"		,СтрокаТаб.Ссылка);
					СписокАдресов.Добавить(СтруктураАдреса, Строка(СтрокаТаб.Ссылка));
					ТекСсылка = СтрокаТаб.Ссылка;						
				Иначе						
					СтруктураАдреса.Вставить("Адрес"		,СокрЛП(ПерваяСтрока.АдресЭП));
					СтруктураАдреса.Вставить("Представление",СокрЛП(ПерваяСтрока.Представление));
					СтруктураАдреса.Вставить("Объект"		,ПерваяСтрока.Ссылка);
					СписокАдресов.Добавить(СтруктураАдреса, Строка(ПерваяСтрока.Ссылка));
					ТекСсылка = ПерваяСтрока.Ссылка;
					ПерваяСтрока = Неопределено;
				КонецЕсли;
				
			КонецЕсли;
			
			СтруктураАдреса = Новый Структура;
			СтруктураАдреса.Вставить("Адрес"		,СокрЛП(СтрокаТаб.АдресЭП));
			СтруктураАдреса.Вставить("Представление",СокрЛП(СтрокаТаб.Представление));
			СтруктураАдреса.Вставить("Объект"		,СтрокаТаб.Ссылка);
			СписокАдресов.Добавить(СтруктураАдреса, "   "+СокрЛП(СтрокаТаб.Вид) + ": " + СтрокаТаб.Представление);
		КонецЦикла;	
		Если СписокАдресов.Количество() > 0 Тогда
			Возврат СписокАдресов;
		КонецЕсли;				
	КонецЕсли;	
	
	Возврат СписокАдресов;
	
КонецФункции


&НаКлиенте
Процедура ЭлектроннаяПочтаПриИзменении(Элемент)
	РезультатПроверки = CRM_ОбщегоНазначенияКлиентСервер.АнализАдресаЭП(СокрЛП(Элемент.ТекстРедактирования));
	Если РезультатПроверки.КодОшибки<>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, , Элемент.Имя);
		Запись.ЭлектроннаяПочта					= "";
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекСтатус = Запись.Состояние;
КонецПроцедуры


&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменениесостоянияЗавершение", ЭтотОбъект);
	Если Запись.Состояние = ПредопределенноеЗначение("Перечисление.CRM_СостоянияСинхронизацииПользователя.Блокирован") Тогда
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Внимание! Пользователю будет временно запрещено работать в приложении. Продолжить ?';en='Attention! The user will be temporarily prohibited from working in the application. Continue ?'"), РежимДиалогаВопрос.ДаНет);
	ИначеЕсли Запись.Состояние = ПредопределенноеЗначение("Перечисление.CRM_СостоянияСинхронизацииПользователя.Отключен") Тогда
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Внимание! При отключении пользователя ВСЕ ДАННЫЕ будут удалены из приложения при первом же запуске. Продолжить ?';en='Attention! If you disconnect the user, ALL DATA will be removed from the application at the first start. Continue ?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениесостоянияЗавершение(Ответ, ТекДанные) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ТекСтатус = Запись.Состояние;
	Иначе
		 Запись.Состояние = ТекСтатус;	
	КонецЕсли;	
КонецПроцедуры

